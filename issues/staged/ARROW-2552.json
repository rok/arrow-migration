{
    "issue": {
        "title": "[Plasma] Unit tests are flaky",
        "body": "***Note**: This issue was originally created as [ARROW-2552](https://issues.apache.org/jira/browse/ARROW-2552). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently Python unittests fail randomly in Plasma:\r\n```java\n\r\n--------------------------- Captured stderr teardown ---------------------------\r\n==20552== Invalid free() / delete / delete[] / realloc()\r\n==20552==    at 0x4C2C83C: operator delete[](void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==20552==    by 0x498EE6: std::default_delete<unsigned char []>::operator()(unsigned char*) const (unique_ptr.h:99)\r\n==20552==    by 0x4955C0: std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >::~unique_ptr() (unique_ptr.h:377)\r\n==20552==    by 0x4A66F1: void std::_Destroy<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> > >(std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*) (stl_construct.h:93)\r\n==20552==    by 0x4A5E3F: void std::_Destroy_aux<false>::__destroy<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*>(std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*) (stl_construct.h:103)\r\n==20552==    by 0x4A4FE8: void std::_Destroy<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*>(std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*) (stl_construct.h:126)\r\n==20552==    by 0x4A3A05: void std::_Destroy<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> > >(std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*, std::allocator<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> > >&) (stl_construct.h:151)\r\n==20552==    by 0x4A0ACC: std::deque<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >, std::allocator<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> > > >::_M_destroy_data_aux(std::_Deque_iterator<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >&, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*>, std::_Deque_iterator<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >&, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*>) (deque.tcc:806)\r\n==20552==    by 0x49CE36: std::deque<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >, std::allocator<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> > > >::_M_destroy_data(std::_Deque_iterator<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >&, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*>, std::_Deque_iterator<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >&, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*>, std::allocator<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> > > const&) (stl_deque.h:1853)\r\n==20552==    by 0x4A45CC: std::deque<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >, std::allocator<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> > > >::~deque() (stl_deque.h:918)\r\n==20552==    by 0x4A1CAF: plasma::NotificationQueue::~NotificationQueue() (store.h:37)\r\n==20552==    by 0x4A1CCD: std::pair<int const, plasma::NotificationQueue>::~pair() (stl_pair.h:96)\r\n==20552==  Address 0x63136e0 is 0 bytes inside a block of size 112 free'd\r\n==20552==    at 0x4C2C83C: operator delete[](void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==20552==    by 0x498EE6: std::default_delete<unsigned char []>::operator()(unsigned char*) const (unique_ptr.h:99)\r\n==20552==    by 0x4955C0: std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >::~unique_ptr() (unique_ptr.h:377)\r\n==20552==    by 0x4A66F1: void std::_Destroy<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> > >(std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*) (stl_construct.h:93)\r\n==20552==    by 0x4A5E3F: void std::_Destroy_aux<false>::__destroy<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*>(std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*) (stl_construct.h:103)\r\n==20552==    by 0x4A4FE8: void std::_Destroy<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*>(std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*) (stl_construct.h:126)\r\n==20552==    by 0x4A3A05: void std::_Destroy<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> > >(std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*, std::allocator<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> > >&) (stl_construct.h:151)\r\n==20552==    by 0x4A0ACC: std::deque<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >, std::allocator<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> > > >::_M_destroy_data_aux(std::_Deque_iterator<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >&, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*>, std::_Deque_iterator<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >&, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*>) (deque.tcc:806)\r\n==20552==    by 0x49CE36: std::deque<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >, std::allocator<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> > > >::_M_destroy_data(std::_Deque_iterator<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >&, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*>, std::_Deque_iterator<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >&, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*>, std::allocator<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> > > const&) (stl_deque.h:1853)\r\n==20552==    by 0x498D06: std::deque<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >, std::allocator<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> > > >::_M_erase_at_end(std::_Deque_iterator<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >&, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*>) (stl_deque.h:1870)\r\n==20552==    by 0x498A6D: std::deque<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >, std::allocator<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> > > >::clear() (stl_deque.h:1617)\r\n==20552==    by 0x4951A0: std::deque<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >, std::allocator<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> > > >::erase(std::_Deque_iterator<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >&, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*>, std::_Deque_iterator<std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >&, std::unique_ptr<unsigned char [], std::default_delete<unsigned char []> >*>) (deque.tcc:223)\r\n==20552== \r\n==20552== \r\n==20552== HEAP SUMMARY:\r\n==20552==     in use at exit: 75,009 bytes in 6 blocks\r\n==20552==   total heap usage: 40,745 allocs, 40,740 frees, 4,634,131 bytes allocated\r\n==20552== \r\n==20552== 33 bytes in 1 blocks are still reachable in loss record 1 of 3\r\n==20552==    at 0x4C2B0E0: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==20552==    by 0x511A618: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)\r\n==20552==    by 0x511A991: std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)\r\n==20552==    by 0x511AFED: std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)\r\n==20552==    by 0x4913BB: main (store.cc:869)\r\n==20552== \r\n==20552== 2,272 bytes in 4 blocks are still reachable in loss record 2 of 3\r\n==20552==    at 0x4C2AB80: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==20552==    by 0x58F0C81: fdopen@@GLIBC_2.2.5 (iofdopen.c:138)\r\n==20552==    by 0x4B069D: create_buffer(long) (malloc.cc:105)\r\n==20552==    by 0x4B3A05: fake_mmap (malloc.cc:135)\r\n==20552==    by 0x4B427C: sys_alloc (dlmalloc.c:4155)\r\n==20552==    by 0x4B427C: dlmalloc (dlmalloc.c:4680)\r\n==20552==    by 0x4B6844: internal_memalign (dlmalloc.c:4917)\r\n==20552==    by 0x4B6844: dlmemalign (dlmalloc.c:5275)\r\n==20552==    by 0x48C909: plasma::PlasmaStore::create_object(plasma::UniqueID const&, long, long, int, plasma::Client*, plasma::PlasmaObject*) (store.cc:173)\r\n==20552==    by 0x48FD1F: plasma::PlasmaStore::process_message(plasma::Client*) (store.cc:677)\r\n==20552==    by 0x48EC23: plasma::PlasmaStore::connect_client(int)::{lambda(int)#1}::operator()(int) const (store.cc:516)\r\n==20552==    by 0x491ADC: std::_Function_handler<void (int), plasma::PlasmaStore::connect_client(int)::{lambda(int)#1}>::_M_invoke(std::_Any_data const&, int) (functional:2071)\r\n==20552==    by 0x4AA8B9: std::function<void (int)>::operator()(int) const (functional:2471)\r\n==20552==    by 0x4AA370: plasma::EventLoop::FileEventCallback(aeEventLoop*, int, void*, int) (events.cc:28)\r\n==20552== \r\n==20552== 72,704 bytes in 1 blocks are still reachable in loss record 3 of 3\r\n==20552==    at 0x4C2AB80: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==20552==    by 0x50BDC25: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)\r\n==20552==    by 0x40101D9: call_init.part.0 (dl-init.c:78)\r\n==20552==    by 0x40102C2: call_init (dl-init.c:36)\r\n==20552==    by 0x40102C2: _dl_init (dl-init.c:126)\r\n==20552==    by 0x4001299: ??? (in /lib/x86_64-linux-gnu/ld-2.19.so)\r\n==20552==    by 0x4: ???\r\n==20552==    by 0xFFEFFEFD6: ???\r\n==20552==    by 0xFFEFFF038: ???\r\n==20552==    by 0xFFEFFF03B: ???\r\n==20552==    by 0xFFEFFF061: ???\r\n==20552==    by 0xFFEFFF064: ???\r\n==20552== \r\n==20552== LEAK SUMMARY:\r\n==20552==    definitely lost: 0 bytes in 0 blocks\r\n==20552==    indirectly lost: 0 bytes in 0 blocks\r\n==20552==      possibly lost: 0 bytes in 0 blocks\r\n==20552==    still reachable: 75,009 bytes in 6 blocks\r\n==20552==                       of which reachable via heuristic:\r\n==20552==                         stdstring          : 33 bytes in 1 blocks\r\n==20552==         suppressed: 0 bytes in 0 blocks\r\n==20552== \r\n==20552== For counts of detected and suppressed errors, rerun with: -v\r\n==20552== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)\n```",
        "created_at": "2018-05-08T14:52:24.000Z",
        "updated_at": "2018-05-17T04:00:45.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++ - Plasma",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2018-05-17T04:00:45.000Z"
    },
    "comments": [
        {
            "created_at": "2018-05-08T14:52:57.694Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2552?focusedCommentId=16467510) by Uwe Korn (uwe):*\nPossibly introduced by\u00a0https://github.com/apache/arrow/commit/0f0717148ec2a216b88f667f68d936d7f0810df8"
        },
        {
            "created_at": "2018-05-08T20:04:39.905Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2552?focusedCommentId=16467907) by Philipp Moritz (pcmoritz):*\nJudging from the backtrace, it\u00a0could also have been introduced in <https://github.com/apache/arrow/commit/b916c797833541299f9c3adc6e24d109359b7a6c>"
        },
        {
            "created_at": "2018-05-10T04:03:57.043Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2552?focusedCommentId=16469886) by Philipp Moritz (pcmoritz):*\nIssue resolved by pull request 2019\n<https://github.com/apache/arrow/pull/2019>"
        },
        {
            "created_at": "2018-05-10T19:22:07.943Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2552?focusedCommentId=16470985) by Philipp Moritz (pcmoritz):*\nThis still happens unfortunately:\u00a0https://travis-ci.org/apache/arrow/jobs/377328969"
        },
        {
            "created_at": "2018-05-17T04:00:45.393Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2552?focusedCommentId=16478479) by Philipp Moritz (pcmoritz):*\nThis might have been a caching glitch, I think it is fixed now. If anybody sees this error please re-open this issue."
        }
    ]
}