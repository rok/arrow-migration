{
    "issue": {
        "title": "[C++] Nested chunked array support",
        "body": "***Note**: This issue was originally created as [ARROW-4757](https://issues.apache.org/jira/browse/ARROW-4757). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nDear all,\r\n\r\nI'm currently trying to lift the 2GB limit on the python serialization. For this, I implemented a chunked union builder to split the array into smaller arrays.\r\n\r\nHowever, some of the children of the union array can be ListArrays, which can themselves contain UnionArrays which can contain ListArrays etc. I'm at a bit of a loss how to handle this. In principle I'd like to chunk the children too. However, currently UnionArrays can only have children of type Array, and there is no way to treat a chunked array (which is a vector of Arrays) as an Array to store it as a child of a UnionArray. Any ideas how to best support this use case?\r\n\r\n\u2013 Philipp.",
        "created_at": "2019-03-04T08:19:01.000Z",
        "updated_at": "2019-08-21T23:31:38.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-08-21T23:31:38.000Z"
    },
    "comments": [
        {
            "created_at": "2019-03-04T09:09:50.661Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4757?focusedCommentId=16783141) by Philipp Moritz (pcmoritz):*\nOne possible way to solve this is to make ChunkedArray a first class citizen, i.e. make it a subclass of Array and allow it to\u00a0participate in IPC. Then the UnionArray could just have a ChunkedArray as a child to solve the above issue."
        },
        {
            "created_at": "2019-03-08T00:23:04.061Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4757?focusedCommentId=16787352) by Wes McKinney (wesm):*\nCan you write a stream (multiple IPC messages) rather than a single one? I won't be able to look at this for 0.13"
        },
        {
            "created_at": "2019-03-08T00:24:18.359Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4757?focusedCommentId=16787355) by Wes McKinney (wesm):*\nAnother option is to add LargeBinary and LargeList data types (64-bit offsets). That might be the cleanest way if you really have to put all the data in one giant array"
        },
        {
            "created_at": "2019-03-08T02:48:11.074Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4757?focusedCommentId=16787476) by Philipp Moritz (pcmoritz):*\nYeah, that's a good idea, I'll give that a shot. I started\u00a0making\u00a0ChunkedArray a subclass of Array and introduce a type so it can be serialized via the IPC mechanism, but it\u00a0is a little clumsy."
        },
        {
            "created_at": "2019-03-08T15:08:33.232Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4757?focusedCommentId=16787955) by Wes McKinney (wesm):*\nYeah, that seems a bit kludgy"
        },
        {
            "created_at": "2019-08-21T23:31:38.263Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4757?focusedCommentId=16912786) by Wes McKinney (wesm):*\nNow that we have the Large\\* types this seems less needed. "
        }
    ]
}