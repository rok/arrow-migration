{
    "issue": {
        "title": "[Java] improve Flight DoPut busy wait",
        "body": "***Note**: This issue was originally created as [ARROW-4484](https://issues.apache.org/jira/browse/ARROW-4484). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently the implementation of putNext in FlightClient.java busy-waits until gRPC indicates that the server can receive a message. We should either improve the busy-wait (e.g. add sleep times), or rethink the API and make it non-blocking.",
        "created_at": "2019-02-05T16:55:13.000Z",
        "updated_at": "2020-03-18T16:21:53.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: FlightRPC",
            "Component: Java",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2019-03-26T16:33:54.172Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4484?focusedCommentId=16801912) by David Li (lidavidm):*\nThis also applies to DoGet. Additionally, busy-waiting is a poor solution: it wastes CPU and reduces performance (especially if you try to reduce CPU usage by sleeping). We should instead make the API async, or handle the async stuff under the hood. gRPC itself offers a callback for when backpressure lets up.\r\n\r\nAdditionally <https://github.com/grpc/proposal/pull/135> will help."
        },
        {
            "created_at": "2019-06-17T13:24:29.182Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4484?focusedCommentId=16865591) by David Li (lidavidm):*\nBumped this to next version, the better way to fix this is to fix upstream + provide a fully async API."
        },
        {
            "created_at": "2020-03-18T16:21:53.361Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4484?focusedCommentId=17061873) by David Li (lidavidm):*\nNot a blocker for any version."
        }
    ]
}