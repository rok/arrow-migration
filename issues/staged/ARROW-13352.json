{
    "issue": {
        "title": "[C++] Valgrind failure in case_when kernel",
        "body": "***Note**: This issue was originally created as [ARROW-13352](https://issues.apache.org/jira/browse/ARROW-13352). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nhttps://github.com/ursacomputing/crossbow/runs/3083584283\r\n\r\n```\n\r\n[ RUN      ] TestCaseWhen.FixedSizeBinary\r\n==11732== Conditional jump or move depends on uninitialised value(s)\r\n==11732==    at 0x41153FD: arrow::TestInitialized(arrow::ArrayData const&) (gtest_util.cc:665)\r\n==11732==    by 0x75BE16: arrow::compute::(anonymous namespace)::ValidateOutput(arrow::ArrayData const&) (test_util.cc:231)\r\n==11732==    by 0x75C3F6: arrow::compute::ValidateOutput(arrow::Datum const&) (test_util.cc:262)\r\n==11732==    by 0x7609EA: arrow::compute::(anonymous namespace)::CheckScalarNonRecursive(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<arrow::Datum, std::allocator<arrow::Datum> > const&, arrow::Datum const&, arrow::compute::FunctionOptions const*) (test_util.cc:52)\r\n==11732==    by 0x764317: arrow::compute::CheckScalar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<arrow::Datum, std::allocator<arrow::Datum> > const&, arrow::Datum, arrow::compute::FunctionOptions const*) (test_util.cc:106)\r\n==11732==    by 0x675AA7: arrow::compute::TestCaseWhen_FixedSizeBinary_Test::TestBody() (scalar_if_else_test.cc:798)\r\n==11732==    by 0x5BBB98D: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /opt/conda/envs/arrow/lib/libgtest.so)\r\n==11732==    by 0x5BBBBE0: testing::Test::Run() (in /opt/conda/envs/arrow/lib/libgtest.so)\r\n==11732==    by 0x5BBBF0E: testing::TestInfo::Run() (in /opt/conda/envs/arrow/lib/libgtest.so)\r\n==11732==    by 0x5BBC035: testing::TestSuite::Run() (in /opt/conda/envs/arrow/lib/libgtest.so)\r\n==11732==    by 0x5BBC5EB: testing::internal::UnitTestImpl::RunAllTests() (in /opt/conda/envs/arrow/lib/libgtest.so)\r\n==11732==    by 0x5BBC858: testing::UnitTest::Run() (in /opt/conda/envs/arrow/lib/libgtest.so)\r\n==11732==    by 0x41FB07E: main (in /opt/conda/envs/arrow/lib/libgtest_main.so)\r\n==11732== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:_ZN5arrow15TestInitializedERKNS_9ArrayDataE\r\n   fun:_ZN5arrow7compute12_GLOBAL__N_114ValidateOutputERKNS_9ArrayDataE\r\n   fun:_ZN5arrow7compute14ValidateOutputERKNS_5DatumE\r\n   fun:_ZN5arrow7compute12_GLOBAL__N_123CheckScalarNonRecursiveERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorINS_5DatumESaISB_EERKSB_PKNS0_15FunctionOptionsE\r\n   fun:_ZN5arrow7compute11CheckScalarENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorINS_5DatumESaIS8_EES8_PKNS0_15FunctionOptionsE\r\n   fun:_ZN5arrow7compute33TestCaseWhen_FixedSizeBinary_Test8TestBodyEv\r\n   fun:_ZN7testing8internal35HandleExceptionsInMethodIfSupportedINS_4TestEvEET0_PT_MS4_FS3_vEPKc\r\n   fun:_ZN7testing4Test3RunEv\r\n   fun:_ZN7testing8TestInfo3RunEv\r\n   fun:_ZN7testing9TestSuite3RunEv\r\n   fun:_ZN7testing8internal12UnitTestImpl11RunAllTestsEv\r\n   fun:_ZN7testing8UnitTest3RunEv\r\n   fun:main\r\n}\r\n==11732== Conditional jump or move depends on uninitialised value(s)\r\n==11732==    at 0x41153FD: arrow::TestInitialized(arrow::ArrayData const&) (gtest_util.cc:665)\r\n==11732==    by 0x411544E: arrow::TestInitialized(arrow::Array const&) (gtest_util.cc:646)\r\n==11732==    by 0x75BFAF: arrow::compute::(anonymous namespace)::ValidateOutput(arrow::ChunkedArray const&) (test_util.cc:237)\r\n==11732==    by 0x75C3C0: arrow::compute::ValidateOutput(arrow::Datum const&) (test_util.cc:265)\r\n==11732==    by 0x765301: arrow::compute::CheckScalar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<arrow::Datum, std::allocator<arrow::Datum> > const&, arrow::Datum, arrow::compute::FunctionOptions const*) (test_util.cc:170)\r\n==11732==    by 0x675AA7: arrow::compute::TestCaseWhen_FixedSizeBinary_Test::TestBody() (scalar_if_else_test.cc:798)\r\n==11732==    by 0x5BBB98D: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /opt/conda/envs/arrow/lib/libgtest.so)\r\n==11732==    by 0x5BBBBE0: testing::Test::Run() (in /opt/conda/envs/arrow/lib/libgtest.so)\r\n==11732==    by 0x5BBBF0E: testing::TestInfo::Run() (in /opt/conda/envs/arrow/lib/libgtest.so)\r\n==11732==    by 0x5BBC035: testing::TestSuite::Run() (in /opt/conda/envs/arrow/lib/libgtest.so)\r\n==11732==    by 0x5BBC5EB: testing::internal::UnitTestImpl::RunAllTests() (in /opt/conda/envs/arrow/lib/libgtest.so)\r\n==11732==    by 0x5BBC858: testing::UnitTest::Run() (in /opt/conda/envs/arrow/lib/libgtest.so)\r\n==11732==    by 0x41FB07E: main (in /opt/conda/envs/arrow/lib/libgtest_main.so)\r\n==11732== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:_ZN5arrow15TestInitializedERKNS_9ArrayDataE\r\n   fun:_ZN5arrow15TestInitializedERKNS_5ArrayE\r\n   fun:_ZN5arrow7compute12_GLOBAL__N_114ValidateOutputERKNS_12ChunkedArrayE\r\n   fun:_ZN5arrow7compute14ValidateOutputERKNS_5DatumE\r\n   fun:_ZN5arrow7compute11CheckScalarENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKSt6vectorINS_5DatumESaIS8_EES8_PKNS0_15FunctionOptionsE\r\n   fun:_ZN5arrow7compute33TestCaseWhen_FixedSizeBinary_Test8TestBodyEv\r\n   fun:_ZN7testing8internal35HandleExceptionsInMethodIfSupportedINS_4TestEvEET0_PT_MS4_FS3_vEPKc\r\n   fun:_ZN7testing4Test3RunEv\r\n   fun:_ZN7testing8TestInfo3RunEv\r\n   fun:_ZN7testing9TestSuite3RunEv\r\n   fun:_ZN7testing8internal12UnitTestImpl11RunAllTestsEv\r\n   fun:_ZN7testing8UnitTest3RunEv\r\n   fun:main\r\n}\r\n[       OK ] TestCaseWhen.FixedSizeBinary (171 ms)\r\n[ RUN      ] TestCaseWhen.DispatchBest\r\n[       OK ] TestCaseWhen.DispatchBest (36 ms)\r\n[----------] 6 tests from TestCaseWhen (889 ms total)\r\n\r\n[----------] Global test environment tear-down\r\n[==========] 771 tests from 180 test suites ran. (50602 ms total)\r\n[  PASSED  ] 771 tests.\r\n\r\n  YOU HAVE 1 DISABLED TEST\r\n\r\n==11732== \r\n==11732== HEAP SUMMARY:\r\n==11732==     in use at exit: 10,082 bytes in 160 blocks\r\n==11732==   total heap usage: 3,142,063 allocs, 3,141,903 frees, 1,148,265,868 bytes allocated\r\n==11732== \r\n==11732== LEAK SUMMARY:\r\n==11732==    definitely lost: 0 bytes in 0 blocks\r\n==11732==    indirectly lost: 0 bytes in 0 blocks\r\n==11732==      possibly lost: 0 bytes in 0 blocks\r\n==11732==    still reachable: 10,082 bytes in 160 blocks\r\n==11732==         suppressed: 0 bytes in 0 blocks\r\n==11732== Reachable blocks (those to which a pointer was found) are not shown.\r\n==11732== To see them, rerun with: --leak-check=full --show-leak-kinds=all\r\n==11732== \r\n==11732== Use --track-origins=yes to see where uninitialised values come from\r\n==11732== For lists of detected and suppressed errors, rerun with: -s\r\n==11732== ERROR SUMMARY: 18 errors from 2 contexts (suppressed: 401021 from 59)\r\n\r\n      Start 32: arrow-compute-expression-test\r\n```",
        "created_at": "2021-07-16T12:38:53.000Z",
        "updated_at": "2021-07-16T17:52:30.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-07-16T17:52:19.000Z"
    },
    "comments": [
        {
            "created_at": "2021-07-16T17:52:19.453Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13352?focusedCommentId=17382245) by David Li (lidavidm):*\nIssue resolved by pull request 10732\n<https://github.com/apache/arrow/pull/10732>"
        }
    ]
}