{
    "issue": {
        "title": "[C++] ChunkedArray should validate the types of the arrays",
        "body": "***Note**: This issue was originally created as [ARROW-5654](https://issues.apache.org/jira/browse/ARROW-5654). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nExample from Python, showing that you can currently create a ChunkedArray with incompatible types:\r\n\r\n```python\n\r\nIn [8]: a1 = pa.array([1, 2])\r\n\r\nIn [9]: a2 = pa.array(['a', 'b'])\r\n\r\nIn [10]: pa.chunked_array([a1, a2])\r\nOut[10]:\r\n<pyarrow.lib.ChunkedArray object at 0x7fca50704d20>\r\n[\r\n  [\r\n    1,\r\n    2\r\n  ],\r\n  [\r\n    \"a\",\r\n    \"b\"\r\n  ]\r\n]\r\n```\r\n\r\nSo a `ChunkedArray::Validate` can be implemented (and which should probably be called by default upon creation?)",
        "created_at": "2019-06-19T18:09:00.000Z",
        "updated_at": "2019-06-21T14:01:41.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-06-21T14:01:24.000Z"
    },
    "comments": [
        {
            "created_at": "2019-06-19T20:34:27.067Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5654?focusedCommentId=16867985) by Wes McKinney (wesm):*\nOur policy has been that it's up to the developer-user to call `Validate` functions when they are concerned about sanitizing user input. That way applications that have other checks in place aren't paying the cost twice. So Validate() should be invoked at the Cython level"
        },
        {
            "created_at": "2019-06-21T14:01:24.377Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5654?focusedCommentId=16869504) by Wes McKinney (wesm):*\nIssue resolved by pull request 4636\n<https://github.com/apache/arrow/pull/4636>"
        }
    ]
}