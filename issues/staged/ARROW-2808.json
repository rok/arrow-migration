{
    "issue": {
        "title": "[Python] Add unit tests for ProxyMemoryPool, enable new default MemoryPool to be constructed",
        "body": "***Note**: This issue was originally created as [ARROW-2808](https://issues.apache.org/jira/browse/ARROW-2808). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI could not find unit tests for ProxyMemoryPool",
        "created_at": "2018-07-07T22:09:45.000Z",
        "updated_at": "2018-10-10T11:27:16.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2018-10-10T11:27:04.000Z"
    },
    "comments": [
        {
            "created_at": "2018-09-26T12:26:11.365Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2808?focusedCommentId=16628676) by Antoine Pitrou (apitrou):*\nThere is a single test (`ProxyMemoryPool::Logging`) in `memory_pool-test.cc`."
        },
        {
            "created_at": "2018-09-26T12:33:05.576Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2808?focusedCommentId=16628683) by Antoine Pitrou (apitrou):*\nAs for changing the default MemoryPool, unfortunately this may be dangerous. Objects may hold a non-owned pointer to the old default MemoryPool (a `MemoryPool*`). Imagine the following sequence:\r\n\r\n- default MemoryPool is changed once\n- an object A is created which holds a pointer to the default MemoryPool\n- default MemoryPool is changed a second time\n  \n  What has the MemoryPool pointer held by A become? Presumably the underlying object is destroyed.\n"
        },
        {
            "created_at": "2018-09-26T12:41:09.442Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2808?focusedCommentId=16628691) by Wes McKinney (wesm):*\nThere are Python bindings for the proxy pool but no tests to check whether they work. There are no APIs to construct a new MemoryPool in Python AFAICT"
        },
        {
            "created_at": "2018-10-10T11:27:04.869Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2808?focusedCommentId=16644846) by Uwe Korn (uwe):*\nIssue resolved by pull request 2725\n<https://github.com/apache/arrow/pull/2725>"
        }
    ]
}