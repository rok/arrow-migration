{
    "issue": {
        "title": "[C++/Python] Kernel for SetItem(BooleanArray, values)",
        "body": "***Note**: This issue was originally created as [ARROW-9430](https://issues.apache.org/jira/browse/ARROW-9430). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWe should have a kernel that allows overriding the values of an array by supplying a boolean mask and a scalar or an array of equal length.",
        "created_at": "2020-07-13T12:07:32.000Z",
        "updated_at": "2021-11-22T19:48:17.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-07-14T15:42:12.000Z"
    },
    "comments": [
        {
            "created_at": "2020-07-31T21:40:57.576Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9430?focusedCommentId=17169178) by Wes McKinney (wesm):*\nThis would produce a new array, if that aligns with your expectations?"
        },
        {
            "created_at": "2020-08-03T05:19:53.476Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9430?focusedCommentId=17169731) by Uwe Korn (uwe):*\nYes, I'm aware of Arrow's immutable nature ;)"
        },
        {
            "created_at": "2021-02-17T17:03:28.191Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9430?focusedCommentId=17285979) by Joris Van den Bossche (jorisvandenbossche):*\nI am not sure this is actually a duplicate of ARROW-11044. At least my intent of a \"replace\" kernel was something else (provide a mapping with the replacement values), and ARROW-11044. turned into an \"ifelse\" kernel based on the PR discussion."
        },
        {
            "created_at": "2021-05-17T21:00:40.494Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9430?focusedCommentId=17346436) by Niranda Perera (niranda):*\n`[~jorisvandenbossche]` I agree. I think ARROW-11044 only resolves the 'scalar replacement'."
        },
        {
            "created_at": "2021-05-18T14:06:08.673Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9430?focusedCommentId=17346924) by David Li (lidavidm):*\nIs the intended result here something like\r\n```\n\r\nSetitem(array, mask, values) -> new_array\r\n\r\nSetItem([1, 2, 3, 4], [true, false, true, null], [4, 5]) -> [4, 2, 5, null]\r\n```\r\n?"
        },
        {
            "created_at": "2021-05-18T14:12:22.433Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9430?focusedCommentId=17346930) by Joris Van den Bossche (jorisvandenbossche):*\nAnd to summarize the behaviour of the last example of `[~lidavidm]`:\r\n\r\n- This kernel sets values with a _boolean_ mask\n- Nulls in the mask propagate as nulls in the result \n- The length of the replacement values equals the number of `true` values in the mask (the case where those replacement values are of equal length as the input array / the mask is covered by \"if_else\" kernel)\n  \n  This provides the equivalent behaviour of numpy's `array[mask] = values` (except not modifying `array` in place, but returning a new array)"
        },
        {
            "created_at": "2021-06-01T19:21:42.869Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9430?focusedCommentId=17355307) by Niranda Perera (niranda):*\nI think this can be done using ARROW-10640 (if_else function), by calling\r\n```python\n\r\nif_else(mask, values, array)\r\n```\r\nIsn't it?"
        },
        {
            "created_at": "2021-06-01T19:31:06.337Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9430?focusedCommentId=17355310) by Joris Van den Bossche (jorisvandenbossche):*\nI am not sure that's the best way to implement it. \"if_else\" is a scalar kernel that works element-wise, where mask/values/array need to have the same length (or is a scalar that is broadcasted). While for the setitem operation here, the \"values\" to set (or replace) based on the mask have a different length (matching the number of `true` values in the mask). In principle we could first convert that array to an array of the correctly length, and then use \"if_else\", but not sure how efficient that would be compared to a custom implementation.  "
        },
        {
            "created_at": "2021-06-01T19:32:34.235Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9430?focusedCommentId=17355311) by Joris Van den Bossche (jorisvandenbossche):*\nNote that `[~lidavidm]` alraedy has an open pull request: https://github.com/apache/arrow/pull/10412. So maybe we can further discuss implementation details there."
        },
        {
            "created_at": "2021-06-01T19:38:09.185Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9430?focusedCommentId=17355314) by Niranda Perera (niranda):*\n`[~jorisvandenbossche]` Fair point! Thanks"
        },
        {
            "created_at": "2021-07-14T15:42:12.365Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9430?focusedCommentId=17380694) by David Li (lidavidm):*\nIssue resolved by pull request 10412\n<https://github.com/apache/arrow/pull/10412>"
        },
        {
            "created_at": "2021-11-22T19:41:01.695Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9430?focusedCommentId=17447588) by Alvin Chunga Mamani (alvinj15):*\nHi `[~lidavidm]`,\u00a0 I'm working in ARROW-1699\u00a0and using the method\u00a0**`ReplaceWithArrayMask`**\u00a0for replace the nulls using a generated mask, but the method gave me unexpected results when the input Array contains nulls and this nulls are replaced with values.\r\nWhen testing this special Test on **vector_test_replace_test.cc**\r\n```java\n\r\nthis->Assert(ReplaceWithMask, this->array(\"[1, null, 1]\"),\r\n   this->mask(\"[false, true, false]\"),\r\n   this->array(\"[7]\"),\r\n   this->array(\"[1, 7, 1]\"));\n```\r\nThe result is:\r\n```java\n\r\nActual:\r\n[\r\n1,\r\nnull,\r\n1\r\n]\n```\r\nAnd\u00a0 debugging the code, the output values is correct, but the null_bitmap isn't updated and keep the original null_bitmap\r\nIn the file\u00a0**`vector_replace.cc`**\u00a0 on line 202, the bitmap is updated only for turnoff the null replacement values\r\n![image-2021-11-22-14-40-02-692.png](https://issues.apache.org/jira/secure/attachment/13036460/image-2021-11-22-14-40-02-692.png)\r\nThis is and expected behavior or an issue on\u00a0**`ReplaceWithArrayMask`**\u00a0?\u00a0"
        },
        {
            "created_at": "2021-11-22T19:48:17.428Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9430?focusedCommentId=17447591) by David Li (lidavidm):*\nNo, can you file a new JIRA? Probably the output bitmap needs to be a combination of the original array's bitmap, the mask, and the replacement array's bitmap."
        }
    ]
}