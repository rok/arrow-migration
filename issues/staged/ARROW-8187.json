{
    "issue": {
        "title": "[R] Make test assertions robust to i18n",
        "body": "***Note**: This issue was originally created as [ARROW-8187](https://issues.apache.org/jira/browse/ARROW-8187). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n```Java\n\r\n\u2500\u2500 1. Failure: codec_is_available (@test-compressed.R#22)  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\r\n`codec_is_available(\"sdfasdf\")` threw an error with unexpected message.\r\nExpected match: \"'arg' should be one of\"\r\nActual message: \"'arg' doit \u00eatre un de \u201cUNCOMPRESSED\u201d, \u201cSNAPPY\u201d, \u201cGZIP\u201d, \u201cBROTLI\u201d, \u201cZSTD\u201d, \u201cLZ4\u201d, \u201cLZO\u201d, \u201cBZ2\u201d\"\r\nBacktrace:\r\n  1. testthat::expect_error(codec_is_available(\"sdfasdf\"), \"'arg' should be one of\") testthat/test-compressed.R:22:2\r\n  6. arrow::codec_is_available(\"sdfasdf\")\r\n  8. arrow:::compression_from_name(type)\r\n  9. purrr::map_int(...)\r\n 10. arrow:::.f(.x[[i]], ...)\r\n 11. base::match.arg(toupper(.x), names(CompressionType))\r\n\r\n\u2500\u2500 2. Failure: time type unit validation (@test-data-type.R#298)  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\r\n`time32(\"years\")` threw an error with unexpected message.\r\nExpected match: \"'arg' should be one of\"\r\nActual message: \"'arg' doit \u00eatre un de \u201cms\u201d, \u201cs\u201d\"\r\nBacktrace:\r\n 1. testthat::expect_error(time32(\"years\"), \"'arg' should be one of\") testthat/test-data-type.R:298:2\r\n 6. arrow::time32(\"years\")\r\n 7. base::match.arg(unit)\r\n\r\n\u2500\u2500 3. Failure: time type unit validation (@test-data-type.R#305)  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\r\n`time64(\"years\")` threw an error with unexpected message.\r\nExpected match: \"'arg' should be one of\"\r\nActual message: \"'arg' doit \u00eatre un de \u201cns\u201d, \u201cus\u201d\"\r\nBacktrace:\r\n 1. testthat::expect_error(time64(\"years\"), \"'arg' should be one of\") testthat/test-data-type.R:305:2\r\n 6. arrow::time64(\"years\")\r\n 7. base::match.arg(unit)\r\n\r\n\u2500\u2500 4. Failure: decimal type and validation (@test-data-type.R#387)  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\r\n`decimal()` threw an error with unexpected message.\r\nExpected match: \"argument \\\"precision\\\" is missing, with no default\"\r\nActual message: \"l'argument \\\"precision\\\" est manquant, avec aucune valeur par d\u00e9faut\"\r\nBacktrace:\r\n 1. testthat::expect_error(decimal(), \"argument \\\"precision\\\" is missing, with no default\") testthat/test-data-type.R:387:2\r\n 6. arrow::decimal()\r\n\r\n\u2500\u2500 5. Failure: decimal type and validation (@test-data-type.R#389)  \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\r\n`decimal(4)` threw an error with unexpected message.\r\nExpected match: \"argument \\\"scale\\\" is missing, with no default\"\r\nActual message: \"l'argument \\\"scale\\\" est manquant, avec aucune valeur par d\u00e9faut\"\r\nBacktrace:\r\n 1. testthat::expect_error(decimal(4), \"argument \\\"scale\\\" is missing, with no default\") testthat/test-data-type.R:389:2\r\n 6. arrow::decimal(4)\r\n```",
        "created_at": "2020-03-23T15:47:28.000Z",
        "updated_at": "2020-03-25T00:49:48.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-03-25T00:49:48.000Z"
    },
    "comments": [
        {
            "created_at": "2020-03-25T00:49:48.091Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8187?focusedCommentId=17066294) by Neal Richardson (npr):*\nIssue resolved by pull request 6695\n<https://github.com/apache/arrow/pull/6695>"
        }
    ]
}