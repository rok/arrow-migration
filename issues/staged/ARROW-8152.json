{
    "issue": {
        "title": "[C++] IO: split large coalesced reads into smaller ones",
        "body": "***Note**: This issue was originally created as [ARROW-8152](https://issues.apache.org/jira/browse/ARROW-8152). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWe have a facility to coalesce small reads, but remote filesystems may also benefit from splitting large reads to take advantage of concurrency.",
        "created_at": "2020-03-18T18:31:52.000Z",
        "updated_at": "2021-05-12T17:29:44.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-05-12T17:29:21.000Z"
    },
    "comments": [
        {
            "created_at": "2020-03-18T23:11:35.362Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8152?focusedCommentId=17062119) by Wes McKinney (wesm):*\nWhat do you think about introducing the read parallelism as an option in \r\n\r\nhttps://github.com/apache/arrow/blob/master/cpp/src/arrow/io/caching.h\r\n\r\n? It might make sense to introduce an options struct so we can't cramming a bunch of parameters into the `Cache` method here"
        },
        {
            "created_at": "2020-03-19T21:16:58.556Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8152?focusedCommentId=17062941) by David Li (lidavidm):*\nYes, having an options struct for those parameters (and potentially others, e.g. if we want an AsyncContext) makes sense to me."
        },
        {
            "created_at": "2020-04-27T12:21:25.952Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8152?focusedCommentId=17093429) by David Li (lidavidm):*\nFWIW, I'm not sure this specific task is needed anymore - I originally didn't realize the Parquet reader issued individual reads for each column chunk. Splitting large reads hence isn't needed. It may help for people who have very large column chunks, but that can be pursued separately if it comes up."
        },
        {
            "created_at": "2020-06-15T16:44:37.227Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8152?focusedCommentId=17136009) by Wes McKinney (wesm):*\nI removed any milestone. This can be pursued at any time"
        },
        {
            "created_at": "2021-05-12T17:24:21.656Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8152?focusedCommentId=17343399) by Antoine Pitrou (apitrou):*\n`[~lidavidm]` Should we keep this open? In any case, it seems this might be better implemented at the filesystem level."
        },
        {
            "created_at": "2021-05-12T17:29:21.840Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8152?focusedCommentId=17343402) by David Li (lidavidm):*\nYeah, I think that makes more sense. Let's close the issue."
        },
        {
            "created_at": "2021-05-12T17:29:44.601Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8152?focusedCommentId=17343404) by David Li (lidavidm):*\nOr rather, we can open a more relevant issue/reopen if we decide to pursue something in that direction."
        }
    ]
}