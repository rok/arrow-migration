{
    "issue": {
        "title": "[C++] Proper BottomK support in SinkNode",
        "body": "***Note**: This issue was originally created as [ARROW-16630](https://issues.apache.org/jira/browse/ARROW-16630). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nBottomK is implemented as TopK on reverse-sorted data. You get the rows you wanted, but the problem is that they're in reversed order.\r\n\r\nOther consideration: we've been using TopK as a (theoretically) efficient way to do `arrange() %>% head()`, and so BottomK would do `arrange() %>% tail()`. But this intersects with differences in null-handling in sorting (ARROW-12063). \r\n\r\nExample in R:\r\n\r\n```Java\n\r\n> df <- data.frame(x = c(2, 4, 1, NA, 3))\r\n# as ian says on ARROW-14085, dplyr puts NAs last in sorting, always\r\n> df %>% arrange(x)\r\n   x\r\n1  1\r\n2  2\r\n3  3\r\n4  4\r\n5 NA\r\n> df %>% arrange(desc(x))\r\n   x\r\n1  4\r\n2  3\r\n3  2\r\n4  1\r\n5 NA\r\n\r\n# So when you arrange %>% head/tail, you get values based on that:\r\n> df %>% arrange(x) %>% head(1)\r\n  x\r\n1 1\r\n> df %>% arrange(x) %>% tail(1)\r\n   x\r\n5 NA\r\n\r\n# We sort like that in arrow too:\r\n> df %>% arrow_table() %>% arrange(x) %>% collect()\r\n   x\r\n1  1\r\n2  2\r\n3  3\r\n4  4\r\n5 NA\r\n> df %>% arrow_table() %>% arrange(desc(x)) %>% collect()\r\n   x\r\n1  4\r\n2  3\r\n3  2\r\n4  1\r\n5 NA\r\n\r\n# But since we implement arrange(x) %>% head as TopK(x) and arrange(x) %>% tail as TopK(desc(x)),\r\n# we don't get the same tail value:\r\n> df %>% arrow_table() %>% arrange(x) %>% head(1) %>% collect()\r\n  x\r\n1 1\r\n> df %>% arrow_table() %>% arrange(x) %>% tail(1) %>% collect()\r\n  x\r\n1 4\r\n```",
        "created_at": "2022-05-23T14:56:39.000Z",
        "updated_at": "2022-07-11T19:36:35.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": []
}