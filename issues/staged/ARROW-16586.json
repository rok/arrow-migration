{
    "issue": {
        "title": "[C++] CSV Reader Does not remove BOM",
        "body": "***Note**: This issue was originally created as [ARROW-16586](https://issues.apache.org/jira/browse/ARROW-16586). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n# C++ CSV Reader Does not remove BOM\r\n\r\nThis is a repeat! of issue ARROW-5413 which is marked as RESOLVED.\r\n\r\nWhen trying to read a csv file according to instruction given on <https://arrow.apache.org/docs/cpp/csv.html,> the library fails to read a CSV file containing utf8 strings starting with BOM. I attached the BAD file!.\u00a0\r\n\r\nthe Code I trying to use is:\r\n```java\n\r\nARROW_ASSIGN_OR_RAISE(auto input, arrow::io::ReadableFile::Open(csv_filespec.string()));\r\n\u00a0 \u00a0 auto io_context \u00a0 \u00a0 \u00a0= arrow::io::default_io_context();\r\n\u00a0 \u00a0 auto read_options \u00a0 \u00a0= arrow::csv::ReadOptions::Defaults();\r\n\u00a0 \u00a0 auto parse_options \u00a0 = arrow::csv::ParseOptions::Defaults();\r\n\u00a0 \u00a0 auto convert_options = arrow::csv::ConvertOptions::Defaults();\r\n\u00a0 \u00a0 \r\n// \u00a0Set column names & types\r\n\u00a0 \u00a0 read_options.column_names \u00a0 \u00a0= column_names;\r\n\u00a0 \u00a0 convert_options.column_types = column_types;\r\n\u00a0 \u00a0 // Instantiate TableReader from input stream and options\r\n  \u00a0 ARROW_ASSIGN_OR_RAISE(\r\n\u00a0 \u00a0 \u00a0 \u00a0 auto reader, arrow::csv::TableReader::Make(io_context, input, read_options, parse_options, convert_options));\r\n\u00a0 \u00a0ARROW_ASSIGN_OR_RAISE(auto table, reader->Read()); \n```\r\n\u00a0and get error:\r\n```java\n\r\narrow::Invalid: CSV parse error: Expected 15 columns, got 1\n```\r\nAm I missing something or the issue 5413 still exists?\r\n\r\nBTW I use arrow as STATIC library in windows.\r\n\r\n\u00a0",
        "created_at": "2022-05-16T12:25:24.000Z",
        "updated_at": "2022-05-16T16:09:16.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-05-16T12:38:24.000Z"
    },
    "comments": [
        {
            "created_at": "2022-05-16T12:29:53.012Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16586?focusedCommentId=17537514) by Antoine Pitrou (apitrou):*\nYour file is a UTF-16 file starting with a UTF-16 BOM. The Arrow CSV reader assumes a UTF-8 CSV file."
        },
        {
            "created_at": "2022-05-16T12:31:37.215Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16586?focusedCommentId=17537516) by Antoine Pitrou (apitrou):*\nArrow C++ does not provide any facilities to automatically convert the input character encoding, but you may build such a facility yourself using `TransformInputStream`: https://arrow.apache.org/docs/cpp/api/io.html#transforming-input-wrapper"
        },
        {
            "created_at": "2022-05-16T12:38:24.960Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16586?focusedCommentId=17537518) by Antoine Pitrou (apitrou):*\nI'm closing this as the CSV reader is working as advertised. Also, we cannot easily provide a transcoding API in Arrow C++ because there's no widely portable way of doing so (we do it in Python, however)."
        },
        {
            "created_at": "2022-05-16T12:41:49.725Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16586?focusedCommentId=17537521) by Dariush Eivazi (DariushEivazi):*\nThanks for your fast and exact response. I'm a newbie in using arrow and the API is not easy at all. May I ask you give show me an snippet doing that. Thanks.\r\n\r\n\u00a0"
        },
        {
            "created_at": "2022-05-16T12:57:38.870Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16586?focusedCommentId=17537526) by Antoine Pitrou (apitrou):*\nNot really, as I said this is not easily done in a portable way and I don't know of any nice-to-use C++ libraries to handle transcoding.\r\n\r\nGenerally speaking, if you are looking for easy to use APIs I would recommend using `PyArrow` (the Python bindings for Arrow) or the R Arrow library instead of Arrow C++.\r\n\r\nOtherwise, one thing you can do is pre-convert your CSV files to UTF8 using a third-party utility. For example https://stackoverflow.com/questions/2867123/convert-utf-16-to-utf-8-under-windows-and-linux-in-c\r\n"
        },
        {
            "created_at": "2022-05-16T16:09:16.952Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16586?focusedCommentId=17537626) by Dariush Eivazi (DariushEivazi):*\nThank for your help, I asked the files provider and they said can supply me the UTF8 version. Thanks for the UTF8 point.\u00a0"
        }
    ]
}