{
    "issue": {
        "title": "[Java] Vector reallocation does not properly clear reused buffers",
        "body": "***Note**: This issue was originally created as [ARROW-2594](https://issues.apache.org/jira/browse/ARROW-2594). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen reallocating a vector buffer, it assumes that the first half of the new buffer was clean or populated from the previous and only zeros out the second half.\u00a0 This is not the case if the vector has released the buffer and the current capacity is 0 (empty).\u00a0 If the new buffer has values set, then they will cause bogus values when used in the vector.\r\n\r\nI came across this when looking into SPARK-23030, due to the comment here https://github.com/apache/spark/pull/21312#issuecomment-389035697",
        "created_at": "2018-05-16T23:21:26.000Z",
        "updated_at": "2018-05-17T18:21:50.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2018-05-17T18:21:13.000Z"
    },
    "comments": [
        {
            "created_at": "2018-05-17T18:21:13.595Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2594?focusedCommentId=16479504) by Bryan Cutler (bryanc):*\nIssue resolved by pull request 2054\n<https://github.com/apache/arrow/pull/2054>"
        }
    ]
}