{
    "issue": {
        "title": "[R] Convert all inputs to Arrow objects in match_arrow and is_in",
        "body": "***Note**: This issue was originally created as [ARROW-12777](https://issues.apache.org/jira/browse/ARROW-12777). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIf I run:\r\n\r\n\u00a0\r\n```java\n\r\ntab <- Table$create(name = rownames(mtcars), mtcars)\r\nmatch_arrow(Array$create(\"Valiant\"), tab)\r\n```\r\n\u00a0\r\n\r\nI get `Error: Unrecognized vector instance for type ENVSXP`\r\n\r\nand if I run:\r\n```java\n\r\nmatch_arrow(c(\"Valiant\"), tab)\n```\r\nI get `Error in match(x, table, ...) : 'match' requires vector arguments ` \r\n\r\nAlso,\r\n```java\n\r\nmatch_arrow(Array$create(4), mtcars$cyl)\n```\r\nreturns `2` as the second argument has been converted to an Arrow object, but yet if I was to run\r\n```java\n\r\nmatch_arrow(4, mtcars$cyl)\n```\r\nit returns `3` as, in this case, the base version of match has been used.\r\n\r\n\u00a0\r\n\r\nThis is all a little unintuitive, and so we should convert all inputs to Arrow objects, and also return a user-friendly error message if the input is the wrong kind of Arrow object (as in the first example).",
        "created_at": "2021-05-13T14:55:19.000Z",
        "updated_at": "2021-05-27T23:50:30.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-05-27T23:50:30.000Z"
    },
    "comments": [
        {
            "created_at": "2021-05-27T23:50:30.190Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12777?focusedCommentId=17352891) by Jonathan Keane (jonkeane):*\nIssue resolved by pull request 10383\n<https://github.com/apache/arrow/pull/10383>"
        }
    ]
}