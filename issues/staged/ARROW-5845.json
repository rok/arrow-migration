{
    "issue": {
        "title": "[Java] Implement converter between Arrow record batches and Avro records",
        "body": "***Note**: This issue was originally created as [ARROW-5845](https://issues.apache.org/jira/browse/ARROW-5845). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIt would be useful for applications which need convert Avro data to Arrow data.\r\n\r\nThis is an adapter which convert data with existing API (like JDBC adapter) rather than a native reader (like orc).\r\n\r\nWe implement this function through Avro java project, receiving param like Decoder/Schema/DatumReader of Avro and return VectorSchemaRoot. For each data type we have a consumer class as below to get Avro data and write it into vector to avoid boxing/unboxing (e.g. GenericRecord#get returns Object)\r\n```java\n\r\npublic class AvroIntConsumer implements Consumer {\r\nprivate final IntWriter writer;\r\n\r\npublic AvroIntConsumer(IntVector vector)\r\n\r\n{ this.writer = new IntWriterImpl(vector); }\r\n\r\n@Override\r\npublic void consume(Decoder decoder) throws IOException\r\n\r\n{ writer.writeInt(decoder.readInt()); writer.setPosition(writer.getPosition() + 1); }\r\n```\r\nWe intended to support primitive and complex types (null value represented via unions type with null type), size limit and field selection could be optional for users.\u00a0",
        "created_at": "2019-07-04T10:43:57.000Z",
        "updated_at": "2022-07-12T14:04:46.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2019-09-18T04:50:08.704Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5845?focusedCommentId=16932055) by Ji Liu (tianchen92):*\nThanks [~emkornfield@gmail.com]\u00a0, I closed this umbrella issue."
        },
        {
            "created_at": "2019-09-18T05:11:09.907Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5845?focusedCommentId=16932063) by Micah Kornfield (emkornfield@gmail.com):*\nThanks `[~tianchen92]`.\u00a0 I think there is still probably room for improvement of functionality and performance.\u00a0 If you are interested in still doing work in this area I can create a new set of JIRAs."
        },
        {
            "created_at": "2019-09-18T05:33:12.906Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5845?focusedCommentId=16932073) by Ji Liu (tianchen92):*\n[~emkornfield@gmail.com]\u00a0Sure, I think you could just create JIRAs under this one and I would taking them when available, thanks.\u00a0"
        },
        {
            "created_at": "2022-07-12T14:04:46.756Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5845?focusedCommentId=17565743) by @toddfarmer:*\nThis issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned. Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon."
        }
    ]
}