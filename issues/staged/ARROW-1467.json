{
    "issue": {
        "title": "[JAVA]: Fix reset() and allocateNew() in Nullable Value Vectors template",
        "body": "***Note**: This issue was originally created as [ARROW-1467](https://issues.apache.org/jira/browse/ARROW-1467). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n(1) \n\nallocateNew() in NullableValueVectors allocates extra memory for the validity vector of fixed-width vectors. Instead of doing bits.allocateNew(valueCount + 1), we should simply do bits.allocateNew(valueCount). \n\nAFAIK, the only case where we need an additional valueCount is for the offsetVector and we already do that. Additional valueCount for the validity vector is not needed.\n\n(2)\n\nreset() method should call reset() on the underlying value vector as well to re-initialize the state (allocation monitor, reader index etc) and zero out the buffers. Right now we just reset the validity vector.",
        "created_at": "2017-09-05T20:33:03.000Z",
        "updated_at": "2017-09-08T01:48:44.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2017-09-08T01:48:33.000Z"
    },
    "comments": [
        {
            "created_at": "2017-09-08T01:48:33.556Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1467?focusedCommentId=16158001) by Wes McKinney (wesm):*\nIssue resolved by pull request 1052\n<https://github.com/apache/arrow/pull/1052>"
        }
    ]
}