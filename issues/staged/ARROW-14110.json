{
    "issue": {
        "title": "[C++] Decimal promotion rules should consider inflating type",
        "body": "***Note**: This issue was originally created as [ARROW-14110](https://issues.apache.org/jira/browse/ARROW-14110). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI'm not sure how strongly I feel about this but, for example:\r\n\r\n```python\n\r\nDecimal(20, 4) / Decimal(20, 4) => Decimal(41, 21)\r\n```\r\n\r\nDecimal(20, 4) is in range for 128 but Decimal(41, 21) is out of range for 128 (but in range for 256).\r\n\r\nCurrently calling divide with two 128 bit decimals will fail but it could promote to a decimal 256.",
        "created_at": "2021-09-23T22:03:21.000Z",
        "updated_at": "2021-10-21T15:24:01.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-09-23T22:05:22.888Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14110?focusedCommentId=17419479) by David Li (lidavidm):*\nARROW-13390 will do this in some cases but not all. Somewhat related, I also filed ARROW-14105 to try to reconcile all these rules in general."
        },
        {
            "created_at": "2021-10-21T15:24:01.918Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14110?focusedCommentId=17432548) by David Li (lidavidm):*\nSee ML discussion at <https://lists.apache.org/thread.html/r8cc9d7af40351b1f172c5b71b605aae8d8168b6910bc5d797a5387a6%40%3Cdev.arrow.apache.org%3E>.\r\n\r\nSome notes:\r\n \\* \u00a0[SQL Server](https://docs.microsoft.com/en-us/sql/t-sql/data-types/precision-scale-and-length-transact-sql?view=sql-server-ver15) not only saturates at max precision, but can also reduce scale to try to accomodate.\r\n \\* Other types do not promote to wider types automatically, so decimal may be an exception in this regard.\r\n \\* We may add options for different such behaviors as needed."
        }
    ]
}