{
    "issue": {
        "title": "[Rust] Add parquet test file for all supported types in 2.5.0 format",
        "body": "***Note**: This issue was originally created as [ARROW-4936](https://issues.apache.org/jira/browse/ARROW-4936). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSuggested A/C\r\n \\* Generate a Parquet file using the Java API and check it into the arrow-testing repo\r\n \\* Write unit tests in the parquet crate for reading all types\r\n \\* Write unit tests in the datafusion crate for reading all types",
        "created_at": "2019-03-17T18:35:57.000Z",
        "updated_at": "2021-04-26T11:23:28.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Component: Rust - DataFusion",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-04-26T11:23:28.000Z"
    },
    "comments": [
        {
            "created_at": "2021-04-24T07:08:11.717Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4936?focusedCommentId=17331162) by Dr. Christoph Jung (doc_schorsch):*\nI'm willing to volunteer for this one.\r\n\r\n<https://github.com/drcgjung>\r\n> Being generally interested contributing to the datafusion/ballista development stream.\n> ~5years of professional experience in Apache Spark (RDD & dataframe) for large-scale measurement data.\n> ~4years open source contributions to JBoss (aka \"Wildfly\") a while back.\r\nSome obligatory questions:\r\n \\* Java API = <https://github.com/apache/parquet-mr> ?\r\n\r\n \\* Parquet Format = <https://github.com/apache/parquet-format> ?\r\n\r\n \\* Is it sufficient to restrict to the 2.6.0 format (Java API >= 1.11) ? Because there really was no Java API release using 2.5.0 and\r\n and <https://github.com/apache/arrow/blob/master/rust/parquet/README.md> refers to 2.6.0\r\n\r\n \\* \"arrow-testing\" = <https://github.com/apache/arrow-testing> ?\r\n \\* New folder there, data/parquet/types ?\r\n \\* Where to put the java generator project, also there?\u00a0\r\n\r\n \\* Better to have a single parquet with all the types or one parquet per basic type (can be many derived ones, see below)?\r\n\r\n \\* Would it be good to include the format version into the test parquet file name (for later additions when rust/parquet upgrades the format)?\r\n\r\n \\* I count 14 \"plain\" logical, parameterized types.\r\n\r\n \\* I count relevant 29 basic type instantiations, each could be represented mandatory and optional (=>58 test types)\r\n \\*\\* string\r\n \\*\\* enum\r\n \\*\\* uuid\r\n \\*\\* int_8, ... uint_64\r\n \\*\\* decimal_32, decimal_64 (maybe additional precision tests?)\r\n \\*\\* date\r\n \\*\\* time_utc_millis, time_utc_micros, time_utc_nanos, time_local_millis, time_local_micros, time_local_nanos\r\n \\*\\* timstamp_utc_millis, ... timestamp_local_nanos\r\n \\*\\* interval\r\n \\*\\* json, bson\r\n\r\n \\* Nested types could be derived in arbitrary combinations, but I guess its ok to have\r\n one LIST and two MAP types per basic test type (one as required key and one as value). Again,\r\n nested type could be mandatory and optional. (=> 58\\*2 + 29\\*2 + 58\\*2 = 290 nested test types)\r\n\r\n \\* There will be two PRs necessary because of the two repositories involved (arrow hard-linking to a version in the arrow-testing repo). The\r\n arrow PR will have to change the version link to the arrow-testing repo (which is maybe not safe for other arrow subprojects). Is that ok?\r\n\r\nThanks if/for considering me ;)\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0"
        },
        {
            "created_at": "2021-04-26T11:23:27.401Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4936?focusedCommentId=17332024) by Andrew Lamb (alamb):*\nMigrated to github: https://github.com/apache/arrow-rs/issues/40"
        }
    ]
}