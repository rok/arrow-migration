{
    "issue": {
        "title": "[Python] Try to make CSV cancellation test more robust",
        "body": "***Note**: This issue was originally created as [ARROW-15454](https://issues.apache.org/jira/browse/ARROW-15454). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe test can occasionally fail, see symptoms here:\r\nhttps://github.com/ursacomputing/crossbow/runs/4920924293?check_suite_focus=true#step:4:12555\r\n\r\n```Java\n\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> captured stdout >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\nworkload size: 100000\r\nworkload size: 300000\r\nworkload size: 900000\r\nworkload size: 2700000\r\nworkload size: 8100000\r\nworkload size: 24300000\r\nworkload size: 72900000\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> traceback >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n\r\nself = <pyarrow.tests.test_csv.TestSerialCSVTableRead object at 0x1215b9f70>\r\n\r\n    def test_cancellation(self):\r\n        if (threading.current_thread().ident !=\r\n                threading.main_thread().ident):\r\n            pytest.skip(\"test only works from main Python thread\")\r\n# Skips test if not available\r\n        raise_signal = util.get_raise_signal()\r\n    \r\n# Make the interruptible workload large enough to not finish\r\n# before the interrupt comes, even in release mode on fast machines.\r\n        last_duration = 0.0\r\n        workload_size = 100_000\r\n    \r\n        while last_duration < 1.0:\r\n            print(\"workload size:\", workload_size)\r\n            large_csv = b\"a,b,c\\n\" + b\"1,2,3\\n\" * workload_size\r\n            t1 = time.time()\r\n            self.read_bytes(large_csv)\r\n            last_duration = time.time() - t1\r\n            workload_size = workload_size * 3\r\n    \r\n        def signal_from_thread():\r\n            time.sleep(0.2)\r\n            raise_signal(signal.SIGINT)\r\n    \r\n        t1 = time.time()\r\n        try:\r\n            try:\r\n                t = threading.Thread(target=signal_from_thread)\r\n                with pytest.raises(KeyboardInterrupt) as exc_info:\r\n                    t.start()\r\n>                   self.read_bytes(large_csv)\r\nE                   Failed: DID NOT RAISE <class 'KeyboardInterrupt'>\r\n\r\npyarrow/tests/test_csv.py:1400: Failed\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> entering PDB >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n```",
        "created_at": "2022-01-25T18:16:09.000Z",
        "updated_at": "2022-01-28T23:07:26.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-01-26T17:46:50.000Z"
    },
    "comments": [
        {
            "created_at": "2022-01-26T17:46:50.661Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15454?focusedCommentId=17482645) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 12260\n<https://github.com/apache/arrow/pull/12260>"
        }
    ]
}