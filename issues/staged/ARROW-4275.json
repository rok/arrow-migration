{
    "issue": {
        "title": "[C++] gandiva-decimal_single_test extremely slow",
        "body": "***Note**: This issue was originally created as [ARROW-4275](https://issues.apache.org/jira/browse/ARROW-4275). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n`gandiva-decimal_single_test` is extremely slow on CI builds with Valgrind:\r\n```Java\n\r\n 99/100 Test #128: gandiva-decimal_single_test ...............   Passed  397.11 sec\r\n100/100 Test #130: gandiva-decimal_single_test_static ........   Passed  338.97 sec\r\n```\r\n\r\n(full log: https://travis-ci.org/apache/arrow/jobs/480198116#L2707)\r\n\r\nSomething should be done to make it faster.",
        "created_at": "2019-01-16T18:17:23.000Z",
        "updated_at": "2019-01-22T13:47:43.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: C++ - Gandiva",
            "Component: Continuous Integration",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-01-22T13:47:31.000Z"
    },
    "comments": [
        {
            "created_at": "2019-01-16T18:34:10.021Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4275?focusedCommentId=16744331) by Antoine Pitrou (apitrou):*\nJudging by the source code, it seems the JIT compiler is launched anew for each different test input.\r\n\r\ncc [~Pindikura Ravindra]"
        },
        {
            "created_at": "2019-01-16T18:45:24.765Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4275?focusedCommentId=16744337) by Pindikura Ravindra (pravindra):*\n- I can remove the\u00a0gandiva-decimal_single_test_static, since it's testing the same code.\n   \\* The JIT is different for different precision/scale and so, we need multiple of them. I can re-order/group the tests using the same precision/scale. Or, cache and reuse the JIT."
        },
        {
            "created_at": "2019-01-16T18:47:25.601Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4275?focusedCommentId=16744340) by Antoine Pitrou (apitrou):*\nI think reducing the number of JIT compilations would already be a welcome improvement."
        },
        {
            "created_at": "2019-01-16T18:47:47.231Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4275?focusedCommentId=16744341) by Antoine Pitrou (apitrou):*\nWhat is the \"static\" variant of the test supposed to do?"
        },
        {
            "created_at": "2019-01-17T06:39:23.289Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4275?focusedCommentId=16744728) by Pindikura Ravindra (pravindra):*\n> What is the \"static\" variant of the test supposed to do?\r\n\r\nearly on, the static variant used to give some unresolved symbol errors from LLVM. We don't see such issues any longer - we get such errors mostly from java/jni.\u00a0"
        },
        {
            "created_at": "2019-01-18T13:41:30.145Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4275?focusedCommentId=16746293) by Pindikura Ravindra (pravindra):*\ngandiva has a cache of JITs to solve these kind of issues. but, there is a bug in the cache lookup."
        },
        {
            "created_at": "2019-01-18T14:28:24.498Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4275?focusedCommentId=16746337) by Pindikura Ravindra (pravindra):*\nAfter the fix,\r\n\r\n\u00a0\r\n\r\n99/99 Test #128: gandiva-decimal_single_test ............... Passed 143.53 sec"
        },
        {
            "created_at": "2019-01-22T13:47:31.545Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4275?focusedCommentId=16748733) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 3426\n<https://github.com/apache/arrow/pull/3426>"
        }
    ]
}