{
    "issue": {
        "title": "[Rust] Filter kernel relies on bits outside of valid len of boolean array",
        "body": "***Note**: This issue was originally created as [ARROW-10025](https://issues.apache.org/jira/browse/ARROW-10025). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe filter kernel accesses the filter array in chunks of u64 and tries to access elements if the corresponding bit is set. This assumes that bits outside of the valid len of that array have to be unset. That assumption is currently not correct for output of the NOT and the IS NULL kernels, which also operate on and negate a whole chunk of their input arrays.\r\n\r\nTestcase (depending on is null kernel from ARROW-10016)\r\n```java\n\r\n#[test]\r\nfn csv_query_with_is_null_predicate() -> Result<()> {\r\n    let mut ctx = ExecutionContext::new();\r\n    register_aggregate_csv(&mut ctx)?;\r\n    let sql = \"SELECT COUNT(1) FROM aggregate_test_100 WHERE c1 IS NULL\";\r\n    let actual = execute(&mut ctx, sql).join(\"\\n\");\r\n    let expected = \"0\".to_string();\r\n    assert_eq!(expected, actual);\r\n    Ok(())\r\n}\r\n```\r\n\u00a0",
        "created_at": "2020-09-16T15:57:46.000Z",
        "updated_at": "2020-09-24T18:16:55.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Component: Rust - DataFusion",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-09-24T18:16:55.000Z"
    },
    "comments": [
        {
            "created_at": "2020-09-16T16:44:14.473Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10025?focusedCommentId=17197100) by Jorge Leit\u00e3o (jorgecarleitao):*\ngreat finding."
        },
        {
            "created_at": "2020-09-24T18:16:55.786Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10025?focusedCommentId=17201711) by J\u00f6rn Horstmann (jhorstmann):*\nFixed by masking of the bits outside the valid range (https://github.com/apache/arrow/pull/8204/files#diff-d7b0b7cde1850e8744ceda458c6dea81)"
        }
    ]
}