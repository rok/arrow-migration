{
    "issue": {
        "title": "[R] Pass column_types to CSV reader",
        "body": "***Note**: This issue was originally created as [ARROW-6537](https://issues.apache.org/jira/browse/ARROW-6537). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSee also ARROW-6536. It may be the case that the csv reader does accept a Schema now, I think I saw that, but otherwise it takes unordered_map. \r\n\r\n`read_csv_arrow` should take for `col_types` either a Schema, a named list of Types, or the \"compact string representation\" that `readr` supports. Per its docs, \"c = character, i = integer, n = number, d = double, l = logical, f = factor, D = date, T = date time, t = time, ? = guess, or _/- to skip the column.\" So, c = utf8(), i = int32(), d = float64(), l = bool(), f = dictionary(int32(), utf8()), D = date32(), T = timestamp(), t = time32(), etc. I'm not sure if ? and - are supported, and/or what exactly happens if you don't specify types for all columns, but I guess we'll find out, and we can make JIRAs if important features are missing. \r\n\r\nFollowing the existing conventions in csv.R, that compact string representation would be encapsulated in `read_csv_arrow`, so CsvTableReader and the various Csv\\*Options would only deal with the Arrow C++ interface. ",
        "created_at": "2019-09-11T21:31:58.000Z",
        "updated_at": "2020-10-09T13:32:09.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-10-08T14:59:09.000Z"
    },
    "comments": [
        {
            "created_at": "2020-10-08T14:59:09.631Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6537?focusedCommentId=17210271) by Neal Richardson (npr):*\nIssue resolved by pull request 7807\n<https://github.com/apache/arrow/pull/7807>"
        }
    ]
}