{
    "issue": {
        "title": "[C++] RandomArrayGenerator does not properly generate ListArrays with Nulls",
        "body": "***Note**: This issue was originally created as [ARROW-17956](https://issues.apache.org/jira/browse/ARROW-17956). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThere are multiple problems with the\u00a0`OffsetsFromLengthsArray` method:\r\n \\* There is an assumption that the first and last length value in the input are never null. This is not true at all for the usage of this method in GENERATE_LIST_CASE, where the input is completely randomly generated, respecting null_probability: <https://github.com/apache/arrow/blob/ed36fcd218d381bd7420f1b762a28c5feea4665f/cpp/src/arrow/testing/random.cc#L730>\r\n \\* The SetBit call for non-null items is off-by-one. The index variable represents the index of the next offset, which is based of the current elements length. But the validity bit should still be set for the current element\r\n \\* \u00a0I don't see what effect the `force_empty_nulls` argument should have. I think the desired effect that Null items also have a zero length is always given, based on how the method is implemented. Please correct me if I'm wrong.",
        "created_at": "2022-10-06T20:44:30.000Z",
        "updated_at": "2022-10-10T23:09:05.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": []
}