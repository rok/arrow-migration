{
    "issue": {
        "title": "[C++] Remove non_zero_length field from SparseIndex",
        "body": "***Note**: This issue was originally created as [ARROW-6501](https://issues.apache.org/jira/browse/ARROW-6501). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWe can remove non_zero_length field from SparseIndex because it can be supplied from the shape of the indices tensor.",
        "created_at": "2019-09-10T01:17:06.000Z",
        "updated_at": "2020-05-01T17:46:17.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-05-01T17:46:17.000Z"
    },
    "comments": [
        {
            "created_at": "2019-09-10T08:58:44.810Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6501?focusedCommentId=16926448) by Antoine Pitrou (apitrou):*\nIdeally we should prioritize this for 0.15.0, so that we don't break the protocol multiple times. Do you think this is possible?"
        },
        {
            "created_at": "2019-09-10T09:22:28.848Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6501?focusedCommentId=16926470) by Kenta Murata (mrkn):*\nI misunderstood non_zero_length in the format.  This field is necessary to keep the length of the data in SparseTensor object. And this value is also used as the 0th item of COO indices shape and the length of CSR's indices vector.\r\n\r\nBut we can remove non_zero_length_ field from arrow::SparseIndex class.\r\n\r\nSo, this ticket will not involve format breaking change.  I'll fix the ticket's properties."
        },
        {
            "created_at": "2019-09-18T22:18:32.562Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6501?focusedCommentId=16932888) by Wes McKinney (wesm):*\nIs this still a priority for 0.15.0?"
        },
        {
            "created_at": "2019-09-18T22:58:06.345Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6501?focusedCommentId=16932905) by Kenta Murata (mrkn):*\nNo, this doesn\u2019t block 0.15.0."
        },
        {
            "created_at": "2020-03-23T16:12:25.600Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6501?focusedCommentId=17064905) by Wes McKinney (wesm):*\nDo you want to do this for 0.17.0?"
        },
        {
            "created_at": "2020-03-24T07:11:49.267Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6501?focusedCommentId=17065367) by Kenta Murata (mrkn):*\n`[~wesm]` No, I don't. I want to do this after 0.17.0 because I'm working on GLib Datasets."
        },
        {
            "created_at": "2020-03-24T19:59:43.741Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6501?focusedCommentId=17066146) by Wes McKinney (wesm):*\nSounds good. "
        },
        {
            "created_at": "2020-05-01T17:46:17.350Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6501?focusedCommentId=17097544) by Francois Saint-Jacques (fsaintjacques):*\nIssue resolved by pull request 7079\n<https://github.com/apache/arrow/pull/7079>"
        }
    ]
}