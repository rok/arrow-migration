{
    "issue": {
        "title": "[Python][C++] pyarrow.ipc.RecordBatchFileReader holding onto memory after being disposed",
        "body": "***Note**: This issue was originally created as [ARROW-15017](https://issues.apache.org/jira/browse/ARROW-15017). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI'll attach a full reproduction but the important bit is here:\r\n\r\n```\n\r\n  with ipc.RecordBatchFileReader(path) as reader:\r\n    table = reader.read_all()\r\n# If you comment out this next line then memory usage will be worse                                                                                                                                              \r\n  del reader\r\n  df = table.to_pandas()\r\n  del table\r\n  gc.collect()\r\n```\r\n\r\nThe input file is ~3GB.  This uses peak ~6GB because of conversion to pandas and over time that excess 3GB will be returned by jemalloc.\r\n\r\nHowever, if I do not run \"del reader\" then it uses peak ~9GB and only shrinks down to 6GB even after a 5 second wait.  Since the reader is disposed this was rather surprising to me.",
        "created_at": "2021-12-07T23:05:58.000Z",
        "updated_at": "2021-12-07T23:05:58.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": []
}