{
    "issue": {
        "title": "[C#] Extend ArrowBuffer.BitmapBuilder to improve performance of array concatenation",
        "body": "***Note**: This issue was originally created as [ARROW-17330](https://issues.apache.org/jira/browse/ARROW-17330). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nExtend ArrowBuffer.BitmapBuilder with Append method overloaded with ReadOnlySpan<byte> parameter. \r\n\r\nThis allows to add validity bits to the builder more efficiently (especially for cases when initial validity bits are added to newly created empty builder).  More over it makes BitmapBuilder API more consistent (for example ArrowBuffer.Builder<T> does have such method).\r\n\r\nCurrently adding new bits to existing bitmap is implemented in ArrayDataConcatenator, Code adds bit by bit in a cycle converting each to a boolean value:\r\n\r\nfor (int i = 0; i < length; i++)\r\n{\r\n    builder.Append(span.IsEmpty || BitUtility.GetBit(span, i));\r\n}\r\n\r\nInitial problem was described in this email: https://lists.apache.org/thread/kls6tjq2hclsvd16tw901ooo5soojrmb\r\n\r\nPR: https://github.com/apache/arrow/pull/13810\r\n",
        "created_at": "2022-08-06T19:01:42.000Z",
        "updated_at": "2022-08-31T11:32:18.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C#",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-08-31T11:31:33.566Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17330?focusedCommentId=17598339) by Alexey Smirnov (asmirnov82):*\nPull request is ready. Issue requires verification and approval"
        }
    ]
}