{
    "issue": {
        "title": "[c++] When link to libavrocpp.so, call parquet::arrow::WriteTable in a child thread get segmentation fault",
        "body": "***Note**: This issue was originally created as [ARROW-15881](https://issues.apache.org/jira/browse/ARROW-15881). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI resolve this problem. I use rpm package to install arrow before. After I build arrow from source code (use same gcc I build avro) and install, there is no segmentation fault.\u00a0\r\n\r\n----------------------------------------------------------------------------------------------\r\n\r\nWhen I try to use Arrow to write parquet files, I encounter a error. The parquet::arrow::WriteTable out child thread can call successful, but \u00a0parquet::arrow::WriteTable in child thread while cause Segmentation fault.\r\n\r\nIn my CMakeList.txt,I link libavrocpp.so because I want to use avro in project after finish this test. And I find that if I remove the link of libavrocpp.so, code while run successful.\r\n\r\nThe code like this:\r\n```cpp\n\r\narrow::Int64Builder test_a;\r\nfor (int i = 0; i < 1e7; ++i) {\r\n  PARQUET_THROW_NOT_OK(test_a.Append(i));\r\n}\r\nauto sc = arrow::schema({arrow::field(\"A\", arrow::int64())});\r\nauto table = arrow::Table::Make(sc,{test_a.Finish().ValueOrDie()});\r\nconst string &fileid = sole::uuid4().str();\r\nstring filename = \"test.parq\";\r\ntry {\r\n  std::shared_ptr<arrow::io::FileOutputStream> outfile;\r\n  PARQUET_ASSIGN_OR_THROW(\r\n          outfile,arrow::io::FileOutputStream::Open(filename)\r\n  );\r\n  PARQUET_THROW_NOT_OK(\r\n          parquet::arrow::WriteTable(*table, arrow::default_memory_pool(), outfile, table->num_rows())\r\n  );\r\n} catch (exception &ex) {\r\n  cout << ex.what() << endl;\r\n}\r\nshared_ptr<std::thread> thread = make_shared<std::thread>([=]() {\r\n    arrow::Int64Builder test_a;\r\n      for (int i = 0; i < 1e7; ++i) {\r\n        PARQUET_THROW_NOT_OK(test_a.Append(i));\r\n    }\r\n    auto sc = arrow::schema({arrow::field(\"A\", arrow::int64())});\r\n    auto table = arrow::Table::Make(sc,{test_a.Finish().ValueOrDie()});\r\n    const string &fileid = sole::uuid4().str();\r\n    string filename = \"test.parq\";\r\n    try {\r\n        std::shared_ptr<arrow::io::FileOutputStream> outfile;\r\n        PARQUET_ASSIGN_OR_THROW(\r\n                outfile,arrow::io::FileOutputStream::Open(filename)\r\n        );\r\n        PARQUET_THROW_NOT_OK(\r\n                parquet::arrow::WriteTable(*table, arrow::default_memory_pool(), outfile, table->num_rows())\r\n        );\r\n    } catch (exception &ex) {\r\n        cout << ex.what() << endl;\r\n    }\r\n};\r\nthread->join();\r\nreturn 0;\r\n\r\n```\r\n\u00a0\r\n\r\nThe stack message is in the picture in attachment.\r\n\r\n\u00a0",
        "created_at": "2022-03-09T12:45:03.000Z",
        "updated_at": "2022-03-14T08:23:36.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-03-14T08:23:36.000Z"
    },
    "comments": [
        {
            "created_at": "2022-03-09T13:06:49.079Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15881?focusedCommentId=17503577) by Antoine Pitrou (apitrou):*\nCan you post a complete reproducer (for example with a `main()` function)?"
        },
        {
            "created_at": "2022-03-10T01:31:15.018Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15881?focusedCommentId=17503933) by zzh (typeryougishiki):*\nNow the code I list in question is all code in main() function.And I found some other thing.\r\n\r\nIn my CMakeList.txt,I link libavrocpp.so because I want to use avro in project after finish this test. And I find that if I remove the link of libavrocpp.so, code while run successful."
        },
        {
            "created_at": "2022-03-10T08:33:11.630Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15881?focusedCommentId=17504088) by Antoine Pitrou (apitrou):*\nThen you may have dependency conflicts between those two libraries?"
        },
        {
            "created_at": "2022-03-14T02:46:30.411Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15881?focusedCommentId=17505963) by zzh (typeryougishiki):*\nI resolve this problem. I use rpm package to install arrow before. After I build arrow from source code (use same gcc I build avro) and install, there is no segmentation fault.\u00a0"
        },
        {
            "created_at": "2022-03-14T08:23:15.113Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15881?focusedCommentId=17506057) by Antoine Pitrou (apitrou):*\nI'm going to close this issue, then, as it's unlikely to be a problem in Arrow itself."
        }
    ]
}