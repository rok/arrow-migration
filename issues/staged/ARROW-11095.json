{
    "issue": {
        "title": "[Python] Access pyarrow.RecordBatch column by name",
        "body": "***Note**: This issue was originally created as [ARROW-11095](https://issues.apache.org/jira/browse/ARROW-11095). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI propose adding support for selecting a column out of a pyarrow.RecordBatch using both __getitem__() and .field(), like we have in pyarrow.Table.\r\n\r\npyarrow.RecordBatch has a pretty similar API to pyarrow.Table (e.g. both have filter and take methods and a schema), but I got tripped up on this difference. pyarrow.Table supports accessing columns by name using both __getitem__ and .field():\r\n```python\n\r\nmy_array = pa.array(range(10))\r\ntable = pa.Table.from_arrays([my_array], names=['my_column'])\r\n\r\n// Both of these work on table:\r\ntable['my_column']\r\ntable.field('my_column')\r\n```\r\nMeanwhile pyarrow.RecordBatch doesn't support either of those. In fact, I had a hard time finding a way to grab a column by name from a recordbatch without first looking up the integer index.",
        "created_at": "2021-01-01T03:37:25.000Z",
        "updated_at": "2021-01-04T12:49:49.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-01-04T12:49:34.000Z"
    },
    "comments": [
        {
            "created_at": "2021-01-04T12:49:34.960Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11095?focusedCommentId=17258188) by Joris Van den Bossche (jorisvandenbossche):*\nIssue resolved by pull request 9073\n<https://github.com/apache/arrow/pull/9073>"
        }
    ]
}