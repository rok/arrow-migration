{
    "issue": {
        "title": "[Java] Improve the performance of JDBC adapter by allocating memory proactively",
        "body": "***Note**: This issue was originally created as [ARROW-8169](https://issues.apache.org/jira/browse/ARROW-8169). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe current implementation use `setSafe` methods to dynamically allocate memory if necessary. For fixed width vectors (which are frequently used in JDBC), however, we can allocate memory proactively, since the vector size is known as a configuration parameter. So for fixed width vectors, we can use `set` methods instead.\r\n\r\nThis change leads to two benefits:\r\n1. When processing each value, we no longer have to check vector capacity and reallocate memroy if needed. This leads to better performance.\r\n2. If we allow the memory to expand automatically (each time by 2x), the amount of memory usually ends up being more than necessary. By allocating memory by the configuration parameter, we allocate no more, or no less. \r\n\r\nBenchmark results show notable performance improvements:\r\n\r\nBefore:\r\n\r\nBenchmark                                   Mode  Cnt    Score   Error  Units\r\nJdbcAdapterBenchmarks.consumeBenchmark      avgt    5  521.700 \u00b1 4.837  us/op\r\n\r\nAfter:\r\n\r\nBenchmark                                   Mode  Cnt    Score   Error  Units\r\nJdbcAdapterBenchmarks.consumeBenchmark      avgt    5  430.523 \u00b1 9.932  us/op",
        "created_at": "2020-03-20T02:55:11.000Z",
        "updated_at": "2020-05-15T04:43:17.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-05-15T04:43:16.000Z"
    },
    "comments": [
        {
            "created_at": "2020-05-15T04:43:17.035Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8169?focusedCommentId=17107934) by Micah Kornfield (emkornfield@gmail.com):*\nIssue resolved by pull request 6672\n<https://github.com/apache/arrow/pull/6672>"
        }
    ]
}