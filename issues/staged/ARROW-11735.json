{
    "issue": {
        "title": "[R] Allow Parquet and Arrow Dataset to be optional components",
        "body": "***Note**: This issue was originally created as [ARROW-11735](https://issues.apache.org/jira/browse/ARROW-11735). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nParquet requires thrift and it seems that thrift (at least as of version 0.12) does not compile on Solaris:\r\n\r\n```Java\n\r\n/export/home/X1svPYR/Rtemp/RtmptF1MlN/file75097d284891/thrift_ep-prefix/src/thrift_ep/lib/cpp/src/thrift/transport/THttpServer.cpp:\u001b In member function virtual void apache::thrift::transport::THttpServer::parseHeader(char*):\r\n/export/home/X1svPYR/Rtemp/RtmptF1MlN/file75097d284891/thrift_ep-prefix/src/thrift_ep/lib/cpp/src/thrift/transport/THttpServer.cpp:50:74:\u001b error: \u001bstrcasestr was not declared in this scope\r\n   #define THRIFT_strcasestr(haystack, needle) strcasestr(haystack, needle)\r\n                                                                          ^\u001b\r\n/export/home/X1svPYR/Rtemp/RtmptF1MlN/file75097d284891/thrift_ep-prefix/src/thrift_ep/lib/cpp/src/thrift/transport/THttpServer.cpp:62:9:\u001b \u001bnote: \u001bin expansion of macro THRIFT_strcasestr\u001b\r\n     if (THRIFT_strcasestr(value, \"chunked\") != NULL) {\r\n```\r\n\r\n(along with some boost endian header deprecation warnings)\r\n\r\nWe could debug/patch that, or we could also make Parquet an optional feature in the R bindings. That might have some value anyway so that one could build a lighter/minimal R package, if that were helpful.",
        "created_at": "2021-02-22T21:42:57.000Z",
        "updated_at": "2021-04-29T17:45:16.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: task"
        ],
        "closed": true,
        "closed_at": "2021-03-06T04:00:21.000Z"
    },
    "comments": [
        {
            "created_at": "2021-02-26T17:57:48.446Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11735?focusedCommentId=17291844) by Neal Richardson (npr):*\nSee r/data-raw/codegen.R for how this comes together (docs in comments at the top of the file), and look at the bottom of r/src/filesystem.cpp for an example of how this is working for s3. Changes to make:\r\n\r\n- Make sure that everything that touches things in the parquet C++ namespace (C++ classes that are `parquet::something`, header `#include` statements of parquet paths) are inside `#if defined(ARROW_R_WITH_PARQUET)`\n- Change the `// [[arrow::export]]` annotations on those functions to be `// [[parquet::export]]`\n- Add \"parquet\" to the features list at the top of data-raw/codegen.R\n- This is the tricky part: in configure and configure.win, do a check similar to how we look for whether `ARROW_S3` was enabled in the C++ build, and if so add `-DARROW_R_WITH_PARQUET` to PKG_CFLAGS. This will be trickier on Windows because I don't think the rwinlib bundle includes ArrowOptions.cmake (but it will always have Parquet enabled). An alternative (perhaps more robust approach) would be to follow the TEST_CMD approach and test for parquet/s3 headers (current L179 of configure).\n- In configure.win, you may also need to massage the PKG_LIBS since it has hard-coded that parquet and thrift are present (as they are in the rwinlib bundles). This is perhaps a separate issue from this (since this issue is particularly about Solaris and that's about doing different C++ dev builds on Windows.\n- Once you've done this, the build should succeed without Parquet, but tests that involve Parquet will error. Revise skip_if_not_available() in r/tests/testthat/helper-skip.R to check `arrow_with_parquet()` if feature == \"parquet\" (this function is generated by codegen.R), then add `skip_if_not_available(\"parquet\")` to all relevant tests.\n- Search for `arrow_with_s3()` in the code and see where else we should do the same with arrow_with_parquet(). Among the uses:\n- Add parquet to arrow_info() alongside where arrow_with_s3() is checked\n- Wrap any parquet doc examples `if (arrow_with_parquet())`"
        },
        {
            "created_at": "2021-02-26T23:15:59.068Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11735?focusedCommentId=17291960) by Ian Cook (icook):*\nOne problem here: pkg-config reports that the Arrow Dataset module depends on Parquet\r\n```java\n\r\n$ pkg-config --libs arrow-dataset\r\n-L/usr/local/lib -larrow_dataset -lparquet -larrow \n```\r\nDoes it actually? From `CMakeLists.txt`, it doesn't look like it:\r\n\r\n<https://github.com/apache/arrow/blob/master/cpp/CMakeLists.txt#L339-L342>\r\n\r\nBut there is a `find_package(Parquet)` call in `FindArrowDataset.cmake`:\r\n\r\n<https://github.com/apache/arrow/blob/master/cpp/cmake_modules/FindArrowDataset.cmake#L47>\r\n\r\n`arrow-dataset.pc.in` has `parquet` in the `Requires:`:\r\n <https://github.com/apache/arrow/blob/master/cpp/src/arrow/dataset/arrow-dataset.pc.in#L24>\r\n\r\n`c_glib/configure.ac` puts `-lparquet` in `ARROW_DATASET_LIBS`:\r\n\r\n<https://github.com/apache/arrow/blob/master/c_glib/configure.ac#L225>\r\n\r\nIn the dataset subcomponent `CMakeLists.txt`, everything Parquet-specific is guarded with `if(ARROW_PARQUET)`:\r\n\r\nhttps://github.com/apache/arrow/blob/master/cpp/src/arrow/dataset/CMakeLists.txt"
        },
        {
            "created_at": "2021-02-27T16:25:05.200Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11735?focusedCommentId=17292174) by Neal Richardson (npr):*\nThis may only be for historical reasons: when libarrow_dataset was created, it only worked for Parquet files, so the hard dependency made sense. \r\n\r\nI don't know how disruptive it would be to make that dependency conditional (cc `[~bkietz]`). If we didn't want to go that route, we could extend this work in the R package to make both the dataset and parquet features conditional--dataset would work the same way I described above, it's in its own namespace like parquet is, etc."
        },
        {
            "created_at": "2021-03-06T04:00:21.646Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11735?focusedCommentId=17296427) by Neal Richardson (npr):*\nIssue resolved by pull request 9610\n<https://github.com/apache/arrow/pull/9610>"
        }
    ]
}