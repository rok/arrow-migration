{
    "issue": {
        "title": "[C++] Duplicate functions array_filter/array_take and filter/take",
        "body": "***Note**: This issue was originally created as [ARROW-13873](https://issues.apache.org/jira/browse/ARROW-13873). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThis has been explained to me as a metafunction and a backend but in that case the backend should not be registered with the function registry.  Note both:\r\n\r\n```cpp\n\r\nconst FunctionDoc filter_doc(\r\n    \"Filter with a boolean selection filter\",\r\n    (\"The output is populated with values from the input at positions\\n\"\r\n     \"where the selection filter is non-zero.  Nulls in the selection filter\\n\"\r\n     \"are handled based on FilterOptions.\"),\r\n    {\"input\", \"selection_filter\"}, \"FilterOptions\");\r\n```\r\n\r\nand\r\n\r\n```cpp\n\r\nconst FunctionDoc array_filter_doc(\r\n    \"Filter with a boolean selection filter\",\r\n    (\"The output is populated with values from the input `array` at positions\\n\"\r\n     \"where the selection filter is non-zero.  Nulls in the selection filter\\n\"\r\n     \"are handled based on FilterOptions.\"),\r\n    {\"array\", \"selection_filter\"}, \"FilterOptions\");\r\n```\r\n\r\nwhich seems wrong as well.\r\n\r\nAlso sort_indices / array_sort_indices",
        "created_at": "2021-09-02T23:31:36.000Z",
        "updated_at": "2021-11-10T16:24:50.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-09-15T14:37:05.488Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13873?focusedCommentId=17415555) by Joris Van den Bossche (jorisvandenbossche):*\nSpecifically for the sort one: `ArraySortOptions` allows a nicer interface to specify the sort order, as you don't need to specify a \"dummy\" key as with `SortOptions` (`pc.array_sort_indices(arr, order=\"ascending\")` vs `pc.sort_indices(arr, sort_keys=[(\"dummy\", \"ascending\")])`.\r\n\r\n(I don't know if that's worth enough to keep the separate kernel, though)\r\n\r\n"
        },
        {
            "created_at": "2021-11-10T16:23:06.939Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13873?focusedCommentId=17441825) by Antoine Pitrou (apitrou):*\nOne problem is that there's no obvious way of deprecating a compute function in C++: we cannot emit a compile-time warning since the function is looked up at runtime."
        },
        {
            "created_at": "2021-11-10T16:24:50.764Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13873?focusedCommentId=17441827) by Antoine Pitrou (apitrou):*\nWe could:\r\n\r\n1) mention the deprecation in the function doc\r\n\r\n2) mention the deprecation in the function doc and add a flag to the function that bindings such as Python can use to emit a runtime Warning\r\n\r\n3) do nothing and live with the slight redundancy"
        }
    ]
}