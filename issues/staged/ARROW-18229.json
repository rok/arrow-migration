{
    "issue": {
        "title": "[C++][Python] RecordBatchReader can be created with a 'dict' schema which then crashes on use",
        "body": "***Note**: This issue was originally created as [ARROW-18229](https://issues.apache.org/jira/browse/ARROW-18229). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nPresumably we should disallow this or convert it to a schema?\r\n\r\nhttps://github.com/duckdb/duckdb/issues/5143\r\n\r\n```\n\r\n>>> import pyarrow as pa\r\n>>> pa.__version__\r\n'10.0.0'\r\n>>> reader = pa.RecordBatchReader.from_batches({\"a\": pa.int8()}, [])\r\n>>> reader.schema\r\nfish: Job 1, 'python3' terminated by signal SIGSEGV (Address boundary error)\r\n\r\n(gdb) bt\r\n#0  0x00007ffff4247580 in arrow::Schema::num_fields() const ()\r\n   from /home/lidavidm/miniconda3/lib/python3.9/site-packages/pyarrow/libarrow.so.1000\r\n#1  0x00007ffff42b93f7 in arrow::(anonymous namespace)::SchemaPrinter::Print()\r\n    ()\r\n   from /home/lidavidm/miniconda3/lib/python3.9/site-packages/pyarrow/libarrow.so.1000\r\n#2  0x00007ffff42b98a7 in arrow::PrettyPrint(arrow::Schema const&, arrow::PrettyPrintOptions const&, std::string*) ()\r\n   from /home/lidavidm/miniconda3/lib/python3.9/site-packages/pyarrow/libarrow.so.1000\r\n#3  0x00007ffff64f814b in __pyx_pw_7pyarrow_3lib_6Schema_52to_string(_object*, _object*, _object*) ()\r\n```",
        "created_at": "2022-11-02T15:11:47.000Z",
        "updated_at": "2022-11-10T06:22:41.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-11-09T16:27:14.000Z"
    },
    "comments": [
        {
            "created_at": "2022-11-03T16:46:41.139Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18229?focusedCommentId=17628416) by Joris Van den Bossche (jorisvandenbossche):*\nWhat is causing the segfault here is actually the _printing_ of the (null) schema (`shared_ptr[CSchema]()`). Although we should still disallow creating a RecordBatchReader with such a schema, of course."
        },
        {
            "created_at": "2022-11-03T17:06:00.072Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18229?focusedCommentId=17628423) by Joris Van den Bossche (jorisvandenbossche):*\nI opened a PR to just ensure the argument has to be a schema (I like the idea of allowing a dictionary, but that's something we should then also consider in other places, starting with creating a schema in `pa.schema(..)`, I think).\r\n\r\nIt's a bit peculiar that we require a Schema for RecordBatchReader.from_batches (`PyRecordBatchReader`, but then don't actually use that schema for anything (except for accessing the `schema` attribute of the reader). Since reading will work fine in the above example, and also happily returns batches of a different schema than the one you specified."
        },
        {
            "created_at": "2022-11-09T16:27:14.410Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18229?focusedCommentId=17631157) by Joris Van den Bossche (jorisvandenbossche):*\nIssue resolved by pull request 14583\n<https://github.com/apache/arrow/pull/14583>"
        }
    ]
}