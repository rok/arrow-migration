{
    "issue": {
        "title": "[Python] from_pandas gives TypeError instead of ArrowTypeError in some cases",
        "body": "***Note**: This issue was originally created as [ARROW-7663](https://issues.apache.org/jira/browse/ARROW-7663). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nfrom_pandas sometimes raises a TypeError with an uninformative error message rather than an ArrowTypeError with the full, informative type error for mixed-type array columns:\r\n\r\n```\n\r\n>>> pa.Table.from_pandas(pd.DataFrame({\"a\": ['a', 1]}))\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"pyarrow/table.pxi\", line 1177, in pyarrow.lib.Table.from_pandas\r\n  File \"/Users/lidavidm/Flight/arrow/build/python/lib.macosx-10.12-x86_64-3.7/pyarrow/pandas_compat.py\", line 575, in dataframe_to_arrays\r\n    for c, f in zip(columns_to_convert, convert_fields)]\r\n  File \"/Users/lidavidm/Flight/arrow/build/python/lib.macosx-10.12-x86_64-3.7/pyarrow/pandas_compat.py\", line 575, in <listcomp>\r\n    for c, f in zip(columns_to_convert, convert_fields)]\r\n  File \"/Users/lidavidm/Flight/arrow/build/python/lib.macosx-10.12-x86_64-3.7/pyarrow/pandas_compat.py\", line 566, in convert_column\r\n    raise e\r\n  File \"/Users/lidavidm/Flight/arrow/build/python/lib.macosx-10.12-x86_64-3.7/pyarrow/pandas_compat.py\", line 560, in convert_column\r\n    result = pa.array(col, type=type_, from_pandas=True, safe=safe)\r\n  File \"pyarrow/array.pxi\", line 265, in pyarrow.lib.array\r\n  File \"pyarrow/array.pxi\", line 80, in pyarrow.lib._ndarray_to_array\r\n  File \"pyarrow/error.pxi\", line 107, in pyarrow.lib.check_status\r\npyarrow.lib.ArrowTypeError: (\"Expected a bytes object, got a 'int' object\", 'Conversion failed for column a with type object')\r\n>>> pa.Table.from_pandas(pd.DataFrame({\"a\": [1, 'a']}))\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"pyarrow/table.pxi\", line 1177, in pyarrow.lib.Table.from_pandas\r\n  File \"/Users/lidavidm/Flight/arrow/build/python/lib.macosx-10.12-x86_64-3.7/pyarrow/pandas_compat.py\", line 575, in dataframe_to_arrays\r\n    for c, f in zip(columns_to_convert, convert_fields)]\r\n  File \"/Users/lidavidm/Flight/arrow/build/python/lib.macosx-10.12-x86_64-3.7/pyarrow/pandas_compat.py\", line 575, in <listcomp>\r\n    for c, f in zip(columns_to_convert, convert_fields)]\r\n  File \"/Users/lidavidm/Flight/arrow/build/python/lib.macosx-10.12-x86_64-3.7/pyarrow/pandas_compat.py\", line 560, in convert_column\r\n    result = pa.array(col, type=type_, from_pandas=True, safe=safe)\r\n  File \"pyarrow/array.pxi\", line 265, in pyarrow.lib.array\r\n  File \"pyarrow/array.pxi\", line 80, in pyarrow.lib._ndarray_to_array\r\nTypeError: an integer is required (got type str)\r\n```\r\n\r\nNoticed on 0.15.1 and on master when we tried to upgrade. On 0.14.1, both cases gave ArrowTypeError.",
        "created_at": "2020-01-23T18:38:01.000Z",
        "updated_at": "2020-09-15T14:05:46.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-09-15T14:00:57.000Z"
    },
    "comments": [
        {
            "created_at": "2020-08-21T20:04:02.499Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7663?focusedCommentId=17182116) by Andrew Wieteska (arw2019):*\nOn 1.0 master I get an ArrowTypeError:\r\n\r\n\u00a0\r\n```java\n\r\nIn [10]: pa.Table.from_pandas(pd.DataFrame({\"a\": ['a', 1]})) \r\n---------------------------------------------------------------------------\r\nArrowTypeError Traceback (most recent call last)\r\n<ipython-input-10-36fa38ffb14b> in <module>\r\n----> 1 pa.Table.from_pandas(pd.DataFrame({\"a\": ['a', 1]}))\r\n~/git_repo/arrow/python/pyarrow/table.pxi in pyarrow.lib.Table.from_pandas()\r\n 1392 \"\"\"\r\n 1393 from pyarrow.pandas_compat import dataframe_to_arrays\r\n-> 1394 arrays, schema = dataframe_to_arrays(\r\n 1395 df,\r\n 1396 schema=schema,\r\n~/git_repo/arrow/python/pyarrow/pandas_compat.py in dataframe_to_arrays(df, schema, preserve_index, nthreads, columns, safe)\r\n 577 if nthreads == 1:\r\n 578 arrays = [convert_column(c, f)\r\n--> 579 for c, f in zip(columns_to_convert, convert_fields)]\r\n 580 else:\r\n 581 from concurrent import futures\r\n~/git_repo/arrow/python/pyarrow/pandas_compat.py in <listcomp>(.0)\r\n 577 if nthreads == 1:\r\n 578 arrays = [convert_column(c, f)\r\n--> 579 for c, f in zip(columns_to_convert, convert_fields)]\r\n 580 else:\r\n 581 from concurrent import futures\r\n~/git_repo/arrow/python/pyarrow/pandas_compat.py in convert_column(col, field)\r\n 563 e.args += (\"Conversion failed for column {!s} with type {!s}\"\r\n 564 .format(col.name, col.dtype),)\r\n--> 565 raise e\r\n 566 if not field_nullable and result.null_count > 0:\r\n 567 raise ValueError(\"Field {} was non-nullable but pandas column \"\r\n~/git_repo/arrow/python/pyarrow/pandas_compat.py in convert_column(col, field)\r\n 557 \r\n 558 try:\r\n--> 559 result = pa.array(col, type=type_, from_pandas=True, safe=safe)\r\n 560 except (pa.ArrowInvalid,\r\n 561 pa.ArrowNotImplementedError,\r\n~/git_repo/arrow/python/pyarrow/array.pxi in pyarrow.lib.array()\r\n 265 values, type = pandas_api.compat.get_datetimetz_type(\r\n 266 values, obj.dtype, type)\r\n--> 267 return _ndarray_to_array(values, mask, type, c_from_pandas, safe,\r\n 268 pool)\r\n 269 else:\r\n~/git_repo/arrow/python/pyarrow/array.pxi in pyarrow.lib._ndarray_to_array()\r\n 80 \r\n 81 with nogil:\r\n---> 82 check_status(NdarrayToArrow(pool, values, mask, from_pandas,\r\n 83 c_type, cast_options, &chunked_out))\r\n 84\r\n~/git_repo/arrow/python/pyarrow/error.pxi in pyarrow.lib.check_status()\r\n 105 raise ArrowNotImplementedError(message)\r\n 106 elif status.IsTypeError():\r\n--> 107 raise ArrowTypeError(message)\r\n 108 elif status.IsCapacityError():\r\n 109 raise ArrowCapacityError(message)\r\nArrowTypeError: (\"Expected a bytes object, got a 'int' object\", 'Conversion failed for column a with type object')\r\n```\r\n\u00a0\r\n\r\n\u00a0"
        },
        {
            "created_at": "2020-08-21T21:10:30.455Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7663?focusedCommentId=17182150) by David Li (lidavidm):*\n`[~arw2019]` it's the second case, which still fails for me:\r\n```\n\r\n>>> pa.Table.from_pandas(pd.DataFrame({\"a\": [1, 'a']}))\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"pyarrow/table.pxi\", line 1376, in pyarrow.lib.Table.from_pandas\r\n  File \"/home/lidavidm/Code/twosigma/arrow/venv/lib/python3.8/site-packages/pyarrow/pandas_compat.py\", line 578, in dataframe_to_arrays\r\n    arrays = [convert_column(c, f)\r\n  File \"/home/lidavidm/Code/twosigma/arrow/venv/lib/python3.8/site-packages/pyarrow/pandas_compat.py\", line 578, in <listcomp>\r\n    arrays = [convert_column(c, f)\r\n  File \"/home/lidavidm/Code/twosigma/arrow/venv/lib/python3.8/site-packages/pyarrow/pandas_compat.py\", line 559, in convert_column\r\n    result = pa.array(col, type=type_, from_pandas=True, safe=safe)\r\n  File \"pyarrow/array.pxi\", line 265, in pyarrow.lib.array\r\n  File \"pyarrow/array.pxi\", line 80, in pyarrow.lib._ndarray_to_array\r\nTypeError: an integer is required (got type str)\r\n```\r\nwhile not a big deal, the error message in the first case is a lot more informative"
        },
        {
            "created_at": "2020-08-21T21:15:35.605Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7663?focusedCommentId=17182153) by Andrew Wieteska (arw2019):*\nOk thanks for pointing that out! Both should work, I'll look into it"
        },
        {
            "created_at": "2020-09-15T14:00:57.400Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7663?focusedCommentId=17196169) by Joris Van den Bossche (jorisvandenbossche):*\nIssue resolved by pull request 8044\n<https://github.com/apache/arrow/pull/8044>"
        }
    ]
}