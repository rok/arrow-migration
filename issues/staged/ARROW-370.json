{
    "issue": {
        "title": "Python: Pandas conversion from `datetime.date` columns",
        "body": "***Note**: This issue was originally created as [ARROW-370](https://issues.apache.org/jira/browse/ARROW-370). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIt seems to be a common practice to store some columns as Python `datetime.date` to avoid issues with far future/past dates in Pandas. We can natively store this data in Arrow as well in Parquet but there is no conversion available yet. A simple way could be to provide a path pandas.Series -> numpy.ndarray(datetime64[D]) -> arrow.Array(DATE))",
        "created_at": "2016-11-08T09:49:37.000Z",
        "updated_at": "2022-08-27T14:41:56.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2017-02-05T18:17:40.000Z"
    },
    "comments": [
        {
            "created_at": "2016-11-08T15:42:17.252Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-370?focusedCommentId=15647890) by Wes McKinney (wesm):*\nI think we can do optimistic type inference on dtype=object columns like we are doing for strings and booleans  \u2013 see `ArrowSerializer<NPY_OBJECT>::Convert` \u2013 we can add a case for datetime.date objects"
        },
        {
            "created_at": "2022-08-27T14:41:56.318Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-370?focusedCommentId=17585938) by @toddfarmer:*\nTransitioning issue from Resolved to Closed to based on resolution field value."
        }
    ]
}