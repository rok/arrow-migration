{
    "issue": {
        "title": "[Java] Method can return the value bigger than long MAX_VALUE",
        "body": "***Note**: This issue was originally created as [ARROW-61](https://issues.apache.org/jira/browse/ARROW-61). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nMethod org.apache.drill.exec.util.DecimalUtility.adjustScaleMultiply(long input, int factor) can return the value bigger than long max value.\nFor example by comparison two decimal18 values 9223372036854775807 and 0.001. To adjust first value scale this method should return 9223372036854775807 \\* 1000 - bigger than long max value.\n\nClass DecimalUtility.java will be a part of org.apache.arrow after renaming described in [DRILL-4455 Depend on Apache Arrow for Vector and Memory\\| https://issues.apache.org/jira/browse/DRILL-4455]",
        "created_at": "2016-03-10T10:11:42.000Z",
        "updated_at": "2019-05-09T19:30:55.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-05-09T19:30:55.000Z"
    },
    "comments": [
        {
            "created_at": "2016-05-12T21:43:44.712Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-61?focusedCommentId=15282105) by Fangzhou (lfz_carlos):*\nCould you please clarify which method has the problem?"
        },
        {
            "created_at": "2016-05-19T15:00:16.366Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-61?focusedCommentId=15291231) by Vitalii Diravka (vitalii):*\n[~lfz_carlos] This is adjustScaleMultiply(long input, int factor) method. I have already mentioned where it is in drill.\nIn apache arrow this is org/apache/arrow/vector/util/DecimalUtility.java class.\n```Java\npublic static long adjustScaleMultiply(long input, int factor) {\n      int index = Math.abs(factor);\n      assert index >= 0 && index < scale_long_constants.length;\n      if (factor >= 0) {\n        return input * scale_long_constants[index];\n      } else {\n        return input / scale_long_constants[index];\n      }\n    }\n```"
        },
        {
            "created_at": "2019-03-30T20:09:56.287Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-61?focusedCommentId=16805954) by Wes McKinney (wesm):*\nIs this still an issue?"
        },
        {
            "created_at": "2019-05-07T04:44:46.763Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-61?focusedCommentId=16834378) by Ji Liu (tianchen92):*\n`[~wesmckinn]` I checked the code and found\u00a0that the problem still exists. BTW, Drill have removed these methods in [DRILL-6421](https://issues.apache.org/jira/browse/DRILL-6421), I would like to provide a PR to remove these unused methods, what do you think?"
        },
        {
            "created_at": "2019-05-07T12:04:06.281Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-61?focusedCommentId=16834685) by Wes McKinney (wesm):*\nSure, please go ahead"
        },
        {
            "created_at": "2019-05-07T12:18:54.472Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-61?focusedCommentId=16834702) by Ji Liu (tianchen92):*\n`[~wesmckinn]` Thanks very much for your reply, I have submitted a [PR\\|[https://github.com/apache/arrow/pull/4266]], please take a look, thanks!"
        }
    ]
}