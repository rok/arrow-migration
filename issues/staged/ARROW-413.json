{
    "issue": {
        "title": "DATE type is not specified clearly",
        "body": "***Note**: This issue was originally created as [ARROW-413](https://issues.apache.org/jira/browse/ARROW-413). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently the DATE type is not specified anywhere and needs to be documented.",
        "created_at": "2016-12-09T17:03:21.000Z",
        "updated_at": "2017-03-25T22:29:54.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Format",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2017-03-25T22:29:54.000Z"
    },
    "comments": [
        {
            "created_at": "2016-12-09T17:06:31.971Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-413?focusedCommentId=15735807) by Uwe Korn (uwe):*\nI guess this is the equivalent of the DATE enum in Parquet (an int32 that stores the number of days from the Unix epoch, 1 January 1970) ? Then I would add a specification along that way."
        },
        {
            "created_at": "2016-12-09T19:06:16.778Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-413?focusedCommentId=15736035) by Julien Le Dem (julienledem):*\nSame as Parquet sounds good to me.\n`[~jnadeau]`?"
        },
        {
            "created_at": "2016-12-09T19:06:55.176Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-413?focusedCommentId=15736037) by Julien Le Dem (julienledem):*\nFor reference the java code:\nhttps://github.com/apache/arrow/blob/8995c923043788f98afef4dd80f72de4688a8e0c/java/vector/src/main/codegen/templates/FixedValueVectors.java#L487\n```\n <#if minor.class == \"Date\">\n    @Override\n    public ${friendlyType} getObject(int index) {\n        org.joda.time.DateTime date = new org.joda.time.DateTime(get(index), org.joda.time.DateTimeZone.UTC);\n        date = date.withZoneRetainFields(org.joda.time.DateTimeZone.getDefault());\n        return date;\n    }\n```"
        },
        {
            "created_at": "2016-12-09T20:16:14.148Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-413?focusedCommentId=15736242) by Uwe Korn (uwe):*\nLooking at the current implementation, it seems that the constructor of `org.joda.time.DateTime` is called with a `long` and thus is interpreted by joda as milliseconds since 1970. So it actually is similar to Timestamp expect that it has no explicit unit."
        },
        {
            "created_at": "2016-12-09T20:27:11.801Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-413?focusedCommentId=15736269) by Jacques Nadeau (jnadeau):*\nI'm more inclined to keeping the \"rounded\" long format. This is due to the common use of this pattern in libraries (rather than having to convert when operating against). This is different from Parquet in that Parquet can go for compactness. My $0.02.\n\nAnybody feel strongly in other ways?"
        },
        {
            "created_at": "2016-12-10T08:23:02.710Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-413?focusedCommentId=15737489) by Uwe Korn (uwe):*\nThe rounded long format is quite new to me and I don't really understand the benefits of having it in comparison to the Timestamp. I'm not strongly against it but then I might want to look into adding more units to the Timestamp time (minute, hour, day) so that we can also have a type where a value of 1 equals 1 day."
        },
        {
            "created_at": "2016-12-13T19:10:40.412Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-413?focusedCommentId=15745970) by Wes McKinney (wesm):*\nI'm more accustomed to int32 UNIX days \u2013 do you take advantage of cheap casting between millisecond timestamp and date (simply ignoring the non-date part of the datetime)? "
        },
        {
            "created_at": "2016-12-13T20:25:28.320Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-413?focusedCommentId=15746169) by Julian Hyde (julianhyde):*\nI think you have to specify semantics. Does a date value represent an instant (implicitly an offset from the UTC epoch) or is it a timezone-less value that each person can interpret in whichever timezone they want (say, their local timezone)."
        },
        {
            "created_at": "2016-12-13T20:34:37.962Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-413?focusedCommentId=15746195) by Julian Hyde (julianhyde):*\nBy the way, Phoenix uses longs to represent dates and not all the code rounds them (`d -= d % 86,400,000`) and it gets tricky. (Who's going to burn CPU cycles rounding a value that they're 99.9% sure has been rounded?!) As a result you're never quite sure whether two date values have been rounded, and sometimes someone from Moscow writes some data that drifts into the previous day."
        },
        {
            "created_at": "2016-12-14T18:55:43.013Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-413?focusedCommentId=15749135) by Jacques Nadeau (jnadeau):*\nWe found it useful in java land as many of the prebuilt libraries use this construct. It makes doing date math much less work. Example: org.joda.time.LocalDate and the joda-derived JDK8+ java.time.LocalDate"
        },
        {
            "created_at": "2016-12-14T18:57:12.683Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-413?focusedCommentId=15749143) by Jacques Nadeau (jnadeau):*\nI agree. I think it should be timezone-less. Basically the same semantics of java.time.Local[Date\\|DateTime|Time]"
        },
        {
            "created_at": "2017-03-09T18:16:17.715Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-413?focusedCommentId=15903535) by Bryan Cutler (bryanc):*\nI started working on ARROW-582, to add Date/Time to JSON files, so I thought I would bump this to see if a conclusion has been reached?"
        },
        {
            "created_at": "2017-03-09T18:19:47.943Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-413?focusedCommentId=15903544) by Uwe Korn (uwe):*\n`[~bryanc]` yes, DATE is milliseconds since 1970 but only the date part is used / interpret. What is missing to close this story is the addition to the format documentation."
        },
        {
            "created_at": "2017-03-25T22:29:54.763Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-413?focusedCommentId=15942010) by Wes McKinney (wesm):*\nThis was resolved in ARROW-316"
        }
    ]
}