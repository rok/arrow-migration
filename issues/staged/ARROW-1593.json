{
    "issue": {
        "title": "[PYTHON] serialize_pandas should pass through the preserve_index keyword",
        "body": "***Note**: This issue was originally created as [ARROW-1593](https://issues.apache.org/jira/browse/ARROW-1593). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI'm doing some benchmarking of Arrow serialization for dask.distributed to serialize dataframes.\n\nOverall things look good compared to the current implementation (using pickle). The biggest difference was pickle's ability to use pandas' RangeIndex to avoid serializing the entire Index of values when possible.\n\nI suspect that a \"range type\" isn't in scope for arrow, but in the meantime applications using Arrow could detect the `RangeIndex`, and pass ` pyarrow.serialize_pandas(df, preserve_index=False) ` ",
        "created_at": "2017-09-21T16:37:41.000Z",
        "updated_at": "2017-10-10T01:03:25.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2017-10-10T01:03:25.000Z"
    },
    "comments": [
        {
            "created_at": "2017-09-21T16:42:53.650Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1593?focusedCommentId=16175077) by Wes McKinney (wesm):*\nThat seems reasonable. We could also address the range index by augmenting the metadata in http://pandas-docs.github.io/pandas-docs-travis/developer.html\n\nI have spent significantly less time optimizing `RecordBatch.from_pandas` than `RecordBatch/Table.to_pandas`, so there's likely some perf improvements that could be made on the ingest to Arrow path (e.g. parallel column conversions)"
        },
        {
            "created_at": "2017-10-10T01:03:25.475Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1593?focusedCommentId=16197977) by Wes McKinney (wesm):*\nIssue resolved by pull request 1190\n<https://github.com/apache/arrow/pull/1190>"
        }
    ]
}