{
    "issue": {
        "title": "[C++][Dataset] Make Expressions available for projection",
        "body": "***Note**: This issue was originally created as [ARROW-11174](https://issues.apache.org/jira/browse/ARROW-11174). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nRecordBatchProjector should be replaced by an expression calling the \"project\" compute function.\r\n\r\nProjection currently supports only reordering and subselection of fields, materializing virtual columns where necessary. Replacement with an Expression will enable specifying arbitrary expressions for projected columns:\r\n```java\n\r\n// project an explicit selection:\r\n// SELECT a as \"a\", b as \"b\" ...\r\nproject({field_ref(\"a\"), field_ref(\"b\")}, {\"a\", \"b\"});\r\n\r\n// project an arithmetic expression:\r\n// SELECT a + b as \"a + b\" ...\r\nproject({add(field_ref(\"a\"), field_ref(\"b\"))}, {\"a + b\"})\n```\r\nThis will also allow the same expression optimization machinery used for filters to be directly applied to projections. Virtual columns become a consequence of constant folding:\r\n```java\n\r\n// project in a partition where a == 3:\r\nassert(\r\n  SimplifyWithGuarantee(\r\n    project({field_ref(\"a\"), field_ref(\"b\")}, {\"a\", \"b\"}),\r\n    equal(field_ref(\"a\"), literal(3))\r\n  )\r\n  == project({literal(3), field_ref(\"b\")}, {\"a\", \"b\"})\r\n)\n```\r\n\u00a0",
        "created_at": "2021-01-07T21:56:26.000Z",
        "updated_at": "2021-03-22T16:08:47.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-02-26T22:04:13.000Z"
    },
    "comments": [
        {
            "created_at": "2021-02-26T22:04:13.119Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11174?focusedCommentId=17291933) by Neal Richardson (npr):*\nIssue resolved by pull request 9532\n<https://github.com/apache/arrow/pull/9532>"
        }
    ]
}