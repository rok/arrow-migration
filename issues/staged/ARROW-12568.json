{
    "issue": {
        "title": "[Python][C++] Segfault when casting a sliced ListArray of int64 in v4.0.0",
        "body": "***Note**: This issue was originally created as [ARROW-12568](https://issues.apache.org/jira/browse/ARROW-12568). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nHi !\r\n\r\nI just updated to pyarrow 4.0.0 and I noticed that a segfault happens when casting a sliced ListArray of int64. It crashes on both linux and windows. Here is a code to reproduce:\r\n\r\n```python\n\r\nimport pyarrow as pa\r\n\r\narr = pa.array([[i * 10] for i in range(4)])\r\nprint(type(arr))  # <class 'pyarrow.lib.ListArray'>\r\nprint(arr.type)  # list<item: int64>\r\narr.cast(pa.list_(pa.int32()))  # works\r\nprint(\">>> Casting without slicing works\")\r\n\r\narr = arr.slice(1)\r\nprint(type(arr))  # <class 'pyarrow.lib.ListArray'>\r\nprint(arr.type)  # list<item: int64>\r\narr.cast(pa.list_(pa.int32()))  # crashes !!\r\nprint(\">>> This message isn't printed because casting with slicing causes a segfault\")\r\n```\r\n\r\nOn pyarrow 3.0.0 I used to get\r\n```python\n\r\nArrowNotImplementedError(\"Casting sliced lists (non-zero offset) not yet implemented\")\r\n```\r\n instead of the segfault.\r\n\r\nThanks in advance for your help !",
        "created_at": "2021-04-27T13:40:30.000Z",
        "updated_at": "2021-05-03T15:45:49.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-05-03T15:37:31.000Z"
    },
    "comments": [
        {
            "created_at": "2021-04-28T05:49:03.024Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12568?focusedCommentId=17334466) by yibocai#1 (yibocai#1):*\nFrom gdb, the error is at https://github.com/apache/arrow/blob/3a6f6053c74eb698208395091009ac50be9dc29e/cpp/src/arrow/compute/kernels/scalar_cast_nested.cc#L69\r\n\r\nSecond augment \"in_array.buffers[0]->data()\" deferences nullptr as \"in_array.buffers[0]\" can be null.\r\n\r\nLooks a critical bug."
        },
        {
            "created_at": "2021-05-03T15:37:31.172Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12568?focusedCommentId=17338430) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 10184\n<https://github.com/apache/arrow/pull/10184>"
        },
        {
            "created_at": "2021-05-03T15:40:15.858Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12568?focusedCommentId=17338431) by quentin lhoest (lhoestq):*\nThanks !"
        }
    ]
}