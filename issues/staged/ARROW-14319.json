{
    "issue": {
        "title": "[Python] Rewrite pyarrow.jvm using the C data interface",
        "body": "***Note**: This issue was originally created as [ARROW-14319](https://issues.apache.org/jira/browse/ARROW-14319). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe `pyarrow.jvm` is currently a custom-written bridge between PyArrow and Arrow Java, with limited datatype support. Now that Java implements the C data interface (see ARROW-12965), we should be able to simplify the code while making it more general.\r\n\r\nAlso, we should reenable the `conda-python-jpype` build somewhere, for example in the Crossbow nightly builds.",
        "created_at": "2021-10-14T12:51:52.000Z",
        "updated_at": "2022-08-26T16:19:06.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Component: Python",
            "Type: task"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-10-16T20:54:38.068Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14319?focusedCommentId=17429616) by Roee Shlomo (roee88):*\nI assume that backward compatibility is not required for internal use methods (i.e., starting with an underscore). What about jvm_buffer, should it just be kept as is?"
        },
        {
            "created_at": "2021-10-16T21:09:07.312Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14319?focusedCommentId=17429618) by Antoine Pitrou (apitrou):*\njvm_buffer should probably be kept, yes. We may also want to deprecate it (it's not obvious it's useful in isolation).\r\n\r\nAs for your other question: indeed, methods starting with an underscore do not enter into backward compatibility concerns."
        },
        {
            "created_at": "2021-10-17T05:46:02.265Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14319?focusedCommentId=17429651) by Roee Shlomo (roee88):*\nI suspect that a better approach would be to create a new module and keep pyarrow.jvm as is:\r\n1. Backward compatibility seems like a challenge. There must be a reference provided to\u00a0org.apache.arrow.c so ArrowSchema, ArrowArray and the various import/export functions would be available on the python side. In addition, all C data interface methods require an allocator as a parameter. These are not provided in the current pyarrow.jvm API.\u00a0\n1. The current pyarrow.jvm module works with a pure java build of Arrow Java, while the C data interface requires building a small JNI library. Unless you rely on end users to build the Java jar on their own, packaging the JNI lib will be required for all platforms targeted by pyarrow."
        },
        {
            "created_at": "2021-10-17T09:36:12.592Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14319?focusedCommentId=17429673) by Antoine Pitrou (apitrou):*\ncc `[~uwe]`"
        },
        {
            "created_at": "2021-11-03T18:55:13.192Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14319?focusedCommentId=17438248) by Roee Shlomo (roee88):*\n`[~apitrou]` \u00a0feel free to reuse code from my attempt the other day <https://gist.github.com/roee88/4aa7dfeceb2d8c3d8868ed8465ebf561>\u00a0if that helps. It's based on the java-python integration tests code for ARROW-14374 (with the original test_jvm.py tests updated)."
        },
        {
            "created_at": "2021-11-03T18:59:38.170Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14319?focusedCommentId=17438251) by Antoine Pitrou (apitrou):*\n`[~amol-]` ^^"
        },
        {
            "created_at": "2022-08-26T16:05:52.846Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14319?focusedCommentId=17585508) by @toddfarmer:*\nThis issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned per [project policy](https://arrow.apache.org/docs/dev/developers/bug_reports.html#issue-assignment). Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon."
        }
    ]
}