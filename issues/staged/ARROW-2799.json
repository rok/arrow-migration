{
    "issue": {
        "title": "[Python] Add safe option to Table.from_pandas to avoid unsafe casts",
        "body": "***Note**: This issue was originally created as [ARROW-2799](https://issues.apache.org/jira/browse/ARROW-2799). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nPorted over from <https://github.com/apache/arrow/issues/2217>\r\n\r\n\r\n```python\r\nIn [8]: import pandas as pd\r\n   ...: import pyarrow as arw\r\n\r\nIn [9]: df = pd.DataFrame({'A': list('abc'), 'B': np.arange(3)})\r\n   ...: df\r\nOut[9]:\r\n   A  B\r\n0  a  0\r\n1  b  1\r\n2  c  2\r\n\r\nIn [10]: schema = arw.schema([\r\n    ...:     arw.field('A', arw.string()),\r\n    ...:     arw.field('B', arw.int32()),\r\n    ...: ])\r\n\r\nIn [11]: tbl = arw.Table.from_pandas(df, preserve_index=False, schema=schema)\r\n    ...: tbl\r\nOut[11]:\r\npyarrow.Table\r\nA: string\r\nB: int32\r\nmetadata\r\n--------\r\n{b'pandas': b'{\"index_columns\": [], \"column_indexes\": [], \"columns\": [{\"name\":'\r\n            b' \"A\", \"field_name\": \"A\", \"pandas_type\": \"unicode\", \"numpy_type\":'\r\n            b' \"object\", \"metadata\": null}, {\"name\": \"B\", \"field_name\": \"B\", \"'\r\n            b'pandas_type\": \"int32\", \"numpy_type\": \"int32\", \"metadata\": null}]'\r\n            b', \"pandas_version\": \"0.23.1\"}'}\r\n\r\nIn [12]: tbl.to_pandas().equals(df)\r\nOut[12]: True\r\n```\r\n...so if the `schema` matches the pandas datatypes all is well - we can roundtrip the DataFrame.\r\n\r\nNow, say we have some bad data such that column 'B' is now of type float64. The datatypes of the DataFrame don't match the explicitly supplied `schema` object but rather than raising a `TypeError` the data is silently truncated and the roundtrip DataFrame doesn't match our input DataFame without even a warning raised!\r\n```python\r\nIn [13]: df['B'].iloc[0] = 1.23\r\n    ...: df\r\nOut[13]:\r\n   A     B\r\n0  a  1.23\r\n1  b  1.00\r\n2  c  2.00\r\n\r\nIn [14]: # I would expect/want this to raise a TypeError since the schema doesn't match the pandas datatypes\r\n    ...: tbl = arw.Table.from_pandas(df, preserve_index=False, schema=schema)\r\n    ...: tbl\r\nOut[14]:\r\npyarrow.Table\r\nA: string\r\nB: int32\r\nmetadata\r\n--------\r\n{b'pandas': b'{\"index_columns\": [], \"column_indexes\": [], \"columns\": [{\"name\":'\r\n            b' \"A\", \"field_name\": \"A\", \"pandas_type\": \"unicode\", \"numpy_type\":'\r\n            b' \"object\", \"metadata\": null}, {\"name\": \"B\", \"field_name\": \"B\", \"'\r\n            b'pandas_type\": \"int32\", \"numpy_type\": \"float64\", \"metadata\": null'\r\n            b'}], \"pandas_version\": \"0.23.1\"}'}\r\n\r\nIn [15]: tbl.to_pandas()  # <-- SILENT TRUNCATION!!!\r\nOut[15]:\r\n   A  B\r\n0  a  1\r\n1  b  1\r\n2  c  2\r\n\r\n```\r\n\r\nTo be clear, I would really like `Table.from_pandas` to raise a `TypeError` if the DataFrame types don't match an explicitly supplied schema and would hope this current behaviour would be considered a bug.\r\n",
        "created_at": "2018-07-06T10:16:52.000Z",
        "updated_at": "2018-09-08T18:19:24.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2018-09-08T16:08:08.000Z"
    },
    "comments": [
        {
            "created_at": "2018-07-06T10:21:32.883Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2799?focusedCommentId=16534659) by Dave Hirschfeld (dhirschfeld):*\nThe recommendation by wesm was to add a `safe/unsafe` option to `Table.from_pandas`"
        },
        {
            "created_at": "2018-07-06T14:47:57.433Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2799?focusedCommentId=16534930) by Wes McKinney (wesm):*\nI renamed the issue slightly"
        },
        {
            "created_at": "2018-09-01T15:44:40.272Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2799?focusedCommentId=16599658) by Krisztian Szucs (kszucs):*\nNOTE: We need a castoption for the float case."
        },
        {
            "created_at": "2018-09-01T19:31:37.843Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2799?focusedCommentId=16599716) by Wes McKinney (wesm):*\nMaybe sooner than later we should expose more granular cast options in all of these functions"
        },
        {
            "created_at": "2018-09-08T16:08:09.010Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2799?focusedCommentId=16608101) by Uwe Korn (uwe):*\nIssue resolved by pull request 2504\n<https://github.com/apache/arrow/pull/2504>"
        }
    ]
}