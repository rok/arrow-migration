{
    "issue": {
        "title": "[C++] Vector kernel for \"intersecting\" two arrays (all common elements)",
        "body": "***Note**: This issue was originally created as [ARROW-18098](https://issues.apache.org/jira/browse/ARROW-18098). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThis would be similar to numpy's `intersect1d` (https://numpy.org/doc/stable/reference/generated/numpy.intersect1d.html)",
        "created_at": "2022-10-19T08:22:20.000Z",
        "updated_at": "2022-11-18T17:39:58.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-10-25T21:51:34.442Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18098?focusedCommentId=17624063) by Will Ayd (willayd):*\nI can take a look at this. My initial thought is we can just treat the two arrays as a chunked array, apply the sort against that then proceed element-wise to compare values and keep those that are repeated (essentially what NumPy does). Will explore some more"
        },
        {
            "created_at": "2022-10-26T08:13:05.215Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18098?focusedCommentId=17624289) by Joris Van den Bossche (jorisvandenbossche):*\nIt seems that numpy also first calculates the uniques before sorting."
        }
    ]
}