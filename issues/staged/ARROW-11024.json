{
    "issue": {
        "title": "[C++][Parquet] Writing List<Struct> to parquet sometimes writes wrong data",
        "body": "***Note**: This issue was originally created as [ARROW-11024](https://issues.apache.org/jira/browse/ARROW-11024). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n\u00a0Sometimes when writing tables that contain List<Struct> columns, the data is written incorrectly. Here is a code sample that produces the error. There are no exceptions raised here, but a simple equality check via equals() yields False for the second test case...\u00a0\r\n\r\n\u00a0\r\n```java\n\r\nimport pyarrow as pa\r\nimport pyarrow.parquet as pq\r\n\r\n# Write small amount of data to parquet file, and read it back. In this case, both tables are equal.\r\ndata1 = [[{'x':'abc','y':'abc'}]]*100 + [[{'x':'abc','y':'gcb'}]]*100\r\narray1 = pa.array(data1)\r\ntable1 = pa.table([array1],names=['column'])\r\npq.write_table(table1,'temp1.parquet')\r\ntable1_1 = pq.read_table('temp1.parquet')\r\nprint(table1_1.equals(table1))\r\n\r\n# Write larger amount of data to parquet file, and read it back. In this case, the tables are not equal.\r\ndata2 = data1*100\r\narray2 = pa.array(data2)\r\ntable2 = pa.table([array2],names=['column'])\r\npq.write_table(table2,'temp2.parquet')\r\ntable2_1 = pq.read_table('temp2.parquet')\r\nprint(table2_1.equals(table2))\r\n\r\n```\r\n\u00a0\r\n\r\n\u00a0",
        "created_at": "2020-12-24T05:57:05.000Z",
        "updated_at": "2021-01-06T16:07:31.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-01-06T16:07:20.000Z"
    },
    "comments": [
        {
            "created_at": "2021-01-04T10:32:03.954Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11024?focusedCommentId=17258124) by Joris Van den Bossche (jorisvandenbossche):*\n`[~georgedeamont]` thanks for the report! I can confirm that this doesn't roundtrip correctly on pyarrow 2.0. But, it seems already fixed on master (and we plan to release 3.0 in around 2 weeks).  \r\n\r\nI suppose it was probably fixed by ARROW-10493"
        },
        {
            "created_at": "2021-01-04T10:36:13.029Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11024?focusedCommentId=17258129) by Joris Van den Bossche (jorisvandenbossche):*\nYes, it could also be reproduced using pyarrow 2.0 with the smaller dataset when limiting the size of the row groups:\r\n\r\n```Java\n\r\nIn [47]: import pyarrow as pa\r\n    ...: import pyarrow.parquet as pq\r\n    ...: \r\n    ...: # Write small amount of data to parquet file, and read it back. In this case, both tables are equal.\r\n    ...: data1 = [[{'x':'abc','y':'abc'}]]*100 + [[{'x':'abc','y':'gcb'}]]*100\r\n    ...: array1 = pa.array(data1)\r\n    ...: table1 = pa.table([array1],names=['column'])\r\n    ...: pq.write_table(table1,'temp1.parquet', row_group_size=20)\r\n    ...: table1_1 = pq.read_table('temp1.parquet')\r\n    ...: print(table1_1.equals(table1))\r\nFalse\r\n```\r\n\r\nSo this was fixed by ARROW-10493. Adding an additional python test maybe can't hurt. Will quickly do that."
        },
        {
            "created_at": "2021-01-06T16:07:20.216Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11024?focusedCommentId=17259836) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 9091\n<https://github.com/apache/arrow/pull/9091>"
        }
    ]
}