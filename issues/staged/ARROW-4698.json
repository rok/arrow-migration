{
    "issue": {
        "title": "[C++] Let StringBuilder be constructible with a pre allocated buffer for character data",
        "body": "***Note**: This issue was originally created as [ARROW-4698](https://issues.apache.org/jira/browse/ARROW-4698). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThis is useful for example when an existing buffer can be immediately reused. This is currently used for [storage of strings in json parsing](https://github.com/apache/arrow/blob/master/cpp/src/arrow/json/parser.cc#L60), so it'd be straightforward to refactor into a constructor of StringBuilder.",
        "created_at": "2019-02-27T19:25:23.000Z",
        "updated_at": "2021-08-04T10:02:05.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2019-04-17T15:29:43.098Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4698?focusedCommentId=16820200) by Antoine Pitrou (apitrou):*\nDo you still need this?\r\n\r\nAnother possibility would be to implement a caching memory pool (ARROW-3406)."
        },
        {
            "created_at": "2019-04-22T14:55:46.899Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4698?focusedCommentId=16823157) by Wes McKinney (wesm):*\nThis seems hypothetically useful to avoid an extra copy step if you have a partially-constructed MutableBuffer that you wish to continue appending to. The construction requirements are a bit onerous though, since the internal state of the builder needs to be exactly right"
        },
        {
            "created_at": "2021-08-04T10:02:05.882Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4698?focusedCommentId=17392965) by Antoine Pitrou (apitrou):*\nThe first step here may be to add this functionality to BufferBuilder /  TypedBufferBuilder."
        }
    ]
}