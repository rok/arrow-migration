{
    "issue": {
        "title": "[Python] Exception when writing nested columns that are tuples to parquet",
        "body": "***Note**: This issue was originally created as [ARROW-4814](https://issues.apache.org/jira/browse/ARROW-4814). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI get an exception when I try to write a `pandas.DataFrame` to a parquet file where one of the columns has tuples in them.  I use tuples here because it allows for easier querying in pandas (see ARROW-3806 for a more detailed description).\r\n\r\n```Java\n\r\nTraceback (most recent call last):\r\n  File \"df_to_parquet_fail.py\", line 5, in <module>\r\n    df.to_parquet(\"test.parquet\")  # crashes\r\n  File \"/home/user/.local/lib/python3.6/site-packages/pandas/core/frame.py\", line 2203, in to_parquet                                                                                       \r\n    partition_cols=partition_cols, **kwargs)\r\n  File \"/home/user/.local/lib/python3.6/site-packages/pandas/io/parquet.py\", line 252, in to_parquet                                                                                        \r\n    partition_cols=partition_cols, **kwargs)\r\n  File \"/home/user/.local/lib/python3.6/site-packages/pandas/io/parquet.py\", line 113, in write                                                                                             \r\n    table = self.api.Table.from_pandas(df, **from_pandas_kwargs)\r\n  File \"pyarrow/table.pxi\", line 1141, in pyarrow.lib.Table.from_pandas\r\n  File \"/home/user/.local/lib/python3.6/site-packages/pyarrow/pandas_compat.py\", line 431, in dataframe_to_arrays                                                                           \r\n    convert_types)]\r\n  File \"/home/user/.local/lib/python3.6/site-packages/pyarrow/pandas_compat.py\", line 430, in <listcomp>                                                                                    \r\n    for c, t in zip(columns_to_convert,\r\n  File \"/home/user/.local/lib/python3.6/site-packages/pyarrow/pandas_compat.py\", line 426, in convert_column                                                                                \r\n    raise e\r\n  File \"/home/user/.local/lib/python3.6/site-packages/pyarrow/pandas_compat.py\", line 420, in convert_column                                                                                \r\n    return pa.array(col, type=ty, from_pandas=True, safe=safe)\r\n  File \"pyarrow/array.pxi\", line 176, in pyarrow.lib.array\r\n  File \"pyarrow/array.pxi\", line 85, in pyarrow.lib._ndarray_to_array\r\n  File \"pyarrow/error.pxi\", line 81, in pyarrow.lib.check_status\r\npyarrow.lib.ArrowInvalid: (\"Could not convert ('G',) with type tuple: did not recognize Python value type when inferring an Arrow data type\", 'Conversion failed for column ALTS with type object')\r\n```\r\n\r\nThe issue maybe replicated with the attached script and csv file.",
        "created_at": "2019-03-10T09:55:57.000Z",
        "updated_at": "2019-05-08T16:14:39.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-05-08T16:14:39.000Z"
    },
    "comments": [
        {
            "created_at": "2019-03-11T17:17:18.634Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4814?focusedCommentId=16789782) by David Lee (davlee1972@yahoo.com):*\nSame issue as https://issues.apache.org/jira/browse/ARROW-1644. I also don't think you can just write\u00a0a tuple to parquet without defined names for each tuple element. A tuple doesn't really convert into the JSON schema model. \r\n\r\n<https://github.com/apache/parquet-format/blob/master/LogicalTypes.md>\r\n\r\n\u00a0"
        },
        {
            "created_at": "2019-05-08T15:11:21.305Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4814?focusedCommentId=16835671) by Joris Van den Bossche (jorisvandenbossche):*\nThis is actually a different issue (not related to Parquet). The failure already happens on the conversion to an arrow Table, because pyarrow does not yet support an array of tuples out of the box:\r\n\r\n```Java\n\r\nIn [75]: df = pd.DataFrame({'tuples': pd.Series([('A'), ('B',)], dtype=object)})                                                                              \r\n\r\nIn [76]: pa.Table.from_pandas(df)                                                                                                                             \r\n...\r\nArrowTypeError: (\"Expected a bytes object, got a 'tuple' object\", 'Conversion failed for column tuples with type object')\r\n```\r\n\r\nHowever, if you specify a schema indicating a ListType of strings, it works:\r\n\r\n```Java\n\r\nIn [77]: schema = pa.schema([('tuples', pa.list_(pa.string()))])                                                                                              \r\n\r\nIn [78]: pa.Table.from_pandas(df, schema=schema)                                                                                                              \r\nOut[78]: \r\npyarrow.Table\r\ntuples: list<item: string>\r\n  child 0, item: string\r\nmetadata\r\n--------\r\n{b'pandas': b'{\"index_columns\": [{\"kind\": \"range\", \"name\": null, \"start\": 0, \"'\r\n            b'stop\": 2, \"step\": 1}], \"column_indexes\": [{\"name\": null, \"field_'\r\n            b'name\": null, \"pandas_type\": \"unicode\", \"numpy_type\": \"object\", \"'\r\n            b'metadata\": {\"encoding\": \"UTF-8\"}}], \"columns\": [{\"name\": \"tuples'\r\n            b'\", \"field_name\": \"tuples\", \"pandas_type\": \"list[unicode]\", \"nump'\r\n            b'y_type\": \"object\", \"metadata\": null}], \"creator\": {\"library\": \"p'\r\n            b'yarrow\", \"version\": \"0.13.1.dev130+gdd335952\"}, \"pandas_version\"'\r\n            b': \"0.24.2\"}'}\r\n```\r\n\r\nand such a table also writes to Parquet fine.\r\n\r\nSo the actual issue is more about: support for inferring tuples (I removed the parquet label)"
        },
        {
            "created_at": "2019-05-08T16:14:39.180Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4814?focusedCommentId=16835723) by Joris Van den Bossche (jorisvandenbossche):*\nI opened ARROW-5286 to also support specifying a struct type (in addition to list type as I showed above), and https://issues.apache.org/jira/browse/ARROW-5287 with the question whether we should do automatic type inference for tuples, so your example case above would work automatically.\r\n\r\nTherefore, closing this issue, as those other two should cover the remaining questions. \r\n"
        }
    ]
}