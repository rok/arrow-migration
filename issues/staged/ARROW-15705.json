{
    "issue": {
        "title": "[JavaScript] Structs don't append nulls properly",
        "body": "***Note**: This issue was originally created as [ARROW-15705](https://issues.apache.org/jira/browse/ARROW-15705). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIf you have a StructBuilder, then the `set` method (which is inherited from `Builder`) on it will modify the null-bitmap and then return directly due to this snippet:\r\n```javascript\n\r\npublic set(index: number, value: T['TValue'] | TNull) {\r\n        if (this.setValid(index, this.isValid(value))) {\r\n            this.setValue(index, value);\r\n        }\r\n        return this;\r\n    }\r\n```\r\n\u00a0\r\nI believe this breaks the spec, as it results in the children arrays not having their lengths and null-counts increased. (At least the Rust implementation expects child arrays to be the same length as their parent struct array, and the spec seems to imply that's a requirement)\r\n\r\nI think there's an easy fix which would be to call `this.setValue` for `StructBuilder`s regardless of `this.isValid(value)`\r\n\r\nRelated to https://issues.apache.org/jira/browse/ARROW-15651",
        "created_at": "2022-02-16T18:29:47.000Z",
        "updated_at": "2022-05-09T08:52:43.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: JavaScript",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-04-18T14:41:40.000Z"
    },
    "comments": [
        {
            "created_at": "2022-04-18T14:41:40.900Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15705?focusedCommentId=17523733) by Dominik Moritz (domoritz):*\nIssue resolved by pull request 12451\n<https://github.com/apache/arrow/pull/12451>"
        }
    ]
}