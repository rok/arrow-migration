{
    "issue": {
        "title": "[C++] Kernel implementations for \"match\" function",
        "body": "***Note**: This issue was originally created as [ARROW-1560](https://issues.apache.org/jira/browse/ARROW-1560). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nMatch computes a position index array from an array values into a set of categories\n\n```Java\nmatch(['a', 'b', 'a', null, 'b', 'a', 'b'], ['b', 'a'])\n\nreturn [1, 0, 1, null, 0, 1, 0]\n```",
        "created_at": "2017-09-19T21:51:44.000Z",
        "updated_at": "2020-03-12T21:54:08.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-03-12T21:54:08.000Z"
    },
    "comments": [
        {
            "created_at": "2018-09-15T17:19:55.091Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1560?focusedCommentId=16616405) by Atri Sharma (atris):*\nCan someone please assign this to me?"
        },
        {
            "created_at": "2018-09-15T17:35:24.570Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1560?focusedCommentId=16616411) by Uwe Korn (uwe):*\n`[~atris]` Assigned you"
        },
        {
            "created_at": "2018-09-16T13:08:30.320Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1560?focusedCommentId=16616710) by Atri Sharma (atris):*\nThanks!"
        },
        {
            "created_at": "2019-01-22T07:27:27.448Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1560?focusedCommentId=16748453) by Micah Kornfield (emkornfield@gmail.com):*\nIs the intended output an array of the smallest numeric type capable of holding the index (or some fixed size)?"
        },
        {
            "created_at": "2019-01-22T09:22:04.785Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1560?focusedCommentId=16748530) by Uwe Korn (uwe):*\n[~emkornfield@gmail.com] This could also be an array of `int64`\u00a0for simplicity/as a start."
        },
        {
            "created_at": "2019-01-22T15:46:38.152Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1560?focusedCommentId=16748849) by Francois Saint-Jacques (fsaintjacques):*\nWhat should it return when it doesn't match?"
        },
        {
            "created_at": "2019-01-22T15:48:42.257Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1560?focusedCommentId=16748852) by Wes McKinney (wesm):*\nR returns null by default\r\n\r\n```Java\n\r\n> match(c(1, 2, 3), c(2, 3, 4))\r\n[1] NA  1  2\r\n```\r\n\r\nIt's configurable though\r\n\r\n```Java\n\r\n> match(c(1, 2, 3), c(2, 3, 4), nomatch=-1)\r\n[1] -1  1  2\r\n```"
        },
        {
            "created_at": "2019-02-19T22:47:46.604Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1560?focusedCommentId=16772409) by Preeti Suman (preeti_suman):*\nCan someone assign this to me?\u00a0"
        },
        {
            "created_at": "2019-02-19T23:28:49.062Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1560?focusedCommentId=16772439) by Wes McKinney (wesm):*\nJust made you a Contributor and assigned the issue to you.\r\n\r\nCould you describe your implementation approach before you go too far down the rabbit hole? We want to make use of the existing hashing machinery that we are using for the `Unique` and `DictionaryEncode` functions"
        },
        {
            "created_at": "2019-02-19T23:54:00.051Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1560?focusedCommentId=16772447) by Micah Kornfield (emkornfield@gmail.com):*\nShould there be two implementations?  One for small lists (linear scan) and\none with hashtable ?\n\n\n"
        },
        {
            "created_at": "2019-03-13T02:50:28.348Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1560?focusedCommentId=16791243) by Wes McKinney (wesm):*\nYes that sounds right to me"
        },
        {
            "created_at": "2019-04-04T15:33:37.941Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1560?focusedCommentId=16809983) by Preeti Suman (preeti_suman):*\nFor match (and isin) compute kernel , in left and right array, if there are nulls in the input,\r\n\r\na) Do we need to match null with null or ignore null completely?\r\n\r\n\u00a0 \u00a0 Example:\r\n\r\n\u00a0 \u00a0 match(['a', 'b', null], ['a', 'c', null])\r\n\r\n\u00a0 \u00a0 Expected output [0, null, 2]\r\n\r\nb) If we need to compare, what will be the suggested way to traverse nulls if we use the VisitValue and VisitNull (using\u00a0[ArrayDataVisitor](https://github.com/apache/arrow/blob/master/cpp/src/arrow/visitor_inline.h)<font color=\"#000000\">) for the array?</font>"
        },
        {
            "created_at": "2019-04-04T18:44:24.951Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1560?focusedCommentId=16810185) by Wes McKinney (wesm):*\nR does match NA (null-ish values) so that should probably be the default\r\n\r\n```Java\n\r\n> match(c(NA, NA, NA, NA), NA)\r\n[1] 1 1 1 1\r\n```\r\n\r\nOn the second question, I'm not sure. We aren't accounting for nulls in other hash-related functions like ValueCounts. See ARROW-4787. When you populate the hash table with the right-hand-side values, you can set a flag whether null was present or not (and at what position) and then use this when VisitNull is invoked (if using ArrayDataVisitor turns out to be the most efficient method for this, which I'm also not sure about)"
        },
        {
            "created_at": "2020-03-12T21:54:08.536Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1560?focusedCommentId=17058263) by Ben Kietzman (bkietz):*\nIssue resolved by pull request 5665\n<https://github.com/apache/arrow/pull/5665>"
        }
    ]
}