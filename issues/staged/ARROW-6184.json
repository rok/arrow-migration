{
    "issue": {
        "title": "[Java] Provide hash table based dictionary encoder",
        "body": "***Note**: This issue was originally created as [ARROW-6184](https://issues.apache.org/jira/browse/ARROW-6184). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThis is the second part of ARROW-5917. We provide a sort based encoder, as well as a hash table based encoder, to solve the problem with the current dictionary encoder.\u00a0\r\n\r\nIn particular, we solve the following problems with the current encoder:\r\n1. There are repeated conversions between Java objects and bytes (e.g. vector.getObject(i)).\n1. Unnecessary memory copy (the vector data must be copied to the hash table).\n1. The hash table cannot be reused for encoding multiple vectors (other data structure & results cannot be reused either).\n1. The output vector should not be created/managed by the encoder (just like in the out-of-place sorter)\n1. The hash table requires that the hashCode & equals methods be implemented appropriately, but this is not guaranteed.",
        "created_at": "2019-08-09T06:38:14.000Z",
        "updated_at": "2019-10-16T10:07:29.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-10-15T05:55:24.000Z"
    },
    "comments": [
        {
            "created_at": "2019-10-15T05:55:24.243Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6184?focusedCommentId=16951632) by Micah Kornfield (emkornfield@gmail.com):*\nIssue resolved by pull request 5058\n<https://github.com/apache/arrow/pull/5058>"
        }
    ]
}