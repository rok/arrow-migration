{
    "issue": {
        "title": "[Rust] Several pattern matches are hard to read",
        "body": "***Note**: This issue was originally created as [ARROW-7692](https://issues.apache.org/jira/browse/ARROW-7692). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSeveral pattern matches can be rewritten directly using a combinator, e.g. array's ``value_as_date``, more succintly expressed as a `map`:\r\n\r\n`match self.value_as_datetime(i) {`\r\n `\u00a0Some(datetime) => Some(datetime.date()),`\r\n `\u00a0None => None,`\r\n `\u00a0`}\r\n\r\nMore importantly some of these matches obscure what the code is doing, e.g. parquet column writer ``read_fully``'s extraction of a mutable slice:\r\n\u00a0`let actual_def_levels = match &mut def_levels {`\r\n `\u00a0Some(ref mut vec) => Some(&mut vec[..]),`\r\n `\u00a0None => None,`\r\n `\u00a0};`\r\n which can be written, using `as_mut` and `map`, as:\r\n\r\n`let actual_def_levels = def_levels.as_mut().map(|vec| &mut vec[..]);`\r\n\r\nA large # of these are meant to be addressed in\u00a0<https://github.com/apache/arrow/pull/6292/files>",
        "created_at": "2020-01-27T16:28:16.000Z",
        "updated_at": "2020-01-29T11:19:43.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-01-29T11:19:42.000Z"
    },
    "comments": [
        {
            "created_at": "2020-01-29T11:19:43.026Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7692?focusedCommentId=17025815) by Krisztian Szucs (kszucs):*\nIssue resolved by pull request 6292\n<https://github.com/apache/arrow/pull/6292>"
        }
    ]
}