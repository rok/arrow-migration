{
    "issue": {
        "title": "[Java] Implement non-sparse tensors",
        "body": "***Note**: This issue was originally created as [ARROW-10101](https://issues.apache.org/jira/browse/ARROW-10101). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWe'd like to be able to round-trip NumPy ndarrays through Java, and create tensors in Java that can be eventually mapped to ndarrays in Python. Having even a basic Tensor implementation, with extension types, as a contrib module would help greatly.\r\n\r\nSome prior discussions\r\n \\* <https://lists.apache.org/thread.html/9b142c1709aa37dc35f1ce8db4e1ced94fcc4cdd96cc72b5772b373b%40%3Cdev.arrow.apache.org%3E>",
        "created_at": "2020-09-25T21:20:36.000Z",
        "updated_at": "2021-03-09T22:04:03.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2020-09-30T09:44:34.934Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10101?focusedCommentId=17204610) by Joris Van den Bossche (jorisvandenbossche):*\n`[~lidavidm]` From the description above, it's not fully clear to me if you are talking about the (standalone) Tensor message type of the IPC protocol, or about storing a tensor as a value in a RecordBatch field. \r\n\r\nYour description seems to talk about the first, but the mailing list thread talks about the second I think. There are also some open issues about defining a standard ExtensionType for storing arrays in RecordBatch fields (ARROW-1614, ARROW-8714)"
        },
        {
            "created_at": "2020-09-30T12:26:10.806Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10101?focusedCommentId=17204684) by David Li (lidavidm):*\nHey `[~jorisvandenbossche]` this is about the standalone Tensor type - I'd like both eventually, but having the Tensor type itself implemented is a prerequisite to that, at least for our use cases (Python <-> Java). Thanks for the pointers!\r\n\r\n\u00a0"
        },
        {
            "created_at": "2020-10-01T16:15:36.674Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10101?focusedCommentId=17205651) by Micah Kornfield (emkornfield@gmail.com):*\n`[~lidavidm]` \u00a0i took a very cursory look at the code and it seems straight-forward.\u00a0 But one question, I had is if there is an existing OSS tensor model that makes sense for us to re-use or is the Arrow off-heap/object model enough of a snowflake to make that impractical?"
        },
        {
            "created_at": "2020-10-01T18:03:39.894Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10101?focusedCommentId=17205724) by David Li (lidavidm):*\nThanks [~emkornfield@gmail.com]. I'm not aware of an existing model. Honestly, my intent here is not really to provide an API to manipulate them in Java, but to just make it possible to round-trip them and convert to/from other APIs, hence why the methods on this Tensor are pretty sparse.\r\n\r\nA brief search turns up these:\r\n \\* nd4j - looks abandoned - <https://github.com/deeplearning4j/nd4j> - but it seems to be based on an off-heap buffer model like Arrow with shape/stride info\r\n \\* djl.ai from AWSLabs - <https://github.com/awslabs/djl/tree/master/api/src/main/java/ai/djl/ndarray> - seems to be ByteBuffer based with shape/stride info\r\n \\* Vectorz - double[] based - <https://github.com/mikera/vectorz/blob/develop/src/main/java/mikera/arrayz/impl/BaseNDArray.java>\r\n\r\nMaybe we should consider if our Tensor can be easily (zero-copy) wrapped by djl.ai's since they seem to have a similar structure, though it seems they also have their own memory management model."
        },
        {
            "created_at": "2020-10-22T04:55:41.504Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10101?focusedCommentId=17218741) by Micah Kornfield (emkornfield@gmail.com):*\nThanks for investigating, I'm not an expert in this space, but I can try to take a look at the PR if no one else has provided feedback."
        },
        {
            "created_at": "2020-10-22T13:00:19.287Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10101?focusedCommentId=17218990) by David Li (lidavidm):*\nThanks Micah - I'd appreciate any feedback on the API and approach before I go implement the rest of the tensor classes. I think like Python, it mostly suffices to have something that makes it easy to convert to/from the API actually being used."
        }
    ]
}