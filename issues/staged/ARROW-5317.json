{
    "issue": {
        "title": "[Rust] [Parquet] impl IntoIterator for SerializedFileReader",
        "body": "***Note**: This issue was originally created as [ARROW-5317](https://issues.apache.org/jira/browse/ARROW-5317). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThis is a follow up to <https://github.com/apache/arrow/issues/4301>.\r\n\r\nThe current implementation of a row iterator **RowIter** borrows the **FileReader**\r\n which the user has to keep the file reader alive for as long as the iterator is alive..\r\n\r\nAnd make is hard to iterate over multiple **FileReader** / **RowIter**..\r\n```java\n\r\nfn main() {\r\n    let path1 = Path::new(\"path-to/1.snappy.parquet\");\r\n    let path2 = Path::new(\"path-to/2.snappy.parquet\");\r\n    let vec = vec![path1, path2];\r\n    let it = vec.iter()\r\n        .map(|p| {\r\n            File::open(p).unwrap()\r\n        })\r\n        .map(|f| {\r\n            SerializedFileReader::new(f).unwrap()\r\n        })\r\n        .flat_map(|reader| -> RowIter {\r\n            RowIter::from_file(None, &reader).unwrap()\r\n//|             |                        |\r\n//|             |                        `reader` is borrowed here\r\n//|             returns a value referencing data owned by the current function\r\n        })\r\n    ;\r\n\r\n    for r in it {\r\n        println!(\"{}\", r);\r\n    }\r\n}\r\n```\r\nOne solution could be to implement a row iterator that takes owners of the reader.\r\n\r\nPerhaps implementing **std::iter::IntoIterator** for the **SerializedFileReader**\r\n```java\n\r\n....\r\n.map(|p| {\r\n    File::open(p).unwrap()\r\n})\r\n.map(|f| {\r\n    SerializedFileReader::new(f).unwrap()\r\n})\r\n.flat_map(|r| -> r.into_iter())\r\n....\r\n```\r\n\u00a0\r\n\r\nHappy to put a PR out with this..\r\n Please let me know if this makes sense and you guys already have some way of doing this..",
        "created_at": "2019-05-14T13:14:36.000Z",
        "updated_at": "2019-05-19T06:55:49.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-05-19T06:55:35.000Z"
    },
    "comments": [
        {
            "created_at": "2019-05-14T17:16:59.604Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5317?focusedCommentId=16839624) by Chao Sun (csun):*\n`[~FabioBatSilva]` yes this does make sense. Can you put a PR for this? Thanks!"
        },
        {
            "created_at": "2019-05-14T17:19:09.830Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5317?focusedCommentId=16839627) by Chao Sun (csun):*\n`[~wesmckinn]`, `[~andygrove]` could you add `[~FabioBatSilva]` into the contributor list so we can assign this Jira to him? Thanks."
        },
        {
            "created_at": "2019-05-19T06:55:35.943Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5317?focusedCommentId=16843335) by Chao Sun (csun):*\nIssue resolved by pull request 4323\n<https://github.com/apache/arrow/pull/4323>"
        }
    ]
}