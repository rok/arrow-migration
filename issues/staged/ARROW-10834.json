{
    "issue": {
        "title": "[R] Fix print method for SubTreeFileSystem",
        "body": "***Note**: This issue was originally created as [ARROW-10834](https://issues.apache.org/jira/browse/ARROW-10834). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n\u00a0\r\n```java\n\r\narrow::arrow_with_s3()\n```\r\n\u00a0returns TRUE.\r\n```java\n\r\narrow::s3_bucket(\"<bucket name>\", role_arn=\"<role with permission>\")\n```\r\n\u00a0causes the error:\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n```java\n\r\nERROR while rich displaying an object: Error in get(name, x$base_fs): object '.class_title' not found\r\nTraceback:\r\n1. FUN(X[[i]], ...)\r\n2. tryCatch(withCallingHandlers({\r\n . if (!mime %in% names(repr::mime2repr)) \r\n . stop(\"No repr_* for mimetype \", mime, \" in repr::mime2repr\")\r\n . rpr <- repr::mime2repr[[mime]](obj)\r\n . if (is.null(rpr)) \r\n . return(NULL)\r\n . prepare_content(is.raw(rpr), rpr)\r\n . }, error = error_handler), error = outer_handler)\r\n3. tryCatchList(expr, classes, parentenv, handlers)\r\n4. tryCatchOne(expr, names, parentenv, handlers[[1L]])\r\n5. doTryCatch(return(expr), name, parentenv, handler)\r\n6. withCallingHandlers({\r\n . if (!mime %in% names(repr::mime2repr)) \r\n . stop(\"No repr_* for mimetype \", mime, \" in repr::mime2repr\")\r\n . rpr <- repr::mime2repr[[mime]](obj)\r\n . if (is.null(rpr)) \r\n . return(NULL)\r\n . prepare_content(is.raw(rpr), rpr)\r\n . }, error = error_handler)\r\n7. repr::mime2repr[[mime]](obj)\r\n8. repr_text.default(obj)\r\n9. paste(capture.output(print(obj)), collapse = \"\\n\")\r\n10. capture.output(print(obj))\r\n11. evalVis(expr)\r\n12. withVisible(eval(expr, pf))\r\n13. eval(expr, pf)\r\n14. eval(expr, pf)\r\n15. print(obj)\r\n16. print.R6(obj)\r\n17. .subset2(x, \"print\")(...)\r\n18. self$.class_title\r\n19. `$.SubTreeFileSystem`(self, .class_title)\r\n20. get(name, x$base_fs)\r\n\u00a0\r\n```\r\n\u00a0\r\n```java\n\r\nSessionInfo()\n```\r\n\u00a0\r\n```java\n\r\nR version 4.0.3 (2020-10-10)\r\nPlatform: x86_64-pc-linux-gnu (64-bit)\r\nRunning under: Ubuntu 18.04.3 LTS\r\nMatrix products: default\r\nBLAS: /usr/lib/x86_64-linux-gnu/openblas/libblas.so.3\r\nLAPACK: /usr/lib/x86_64-linux-gnu/libopenblasp-r0.2.20.so\r\nlocale:\r\n [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C \r\n [3] LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8 \r\n [5] LC_MONETARY=en_US.UTF-8 LC_MESSAGES=en_US.UTF-8 \r\n [7] LC_PAPER=en_US.UTF-8 LC_NAME=C \r\n [9] LC_ADDRESS=C LC_TELEPHONE=C \r\n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C\r\nattached base packages:\r\n[1] stats graphics grDevices utils datasets methods base\r\nother attached packages:\r\n[1] dtplyr_1.0.1 dplyr_1.0.2\r\nloaded via a namespace (and not attached):\r\n [1] magrittr_2.0.1 tidyselect_1.1.0 bit_4.0.4 uuid_0.1-4 \r\n [5] R6_2.5.0 rlang_0.4.9 tools_4.0.3 data.table_1.13.2\r\n [9] arrow_2.0.0 htmltools_0.5.0 ellipsis_0.3.1 bit64_4.0.5 \r\n[13] digest_0.6.27 assertthat_0.2.1 tibble_3.0.4 lifecycle_0.2.0 \r\n[17] crayon_1.3.4 IRdisplay_0.7.0 purrr_0.3.4 repr_1.1.0 \r\n[21] base64enc_0.1-3 vctrs_0.3.5 IRkernel_1.1.1 glue_1.4.2 \r\n[25] evaluate_0.14 pbdZMQ_0.3-3.1 compiler_4.0.3 pillar_1.4.7 \r\n[29] generics_0.1.0 jsonlite_1.7.1 pkgconfig_2.0.3\r\n```\r\n\u00a0\r\n\r\n\u00a0\r\n\r\nI had to use the work-around documented here: https://issues.apache.org/jira/browse/ARROW-10371?jql=project%20%3D%20ARROW%20AND%20text%20~%20%22libcurl4-openssl-dev%22\u00a0(Download cmake 3.19.1, build it, and set CMAKE=<build location>.) to install arrow.\r\n\r\n\u00a0\r\n\r\nI'm sorry I don't have more ideas about the error. Without reading the code I'm not even sure what's going on in this part of the code.",
        "created_at": "2020-12-07T14:43:51.000Z",
        "updated_at": "2021-01-12T03:34:11.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-01-12T03:33:58.000Z"
    },
    "comments": [
        {
            "created_at": "2020-12-07T16:31:27.240Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10834?focusedCommentId=17245331) by Neal Richardson (npr):*\nThe good news is that object itself is fine, it's an error in the print method so you're only seeing the error because you didn't assign the object and R is printing it:\r\n\r\n```Java\n\r\n> s3_bucket(\"ursa-labs-taxi-data\")\r\nError in get(name, x$base_fs) : object '.class_title' not found\r\n> b <- s3_bucket(\"ursa-labs-taxi-data\")\r\n> str(b)\r\nClasses 'SubTreeFileSystem', 'FileSystem', 'ArrowObject', 'R6' <SubTreeFileSystem>\r\n...\r\n```\r\n\r\nSo, you can still use the object, and you don't need to reinstall the package. \r\n\r\nThe error comes from around here: https://github.com/apache/arrow/blob/master/r/R/arrow-package.R#L100\r\n\r\nThe print method is assuming that if the .class_name method doesn't exist, it will return NULL, but the `$` method for this file system object overrides that behavior: https://github.com/apache/arrow/blob/master/r/R/filesystem.R#L421-L425\r\n\r\nThe expected behavior would probably be preserved if L424 called `$` instead of `get()`, but it might be safer to solve this in the print method since other classes also define a `$` method that could conflict."
        },
        {
            "created_at": "2021-01-12T03:33:58.242Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10834?focusedCommentId=17263053) by Neal Richardson (npr):*\nIssue resolved by pull request 9168\n<https://github.com/apache/arrow/pull/9168>"
        }
    ]
}