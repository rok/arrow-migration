{
    "issue": {
        "title": "[Rust] Parquet reader should implement Send + Sync",
        "body": "***Note**: This issue was originally created as [ARROW-9674](https://issues.apache.org/jira/browse/ARROW-9674). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nTo use the parquet reader in async code it is necessary to run it on its own thread and then use channels to communicate and fetch batches. This is very inefficient and it would be better if the main Parquet traits implemented Sync + Send.",
        "created_at": "2020-08-08T14:39:39.000Z",
        "updated_at": "2020-11-21T00:03:39.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-11-20T22:01:05.000Z"
    },
    "comments": [
        {
            "created_at": "2020-08-09T10:25:30.944Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9674?focusedCommentId=17173800) by Andrew Lamb (alamb):*\nDoing this would also make multi-threading parquet processing easier. I have thought about this, and one thing I was thinking about was that the parquet code now uses `Rc` to pass around the various metadata structures. \r\n\r\nSetting up the code to work well with async/multi-threaded might benefit from changing uses of `Rc` to `Arc` throughout the metadata handling code; That change, however, would likely be a breaking API change"
        },
        {
            "created_at": "2020-11-20T22:01:05.769Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9674?focusedCommentId=17236469) by Andrew Lamb (alamb):*\nIssue resolved by pull request 8545\n<https://github.com/apache/arrow/pull/8545>"
        }
    ]
}