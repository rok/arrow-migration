{
    "issue": {
        "title": "[C++] Add kernel functions for determining value range (maximum and minimum) of integer arrays",
        "body": "***Note**: This issue was originally created as [ARROW-1900](https://issues.apache.org/jira/browse/ARROW-1900). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThese functions can be useful internally for determining when a \"small range\" alternative to a hash table can be used for integer arrays. The maximum and minimum is determined in a single scan.\r\n\r\nWe already have infrastructure for aggregate kernels, so this would be an easy addition.",
        "created_at": "2017-12-07T17:21:35.000Z",
        "updated_at": "2019-11-18T17:18:52.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-11-18T17:18:51.000Z"
    },
    "comments": [
        {
            "created_at": "2018-01-23T21:32:06.359Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1900?focusedCommentId=16336403) by Panchen Xue (1xuepanchen1):*\nShall we add this function (GetValueRange) to base class Array or derived class PrimitiveArray?"
        },
        {
            "created_at": "2018-01-23T22:50:10.067Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1900?focusedCommentId=16336497) by Wes McKinney (wesm):*\nLet's leave this issue lie for a little while \u2013 we can implement this when we get around to implementing \"small range\" optimizations in the hash table algorithms. "
        },
        {
            "created_at": "2018-01-23T23:38:57.793Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1900?focusedCommentId=16336556) by Panchen Xue (1xuepanchen1):*\nDo you mean ARROW-1942?\u00a0"
        },
        {
            "created_at": "2018-01-24T01:51:28.198Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1900?focusedCommentId=16336732) by Wes McKinney (wesm):*\nNo, with int8, uint8, the range is always small so there is no need to examine the data. With int32 or int64 data, if the range of the data is small you can avoid a normal hash table scan. You need access to the whole array at once to do this so it may not be practical in Arrow in general "
        },
        {
            "created_at": "2019-10-03T17:59:26.873Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1900?focusedCommentId=16943794) by Neal Richardson (npr):*\nThis would have been helpful in ARROW-3808, not as an optimization but because I literally wanted the min and max of an integer array."
        },
        {
            "created_at": "2019-11-18T17:18:52.006Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1900?focusedCommentId=16976717) by Ben Kietzman (bkietz):*\nIssue resolved by pull request 5697\n<https://github.com/apache/arrow/pull/5697>"
        }
    ]
}