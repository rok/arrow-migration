{
    "issue": {
        "title": "[Flight] Enable integration testing of batches with dictionaries",
        "body": "***Note**: This issue was originally created as [ARROW-5143](https://issues.apache.org/jira/browse/ARROW-5143). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n",
        "created_at": "2019-04-08T21:53:56.000Z",
        "updated_at": "2020-07-01T13:38:24.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: FlightRPC",
            "Component: Integration",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-07-01T13:38:23.000Z"
    },
    "comments": [
        {
            "created_at": "2019-04-08T21:55:40.359Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5143?focusedCommentId=16812832) by David Li (lidavidm):*\nThe Flight integration tests still fail on the dictionary batch, even C+-to-C+.\r\n\r\nThe gRPC error is \"grpc-message: Dictionary with id 0 not found\". (Aside: gRPC still doesn't report this to us - it just aborts. May need to send an issue upstream if we can make a minimal reproduction.)\r\n\r\nThe (relevant part of) the server backtrace is:\r\n```java\n\r\n\u00a0 * frame #0: 0x00000001014723a1 libarrow.14.dylib`arrow::ipc::DictionaryMemo::GetDictionary(this=0x00007000020c8ce0, id=0, dictionary=0x00007000020c87b8) const at dictionary.cc:37\r\n\u00a0\u00a0\u00a0 frame #1: 0x000000010152d495 libarrow.14.dylib`arrow::ipc::internal::FieldFromFlatbuffer(field=0x00000001080002e9, dictionary_memo=0x00007000020c8ce0, out=0x0000000104607590) at metadata-internal.cc:673\r\n\u00a0\u00a0\u00a0 frame #2: 0x000000010152c9bc libarrow.14.dylib`arrow::ipc::internal::GetSchema(opaque_schema=0x0000000108000225, dictionary_memo=0x00007000020c8ce0, out=0x00007000020c8ec8) at metadata-internal.cc:1060\r\n\u00a0\u00a0\u00a0 frame #3: 0x0000000101551058 libarrow.14.dylib`arrow::ipc::ReadSchema(message=0x0000000104607190, out=0x00007000020c8ec8) at reader.cc:724\r\n\u00a0\u00a0\u00a0 frame #4: 0x00000001007fdbd8 libarrow_flight.14.dylib`arrow::flight::FlightServiceImpl::DoPut(this=0x0000000104604db0, context=0x000000010501ce20, reader=0x00007000020c9970, response=0x00007000020c9958) at server.cc:252\r\n```"
        },
        {
            "created_at": "2019-05-31T20:54:47.395Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5143?focusedCommentId=16853419) by Wes McKinney (wesm):*\nThis might work now, `[~lidavidm]` can you give it a try to see?"
        },
        {
            "created_at": "2019-05-31T21:04:49.606Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5143?focusedCommentId=16853425) by David Li (lidavidm):*\n`[~wesmckinn]` I tried in <https://github.com/apache/arrow/pull/4282>, the non-nested dictionary case worked with some additional effort, so that PR enables that. I didn't look into why the nested case still fails."
        },
        {
            "created_at": "2020-06-11T21:22:37.974Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5143?focusedCommentId=17133704) by Neal Richardson (npr):*\nIs this still an issue?"
        },
        {
            "created_at": "2020-06-12T12:26:40.815Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5143?focusedCommentId=17134174) by David Li (lidavidm):*\nIt's enabled for non-nested dictionaries (C++ and Java) and nested dictionaries (C++ only). So we could close this and use ARROW-7779 to track the remainder."
        },
        {
            "created_at": "2020-07-01T13:37:11.899Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5143?focusedCommentId=17149443) by Antoine Pitrou (apitrou):*\nOk, closing."
        }
    ]
}