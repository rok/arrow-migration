{
    "issue": {
        "title": "[Python] Add adapter to write pandas.DataFrame in user-selected chunk size to streaming format",
        "body": "***Note**: This issue was originally created as [ARROW-504](https://issues.apache.org/jira/browse/ARROW-504). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhile we can convert a `pandas.DataFrame` to a single (arbitrarily large) `arrow::RecordBatch`, it is not easy to create multiple small record batches \u2013 we could do so in a streaming fashion and immediately write them into an `arrow::io::OutputStream`.",
        "created_at": "2017-01-21T19:11:09.000Z",
        "updated_at": "2019-06-03T13:13:50.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2017-11-27T09:28:42.000Z"
    },
    "comments": [
        {
            "created_at": "2017-01-21T19:13:11.848Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-504?focusedCommentId=15833110) by Wes McKinney (wesm):*\ncc `[~mrocklin]` \u2013 you may have some use cases for converting DataFrames to streams in `dask.dataframe`"
        },
        {
            "created_at": "2017-01-23T14:52:57.030Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-504?focusedCommentId=15834694) by Matthew Rocklin (mrocklin):*\nAt the moment I don't have any active use cases for this.  We tend to handle pandas dataframes as atomic blocks of data.\n\nHowever generally I agree that streaming chunks in a more granular way is probably a better way to go.  Non-blocking IO quickly becomes blocking IO if data starts overflowing local buffers.  This is the sort of technology that might influence future design decisions.\n\nFrom a pure Dask perspective my ideal serialization interface is Python object -> iterator of memoryview objects.  "
        },
        {
            "created_at": "2017-01-23T16:28:46.687Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-504?focusedCommentId=15834838) by Wes McKinney (wesm):*\n> Non-blocking IO quickly becomes blocking IO if data starts overflowing local buffers. This is the sort of technology that might influence future design decisions.\n\nIndeed \u2013 it would be fairly easy to implement spill-to-disk tools using either the streaming or random access format"
        },
        {
            "created_at": "2017-11-27T04:39:42.046Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-504?focusedCommentId=16266361) by Wes McKinney (wesm):*\nPart of https://github.com/apache/arrow/pull/1364"
        },
        {
            "created_at": "2017-11-27T09:28:42.110Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-504?focusedCommentId=16266561) by Uwe Korn (uwe):*\nIssue resolved by pull request 1364\r\nhttps://github.com/apache/arrow/pull/1364"
        }
    ]
}