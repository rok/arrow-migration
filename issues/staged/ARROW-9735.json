{
    "issue": {
        "title": "[Rust] [Parquet] Corrupt footer error on files produced by AvroParquetWriter",
        "body": "***Note**: This issue was originally created as [ARROW-9735](https://issues.apache.org/jira/browse/ARROW-9735). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI started to use rust parquet library for some basic reading of files produced by Spark and was very happy with the performance, however when I try to read any Parquet files produced by my Flink app I get a panic:\r\n```java\n\r\nGeneral(\"Invalid Parquet file. Corrupt footer\") \n```\r\nI'm attaching the sample file:\u00a0[data.snappy.parquet](data.snappy.parquet)\r\n\r\nOutput of 'parquet-meta' command (from parquet-tools package):\r\n```java\n\r\ncreator:        parquet-mr version 1.10.0 (build 031a6654009e3b82020012a18434c582bd74c73a) \r\nextra:          parquet.avro.schema = {\"type\":\"record\",\"name\":\"Row\",\"fields\":[{\"name\":\"system_time\",\"type\":[{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"null\"]},{\"name\":\"event_time\",\"type\":[{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},\"null\"]},{\"name\":\"city\",\"type\":[\"string\",\"null\"]},{\"name\":\"population_x10\",\"type\":[\"int\",\"null\"]}]} \r\nextra:          writer.model.name = avro file schema:    Row \r\n-------------------------------------------------------------------------------------------------------------------\r\nsystem_time:    OPTIONAL INT64 L:TIMESTAMP(MILLIS,true) R:0 D:1\r\nevent_time:     OPTIONAL INT64 L:TIMESTAMP(MILLIS,true) R:0 D:1\r\ncity:           OPTIONAL BINARY L:STRING R:0 D:1\r\npopulation_x10: OPTIONAL INT32 R:0 D:1row group 1:    RC:3 TS:291 OFFSET:4 \r\n-------------------------------------------------------------------------------------------------------------------\r\nsystem_time:     INT64 SNAPPY DO:0 FPO:4 SZ:94/90/0.96 VC:3 ENC:PLAIN_DICTIONARY,BIT_PACKED,RLE ST:[min: 2020-08-14T00:36:12.413+0000, max: 2020-08-14T00:36:12.413+0000, num_nulls: 0]\r\nevent_time:      INT64 SNAPPY DO:0 FPO:98 SZ:94/90/0.96 VC:3 ENC:PLAIN_DICTIONARY,BIT_PACKED,RLE ST:[min: 2020-08-14T00:35:42.709+0000, max: 2020-08-14T00:35:42.709+0000, num_nulls: 0]\r\ncity:            BINARY SNAPPY DO:0 FPO:192 SZ:50/48/0.96 VC:3 ENC:PLAIN,BIT_PACKED,RLE ST:[min: A, max: C, num_nulls: 0]\r\npopulation_x10:  INT32 SNAPPY DO:0 FPO:242 SZ:65/63/0.97 VC:3 ENC:PLAIN,BIT_PACKED,RLE ST:[min: 10000, max: 30000, num_nulls: 0] \n```\r\nThe file is produced in Apache Flink + Scala using (fairly recent):\r\n```java\n\r\n\"org.apache.parquet\" % \"parquet-avro\" % \"1.10.0\" \n```\r\nCode that produces the file goes like this:\r\n```java\n\r\nval writer = AvroParquetWriter\r\n.builder[GenericRecord](new Path(path))\r\n.withSchema(avroSchema)\r\n.withDataModel(model)\r\n.withCompressionCodec(CompressionCodecName.SNAPPY)\r\n.build()\r\n\r\nfor (row <- rows) { writer.write(row) }\r\nwriter.close() \n```",
        "created_at": "2020-08-14T00:57:04.000Z",
        "updated_at": "2022-08-27T14:41:50.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Component: Rust - DataFusion",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-08-14T21:07:07.000Z"
    },
    "comments": [
        {
            "created_at": "2020-08-14T01:35:46.715Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9735?focusedCommentId=17177413) by Chao Sun (csun):*\nThanks `[~sergiimk]` - let me try to reproduce the issue."
        },
        {
            "created_at": "2020-08-14T18:16:36.799Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9735?focusedCommentId=17177984) by Chao Sun (csun):*\nhmm `[~sergiimk]`, I can't reproduce the issue when using [parquet-read](https://github.com/apache/arrow/blob/master/rust/parquet/src/bin/parquet-read.rs):\r\n```Java\n\r\n\u279c  bin git:(master) \u2717 cargo run --bin parquet-read ~/Downloads/data.snappy.parquet 10\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.14s\r\n     Running `/Users/chao/git/arrow/rust/target/debug/parquet-read /Users/chao/Downloads/data.snappy.parquet 10`\r\n{system_time: 2020-08-13 17:36:12 -07:00, event_time: 2020-08-13 17:35:42 -07:00, city: \"A\", population_x10: 10000}\r\n{system_time: 2020-08-13 17:36:12 -07:00, event_time: 2020-08-13 17:35:42 -07:00, city: \"B\", population_x10: 20000}\r\n{system_time: 2020-08-13 17:36:12 -07:00, event_time: 2020-08-13 17:35:42 -07:00, city: \"C\", population_x10: 30000}\r\n```\r\nCurious: are you using the current master? can you let us know how we can reproduce the issue? Thanks."
        },
        {
            "created_at": "2020-08-14T20:37:16.768Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9735?focusedCommentId=17178051) by Sergii Mikhtoniuk (sergiimk):*\nSorry for not providing more details. Here's the version I'm using (updated yesterday before creating the ticket):\r\n```java\n\r\nparquet = { git = \"https://github.com/apache/arrow\" } \n```\r\n```java\n\r\n[[package]]\r\nname = \"parquet\"\r\nversion = \"2.0.0-SNAPSHOT\"\r\nsource = \"git+https://github.com/apache/arrow#b2788c55ac2173a22dd25b932cf0cedcc9e18391\"\r\ndependencies = [\r\n \"arrow 2.0.0-SNAPSHOT (git+https://github.com/apache/arrow)\",\r\n \"brotli 3.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"byteorder 1.3.4 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"chrono 0.4.13 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"flate2 1.0.16 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"lz4 1.23.2 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"num-bigint 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"parquet-format 2.6.1 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"serde_json 1.0.57 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"snap 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"thrift 0.13.0 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n \"zstd 0.5.3+zstd.1.4.5 (registry+https://github.com/rust-lang/crates.io-index)\",\r\n] \n```\r\nI'm reading the file in my tests as:\r\n```java\n\r\nuse parquet::{\r\nfile::reader::{FileReader, SerializedFileReader},\r\nrecord::RowAccessor,\r\n};\r\n...\r\nSerializedFileReader::new(File::open(&part_file).unwrap()).unwrap();\n```\r\nI have not used the parquet-read binary before, will give it a try now and report back."
        },
        {
            "created_at": "2020-08-14T21:06:18.286Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9735?focusedCommentId=17178062) by Sergii Mikhtoniuk (sergiimk):*\nparquet-read indeed works fine with that file, and reading file with the code snippet I posted also works when I create a clean new project and use latest master.\r\n\r\nI now suspect some other dependencies of my project are influencing the versions of parquet's crate dependencies that are being installed. I will close the issue since looks like it's not this crates problem, and will do more digging on my side.\r\n\r\nThanks a lot for your quick response `[~csun]`. I'll make sure to be more diligent with reproducibility next time."
        },
        {
            "created_at": "2022-08-27T14:41:50.140Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9735?focusedCommentId=17585873) by @toddfarmer:*\nTransitioning issue from Resolved to Closed to based on resolution field value."
        }
    ]
}