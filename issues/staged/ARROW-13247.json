{
    "issue": {
        "title": "[C++] Kernel to convert timestamp with timezone to another timezone (metadata-only change)",
        "body": "***Note**: This issue was originally created as [ARROW-13247](https://issues.apache.org/jira/browse/ARROW-13247). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nRelated to ARROW-13033, but assuming you already have a tz-aware \"timestamp with timezone\" type, and you want to change it to have another timezone. \r\n\r\nIn practice, this is a trivial, metadata-only change since in both cases the actual values are stored in UTC, and so it's only changing the tz parametrization of the timestamp type. But, for convenience, I think it would still be useful to have it as an actual kernel to easily integrate this operation in this framework.\r\n\r\nReferences: [tz_convert](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DatetimeIndex.tz_convert.html) in pandas, or [with_tz](https://lubridate.tidyverse.org/reference/with_tz.html) in R's lubridate package,`withZone` in Joda or [withZoneSameInstant](https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html#withZoneSameInstant-java.time.ZoneId-) in Java",
        "created_at": "2021-07-02T08:58:57.000Z",
        "updated_at": "2021-12-16T17:10:10.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-07-02T09:05:11.181Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13247?focusedCommentId=17373363) by Antoine Pitrou (apitrou):*\nJust make it an implementation of the Cast function then.\r\n"
        },
        {
            "created_at": "2021-07-02T09:10:55.026Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13247?focusedCommentId=17373366) by Joris Van den Bossche (jorisvandenbossche):*\nYeah, I was just typing a comment that this could also be done with Cast, and that this actually already works today:\r\n\r\n```Java\n\r\nIn [5]: pa.array([1, 2, 3], pa.timestamp(\"us\", \"Europe/Brussels\")).cast(pa.timestamp(\"us\", \"Europe/London\"))\r\nOut[5]: \r\n<pyarrow.lib.TimestampArray object at 0x7f7558ca3340>\r\n[\r\n  1970-01-01 00:00:00.000001,\r\n  1970-01-01 00:00:00.000002,\r\n  1970-01-01 00:00:00.000003\r\n]\r\n\r\nIn [6]: _.type\r\nOut[6]: TimestampType(timestamp[us, tz=Europe/London])\r\n```\r\n\r\nHowever, a drawback of cast is that you need to know/specify the unit of your input timestamp (assuming you typically want to preserve the unit for this operation), which makes this more verbose to express, and difficult to do in a generic query execution / expression interface where you might not necessarily know the exact unit when defining the operation."
        },
        {
            "created_at": "2021-07-02T09:25:43.800Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13247?focusedCommentId=17373374) by Antoine Pitrou (apitrou):*\nI'm opposed to adding vanity kernels just because people don't want to write two lines of logic."
        },
        {
            "created_at": "2021-07-02T09:40:16.650Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13247?focusedCommentId=17373385) by Antoine Pitrou (apitrou):*\nIf we want to make this a useful feature request, `CastOptions` could allow passing a type factory (`std::function<std::shared<DataType>>(const std::shared<DataType>&)` instead of a fixed type instance, so that users can select the output type dynamically based on the input type. I'm not sure it's worth the hassle, though."
        },
        {
            "created_at": "2021-07-02T09:40:29.295Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13247?focusedCommentId=17373386) by Antoine Pitrou (apitrou):*\ncc `[~bkietz]`"
        }
    ]
}