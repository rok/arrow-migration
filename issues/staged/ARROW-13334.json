{
    "issue": {
        "title": "Findzstd.cmake doesnt find zstd on Ubuntu 20.04",
        "body": "***Note**: This issue was originally created as [ARROW-13334](https://issues.apache.org/jira/browse/ARROW-13334). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI'm unable to use the pre-built c++ arrow libraries with a project using a CMakeList.txt containing\r\n\r\n```\n\r\nfind_package(Arrow REQUIRED)\r\n```\r\n\r\nGiving the following error\r\n```\n\r\nCMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):\r\nCould NOT find zstd (missing: ZSTD_LIB)\r\nCall Stack (most recent call first):\r\n/usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE)\r\n/usr/lib/x86_64-linux-gnu/cmake/arrow/Findzstd.cmake:82 (find_package_handle_standard_args)\r\n/usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package)\r\n/usr/lib/x86_64-linux-gnu/cmake/arrow/ArrowConfig.cmake:96 (find_dependency)\r\nCMakeLists.txt:12 (find_package)\r\n```\r\nlibzstd and libstd-dev are both installed\r\n\r\n\u00a0",
        "created_at": "2021-07-14T08:38:23.000Z",
        "updated_at": "2021-07-17T21:30:23.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-07-15T00:25:53.558Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17380908) by Kouhei Sutou (kou):*\nCould you show `ls -lah /usr/lib/x86_64-linux-gnu/`?"
        },
        {
            "created_at": "2021-07-15T00:28:00.054Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17380909) by Nick Hortovanyi (horto):*\n```\n\r\n\u276f ls -lah /usr/lib/x86_64-linux-gnu/|grep -i zstd\r\n -rw-r--r-- 1 root root 853K Mar 4 01:47 libzstd.a\r\n lrwxrwxrwx 1 root root 16 Mar 4 01:47 libzstd.so -> libzstd.so.1.4.4\r\n lrwxrwxrwx 1 root root 16 Mar 4 01:47 libzstd.so.1 -> libzstd.so.1.4.4\r\n -rw-r--r-- 1 root root 671K Mar 4 01:47 libzstd.so.1.4.4\r\n```"
        },
        {
            "created_at": "2021-07-15T00:34:52.626Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17380912) by Nick Hortovanyi (horto):*\nSpent hours trying to solve this. Even tried from source. Same issue. I tried to not use zstd at all.\r\n\r\nInstalled Facebook's Folly\r\n\r\nand have even tried to include this a submodule of my project\r\n\r\n<https://github.com/facebook/folly/blob/master/CMake/FindZstd.cmake>\r\n\r\n\u00a0\r\n\r\nPresently worked out how to set ZSTD_LIB with ZSTD_LIBRARY\r\n```\n\r\nLIST(INSERT\u00a0CMAKE_MODULE_PATH\u00a00\u00a0${CMAKE_CURRENT_SOURCE_DIR}/CMake)\r\nfind_package(Zstd\u00a0REQUIRED)\r\nif\u00a0(ZSTD_FOUND)\r\n\u00a0\u00a0set(ZSTD_LIB\u00a0${ZSTD_LIBRARY})\r\nendif\u00a0(ZSTD_FOUND\r\nfind_package(Arrow\u00a0REQUIRED)\r\n```\r\nwhich works ...\r\nHowever now it cant find re2 and ares per the following\r\n...\r\n```\n\r\nCMake Warning at /usr/local/lib/cmake/arrow/Findre2Alt.cmake:25 (find_package):\r\nBy not providing \"Findre2.cmake\" in CMAKE_MODULE_PATH this project has\r\nasked CMake to find a package configuration file provided by \"re2\", but\r\nCMake did not find one.\r\n\u00a0\r\nCould not find a package configuration file provided by \"re2\" with any of\r\nthe following names:\r\n\u00a0\r\nre2Config.cmake\r\nre2-config.cmake\r\n\u00a0\r\nAdd the installation prefix of \"re2\" to CMAKE_PREFIX_PATH or set \"re2_DIR\"\r\nto a directory containing one of the above files. If \"re2\" provides a\r\nseparate development package or SDK, be sure it has been installed.\r\n\r\nCall Stack (most recent call first):\r\n/usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package)\r\n/usr/local/lib/cmake/arrow/ArrowConfig.cmake:86 (find_dependency)\r\nCMakeLists.txt:19 (find_package)\r\n\u00a0\r\n\u00a0\r\nCMake Warning at /usr/local/lib/cmake/arrow/Findc-aresAlt.cmake:25 (find_package):\r\nBy not providing \"Findc-ares.cmake\" in CMAKE_MODULE_PATH this project has\r\nasked CMake to find a package configuration file provided by \"c-ares\", but\r\nCMake did not find one.\r\n\u00a0\r\nCould not find a package configuration file provided by \"c-ares\" with any\r\nof the following names:\r\n\u00a0\r\nc-aresConfig.cmake\r\nc-ares-config.cmake\r\n\u00a0\r\nAdd the installation prefix of \"c-ares\" to CMAKE_PREFIX_PATH or set\r\n\"c-ares_DIR\" to a directory containing one of the above files. If \"c-ares\"\r\nprovides a separate development package or SDK, be sure it has been\r\ninstalled.\r\nCall Stack (most recent call first):\r\n/usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package)\r\n/usr/local/lib/cmake/arrow/ArrowConfig.cmake:86 (find_dependency)\r\nCMakeLists.txt:19 (find_package)\r\n```"
        },
        {
            "created_at": "2021-07-15T00:50:16.307Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17380915) by Kouhei Sutou (kou):*\nDoes https://github.com/apache/arrow/tree/master/cpp/examples/minimal_build work with the official Ubuntu 20.04 `libarrow-dev` package?\r\nhttps://arrow.apache.org/install/"
        },
        {
            "created_at": "2021-07-15T00:55:06.788Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17380919) by Nick Hortovanyi (horto):*\nYou can try it with docker??\u00a0\r\n\r\n\u00a0\r\n\r\nI've had this working previously. But havent touched the Apache Arrow C++ code for 6 months+\u00a0"
        },
        {
            "created_at": "2021-07-15T00:58:48.523Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17380920) by Kouhei Sutou (kou):*\nI did. It works without any problem."
        },
        {
            "created_at": "2021-07-15T01:43:00.072Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17380935) by Nick Hortovanyi (horto):*\nOnly built this new server a couple of weeks ago\n\nThe cmake files that arrow is looking for, simply don\u2019t exist. \n\nThey aren\u2019t installed by the package maintainers as they do not provide them\n\nTherefore I can\u2019t build a cmake project against Apache Arrow for c++ on Ubuntu 20.04.2\n\nI can install the libraries from the repo and/or via source. Just can\u2019t build\n\n"
        },
        {
            "created_at": "2021-07-15T01:46:14.145Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17380936) by Kouhei Sutou (kou):*\nCould you create a `Dockerfile` that reproduces this case?"
        },
        {
            "created_at": "2021-07-15T01:51:00.072Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17380937) by Nick Hortovanyi (horto):*\nJust look at the packages I\u2019ve mentioned. They don\u2019t install CMake files\n\nIt\u2019s self evident \n\n"
        },
        {
            "created_at": "2021-07-15T02:01:32.747Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17380942) by Kouhei Sutou (kou):*\nWhat are the packages you've mentioned? `libarrow-dev`?\r\nhttps://apache.jfrog.io/artifactory/arrow/ubuntu/pool/focal/main/a/apache-arrow/libarrow-dev_4.0.1-1_amd64.deb\r\n\r\n`libzstd-dev`?"
        },
        {
            "created_at": "2021-07-15T02:34:29.540Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17380953) by Nick Hortovanyi (horto):*\nI uninstalled those packages and installed from source\u00a0https://arrow.apache.org/docs/developers/cpp/building.html"
        },
        {
            "created_at": "2021-07-15T02:39:37.837Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17380958) by Nick Hortovanyi (horto):*\ndpkg -L libzstd-dev\r\n/.\r\n/usr\r\n/usr/include\r\n/usr/include/zbuff.h\r\n/usr/include/zdict.h\r\n/usr/include/zstd.h\r\n/usr/include/zstd_errors.h\r\n/usr/lib\r\n/usr/lib/x86_64-linux-gnu\r\n/usr/lib/x86_64-linux-gnu/libzstd.a\r\n/usr/lib/x86_64-linux-gnu/pkgconfig\r\n/usr/lib/x86_64-linux-gnu/pkgconfig/libzstd.pc\r\n/usr/share\r\n/usr/share/doc\r\n/usr/share/doc/libzstd-dev\r\n/usr/share/doc/libzstd-dev/README.Debian\r\n/usr/share/doc/libzstd-dev/copyright\r\n/usr/share/doc/libzstd-dev/examples\r\n/usr/share/doc/libzstd-dev/examples/Makefile\r\n/usr/share/doc/libzstd-dev/examples/README.md\r\n/usr/share/doc/libzstd-dev/examples/common.h\r\n/usr/share/doc/libzstd-dev/examples/dictionary_compression.c\r\n/usr/share/doc/libzstd-dev/examples/dictionary_decompression.c\r\n/usr/share/doc/libzstd-dev/examples/multiple_simple_compression.c\r\n/usr/share/doc/libzstd-dev/examples/multiple_streaming_compression.c\r\n/usr/share/doc/libzstd-dev/examples/simple_compression.c\r\n/usr/share/doc/libzstd-dev/examples/simple_decompression.c\r\n/usr/share/doc/libzstd-dev/examples/streaming_compression.c\r\n/usr/share/doc/libzstd-dev/examples/streaming_decompression.c\r\n/usr/share/doc/libzstd-dev/examples/streaming_memory_usage.c\r\n/usr/lib/x86_64-linux-gnu/libzstd.so\r\n/usr/share/doc/libzstd-dev/changelog.Debian.gz"
        },
        {
            "created_at": "2021-07-15T02:41:16.611Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17380960) by Nick Hortovanyi (horto):*\ndpkg -s libzstd-dev\r\nPackage: libzstd-dev\r\nStatus: install ok installed\r\nPriority: optional\r\nSection: libdevel\r\nInstalled-Size: 1079\r\nMaintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>\r\nArchitecture: amd64\r\nMulti-Arch: same\r\nSource: libzstd\r\nVersion: 1.4.4+dfsg-3ubuntu0.1\r\nDepends: libzstd1 (= 1.4.4+dfsg-3ubuntu0.1)\r\nDescription: fast lossless compression algorithm \u2013 development files\r\nZstd, short for Zstandard, is a fast lossless compression algorithm, targeting\r\nreal-time compression scenarios at zlib-level compression ratio.\r\n.\r\nThis package contains the headers and static library.\r\nHomepage: https://github.com/facebook/zstd\r\nOriginal-Maintainer: Debian Med Packaging Team <debian-med-packaging@lists.alioth.debian.org>"
        },
        {
            "created_at": "2021-07-15T02:52:43.883Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17380970) by Kouhei Sutou (kou):*\nOur `Findzstd.cmake` doesn't require CMake files for Zstandard: https://github.com/apache/arrow/blob/master/cpp/cmake_modules/Findzstd.cmake#L73-L75\r\nSo `libzstd-dev` isn't a problem.\r\n\r\nInstalling `pkg-config` may help you. \r\n\r\nI can't help more unless you provide reproducible information such as `Dockerfile`. Sorry."
        },
        {
            "created_at": "2021-07-15T02:56:51.533Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17380975) by Nick Hortovanyi (horto):*\nThe Apache Arrow cmake files dont work with .pc files\r\n\r\npkg-config is installed\r\n\r\n```\n\u00a0\r\n\u276f dpkg -s pkg-config\r\nPackage: pkg-config\r\nStatus: install ok installed\r\nPriority: optional\r\nSection: devel\r\nInstalled-Size: 190\r\nMaintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>\r\nArchitecture: amd64\r\nMulti-Arch: foreign\r\nVersion: 0.29.1-0ubuntu4\r\nReplaces: pkg-config-bin\r\nDepends: libc6 (>= 2.14), libglib2.0-0 (>= 2.16.0), libdpkg-perl\r\nSuggests: dpkg-dev\r\nConflicts: pkg-config-bin\r\nConffiles:\r\n/etc/dpkg/dpkg.cfg.d/pkg-config-hook-config 467c877de00898418a9b26d432a1719a\r\nDescription: manage compile and link flags for libraries\r\npkg-config is a system for managing library compile and link flags that\r\nworks with automake and autoconf.\r\n.\r\nIncreasingly libraries ship with \".pc\" files that allow querying of the\r\ncompiler and linker flags needed to use them through the pkg-config(1)\r\nprogram.\r\nOriginal-Maintainer: Tollef Fog Heen <tfheen@debian.org>\r\nHomepage: http://pkg-config.freedesktop.org\r\n```"
        },
        {
            "created_at": "2021-07-15T03:04:16.348Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17380981) by Nick Hortovanyi (horto):*\nUnfortunately I'm doing this inside of a ros2 galactic colcon build\r\n\r\n\u00a0\r\n\r\nYou need ros2 galactic installed\r\n\r\n\u00a0\r\n\r\nNeed this installed, built and sourced\r\n\r\n<https://github.com/aussierobots/ublox_dgnss>\r\n\r\n\u00a0\r\n\r\nFollowed by this project which is at the early stages. I'm trying to make sure the basics are compiling with `colcon build` before writing the code:\r\n\r\n<https://github.com/aussierobots/ublox_ubx_arrow>\r\n\r\n\u00a0\r\n\r\nAs mentioned previously this type of project has built successfully before. The Apache\u00a0\r\n\r\nThere appears to be a general issue not specific just with zstd now on ubuntu 20.04.2. Which is the current LTS version\r\n\r\n\u00a0\r\n\r\nHaving found the workaround above for zstd. I'm now stuck with re2 and c-ares.\r\n\r\n\u00a0\r\n\r\nThese errors are clearly coming from installed version of Apache Arrow from source now\r\n\r\n```\n\r\nCMake Warning at /usr/local/lib/cmake/arrow/Findre2Alt.cmake:25 (find_package):\r\nBy not providing \"Findre2.cmake\" in CMAKE_MODULE_PATH this project has\r\nasked CMake to find a package configuration file provided by \"re2\", but\r\nCMake did not find one.\r\n\u00a0\r\nCould not find a package configuration file provided by \"re2\" with any of\r\nthe following names:\r\n\u00a0\r\nre2Config.cmake\r\nre2-config.cmake\r\n\u00a0\r\nAdd the installation prefix of \"re2\" to CMAKE_PREFIX_PATH or set \"re2_DIR\"\r\nto a directory containing one of the above files. If \"re2\" provides a\r\nseparate development package or SDK, be sure it has been installed.\r\nCall Stack (most recent call first):\r\n/usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package)\r\n/usr/local/lib/cmake/arrow/ArrowConfig.cmake:86 (find_dependency)\r\nCMakeLists.txt:20 (find_package)\r\n\u00a0\r\n\u00a0\r\nCMake Warning at /usr/local/lib/cmake/arrow/Findc-aresAlt.cmake:25 (find_package):\r\nBy not providing \"Findc-ares.cmake\" in CMAKE_MODULE_PATH this project has\r\nasked CMake to find a package configuration file provided by \"c-ares\", but\r\nCMake did not find one.\r\n\u00a0\r\nCould not find a package configuration file provided by \"c-ares\" with any\r\nof the following names:\r\n\u00a0\r\nc-aresConfig.cmake\r\nc-ares-config.cmake\r\n\u00a0\r\nAdd the installation prefix of \"c-ares\" to CMAKE_PREFIX_PATH or set\r\n\"c-ares_DIR\" to a directory containing one of the above files. If \"c-ares\"\r\nprovides a separate development package or SDK, be sure it has been\r\ninstalled.\r\nCall Stack (most recent call first):\r\n/usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package)\r\n/usr/local/lib/cmake/arrow/ArrowConfig.cmake:86 (find_dependency)\r\nCMakeLists.txt:20 (find_package)\r\n```"
        },
        {
            "created_at": "2021-07-15T03:16:33.494Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17380987) by Nick Hortovanyi (horto):*\nI've fixed a different issue and am now able to compile with the two warnings mentioned above.\u00a0\r\n\r\nSo if someone else is trying to create a workaround I'd suggest the zstd fix I mentioned above.\r\n\r\n\u00a0\r\n\r\n`[~kou]` \u00a0is it possible that the original issue is that the Apache Arrow cmake is looking for ZSTD_LIB instead of ZSTD_LIBRARY?"
        },
        {
            "created_at": "2021-07-15T04:41:10.240Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17381024) by Kouhei Sutou (kou):*\nThe variable name isn't related. `ZSTD_LIB` should work.\r\n\r\nWe can't share reproducible instruction and you find a workaround. Can we close this issue?"
        },
        {
            "created_at": "2021-07-15T04:42:21.446Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17381026) by Kouhei Sutou (kou):*\nBTW, `cmake ... -DCMAKE_FIND_DEBUG_MODE=ON` shows debug messages related to `find_package()`. It may help us."
        },
        {
            "created_at": "2021-07-15T04:56:00.104Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17381033) by Nick Hortovanyi (horto):*\nI think the issue is, that arrow findzstd.cmake file does not work \n\nNeeds to be replaced with something simpler and similar to\nhttps://github.com/facebook/folly/blob/master/CMake/FindZstd.cmake\n\n"
        },
        {
            "created_at": "2021-07-15T05:11:18.664Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17381036) by Kouhei Sutou (kou):*\nIf you think so, you can modify `Findzstd.cmake` in your local environment and confirm whether the variable name is related or not.\r\nI can't do it because I don't have an environment that reproduces this problem."
        },
        {
            "created_at": "2021-07-15T05:31:02.377Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17381040) by Nick Hortovanyi (horto):*\nI replaced /usr/local/lib/cmake/arrow/Findzstd.cmake with the Facebook Folly version.\r\n\r\n\u00a0\r\n```java\n\r\nCMake Error at CMakeLists.txt:19 (find_package):                                                                                                               \r\nFound package configuration file:                                                                                                                                                                                                                                                                                           /usr/local/lib/cmake/arrow/ArrowConfig.cmake                                                                                                                                                                                                                                                                            but it set Arrow_FOUND to FALSE so package \"Arrow\" is considered to be NOT                                                                                   \r\nFOUND.  Reason given by package:                                                                                                                                                                                                                                                                                          Arrow could not be found because dependency zstd could not be found.  \n```\r\n\u00a0"
        },
        {
            "created_at": "2021-07-15T05:33:09.664Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17381042) by Nick Hortovanyi (horto):*\nMy fix in here works\r\n\r\n<https://github.com/aussierobots/ublox_ubx_arrow/blob/main/ublox_ubx_arrow_sink_node/CMakeLists.txt>\r\n\r\n\u00a0"
        },
        {
            "created_at": "2021-07-15T05:42:21.309Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17381047) by Kouhei Sutou (kou):*\nWhy did you use Folly's version to confirm whether the variable name in `Findzstd.cmake` is related or not?\r\nYou should change `Findzstd.cmake` and confirm. You don't need t o use Folly's version.\r\n\r\nI thought that you said that we need the following change to fix this case:\r\n\r\n```\n\r\ndiff --git a/cpp/cmake_modules/Findzstd.cmake b/cpp/cmake_modules/Findzstd.cmake\r\nindex 73b7ab250..82e1534e1 100644\r\n--- a/cpp/cmake_modules/Findzstd.cmake\r\n+++ b/cpp/cmake_modules/Findzstd.cmake\r\n@@ -44,7 +44,7 @@ endif()\r\n# First, find via if specified ZTD_ROOT\r\n if(ZSTD_ROOT)\r\n   message(STATUS \"Using ZSTD_ROOT: ${ZSTD_ROOT}\")\r\n-  find_library(ZSTD_LIB\r\n+  find_library(ZSTD_LIBRARY\r\n                NAMES ${ZSTD_LIB_NAMES}\r\n                PATHS ${ZSTD_ROOT}\r\n                PATH_SUFFIXES ${ARROW_LIBRARY_PATH_SUFFIXES}\r\n@@ -63,14 +63,14 @@ else()\r\n     set(ZSTD_INCLUDE_DIR \"${ZSTD_PC_INCLUDEDIR}\")\r\n \r\n     list(APPEND ZSTD_PC_LIBRARY_DIRS \"${ZSTD_PC_LIBDIR}\")\r\n-    find_library(ZSTD_LIB\r\n+    find_library(ZSTD_LIBRARY\r\n                  NAMES ${ZSTD_LIB_NAMES}\r\n                  PATHS ${ZSTD_PC_LIBRARY_DIRS}\r\n                  NO_DEFAULT_PATH\r\n                  PATH_SUFFIXES ${ARROW_LIBRARY_PATH_SUFFIXES})\r\n   else()\r\n# Third, check all other CMake paths\r\n-    find_library(ZSTD_LIB\r\n+    find_library(ZSTD_LIBRARY\r\n                  NAMES ${ZSTD_LIB_NAMES}\r\n                  PATH_SUFFIXES ${ARROW_LIBRARY_PATH_SUFFIXES})\r\n     find_path(ZSTD_INCLUDE_DIR\r\n@@ -79,11 +79,11 @@ else()\r\n   endif()\r\n endif()\r\n \r\n-find_package_handle_standard_args(zstd REQUIRED_VARS ZSTD_LIB ZSTD_INCLUDE_DIR)\r\n+find_package_handle_standard_args(zstd REQUIRED_VARS ZSTD_LIBRARY ZSTD_INCLUDE_DIR)\r\n \r\n if(zstd_FOUND)\r\n   add_library(zstd::libzstd UNKNOWN IMPORTED)\r\n   set_target_properties(zstd::libzstd\r\n-                        PROPERTIES IMPORTED_LOCATION \"${ZSTD_LIB}\"\r\n+                        PROPERTIES IMPORTED_LOCATION \"${ZSTD_LIBRARY}\"\r\n                                    INTERFACE_INCLUDE_DIRECTORIES \"${ZSTD_INCLUDE_DIR}\")\r\n endif()\r\n```\r\n\r\nIf you want to use Folly's version, can we close this?"
        },
        {
            "created_at": "2021-07-15T06:10:00.062Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17381062) by Nick Hortovanyi (horto):*\nThe arrow version doesn\u2019t work. It\u2019s overly complex.\n\nThe Facebook folly version works. And I assume as well on most platforms \n\nI don\u2019t understand how Findarrow.cmake interacts with Findzstd.cmake. I don\u2019t have the time to work that out.\n\nMy work around, is just that, a work around. I didn\u2019t need to do it a few months ago. \n\nBasically when I built it I enabled plasma, compute, flight, parquet, cuda and Python. I did not enable hive, Hadoop, gandiva.\n\nWhen I tried it with prebuilt packages, I installed all libraries.\n\nAs you\u2019ve confirmed there is nothing wrong with how zstd is installed. \n\n"
        },
        {
            "created_at": "2021-07-15T06:54:10.873Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17381095) by Nick Hortovanyi (horto):*\ntried your suggestion above\u00a0\r\n```java\n\r\nCMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message): \r\nCould NOT find zstd (missing: ZSTD_LIBRARY) \r\nCall Stack (most recent call first):\r\n /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE)\r\n /usr/local/lib/cmake/arrow/Findzstd.cmake:85 (find_package_handle_standard_args)\r\n /usr/share/cmake-3.16/Modules/CMakeFindDependencyMacro.cmake:47 (find_package)\r\n /usr/local/lib/cmake/arrow/ArrowConfig.cmake:86 (find_dependency)\r\n CMakeLists.txt:19 (find_package)\r\n```"
        },
        {
            "created_at": "2021-07-16T00:54:32.604Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17381639) by Kouhei Sutou (kou):*\nIt shows that the variable name isn't related.\r\n\r\nDo you have any more tries you want to do in this issue? `cmake ... -DCMAKE_FIND_DEBUG_MODE=ON`?\r\n\r\nCan we close this issue?"
        },
        {
            "created_at": "2021-07-16T01:02:51.115Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17381641) by Nick Hortovanyi (horto):*\nI experimented on another machine last night. That machine had been upgraded over the years probably from Ubuntu 16.04 -> Ubuntu 18.04 ->\u00a0Ubuntu 20.04 and the cmake-gui configuration messages are a lot more detailed with pkg-config messages. However I didnt complete a full compile (long story - as I had protobufs installed locally which needed upgrading and other packages).\r\n\r\nThis issue is clearly related to a fresh install of Ubuntu 20.04.2 with the versions of clang, cmake etc installed.\r\n\r\nI'd also suggest its pointless looking for Findzstd.cmake, FindRE2.cmake and FindC-Ares.cmake in the Arrow cmake modules. They will never exist as the package maintainers don't produce them.\r\n\r\nSo no I dont think this issue can be closed. The arrow cmake files just dont make sense and/or instructions are required on what to install in retro.\r\n\r\nI dont have the time to work it all out at the moment."
        },
        {
            "created_at": "2021-07-17T21:30:23.591Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13334?focusedCommentId=17382674) by Kouhei Sutou (kou):*\nSummary:\r\n\r\n- Our `cpp/examples/minimal_build` on Ubuntu 20.04 doesn't have this problem.\n  - Our CI log: https://github.com/ursacomputing/crossbow/runs/3091855406#step:4:875\n- This problem is caused with https://github.com/aussierobots/ublox_ubx_arrow and ROS 2 on Ubuntu 20.04.02.\n  - https://github.com/facebook/folly/blob/master/CMake/FindZstd.cmake can find Zstandard on the environment.\n  - `cpp/examples/minimal_build` isn't tried on the environment.\n  - `-DCMAKE_FIND_DEBUG_MODE=ON` isn't tried on the environment.\n- `[~horto]` is the only person that can confirm this for now.\n  - `[~horto]` doesn't have the time to work on this for now.\n    \n    We don't have the next action to solve this problem for now."
        }
    ]
}