{
    "issue": {
        "title": "[Python] pandas index information gets lost when partition_cols are used",
        "body": "***Note**: This issue was originally created as [ARROW-9136](https://issues.apache.org/jira/browse/ARROW-9136). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI originally reported this as a pandas github issue\u00a0<https://github.com/pandas-dev/pandas/issues/34790>\r\n\r\n\u00a0\r\n\r\nTo reproduce:\r\n```python\n\r\ndf = pd.DataFrame({'Data': [1, 2], 'partition': [1, 2]}, index=['2000-01-01', '2010-01-02'])\r\n\r\ndata_path_with_partitions = 'with_partitions.parquet'\r\ndf.to_parquet(data_path_with_partitions, partition_cols=['partition'])\r\ndf_read_with_partitions = pd.read_parquet(data_path_with_partitions)\r\npd.testing.assert_frame_equal(df, df_read_with_partitions)  # <-- this fails because the index has been turned into an extra column __index_level_0\r\n```\r\nAs far as I can tell the issue is in the pandas integration of\u00a0`pyarrow.parquet`, in particular that the\u00a0`subtable.schema.metadata[b'pandas']`\u00a0of the\u00a0`subtable`\u00a0generated in\u00a0`pyarrow/parquet.py:1725`\u00a0no longer contains the index column info passed in via\u00a0`subschema.metadata[b'pandas']`. This overwriting happens in\u00a0`pyarrow/pandas_compat.py:595`.\u00a0\r\n\r\n\u00a0\r\n\r\nI tried working around this by creating a\u00a0\\*`_common_schema` file, but since the metadata of the individual datasets all have (incorrect)\u00a0`b'pandas'` keys, these are prioritized.",
        "created_at": "2020-06-15T15:30:33.000Z",
        "updated_at": "2020-06-16T15:08:57.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": []
}