{
    "issue": {
        "title": "[Java] Allow FixedSizeListVector to have empty children",
        "body": "***Note**: This issue was originally created as [ARROW-10508](https://issues.apache.org/jira/browse/ARROW-10508). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n### General problem\r\n\r\nFixedSizeListVector was designed to hold a list of lists with data (filled rectangle matrix) but in real life we can have list of empty lists (zero-width matrix). Java implementation of FixedSizeListVector does not allow to create (and read) such list. But in [specification](http://arrow.apache.org/docs/format/Columnar.html#fixed-size-list-layout) there is no any restriction that listSize can not be zero. Also zero-width matrix can be successfully created by C++ implementation. Java fails on reading it. The most problem is that entire table (VectorSchemaRoot) can not be read if we have at least one FixedSizeListVector.listSize==0 field.\r\n### Expected behavior\r\n \\* Read zero-width matrix (FixedSizeListVector with listSize==0) written by C++ as zero-width matrix.\r\n \\* Read any field from the correct table (written and readable by C++)\r\n\r\n### Actual behavior\r\n \\* java.lang.IllegalArgumentException: list size must be positive at org.apache.arrow.util.Preconditions.checkArgument(Preconditions.java:136)\r\n \\* Filled vectors can not be read if at least one fixed list size is 0\r\n\r\n### Examples to reproduce\r\n#### Reproduce on creating\r\n\r\nAdd \r\n `FixedSizeListVector.empty(\"ZeroWidthMatrix\", 0, new RootAllocator());` \r\n line of code anywhere\r\n#### Reproduce on reading\r\n\r\n<https://github.com/Kopilov/Arrow_FixedSizeListVector_ZeroWidth> repository contains C++ and Java code with GitHub Action workflow that reproduces Actual behavior.\r\n Here are some logs: <https://github.com/Kopilov/Arrow_FixedSizeListVector_ZeroWidth/runs/1363206662> (look \"Run C++ example\", \"Build and run Java example\")",
        "created_at": "2020-11-06T12:50:33.000Z",
        "updated_at": "2020-12-27T10:58:46.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-11-19T08:28:06.000Z"
    },
    "comments": [
        {
            "created_at": "2020-11-09T08:15:58.364Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10508?focusedCommentId=17228400) by Liya Fan (fan_li_ya):*\n`[~Kopilov]` Thanks for reporting the problem. Your proposal looks good to me. "
        },
        {
            "created_at": "2020-11-19T08:28:06.650Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10508?focusedCommentId=17235261) by Liya Fan (fan_li_ya):*\nIssue resolved by pull request 8605\n<https://github.com/apache/arrow/pull/8605>"
        }
    ]
}