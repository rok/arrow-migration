{
    "issue": {
        "title": "[C++] Do not allocate memory for primitive outputs in CastKernel::Call implementation",
        "body": "***Note**: This issue was originally created as [ARROW-1896](https://issues.apache.org/jira/browse/ARROW-1896). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThis is some refactoring / tidying. Unless an output of cast has a non-determinate size (e.g. is Binary or something else), the `CastKernel::Call` implementation should assume that it is writing into pre-allocated memory. The corresponding memory allocation can be lifted into the `arrow::compute::Cast` API",
        "created_at": "2017-12-06T21:44:13.000Z",
        "updated_at": "2019-02-15T04:56:36.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-02-15T04:56:34.000Z"
    },
    "comments": [
        {
            "created_at": "2019-02-15T04:56:34.961Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1896?focusedCommentId=16768937) by Wes McKinney (wesm):*\nIssue resolved by pull request 3642\n<https://github.com/apache/arrow/pull/3642>"
        }
    ]
}