{
    "issue": {
        "title": "[Python] Remove deprecated APIs",
        "body": "***Note**: This issue was originally created as [ARROW-13555](https://issues.apache.org/jira/browse/ARROW-13555). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nRemove APIs that have been deprecated for long enough.\r\nThis probably includes the old filesystem layer as well as the custom serialization layer.",
        "created_at": "2021-08-04T14:24:58.000Z",
        "updated_at": "2022-10-06T09:10:11.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: task"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-08-04T14:25:03.636Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13555?focusedCommentId=17393212) by Antoine Pitrou (apitrou):*\ncc `[~jorisvandenbossche]`"
        },
        {
            "created_at": "2021-08-04T14:39:43.967Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13555?focusedCommentId=17393229) by Joris Van den Bossche (jorisvandenbossche):*\nIt depends a bit what we call \"long enough\". Both the filesystems and serialization layer have been deprecated in 2.0.0, and changed from Deprecation to FutureWarning in 4.0.0. So removing all-together in 6.0.0 sounds fitting. By the time 6.0.0 will get released, that will be 1 year after the initial deprecation. \r\n\r\n(on the other hand, in time, 1 year is also not that much given that people don't seem to update (py)arrow that regularly)"
        },
        {
            "created_at": "2021-08-04T14:47:11.175Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13555?focusedCommentId=17393236) by Joris Van den Bossche (jorisvandenbossche):*\nSome other things that are deprecated even for a longer time:\r\n\r\n- Accessing a bunch of ipc related functionalities from the top-level namespace instead from `pyarrow.ipc` (deprecated since 0.17)\n- `pyarrow.compat` module (deprecated since 1.0.0)\n- The `...Value` scalar classes (deprecated since 1.0.0)\n- Ignoring mismatch between `ordered` flag of values and type in `array(..)`\n- `chunksize` parameter in RecordBatchWriter.write_table (deprecated since 0.15) + `get_next_batch` method\n- `DictionaryScalar.index/dictionary_value` attributes (deprecated since 1.0.0)\n- `num_children` field of DataType\n- `add_metadata` method of Field"
        },
        {
            "created_at": "2021-08-11T07:12:00.663Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13555?focusedCommentId=17397109) by Joris Van den Bossche (jorisvandenbossche):*\nFor removing the FileSystems, at least the hdfs one, it would be good if eg ARROW-9226 was solved first, I think"
        },
        {
            "created_at": "2022-07-08T07:53:41.038Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13555?focusedCommentId=17564141) by Joris Van den Bossche (jorisvandenbossche):*\nI opened a subtask ARROW-17010 for the \"easy\" ones that have been deprecated in pyarrow 1.0.0 or earlier."
        }
    ]
}