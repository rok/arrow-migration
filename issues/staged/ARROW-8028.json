{
    "issue": {
        "title": "[Go] Allow duplicate field names in schemas and nested types",
        "body": "***Note**: This issue was originally created as [ARROW-8028](https://issues.apache.org/jira/browse/ARROW-8028). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nGo's implementation of Schema panics if field names are duplicated within a schema. This is not guaranteed by the standard, so Go will not be able to handle valid record batches produced by other implementations which contain these.\r\n\r\nhttps://github.com/apache/arrow/blob/084549a/go/arrow/schema.go#L117",
        "created_at": "2020-03-07T17:18:04.000Z",
        "updated_at": "2020-04-15T16:33:30.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Go",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-03-13T11:09:08.000Z"
    },
    "comments": [
        {
            "created_at": "2020-03-11T01:05:03.366Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8028?focusedCommentId=17056563) by Wes McKinney (wesm):*\ncc `[~sbinet]`"
        },
        {
            "created_at": "2020-03-11T09:26:30.824Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8028?focusedCommentId=17056783) by Sebastien Binet (sbinet):*\nI must say I fail to see the use case for a schema with multiple fields with the same name (and possibly with different data types).\r\nand it seems more like an error that should be caught very early on."
        },
        {
            "created_at": "2020-03-11T15:03:08.795Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8028?focusedCommentId=17057088) by Wes McKinney (wesm):*\nThe project has so far taken the position that downstream applications are responsible for the enforcement of these kinds of metadata constraints. From the perspective of the Arrow protocol \"data is data\". In my experience duplicate field names do arise in practice and it's a slippery slope if Arrow implementations start making arbitrary (or otherwise opinionated) decisions about what to do with such data (whether disallowing them or otherwise disambiguating them by modifying the field names). APIs that presume field name uniqueness can raise an exception, though"
        },
        {
            "created_at": "2020-03-11T17:31:42.391Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8028?focusedCommentId=17057242) by Sebastien Binet (sbinet):*\nok. I usually try to make defined behaviours very constrained (and then relaxing those if needed) as the opposite is a bit more convoluted to put in place."
        },
        {
            "created_at": "2020-03-11T17:33:04.536Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8028?focusedCommentId=17057247) by Francois Saint-Jacques (fsaintjacques):*\n```java\n\r\nSELECT 1 AS one, 1 AS one;\n```"
        },
        {
            "created_at": "2020-03-13T11:09:09.059Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8028?focusedCommentId=17058638) by Sebastien Binet (sbinet):*\nIssue resolved by pull request 6580\n<https://github.com/apache/arrow/pull/6580>"
        },
        {
            "created_at": "2020-04-15T16:33:30.211Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8028?focusedCommentId=17084229) by Wes McKinney (wesm):*\nHere's an example from the wild https://github.com/grafana/grafana-plugin-sdk-go/issues/137#issue-600431508"
        }
    ]
}