{
    "issue": {
        "title": "[Python] Casting Table to new schema ignores nullability of fields",
        "body": "***Note**: This issue was originally created as [ARROW-16651](https://issues.apache.org/jira/browse/ARROW-16651). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSimilar to ARROW-15478, but not for nested fields but just for casting a full Table (in theory that could be the same code, but currently the Table.cast logic is implemented in cython). \r\n\r\nSo currently when casting a Table to a new schema, the nullability of the fields in the schema is ignored (and as a result you get an \"invalid\" schema indicating a field is non-nullable that actually can have nulls):\r\n\r\n```Java\n\r\n>>> table = pa.table({'a': [None, 1]})\r\n>>> table\r\npyarrow.Table\r\na: int64\r\n----\r\na: [[null,1]]\r\n\r\n>>> new_schema = pa.schema([pa.field(\"a\", \"int64\", nullable=False)])\r\n>>> table.cast(new_schema)\r\npyarrow.Table\r\na: int64 not null\r\n----\r\na: [[null,1]]\r\n```",
        "created_at": "2022-05-25T08:56:29.000Z",
        "updated_at": "2022-09-08T14:52:24.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-09-08T12:34:12.000Z"
    },
    "comments": [
        {
            "created_at": "2022-09-08T12:34:12.354Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16651?focusedCommentId=17601802) by Joris Van den Bossche (jorisvandenbossche):*\nIssue resolved by pull request 14048\n<https://github.com/apache/arrow/pull/14048>"
        }
    ]
}