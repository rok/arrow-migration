{
    "issue": {
        "title": "[C++] Mixed support for binary types in regex functions",
        "body": "***Note**: This issue was originally created as [ARROW-13879](https://issues.apache.org/jira/browse/ARROW-13879). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe functions count_substring, count_substring_regex, find_substring, and find_substring_regex all accept binary types but the function extract_regex, match_substring, match_substring_regex, match_like, starts_with, ends_with, split_pattern, and split_pattern_regex do not.\r\n\r\nThey should either all accept binary types or none should.",
        "created_at": "2021-09-03T03:08:14.000Z",
        "updated_at": "2021-10-28T19:28:31.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-10-25T12:53:23.000Z"
    },
    "comments": [
        {
            "created_at": "2021-10-01T06:46:47.456Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13879?focusedCommentId=17423127) by Eduardo Ponce (edponce):*\nAdding \"true\" binary support to Arrow (ie. not encoded as ASCII/UTF-8) seems to be more involved than what I initially expected. Most of the kernels listed in this PR are implemented in such a way that they could in theory work with non-encoded binary data, but the fact that **std::string** and **std::string_view** are used in certain parts to hold the binary data prevents \"true\" binary support because of they are treated as [null-terminating strings](https://github.com/apache/arrow/blob/master/cpp/src/arrow/vendored/string_view.hpp#L421). Therefore, binary data containing a NULL byte (_0x00_) will yield incorrect results.\r\n\r\nTwo possible solutions are:\r\n \\* to consider _BinaryTypes_ different from _StringTypes_ where the former always requires an explicit _length_ and the latter can depend on null-terminating strings\r\n \\* to treat strings as non-null-terminating sequence of bytes and wrap them in a string-like container that uses an explicit _size_ instead of depending on a NULL value\r\n\r\nFor this issue's PR, I am adding partial binary support to all the kernels since a null byte is not supported."
        },
        {
            "created_at": "2021-10-01T06:48:46.824Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13879?focusedCommentId=17423129) by Eduardo Ponce (edponce):*\nPython supports zeroed bytes:\r\n```python\n\r\n>>> s = b'\\x84\\x00\\x2b'\r\n>>> len(s)\r\n3\r\n```"
        },
        {
            "created_at": "2021-10-01T07:38:21.880Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13879?focusedCommentId=17423161) by Eduardo Ponce (edponce):*\nNot sure if this is of importance here, but the [protobuf types map both **string** and **bytes** to C++ **string**](https://developers.google.com/protocol-buffers/docs/proto3#scalar)."
        },
        {
            "created_at": "2021-10-02T02:51:49.759Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13879?focusedCommentId=17423456) by David Li (lidavidm):*\nstd::string can contain null. Some place is constructing it from a pointer instead of a pointer + length if that's the case."
        },
        {
            "created_at": "2021-10-02T03:52:43.581Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13879?focusedCommentId=17423460) by Eduardo Ponce (edponce):*\nWell, the issue is that `string_view` is used to encapsulate binary data in certain parts and [`string_view.length()` is used to get the size but it stops at the first null byte](https://github.com/apache/arrow/blob/master/cpp/src/arrow/vendored/string_view.hpp#L421), thus providing an incorrect size."
        },
        {
            "created_at": "2021-10-02T12:34:02.927Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13879?focusedCommentId=17423516) by David Li (lidavidm):*\nlength() is only used again if you construct from a pointer instead of a pointer + length - so this is still an issue with usage and not with string_view."
        },
        {
            "created_at": "2021-10-25T12:53:23.811Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13879?focusedCommentId=17433737) by David Li (lidavidm):*\nIssue resolved by pull request 11233\n<https://github.com/apache/arrow/pull/11233>"
        }
    ]
}