{
    "issue": {
        "title": "[C++] Add kernel for slicing list values",
        "body": "***Note**: This issue was originally created as [ARROW-17960](https://issues.apache.org/jira/browse/ARROW-17960). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThis would be a scalar kernel \"List<T> -> List<T>\" (or to fixed size list?), where you can subset the values in each list element. \r\n\r\nSo for example, giving the list array:\r\n\r\n```Java\n\r\narr = pa.array([[1, 2, 3], [4, 5, 6, 7], [8, 9]])\r\n```\r\n\r\nwe could do something like the following to get the first two elements of each list:\r\n\r\n```Java\n\r\npc.list_slice(arr, start=0, stop=2)\r\n->  pa.array([[1, 2], [4, 5], [8, 9]])\r\n```\r\n\r\nThis would supplement the existing `list_element` kernel.",
        "created_at": "2022-10-07T08:18:11.000Z",
        "updated_at": "2022-11-16T02:43:10.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-11-15T17:56:20.000Z"
    },
    "comments": [
        {
            "created_at": "2022-11-15T17:56:20.090Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17960?focusedCommentId=17634463) by David Li (lidavidm):*\nIssue resolved by pull request 14395\n<https://github.com/apache/arrow/pull/14395>"
        }
    ]
}