{
    "issue": {
        "title": "[R] import_from_c() / export_to_c() methods should accept external pointers",
        "body": "***Note**: This issue was originally created as [ARROW-14804](https://issues.apache.org/jira/browse/ARROW-14804). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe import and export to C methods for Field, Shema, DataType, Array, RecordBatch, and RecordBatchReader all require the pointer to be passed as a `double` (casted from `uintptr_t` casted from `*`. I imagine there's good reason for this path to exist; however, the R externalptr type and 64-bit integer are more natural types and I think it would not be hard to allow pointers to be passed in this way. A [short discussion](https://github.com/apache/arrow/pull/11679#discussion_r755178800) of this occurred when updating the Python docs on how to pass Array pointers to R.\r\n\r\nThe implementation lives in [arrow_cpp11.h](https://github.com/apache/arrow/blob/eb2fa2df6dedf2743047df9dd19d7ed4f4482c22/r/src/arrow_cpp11.h#L49-L54) and it seems like it would be easy to allow a user to pass something more R-like while still keeping the double route open for the packages that need it.\r\n\r\nI see that this is getting used for pointers that R6 objects are storing for the underlying C++ objects...I imagine there's a good reason for this but I wonder if there's a way to make the places where this interacts with other packages more intuitive.",
        "created_at": "2021-11-24T00:34:55.000Z",
        "updated_at": "2021-12-20T23:31:22.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-12-20T17:41:41.000Z"
    },
    "comments": [
        {
            "created_at": "2021-11-24T08:43:22.391Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14804?focusedCommentId=17448452) by Antoine Pitrou (apitrou):*\nNot only dedicated pointer types may be \"more natural\", but `double` is actually _insufficient_. A double precision floating-point number has 53 bits of mantissa, which is not enough to represent every possible 64-bit pointer. \r\n\r\nI suppose pointer values are often clustered around 0, which makes them exactly representable as a `double`, but that's just luck and there's no guarantee that pointers will always be like that."
        },
        {
            "created_at": "2021-12-20T17:41:41.847Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14804?focusedCommentId=17462748) by Jonathan Keane (jonkeane):*\nIssue resolved by pull request 11919\n<https://github.com/apache/arrow/pull/11919>"
        }
    ]
}