{
    "issue": {
        "title": "[C++] Remove bool specializations of bit block counter operations",
        "body": "***Note**: This issue was originally created as [ARROW-15220](https://issues.apache.org/jira/browse/ARROW-15220). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWe can simplify the [logical bit operations in util/bit_block_counter.h](https://github.com/apache/arrow/blob/master/cpp/src/arrow/util/bit_block_counter.h#L53) so that the specializations for `bool` and `T` can be merged because C++ guarantees that for boolean types: `(bool)(a & b) == a && b`. Note the explicit cast which corresponds to the return type `T` in these functions.\r\n\r\n```Java\n\r\n// Works correctly for bool and integer types\r\ntemplate <typename T>\r\nT bit_and(T x, T y) {\r\n  return x & y;\r\n}\r\n```\r\n\r\nThis change has a higher impact for ternary bitwise versions, see for example [here](https://github.com/apache/arrow/pull/11882/files#diff-fd2cb2745dc0cc2a84f7cd46cba410ef26f48abaf80e0fe3cc6c8657ab42a743R93)\r\n\r\n\r\n\r\n",
        "created_at": "2021-12-30T09:36:32.000Z",
        "updated_at": "2021-12-31T22:24:00.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-12-30T20:28:19.000Z"
    },
    "comments": [
        {
            "created_at": "2021-12-30T20:28:19.410Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15220?focusedCommentId=17466986) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 12052\n<https://github.com/apache/arrow/pull/12052>"
        }
    ]
}