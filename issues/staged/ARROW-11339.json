{
    "issue": {
        "title": "[Rust][DataFusion] length kernel does not correctly calculate character length",
        "body": "***Note**: This issue was originally created as [ARROW-11339](https://issues.apache.org/jira/browse/ARROW-11339). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe current kernel works for simple characters as it appears to be assuming that 1 byte = 1 character. this is very fast but is not a safe assumption given Arrow strings are utf8. \r\n\r\nA simple example of failure is from the Postgres example where the current `length` implementation will calculate 5.\r\n\r\n`char_length('jos\u00e9') \u2192 4`\r\n\r\nThe correct method seems to be via https://docs.rs/unicode-segmentation/1.2.1/unicode_segmentation/struct.Graphemes.html which I can implement in my work here: https://github.com/apache/arrow/pull/9243 and remove from kernel.",
        "created_at": "2021-01-21T20:39:35.000Z",
        "updated_at": "2021-01-30T00:39:43.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust - DataFusion",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-01-30T00:39:43.000Z"
    },
    "comments": [
        {
            "created_at": "2021-01-21T21:32:00.947Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11339?focusedCommentId=17269660) by Mike Seddon (MikeSeddonAU):*\nactually i think i can rename `length` to `bit_length` which is an ANSI SQL function anyway and wiil behave correctly."
        },
        {
            "created_at": "2021-01-30T00:39:43.913Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11339?focusedCommentId=17275441) by Mike Seddon (MikeSeddonAU):*\nhttps://issues.apache.org/jira/browse/ARROW-11434"
        }
    ]
}