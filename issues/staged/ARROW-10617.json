{
    "issue": {
        "title": "[Python] RecordBatchStreamReader's iterator doesn't work with python 3.8",
        "body": "***Note**: This issue was originally created as [ARROW-10617](https://issues.apache.org/jira/browse/ARROW-10617). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe following example code doesn't work with python 3.8:\r\n\r\n```Java\n\r\nimport pyarrow as pa\r\ndata = [\r\n    pa.array([1, 2, 3, 4]),\r\n    pa.array(['foo', 'bar', 'baz', None]),\r\n    pa.array([True, None, False, True])\r\n]\r\nbatch = pa.record_batch(data, names=['f0', 'f1', 'f2'])\r\n\r\nsink = pa.BufferOutputStream()\r\nwriter = pa.ipc.new_stream(sink, batch.schema)\r\n\r\nfor i in range(5):\r\n    writer.write_batch(batch)\r\nwriter.close()\r\n\r\nbuf = sink.getvalue()\r\n\r\nreader = pa.ipc.open_stream(buf)\r\n[i for i in reader]\r\n```\r\n\r\nIt will raise the following runtime error:\r\n\r\n`StopIteration Traceback (most recent call last)`\r\n` /usr/local/lib/python3.8/dist-packages/pyarrow/ipc.pxi in pyarrow.lib._CRecordBatchReader.read_next_batch()`\r\n\r\n`StopIteration:`\r\n\r\n`During handling of the above exception, another exception occurred:`\r\n\r\n`RuntimeError Traceback (most recent call last)`\r\n` <ipython-input-7-225bed213dc7> in <module>`\r\n` 18 reader = pa.ipc.open_stream(buf)`\r\n` 19`\r\n` ---> 20 [i for i in reader]`\r\n\r\n`<ipython-input-7-225bed213dc7> in <listcomp>(.0)`\r\n` 18 reader = pa.ipc.open_stream(buf)`\r\n` 19`\r\n` ---> 20 [i for i in reader]`\r\n\r\n`/usr/local/lib/python3.8/dist-packages/pyarrow/ipc.pxi in __iter__()`\r\n\r\n`RuntimeError: generator raised StopIteration`",
        "created_at": "2020-11-16T13:07:06.000Z",
        "updated_at": "2020-12-08T02:21:06.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-12-07T18:28:11.000Z"
    },
    "comments": [
        {
            "created_at": "2020-11-18T14:13:50.134Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10617?focusedCommentId=17234664) by Joris Van den Bossche (jorisvandenbossche):*\nIf I run this example in an environment with Python 3.8.6 and pyarrow 2.0 (installed from conda-forge, on Ubuntu), the snippet above runs without errors."
        },
        {
            "created_at": "2020-11-19T05:47:29.665Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10617?focusedCommentId=17235188) by Tao He (sighingnow):*\nThe issue was found on Ubuntu 20.02, where the `libarrow-dev-1.0.1-1` is installed using `apt-get` (using apache-arrow's ppa), and the pyarrow-1.0.1 is installed by building from source using `pip3 install --no-binary pyarrow pyarrow==1.0.1`.\r\n\r\nI was also surprised that the prebuilt wheels cannot reproduces the issue. I will double-check it later."
        },
        {
            "created_at": "2020-12-07T18:23:33.869Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10617?focusedCommentId=17245425) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 8677\n<https://github.com/apache/arrow/pull/8677>"
        }
    ]
}