{
    "issue": {
        "title": "[Python] Conversion from datetime.datetime to timstamp('ns') can overflow",
        "body": "***Note**: This issue was originally created as [ARROW-6779](https://issues.apache.org/jira/browse/ARROW-6779). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIn the python conversion of datetime scalars, there is no check for integer overflow:\r\n\r\n```Java\n\r\nIn [32]: pa.array([datetime.datetime(3000, 1, 1)], pa.timestamp('ns'))                                                                                                                                             \r\nOut[32]: \r\n<pyarrow.lib.TimestampArray object at 0x7f5bddec00a8>\r\n[\r\n  1830-11-23 00:50:52.580896768\r\n]\r\n```\r\n\r\nSo in case the target type has nanosecond unit, this can give wrong results (I don't think the other resolutions can reach overflow, given the limited range of years of datetime.datetime).\r\n\r\nWe should probably check for this case and raise an error.",
        "created_at": "2019-10-03T13:41:35.000Z",
        "updated_at": "2022-08-27T14:41:43.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-04-06T18:24:20.000Z"
    },
    "comments": [
        {
            "created_at": "2021-04-06T18:24:20.175Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6779?focusedCommentId=17315768) by Antoine Pitrou (apitrou):*\nIt looks like you fixed this in ARROW-9768 :-)"
        },
        {
            "created_at": "2022-08-27T14:41:43.028Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6779?focusedCommentId=17585802) by @toddfarmer:*\nTransitioning issue from Resolved to Closed to based on resolution field value."
        }
    ]
}