{
    "issue": {
        "title": "[Python] Support for set/list columns when converting from Pandas",
        "body": "***Note**: This issue was originally created as [ARROW-6607](https://issues.apache.org/jira/browse/ARROW-6607). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nHi,\r\n\r\nUsing python 3.6.7, pandas 0.24.2, pyarrow 0.14.1 on WSL in Windows 10...\r\n\r\n```python\r\nimport pandas as pd\r\n\r\ndf = pd.DataFrame(\\{'a': [1,2,3], 'b': [set([1,2]), set([2,3]), set([3,4,5])]})\r\n\r\ndf.to_feather('test.ft')\r\n```\r\n\r\nI get:\r\n\r\n```\r\nTraceback (most recent call last):\r\n File \"<stdin>\", line 1, in <module>\r\n File \"/home/gioras/.local/lib/python3.6/site-packages/pandas/core/frame.py\", line 2131, in to_feather\r\n to_feather(self, fname)\r\n File \"/home/gioras/.local/lib/python3.6/site-packages/pandas/io/feather_format.py\", line 83, in to_feather\r\n feather.write_feather(df, path)\r\n File \"/home/gioras/.local/lib/python3.6/site-packages/pyarrow/feather.py\", line 182, in write_feather\r\n writer.write(df)\r\n File \"/home/gioras/.local/lib/python3.6/site-packages/pyarrow/feather.py\", line 93, in write\r\n table = Table.from_pandas(df, preserve_index=False)\r\n File \"pyarrow/table.pxi\", line 1174, in pyarrow.lib.Table.from_pandas\r\n File \"/home/gioras/.local/lib/python3.6/site-packages/pyarrow/pandas_compat.py\", line 496, in dataframe_to_arrays\r\n for c, f in zip(columns_to_convert, convert_fields)]\r\n File \"/home/gioras/.local/lib/python3.6/site-packages/pyarrow/pandas_compat.py\", line 496, in <listcomp>\r\n for c, f in zip(columns_to_convert, convert_fields)]\r\n File \"/home/gioras/.local/lib/python3.6/site-packages/pyarrow/pandas_compat.py\", line 487, in convert_column\r\n raise e\r\n File \"/home/gioras/.local/lib/python3.6/site-packages/pyarrow/pandas_compat.py\", line 481, in convert_column\r\n result = pa.array(col, type=type_, from_pandas=True, safe=safe)\r\n File \"pyarrow/array.pxi\", line 191, in pyarrow.lib.array\r\n File \"pyarrow/array.pxi\", line 78, in pyarrow.lib._ndarray_to_array\r\n File \"pyarrow/error.pxi\", line 85, in pyarrow.lib.check_status\r\npyarrow.lib.ArrowInvalid: ('Could not convert \\{1, 2} with type set: did not recognize Python value type when inferring an Arrow data type', 'Conversion failed for column b with type object')\r\n```\r\n\r\nAnd obviously `df.drop('b', axis=1).to_feather('test.ft')` works.\r\n\r\nQuestions:\r\n(1) Is it possible to support these kind of set/list columns?\r\n(2) Anyone has an idea on how to deal with this? I **cannot** unnest these set/list columns as this would explode the DataFrame. My only other idea is to convert set `\\{1,2}` into a string `1,2` and parse it after reading the file. And hoping it won't be slow.\r\n\r\n\u00a0\r\n\r\nUpdate:\r\n\r\nWith lists column the error is different:\r\n\r\n```python\r\nimport pandas as pd\r\n\r\ndf = pd.DataFrame(\\{'a': [1,2,3], 'b': [[1,2], [2,3], [3,4,5]]})\r\n\r\ndf.to_feather('test.ft')\r\n```\r\n\r\n```\r\n\r\nTraceback (most recent call last):\r\n File \"<stdin>\", line 1, in <module>\r\n File \"/home/gioras/.local/lib/python3.6/site-packages/pandas/core/frame.py\", line 2131, in to_feather\r\n to_feather(self, fname)\r\n File \"/home/gioras/.local/lib/python3.6/site-packages/pandas/io/feather_format.py\", line 83, in to_feather\r\n feather.write_feather(df, path)\r\n File \"/home/gioras/.local/lib/python3.6/site-packages/pyarrow/feather.py\", line 182, in write_feather\r\n writer.write(df)\r\n File \"/home/gioras/.local/lib/python3.6/site-packages/pyarrow/feather.py\", line 97, in write\r\n self.writer.write_array(name, col.data.chunk(0))\r\n File \"pyarrow/feather.pxi\", line 67, in pyarrow.lib.FeatherWriter.write_array\r\n File \"pyarrow/error.pxi\", line 93, in pyarrow.lib.check_status\r\npyarrow.lib.ArrowNotImplementedError: list<item: int64>\r\n\r\n```",
        "created_at": "2019-09-18T18:00:00.000Z",
        "updated_at": "2021-10-01T15:15:10.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-10-01T15:15:10.000Z"
    },
    "comments": [
        {
            "created_at": "2020-01-30T16:09:03.547Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6607?focusedCommentId=17026791) by Antoine Pitrou (apitrou):*\ncc `[~jorisvandenbossche]`\r\n"
        },
        {
            "created_at": "2020-01-30T17:31:17.826Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6607?focusedCommentId=17026864) by Neal Richardson (npr):*\nSee also\u00a0ARROW-7662 where this is happening in R"
        },
        {
            "created_at": "2020-09-29T12:02:06.512Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6607?focusedCommentId=17203876) by Joris Van den Bossche (jorisvandenbossche):*\n`[~gsimchoni]` Note that in the meantime, writing the column with lists (your second example) works fine.  \r\nSo that is also a possible solution for the columns with sets, to convert those sets to lists before writing to feather.\r\n\r\n"
        },
        {
            "created_at": "2020-10-07T20:56:00.913Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6607?focusedCommentId=17209859) by Krisztian Szucs (kszucs):*\n`[~jorisvandenbossche]` I'm postponing it to 3.0 so we can elaborate more on the desired behavior. "
        },
        {
            "created_at": "2021-09-07T11:54:54.495Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6607?focusedCommentId=17411166) by Krisztian Szucs (kszucs):*\n`[~amol-]` Any chance that https://github.com/apache/arrow/pull/11076 is going to resolve it?"
        },
        {
            "created_at": "2021-10-01T15:14:38.430Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6607?focusedCommentId=17423330) by Joris Van den Bossche (jorisvandenbossche):*\nIndeed, the snippet above works now. This is fixed by ARROW-6626"
        }
    ]
}