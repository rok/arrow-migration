{
    "issue": {
        "title": "[C++] Fix compiler warnings with gcc 8.2.0",
        "body": "***Note**: This issue was originally created as [ARROW-4346](https://issues.apache.org/jira/browse/ARROW-4346). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI just set up a new machine on Ubuntu 18.10 so I'm getting a few papercuts\r\n\r\n```Java\n\r\n/usr/bin/ccache /usr/bin/c++  -DARROW_EXTRA_ERROR_CONTEXT -DARROW_JEMALLOC -DARROW_JEMALLOC_INCLUDE_DIR=/home/wesm/code/arrow/cpp/build/jemalloc_ep-prefix/src/jemalloc_ep/dist//include -DARROW_NO_DEPRECATED_API -DARROW_USE_GLOG -DARROW_USE_SIMD -DARROW_WITH_ZSTD -Isrc -I../src -isystem /home/wesm/cpp-toolchain/include -isystem gbenchmark_ep/src/gbenchmark_ep-install/include -isystem jemalloc_ep-prefix/src -isystem ../thirdparty/hadoop/include -isystem orc_ep-install/include -isystem /home/wesm/cpp-toolchain/include/thrift -Wno-noexcept-type  -fuse-ld=gold -ggdb -O0  -Wall -Wconversion -Wno-sign-conversion -Werror -msse4.2  -g -fPIE   -std=gnu++11 -MD -MT src/parquet/CMakeFiles/parquet-encoding-benchmark.dir/encoding-benchmark.cc.o -MF src/parquet/CMakeFiles/parquet-encoding-benchmark.dir/encoding-benchmark.cc.o.d -o src/parquet/CMakeFiles/parquet-encoding-benchmark.dir/encoding-benchmark.cc.o -c ../src/parquet/encoding-benchmark.cc\r\nIn file included from ../src/parquet/encoding-internal.h:33,\r\n                 from ../src/parquet/encoding-benchmark.cc:20:\r\n../src/parquet/encoding.h: In instantiation of \u2018int parquet::Decoder<DType>::DecodeSpaced(parquet::Decoder<DType>::T*, int, int, const uint8_t*, int64_t) [with DType = parquet::DataType<(parquet::Type::type)6>; parquet::Decoder<DType>::T = parquet::ByteArray; uint8_t = unsigned char; int64_t = long int]\u2019:\r\n../src/parquet/encoding.h:110:15:   required from here\r\n../src/parquet/encoding.h:120:11: error: \u2018void* memset(void*, int, size_t)\u2019 clearing an object of non-trivial type \u2018parquet::Decoder<parquet::DataType<(parquet::Type::type)6> >::T\u2019 {aka \u2018struct parquet::ByteArray\u2019}; use assignment or value-initialization instead [-Werror=class-memaccess]\r\n     memset(buffer + values_read, 0, (num_values - values_read) * sizeof(T));\r\n     ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from ../src/parquet/schema.h:31,\r\n                 from ../src/parquet/encoding.h:29,\r\n                 from ../src/parquet/encoding-internal.h:33,\r\n                 from ../src/parquet/encoding-benchmark.cc:20:\r\n../src/parquet/types.h:155:8: note: \u2018parquet::Decoder<parquet::DataType<(parquet::Type::type)6> >::T\u2019 {aka \u2018struct parquet::ByteArray\u2019} declared here\r\n struct ByteArray {\r\n        ^~~~~~~~~\r\ncc1plus: all warnings being treated as errors\r\n```",
        "created_at": "2019-01-24T00:10:57.000Z",
        "updated_at": "2019-01-24T09:47:35.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-01-24T09:47:29.000Z"
    },
    "comments": [
        {
            "created_at": "2019-01-24T00:19:00.736Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4346?focusedCommentId=16750572) by Wes McKinney (wesm):*\nAlso for some reason I'm hitting this same bug on Ubuntu 18.10 with valgrind 3.13:\r\n\r\nhttps://bugzilla.redhat.com/show_bug.cgi?id=1629893\r\n\r\nI'll see if using valgrind 3.14 solves it"
        },
        {
            "created_at": "2019-01-24T09:47:29.371Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4346?focusedCommentId=16750949) by Krisztian Szucs (kszucs):*\nIssue resolved by pull request 3467\n<https://github.com/apache/arrow/pull/3467>"
        }
    ]
}