{
    "issue": {
        "title": "[C++] Use bcp to make a slim boost for bundled build",
        "body": "***Note**: This issue was originally created as [ARROW-8222](https://issues.apache.org/jira/browse/ARROW-8222). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWe don't use much of Boost (just system, filesystem, and regex), but when we do a bundled build, we still download and extract all of boost. The tarball itself is 113mb, expanded is over 700mb. This can be slow, and it requires a lot of free disk space that we don't really need.\r\n\r\n[bcp](https://www.boost.org/doc/libs/1_72_0/tools/bcp/doc/html/index.html) is a boost tool that lets you extract a subset of boost, resolving any of its necessary dependencies across boost. The savings for us could be huge:\r\n\r\n```Java\n\r\nmkdir test\r\n./bcp system.hpp filesystem.hpp regex.hpp test\r\ntar -czf test.tar.gz test/\r\n```\r\n\r\nThe resulting tarball is 885K (kilobytes!). \r\n\r\n`bcp` also lets you re-namespace, so this would (IIUC) solve ARROW-4286 as well.\r\n\r\nWe would need a place to host this tarball, and we would have to updated it whenever we (1) bump the boost version or (2) add a new boost library dependency. This patch would of course include a script that would generate the tarball. Given the small size, we could also consider just vendoring it.",
        "created_at": "2020-03-25T22:34:11.000Z",
        "updated_at": "2020-04-02T20:52:35.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-03-30T03:24:51.000Z"
    },
    "comments": [
        {
            "created_at": "2020-03-25T22:38:12.070Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8222?focusedCommentId=17067190) by Wes McKinney (wesm):*\n> We would need a place to host this tarball\r\n\r\nYou can host it as an artifact in a GitHub release. So we could put the bcp generator script in the Arrow repo and then use it to create the release artifact in a for-this-purpose GitHub repo"
        },
        {
            "created_at": "2020-03-27T22:49:43.035Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8222?focusedCommentId=17069092) by Wes McKinney (wesm):*\nTo collect some anecdotal evidence about problems with the current boost_ep. It seems the entire boostorg has some kind of rate limiting issue on Bintray and trying to access e.g. https://dl.bintray.com/boostorg/release/1.72.0/source/boost_1_72_0.tar.gz yields 403 Forbidden. So all the more reason to host our EP artifact on GitHub or some other place within our agency"
        },
        {
            "created_at": "2020-03-30T03:24:51.854Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8222?focusedCommentId=17070660) by Wes McKinney (wesm):*\nIssue resolved by pull request 6734\n<https://github.com/apache/arrow/pull/6734>"
        }
    ]
}