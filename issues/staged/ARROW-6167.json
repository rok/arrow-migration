{
    "issue": {
        "title": "[R] macOS binary R packages on CRAN don't have arrow_available",
        "body": "***Note**: This issue was originally created as [ARROW-6167](https://issues.apache.org/jira/browse/ARROW-6167). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe `configure` script in the R package has some [magic](https://github.com/apache/arrow/blob/master/r/configure#L66-L86)\u00a0that should ensure that on macOS, you're guaranteed a successful library installation even (especially) if you don't have libarrow installed on your system. This magic also is designed so that when CRAN builds a binary package for macOS, the C++ libraries are bundled and \"just work\" when a user installs it, no compilation required.\u00a0\r\n\r\nHowever, the magic appeared to fail on CRAN this time, as the binaries linked on\u00a0<https://cran.r-project.org/web/packages/arrow/index.html>\u00a0were built without libarrow\u00a0(`arrow::arrow_available()` returns `FALSE`).\u00a0\r\n\r\nI've identified three vectors by which you can get an arrow package installation on macOS in this state:\r\n1. The [check](https://github.com/apache/arrow/blob/master/r/configure#L71)\u00a0to see if you've already installed `apache-arrow` via Homebrew always passes, so if you have Homebrew installed but haven't done `brew install apache-arrow`, the script won't do it for you like it looks like it intends. (This is not suspected to be the problem on CRAN because they don't have Homebrew installed.)\n1. If the\u00a0\"[autobrew](https://github.com/apache/arrow/blob/master/r/configure#L80-L81)\" installation fails, then the [test on L102](https://github.com/apache/arrow/blob/master/r/configure#L102)\u00a0will correctly fail. I managed to trigger this (by luck?) on the [R-hub testing service](https://builder.r-hub.io/status/arrow_0.14.1.tar.gz-da083126612b46e28854b95156b87b31#L533).\u00a0This is possibly what happened on CRAN, though the only [build logs](https://www.r-project.org/nosvn/R.check/r-release-osx-x86_64/arrow-00check.html)\u00a0we have from CRAN are terse because it believes the build was successful.\u00a0\n1. Some\u00a0idiosyncrasy\u00a0in the compiler on the CRAN macOS system such that the autobrew script would successfully download the arrow libraries but the L102 check would error. I've been unable to reproduce this using the [version of clang7 that CRAN provides](https://cran.r-project.org/bin/macosx/tools/).\n   \n   I have a fix for the first one and will provide workaround documentation for the README and announcement blog post. Unfortunately, I don't know that there's anything we can do about the useless binaries on CRAN at this time, particularly since CRAN is going down for maintenance August 9-18.\n   \n   cc `[~jeroenooms]` `[~romainfrancois]` `[~wesmckinn]`",
        "created_at": "2019-08-07T23:27:04.000Z",
        "updated_at": "2019-08-08T08:48:59.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-08-08T08:48:48.000Z"
    },
    "comments": [
        {
            "created_at": "2019-08-08T08:48:48.062Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6167?focusedCommentId=16902796) by Kouhei Sutou (kou):*\nIssue resolved by pull request 5034\n<https://github.com/apache/arrow/pull/5034>"
        }
    ]
}