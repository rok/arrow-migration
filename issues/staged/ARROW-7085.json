{
    "issue": {
        "title": "[C++][CSV] Add support for Extention type in csv reader",
        "body": "***Note**: This issue was originally created as [ARROW-7085](https://issues.apache.org/jira/browse/ARROW-7085). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n",
        "created_at": "2019-11-07T14:13:51.000Z",
        "updated_at": "2021-08-05T15:59:42.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2019-11-07T16:43:21.372Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7085?focusedCommentId=16969403) by Wes McKinney (wesm):*\n`[~fexolm]` could you clarify what you need \u2013 a custom ColumnBuilder? `[~apitrou]` should be able to advise you about this"
        },
        {
            "created_at": "2019-11-08T10:37:57.742Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7085?focusedCommentId=16970050) by Artem Alekseev (fexolm):*\n`[~wesm]`, `[~apitrou]` \u00a0For our purposes we need to define a custom type and use arrow CSV reader to parse it. Unfortunately, there is no way to use custom types with CSV reader right now, because of type dispatch when choosing an appropriate column builder.\u00a0\r\n\r\nI'm not sure how architecturally it could be solved, maybe custom ColumnBuilder is a case."
        },
        {
            "created_at": "2019-11-09T17:21:19.131Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7085?focusedCommentId=16970887) by Antoine Pitrou (apitrou):*\ncc `[~fexolm]` Do you need to define a custom converter?\r\n\r\nAt worse, you could parse the column as string or binary and do the casting afterwards (if that's not too costly for you)."
        },
        {
            "created_at": "2019-11-09T17:50:57.065Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7085?focusedCommentId=16970898) by Wes McKinney (wesm):*\nIt may make sense to start with a proposal about what kind of public API would be desirable and then work backwards towards the implementation strategy. "
        },
        {
            "created_at": "2019-11-09T17:55:42.048Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7085?focusedCommentId=16970901) by Antoine Pitrou (apitrou):*\nRight. Though if casting is acceptable the problem is pretty much solved ;-)"
        },
        {
            "created_at": "2019-11-11T09:12:08.207Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7085?focusedCommentId=16971401) by Artem Alekseev (fexolm):*\n`[~apitrou]` \u00a0We need to encode strings with custom encoder and avoid the overhead of parsing column as a string and converting it to integers.\r\n\r\nI think there are 2 options of desirable API:\r\n \\* add an option to define custom Converter for ExtensionType (for now it's impossible to use extension types in CSV reader)\r\n \\* add an option to define custom ColumnBuilder for a specific column\r\n\r\nI think such API can be useful, but for my problem, I found that arrow dictionary encoding can do the job. But I'm not sure if there is a way to e.g. check if a specified string is in the dictionary, or how to get string index. Does Arrow provide such API?\r\n\r\n\u00a0"
        },
        {
            "created_at": "2019-11-12T13:22:52.663Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7085?focusedCommentId=16972392) by Antoine Pitrou (apitrou):*\nNo, Arrow does not provide an API to find out the index of a string in the dictionary. The dictionary is a simple linear array, so you can still do a linear scan for the value you're interested in."
        },
        {
            "created_at": "2019-11-12T13:24:15.769Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7085?focusedCommentId=16972393) by Antoine Pitrou (apitrou):*\n> We need to encode strings with custom encoder and avoid the overhead of parsing column as a string and converting it to integers.\r\n\r\nYou mean you just need to parse them as regular integers? I'm not sure I understand: are your columns using a custom format?"
        },
        {
            "created_at": "2019-11-12T13:36:01.450Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7085?focusedCommentId=16972401) by Artem Alekseev (fexolm):*\n`[~apitrou]` \u00a0we use our own dictionary encoding"
        },
        {
            "created_at": "2021-08-05T15:59:42.612Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7085?focusedCommentId=17394143) by Antoine Pitrou (apitrou):*\nIf extension types can define their own cast functions (see ARROW-5890), this could be implemented by casting from string to the given extension type."
        }
    ]
}