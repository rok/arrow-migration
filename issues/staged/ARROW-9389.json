{
    "issue": {
        "title": "[C++] Can't call isin/match through CallFunction",
        "body": "***Note**: This issue was originally created as [ARROW-9389](https://issues.apache.org/jira/browse/ARROW-9389). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nFrom R:\r\n\r\n```r\n\r\nlibrary(arrow)\r\na <- Array$create(1:4)\r\nb <- Array$create(c(2L, 4L, 3L))\r\narrow:::call_function(\"isin\", a, b)\r\n```\r\n\r\nsays that \"isin\" takes only 1 argument, not 2, which doesn't make sense. In C++ scalar_set_lookup.cc, I see `auto isin = std::make_shared<ScalarFunction>(\"isin\", Arity::Unary());`, which is the source of that validation I guess, but the kernel in api_scalar.cc has signature `Result<Datum> IsIn(const Datum& values, const Datum& value_set, ExecContext* ctx)`.\r\n\r\nIf I actually call \"isin\" with one argument, i.e. `arrow:::call_function(\"isin\", a)`, it segfaults.\r\n\r\nChanging the definition to Arity::Binary(), it accepts 2 arguments, but it errors with `NotImplemented: Function isin has no kernel matching input types (array[int32], array[int32])`",
        "created_at": "2020-07-09T17:05:57.000Z",
        "updated_at": "2020-07-11T23:16:38.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-07-11T23:16:30.000Z"
    },
    "comments": [
        {
            "created_at": "2020-07-09T17:45:13.972Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9389?focusedCommentId=17154760) by Antoine Pitrou (apitrou):*\nIt's because you need to call it with a `SetLookupOptions` which specifies the set of values to look into.\r\nHowever, it should not crash if you fail to pass those options, but error out."
        },
        {
            "created_at": "2020-07-11T23:16:30.873Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9389?focusedCommentId=17156166) by Wes McKinney (wesm):*\nIssue resolved by pull request 7715\n<https://github.com/apache/arrow/pull/7715>"
        }
    ]
}