{
    "issue": {
        "title": "[Rust] problem of Field nullable",
        "body": "***Note**: This issue was originally created as [ARROW-11263](https://issues.apache.org/jira/browse/ARROW-11263). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nQuoting from section\u00a0**Schema message**\r\n\r\n\u00a0<https://github.com/apache/arrow/blob/master/docs/source/format/Columnar.rst#schema-message>\r\n```\n\r\nWhether the field is semantically nullable. While this has no bearing on the \r\narray's physical layout, many systems distinguish nullable and non-nullable \r\nfields and we want to allow them to preserve this metadata to enable faithful \r\nschema round trips.\n```\r\nThis can be read as: for a field with nullable set as true, when encounters null array data from the field, data processor CAN continue or refuse to process.\r\n\r\nIn current rust implementation, apart from reading Fields from schema, we also construct `Field` with `Field::new` from datafusion and `arrow::array::**StructArray`**.\r\n \\* in\u00a0datafusion, the nullable is determined by DF schema\r\n \\* in arrow::array::StructArray::try_from(values: Vec<(&str, ArrayRef)>)\u00a0, the nullable is\u00a0determined by the array data. This is error-prone if ArrayRef's null buffer has all set by builder.\u00a0\r\n\r\nConclusions:\r\n \\* It's questionable to determine Field's nullable from array data.\r\n \\* Perhaps builders should set null buffer back to None when the buffer has all bits set.\r\n \\* Enhance StructArray::\r\n try_from(values: Vec<(&str, ArrayRef)>): don't set wrong nullable when null buffer has all bits set.\r\n\r\n\u00a0",
        "created_at": "2021-01-16T02:12:10.000Z",
        "updated_at": "2021-01-19T08:46:57.000Z",
        "labels": [
            "Migrated from Jira",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-01-19T08:46:57.000Z"
    },
    "comments": []
}