{
    "issue": {
        "title": "[C++] ValidateArray fail for slice of list array ",
        "body": "***Note**: This issue was originally created as [ARROW-6425](https://issues.apache.org/jira/browse/ARROW-6425). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe ValidateArray function fails for slice of list array (and MapArray I believe though haven't tested it yet). The validation will only pass for an unsliced array or the last slice.\r\n\r\n\u00a0\r\n\r\nFor example,\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n```java\n\r\nauto value_builder = std::make_shared<::arrow::DoubleBuilder>();\r\n    ::arrow::ListBuilder builder(\r\n        ::arrow::default_memory_pool(), value_builder);\r\n    auto status = builder.Append(true);\r\n    status = value_builder->Append(1);\r\n    status = builder.Append(true);\r\n    status = value_builder->Append(2);\r\n    std::shared_ptr<::arrow::Array> list;\r\n    status = builder.Finish(&list);\r\n    std::cout << ::arrow::ValidateArray(*list).ok() << std::endl;\r\n    std::cout << ::arrow::ValidateArray(*list->Slice(0, 1)).ok() << std::endl;\r\n    std::cout << ::arrow::ValidateArray(*list->Slice(1, 1)).ok() << std::endl;\r\n\u00a0\n```\r\n\u00a0\r\n\r\nThis will print 1, 0, 1.\r\n\r\n\u00a0\r\n\r\nThe problem lies in array.cc around line 1167\r\n\r\n\u00a0\r\n```java\n\r\n    const int32_t last_offset = array.value_offset(array.length());\r\n    if (array.values()->length() != last_offset) {\r\n      return Status::Invalid(\"Final offset invariant not equal to values length: \",\r\n                             last_offset, \"!=\", array.values()->length());\r\n    }\r\n```\r\nHere values() does not account for the array offset and thus its length is the whole array while value_offset and array.length() will account for that offset.",
        "created_at": "2019-09-03T13:00:54.000Z",
        "updated_at": "2022-08-27T14:42:06.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-09-04T10:15:14.000Z"
    },
    "comments": [
        {
            "created_at": "2019-09-04T10:15:14.667Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6425?focusedCommentId=16922359) by Antoine Pitrou (apitrou):*\nThanks for the report. This was already fixed on git master as part of ARROW-6174, closing."
        },
        {
            "created_at": "2022-08-27T14:42:06.809Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6425?focusedCommentId=17586046) by @toddfarmer:*\nTransitioning issue from Resolved to Closed to based on resolution field value."
        }
    ]
}