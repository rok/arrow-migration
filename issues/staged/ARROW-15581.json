{
    "issue": {
        "title": "[C++] Add proper support for Substrait intervals",
        "body": "***Note**: This issue was originally created as [ARROW-15581](https://issues.apache.org/jira/browse/ARROW-15581). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe Arrow Substrait consumer does not currently support functions on intervals.  This is because the Substrait deserializer currently asserts that all information must be round trippable and it errs on the side of rejecting plans before allowing a plan that could be correct consumed but not round tripped.\r\n\r\nThis affects interval types because, for example, the substrait interval 1 year 12 months would be converted to the substrait interval 2 years after a round trip.\r\n\r\nTo resolve this the current implementation encodes intervals as fixed length lists of numbers which we cannot do any kind of temporal math on.",
        "created_at": "2022-02-05T00:55:44.000Z",
        "updated_at": "2022-07-07T10:01:51.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-02-05T00:58:10.995Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15581?focusedCommentId=17487387) by Weston Pace (westonpace):*\nThis is related to ARROW-15540.  For example, if we add a safe flag, we could happily create normal Arrow intervals.  Semantically the operations on Arrow intervals should be the same as opeartions on Substrait intervals.  If they are not then we need to enhance the Substrait spec to make that clear."
        }
    ]
}