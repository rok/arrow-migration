{
    "issue": {
        "title": "[Java] Fix the hash code methods for BitVector",
        "body": "***Note**: This issue was originally created as [ARROW-8009](https://issues.apache.org/jira/browse/ARROW-8009). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe current hash code methods of BitVector are based on implementations in BaseFixedWidthVector, which rely on the type width of the vector. \r\nFor BitVector, the type width is 0, so the underlying data is not actually used when computing the hash code. That means, the hash code will always be 0, no matter if the underlying data is null or not, and no matter if the underlying bit is 0 or 1. \r\n\r\nWe fix this by overriding the methods in BitVector. ",
        "created_at": "2020-03-05T14:02:17.000Z",
        "updated_at": "2020-03-06T04:49:06.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-03-06T04:49:06.000Z"
    },
    "comments": [
        {
            "created_at": "2020-03-06T04:49:06.948Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8009?focusedCommentId=17053020) by Micah Kornfield (emkornfield@gmail.com):*\nIssue resolved by pull request 6543\n<https://github.com/apache/arrow/pull/6543>"
        }
    ]
}