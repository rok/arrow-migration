{
    "issue": {
        "title": "valid metadata results in Invalid metadata$r warning from read_feather()",
        "body": "***Note**: This issue was originally created as [ARROW-17466](https://issues.apache.org/jira/browse/ARROW-17466). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI have some C# code using the Arrow 9.0.0 nuget to create record batches like\r\n\r\n`Dictionary<string, string> metadata = new()`\r\n{\\``\r\n`{}\u00a0 \u00a0 \\{ \"resourceUnit\", \"foo\" }{{`}}`{},{`}\r\n`\u00a0 \u00a0 // other keys...`\r\n`};`\r\n`Schema schema = new(fields, metadata);`\r\n\r\nFor some reason using the key \"resourceUnit\" results in\u00a0 arrow::read_feather() in R failing in [.deserialize_arrow_r_metadata()](https://github.com/apache/arrow/blob/master/r/R/metadata.R), triggering the warning\r\n\r\n`Warning message:`\r\n`Invalid metadata$r\u00a0`\r\n\r\nThere are at least five issues here:\r\n\r\n1) .deserialize_arrow_r_metadata()'s error handler swallows the actual error, leaving the caller without any information as to what's breaking\r\n\r\n2) The error handler commutes the error to a warning without any caller control.\r\n\r\n3) It's unclear why there's an R metadata deserialization path when `read_feather(as_data_frame = FALSE)` deserializes the metadata without issue to $metadata.\r\n\r\n4) The warning is confusing as the deserialized fragment goes in $r_metadata, not $r.\r\n\r\n5) \"resourceUnit\" should be a perfectly valid UTF8 string and deserialize without issue. Probing shows the \"resource\" bit is the problem and, if I change it to something like \"_esourceUnit\" no error/warning occurs on deserialization. I also have C# generating other feather files with \"resourceUnit\" as the first metadata key and those files deserialize without the error/warning in R. This suggests the root issue might something in the direction of alignment fragility in the schema portion of the stream.\r\n\r\nI can't share the file publicly and the code hasn't pushed to github yet but both should be available by the time someone's ready to look at this. Just bump the issue and let me know.\r\n\r\n(I think this is a normal priority issue but normal isn't available in the priority dropdown.)",
        "created_at": "2022-08-18T21:24:15.000Z",
        "updated_at": "2022-08-18T21:24:15.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C#",
            "Component: R",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": []
}