{
    "issue": {
        "title": "[Python] writing version 2.0 parquet format with dictionary encoding enabled",
        "body": "***Note**: This issue was originally created as [ARROW-3564](https://issues.apache.org/jira/browse/ARROW-3564). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nUsing pyarrow v0.11.0, the\u00a0attached script writes a simple table (lifted from the\u00a0[pyarrow doc](https://arrow.apache.org/docs/python/parquet.html)) to both parquet format versions 1.0 and 2.0, with and without dictionary encoding enabled.\r\n\r\n\r\nInspecting the written files using\u00a0[parquet-tools](https://github.com/apache/parquet-mr/tree/master/parquet-tools)\u00a0appears to show that dictionary encoding is not used in either of the version 2.0 files.\u00a0 Both files report that the columns are encoded using\u00a0`PLAIN,RLE`\u00a0and that the dictionary page offset is zero.\u00a0 I\u00a0was expecting that the column encoding would include\u00a0`RLE_DICTIONARY`.\u00a0Attached are the script with repro steps and the files that were generated by it.\r\n\r\nBelow is the output of using `parquet-tools meta` on the version 2.0 files\r\n> **version='2.0', use_dictionary = True**\n\r\n\n|`% parquet-tools meta example_v2.0_dict_True.parquet`\r<br> `file:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 [file:.../example_v2.0_dict_True.parquet|file:///.../example_v2.0_dict_True.parquet]`\r<br> `creator:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 parquet-cpp version 1.5.1-SNAPSHOT` \\{ Unknown macro: {extra}\r<br> }}\r<br> \u00a0\r<br> `file schema:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 schema`\r<br> `--------------------------------------------------------------------------------`\r<br> `one:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 OPTIONAL DOUBLE R:0 D:1`\r<br> `three:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 OPTIONAL BOOLEAN R:0 D:1`\r<br> `two:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 OPTIONAL BINARY R:0 D:1`\r<br> `__index_level_0__: OPTIONAL BINARY R:0 D:1`\r<br> \u00a0\r<br> `row group 1:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 RC:3 TS:211 OFFSET:4`\r<br> `--------------------------------------------------------------------------------`\r<br> `one:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 DOUBLE SNAPPY DO:0 FPO:4 SZ:65/63/0.97 VC:3 ENC:PLAIN,RLE ST:[min: -1.0, max: 2.5, num_nulls: 1]`\r<br> `three:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 BOOLEAN SNAPPY DO:0 FPO:142 SZ:36/34/0.94 VC:3 ENC:PLAIN,RLE ST:[min: false, max: true, num_nulls: 0]`\r<br> `two:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 BINARY SNAPPY DO:0 FPO:225 SZ:60/58/0.97 VC:3 ENC:PLAIN,RLE ST:[min: 0x626172, max: 0x666F6F, num_nulls: 0]`\r<br> `__index_level_0__:\u00a0 BINARY SNAPPY DO:0 FPO:328 SZ:50/48/0.96 VC:3 ENC:PLAIN,RLE ST:[min: 0x61, max: 0x63, num_nulls: 0]`|\r<br>> **version='2.0', use_dictionary = False**<br>\r|\n|-|-|\n|`% parquet-tools meta example_v2.0_dict_False.parquet`\r<br> `file:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 [file:.../example_v2.0_dict_False.parquet|file:///.../example_v2.0_dict_False.parquet]`\r<br> `creator:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 parquet-cpp version 1.5.1-SNAPSHOT` \\{ Unknown macro: {extra}\r<br> }}\r<br> \u00a0\r<br> `file schema:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 schema`\r<br> `--------------------------------------------------------------------------------`\r<br> `one:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 OPTIONAL DOUBLE R:0 D:1`\r<br> `three:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 OPTIONAL BOOLEAN R:0 D:1`\r<br> `two:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 OPTIONAL BINARY R:0 D:1`\r<br> `__index_level_0__: OPTIONAL BINARY R:0 D:1`\r<br> \u00a0\r<br> `row group 1:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 RC:3 TS:211 OFFSET:4`\r<br> `--------------------------------------------------------------------------------`\r<br> `one:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 DOUBLE SNAPPY DO:0 FPO:4 SZ:65/63/0.97 VC:3 ENC:PLAIN,RLE ST:[min: -1.0, max: 2.5, num_nulls: 1]`\r<br> `three:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 BOOLEAN SNAPPY DO:0 FPO:142 SZ:36/34/0.94 VC:3 ENC:PLAIN,RLE ST:[min: false, max: true, num_nulls: 0]`\r<br> `two:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 BINARY SNAPPY DO:0 FPO:225 SZ:60/58/0.97 VC:3 ENC:PLAIN,RLE ST:[min: 0x626172, max: 0x666F6F, num_nulls: 0]`\r<br> `__index_level_0__:\u00a0 BINARY SNAPPY DO:0 FPO:328 SZ:50/48/0.96 VC:3 ENC:PLAIN,RLE ST:[min: 0x61, max: 0x63, num_nulls: 0]`|\n",
        "created_at": "2018-10-19T12:57:33.000Z",
        "updated_at": "2019-02-19T16:00:30.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-01-16T20:46:46.000Z"
    },
    "comments": [
        {
            "created_at": "2018-11-30T16:02:47.293Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3564?focusedCommentId=16704954) by Hatem Helal (hatem):*\nI had a first stab at this as I thought it was a logic error but now not so sure.\u00a0 `[~wesmckinn]`, I should have some time to work on arrow in the coming weeks.\u00a0 Can you assign this task to me?\u00a0 Any thoughts you have on this would also be helpful.\u00a0"
        },
        {
            "created_at": "2018-11-30T16:09:01.915Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3564?focusedCommentId=16704960) by Wes McKinney (wesm):*\nThat is indeed odd. I don't know what might be happening off hand, you'll have to step through to see where the column encoder is being constructed. I added you as a Contributor on the project so you can assign yourself issues"
        },
        {
            "created_at": "2019-01-16T20:46:46.868Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3564?focusedCommentId=16744456) by Uwe Korn (uwe):*\nIssue resolved by pull request 3331\n<https://github.com/apache/arrow/pull/3331>"
        }
    ]
}