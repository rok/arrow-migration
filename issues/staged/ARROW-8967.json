{
    "issue": {
        "title": "[Python] [Parquet] pyarrow.Table.to_pandas() fails to convert valid TIMESTAMP_MILLIS to pandas timestamp",
        "body": "***Note**: This issue was originally created as [ARROW-8967](https://issues.apache.org/jira/browse/ARROW-8967). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nconverting a table to pandas with a valid millis timestamp value of -61552915200000 (0019-06-20) results in the following error\r\n```\n\r\nFile \"pyarrow/array.pxi\", line 587, in pyarrow.lib._PandasConvertible.to_pandas\r\n  File \"pyarrow/table.pxi\", line 1640, in pyarrow.lib.Table._to_pandas\r\n  File \"/Users/mark/.local/share/virtualenvs/parquetpy-BNIqCtDj/lib/python3.7/site-packages/pyarrow/pandas_compat.py\", line 766, in table_to_blockmanager\r\n    blocks = _table_to_blocks(options, table, categories, ext_columns_dtypes)\r\n  File \"/Users/mark/.local/share/virtualenvs/parquetpy-BNIqCtDj/lib/python3.7/site-packages/pyarrow/pandas_compat.py\", line 1102, in _table_to_blocks\r\n    list(extension_columns.keys()))\r\n  File \"pyarrow/table.pxi\", line 1107, in pyarrow.lib.table_to_blocks\r\n  File \"pyarrow/error.pxi\", line 85, in pyarrow.lib.check_status\r\npyarrow.lib.ArrowInvalid: Casting from timestamp[ms] to timestamp[ns] would result in out of bounds timestamp: -61552915200000\r\n```\r\n\r\nas it stands pyarrow cannot convert this parquet file to pandas\r\n\r\ni would like to be able to choose the timestamp unit when converting to pandas, much like you can when writing to parquet file.",
        "created_at": "2020-05-27T17:42:35.000Z",
        "updated_at": "2020-05-28T06:59:30.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-05-27T21:07:39.000Z"
    },
    "comments": [
        {
            "created_at": "2020-05-27T20:36:27.602Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8967?focusedCommentId=17118060) by Wes McKinney (wesm):*\nI'm not sure if this is fixable, since pandas datetime64 data uses the nanosecond unit. `[~jorisvandenbossche]` do you know?\r\n\r\n`[~markwaddle]` you can read this file fine into Arrow format, so it isn't true that \"there is no way to read this file\". You just can't convert out of bounds timestamps to pandas format at the moment. "
        },
        {
            "created_at": "2020-05-27T21:06:53.843Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8967?focusedCommentId=17118091) by Mark Waddle (markwaddle):*\nthanks `[~wesm]`. i think you're right that this is just not supported in pandas due to the ns unit.\r\n\r\n\r\n```\n\r\n>>> pd.to_datetime(pd.DataFrame([[-61552915200000]], columns=['ts'])['ts'], unit='ms')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/mark/.local/share/virtualenvs/parquetpy-BNIqCtDj/lib/python3.7/site-packages/pandas/core/tools/datetimes.py\", line 728, in to_datetime\r\n    values = convert_listlike(arg._values, format)\r\n  File \"/Users/mark/.local/share/virtualenvs/parquetpy-BNIqCtDj/lib/python3.7/site-packages/pandas/core/tools/datetimes.py\", line 332, in _convert_listlike_datetimes\r\n    arg, mask, unit, errors=errors\r\n  File \"pandas/_libs/tslib.pyx\", line 377, in pandas._libs.tslib.array_with_unit_to_datetime\r\npandas._libs.tslibs.np_datetime.OutOfBoundsDatetime: cannot convert input with unit 'ms'\r\n```\r\n\r\nclosing\r\n"
        },
        {
            "created_at": "2020-05-27T21:07:39.531Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8967?focusedCommentId=17118093) by Mark Waddle (markwaddle):*\nthis is a limitation in pandas"
        },
        {
            "created_at": "2020-05-28T06:59:30.662Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8967?focusedCommentId=17118379) by Joris Van den Bossche (jorisvandenbossche):*\nYes, we have several issues about this already. \r\nIt's a current limitation in pandas that it cannot represent those \"out of bounds\" timestamps because pandas only supports the nanosecond resolution.\r\n\r\nHowever, we should still be able to convert to pandas but using datetime objects. See eg ARROW-5359, for which there is currently an open PR to add a keyword for this."
        }
    ]
}