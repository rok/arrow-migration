{
    "issue": {
        "title": "[Java][FlightRPC] Flight SQL JDBC driver improvements",
        "body": "***Note**: This issue was originally created as [ARROW-17729](https://issues.apache.org/jira/browse/ARROW-17729). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nFollow ups for ARROW-7744\r\n\r\n- Rename internal classes to not imply everything is part of Flight RPC (e.g. ArrowFlightJdbcArray -> FieldVectorArray or similar)\n- Don't throw bare exceptions (always provide some error context)\n- Log a warning if the `arrow-flight:` URI scheme is used instead of `arrow-flight-sql:`\n- Create a documentation page (that can be used for people approaching this from the JDBC side, not necessarily Arrow users)\n- Document the connection string format and parameters\n- Replace `// TODO` comments with `throw new UnsupportedOperationException()`\n- Document how timestamp/time/date types are handled in converting between the two type schemas\n- Document the type conversions in general\n- [timestamp handling is suspect](https://github.com/apache/arrow/pull/13800#discussion_r938908230)\n- Upgrade to JUnit5/AssertJ instead of JUnit4/Hamcrest\n- Get rid of FreePortFinder\n- Use a single (static?) RootAllocator with child allocators\n- Remove all Guava usage (can we deny this with a lint?)\n- See if `SqlTypes` can be folded into arrow-jdbc",
        "created_at": "2022-09-14T18:11:26.000Z",
        "updated_at": "2022-09-14T18:30:13.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: FlightRPC",
            "Component: Java",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": []
}