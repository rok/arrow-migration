{
    "issue": {
        "title": "[C++][R] Crash under Rosetta with jemalloc",
        "body": "***Note**: This issue was originally created as [ARROW-11217](https://issues.apache.org/jira/browse/ARROW-11217). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n`[~jeroenooms]` hit a crash in the \"sum\" compute kernel using the R package on a new M1 machine running the rosetta emulator: https://gist.github.com/jeroen/c60548b29ff7f6807a6554799bd01cb7\r\n\r\nAccording to https://developer.apple.com/documentation/apple_silicon/about_the_rosetta_translation_environment, we should be checking sysctlbyname for AVX\\* capabilities, but we are not. We only use that function in https://github.com/apache/arrow/blob/master/cpp/src/arrow/util/cpu_info.cc#L350-L359 to check cpu cache size. \r\n\r\nThis may also explain a crash we observed previously on a very old macOS CRAN machine. \r\n\r\nI think we should to resolve this before the 3.0 release if possible, in order to avoid bug reports as more people get M1s. \r\n\r\ncc `[~apitrou]` `[~uwe]` `[~kou]` `[~frankdu]` `[~yibo]`",
        "created_at": "2021-01-11T23:49:12.000Z",
        "updated_at": "2021-06-10T16:00:45.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-06-10T16:00:45.000Z"
    },
    "comments": [
        {
            "created_at": "2021-01-11T23:57:56.344Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11217?focusedCommentId=17262989) by Antoine Pitrou (apitrou):*\nExample code:\r\n\r\n<https://github.com/numpy/numpy/pull/13339/files>\r\n\r\nAlso a list of possible features to check for:\r\n\r\n<https://www.mersenneforum.org/showthread.php?p=561100#post561100>\r\n\r\n\u00a0"
        },
        {
            "created_at": "2021-01-12T11:04:43.668Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11217?focusedCommentId=17263248) by Antoine Pitrou (apitrou):*\n`[~uwe]` \u00a0 Do you have time to take this up in time for 3.0?"
        },
        {
            "created_at": "2021-01-12T20:19:55.614Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11217?focusedCommentId=17263666) by Neal Richardson (npr):*\nI _think_ I see where [`ParseCPUFlags`](https://github.com/apache/arrow/blob/master/cpp/src/arrow/util/cpu_info.cc#L150) needs an `#ifdef __APPLE__` but am not sure I can get it exactly right; I'm also having trouble getting a test environment set up. So it would be best if someone else could pick this up."
        },
        {
            "created_at": "2021-01-13T13:55:57.260Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11217?focusedCommentId=17264161) by Antoine Pitrou (apitrou):*\nCan `[~jeroenooms]` explain if other workloads run fine? It seems the analysis here may be a red herring."
        },
        {
            "created_at": "2021-01-13T14:00:17.968Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11217?focusedCommentId=17264163) by Antoine Pitrou (apitrou):*\nWhen I try running Arrow x86 on M1, it crashes at startup due to jemalloc. But if I compile with jemalloc disabled, all tests pass..."
        },
        {
            "created_at": "2021-01-13T14:11:02.818Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11217?focusedCommentId=17264168) by Jeroen (jeroenooms):*\nI will try disabling JEmalloc. FYI here is the config that I use right now: https://github.com/autobrew/homebrew-cran/blob/master/Formula/apache-arrow-static.rb"
        },
        {
            "created_at": "2021-01-13T14:26:56.036Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11217?focusedCommentId=17264175) by Antoine Pitrou (apitrou):*\nNote that I'm testing with git master, not 2.0.0."
        },
        {
            "created_at": "2021-01-13T14:27:44.191Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11217?focusedCommentId=17264184) by Antoine Pitrou (apitrou):*\nmimalloc seems to work (`-DARROW_MIMALLOC=ON`)."
        },
        {
            "created_at": "2021-01-13T14:44:36.449Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11217?focusedCommentId=17264193) by Jeroen (jeroenooms):*\nOK, JEMalloc also seems to work, at least in arm64 and the native intel boxes. It only crashes in rosetta for selected functions, that's why I was more suspicious of the hw extensions."
        },
        {
            "created_at": "2021-01-13T14:48:13.948Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11217?focusedCommentId=17264196) by Antoine Pitrou (apitrou):*\nI'm not sure I understand. Does it work under Rosetta with jemalloc disabled?"
        },
        {
            "created_at": "2021-01-13T15:11:32.446Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11217?focusedCommentId=17264207) by Jeroen (jeroenooms):*\nI haven't tried that yet, need to rebuild everything manually"
        },
        {
            "created_at": "2021-01-14T17:03:38.302Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11217?focusedCommentId=17265025) by Antoine Pitrou (apitrou):*\n`[~jeroenooms]` Did you try it?"
        },
        {
            "created_at": "2021-01-14T17:55:30.398Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11217?focusedCommentId=17265080) by Antoine Pitrou (apitrou):*\nNote this report is not about SIMD instructions. As the traceback shows, a non-SIMD version of Sum was selected (`(arrow::compute::SimdLevel::type)0` means `SimdLevel::NONE`). Also, the crash happens in a system library (`libsystem_malloc.dylib`). Perhaps a memory corruption issue?"
        },
        {
            "created_at": "2021-01-14T18:02:04.094Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11217?focusedCommentId=17265088) by Neal Richardson (npr):*\nGood catch!"
        },
        {
            "created_at": "2021-01-14T19:37:28.699Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11217?focusedCommentId=17265158) by Jeroen (jeroenooms):*\nI tried building without jemalloc but now it crashes somewhere else\r\n\r\n```Java\n\r\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\r\n0   <translation info unavailable>\t0x00000001020ba420 ???\r\n1   arrow.so                      \t0x0000000110316904 arrow::BooleanArray::BooleanArray(std::__1::shared_ptr<arrow::ArrayData> const&) + 24\r\n2   arrow.so                      \t0x0000000110316904 arrow::BooleanArray::BooleanArray(std::__1::shared_ptr<arrow::ArrayData> const&) + 24\r\n3   arrow.so                      \t0x000000011034ee12 arrow::Status arrow::internal::ArrayDataWrapper::Visit<arrow::BooleanType>(arrow::BooleanType const&) + 76\r\n4   arrow.so                      \t0x0000000110348d90 arrow::Status arrow::VisitTypeInline<arrow::internal::ArrayDataWrapper>(arrow::DataType const&, arrow::internal::ArrayDataWrapper*) + 95\r\n5   arrow.so                      \t0x0000000110348cfe arrow::MakeArray(std::__1::shared_ptr<arrow::ArrayData> const&) + 46\r\n6   arrow.so                      \t0x000000011037aad0 arrow::Datum::make_array() const + 24\r\n7   arrow.so                      \t0x000000011014774a from_datum(arrow::Datum) + 202 (compute.cpp:138)\r\n8   arrow.so                      \t0x0000000110148987 compute__CallFunction(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, cpp11::r_vector<SEXPREC*>, cpp11::r_vector<SEXPREC*>) + 599 (compute.cpp:224)\r\n9   arrow.so                      \t0x0000000110110466 _arrow_compute__CallFunction + 150 (arrowExports.cpp:1189)\r\n```\r\n\r\nMaybe we should ignore this for now, perhaps there is a problem with R or llvm when when it runs under rosetta. It does feel like a memory corruption in the arrow compute functionality, but I'm having a bit of hard time debugging this as it only happens under the emulator.\r\n"
        },
        {
            "created_at": "2021-01-14T19:43:17.715Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11217?focusedCommentId=17265167) by Antoine Pitrou (apitrou):*\nFair enough. If you want to diagnose this more, though, I suggest building Arrow in debug mode."
        },
        {
            "created_at": "2021-01-27T23:59:21.901Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11217?focusedCommentId=17273205) by Neal Richardson (npr):*\nI got a working debug build on my M1 with Rosetta and can confirm that setting ARROW_JEMALLOC=OFF solves this. And unfortunately setting ARROW_DEFAULT_MEMORY_POOL=system at runtime doesn't work."
        },
        {
            "created_at": "2021-06-10T15:19:31.146Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11217?focusedCommentId=17361020) by Antoine Pitrou (apitrou):*\nIs there anything else that should be done here?"
        },
        {
            "created_at": "2021-06-10T15:33:56.643Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11217?focusedCommentId=17361032) by Jeroen (jeroenooms):*\nNo, the issue is actually likely by homebrew overriding the -march parameter. See discussion here:\u00a0https://github.com/Homebrew/homebrew-core/issues/76537"
        },
        {
            "created_at": "2021-06-10T16:00:30.250Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11217?focusedCommentId=17361047) by Neal Richardson (npr):*\nThis might be different from the -march issue, but either way I don't think there's more to do here right now."
        }
    ]
}