{
    "issue": {
        "title": "[C++] Improve performance of unpack64",
        "body": "***Note**: This issue was originally created as [ARROW-13677](https://issues.apache.org/jira/browse/ARROW-13677). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nunpack32 benefits from auto-generated SIMD optimizations, but unpack64 doesn't. The latter is used by Parquet for DELTA_BINARY_PACKED encoding.",
        "created_at": "2021-08-19T14:55:25.000Z",
        "updated_at": "2022-02-22T09:13:30.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-02-22T04:34:17.781Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13677?focusedCommentId=17495854) by Yibo Cai (yibocai):*\nLooks compiler is able to vectorize the naive implementation on `avx2/avx512/neon`, both for unpack32 and unpack64.\r\n<https://godbolt.org/z/jrz95vrsY>\r\n\r\nCompiler doesn't vectorize for `sse4.2`, probably it believes the vectorized code is no better than the scalar one."
        },
        {
            "created_at": "2022-02-22T09:13:30.844Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13677?focusedCommentId=17495970) by Antoine Pitrou (apitrou):*\nOnly recent versions of clang seem to succeed in vectorizing, though. Both gcc and MSVC (and even icc apparently) produce scalar code."
        }
    ]
}