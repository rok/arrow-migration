{
    "issue": {
        "title": "[Rust] Introduce safe and performant iterators over elements of arrays",
        "body": "***Note**: This issue was originally created as [ARROW-10892](https://issues.apache.org/jira/browse/ARROW-10892). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe value functions in the primitive / string / etc arrays are often used to get elements at i in a loop.\u00a0 Some of them don't have boundary checks for performance reasons, so usage of them is unsafe.\r\n\r\nWe should introduce a safe iterator over the elements (T instead of Option<T>) that doesn't do boundary checks and can be used to iterate over the elements of the array. Maybe values_iter would be a good name?",
        "created_at": "2020-12-13T08:38:40.000Z",
        "updated_at": "2021-12-16T17:01:43.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2020-12-13T12:10:53.059Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10892?focusedCommentId=17248566) by Andrew Lamb (alamb):*\nRelated discussion: https://github.com/apache/arrow/pull/8900#discussion_r541727214"
        }
    ]
}