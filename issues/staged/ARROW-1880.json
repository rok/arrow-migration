{
    "issue": {
        "title": "[Python] Plasma test flakiness in Travis CI",
        "body": "***Note**: This issue was originally created as [ARROW-1880](https://issues.apache.org/jira/browse/ARROW-1880). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWe've been seeing intermittent flakiness of the variety:\r\n\r\n```Java\n\r\n==================================== ERRORS ====================================\r\n______ ERROR at setup of TestPlasmaClient.test_use_one_memory_mapped_file ______\r\n\r\nself = <pyarrow.tests.test_plasma.TestPlasmaClient object at 0x7fb85e67d668>\r\ntest_method = <bound method TestPlasmaClient.test_use_one_memory_mapped_file of <pyarrow.tests.test_plasma.TestPlasmaClient object at 0x7fb85e67d668>>\r\n\r\n[1m    def setup_method(self, test_method):[0m\r\n[1m        use_one_memory_mapped_file = (test_method ==[0m\r\n[1m                                      self.test_use_one_memory_mapped_file)[0m\r\n[1m    [0m\r\n[1m        import pyarrow.plasma as plasma[0m\r\n[1m        # Start Plasma store.[0m\r\n[1m        plasma_store_name, self.p = start_plasma_store([0m\r\n[1m            use_valgrind=os.getenv(\"PLASMA_VALGRIND\") == \"1\",[0m\r\n[1m            use_one_memory_mapped_file=use_one_memory_mapped_file)[0m\r\n[1m        # Connect to Plasma.[0m\r\n[1m>       self.plasma_client = plasma.connect(plasma_store_name, \"\", 64)[0m\r\n\r\n[1m[31mpyarrow-test-3.6/lib/python3.6/site-packages/pyarrow/tests/test_plasma.py[0m:164: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n[1m[31mplasma.pyx[0m:672: in pyarrow.plasma.connect\r\n[1m    ???[0m\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\n[1m>   ???[0m\r\n[1m[31mE   pyarrow.lib.ArrowIOError: Could not connect to socket /tmp/plasma_store43998835[0m\r\n```",
        "created_at": "2017-12-03T21:33:02.000Z",
        "updated_at": "2019-03-30T20:49:31.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-03-30T20:49:31.000Z"
    },
    "comments": [
        {
            "created_at": "2017-12-04T17:08:41.419Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1880?focusedCommentId=16277097) by Wes McKinney (wesm):*\n`[~pcmoritz]` `[~robertnishihara]` do you know what might be going on with this? Is the file too big for the VM maybe?"
        },
        {
            "created_at": "2017-12-04T22:54:15.212Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1880?focusedCommentId=16277705) by Wes McKinney (wesm):*\nHere's an intermittent macOS stall that's been happening too: https://travis-ci.org/apache/arrow/jobs/311538093#L1912"
        },
        {
            "created_at": "2017-12-05T21:47:37.698Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1880?focusedCommentId=16279234) by Robert Nishihara (robertnishihara):*\nThanks for filing the issue, I hope to get to this over the weekend. Traveling at the moment."
        },
        {
            "created_at": "2017-12-09T21:35:03.976Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1880?focusedCommentId=16285009) by Wes McKinney (wesm):*\nI moved this off 0.8.0 as it's unclear if it's essential for the release"
        },
        {
            "created_at": "2018-01-25T22:16:04.833Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1880?focusedCommentId=16340190) by Wes McKinney (wesm):*\nHaven't been seeing this lately. Moved off 0.9.0"
        },
        {
            "created_at": "2018-01-26T02:23:43.888Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1880?focusedCommentId=16340472) by Robert Nishihara (robertnishihara):*\nThanks, please point it out if you do see it."
        },
        {
            "created_at": "2018-01-30T21:24:58.292Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1880?focusedCommentId=16345835) by Wes McKinney (wesm):*\nWe're starting to see some flakiness on Linux in Travis CI, not sure what is going on \u2013 here is a hang from a recent build\r\n\r\n```Java\n\r\npyarrow-test-3.6/lib/python3.6/site-packages/pyarrow/tests/test_serialization.py::test_primitive_serialization \u001b[32mPASSED\u001b[0m\u001b[36m [ 84%]\u001b[0m\r\npyarrow-test-3.6/lib/python3.6/site-packages/pyarrow/tests/test_serialization.py::test_serialize_to_buffer \u001b[32mPASSED\u001b[0m\u001b[36m [ 84%]\u001b[0m\r\npyarrow-test-3.6/lib/python3.6/site-packages/pyarrow/tests/test_serialization.py::test_complex_serialization \u001b[32mPASSED\u001b[0m\u001b[36m [ 85%]\u001b[0m\r\npyarrow-test-3.6/lib/python3.6/site-packages/pyarrow/tests/test_serialization.py::test_custom_serialization WARNING: Empty dict in  Test object.\r\nWARNING: Empty dict in  Test object.\r\nWARNING: Empty dict in  \r\nWARNING: Empty dict in  \r\n```\r\n\r\nI also saw a failure in `test_use_one_memory_mapped_file`, I'll try to link to one here if it occurs again"
        },
        {
            "created_at": "2018-01-30T21:30:56.213Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1880?focusedCommentId=16345846) by Wes McKinney (wesm):*\nHere's another recent build failure https://api.travis-ci.org/v3/job/335236215/log.txt from https://travis-ci.org/apache/arrow/jobs/335236215"
        },
        {
            "created_at": "2018-01-30T21:38:44.142Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1880?focusedCommentId=16345855) by Wes McKinney (wesm):*\nAnother stalled build on master https://travis-ci.org/apache/arrow/builds/335320562"
        },
        {
            "created_at": "2018-01-30T21:39:16.025Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1880?focusedCommentId=16345856) by Wes McKinney (wesm):*\nNot clear this is related to Plasma, actually, so I'll create a new JIRA"
        },
        {
            "created_at": "2018-01-30T21:43:20.111Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1880?focusedCommentId=16345859) by Wes McKinney (wesm):*\nSee ARROW-2062, sorry for the false alarm here"
        },
        {
            "created_at": "2018-01-30T22:16:21.627Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1880?focusedCommentId=16345903) by Wes McKinney (wesm):*\nI was able to get this error locally\r\n\r\n```Java\n\r\n$ py.test pyarrow/tests/test_plasma.py --pdb -v\r\n==================================================== test session starts =====================================================\r\nplatform linux -- Python 3.5.2, pytest-3.0.6, py-1.4.31, pluggy-0.4.0 -- /home/wesm/anaconda3/envs/arrow-test/bin/python\r\ncachedir: .cache\r\nrootdir: /home/wesm/code/arrow/python, inifile: setup.cfg\r\ncollected 20 items \r\n\r\npyarrow/tests/test_plasma.py::TestPlasmaClient::test_connection_failure_raises_exception PASSED\r\npyarrow/tests/test_plasma.py::TestPlasmaClient::test_create PASSED\r\npyarrow/tests/test_plasma.py::TestPlasmaClient::test_create_with_metadata PASSED\r\npyarrow/tests/test_plasma.py::TestPlasmaClient::test_create_existing PASSED\r\npyarrow/tests/test_plasma.py::TestPlasmaClient::test_get PASSED\r\npyarrow/tests/test_plasma.py::TestPlasmaClient::test_put_and_get PASSED\r\npyarrow/tests/test_plasma.py::TestPlasmaClient::test_put_and_get_serialization_context PASSED\r\npyarrow/tests/test_plasma.py::TestPlasmaClient::test_store_arrow_objects PASSED\r\npyarrow/tests/test_plasma.py::TestPlasmaClient::test_store_pandas_dataframe PASSED\r\npyarrow/tests/test_plasma.py::TestPlasmaClient::test_pickle_object_ids PASSED\r\npyarrow/tests/test_plasma.py::TestPlasmaClient::test_store_full PASSED\r\npyarrow/tests/test_plasma.py::TestPlasmaClient::test_contains PASSED\r\npyarrow/tests/test_plasma.py::TestPlasmaClient::test_hash PASSED\r\npyarrow/tests/test_plasma.py::TestPlasmaClient::test_many_hashes PASSED\r\npyarrow/tests/test_plasma.py::TestPlasmaClient::test_illegal_functionality PASSED\r\npyarrow/tests/test_plasma.py::TestPlasmaClient::test_evict PASSED\r\npyarrow/tests/test_plasma.py::TestPlasmaClient::test_subscribe PASSED\r\npyarrow/tests/test_plasma.py::TestPlasmaClient::test_subscribe_deletions PASSED\r\npyarrow/tests/test_plasma.py::TestPlasmaClient::test_use_one_memory_mapped_file ERROR\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> traceback >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n\r\nself = <pyarrow.tests.test_plasma.TestPlasmaClient object at 0x7f7763c66400>\r\ntest_method = <bound method TestPlasmaClient.test_use_one_memory_mapped_file of <pyarrow.tests.test_plasma.TestPlasmaClient object at 0x7f7763c66400>>\r\n\r\n    def setup_method(self, test_method):\r\n        use_one_memory_mapped_file = (test_method ==\r\n                                      self.test_use_one_memory_mapped_file)\r\n    \r\n        import pyarrow.plasma as plasma\r\n# Start Plasma store.\r\n        plasma_store_name, self.p = start_plasma_store(\r\n            use_valgrind=os.getenv(\"PLASMA_VALGRIND\") == \"1\",\r\n            use_one_memory_mapped_file=use_one_memory_mapped_file)\r\n# Connect to Plasma.\r\n>       self.plasma_client = plasma.connect(plasma_store_name, \"\", 64)\r\n\r\npyarrow/tests/test_plasma.py:166: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\npyarrow/plasma.pyx:678: in pyarrow.plasma.connect (/home/wesm/code/arrow/python/build/temp.linux-x86_64-3.5/plasma.cxx:8311)\r\n    check_status(result.client.get()\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\n>   raise ArrowIOError(message)\r\nE   pyarrow.lib.ArrowIOError: ../src/plasma/client.cc:600 code: ConnectIpcSocketRetry(store_socket_name, num_retries, -1, &store_conn_)\r\nE   Could not connect to socket /tmp/plasma_store42362948\r\n\r\npyarrow/error.pxi:79: ArrowIOError\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> entering PDB >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n> /home/wesm/code/arrow/python/pyarrow/error.pxi(79)pyarrow.lib.check_status (/home/wesm/code/arrow/python/build/temp.linux-x86_64-3.5/lib.cxx:8373)()\r\n-> raise ArrowIOError(message)\r\n(Pdb) \r\n```\r\n\r\nStarting the Plasma store fails with\r\n\r\n```Java\n\r\n(Pdb) plasma_store_name, self.p = start_plasma_store(use_valgrind=os.getenv(\"PLASMA_VALGRIND\") == \"1\",use_one_memory_mapped_file=use_one_memory_mapped_file)\r\nAllowing the Plasma store to use up to 0.536871GB of memory.\r\nStarting object store with directory /dev/shm and huge page support disabled\r\n../src/plasma/store.cc:744 Check failed: pointer != NULL\r\n```\r\n\r\nThis happened when I tried reducing the amount of memory available to the Plasma store by default in 512MB "
        },
        {
            "created_at": "2018-04-11T11:26:52.911Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1880?focusedCommentId=16433759) by Antoine Pitrou (apitrou):*\nI don't think we have seen intermittent plasma failures in a long time, at least on Travis-CI. Should this issue be kept open?"
        },
        {
            "created_at": "2019-03-30T20:49:31.186Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1880?focusedCommentId=16805976) by Wes McKinney (wesm):*\nThese issues seem to not be occurring lately"
        }
    ]
}