{
    "issue": {
        "title": "[Python] Improve error message in compute functions when passing wrong positional/keyword arguments",
        "body": "***Note**: This issue was originally created as [ARROW-14732](https://issues.apache.org/jira/browse/ARROW-14732). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nFrom https://stackoverflow.com/questions/69990087/how-to-use-pyarrow-compute-is-in-function\r\n\r\nSmall example of the current error messages:\r\n\r\n```python\n\r\narray1 = pa.array([1,2,3,4])\r\narray2 = pa.array([1,4])\r\n\r\nimport pyarrow.compute as pc\r\n\r\n# Using positional for value_set as well (the signature indicates with * that this are keyword\r\n# only arguments, but the error message is still confusing compared to plain python\r\n>>> pc.is_in(array1, array2)\r\n...\r\nArrowInvalid: Function is_in accepts 1 arguments but attempted to look up kernel(s) with 2\r\n\r\n# Using keyword for the first argument (which is allowed in pure python functions)\r\n# gives confusing error message because it passes it to the options\r\n>>> pc.is_in(values=array1,value_set=array2)\r\n...\r\n~/scipy/repos/arrow/python/pyarrow/_compute.pyx in pyarrow._compute.SetLookupOptions.__init__()\r\n\r\nTypeError: __init__() got an unexpected keyword argument 'values'\r\n```\r\n\r\nI think it should be quite easy to improve the error messaging on this front, since we know how many arguments the kernel takes.\r\n\r\ncc `[~amol-]`",
        "created_at": "2021-11-17T09:07:54.000Z",
        "updated_at": "2021-11-18T08:05:39.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-11-17T14:30:07.000Z"
    },
    "comments": [
        {
            "created_at": "2021-11-17T14:30:07.782Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14732?focusedCommentId=17445248) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 11721\n<https://github.com/apache/arrow/pull/11721>"
        }
    ]
}