{
    "issue": {
        "title": "[JS] Read Parquet files in JavaScript",
        "body": "***Note**: This issue was originally created as [ARROW-2786](https://issues.apache.org/jira/browse/ARROW-2786). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSee question in https://github.com/apache/arrow/issues/2209",
        "created_at": "2018-07-02T22:06:23.000Z",
        "updated_at": "2022-03-04T05:24:46.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: JavaScript",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2019-09-04T18:29:57.716Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2786?focusedCommentId=16922744) by Paul Taylor (paul.e.taylor):*\nThere are a few JS Parquet implementations, with [parquetjs](https://www.npmjs.com/package/parquetjs) being the more mature one from what I recall.\r\n\r\nA while back I put together [this demo](https://github.com/trxcllnt/arrow-to-parquet-js) converting Arrow -> Parquet in pure JS. The major drawback is the ParquetJS writer is row-oriented, so performance will be an issue.\r\n\r\nI opened [this issue](https://github.com/ironSource/parquetjs/issues/84) to get some clarification, but haven't heard back yet."
        },
        {
            "created_at": "2022-03-04T05:24:46.914Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2786?focusedCommentId=17501161) by Kyle Barron (kylebarron2):*\nI have a [working prototype here](https://github.com/kylebarron/parquet-wasm) of the Rust `parquet` and `arrow` crates compiled to WASM. As [described on the Rust repo](https://github.com/apache/arrow-rs/issues/180#issuecomment-1058827130), I've gotten Snappy, Gzip, Brotli, and ZSTD codecs working in WASM, and it looks like LZ4 should be attainable by switching out the dependency.\r\n\r\nMy idea is that the bindings can be pretty small by just parsing the Parquet input and creating Arrow IPC data to send back to the JS side. Then the Arrow JS bindings would parse the IPC data and Arrow JS could be used from then on.\r\n\r\nUnfortunately, there seem to be issues currently with Arrow JS' IPC implementation (the reason why I was looking through these issues \ud83d\ude04), so Arrow JS often can't read the IPC data returned from Rust (though Pyarrow can read the files, so they seem correctly-formatted)."
        }
    ]
}