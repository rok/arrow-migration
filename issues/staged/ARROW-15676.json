{
    "issue": {
        "title": "[R] New memory leaks in valgrind nightly build",
        "body": "***Note**: This issue was originally created as [ARROW-15676](https://issues.apache.org/jira/browse/ARROW-15676). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe 'valgrind' nightly build has been failing for R since February 1 (the January 26 build passed). The error that currently causes the failure is:\r\n\r\n\r\n```\n\r\n==10264== 12,959 (256 direct, 12,703 indirect) bytes in 1 blocks are definitely lost in loss record 1,755 of 3,746\r\n==10264==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n==10264==    by 0xF165862: allocate (new_allocator.h:115)\r\n==10264==    by 0xF165862: allocate (alloc_traits.h:460)\r\n==10264==    by 0xF165862: __allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<arrow::MergedGenerator<arrow::dataset::EnumeratedRecordBatch>::State, std::allocator<arrow::MergedGenerator<arrow::dataset::EnumeratedRecordBatch>::State>, (__gnu_cxx::_Lock_policy)2> > > (allocated_ptr.h:97)\r\n==10264==    by 0xF165862: __shared_count<arrow::MergedGenerator<arrow::dataset::EnumeratedRecordBatch>::State, std::allocator<arrow::MergedGenerator<arrow::dataset::EnumeratedRecordBatch>::State>, std::function<arrow::Future<std::function<arrow::Future<arrow::dataset::EnumeratedRecordBatch>()> >()>, int&> (shared_ptr_base.h:680)\r\n==10264==    by 0xF165862: __shared_ptr<std::allocator<arrow::MergedGenerator<arrow::dataset::EnumeratedRecordBatch>::State>, std::function<arrow::Future<std::function<arrow::Future<arrow::dataset::EnumeratedRecordBatch>()> >()>, int&> (shared_ptr_base.h:1371)\r\n==10264==    by 0xF165862: shared_ptr<std::allocator<arrow::MergedGenerator<arrow::dataset::EnumeratedRecordBatch>::State>, std::function<arrow::Future<std::function<arrow::Future<arrow::dataset::EnumeratedRecordBatch>()> >()>, int&> (shared_ptr.h:408)\r\n==10264==    by 0xF165862: allocate_shared<arrow::MergedGenerator<arrow::dataset::EnumeratedRecordBatch>::State, std::allocator<arrow::MergedGenerator<arrow::dataset::EnumeratedRecordBatch>::State>, std::function<arrow::Future<std::function<arrow::Future<arrow::dataset::EnumeratedRecordBatch>()> >()>, int&> (shared_ptr.h:860)\r\n==10264==    by 0xF165862: make_shared<arrow::MergedGenerator<arrow::dataset::EnumeratedRecordBatch>::State, std::function<arrow::Future<std::function<arrow::Future<arrow::dataset::EnumeratedRecordBatch>()> >()>, int&> (shared_ptr.h:876)\r\n==10264==    by 0xF165862: MergedGenerator (async_generator.h:996)\r\n==10264==    by 0xF165862: std::function<arrow::Future<arrow::dataset::EnumeratedRecordBatch> ()> arrow::MakeMergedGenerator<arrow::dataset::EnumeratedRecordBatch>(std::function<arrow::Future<std::function<arrow::Future<arrow::dataset::EnumeratedRecordBatch> ()> > ()>, int) (async_generator.h:1185)\r\n==10264==    by 0xF14A2DF: arrow::dataset::(anonymous namespace)::MakeScanNode(arrow::compute::ExecPlan*, std::vector<arrow::compute::ExecNode*, std::allocator<arrow::compute::ExecNode*> >, arrow::compute::ExecNodeOptions const&) (scanner.cc:794)\r\n==10264==    by 0xF10BF13: std::_Function_handler<arrow::Result<arrow::compute::ExecNode*> (arrow::compute::ExecPlan*, std::vector<arrow::compute::ExecNode*, std::allocator<arrow::compute::ExecNode*> >, arrow::compute::ExecNodeOptions const&), arrow::Result<arrow::compute::ExecNode*> (*)(arrow::compute::ExecPlan*, std::vector<arrow::compute::ExecNode*, std::allocator<arrow::compute::ExecNode*> >, arrow::compute::ExecNodeOptions const&)>::_M_invoke(std::_Any_data const&, arrow::compute::ExecPlan*&&, std::vector<arrow::compute::ExecNode*, std::allocator<arrow::compute::ExecNode*> >&&, arrow::compute::ExecNodeOptions const&) (invoke.h:60)\r\n==10264==    by 0xEFBDCB4: std::function<arrow::Result<arrow::compute::ExecNode*> (arrow::compute::ExecPlan*, std::vector<arrow::compute::ExecNode*, std::allocator<arrow::compute::ExecNode*> >, arrow::compute::ExecNodeOptions const&)>::operator()(arrow::compute::ExecPlan*, std::vector<arrow::compute::ExecNode*, std::allocator<arrow::compute::ExecNode*> >, arrow::compute::ExecNodeOptions const&) const (std_function.h:622)\r\n==10264==    by 0xEFBC18F: arrow::compute::MakeExecNode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arrow::compute::ExecPlan*, std::vector<arrow::compute::ExecNode*, std::allocator<arrow::compute::ExecNode*> >, arrow::compute::ExecNodeOptions const&, arrow::compute::ExecFactoryRegistry*) (exec_plan.h:329)\r\n==10264==    by 0xEFB5F6E: MakeExecNodeOrStop(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, arrow::compute::ExecPlan*, std::vector<arrow::compute::ExecNode*, std::allocator<arrow::compute::ExecNode*> >, arrow::compute::ExecNodeOptions const&) (compute-exec.cpp:52)\r\n==10264==    by 0xEFB7426: ExecNode_Scan(std::shared_ptr<arrow::compute::ExecPlan> const&, std::shared_ptr<arrow::dataset::Dataset> const&, std::shared_ptr<arrow::compute::Expression> const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) (compute-exec.cpp:157)\r\n==10264==    by 0xEF3DFE1: _arrow_ExecNode_Scan (arrowExports.cpp:1621)\r\n==10264==    by 0x4942B4F: R_doDotCall (dotcode.c:610)\r\n==10264==    by 0x49B2C97: bcEval (eval.c:7695)\r\n==10264==    by 0x498DBC8: Rf_eval (eval.c:748)\r\n```\r\n\r\nFirst failure: https://dev.azure.com/ursacomputing/crossbow/_build/results?buildId=19221&view=logs&j=0da5d1d9-276d-5173-c4c4-9d4d4ed14fdb&t=d9b15392-e4ce-5e4c-0c8c-b69645229181&l=20910\r\n\r\nMost recent failure: https://dev.azure.com/ursacomputing/crossbow/_build/results?buildId=19759&view=logs&j=0da5d1d9-276d-5173-c4c4-9d4d4ed14fdb&t=d9b15392-e4ce-5e4c-0c8c-b69645229181&l=21089",
        "created_at": "2022-02-14T13:56:08.000Z",
        "updated_at": "2022-02-14T14:08:29.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-02-14T14:08:29.000Z"
    },
    "comments": [
        {
            "created_at": "2022-02-14T14:07:37.026Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15676?focusedCommentId=17492011) by Dewey Dunnington (paleolimbot):*\nDuplicate of ARROW-15656!"
        }
    ]
}