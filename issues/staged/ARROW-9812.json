{
    "issue": {
        "title": "[Python] Map data types doesn't work from Arrow to Parquet",
        "body": "***Note**: This issue was originally created as [ARROW-9812](https://issues.apache.org/jira/browse/ARROW-9812). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nHi,\r\n\r\nI'm having problems using 'map' data type in Arrow/parquet/pandas.\r\n\r\nI'm able to convert a pandas data frame to Arrow with a map data type.\r\n\r\nWhen I write Arrow to Parquet, it seems to work, but I'm not sure if the data type is written correctly.\r\n\r\nWhen I read back Parquet to Arrow, it fails saying \"reading list of structs\" is not supported. It seems that map is stored as list of structs.\r\n\r\nThere are two problems here:\r\n1. ~~Map data type doesn't work from Arrow -> Pandas~~. Fixed in ARROW-10151\n1. Map data type doesn't get written to or read from Arrow -> Parquet.\n   \n   Questions:\n   \n   1. Am I doing something wrong? Is there a way to get these to work?\u00a0\n   \n   2. If these are unsupported features, will this be fixed in a future version? Do you plans or ETA?\n   \n   The following code example (followed by output) should demonstrate the issues:\n   \n   I'm using Arrow 1.0.0 and Pandas 1.0.5.\n   \n   Thanks!\n   \n   Mayur\n   ```java\n   \n   $ cat arrowtest.py\n   \n   import pyarrow as pa\n   import pandas as pd\n   import pyarrow.parquet as pq\n   import traceback as tb\n   import io\n   \n   print(f'PyArrow Version = {pa.__version__}')\n   print(f'Pandas Version = {pd.__version__}')\n   \n   df1 = pd.DataFrame({'a': [[('b', '2')]]})\n   print(f'df1')\n   print(f'{df1}')\n   \n   print(f'Pandas -> Arrow')\n   try:\n       t1 = pa.Table.from_pandas(df1, schema=pa.schema([pa.field('a', pa.map_(pa.string(), pa.string()))]))\n       print('PASSED')\n       print(t1)\n   except:\n       print(f'FAILED')\n       tb.print_exc()\n   \n   print(f'Arrow -> Pandas')\n   try:\n       t1.to_pandas()\n       print('PASSED')\n   except:\n       print(f'FAILED')\n       tb.print_exc()print(f'Arrow -> Parquet')\n   \n   fh = io.BytesIO()\n   try:\n       pq.write_table(t1, fh)\n       print('PASSED')\n   except:\n       print('FAILED')\n       tb.print_exc()\n       \n   print(f'Parquet -> Arrow')\n   try:\n       t2 = pq.read_table(source=fh)\n       print('PASSED')\n       print(t2)\n   except:\n       print('FAILED')\n       tb.print_exc()\n   ```\n   ```java\n   \n   $ python3.6 arrowtest.py\n   PyArrow Version = 1.0.0 \n   Pandas Version = 1.0.5 \n   df1 \n   a 0 [(b, 2)] \n   \u00a0\n   Pandas -> Arrow \n   PASSED \n   pyarrow.Table \n   a: map<string, string>\n    child 0, entries: struct<key: string not null, value: string> not null\n    child 0, key: string not null\n    child 1, value: string \n   \u00a0\n   Arrow -> Pandas \n   FAILED \n   Traceback (most recent call last):\n   File \"arrowtest.py\", line 26, in <module> t1.to_pandas() \n   File \"pyarrow/array.pxi\", line 715, in pyarrow.lib._PandasConvertible.to_pandas \n   File \"pyarrow/table.pxi\", line 1565, in pyarrow.lib.Table._to_pandas File \"XXX/pyarrow/1/0/x/dist/lib/python3.6/pyarrow/pandas_compat.py\", line 779, in table_to_blockmanager blocks = _table_to_blocks(options, table, categories, ext_columns_dtypes) \n   File \"XXX/pyarrow/1/0/x/dist/lib/python3.6/pyarrow/pandas_compat.py\", line 1115, in _table_to_blocks list(extension_columns.keys())) \n   File \"pyarrow/table.pxi\", line 1028, in pyarrow.lib.table_to_blocks File \"pyarrow/error.pxi\", line 105, in pyarrow.lib.check_status pyarrow.lib.ArrowNotImplementedError: No known equivalent Pandas block for Arrow data of type map<string, string> is known. \n   \u00a0\n   Arrow -> Parquet \n   PASSED \n   \u00a0\n   Parquet -> Arrow \n   FAILED \n   Traceback (most recent call last): File \"arrowtest.py\", line 43, in <module> t2 = pq.read_table(source=fh) \n   File \"XXX/pyarrow/1/0/x/dist/lib/python3.6/pyarrow/parquet.py\", line 1586, in read_table use_pandas_metadata=use_pandas_metadata) \n   File \"XXX/pyarrow/1/0/x/dist/lib/python3.6/pyarrow/parquet.py\", line 1474, in read use_threads=use_threads \n   File \"pyarrow/_dataset.pyx\", line 399, in pyarrow._dataset.Dataset.to_table \n   File \"pyarrow/_dataset.pyx\", line 1994, in pyarrow._dataset.Scanner.to_table \n   File \"pyarrow/error.pxi\", line 122, in pyarrow.lib.pyarrow_internal_check_status \n   File \"pyarrow/error.pxi\", line 105, in pyarrow.lib.check_status pyarrow.lib.ArrowNotImplementedError: Reading lists of structs from Parquet files not yet supported: key_value: list<key_value: struct<key: string not null, value: string> not null> not null\n   ```\n   Updated to indicate to Pandas conversion done, but not yet for Parquet.",
        "created_at": "2020-08-20T14:07:18.000Z",
        "updated_at": "2021-06-23T14:14:55.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-06-23T14:14:55.000Z"
    },
    "comments": [
        {
            "created_at": "2020-08-21T14:59:09.355Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9812?focusedCommentId=17181931) by Mayur Srivastava (mayuropensource):*\nIf I use python dict in pandas and convert to arrow, I get a struct data type in arrow.\u00a0\r\n\r\nAnother question is that how pandas type should get converted to arrow?\r\n```java\n\r\n# Try with Python dict                                                                                                                                        \r\nprint('Try with Python dict:')\r\ndf2 = pd.DataFrame({'a': [{'b': 2}]})\r\nprint(df2)\r\n\r\nt3 = pa.Table.from_pandas(df2)\r\nprint(t3)\r\n\r\nprint(t3.to_pandas())\r\n```\r\n```java\n\r\nTry with Python dict:\r\n          a\r\n0  {'b': 2}\r\npyarrow.Table\r\na: struct<b: int64>\r\n  child 0, b: int64\r\n          a\r\n0  {'b': 2}\r\n```"
        },
        {
            "created_at": "2020-08-24T08:48:06.836Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9812?focusedCommentId=17183073) by Joris Van den Bossche (jorisvandenbossche):*\n`[~mayuropensource]` thanks for the issue. As you correctly noted, there are two different issues at play:\r\n\r\n> 1. Map data type doesn't work from Arrow -> Pandas.\r\n\r\nAs the error message indicates, this conversion is not yet implemented. \r\nI don't think someone is actively working on this, and contributions in this area are certainly welcome. \r\n\r\n> 2. Map data type doesn't get written to or read from Arrow -> Parquet.\r\n\r\nIt does get written (as a list of structs, which is how the Map Type is represented, see https://github.com/apache/arrow/blob/3fb1356ed2e4de7b00decbba081369019b9598a7/format/Schema.fbs#L98-L125). However, such mixture of nested lists and structs is not yet supported on the read side. This is actively being worked on (see ARROW-1644), and hopefully this will work in the next Arrow version.\r\n\r\nSo you are not directly doing something wrong, but the Map type is not yet very well supported in the Parquet and pandas conversions. Using a struct type, as in your last example, is typically better supported (simple structs are supported both in Parquet IO as in conversion to pandas)"
        },
        {
            "created_at": "2020-08-25T14:55:21.768Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9812?focusedCommentId=17184108) by Mayur Srivastava (mayuropensource):*\nThanks `[~jorisvandenbossche]`\r\n\r\nWhen ARROW-1644 is done, we can start using for non-pandas use cases.\r\n\r\n\u00a0\r\n\r\n\u00a0"
        },
        {
            "created_at": "2020-10-01T18:10:33.982Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9812?focusedCommentId=17205731) by Bryan Cutler (bryanc):*\nI started work on ARROW-10151 for the Pandas conversion. Let's keep this open for Parquet conversion after ARROW-1644."
        },
        {
            "created_at": "2020-10-09T18:31:55.785Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9812?focusedCommentId=17211270) by Derek Marsh (admrsh):*\nHi all,\r\n\r\nI've searched existing issues as best I can and this issue mentions \"1. Map data type doesn't work from Arrow -> Pandas.\"\r\n\r\nI built the project from master at roughly 15:00 UTC today (October 9) and added one line before I built pyarrow:\r\n```java\n\r\n    _Type_MAP: np.object_,\n```\r\nafter this line:\u00a0[types.pxi](https://github.com/apache/arrow/blob/master/python/pyarrow/types.pxi#L49)\r\n\r\nThis enables Table.to_pandas() to convert a MapType to List[Tuple[...]]\r\n```java\n\r\n>>> import pyarrow as pa\r\n>>> d = pa.map_(pa.int64(), pa.float64())\r\n>>> d.to_pandas_dtype()\r\n<class 'numpy.object_'>\n```\r\n```java\n\r\n>>> tbl\r\npyarrow.Table\r\nstored_on: double\r\nvals: map<int64, double>\r\n child 0, entries: struct<key: int64 not null, value: double> not null\r\n child 0, key: int64 not null\r\n child 1, value: double\r\n>>> tbl.to_pydict()\r\n{'stored_on': [1585347700.204351], 'vals': [[(514, 12.0), (515, 1300.0), (519, 125.0), (2978, 126.0), (3236, 13107.0), (3237, 1.0), (3238, 1.0), (3239, 3.0), (3240, 3.0)]]}\r\n>>> df = tbl.to_pandas()\r\n>>> df.vals\r\n0 [(514, 12.0), (515, 1300.0), (519, 125.0), (29...\r\nName: vals, dtype: object\r\n>>> df.vals.iloc[0]\r\n[(514, 12.0), (515, 1300.0), (519, 125.0), (2978, 126.0), (3236, 13107.0), (3237, 1.0), (3238, 1.0), (3239, 3.0), (3240, 3.0)]\r\n>>> df.vals.iloc[0][0]\r\n(514, 12.0)\n```\r\nI understand this is a very trivial working example, but am interested what any maintainers think about this solution and if it merits further testing/consideration.\r\n\r\nThanks."
        },
        {
            "created_at": "2020-10-09T23:45:11.031Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9812?focusedCommentId=17211472) by Bryan Cutler (bryanc):*\nHi `[~admrsh]` , I implemented Map types to Pandas conversion recently in ARROW-10151, but looks like I forgot that line you pointed out in `types.pxi`. That should be in for the upcoming release, if you are able to do a PR for it's cut - likely today or tomorrow - that would be great. Otherwise, I can go ahead and add it. I will update this Jira to reflect Pandas conversion is complete. I made ARROW-10260 to add `to_pandas_dtype`. Thanks!"
        },
        {
            "created_at": "2021-06-23T14:14:37.219Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9812?focusedCommentId=17368235) by Antoine Pitrou (apitrou):*\nThe test script in the issue description works on git master. I'm going to close this issue."
        }
    ]
}