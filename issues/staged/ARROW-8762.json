{
    "issue": {
        "title": "[C++][Gandiva] Replace Gandiva's BitmapAnd with common implementation",
        "body": "***Note**: This issue was originally created as [ARROW-8762](https://issues.apache.org/jira/browse/ARROW-8762). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nNow that the arrow/util/bit_util.h implementation has been optimized, we should just use that one",
        "created_at": "2020-05-11T14:10:03.000Z",
        "updated_at": "2020-06-19T03:10:42.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: C++ - Gandiva",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-06-19T03:10:29.000Z"
    },
    "comments": [
        {
            "created_at": "2020-05-14T20:43:19.833Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8762?focusedCommentId=17107660) by Wes McKinney (wesm):*\nThis may not be possible yet without some benchmarking since Gandiva's BitmapAnd processes 8 bytes at a time instead of one byte at a time. "
        },
        {
            "created_at": "2020-05-15T10:36:45.097Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8762?focusedCommentId=17108160) by Yibo Cai (yibocai):*\nBenchmarked processing in uint8 and uint64, no obvious diff found.\r\nhttps://issues.apache.org/jira/browse/ARROW-8553?focusedCommentId=17108159&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-17108159"
        },
        {
            "created_at": "2020-05-18T05:22:52.374Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8762?focusedCommentId=17109886) by Yibo Cai (yibocai):*\nGandiva BitmapAnd code[1] leverages the fact that gandiva bitmap buffer are always 64-bit aligned in size[2]. BitmapAnd in bit_util.cc is a general implementation.\r\nMaybe we should just leave gandiva code as is.\r\n\r\n[1] https://github.com/apache/arrow/blob/e5a33f1220705aec6a224b55d2a6f47fbd957603/cpp/src/gandiva/bitmap_accumulator.cc#L38\r\n[2] https://github.com/apache/arrow/blob/e5a33f1220705aec6a224b55d2a6f47fbd957603/cpp/src/gandiva/local_bitmaps_holder.h#L68"
        },
        {
            "created_at": "2020-06-15T16:50:45.851Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8762?focusedCommentId=17136013) by Wes McKinney (wesm):*\nI see, thanks. If this optimization is beneficial then it should be possible to prove it with benchmarks. I will take a quick look at it"
        },
        {
            "created_at": "2020-06-19T03:10:29.375Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8762?focusedCommentId=17140155) by Wes McKinney (wesm):*\nIssue resolved by pull request 7489\n<https://github.com/apache/arrow/pull/7489>"
        }
    ]
}