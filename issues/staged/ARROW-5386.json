{
    "issue": {
        "title": "Making the rounding behavior of the buffer capacity configurable",
        "body": "***Note**: This issue was originally created as [ARROW-5386](https://issues.apache.org/jira/browse/ARROW-5386). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIn our scenario, the following code snippet is frequent in our code base:\r\n\r\nint requestSize = ...;\r\n if (requestSize <= allocator.getLimit() - allocator.getAllocatedMemory())\r\n\r\n{ ArrowBuf buffer = allocator.buffer(requestSize); }\r\n\r\nHowever, it often causes OutOfMemoryException, due to Arrow's rounding behavior.\r\n\r\nFor example, we have only 12 MB memory left, and we request a buffer with size 10 MB. Appearantly, there is sufficient memory to meet the request. However, the rounding behavior rounds the request size from 10 MB to 16 MB, and there is no 16 MB memory, so an OutOfMemoryException will be thrown.\r\n\r\nWe propose two ways to solve this problem:\r\n\r\n1. We provide a rounding option as an argument to the BaseAllocator#buffer method. There are two possible values for the rounding option: rounding up and rounding down. In the above scenario, the rounding down option can solve the problem.\r\n\r\n2. We add a method to the allocator:\r\n\r\nint getRoundedSize(final int size, BaseAllocator.AllocationRoundingOption roundingOption)\r\n\r\nThis method will give the rounded buffer size, given the initial request size. With this method, the user can freely adjust their request size to avoid OOM.\r\n\r\nTo make it more convenient to use Arrow, we think both solutions\u00a0should be implemented.\r\n\r\n\u00a0",
        "created_at": "2019-05-21T10:17:24.000Z",
        "updated_at": "2019-06-12T06:35:44.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-06-12T06:35:44.000Z"
    },
    "comments": [
        {
            "created_at": "2019-06-12T06:35:44.510Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5386?focusedCommentId=16861796) by Liya Fan (fan_li_ya):*\nARROW-5429 provides a workaround for this issue. \r\n\r\nThat is, the user can get to know the actual buffer size through the RoundingStrategy object. So OOM can be avoided by adjusting the request buffer size. "
        }
    ]
}