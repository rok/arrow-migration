{
    "issue": {
        "title": "[C++] Implement basic array-by-array  reassembly logic",
        "body": "***Note**: This issue was originally created as [ARROW-8494](https://issues.apache.org/jira/browse/ARROW-8494). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThis logic would attempt to create the data necessary for each field by passing through the levels once for each field.\u00a0 it is expected that due to once we can put SIMD/bitmap code in place this will perform better for nested data with shallow nesting, but due to repetitive computation might perform worse for deep nested that include List-types.\u00a0 The SIMD/bitmap enhancements are covered in:\u00a0ARROW-9985\r\n\r\n\u00a0\r\n\r\nAt a high level the logic would be structured as:\r\n\r\n`for each field:`\r\n\r\n`\u00a0 \u00a0for each rep/def level entry:`\r\n\r\n`\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0update null bitmask and offsets.`",
        "created_at": "2020-04-17T04:13:13.000Z",
        "updated_at": "2020-09-22T03:44:32.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: task"
        ],
        "closed": true,
        "closed_at": "2020-09-21T18:45:47.000Z"
    },
    "comments": [
        {
            "created_at": "2020-08-26T17:00:42.637Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8494?focusedCommentId=17185332) by Antoine Pitrou (apitrou):*\nIf I understand correctly, for a non-list nullable field, we only need to update the null bitmap:\r\n- if def level >= field's def level, append non-null\n- otherwise, append null\n  \n  For a non-nullable list field, we must update the offsets:\n- if rep level < field's rep level and def level < field's def level , append current_offset (empty list)\n- if rep level < field's rep level and def level >= field's def level , append current_offset++ (first item in new list)\n- otherwise, just current_offset++ (next item in same list)\n  \n  For a nullable list field, the ancestor_def_level must also be taken into account?\n  \n  So non-list fields are easy, list fields have more sophisticated logic that might be less easy to do efficiently."
        },
        {
            "created_at": "2020-08-27T03:25:10.097Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8494?focusedCommentId=17185583) by Micah Kornfield (emkornfield@gmail.com):*\nYes `[~apitrou]` \u00a0that matches my understanding, I have an algorithm that I think might work fairly well for the more complicated\u00a0 list cases but probably has diminishing returns as the level of nesting grows."
        },
        {
            "created_at": "2020-09-21T18:45:47.432Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8494?focusedCommentId=17199587) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 8177\n<https://github.com/apache/arrow/pull/8177>"
        }
    ]
}