{
    "issue": {
        "title": "[Python] Array.to_numpy() with type fixed_size_list(int64(), 1) doesn't roundtrip for large integer values",
        "body": "***Note**: This issue was originally created as [ARROW-10194](https://issues.apache.org/jira/browse/ARROW-10194). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nReproducer:\r\n\r\n```python\n\r\ndata = [None, [9007199254740993]]\r\narr = pa.array(data, type=pa.list_(pa.uint64(), 1))\r\nndarray = arr.to_numpy(zero_copy_only=False)\r\nrestored = pa.array(ndarray, type=arr.type)\r\nassert restored.equals(arr)\r\n```\r\n\r\nError:\r\n\r\n```Java\n\r\nE       assert False\r\nE        +  where False = <built-in method equals of pyarrow.lib.FixedSizeListArray object at 0x7fbdb0239e20>(<pyarrow.lib.FixedSizeListArray object at 0x7fbdb0262220>\\n[\\n  null,\\n  [\\n    9007199254740993\\n  ]\\n])\r\nE        +    where <built-in method equals of pyarrow.lib.FixedSizeListArray object at 0x7fbdb0239e20> = <pyarrow.lib.FixedSizeListArray object at 0x7fbdb0239e20>\\n[\\n  null,\\n  [\\n    9007199254740992\\n  ]\\n].equals\r\n```\r\n\r\nThe inner numpy array (`ndarray[1]`) has float64 dtype where the integer gets truncated because of the precision.",
        "created_at": "2020-10-06T13:55:07.000Z",
        "updated_at": "2020-10-07T08:05:18.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": []
}