{
    "issue": {
        "title": "[Python] MapArray pandas round trip is broken",
        "body": "***Note**: This issue was originally created as [ARROW-16611](https://issues.apache.org/jira/browse/ARROW-16611). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\npyarrow.MapArray when converted to pandas cannot be successfully converted back.\r\n\r\nThe following snipper does not work:\r\n\r\n\u00a0\r\n\r\n```\r\nimport pyarrow as pa\r\n\r\ndata = [[('x', 1), ('y', 0)], [('a', 2), ('b', 45)]]\r\nty = pa.map_(pa.string(), pa.int64())\r\nmap_col = pa.array(data, type=ty)\r\npa.MapArray.from_pandas(map_col.to_pandas())\r\n```\r\n`Uncaught exception:\u00a0ArrowTypeError: Expected bytes, got a 'int' object (java.lang.RuntimeException)`",
        "created_at": "2022-05-18T20:08:02.000Z",
        "updated_at": "2022-05-31T11:10:13.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-05-18T20:23:26.304Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16611?focusedCommentId=17539065) by Antoine Pitrou (apitrou):*\nHmm, where does the \"java.lang.RuntimeException\" come from?"
        },
        {
            "created_at": "2022-05-18T20:24:19.734Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16611?focusedCommentId=17539066) by Antoine Pitrou (apitrou):*\nAlso, did it work with previous versions of PyArrow? I don't think so."
        },
        {
            "created_at": "2022-05-31T11:10:13.137Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16611?focusedCommentId=17544323) by Joris Van den Bossche (jorisvandenbossche):*\nIf you specify the type again, then it works:\r\n\r\n```python\n\r\npa.MapArray.from_pandas(map_col.to_pandas(), type=ty)\r\n```\r\n\r\nAlso small note that the `from_pandas` method is a generic Array class method, and not specific to `MapArray`. So what is actually being done under the hood is `pa.array(map_col.to_pandas(), from_pandas=True)` (which also illustrates why you need to specify the `type` again).\r\n\r\nIn general it is difficult to infer a map type (i.e. inferring the type from the data when not specifying an exact type). A list of tuples can for example also be the representation for a struct array.  \r\n\r\n"
        }
    ]
}