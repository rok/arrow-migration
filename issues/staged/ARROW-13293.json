{
    "issue": {
        "title": "[R] open_dataset followed by collect hangs (while compute works)",
        "body": "***Note**: This issue was originally created as [ARROW-13293](https://issues.apache.org/jira/browse/ARROW-13293). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nTried to make a reproducible example using the iris dataset, but it works as expected for that dataset. So the issue might be specific to the dataset I am using (which contains over 100 columns). The example below illustrates the issue.\r\n\r\nThe parquet data used in the example can be downloaded from\u00a0[this link](https://drive.google.com/file/d/1MHaq3KqlheqrNm8dk71we74n_ip9hMqJ/view?usp=sharing)\r\n\r\n\u00a0\r\n\r\nThe issue I see is the following:\r\n\r\n\u00a0\r\n \\* calling open_dataset() %>% filter() %>% collect() hangs on my machine (while I would expect that a tibble 1,646 x 116 would be returned very fast)\r\n \\* The two alternative calls (one using read_parquet on the specific parquet file within the Dataset on which I filter, and the other using compute() instead of collect()) seem to work as expected\r\n\r\n\u00a0\r\n\r\n``` r\r\nlibrary(dplyr)\r\n#> \r\n#> Attaching package: 'dplyr'\r\n#> The following objects are masked from 'package:stats':\r\n#> \r\n#> filter, lag\r\n#> The following objects are masked from 'package:base':\r\n#> \r\n#> intersect, setdiff, setequal, union\r\nlibrary(arrow)\r\n#> \r\n#> Attaching package: 'arrow'\r\n#> The following object is masked from 'package:utils':\r\n#> \r\n#> timestamp\r\n\r\nread_parquet(\"data/lucas_harmonised/1_table/parquet_hive/year=2018/part-4.parquet\") %>%\r\n filter(nuts1 == \"BE2\")\r\n#> # A tibble: 1,646 x 116\r\n#> id point_id nuts0 nuts1 nuts2 nuts3 th_lat th_long office_pi ex_ante\r\n#> <int> <int> <chr> <chr> <chr> <chr> <dbl> <dbl> <chr> <chr> \r\n#> 1 199451 39803106 BE BE2 BE22 BE221 51.0 5.14 1 0 \r\n#> 2 220669 39623116 BE BE2 BE21 BE213 51.0 4.88 1 0 \r\n#> 3 215557 39483154 BE BE2 BE21 BE211 51.4 4.64 1 0 \r\n#> 4 223579 40303122 BE BE2 BE22 BE222 51.1 5.84 1 0 \r\n#> 5 331079 39783134 BE BE2 BE21 BE213 51.2 5.09 0 0 \r\n#> 6 225417 39403150 BE BE2 BE21 BE211 51.3 4.53 1 0 \r\n#> 7 3340 38863118 BE BE2 BE23 BE234 51.0 3.79 1 0 \r\n#> 8 137361 38143132 BE BE2 BE25 BE258 51.1 2.75 1 0 \r\n#> 9 221861 38343148 BE BE2 BE25 BE255 51.2 3.02 1 0 \r\n#> 10 787 39523148 BE BE2 BE21 BE211 51.3 4.70 1 0 \r\n#> # ... with 1,636 more rows, and 106 more variables: survey_date <chr>,\r\n#> # car_latitude <dbl>, car_ew <chr>, car_longitude <dbl>, gps_proj <chr>,\r\n#> # gps_prec <int>, gps_altitude <int>, gps_lat <dbl>, gps_ew <chr>,\r\n#> # gps_long <dbl>, obs_dist <dbl>, obs_direct <chr>, obs_type <chr>,\r\n#> # obs_radius <chr>, letter_group <chr>, lc1 <chr>, lc1_label <chr>,\r\n#> # lc1_spec <chr>, lc1_spec_label <chr>, lc1_perc <chr>, lc2 <chr>,\r\n#> # lc2_label <chr>, lc2_spec <chr>, lc2_spec_label <chr>, lc2_perc <chr>,\r\n#> # lu1 <chr>, lu1_label <chr>, lu1_type <chr>, lu1_type_label <chr>,\r\n#> # lu1_perc <chr>, lu2 <chr>, lu2_label <chr>, lu2_type <chr>,\r\n#> # lu2_type_label <chr>, lu2_perc <chr>, parcel_area_ha <chr>,\r\n#> # tree_height_maturity <chr>, tree_height_survey <chr>, feature_width <chr>,\r\n#> # lm_stone_walls <chr>, crop_residues <chr>, lm_grass_margins <chr>,\r\n#> # grazing <chr>, special_status <chr>, lc_lu_special_remark <chr>,\r\n#> # cprn_cando <chr>, cprn_lc <chr>, cprn_lc_label <chr>, cprn_lc1n <int>,\r\n#> # cprnc_lc1e <int>, cprnc_lc1s <int>, cprnc_lc1w <int>,\r\n#> # cprn_lc1n_brdth <int>, cprn_lc1e_brdth <int>, cprn_lc1s_brdth <int>,\r\n#> # cprn_lc1w_brdth <int>, cprn_lc1n_next <chr>, cprn_lc1s_next <chr>,\r\n#> # cprn_lc1e_next <chr>, cprn_lc1w_next <chr>, cprn_urban <chr>,\r\n#> # cprn_impervious_perc <int>, inspire_plcc1 <int>, inspire_plcc2 <int>,\r\n#> # inspire_plcc3 <int>, inspire_plcc4 <int>, inspire_plcc5 <int>,\r\n#> # inspire_plcc6 <int>, inspire_plcc7 <int>, inspire_plcc8 <int>,\r\n#> # eunis_complex <chr>, grassland_sample <chr>, grass_cando <chr>, wm <chr>,\r\n#> # wm_source <chr>, wm_type <chr>, wm_delivery <chr>, erosion_cando <chr>,\r\n#> # soil_stones_perc <chr>, bio_sample <chr>, soil_bio_taken <chr>,\r\n#> # bulk0_10_sample <chr>, soil_blk_0_10_taken <chr>, bulk10_20_sample <chr>,\r\n#> # soil_blk_10_20_taken <chr>, bulk20_30_sample <chr>,\r\n#> # soil_blk_20_30_taken <chr>, standard_sample <chr>, soil_std_taken <chr>,\r\n#> # organic_sample <chr>, soil_org_depth_cando <chr>, soil_taken <chr>,\r\n#> # soil_crop <chr>, photo_point <chr>, photo_north <chr>, photo_south <chr>,\r\n#> # photo_east <chr>, photo_west <chr>, transect <chr>, revisit <int>, ...\r\n\r\nopen_dataset(\"data/lucas_harmonised/1_table/parquet_hive/\") %>%\r\n filter(nuts1 == \"BE2\", year == 2018) %>%\r\n compute() \r\n#> Table\r\n#> 1646 rows x 117 columns\r\n#> $id <int64>\r\n#> $point_id <int64>\r\n#> $nuts0 <string>\r\n#> $nuts1 <string>\r\n#> $nuts2 <string>\r\n#> $nuts3 <string>\r\n#> $th_lat <double>\r\n#> $th_long <double>\r\n#> $office_pi <string>\r\n#> $ex_ante <string>\r\n#> $survey_date <string>\r\n#> $car_latitude <double>\r\n#> $car_ew <string>\r\n#> $car_longitude <double>\r\n#> $gps_proj <string>\r\n#> $gps_prec <int64>\r\n#> $gps_altitude <int64>\r\n#> $gps_lat <double>\r\n#> $gps_ew <string>\r\n#> $gps_long <double>\r\n#> $obs_dist <double>\r\n#> $obs_direct <string>\r\n#> $obs_type <string>\r\n#> $obs_radius <string>\r\n#> $letter_group <string>\r\n#> $lc1 <string>\r\n#> $lc1_label <string>\r\n#> $lc1_spec <string>\r\n#> $lc1_spec_label <string>\r\n#> $lc1_perc <string>\r\n#> $lc2 <string>\r\n#> $lc2_label <string>\r\n#> $lc2_spec <string>\r\n#> $lc2_spec_label <string>\r\n#> $lc2_perc <string>\r\n#> $lu1 <string>\r\n#> $lu1_label <string>\r\n#> $lu1_type <string>\r\n#> $lu1_type_label <string>\r\n#> $lu1_perc <string>\r\n#> $lu2 <string>\r\n#> $lu2_label <string>\r\n#> $lu2_type <string>\r\n#> $lu2_type_label <string>\r\n#> $lu2_perc <string>\r\n#> $parcel_area_ha <string>\r\n#> $tree_height_maturity <string>\r\n#> $tree_height_survey <string>\r\n#> $feature_width <string>\r\n#> $lm_stone_walls <string>\r\n#> $crop_residues <string>\r\n#> $lm_grass_margins <string>\r\n#> $grazing <string>\r\n#> $special_status <string>\r\n#> $lc_lu_special_remark <string>\r\n#> $cprn_cando <string>\r\n#> $cprn_lc <string>\r\n#> $cprn_lc_label <string>\r\n#> $cprn_lc1n <int64>\r\n#> $cprnc_lc1e <int64>\r\n#> $cprnc_lc1s <int64>\r\n#> $cprnc_lc1w <int64>\r\n#> $cprn_lc1n_brdth <int64>\r\n#> $cprn_lc1e_brdth <int64>\r\n#> $cprn_lc1s_brdth <int64>\r\n#> $cprn_lc1w_brdth <int64>\r\n#> $cprn_lc1n_next <string>\r\n#> $cprn_lc1s_next <string>\r\n#> $cprn_lc1e_next <string>\r\n#> $cprn_lc1w_next <string>\r\n#> $cprn_urban <string>\r\n#> $cprn_impervious_perc <int64>\r\n#> $inspire_plcc1 <int64>\r\n#> $inspire_plcc2 <int64>\r\n#> $inspire_plcc3 <int64>\r\n#> $inspire_plcc4 <int64>\r\n#> $inspire_plcc5 <int64>\r\n#> $inspire_plcc6 <int64>\r\n#> $inspire_plcc7 <int64>\r\n#> $inspire_plcc8 <int64>\r\n#> $eunis_complex <string>\r\n#> $grassland_sample <string>\r\n#> $grass_cando <string>\r\n#> $wm <string>\r\n#> $wm_source <string>\r\n#> $wm_type <string>\r\n#> $wm_delivery <string>\r\n#> $erosion_cando <string>\r\n#> $soil_stones_perc <string>\r\n#> $bio_sample <string>\r\n#> $soil_bio_taken <string>\r\n#> $bulk0_10_sample <string>\r\n#> $soil_blk_0_10_taken <string>\r\n#> $bulk10_20_sample <string>\r\n#> $soil_blk_10_20_taken <string>\r\n#> $bulk20_30_sample <string>\r\n#> $soil_blk_20_30_taken <string>\r\n#> $standard_sample <string>\r\n#> $soil_std_taken <string>\r\n#> $organic_sample <string>\r\n#> $soil_org_depth_cando <string>\r\n#> $soil_taken <string>\r\n#> $soil_crop <string>\r\n#> $photo_point <string>\r\n#> $photo_north <string>\r\n#> $photo_south <string>\r\n#> $photo_east <string>\r\n#> $photo_west <string>\r\n#> $transect <string>\r\n#> $revisit <int64>\r\n#> $th_gps_dist <double>\r\n#> $file_path_gisco_north <string>\r\n#> $file_path_gisco_south <string>\r\n#> $file_path_gisco_east <string>\r\n#> $file_path_gisco_west <string>\r\n#> $file_path_gisco_point <string>\r\n#> $year <int32>\r\n\r\n#open_dataset(\"data/lucas_harmonised/1_table/parquet_hive/\") %>%\r\n1. filter(nuts1 == \"BE2\", year == 2018) %>%\n1. collect()\n1. not run: this will hang\n   ```\n   \n   <sup>Created on 2021-07-09 by the [reprex package](https://reprex.tidyverse.org) (v2.0.0)</sup>\n   \n   <details style=\"margin-bottom:10px;\">\n   <summary>\n   Session info\n   </summary>\n   \n   ``` r\n   sessioninfo::session_info()\n#> - Session info ---------------------------------------------------------------\r\n#> setting value \r\n#> version R version 4.1.0 (2021-05-18)\r\n#> os Windows 10 x64 \r\n#> system x86_64, mingw32 \r\n#> ui RTerm \r\n#> language (EN) \r\n#> collate Dutch_Belgium.1252 \r\n#> ctype Dutch_Belgium.1252 \r\n#> tz Europe/Paris \r\n#> date 2021-07-09 \r\n#> \r\n#> - Packages -------------------------------------------------------------------\r\n#> package \\* version date lib source \r\n#> arrow \\* 4.0.1 2021-05-28 [1] CRAN (R 4.1.0)\r\n#> assertthat 0.2.1 2019-03-21 [1] CRAN (R 4.1.0)\r\n#> bit 4.0.4 2020-08-04 [1] CRAN (R 4.1.0)\r\n#> bit64 4.0.5 2020-08-30 [1] CRAN (R 4.1.0)\r\n#> cli 2.5.0 2021-04-26 [1] CRAN (R 4.0.5)\r\n#> crayon 1.4.1 2021-02-08 [1] CRAN (R 4.1.0)\r\n#> DBI 1.1.1 2021-01-15 [1] CRAN (R 4.1.0)\r\n#> digest 0.6.27 2020-10-24 [1] CRAN (R 4.1.0)\r\n#> dplyr \\* 1.0.7 2021-06-18 [1] CRAN (R 4.0.5)\r\n#> ellipsis 0.3.2 2021-04-29 [1] CRAN (R 4.1.0)\r\n#> evaluate 0.14 2019-05-28 [1] CRAN (R 4.1.0)\r\n#> fansi 0.5.0 2021-05-25 [1] CRAN (R 4.0.5)\r\n#> fs 1.5.0 2020-07-31 [1] CRAN (R 4.1.0)\r\n#> generics 0.1.0 2020-10-31 [1] CRAN (R 4.1.0)\r\n#> glue 1.4.2 2020-08-27 [1] CRAN (R 4.1.0)\r\n#> highr 0.9 2021-04-16 [1] CRAN (R 4.1.0)\r\n#> htmltools 0.5.1.1 2021-01-22 [1] CRAN (R 4.1.0)\r\n#> knitr 1.33 2021-04-24 [1] CRAN (R 4.1.0)\r\n#> lifecycle 1.0.0 2021-02-15 [1] CRAN (R 4.1.0)\r\n#> magrittr 2.0.1 2020-11-17 [1] CRAN (R 4.1.0)\r\n#> pillar 1.6.1 2021-05-16 [1] CRAN (R 4.1.0)\r\n#> pkgconfig 2.0.3 2019-09-22 [1] CRAN (R 4.1.0)\r\n#> ps 1.6.0 2021-02-28 [1] CRAN (R 4.1.0)\r\n#> purrr 0.3.4 2020-04-17 [1] CRAN (R 4.1.0)\r\n#> R6 2.5.0 2020-10-28 [1] CRAN (R 4.1.0)\r\n#> reprex 2.0.0 2021-04-02 [1] CRAN (R 4.1.0)\r\n#> rlang 0.4.11 2021-04-30 [1] CRAN (R 4.1.0)\r\n#> rmarkdown 2.9 2021-06-15 [1] CRAN (R 4.0.5)\r\n#> rstudioapi 0.13 2020-11-12 [1] CRAN (R 4.1.0)\r\n#> sessioninfo 1.1.1 2018-11-05 [1] CRAN (R 4.1.0)\r\n#> stringi 1.6.2 2021-05-17 [1] CRAN (R 4.0.5)\r\n#> stringr 1.4.0 2019-02-10 [1] CRAN (R 4.1.0)\r\n#> tibble 3.1.2 2021-05-16 [1] CRAN (R 4.1.0)\r\n#> tidyselect 1.1.1 2021-04-30 [1] CRAN (R 4.1.0)\r\n#> utf8 1.2.1 2021-03-12 [1] CRAN (R 4.1.0)\r\n#> vctrs 0.3.8 2021-04-29 [1] CRAN (R 4.1.0)\r\n#> withr 2.4.2 2021-04-18 [1] CRAN (R 4.1.0)\r\n#> xfun 0.24 2021-06-15 [1] CRAN (R 4.0.5)\r\n#> yaml 2.2.1 2020-02-01 [1] CRAN (R 4.1.0)\r\n#> \r\n#> [1] C:/R/library\r\n#> [2] C:/R/R-4.1.0/library\r\n```\r\n\r\n</details>",
        "created_at": "2021-07-09T11:16:11.000Z",
        "updated_at": "2021-09-29T18:44:54.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-09-29T18:44:54.000Z"
    },
    "comments": [
        {
            "created_at": "2021-07-09T13:35:51.315Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13293?focusedCommentId=17378070) by Nicola Crane (thisisnic):*\nThanks for reporting this.\u00a0 I'm wondering if this is similar to another issue we've seen before.\u00a0 Please could you try turning off multithreading using the code below, and seeing if that resolves the issue?\r\n```java\n\r\n options(arrow.use_threads = FALSE)\n```"
        },
        {
            "created_at": "2021-07-09T13:51:35.229Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13293?focusedCommentId=17378082) by Hans Van Calster (hansvc):*\n`[~thisisnic]` \u00a0indeed, after turning off multithreading the code ran without a problem."
        },
        {
            "created_at": "2021-07-09T14:50:39.584Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13293?focusedCommentId=17378104) by Nicola Crane (thisisnic):*\nI've linked it to the other related multi-threading ticket; I think we have a few of these that seem to only affect Windows, but currently we're still working on working out exactly what's going on here, so I'm not sure I can offer you any more of a solution that for the moment, sorry!"
        },
        {
            "created_at": "2021-07-12T06:38:35.157Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13293?focusedCommentId=17378977) by Hans Van Calster (hansvc):*\nThanks for linking the issues. I hope this helps solving the problem. If there is anything else you want me to report / try on my system, just let me know."
        },
        {
            "created_at": "2021-07-14T08:05:42.097Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13293?focusedCommentId=17380423) by Nicola Crane (thisisnic):*\nThanks `[~hansvc]` \u00a0 - would you mind trying running this with the nightly version of Arrow? It can be installed via the following:\r\ninstall.packages(\"arrow\", repos = \"https://arrow-r-nightly.s3.amazonaws.com\")\u00a0\r\nSome of the code under the hood has been changed recently, and it might have fixed this issue."
        },
        {
            "created_at": "2021-07-14T08:37:26.910Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13293?focusedCommentId=17380440) by Hans Van Calster (hansvc):*\n`[~thisisnic]` I tried it, but the problem is not solved - it still hangs (without consuming memory or using CPU it seems)"
        },
        {
            "created_at": "2021-07-14T08:47:43.110Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13293?focusedCommentId=17380446) by Nicola Crane (thisisnic):*\nThanks `[~hansvc]` , that's really helpful for us!"
        },
        {
            "created_at": "2021-07-14T09:25:59.905Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13293?focusedCommentId=17380465) by Hans Van Calster (hansvc):*\nSome additional information. When I use task manager to show Analyse process in Details tab, it returns a message \"one or more threads have wait status\" and points to <https://docs.microsoft.com/nl-nl/windows/win32/debug/wait-chain-traversal>\u00a0"
        },
        {
            "created_at": "2021-09-29T18:44:54.474Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13293?focusedCommentId=17422328) by Neal Richardson (npr):*\nWe believe that this has been resolved in ARROW-8379. If you still experience this with version 6.0.0 or greater (after it is released in mid-October), please open a new issue."
        }
    ]
}