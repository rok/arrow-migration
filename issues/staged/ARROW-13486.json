{
    "issue": {
        "title": "[C++] [Python] Dictionary equality not correct?",
        "body": "***Note**: This issue was originally created as [ARROW-13486](https://issues.apache.org/jira/browse/ARROW-13486). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen equating arrays, we use their semantics; i.e. we only care about the things we see, and any in-memory details (such as values in the null slot) are ignored. However, this does not seem to happen in dictionary arrays atm.\r\n\r\nSpecifically, the following does not pass:\r\n\r\n```python\n\r\nimport pyarrow as pa\r\n\r\nindices = pa.array([0, 1, None])\r\ndictionary = pa.array([None, \"bar\"])\r\ndict_array1 = pa.DictionaryArray.from_arrays(indices, dictionary)\r\nprint(dict_array1.tolist())\r\n# [None, \"bar\", None]\r\n\r\nindices = pa.array([None, 1, 2])\r\ndictionary = pa.array([\"aa\", \"bar\", None])\r\ndict_array2 = pa.DictionaryArray.from_arrays(indices, dictionary)\r\nprint(dict_array2.tolist())\r\n# [None, \"bar\", None]\r\n\r\nassert dict_array1 == dict_array2\r\n```\r\n\r\n## Additional context\r\n\r\nI found this while performing round-trips of dictionary arrays to and from parquet. This happens because\r\n\r\n1. we have two validities to worry (indices and values)\r\n2. parquet does not support def levels in the dict page\r\n\r\nTo preserve both validities, we need to \"AND\" them and write them on the def levels of the data page.\r\n\r\nIn this situation, even though the in-memory representation changes, the semantic equality remains (we just make values have no nulls and move all the nulls to the indices).\r\n\r\n",
        "created_at": "2021-07-29T03:23:17.000Z",
        "updated_at": "2021-08-24T19:09:41.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": []
}