{
    "issue": {
        "title": "[Rust] [DataFusion] Implement Sort-Merge Join",
        "body": "***Note**: This issue was originally created as [ARROW-11094](https://issues.apache.org/jira/browse/ARROW-11094). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe current hash join works well when one side of the join can be loaded into memory but cannot scale beyond the available RAM.\r\n\r\nThe advantage of implementing SMJ (Sort-Merge Join) is that we can sort the left and right partitions, and write the intermediate results to disk, and then stream both sides of the join by merging these sorted partitions and we do not need to load one side into memory. At most, we need to load all batches from both sides that contain the current join key values.\r\n\r\nIn order to reduce memory pressure we will want to limit the concurrency of these sort operations.\r\n\r\nWe would still want to default to hash join when we know that the build-side can fit into memory since it is more efficient than using a sort-merge join.\r\n\r\n<https://en.wikipedia.org/wiki/Sort-merge_join>",
        "created_at": "2020-12-31T19:25:54.000Z",
        "updated_at": "2021-04-26T13:25:56.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust - DataFusion",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-04-26T13:25:56.000Z"
    },
    "comments": [
        {
            "created_at": "2021-04-26T13:25:55.341Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11094?focusedCommentId=17332336) by Andrew Lamb (alamb):*\nMigrated to github: https://github.com/apache/arrow-datafusion/issues/141"
        }
    ]
}