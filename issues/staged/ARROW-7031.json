{
    "issue": {
        "title": "[Python] Expose the offsets of a ListArray in python",
        "body": "***Note**: This issue was originally created as [ARROW-7031](https://issues.apache.org/jira/browse/ARROW-7031). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nAssume the following ListArray:\r\n\r\n```Java\n\r\nIn [1]: arr = pa.ListArray.from_arrays(offsets=[0, 3, 5], values=[1, 2, 3, 4, 5])                                                                                                                                  \r\n\r\nIn [2]: arr                                                                                                                                                                                                        \r\nOut[2]: \r\n<pyarrow.lib.ListArray object at 0x7f11de71c708>\r\n[\r\n  [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  [\r\n    4,\r\n    5\r\n  ]\r\n]\r\n```\r\n\r\nYou can get the actual values as a flat array through `.values` / `.flatten()`, but there is currently no easy way to get back to the offsets (except from interpreting the buffers manually). \r\n\r\nWe should probably add an `offsets` attribute (there is actually also a TODO comment for that).",
        "created_at": "2019-10-30T13:44:58.000Z",
        "updated_at": "2019-11-07T02:45:16.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-11-05T17:29:43.000Z"
    },
    "comments": [
        {
            "created_at": "2019-10-30T14:20:02.261Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7031?focusedCommentId=16963050) by Wes McKinney (wesm):*\nSeems fine to me. You can return the offsets as `Int32Array`"
        },
        {
            "created_at": "2019-10-30T16:15:54.032Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7031?focusedCommentId=16963184) by Joris Van den Bossche (jorisvandenbossche):*\nWhile looking at this, I bumped into the following question: should the offsets take into account the offset of the array's data (eg in case of a sliced array)? \r\nIntuitively, I would say yes, as you want the offsets into the actual array you have at hand. But, also the `.values` does not take into account the offset:\r\n\r\n```Java\n\r\nIn [6]: arr = pa.ListArray.from_arrays(offsets=[0, 3, 5], values=[1, 2, 3, 4, 5])                                                                                                                                  \r\n\r\nIn [7]: arr                                                                                                                                                                                                        \r\nOut[7]: \r\n<pyarrow.lib.ListArray object at 0x7fbaa5440f48>\r\n[\r\n  [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  [\r\n    4,\r\n    5\r\n  ]\r\n]\r\n\r\nIn [8]: arr.values                                                                                                                                                                                                 \r\nOut[8]: \r\n<pyarrow.lib.Int64Array object at 0x7fbaa5440d68>\r\n[\r\n  1,\r\n  2,\r\n  3,\r\n  4,\r\n  5\r\n]\r\n\r\nIn [9]: arr[1:]                                                                                                                                                                                                    \r\nOut[9]: \r\n<pyarrow.lib.ListArray object at 0x7fbaa43d7048>\r\n[\r\n  [\r\n    4,\r\n    5\r\n  ]\r\n]\r\n\r\nIn [10]: arr[1:].values                                                                                                                                                                                            \r\nOut[10]: \r\n<pyarrow.lib.Int64Array object at 0x7fbaa43d7108>\r\n[\r\n  1,\r\n  2,\r\n  3,\r\n  4,\r\n  5\r\n]\r\n```\r\n\r\nAlthough the `.values` is just exposing the underlying buffer as an Array (and slicing in C++ is just changing the offset, not changing the data), in a Python interface I would maybe rather expect to get also a sliced version of the `.values`"
        },
        {
            "created_at": "2019-11-05T17:29:43.882Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7031?focusedCommentId=16967701) by Wes McKinney (wesm):*\nIssue resolved by pull request 5759\n<https://github.com/apache/arrow/pull/5759>"
        }
    ]
}