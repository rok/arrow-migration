{
    "issue": {
        "title": "[C++] Build Arrow on Windows with dynamically linked boost",
        "body": "***Note**: This issue was originally created as [ARROW-681](https://issues.apache.org/jira/browse/ARROW-681). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently CMake recognizes \"imported\" 3rd party libs as static libraries. That causes linking issue (.obj data can't be found in stripped .lib for shared .dll, because it's in .dll) if the library should be linked dynamically on Windows.\nTo resolve above incorrect behavior, IMPORTED_LOCATION property of imported library replaced with special IMPORTED_IMPLIB. It sets cmake to handle the library as dynamic, not static. https://cmake.org/cmake/help/v3.0/prop_tgt/IMPORTED_IMPLIB.html\n\nAnother linking issue on Windows with dynamically linked boost is caused by boost's autolink feature. Autolinking tells to link against static libs of boost, even if we have turned off usage of static libs in CMAKE. The solution is to turn off boost's autolinking by preprocessor's defines directly from CMAKE script:\n\n    // disable autolinking in boost\n    add_definitions(-DBOOST_ALL_NO_LIB)\n\n    // force all boost libraries to dynamic link\n    add_definitions(-DBOOST_ALL_DYN_LINK)",
        "created_at": "2017-03-22T00:45:37.000Z",
        "updated_at": "2017-03-26T16:21:41.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2017-03-22T14:59:33.000Z"
    },
    "comments": [
        {
            "created_at": "2017-03-22T14:59:33.527Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-681?focusedCommentId=15936472) by Wes McKinney (wesm):*\nResolved by https://github.com/apache/arrow/commit/b179ad2d80c3f3c1ab81bfa9ff0c343fb47b148a"
        }
    ]
}