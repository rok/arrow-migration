{
    "issue": {
        "title": "[IPC][Java] JDK 8 incompatibility with ByteBuffer.clear()",
        "body": "***Note**: This issue was originally created as [ARROW-15913](https://issues.apache.org/jira/browse/ARROW-15913). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThere is an incompatibility with JDK 8 when Arrow is compiled with JDK 9 or higher as described here:\r\n\r\n<https://jira.mongodb.org/browse/JAVA-2559>\r\n\r\nThis pattern is used in at least MessageSerializer#readMessage(), but the codebase needs to be examined anywhere ByteBuffer is being used.\r\n\r\n\"Java 9 introduces overridden methods with covariant return types for the following methods in java.nio.ByteBuffer that are used by the driver:\r\n \\* position\r\n \\* limit\r\n \\* flip\r\n \\* clear\r\n\r\nIn Java 9 they all now return ByteBuffer, whereas the methods they override return Buffer,\r\nresulting in exceptions like this when executing on Java 8 and lower:\r\n\r\njava.lang.NoSuchMethodError: java.nio.ByteBuffer.limit(I)Ljava/nio/ByteBuffer\r\n\r\nThis is because the generated byte code includes the static return type of the method, which is not found on Java 8 and lower because the overloaded methods with covariant return types don't exist.\r\n\r\nThe solution is to cast ByteBuffer instances to Buffer before calling the method.\"",
        "created_at": "2022-03-10T19:26:46.000Z",
        "updated_at": "2022-03-10T19:28:24.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": []
}