{
    "issue": {
        "title": "[JavaScript] Structs incorrectly initialise null values",
        "body": "***Note**: This issue was originally created as [ARROW-15651](https://issues.apache.org/jira/browse/ARROW-15651). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nNullable StructArrays created with FixedSizeList fields seem to incorrectly initialise.\r\nI've tried to create them using both the `Builder` and `makeVector` methods and I believe it breaks the specification.\r\n\r\nI believe that the underlying arrays for the fields of a struct should be the length of the struct array.\r\n\r\nHowever the `nullCount`s, `numChildren`s, and other methods all return different numbers. (And this is causing a problem when we try to read the same memory within Rust as the lengths and offsets differ)\r\n\r\nSpecifically this:\r\n```javascript\n\r\nlet list_field = new Field('n1', new FixedSizeList(2, Float64), true);\r\nlet struct_field = new Field('foo', new Struct([list_field]), true);\r\n\r\nlet builder = new Builder({\r\ntype:struct_field.type,\r\nnullValues: [null, undefined],\r\n});\r\n\r\nbuilder.append(null);\r\n\r\nconsole.log('Builder:' + JSON.stringify(builder));\r\nconsole.log('numChildren: ' + builder.numChildren);\r\nconsole.log('nullCount: ' + builder.nullCount);\r\nconsole.log('length: ' + builder.length);\r\n\r\nlet vec1 = builder.toVector();\r\nconsole.log('Vector from Builder:' + vec1);\r\nconsole.log('numChildren: ' + vec1.numChildren);\r\nconsole.log('nullCount: ' + vec1.nullCount);\r\nconsole.log('length: ' + vec1.length);\r\n\r\nlet vec2 = makeVector({\r\ndata: [null],\r\ntype:struct_field.type,\r\nnullable:true,\r\n});\r\n\r\nconsole.log('Vector from makeVector:' + JSON.stringify(vec2));\r\nconsole.log('numChildren: ' + vec2.numChildren);\r\nconsole.log('nullCount: ' + vec2.nullCount);\r\nconsole.log('length: ' + vec2.length);\r\n```\r\nResults in (I've removed some fields for brevity)\r\n```javascript\n\r\nBuilder: \\{\"length\":1,\"finished\":false,\"type\":{\"children\":[{\"name\":\"n1\",\"type\":{\"listSize\":2,\"children\":[null]},\"nullable\":true,\"metadata\":{}}]},\"children\":[],\"nullValues\":[null,null],\"stride\":1,\"_nulls\":\\{\"buffer\": ... ,\"stride\":0.125,\"BYTES_PER_ELEMENT\":1,\"length\":1,\"numValid\":0}}\r\nnumChildren: 0\r\nnullCount: 1\r\nlength: 1\r\n\r\nVector from Builder:[]\r\nnumChildren: 1\r\nnullCount: 1\r\nlength: 1\r\n\r\nVector from makeVector:[]\r\nnumChildren: 1\r\nnullCount: 0\r\nlength: 0\n```\r\nI tried to test this within stackblitz, the Project source code [should be available here](https://stackblitz.com/edit/node-kpgovc?file=index.js)",
        "created_at": "2022-02-10T16:23:32.000Z",
        "updated_at": "2022-05-09T08:52:43.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: JavaScript",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-05-09T08:52:43.000Z"
    },
    "comments": [
        {
            "created_at": "2022-02-16T18:30:06.243Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15651?focusedCommentId=17493405) by Alfred Mountfield (alfredm):*\nI believe this is caused by https://issues.apache.org/jira/browse/ARROW-15705"
        },
        {
            "created_at": "2022-04-19T01:18:06.885Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15651?focusedCommentId=17523971) by Dominik Moritz (domoritz):*\nSince https://issues.apache.org/jira/browse/ARROW-15705 if fixed, can we close this? "
        },
        {
            "created_at": "2022-05-09T08:51:58.728Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15651?focusedCommentId=17533702) by Alfred Mountfield (alfredm):*\nI think it's fixed by that, so I'm happy to close it.\r\n\r\nIt still might be worth investigating some of the other nested types for similar behaviour."
        }
    ]
}