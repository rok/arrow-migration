{
    "issue": {
        "title": "[Python] Data type conversion error",
        "body": "***Note**: This issue was originally created as [ARROW-2966](https://issues.apache.org/jira/browse/ARROW-2966). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI have a big pandas dataframe. I try and convert that to a pyarrow table and it fails with a conversion error. Not sure if this is a bug or is expected?\u00a0\r\n\r\nI realize the code below\u00a0showing the error is pretty useless as is. **What can I do to help identify the cause in my pandas dataframe?**\r\n\r\nHere's the error:\r\n\r\n\u00a0\r\n```java\n\r\nIn [17]: pa.Table.from_pandas(df)\r\n---------------------------------------------------------------------------\r\nArrowInvalid Traceback (most recent call last)\r\n<ipython-input-17-6eac5d0eec08> in <module>()\r\n----> 1 pa.Table.from_pandas(df)\r\n\r\ntable.pxi in pyarrow.lib.Table.from_pandas()\r\n\r\n~/.local/share/virtualenvs/iq-si-grade-prediction-zHTZ6n2S/lib/python3.6/site-packages/pyarrow/pandas_compat.py in dataframe_to_arrays(df, schema, preserve_index, nthreads)\r\n375 arrays = list(executor.map(convert_column,\r\n376 columns_to_convert,\r\n--> 377 convert_types))\r\n378 \r\n379 types = [x.type for x in arrays]\r\n\r\n~/anaconda3/lib/python3.6/concurrent/futures/_base.py in result_iterator()\r\n584 # Careful not to keep a reference to the popped future\r\n585 if timeout is None:\r\n--> 586 yield fs.pop().result()\r\n587 else:\r\n588 yield fs.pop().result(end_time - time.time())\r\n\r\n~/anaconda3/lib/python3.6/concurrent/futures/_base.py in result(self, timeout)\r\n423 raise CancelledError()\r\n424 elif self._state == FINISHED:\r\n--> 425 return self.__get_result()\r\n426 \r\n427 self._condition.wait(timeout)\r\n\r\n~/anaconda3/lib/python3.6/concurrent/futures/_base.py in __get_result(self)\r\n382 def __get_result(self):\r\n383 if self._exception:\r\n--> 384 raise self._exception\r\n385 else:\r\n386 return self._result\r\n\r\n~/anaconda3/lib/python3.6/concurrent/futures/thread.py in run(self)\r\n54 \r\n55 try:\r\n---> 56 result = self.fn(*self.args, **self.kwargs)\r\n57 except BaseException as exc:\r\n58 self.future.set_exception(exc)\r\n\r\n~/.local/share/virtualenvs/iq-si-grade-prediction-zHTZ6n2S/lib/python3.6/site-packages/pyarrow/pandas_compat.py in convert_column(col, ty)\r\n364 \r\n365 def convert_column(col, ty):\r\n--> 366 return pa.array(col, from_pandas=True, type=ty)\r\n367 \r\n368 if nthreads == 1:\r\n\r\narray.pxi in pyarrow.lib.array()\r\n\r\nerror.pxi in pyarrow.lib.check_status()\r\n\r\nerror.pxi in pyarrow.lib.check_status()\r\n\r\nArrowInvalid: Error converting from Python objects to Double: Got Python object of type str but can only handle these types: float\r\n\r\nIn [18]: pa.__version__\r\nOut[18]: '0.9.0'\r\n\r\nIn [19]: pd.__version__\r\nOut[19]: '0.23.3'\r\n\r\n```\r\n\u00a0",
        "created_at": "2018-08-03T01:04:52.000Z",
        "updated_at": "2018-08-09T18:10:37.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2018-08-09T18:10:37.000Z"
    },
    "comments": [
        {
            "created_at": "2018-08-03T08:35:38.794Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2966?focusedCommentId=16567962) by Uwe Korn (uwe):*\nYou have a column that contains mixed Python objects of `float` and `str`. There the Python objects of `float` are found first and the column is inferred as `float` but we cannot currently handle the conversion `str` -> `float` automatically at the moment."
        },
        {
            "created_at": "2018-08-03T10:15:58.918Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2966?focusedCommentId=16568054) by Wes McKinney (wesm):*\nI'm in the midst of refactoring this code path in ARROW-2814. I made a note to add more informative error output for this case, to show both the type and the string repr of the invalid value.\r\n\r\nIn the future it would be useful to treat unconvertible values as null: ARROW-2967"
        },
        {
            "created_at": "2018-08-09T18:10:21.460Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2966?focusedCommentId=16575230) by Wes McKinney (wesm):*\n`[~brooksch]` in the next version of pyarrow (this didn't quite make it into 0.10.0), the exception will show you the offending value and its data type"
        },
        {
            "created_at": "2018-08-09T18:10:37.640Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2966?focusedCommentId=16575231) by Wes McKinney (wesm):*\nResolved in ARROW-2814"
        }
    ]
}