{
    "issue": {
        "title": "[Rust] Improve speed of JSON nested list reader",
        "body": "***Note**: This issue was originally created as [ARROW-11002](https://issues.apache.org/jira/browse/ARROW-11002). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe code that reads in nested lists in rust/arrow/src/json/reader.rs does an extra copy (via `Vec::clone`) that caused 20% slowdown in a benchmark compared to not cloning.\r\n\r\nThe goal of this ticket would be to improve the performance of reading JSON in this case, likely by avoiding the clone\r\n\r\nMore details can be found here: \r\n\r\nhttps://github.com/apache/arrow/pull/8938#pullrequestreview-556273641\r\n\r\nAs [~nevi_me] says:\r\n> I suspect the main perf loss is from having to peek into JSON values in order to make the nesting work.\n> By this, I mean that if we have {\"a\": [_, _, _]}, we extract a values into a Vec<Value>, i.e. [_, _, _].\n> By extracting values, we are able to then use the reader to read &[Value] without caring about its key (a).\n> The downside of this approach is that we have to clone values to get Vec<Value>, as I couldn't find an alternative",
        "created_at": "2020-12-21T18:24:05.000Z",
        "updated_at": "2021-04-26T12:43:21.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-04-26T12:43:21.000Z"
    },
    "comments": [
        {
            "created_at": "2021-04-26T12:43:19.439Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11002?focusedCommentId=17332186) by Andrew Lamb (alamb):*\nMigrated to github: https://github.com/apache/arrow-rs/issues/157"
        }
    ]
}