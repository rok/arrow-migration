{
    "issue": {
        "title": "[R] Test GCS auth with gargle/googleAuthR",
        "body": "***Note**: This issue was originally created as [ARROW-16880](https://issues.apache.org/jira/browse/ARROW-16880). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThese are the main packages that let folks worth with Google Cloud from R, so we should make sure we can play nicely with their auth methods, how they cache credentials, etc.",
        "created_at": "2022-06-22T13:09:57.000Z",
        "updated_at": "2022-10-27T17:38:56.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: task"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-07-21T20:12:17.733Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16880?focusedCommentId=17569676) by Will Jones (willjones127):*\nI looked into this a bit, and someone should correct me I'm off base, but I'm not sure integration will be useful except in very specific cases. gargle basically let's you have an OAuth flow in R, where it can request specific scopes. When I tried this with the default app ID, Google came back to me saying it blocked access. So I think in order to use it you need to create your own OAuth app in Google, and hook it up to gargle.\r\n\r\nIt seems the likely auth flows for our users are:\r\n\r\n\u00a01. For analysts in local environments: Use application default credentials (run `{}gcloud auth application-default login{`}) and everything will run fine.\r\n2. For deployed apps (e.g. Shiny): create a service account, download a credentials file onto the server, and provide the path to the downloaded credentials file to `GcsFileSystem$create()`\r\n\r\nI'm still trying to grok GCP's authentication approach, so I welcome any input."
        }
    ]
}