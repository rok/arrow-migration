{
    "issue": {
        "title": "[C++][FlightRPC] arrow-flight-test segfaulting on AppVeyor/Windows",
        "body": "***Note**: This issue was originally created as [ARROW-15987](https://issues.apache.org/jira/browse/ARROW-15987). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nHappens on the development branch. grpc-cpp just upgraded to 1.45.0 in conda-forge, so that may be related\u2026\r\n```\n\r\n49/92 Test #50: arrow-flight-test .........................***Exception: SegFault \u00a02.62 sec\r\nRunning main() from C:\\projects\\arrow\\cpp\\build\\googletest_ep-prefix\\src\\googletest_ep\\googletest\\src\\gtest_main.cc\r\n[==========] Running 82 tests from 17 test suites.\r\n[----------] Global test environment set-up.\r\n[----------] 5 tests from GrpcConnectivityTest\r\n[ RUN \u00a0 \u00a0 \u00a0] GrpcConnectivityTest.GetPort\r\n[ \u00a0 \u00a0 \u00a0 OK ] GrpcConnectivityTest.GetPort (10 ms)\r\n[ RUN \u00a0 \u00a0 \u00a0] GrpcConnectivityTest.BuilderHook\r\n[ \u00a0 \u00a0 \u00a0 OK ] GrpcConnectivityTest.BuilderHook (2 ms)\r\n[ RUN \u00a0 \u00a0 \u00a0] GrpcConnectivityTest.Shutdown\r\n[ \u00a0 \u00a0 \u00a0 OK ] GrpcConnectivityTest.Shutdown (178 ms)\r\n[ RUN \u00a0 \u00a0 \u00a0] GrpcConnectivityTest.ShutdownWithDeadline\r\n[ \u00a0 \u00a0 \u00a0 OK ] GrpcConnectivityTest.ShutdownWithDeadline (86 ms)\r\n[ RUN \u00a0 \u00a0 \u00a0] GrpcConnectivityTest.BrokenConnection\r\n[ \u00a0 \u00a0 \u00a0 OK ] GrpcConnectivityTest.BrokenConnection (2206 ms)\r\n[----------] 5 tests from GrpcConnectivityTest (2484 ms total)\r\n[----------] 17 tests from GrpcDataTest\r\n[ RUN \u00a0 \u00a0 \u00a0] GrpcDataTest.TestDoGetInts\r\nunknown file: error: SEH exception with code 0xc0000005 thrown in TearDown().\r\nunknown file: error: SEH exception with code 0xc0000005 thrown in the test fixture's destructor.\r\n[ \u00a0FAILED \u00a0] GrpcDataTest.TestDoGetInts (65 ms)\r\n[ RUN \u00a0 \u00a0 \u00a0] GrpcDataTest.TestDoGetFloats\r\nunknown file: error: SEH exception with code 0xc0000005 thrown in TearDown().\r\nunknown file: error: SEH exception with code 0xc0000005 thrown in the test fixture's destructor.\r\n[ \u00a0FAILED \u00a0] GrpcDataTest.TestDoGetFloats (14 ms)\r\n[ RUN \u00a0 \u00a0 \u00a0] GrpcDataTest.TestDoGetDicts\r\nunknown file: error: SEH exception with code 0xc0000005 thrown in TearDown().\r\n\u00a0 \u00a0 \u00a0 Start 51: arrow-feather-test\r\n \n```",
        "created_at": "2022-03-21T17:50:32.000Z",
        "updated_at": "2022-03-30T21:05:17.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: FlightRPC",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-03-23T09:56:46.000Z"
    },
    "comments": [
        {
            "created_at": "2022-03-22T13:08:17.385Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15987?focusedCommentId=17510482) by David Li (lidavidm):*\n```\n\r\n[0x0] \u00a0 arrow_flight!grpc_core::OrphanableDelete::operator()<grpc_core::ReclaimerQueue::Handle> + 0x40 \u00a0\u00a0\r\n[0x1] \u00a0 arrow_flight!std::unique_ptr<grpc_core::ReclaimerQueue::Handle,grpc_core::OrphanableDelete>::~unique_ptr<grpc_core::ReclaimerQueue::Handle,grpc_core::OrphanableDelete> + 0x1a \u00a0\u00a0\r\n[0x2] \u00a0 arrow_flight!`eh vector destructor iterator' + 0x5a \u00a0\u00a0\r\n[0x3] \u00a0 arrow_flight!grpc_core::GrpcMemoryAllocatorImpl::Shutdown + 0x16e \u00a0\u00a0\r\n[0x4] \u00a0 arrow_flight!std::allocator<grpc_core::HPackCompressor::SliceIndex::ValueIndex>::deallocate + 0x10c \u00a0\u00a0\r\n[0x5] \u00a0 arrow_flight!grpc_combiner_continue_exec_ctx + 0x19b \u00a0\u00a0\r\n[0x6] \u00a0 arrow_flight!grpc_core::ExecCtx::Flush + 0x72 \u00a0\u00a0\r\n[0x7] \u00a0 arrow_flight!grpc_channel_destroy + 0x196 \u00a0\u00a0\r\n[0x8] \u00a0 arrow_flight!grpc::Channel::~Channel + 0x40 \u00a0\u00a0\r\n[0x9] \u00a0 arrow_flight!std::_Ref_count<grpc::Channel>::_Destroy + 0x17 \u00a0\u00a0\r\n[0xa] \u00a0 arrow_flight!std::_Ref_count_base::_Decref + 0x1e \u00a0\u00a0\r\n[0xb] \u00a0 arrow_flight!std::_Ptr_base<grpc::ChannelInterface>::_Decref + 0x30 \u00a0\u00a0\r\n[0xc] \u00a0 arrow_flight!std::shared_ptr<grpc::ChannelInterface>::{dtor} + 0x30 \u00a0\u00a0\r\n[0xd] \u00a0 arrow_flight!std::default_delete<arrow::flight::protocol::FlightService::Stub>::operator() + 0x30 \u00a0\u00a0\r\n[0xe] \u00a0 arrow_flight!std::unique_ptr<arrow::flight::protocol::FlightService::Stub,std::default_delete<arrow::flight::protocol::FlightService::Stub> >::~unique_ptr<arrow::flight::protocol::FlightService::Stub,std::default_delete<arrow::flight::protocol::FlightService::Stub> > + 0x45 \u00a0\u00a0\r\n[0xf] \u00a0 arrow_flight!arrow::flight::transport::grpc::`anonymous namespace'::GrpcClientImpl::`scalar deleting destructor' + 0x5d \u00a0\u00a0\r\n[0x10] \u00a0 arrow_flight!std::default_delete<arrow::flight::internal::ClientTransport>::operator() + 0xa \u00a0\u00a0\r\n[0x11] \u00a0 arrow_flight!std::unique_ptr<arrow::flight::internal::ClientTransport,std::default_delete<arrow::flight::internal::ClientTransport> >::reset + 0x19 \u00a0\u00a0\r\n[0x12] \u00a0 arrow_flight!arrow::flight::FlightClient::Close + 0x94 \u00a0\u00a0\r\n[0x13] \u00a0 arrow_flight_testing!arrow::flight::DataTest::TearDown + 0x3a \u00a0\u00a0\r\n[0x14] \u00a0 gtest!testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test,void> + 0xc \u00a0\u00a0\r\n[0x15] \u00a0 gtest!testing::internal::HandleExceptionsInMethodIfSupported<testing::Test,void> + 0x46 \u00a0\u00a0\r\n[0x16] \u00a0 gtest!testing::Test::Run + 0xab \u00a0\u00a0\r\n[0x17] \u00a0 gtest!testing::TestInfo::Run + 0xb8 \u00a0\u00a0\r\n[0x18] \u00a0 gtest!testing::TestSuite::Run + 0xc2 \u00a0\u00a0\r\n[0x19] \u00a0 gtest!testing::internal::UnitTestImpl::RunAllTests + 0x37d \u00a0\u00a0\r\n[0x1a] \u00a0 gtest!testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl,bool> + 0xc \u00a0\u00a0\r\n[0x1b] \u00a0 gtest!testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl,bool> + 0x46 \u00a0\u00a0\r\n[0x1c] \u00a0 gtest!testing::UnitTest::Run + 0x13c \u00a0\u00a0\r\n[0x1d] \u00a0 gtest_main!RUN_ALL_TESTS + 0xd \u00a0\u00a0\r\n[0x1e] \u00a0 gtest_main!main + 0x39 \u00a0\u00a0\r\n[0x1f] \u00a0 arrow_flight_test!invoke_main + 0x22 \u00a0\u00a0\r\n[0x20] \u00a0 arrow_flight_test!__scrt_common_main_seh + 0x10c \u00a0\u00a0\r\n[0x21] \u00a0 KERNEL32!BaseThreadInitThunk + 0x10 \u00a0\u00a0\r\n[0x22] \u00a0 ntdll!RtlUserThreadStart + 0x2b \u00a0\u00a0\r\n \n```"
        },
        {
            "created_at": "2022-03-22T13:08:47.597Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15987?focusedCommentId=17510483) by David Li (lidavidm):*\nThis appears to have been introduced here: <https://github.com/grpc/grpc/commit/436bd933f37173efa083cd4fdcdc301b666ce200>\r\n\r\nWe can try rebuilding the conda-forge package immediately prior to this commit and seeing if it's a regression."
        },
        {
            "created_at": "2022-03-22T13:56:41.546Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15987?focusedCommentId=17510503) by David Li (lidavidm):*\nBuilding the commit immediately prior does work: <https://github.com/grpc/grpc/tree/b9b6255993dad2a54669710db46fe0f9650cc9b2>\r\n\r\nThis seems to be a gRPC regression"
        },
        {
            "created_at": "2022-03-22T15:02:10.879Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15987?focusedCommentId=17510549) by David Li (lidavidm):*\nOr rather\u2026it seems the issue also goes away if we place the test code in flight_test instead of test_definitions, I wonder if this is a multiple linking error\u2026\r\n\r\n(EDIT: except no, the traceback above goes into arrow_flight! not arrow_flight_testing!)"
        },
        {
            "created_at": "2022-03-22T15:12:10.697Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15987?focusedCommentId=17510556) by David Li (lidavidm):*\nThat said, it seems to be _some_ sort of linking error, since the exact same code will fail if placed in test_definitions.cc, but will pass if placed in flight_test.cc. (Linking everything statically does not appear to help.)"
        },
        {
            "created_at": "2022-03-22T15:51:36.188Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15987?focusedCommentId=17510711) by David Li (lidavidm):*\n\u2026and now it does fail either way, so I seem to have been mistaken earlier."
        },
        {
            "created_at": "2022-03-22T16:45:04.466Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15987?focusedCommentId=17510747) by Antoine Pitrou (apitrou):*\nDid you report the issue upstream?"
        },
        {
            "created_at": "2022-03-22T16:48:22.107Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15987?focusedCommentId=17510751) by David Li (lidavidm):*\nI intend to report it upstream, but I need to minimize it first (and doing so on a dinky Windows VM is rather annoying)"
        },
        {
            "created_at": "2022-03-22T17:33:31.977Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15987?focusedCommentId=17510786) by David Li (lidavidm):*\nReported upstream at <https://github.com/grpc/grpc/issues/29185>"
        },
        {
            "created_at": "2022-03-23T09:56:46.488Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15987?focusedCommentId=17511157) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 12683\n<https://github.com/apache/arrow/pull/12683>"
        }
    ]
}