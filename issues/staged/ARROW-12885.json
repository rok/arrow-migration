{
    "issue": {
        "title": "[C++] Error: template with C linkage template <class T>",
        "body": "***Note**: This issue was originally created as [ARROW-12885](https://issues.apache.org/jira/browse/ARROW-12885). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen installing arrow on IBM i it fails the install at the thrift dependency install with the following output:\r\n\r\n![2021-05-26 16_31_09-Window.png](https://issues.apache.org/jira/secure/attachment/13025984/2021-05-26+16_31_09-Window.png)",
        "created_at": "2021-05-26T14:51:25.000Z",
        "updated_at": "2022-04-26T17:04:06.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-05-27T00:44:25.492Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12885?focusedCommentId=17352213) by Kouhei Sutou (kou):*\nCould you try installing Apache Arrow C++ directly (without R) and share the command line you used?"
        },
        {
            "created_at": "2021-05-27T07:44:39.115Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12885?focusedCommentId=17352314) by Menno (Siekerman):*\nI tried installing arrow directly calling:\r\n```java\n\r\ngit clone https://github.com/apache/arrow.git\r\ncd arrow/cpp\r\nmkdir release\r\ncd release\r\ncmake ..\r\nmake\r\n```\r\nHowever it even fails earlier that using the R install:\r\n```java\n\r\n-- Building using CMake version: 3.16.0\r\n-- The C compiler identification is GNU 6.3.0\r\n-- The CXX compiler identification is GNU 6.3.0\r\n-- Check for working C compiler: /QOpenSys/pkgs/bin/cc\r\n-- Check for working C compiler: /QOpenSys/pkgs/bin/cc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Check for working CXX compiler: /QOpenSys/pkgs/bin/c++\r\n-- Check for working CXX compiler: /QOpenSys/pkgs/bin/c++ -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\n-- Arrow version: 5.0.0 (full: '5.0.0-SNAPSHOT')\r\n-- Arrow SO version: 500 (full: 500.0.0)\r\n-- clang-tidy not found\r\n-- clang-format not found\r\n-- Could NOT find ClangTools (missing: CLANG_FORMAT_BIN CLANG_TIDY_BIN)\r\n-- infer not found\r\n-- Found Python3: /QOpenSys/pkgs/bin/python3.6 (found version \"3.6.12\") found components: Interpreter\r\n-- Found cpplint executable at /pfmphp/phptestmsi/PFMRBI/arrow/cpp/build-support/cpplint.py\r\n-- System processor: powerpc\r\n-- Performing Test CXX_SUPPORTS_ALTIVEC\r\n-- Performing Test CXX_SUPPORTS_ALTIVEC - Success\r\n-- Arrow build warning level: PRODUCTION\r\nUsing ld linker\r\nConfigured for RELEASE build (set with cmake -DCMAKE_BUILD_TYPE={release,debug,...})\r\n-- Build Type: RELEASE\r\n-- Using AUTO approach to find dependencies\r\n-- ARROW_ABSL_BUILD_VERSION: 0f3bb466b868b523cf1dc9b2aaaed65c77b28862\r\n-- ARROW_AWSSDK_BUILD_VERSION: 1.8.133\r\n-- ARROW_AWS_CHECKSUMS_BUILD_VERSION: v0.1.10\r\n-- ARROW_AWS_C_COMMON_BUILD_VERSION: v0.5.10\r\n-- ARROW_AWS_C_EVENT_STREAM_BUILD_VERSION: v0.1.5\r\n-- ARROW_BOOST_BUILD_VERSION: 1.75.0\r\n-- ARROW_BROTLI_BUILD_VERSION: v1.0.9\r\n-- ARROW_BZIP2_BUILD_VERSION: 1.0.8\r\n-- ARROW_CARES_BUILD_VERSION: 1.17.1\r\n-- ARROW_GBENCHMARK_BUILD_VERSION: v1.5.2\r\n-- ARROW_GFLAGS_BUILD_VERSION: v2.2.2\r\n-- ARROW_GLOG_BUILD_VERSION: v0.4.0\r\n-- ARROW_GRPC_BUILD_VERSION: v1.35.0\r\n-- ARROW_GTEST_BUILD_VERSION: 1.10.0\r\n-- ARROW_JEMALLOC_BUILD_VERSION: 5.2.1\r\n-- ARROW_LZ4_BUILD_VERSION: v1.9.3\r\n-- ARROW_MIMALLOC_BUILD_VERSION: v1.6.4\r\n-- ARROW_ORC_BUILD_VERSION: 1.6.6\r\n-- ARROW_PROTOBUF_BUILD_VERSION: v3.14.0\r\n-- ARROW_RAPIDJSON_BUILD_VERSION: 1a803826f1197b5e30703afe4b9c0e7dd48074f5\r\n-- ARROW_RE2_BUILD_VERSION: 2021-02-02\r\n-- ARROW_SNAPPY_BUILD_VERSION: 1.1.8\r\n-- ARROW_THRIFT_BUILD_VERSION: 0.13.0\r\n-- ARROW_THRIFT_BUILD_MD5_CHECKSUM: 38a27d391a2b03214b444cb13d5664f1\r\n-- ARROW_UTF8PROC_BUILD_VERSION: v2.6.1\r\n-- ARROW_XSIMD_BUILD_VERSION: e9234cd6e6f4428fc260073b2c34ffe86fda1f34\r\n-- ARROW_ZLIB_BUILD_VERSION: 1.2.11\r\n-- ARROW_ZSTD_BUILD_VERSION: v1.4.8\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed\r\n-- Check if compiler accepts -pthread\r\n-- Check if compiler accepts -pthread - yes\r\n-- Found Threads: TRUE\r\n-- Looking for __SIZEOF_INT128__\r\n-- Looking for __SIZEOF_INT128__ - found\r\n-- Building without OpenSSL support. Minimum OpenSSL version 1.0.2 required.\r\n-- Building (vendored) jemalloc from source\r\n-- Building xsimd from source\r\n-- Found hdfs.h at: /pfmphp/phptestmsi/PFMRBI/arrow/cpp/thirdparty/hadoop/include/hdfs.h\r\n-- All bundled static libraries: jemalloc::jemalloc\r\n-- CMAKE_C_FLAGS:  -O3 -DNDEBUG  -Wall -fno-semantic-interposition -maltivec\r\n-- CMAKE_CXX_FLAGS:   -fdiagnostics-color=always -O3 -DNDEBUG  -Wall -fno-semantic-interposition -maltivec\r\n-- Looking for backtrace\r\n-- Looking for backtrace - not found\r\n-- Could NOT find Backtrace (missing: Backtrace_LIBRARY Backtrace_INCLUDE_DIR)\r\n-- Creating bundled static library target arrow_bundled_dependencies at /pfmphp/phptestmsi/PFMRBI/arrow/cpp/build/release/libarrow_bundled_dependencies.a\r\n-- ---------------------------------------------------------------------\r\n-- Arrow version:                                 5.0.0-SNAPSHOT\r\n--\r\n-- Build configuration summary:\r\n--   Generator: Unix Makefiles\r\n--   Build type: RELEASE\r\n--   Source directory: /pfmphp/phptestmsi/PFMRBI/arrow/cpp\r\n--   Install prefix: /usr/local\r\n--\r\n-- Compile and link options:\r\n--\r\n--   ARROW_CXXFLAGS=\"\" [default=\"\"]\r\n--       Compiler flags to append when compiling Arrow\r\n--   ARROW_BUILD_STATIC=ON [default=ON]\r\n--       Build static libraries\r\n--   ARROW_BUILD_SHARED=ON [default=ON]\r\n--       Build shared libraries\r\n--   ARROW_PACKAGE_KIND=\"\" [default=\"\"]\r\n--       Arbitrary string that identifies the kind of package\r\n--       (for informational purposes)\r\n--   ARROW_GIT_ID=7707d333fb09fd0019a9bf03047147e05e463766 [default=\"\"]\r\n--       The Arrow git commit id (if any)\r\n--   ARROW_GIT_DESCRIPTION=apache-arrow-3.0.0-888-g7707d333f [default=\"\"]\r\n--       The Arrow git commit description (if any)\r\n--   ARROW_NO_DEPRECATED_API=OFF [default=OFF]\r\n--       Exclude deprecated APIs from build\r\n--   ARROW_USE_CCACHE=ON [default=ON]\r\n--       Use ccache when compiling (if available)\r\n--   ARROW_USE_LD_GOLD=OFF [default=OFF]\r\n--       Use ld.gold for linking on Linux (if available)\r\n--   ARROW_USE_PRECOMPILED_HEADERS=OFF [default=OFF]\r\n--       Use precompiled headers when compiling\r\n--   ARROW_SIMD_LEVEL=SSE4_2 [default=NONE|SSE4_2|AVX2|AVX512]\r\n--       Compile-time SIMD optimization level\r\n--   ARROW_RUNTIME_SIMD_LEVEL=MAX [default=NONE|SSE4_2|AVX2|AVX512|MAX]\r\n--       Max runtime SIMD optimization level\r\n--   ARROW_ARMV8_ARCH=armv8-a [default=armv8-a|armv8-a+crc+crypto]\r\n--       Arm64 arch and extensions\r\n--   ARROW_ALTIVEC=ON [default=ON]\r\n--       Build with Altivec if compiler has support\r\n--   ARROW_RPATH_ORIGIN=OFF [default=OFF]\r\n--       Build Arrow libraries with RATH set to $ORIGIN\r\n--   ARROW_INSTALL_NAME_RPATH=ON [default=ON]\r\n--       Build Arrow libraries with install_name set to @rpath\r\n--   ARROW_GGDB_DEBUG=ON [default=ON]\r\n--       Pass -ggdb flag to debug builds\r\n--\r\n-- Test and benchmark options:\r\n--\r\n--   ARROW_BUILD_EXAMPLES=OFF [default=OFF]\r\n--       Build the Arrow examples\r\n--   ARROW_BUILD_TESTS=OFF [default=OFF]\r\n--       Build the Arrow googletest unit tests\r\n--   ARROW_ENABLE_TIMING_TESTS=ON [default=ON]\r\n--       Enable timing-sensitive tests\r\n--   ARROW_BUILD_INTEGRATION=OFF [default=OFF]\r\n--       Build the Arrow integration test executables\r\n--   ARROW_BUILD_BENCHMARKS=OFF [default=OFF]\r\n--       Build the Arrow micro benchmarks\r\n--   ARROW_BUILD_BENCHMARKS_REFERENCE=OFF [default=OFF]\r\n--       Build the Arrow micro reference benchmarks\r\n--   ARROW_TEST_LINKAGE=shared [default=shared|static]\r\n--       Linkage of Arrow libraries with unit tests executables.\r\n--   ARROW_FUZZING=OFF [default=OFF]\r\n--       Build Arrow Fuzzing executables\r\n--   ARROW_LARGE_MEMORY_TESTS=OFF [default=OFF]\r\n--       Enable unit tests which use large memory\r\n--\r\n-- Lint options:\r\n--\r\n--   ARROW_ONLY_LINT=OFF [default=OFF]\r\n--       Only define the lint and check-format targets\r\n--   ARROW_VERBOSE_LINT=OFF [default=OFF]\r\n--       If off, 'quiet' flags will be passed to linting tools\r\n--   ARROW_GENERATE_COVERAGE=OFF [default=OFF]\r\n--       Build with C++ code coverage enabled\r\n--\r\n-- Checks options:\r\n--\r\n--   ARROW_TEST_MEMCHECK=OFF [default=OFF]\r\n--       Run the test suite using valgrind --tool=memcheck\r\n--   ARROW_USE_ASAN=OFF [default=OFF]\r\n--       Enable Address Sanitizer checks\r\n--   ARROW_USE_TSAN=OFF [default=OFF]\r\n--       Enable Thread Sanitizer checks\r\n--   ARROW_USE_UBSAN=OFF [default=OFF]\r\n--       Enable Undefined Behavior sanitizer checks\r\n--\r\n-- Project component options:\r\n--\r\n--   ARROW_BUILD_UTILITIES=OFF [default=OFF]\r\n--       Build Arrow commandline utilities\r\n--   ARROW_COMPUTE=OFF [default=OFF]\r\n--       Build the Arrow Compute Modules\r\n--   ARROW_CSV=OFF [default=OFF]\r\n--       Build the Arrow CSV Parser Module\r\n--   ARROW_CUDA=OFF [default=OFF]\r\n--       Build the Arrow CUDA extensions (requires CUDA toolkit)\r\n--   ARROW_DATASET=OFF [default=OFF]\r\n--       Build the Arrow Dataset Modules\r\n--   ARROW_FILESYSTEM=OFF [default=OFF]\r\n--       Build the Arrow Filesystem Layer\r\n--   ARROW_FLIGHT=OFF [default=OFF]\r\n--       Build the Arrow Flight RPC System (requires GRPC, Protocol Buffers)\r\n--   ARROW_GANDIVA=OFF [default=OFF]\r\n--       Build the Gandiva libraries\r\n--   ARROW_HDFS=OFF [default=OFF]\r\n--       Build the Arrow HDFS bridge\r\n--   ARROW_HIVESERVER2=OFF [default=OFF]\r\n--       Build the HiveServer2 client and Arrow adapter\r\n--   ARROW_IPC=ON [default=ON]\r\n--       Build the Arrow IPC extensions\r\n--   ARROW_JEMALLOC=ON [default=ON]\r\n--       Build the Arrow jemalloc-based allocator\r\n--   ARROW_JNI=OFF [default=OFF]\r\n--       Build the Arrow JNI lib\r\n--   ARROW_JSON=OFF [default=OFF]\r\n--       Build Arrow with JSON support (requires RapidJSON)\r\n--   ARROW_MIMALLOC=OFF [default=OFF]\r\n--       Build the Arrow mimalloc-based allocator\r\n--   ARROW_PARQUET=OFF [default=OFF]\r\n--       Build the Parquet libraries\r\n--   ARROW_ORC=OFF [default=OFF]\r\n--       Build the Arrow ORC adapter\r\n--   ARROW_PLASMA=OFF [default=OFF]\r\n--       Build the plasma object store along with Arrow\r\n--   ARROW_PLASMA_JAVA_CLIENT=OFF [default=OFF]\r\n--       Build the plasma object store java client\r\n--   ARROW_PYTHON=OFF [default=OFF]\r\n--       Build the Arrow CPython extensions\r\n--   ARROW_S3=OFF [default=OFF]\r\n--       Build Arrow with S3 support (requires the AWS SDK for C++)\r\n--   ARROW_TENSORFLOW=OFF [default=OFF]\r\n--       Build Arrow with TensorFlow support enabled\r\n--   ARROW_TESTING=OFF [default=OFF]\r\n--       Build the Arrow testing libraries\r\n--\r\n-- Thirdparty toolchain options:\r\n--\r\n--   ARROW_DEPENDENCY_SOURCE=AUTO [default=AUTO|BUNDLED|SYSTEM|CONDA|VCPKG|BREW]\r\n--       Method to use for acquiring arrow's build dependencies\r\n--   ARROW_VERBOSE_THIRDPARTY_BUILD=OFF [default=OFF]\r\n--       Show output from ExternalProjects rather than just logging to files\r\n--   ARROW_DEPENDENCY_USE_SHARED=ON [default=ON]\r\n--       Link to shared libraries\r\n--   ARROW_BOOST_USE_SHARED=ON [default=ON]\r\n--       Rely on boost shared libraries where relevant\r\n--   ARROW_BROTLI_USE_SHARED=ON [default=ON]\r\n--       Rely on Brotli shared libraries where relevant\r\n--   ARROW_BZ2_USE_SHARED=ON [default=ON]\r\n--       Rely on Bz2 shared libraries where relevant\r\n--   ARROW_GFLAGS_USE_SHARED=ON [default=ON]\r\n--       Rely on GFlags shared libraries where relevant\r\n--   ARROW_GRPC_USE_SHARED=ON [default=ON]\r\n--       Rely on gRPC shared libraries where relevant\r\n--   ARROW_LZ4_USE_SHARED=ON [default=ON]\r\n--       Rely on lz4 shared libraries where relevant\r\n--   ARROW_OPENSSL_USE_SHARED=ON [default=ON]\r\n--       Rely on OpenSSL shared libraries where relevant\r\n--   ARROW_PROTOBUF_USE_SHARED=ON [default=ON]\r\n--       Rely on Protocol Buffers shared libraries where relevant\r\n--   ARROW_THRIFT_USE_SHARED=ON [default=ON]\r\n--       Rely on thrift shared libraries where relevant\r\n--   ARROW_UTF8PROC_USE_SHARED=ON [default=ON]\r\n--       Rely on utf8proc shared libraries where relevant\r\n--   ARROW_SNAPPY_USE_SHARED=ON [default=ON]\r\n--       Rely on snappy shared libraries where relevant\r\n--   ARROW_UTF8PROC_USE_SHARED=ON [default=ON]\r\n--       Rely on utf8proc shared libraries where relevant\r\n--   ARROW_ZSTD_USE_SHARED=ON [default=ON]\r\n--       Rely on zstd shared libraries where relevant\r\n--   ARROW_USE_GLOG=OFF [default=OFF]\r\n--       Build libraries with glog support for pluggable logging\r\n--   ARROW_WITH_BACKTRACE=ON [default=ON]\r\n--       Build with backtrace support\r\n--   ARROW_WITH_BROTLI=OFF [default=OFF]\r\n--       Build with Brotli compression\r\n--   ARROW_WITH_BZ2=OFF [default=OFF]\r\n--       Build with BZ2 compression\r\n--   ARROW_WITH_LZ4=OFF [default=OFF]\r\n--       Build with lz4 compression\r\n--   ARROW_WITH_SNAPPY=OFF [default=OFF]\r\n--       Build with Snappy compression\r\n--   ARROW_WITH_ZLIB=OFF [default=OFF]\r\n--       Build with zlib compression\r\n--   ARROW_WITH_ZSTD=OFF [default=OFF]\r\n--       Build with zstd compression\r\n--   ARROW_WITH_UTF8PROC=OFF [default=ON]\r\n--       Build with support for Unicode properties using the utf8proc library\r\n--       (only used if ARROW_COMPUTE is ON)\r\n--   ARROW_WITH_RE2=OFF [default=ON]\r\n--       Build with support for regular expressions using the re2 library\r\n--       (only used if ARROW_COMPUTE or ARROW_GANDIVA is ON)\r\n--\r\n-- Parquet options:\r\n--\r\n--   PARQUET_MINIMAL_DEPENDENCY=OFF [default=OFF]\r\n--       Depend only on Thirdparty headers to build libparquet.\r\n--       Always OFF if building binaries\r\n--   PARQUET_BUILD_EXECUTABLES=OFF [default=OFF]\r\n--       Build the Parquet executable CLI tools. Requires static libraries to be built.\r\n--   PARQUET_BUILD_EXAMPLES=OFF [default=OFF]\r\n--       Build the Parquet examples. Requires static libraries to be built.\r\n--   PARQUET_REQUIRE_ENCRYPTION=OFF [default=OFF]\r\n--       Build support for encryption. Fail if OpenSSL is not found\r\n--\r\n-- Gandiva options:\r\n--\r\n--   ARROW_GANDIVA_JAVA=OFF [default=OFF]\r\n--       Build the Gandiva JNI wrappers\r\n--   ARROW_GANDIVA_STATIC_LIBSTDCPP=OFF [default=OFF]\r\n--       Include -static-libstdc++ -static-libgcc when linking with\r\n--       Gandiva static libraries\r\n--   ARROW_GANDIVA_PC_CXX_FLAGS=\"\" [default=\"\"]\r\n--       Compiler flags to append when pre-compiling Gandiva operations\r\n--\r\n-- Advanced developer options:\r\n--\r\n--   ARROW_EXTRA_ERROR_CONTEXT=OFF [default=OFF]\r\n--       Compile with extra error context (line numbers, code)\r\n--   ARROW_OPTIONAL_INSTALL=OFF [default=OFF]\r\n--       If enabled install ONLY targets that have already been built. Please be\r\n--       advised that if this is enabled 'install' will fail silently on components\r\n--       that have not been built\r\n--   Outputting build configuration summary to /pfmphp/phptestmsi/PFMRBI/arrow/cpp/cmake_summary.json\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /pfmphp/phptestmsi/PFMRBI/arrow/cpp\r\nScanning dependencies of target jemalloc_ep\r\n[  1%] Performing download step (download, verify and extract) for 'jemalloc_ep'\r\nCMake Error at jemalloc_ep-stamp/jemalloc_ep-download-RELEASE.cmake:37 (message):\r\n  Command failed: 1   '/QOpenSys/pkgs/bin/cmake' '-Dmake=' '-Dconfig=' '-P' '/pfmphp/phptestmsi/PFMRBI/arrow/cpp/jemalloc_ep-prefix/src/jemalloc_ep-stamp/jemalloc_ep-download-RELEASE-impl.cmake'  See also    /pfmphp/phptestmsi/PFMRBI/arrow/cpp/jemalloc_ep-prefix/src/jemalloc_ep-stamp/jemalloc_ep-download-*.log\r\n-- stdout output is:\r\n-- File already exists but no hash specified (use URL_HASH):\r\n  file='/pfmphp/phptestmsi/PFMRBI/arrow/cpp/jemalloc_ep-prefix/src/jemalloc-5.2.1.tar.bz2'\r\nOld file will be removed and new file downloaded from URL.\r\n-- Downloading...\r\n   dst='/pfmphp/phptestmsi/PFMRBI/arrow/cpp/jemalloc_ep-prefix/src/jemalloc-5.2.1.tar.bz2'\r\n   timeout='none'\r\n-- Using src='https://github.com/jemalloc/jemalloc/releases/download/5.2.1/jemalloc-5.2.1.tar.bz2'\r\n-- [download 62% complete]\r\n-- [download 100% complete]\r\n-- [download 0% complete]\r\n-- [download 1% complete]\r\n-- [download 2% complete]\r\n-- [download 3% complete]\r\n-- [download 4% complete]\r\n-- [download 5% complete]\r\n-- [download 6% complete]\r\n-- [download 7% complete]\r\n-- [download 8% complete]\r\n-- [download 9% complete]\r\n-- [download 10% complete]\r\n-- [download 11% complete]\r\n-- [download 12% complete]\r\n-- [download 13% complete]\r\n-- [download 14% complete]\r\n-- [download 15% complete]\r\n-- [download 16% complete]\r\n-- [download 17% complete]\r\n-- [download 18% complete]\r\n-- [download 19% complete]\r\n-- [download 20% complete]\r\n-- [download 21% complete]\r\n-- [download 22% complete]\r\n-- [download 23% complete]\r\n-- [download 24% complete]\r\n-- [download 25% complete]\r\n-- [download 26% complete]\r\n-- [download 27% complete]\r\n-- [download 28% complete]\r\n-- [download 29% complete]\r\n-- [download 30% complete]\r\n-- [download 31% complete]\r\n-- [download 32% complete]\r\n-- [download 33% complete]\r\n-- [download 34% complete]\r\n-- [download 35% complete]\r\n-- [download 36% complete]\r\n-- [download 37% complete]\r\n-- [download 38% complete]\r\n-- [download 40% complete]\r\n-- [download 43% complete]\r\n-- [download 45% complete]\r\n-- [download 48% complete]\r\n-- [download 51% complete]\r\n-- [download 54% complete]\r\n-- [download 57% complete]\r\n-- [download 60% complete]\r\n-- [download 63% complete]\r\n-- [download 66% complete]\r\n-- [download 69% complete]\r\n-- [download 71% complete]\r\n-- [download 72% complete]\r\n-- [download 75% complete]\r\n-- [download 78% complete]\r\n-- [download 79% complete]\r\n-- [download 82% complete]\r\n-- [download 85% complete]\r\n-- [download 88% complete]\r\n-- [download 91% complete]\r\n-- [download 94% complete]\r\n-- [download 97% complete]\r\n-- [download 100% complete]\r\n-- Downloading... done\r\n-- extracting...\r\n     src='/pfmphp/phptestmsi/PFMRBI/arrow/cpp/jemalloc_ep-prefix/src/jemalloc-5.2.1.tar.bz2'\r\n     dst='/pfmphp/phptestmsi/PFMRBI/arrow/cpp/jemalloc_ep-prefix/src/jemalloc_ep'\r\n-- extracting... [tar xfz]\r\n-- extracting... [error clean up]-- stderr output is:\r\nCMake Error: Problem with archive_read_open_file(): Child process exited with status 127\r\nCMake Error: Problem extracting tar: /pfmphp/phptestmsi/PFMRBI/arrow/cpp/jemalloc_ep-prefix/src/jemalloc-5.2.1.tar.bz2\r\nCMake Error at jemalloc_ep-stamp/extract-jemalloc_ep.cmake:33 (message):\r\n  error: extract of\r\n  '/pfmphp/phptestmsi/PFMRBI/arrow/cpp/jemalloc_ep-prefix/src/jemalloc-5.2.1.tar.bz2'\r\n  failed\r\nCMake Error at jemalloc_ep-stamp/jemalloc_ep-download-RELEASE-impl.cmake:29 (message):\r\n  Command failed (1):   '/QOpenSys/pkgs/bin/cmake' '-P' '/pfmphp/phptestmsi/PFMRBI/arrow/cpp/jemalloc_ep-prefix/src/jemalloc_ep-stamp/extract-jemalloc_ep.cmake'CMake Error at jemalloc_ep-stamp/jemalloc_ep-download-RELEASE.cmake:47 (message):\r\n  Stopping after outputting logs.\r\nmake[2]: *** [CMakeFiles/jemalloc_ep.dir/build.make:91: jemalloc_ep-prefix/src/jemalloc_ep-stamp/jemalloc_ep-download] Error 1\r\nmake[1]: *** [CMakeFiles/Makefile2:439: CMakeFiles/jemalloc_ep.dir/all] Error 2\r\nmake: *** [Makefile:141: all] Error 2\r\n\r\n```"
        },
        {
            "created_at": "2021-05-27T07:50:03.604Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12885?focusedCommentId=17352317) by Menno (Siekerman):*\nInstalling with R I run:\r\n```java\n\r\ncd arrow/r\r\nR CMD INSTALL .\r\n```\r\nAnd the full output is:\r\n```java\n\r\n* installing to library '/QOpenSys/pkgs/lib/R/library'\r\n* installing *source* package 'arrow' ...\r\n*** Generating code with data-raw/codegen.R\r\nError in library(decor) : there is no package called 'decor'\r\nCalls: suppressPackageStartupMessages -> withCallingHandlers -> library\r\nExecution halted\r\n*** Found local C++ source\r\n*** Building C++ libraries\r\n*** Building with MAKEFLAGS= -jNA\r\n**** arrow with SOURCE_DIR=\"../cpp\" BUILD_DIR=\"/tmp/RtmpCyabIa/file1b6aaa1848\" DEST_DIR=\"libarrow/arrow-4.0.0.9000\" CMAKE=\"/QOpenSys/pkgs/bin/cmake\" CC=\"gcc\" CXX=\"g++ -std=gnu++11\" LDFLAGS=\"-pthread -liconv -Wl,-brtl,-liconv,-bbigtoc,-bnoexpall,-blibpath:/QOpenSys/pkgs/lib:/QOpenSys/pkgs/lib/R/lib:/QOpenSys/usr/lib\" ARROW_S3=OFF ARROW_MIMALLOC=OFF\r\n++ pwd\r\n+ : /pfmphp/phptestmsi/PFMRBI/arrow/r\r\n+ : ../cpp\r\n+ : /tmp/RtmpCyabIa/file1b6aaa1848\r\n+ : libarrow/arrow-4.0.0.9000\r\n+ : /QOpenSys/pkgs/bin/cmake\r\n++ cd ../cpp\r\n++ pwd\r\n+ SOURCE_DIR=/pfmphp/phptestmsi/PFMRBI/arrow/cpp\r\n++ mkdir -p libarrow/arrow-4.0.0.9000\r\n++ cd libarrow/arrow-4.0.0.9000\r\n++ pwd\r\n+ DEST_DIR=/pfmphp/phptestmsi/PFMRBI/arrow/r/libarrow/arrow-4.0.0.9000\r\n++ echo\r\n++ tr '[:upper:]' '[:lower:]'\r\n+ LIBARROW_MINIMAL=\r\n+ '[' '' = false ']'\r\n+ ARROW_DEFAULT_PARAM=OFF\r\n+ mkdir -p /tmp/RtmpCyabIa/file1b6aaa1848\r\n+ pushd /tmp/RtmpCyabIa/file1b6aaa1848\r\n/tmp/RtmpCyabIa/file1b6aaa1848 /pfmphp/phptestmsi/PFMRBI/arrow/r\r\n+ /QOpenSys/pkgs/bin/cmake -DARROW_BOOST_USE_SHARED=OFF -DARROW_BUILD_TESTS=OFF -DARROW_BUILD_SHARED=OFF -DARROW_BUILD_STATIC=ON -DARROW_COMPUTE=ON -DARROW_CSV=ON -DARROW_DATASET=ON -DARROW_DEPENDENCY_SOURCE=BUNDLED -DARROW_FILESYSTEM=ON -DARROW_JEMALLOC=OFF -DARROW_MIMALLOC=OFF -DARROW_JSON=ON -DARROW_PARQUET=ON -DARROW_S3=OFF -DARROW_WITH_BROTLI=OFF -DARROW_WITH_BZ2=OFF -DARROW_WITH_LZ4=OFF -DARROW_WITH_RE2=ON -DARROW_WITH_SNAPPY=OFF -DARROW_WITH_UTF8PROC=ON -DARROW_WITH_ZLIB=OFF -DARROW_WITH_ZSTD=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_INSTALL_PREFIX=/pfmphp/phptestmsi/PFMRBI/arrow/r/libarrow/arrow-4.0.0.9000 -DCMAKE_EXPORT_NO_PACKAGE_REGISTRY=ON -DCMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY=ON -DCMAKE_UNITY_BUILD=ON -G 'Unix Makefiles' /pfmphp/phptestmsi/PFMRBI/arrow/cpp\r\n-- Building using CMake version: 3.16.0\r\n-- The C compiler identification is GNU 6.3.0\r\n-- The CXX compiler identification is GNU 6.3.0\r\n-- Check for working C compiler: /QOpenSys/pkgs/bin/gcc\r\n-- Check for working C compiler: /QOpenSys/pkgs/bin/gcc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Check for working CXX compiler: /QOpenSys/pkgs/bin/g++\r\n-- Check for working CXX compiler: /QOpenSys/pkgs/bin/g++ -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\n-- Arrow version: 5.0.0 (full: '5.0.0-SNAPSHOT')\r\n-- Arrow SO version: 500 (full: 500.0.0)\r\n-- clang-tidy not found\r\n-- clang-format not found\r\n-- Could NOT find ClangTools (missing: CLANG_FORMAT_BIN CLANG_TIDY_BIN)\r\n-- infer not found\r\n-- Found Python3: /QOpenSys/pkgs/bin/python3.6 (found version \"3.6.12\") found components: Interpreter\r\n-- Found cpplint executable at /pfmphp/phptestmsi/PFMRBI/arrow/cpp/build-support/cpplint.py\r\n-- System processor: powerpc\r\n-- Performing Test CXX_SUPPORTS_ALTIVEC\r\n-- Performing Test CXX_SUPPORTS_ALTIVEC - Success\r\n-- Arrow build warning level: PRODUCTION\r\nUsing ld linker\r\nConfigured for RELEASE build (set with cmake -DCMAKE_BUILD_TYPE={release,debug,...})\r\n-- Build Type: RELEASE\r\n-- Using BUNDLED approach to find dependencies\r\n-- ARROW_ABSL_BUILD_VERSION: 0f3bb466b868b523cf1dc9b2aaaed65c77b28862\r\n-- ARROW_AWSSDK_BUILD_VERSION: 1.8.133\r\n-- ARROW_AWS_CHECKSUMS_BUILD_VERSION: v0.1.10\r\n-- ARROW_AWS_C_COMMON_BUILD_VERSION: v0.5.10\r\n-- ARROW_AWS_C_EVENT_STREAM_BUILD_VERSION: v0.1.5\r\n-- ARROW_BOOST_BUILD_VERSION: 1.75.0\r\n-- ARROW_BROTLI_BUILD_VERSION: v1.0.9\r\n-- ARROW_BZIP2_BUILD_VERSION: 1.0.8\r\n-- ARROW_CARES_BUILD_VERSION: 1.17.1\r\n-- ARROW_GBENCHMARK_BUILD_VERSION: v1.5.2\r\n-- ARROW_GFLAGS_BUILD_VERSION: v2.2.2\r\n-- ARROW_GLOG_BUILD_VERSION: v0.4.0\r\n-- ARROW_GRPC_BUILD_VERSION: v1.35.0\r\n-- ARROW_GTEST_BUILD_VERSION: 1.10.0\r\n-- ARROW_JEMALLOC_BUILD_VERSION: 5.2.1\r\n-- ARROW_LZ4_BUILD_VERSION: v1.9.3\r\n-- ARROW_MIMALLOC_BUILD_VERSION: v1.6.4\r\n-- ARROW_ORC_BUILD_VERSION: 1.6.6\r\n-- ARROW_PROTOBUF_BUILD_VERSION: v3.14.0\r\n-- ARROW_RAPIDJSON_BUILD_VERSION: 1a803826f1197b5e30703afe4b9c0e7dd48074f5\r\n-- ARROW_RE2_BUILD_VERSION: 2021-02-02\r\n-- ARROW_SNAPPY_BUILD_VERSION: 1.1.8\r\n-- ARROW_THRIFT_BUILD_VERSION: 0.13.0\r\n-- ARROW_THRIFT_BUILD_MD5_CHECKSUM: 38a27d391a2b03214b444cb13d5664f1\r\n-- ARROW_UTF8PROC_BUILD_VERSION: v2.6.1\r\n-- ARROW_XSIMD_BUILD_VERSION: e9234cd6e6f4428fc260073b2c34ffe86fda1f34\r\n-- ARROW_ZLIB_BUILD_VERSION: 1.2.11\r\n-- ARROW_ZSTD_BUILD_VERSION: v1.4.8\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success\r\n-- Found Threads: TRUE\r\n-- Looking for __SIZEOF_INT128__\r\n-- Looking for __SIZEOF_INT128__ - found\r\n-- Boost include dir: /tmp/RtmpCyabIa/file1b6aaa1848/boost_ep-prefix/src/boost_ep\r\n-- Boost libraries: boost_system_static;boost_filesystem_static\r\n-- Building without OpenSSL support. Minimum OpenSSL version 1.0.2 required.\r\nBuilding Apache Thrift from source\r\n-- Building RapidJSON from source\r\n-- Building xsimd from source\r\n-- Building RE2 from source\r\n-- Building utf8proc from source\r\n-- Found hdfs.h at: /pfmphp/phptestmsi/PFMRBI/arrow/cpp/thirdparty/hadoop/include/hdfs.h\r\n-- All bundled static libraries: thrift::thrift;re2::re2;utf8proc::utf8proc\r\n-- CMAKE_C_FLAGS:  -O3 -DNDEBUG  -Wall -fno-semantic-interposition -maltivec\r\n-- CMAKE_CXX_FLAGS:  -Wno-subobject-linkage  -fdiagnostics-color=always -O3 -DNDEBUG  -Wall -fno-semantic-interposition -maltivec\r\n-- Looking for backtrace\r\n-- Looking for backtrace - not found\r\n-- Could NOT find Backtrace (missing: Backtrace_LIBRARY Backtrace_INCLUDE_DIR)\r\n-- Creating bundled static library target arrow_bundled_dependencies at /tmp/RtmpCyabIa/file1b6aaa1848/release/libarrow_bundled_dependencies.a\r\n-- ---------------------------------------------------------------------\r\n-- Arrow version:                                 5.0.0-SNAPSHOT\r\n--\r\n-- Build configuration summary:\r\n--   Generator: Unix Makefiles\r\n--   Build type: RELEASE\r\n--   Source directory: /pfmphp/phptestmsi/PFMRBI/arrow/cpp\r\n--   Install prefix: /pfmphp/phptestmsi/PFMRBI/arrow/r/libarrow/arrow-4.0.0.9000\r\n--\r\n-- Compile and link options:\r\n--\r\n--   ARROW_CXXFLAGS=\"\" [default=\"\"]\r\n--       Compiler flags to append when compiling Arrow\r\n--   ARROW_BUILD_STATIC=ON [default=ON]\r\n--       Build static libraries\r\n--   ARROW_BUILD_SHARED=OFF [default=ON]\r\n--       Build shared libraries\r\n--   ARROW_PACKAGE_KIND=\"\" [default=\"\"]\r\n--       Arbitrary string that identifies the kind of package\r\n--       (for informational purposes)\r\n--   ARROW_GIT_ID=7707d333fb09fd0019a9bf03047147e05e463766 [default=\"\"]\r\n--       The Arrow git commit id (if any)\r\n--   ARROW_GIT_DESCRIPTION=apache-arrow-3.0.0-888-g7707d333f [default=\"\"]\r\n--       The Arrow git commit description (if any)\r\n--   ARROW_NO_DEPRECATED_API=OFF [default=OFF]\r\n--       Exclude deprecated APIs from build\r\n--   ARROW_USE_CCACHE=ON [default=ON]\r\n--       Use ccache when compiling (if available)\r\n--   ARROW_USE_LD_GOLD=OFF [default=OFF]\r\n--       Use ld.gold for linking on Linux (if available)\r\n--   ARROW_USE_PRECOMPILED_HEADERS=OFF [default=OFF]\r\n--       Use precompiled headers when compiling\r\n--   ARROW_SIMD_LEVEL=SSE4_2 [default=NONE|SSE4_2|AVX2|AVX512]\r\n--       Compile-time SIMD optimization level\r\n--   ARROW_RUNTIME_SIMD_LEVEL=MAX [default=NONE|SSE4_2|AVX2|AVX512|MAX]\r\n--       Max runtime SIMD optimization level\r\n--   ARROW_ARMV8_ARCH=armv8-a [default=armv8-a|armv8-a+crc+crypto]\r\n--       Arm64 arch and extensions\r\n--   ARROW_ALTIVEC=ON [default=ON]\r\n--       Build with Altivec if compiler has support\r\n--   ARROW_RPATH_ORIGIN=OFF [default=OFF]\r\n--       Build Arrow libraries with RATH set to $ORIGIN\r\n--   ARROW_INSTALL_NAME_RPATH=ON [default=ON]\r\n--       Build Arrow libraries with install_name set to @rpath\r\n--   ARROW_GGDB_DEBUG=ON [default=ON]\r\n--       Pass -ggdb flag to debug builds\r\n--\r\n-- Test and benchmark options:\r\n--\r\n--   ARROW_BUILD_EXAMPLES=OFF [default=OFF]\r\n--       Build the Arrow examples\r\n--   ARROW_BUILD_TESTS=OFF [default=OFF]\r\n--       Build the Arrow googletest unit tests\r\n--   ARROW_ENABLE_TIMING_TESTS=ON [default=ON]\r\n--       Enable timing-sensitive tests\r\n--   ARROW_BUILD_INTEGRATION=OFF [default=OFF]\r\n--       Build the Arrow integration test executables\r\n--   ARROW_BUILD_BENCHMARKS=OFF [default=OFF]\r\n--       Build the Arrow micro benchmarks\r\n--   ARROW_BUILD_BENCHMARKS_REFERENCE=OFF [default=OFF]\r\n--       Build the Arrow micro reference benchmarks\r\n--   ARROW_TEST_LINKAGE=static [default=shared|static]\r\n--       Linkage of Arrow libraries with unit tests executables.\r\n--   ARROW_FUZZING=OFF [default=OFF]\r\n--       Build Arrow Fuzzing executables\r\n--   ARROW_LARGE_MEMORY_TESTS=OFF [default=OFF]\r\n--       Enable unit tests which use large memory\r\n--\r\n-- Lint options:\r\n--\r\n--   ARROW_ONLY_LINT=OFF [default=OFF]\r\n--       Only define the lint and check-format targets\r\n--   ARROW_VERBOSE_LINT=OFF [default=OFF]\r\n--       If off, 'quiet' flags will be passed to linting tools\r\n--   ARROW_GENERATE_COVERAGE=OFF [default=OFF]\r\n--       Build with C++ code coverage enabled\r\n--\r\n-- Checks options:\r\n--\r\n--   ARROW_TEST_MEMCHECK=OFF [default=OFF]\r\n--       Run the test suite using valgrind --tool=memcheck\r\n--   ARROW_USE_ASAN=OFF [default=OFF]\r\n--       Enable Address Sanitizer checks\r\n--   ARROW_USE_TSAN=OFF [default=OFF]\r\n--       Enable Thread Sanitizer checks\r\n--   ARROW_USE_UBSAN=OFF [default=OFF]\r\n--       Enable Undefined Behavior sanitizer checks\r\n--\r\n-- Project component options:\r\n--\r\n--   ARROW_BUILD_UTILITIES=OFF [default=OFF]\r\n--       Build Arrow commandline utilities\r\n--   ARROW_COMPUTE=ON [default=OFF]\r\n--       Build the Arrow Compute Modules\r\n--   ARROW_CSV=ON [default=OFF]\r\n--       Build the Arrow CSV Parser Module\r\n--   ARROW_CUDA=OFF [default=OFF]\r\n--       Build the Arrow CUDA extensions (requires CUDA toolkit)\r\n--   ARROW_DATASET=ON [default=OFF]\r\n--       Build the Arrow Dataset Modules\r\n--   ARROW_FILESYSTEM=ON [default=OFF]\r\n--       Build the Arrow Filesystem Layer\r\n--   ARROW_FLIGHT=OFF [default=OFF]\r\n--       Build the Arrow Flight RPC System (requires GRPC, Protocol Buffers)\r\n--   ARROW_GANDIVA=OFF [default=OFF]\r\n--       Build the Gandiva libraries\r\n--   ARROW_HDFS=OFF [default=OFF]\r\n--       Build the Arrow HDFS bridge\r\n--   ARROW_HIVESERVER2=OFF [default=OFF]\r\n--       Build the HiveServer2 client and Arrow adapter\r\n--   ARROW_IPC=ON [default=ON]\r\n--       Build the Arrow IPC extensions\r\n--   ARROW_JEMALLOC=OFF [default=ON]\r\n--       Build the Arrow jemalloc-based allocator\r\n--   ARROW_JNI=OFF [default=OFF]\r\n--       Build the Arrow JNI lib\r\n--   ARROW_JSON=ON [default=OFF]\r\n--       Build Arrow with JSON support (requires RapidJSON)\r\n--   ARROW_MIMALLOC=OFF [default=OFF]\r\n--       Build the Arrow mimalloc-based allocator\r\n--   ARROW_PARQUET=ON [default=OFF]\r\n--       Build the Parquet libraries\r\n--   ARROW_ORC=OFF [default=OFF]\r\n--       Build the Arrow ORC adapter\r\n--   ARROW_PLASMA=OFF [default=OFF]\r\n--       Build the plasma object store along with Arrow\r\n--   ARROW_PLASMA_JAVA_CLIENT=OFF [default=OFF]\r\n--       Build the plasma object store java client\r\n--   ARROW_PYTHON=OFF [default=OFF]\r\n--       Build the Arrow CPython extensions\r\n--   ARROW_S3=OFF [default=OFF]\r\n--       Build Arrow with S3 support (requires the AWS SDK for C++)\r\n--   ARROW_TENSORFLOW=OFF [default=OFF]\r\n--       Build Arrow with TensorFlow support enabled\r\n--   ARROW_TESTING=OFF [default=OFF]\r\n--       Build the Arrow testing libraries\r\n--\r\n-- Thirdparty toolchain options:\r\n--\r\n--   ARROW_DEPENDENCY_SOURCE=BUNDLED [default=AUTO|BUNDLED|SYSTEM|CONDA|VCPKG|BREW]\r\n--       Method to use for acquiring arrow's build dependencies\r\n--   ARROW_VERBOSE_THIRDPARTY_BUILD=OFF [default=OFF]\r\n--       Show output from ExternalProjects rather than just logging to files\r\n--   ARROW_DEPENDENCY_USE_SHARED=ON [default=ON]\r\n--       Link to shared libraries\r\n--   ARROW_BOOST_USE_SHARED=OFF [default=ON]\r\n--       Rely on boost shared libraries where relevant\r\n--   ARROW_BROTLI_USE_SHARED=ON [default=ON]\r\n--       Rely on Brotli shared libraries where relevant\r\n--   ARROW_BZ2_USE_SHARED=ON [default=ON]\r\n--       Rely on Bz2 shared libraries where relevant\r\n--   ARROW_GFLAGS_USE_SHARED=ON [default=ON]\r\n--       Rely on GFlags shared libraries where relevant\r\n--   ARROW_GRPC_USE_SHARED=ON [default=ON]\r\n--       Rely on gRPC shared libraries where relevant\r\n--   ARROW_LZ4_USE_SHARED=ON [default=ON]\r\n--       Rely on lz4 shared libraries where relevant\r\n--   ARROW_OPENSSL_USE_SHARED=ON [default=ON]\r\n--       Rely on OpenSSL shared libraries where relevant\r\n--   ARROW_PROTOBUF_USE_SHARED=ON [default=ON]\r\n--       Rely on Protocol Buffers shared libraries where relevant\r\n--   ARROW_THRIFT_USE_SHARED=ON [default=ON]\r\n--       Rely on thrift shared libraries where relevant\r\n--   ARROW_UTF8PROC_USE_SHARED=ON [default=ON]\r\n--       Rely on utf8proc shared libraries where relevant\r\n--   ARROW_SNAPPY_USE_SHARED=ON [default=ON]\r\n--       Rely on snappy shared libraries where relevant\r\n--   ARROW_UTF8PROC_USE_SHARED=ON [default=ON]\r\n--       Rely on utf8proc shared libraries where relevant\r\n--   ARROW_ZSTD_USE_SHARED=ON [default=ON]\r\n--       Rely on zstd shared libraries where relevant\r\n--   ARROW_USE_GLOG=OFF [default=OFF]\r\n--       Build libraries with glog support for pluggable logging\r\n--   ARROW_WITH_BACKTRACE=ON [default=ON]\r\n--       Build with backtrace support\r\n--   ARROW_WITH_BROTLI=OFF [default=OFF]\r\n--       Build with Brotli compression\r\n--   ARROW_WITH_BZ2=OFF [default=OFF]\r\n--       Build with BZ2 compression\r\n--   ARROW_WITH_LZ4=OFF [default=OFF]\r\n--       Build with lz4 compression\r\n--   ARROW_WITH_SNAPPY=OFF [default=OFF]\r\n--       Build with Snappy compression\r\n--   ARROW_WITH_ZLIB=OFF [default=OFF]\r\n--       Build with zlib compression\r\n--   ARROW_WITH_ZSTD=OFF [default=OFF]\r\n--       Build with zstd compression\r\n--   ARROW_WITH_UTF8PROC=ON [default=ON]\r\n--       Build with support for Unicode properties using the utf8proc library\r\n--       (only used if ARROW_COMPUTE is ON)\r\n--   ARROW_WITH_RE2=ON [default=ON]\r\n--       Build with support for regular expressions using the re2 library\r\n--       (only used if ARROW_COMPUTE or ARROW_GANDIVA is ON)\r\n--\r\n-- Parquet options:\r\n--\r\n--   PARQUET_MINIMAL_DEPENDENCY=OFF [default=OFF]\r\n--       Depend only on Thirdparty headers to build libparquet.\r\n--       Always OFF if building binaries\r\n--   PARQUET_BUILD_EXECUTABLES=OFF [default=OFF]\r\n--       Build the Parquet executable CLI tools. Requires static libraries to be built.\r\n--   PARQUET_BUILD_EXAMPLES=OFF [default=OFF]\r\n--       Build the Parquet examples. Requires static libraries to be built.\r\n--   PARQUET_REQUIRE_ENCRYPTION=OFF [default=OFF]\r\n--       Build support for encryption. Fail if OpenSSL is not found\r\n--\r\n-- Gandiva options:\r\n--\r\n--   ARROW_GANDIVA_JAVA=OFF [default=OFF]\r\n--       Build the Gandiva JNI wrappers\r\n--   ARROW_GANDIVA_STATIC_LIBSTDCPP=OFF [default=OFF]\r\n--       Include -static-libstdc++ -static-libgcc when linking with\r\n--       Gandiva static libraries\r\n--   ARROW_GANDIVA_PC_CXX_FLAGS=\"\" [default=\"\"]\r\n--       Compiler flags to append when pre-compiling Gandiva operations\r\n--\r\n-- Advanced developer options:\r\n--\r\n--   ARROW_EXTRA_ERROR_CONTEXT=OFF [default=OFF]\r\n--       Compile with extra error context (line numbers, code)\r\n--   ARROW_OPTIONAL_INSTALL=OFF [default=OFF]\r\n--       If enabled install ONLY targets that have already been built. Please be\r\n--       advised that if this is enabled 'install' will fail silently on components\r\n--       that have not been built\r\n--   Outputting build configuration summary to /tmp/RtmpCyabIa/file1b6aaa1848/cmake_summary.json\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /tmp/RtmpCyabIa/file1b6aaa1848\r\n+ /QOpenSys/pkgs/bin/cmake --build . --target install\r\ngmake: the '-j' option requires a positive integer argument\r\nScanning dependencies of target boost_ep\r\n[  1%] Creating directories for 'boost_ep'\r\n[  2%] Performing download step (download, verify and extract) for 'boost_ep'\r\n-- boost_ep download command succeeded.  See also /tmp/RtmpCyabIa/file1b6aaa1848/boost_ep-prefix/src/boost_ep-stamp/boost_ep-download-*.log\r\n[  3%] No patch step for 'boost_ep'\r\n[  4%] No update step for 'boost_ep'\r\n[  6%] No configure step for 'boost_ep'\r\n[  7%] No build step for 'boost_ep'\r\n[  8%] No install step for 'boost_ep'\r\n[  9%] Completed 'boost_ep'\r\n[  9%] Built target boost_ep\r\nScanning dependencies of target utf8proc_ep\r\n[ 10%] Creating directories for 'utf8proc_ep'\r\n[ 12%] Performing download step (download, verify and extract) for 'utf8proc_ep'\r\n-- utf8proc_ep download command succeeded.  See also /tmp/RtmpCyabIa/file1b6aaa1848/utf8proc_ep-prefix/src/utf8proc_ep-stamp/utf8proc_ep-download-*.log\r\n[ 13%] No patch step for 'utf8proc_ep'\r\n[ 14%] No update step for 'utf8proc_ep'\r\n[ 15%] Performing configure step for 'utf8proc_ep'\r\n-- utf8proc_ep configure command succeeded.  See also /tmp/RtmpCyabIa/file1b6aaa1848/utf8proc_ep-prefix/src/utf8proc_ep-stamp/utf8proc_ep-configure-*.log\r\n[ 17%] Performing build step for 'utf8proc_ep'\r\n-- utf8proc_ep build command succeeded.  See also /tmp/RtmpCyabIa/file1b6aaa1848/utf8proc_ep-prefix/src/utf8proc_ep-stamp/utf8proc_ep-build-*.log\r\n[ 18%] Performing install step for 'utf8proc_ep'\r\n-- utf8proc_ep install command succeeded.  See also /tmp/RtmpCyabIa/file1b6aaa1848/utf8proc_ep-prefix/src/utf8proc_ep-stamp/utf8proc_ep-install-*.log\r\n[ 19%] Completed 'utf8proc_ep'\r\n[ 19%] Built target utf8proc_ep\r\nScanning dependencies of target thrift_ep\r\n[ 20%] Creating directories for 'thrift_ep'\r\n[ 21%] Performing download step (download, verify and extract) for 'thrift_ep'\r\n-- thrift_ep download command succeeded.  See also /tmp/RtmpCyabIa/file1b6aaa1848/thrift_ep-prefix/src/thrift_ep-stamp/thrift_ep-download-*.log\r\n[ 23%] No patch step for 'thrift_ep'\r\n[ 24%] No update step for 'thrift_ep'\r\n[ 25%] Performing configure step for 'thrift_ep'\r\n-- thrift_ep configure command succeeded.  See also /tmp/RtmpCyabIa/file1b6aaa1848/thrift_ep-prefix/src/thrift_ep-stamp/thrift_ep-configure-*.log\r\n[ 26%] Performing build step for 'thrift_ep'\r\nCMake Error at /tmp/RtmpCyabIa/file1b6aaa1848/thrift_ep-prefix/src/thrift_ep-stamp/thrift_ep-build-RELEASE.cmake:37 (message):\r\n  Command failed: 2   'make'  See also    /tmp/RtmpCyabIa/file1b6aaa1848/thrift_ep-prefix/src/thrift_ep-stamp/thrift_ep-build-*.log\r\n-- stdout output is:\r\nScanning dependencies of target thrift\r\n[  2%] Building CXX object lib/cpp/CMakeFiles/thrift.dir/src/thrift/TApplicationException.cpp.o-- stderr output is:\r\nIn file included from /tmp/RtmpCyabIa/file1b6aaa1848/boost_ep-prefix/src/boost_ep/boost/numeric/conversion/cast.hpp:32:0,\r\n                 from /tmp/RtmpCyabIa/file1b6aaa1848/thrift_ep-prefix/src/thrift_ep/lib/cpp/src/thrift/transport/TTransportException.h:23,\r\n                 from /tmp/RtmpCyabIa/file1b6aaa1848/thrift_ep-prefix/src/thrift_ep/lib/cpp/src/thrift/transport/TTransport.h:24,\r\n                 from /tmp/RtmpCyabIa/file1b6aaa1848/thrift_ep-prefix/src/thrift_ep/lib/cpp/src/thrift/protocol/TProtocol.h:28,\r\n                 from /tmp/RtmpCyabIa/file1b6aaa1848/thrift_ep-prefix/src/thrift_ep/lib/cpp/src/thrift/TApplicationException.cpp:21:\r\n/tmp/RtmpCyabIa/file1b6aaa1848/boost_ep-prefix/src/boost_ep/boost/type.hpp:13:3: error: template with C linkage\r\n   template <class T>\r\n   ^~~~~~~~\r\ncompilation terminated due to -fmax-errors=1.\r\nmake[5]: *** [lib/cpp/CMakeFiles/thrift.dir/build.make:63: lib/cpp/CMakeFiles/thrift.dir/src/thrift/TApplicationException.cpp.o] Error 1\r\nmake[4]: *** [CMakeFiles/Makefile2:96: lib/cpp/CMakeFiles/thrift.dir/all] Error 2\r\nmake[3]: *** [Makefile:152: all] Error 2CMake Error at /tmp/RtmpCyabIa/file1b6aaa1848/thrift_ep-prefix/src/thrift_ep-stamp/thrift_ep-build-RELEASE.cmake:47 (message):\r\n  Stopping after outputting logs.\r\nmake[2]: *** [CMakeFiles/thrift_ep.dir/build.make:114: thrift_ep-prefix/src/thrift_ep-stamp/thrift_ep-build] Error 1\r\nmake[1]: *** [CMakeFiles/Makefile2:676: CMakeFiles/thrift_ep.dir/all] Error 2\r\ngmake: *** [Makefile:141: all] Error 2\r\n**** Error building Arrow C++. Re-run with ARROW_R_DEV=true for debug information.\r\n\r\n```"
        },
        {
            "created_at": "2021-05-27T17:35:37.798Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12885?focusedCommentId=17352656) by Neal Richardson (npr):*\nLooks like the error is coming from boost, i.e. not in arrow source. Unless there's some CFLAGS or whatever that we should be passing but aren't, your options seem to be:\r\n\r\n1) Turn `ARROW_PARQUET=OFF` (parquet requires thrift, which requires the boost headers at build time)\r\n\r\n2)\u00a0Report an issue to boost and hope they can fix it, and then you can install the fixed boost version and use that at Arrow build time."
        },
        {
            "created_at": "2021-05-27T17:40:15.788Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12885?focusedCommentId=17352659) by Menno (Siekerman):*\nUnfortunately I need arrow specifically for parquet so option 1 wouldn't work."
        },
        {
            "created_at": "2021-05-27T20:21:52.748Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12885?focusedCommentId=17352732) by Kouhei Sutou (kou):*\nCould you try `cmake .. -DARROW_JEMALLOC=OFF` and re-run `make` with Apache Arrow C++ (not R)? It will be failed on the same location with R.\r\nAnd could you provide `${BUILD_DIR}/thrift_ep-prefix/src/thrift_ep-stamp/thrift_ep-build-*.log`?"
        },
        {
            "created_at": "2021-05-31T08:22:13.001Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12885?focusedCommentId=17354291) by Menno (Siekerman):*\nIt does fail at the same location as you said, with the same message:\r\n```java\n\r\n[  7%] Performing build step for 'thrift_ep'\r\nCMake Error at /pfmphp/phptestmsi/PFMRBI/arrow/cpp/release/thrift_ep-prefix/src/thrift_ep-stamp/thrift_ep-build-RELEASE.cmake:37 (message):\r\n  Command failed: 2   'make'  See also    /pfmphp/phptestmsi/PFMRBI/arrow/cpp/release/thrift_ep-prefix/src/thrift_ep-stamp/thrift_ep-build-*.log\r\n-- stdout output is:\r\n[  2%] Building CXX object lib/cpp/CMakeFiles/thrift.dir/src/thrift/TApplicationException.cpp.o-- stderr output is:\r\nIn file included from /pfmphp/phptestmsi/PFMRBI/arrow/cpp/release/boost_ep-prefix/src/boost_ep/boost/numeric/conversion/cast.hpp:32:0,\r\n                 from /pfmphp/phptestmsi/PFMRBI/arrow/cpp/release/thrift_ep-prefix/src/thrift_ep/lib/cpp/src/thrift/transport/TTransportException.h:23,\r\n                 from /pfmphp/phptestmsi/PFMRBI/arrow/cpp/release/thrift_ep-prefix/src/thrift_ep/lib/cpp/src/thrift/transport/TTransport.h:24,\r\n                 from /pfmphp/phptestmsi/PFMRBI/arrow/cpp/release/thrift_ep-prefix/src/thrift_ep/lib/cpp/src/thrift/protocol/TProtocol.h:28,\r\n                 from /pfmphp/phptestmsi/PFMRBI/arrow/cpp/release/thrift_ep-prefix/src/thrift_ep/lib/cpp/src/thrift/TApplicationException.cpp:21:\r\n/pfmphp/phptestmsi/PFMRBI/arrow/cpp/release/boost_ep-prefix/src/boost_ep/boost/type.hpp:13:3: error: template with C linkage\r\n   template <class T>\r\n   ^~~~~~~~\r\ncompilation terminated due to -fmax-errors=1.\r\nmake[5]: *** [lib/cpp/CMakeFiles/thrift.dir/build.make:63: lib/cpp/CMakeFiles/thrift.dir/src/thrift/TApplicationException.cpp.o] Error 1\r\nmake[4]: *** [CMakeFiles/Makefile2:96: lib/cpp/CMakeFiles/thrift.dir/all] Error 2\r\nmake[3]: *** [Makefile:152: all] Error 2CMake Error at /pfmphp/phptestmsi/PFMRBI/arrow/cpp/release/thrift_ep-prefix/src/thrift_ep-stamp/thrift_ep-build-RELEASE.cmake:47 (message):\r\n  Stopping after outputting logs.\r\nmake[2]: *** [CMakeFiles/thrift_ep.dir/build.make:114: thrift_ep-prefix/src/thrift_ep-stamp/thrift_ep-build] Error 1\r\nmake[1]: *** [CMakeFiles/Makefile2:676: CMakeFiles/thrift_ep.dir/all] Error 2\r\nmake: *** [Makefile:141: all] Error 2\r\n\r\n```\r\nThe log outputs the same message:\r\n\r\n[thrift_ep-build-err.log](thrift_ep-build-err.log)"
        },
        {
            "created_at": "2021-05-31T09:34:00.095Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12885?focusedCommentId=17354339) by Menno (Siekerman):*\nThe only thing I can find when I search online is that when compiler system headers are included\u00a0many errors occure regarding the template with C linkage.\r\n\r\nThere is a possible problem with option -isystem on AIX.\r\n\r\nIn their case it was fixed avoiding the -isystem option by doing something like this:\r\n```java\n\r\n  if ((CMAKE_SYSTEM_NAME STREQUAL \"AIX\" OR CMAKE_SYSTEM_NAME STREQUAL \"OS400\") AND CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\r\n    include_directories(\"includefile\")\r\n  else()\r\n    include_directories(SYSTEM \"includefile\")\r\n  endif()\r\n```\r\nIs there any location in arrow's source code where this might apply?\u00a0\r\n\r\n\u00a0"
        },
        {
            "created_at": "2021-05-31T16:31:50.604Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12885?focusedCommentId=17354549) by Menno (Siekerman):*\nIf I install with\u00a0ARROW_PARQUET=OFF the bluid fails as well:\r\n```java\n\r\n[ 15%] Built target toolchain\r\nScanning dependencies of target arrow_dependencies\r\n[ 15%] Built target arrow_dependencies\r\nScanning dependencies of target arrow_objlib\r\n[ 15%] Building CXX object src/arrow/CMakeFiles/arrow_objlib.dir/array/array_base.cc.o\r\nIn file included from /pfmphp/phptestmsi/PFMRBI/arrow/cpp/src/arrow/type.h:33:0,\r\n                 from /pfmphp/phptestmsi/PFMRBI/arrow/cpp/src/arrow/array/array_base.h:31,\r\n                 from /pfmphp/phptestmsi/PFMRBI/arrow/cpp/src/arrow/array/array_base.cc:18:\r\n/pfmphp/phptestmsi/PFMRBI/arrow/cpp/src/arrow/util/endian.h:28:42: fatal error: endian.h: No such file or directory\r\n #include <endian.h>  // IWYU pragma: keep\r\n                                          ^\r\ncompilation terminated.\r\nmake[2]: *** [src/arrow/CMakeFiles/arrow_objlib.dir/build.make:63: src/arrow/CMakeFiles/arrow_objlib.dir/array/array_base.cc.o] Error 1\r\nmake[1]: *** [CMakeFiles/Makefile2:1195: src/arrow/CMakeFiles/arrow_objlib.dir/all] Error 2\r\nmake: *** [Makefile:141: all] Error 2\n```\r\n\r\nIs arrow supported for AIX?"
        },
        {
            "created_at": "2021-05-31T20:36:17.407Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12885?focusedCommentId=17354656) by Kouhei Sutou (kou):*\nThanks.\r\nI wanted to see the command line that causes build error but `thrift_ep-build-err.log` doesn't include it...\r\n\r\n> Is arrow supported for AIX?\r\n\r\nWe have never tried AIX.\r\nIt seems that `endian.h` doesn't exist on AIX. We need a contributor to add support for AIX."
        },
        {
            "created_at": "2021-06-01T17:11:56.963Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12885?focusedCommentId=17355237) by Neal Richardson (npr):*\nSpeaking of endian.h, I'm reminded of work to get Arrow to compile on Solaris, so perhaps AIX would need similar conditional handling."
        },
        {
            "created_at": "2022-04-21T07:17:23.048Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12885?focusedCommentId=17525466) by Antoine Pitrou (apitrou):*\n`[~kiszk]` Do you think this is a bug in Arrow? Otherwise, perhaps we should simply chose this issue."
        },
        {
            "created_at": "2022-04-22T12:27:18.874Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12885?focusedCommentId=17526393) by Kazuaki Ishizaki (kiszk):*\nAccording to [this issue\\|[https://github.com/protocolbuffers/protobuf/issues/8373],] AIX does not have `{}endian.h{`}. Do we apply this change?"
        },
        {
            "created_at": "2022-04-22T21:17:00.948Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12885?focusedCommentId=17526683) by Kouhei Sutou (kou):*\nThanks for the information.\r\nIt seems that we need something like https://github.com/protocolbuffers/protobuf/pull/9065/files ."
        },
        {
            "created_at": "2022-04-26T17:04:06.833Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12885?focusedCommentId=17528304) by Kazuaki Ishizaki (kiszk):*\nI got an AIX instance for a few weeks. I will work to fix errors on AIX."
        }
    ]
}