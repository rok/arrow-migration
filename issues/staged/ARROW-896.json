{
    "issue": {
        "title": "[Docs] Add Jekyll plugin for including rendered Jupyter notebooks on website",
        "body": "***Note**: This issue was originally created as [ARROW-896](https://issues.apache.org/jira/browse/ARROW-896). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThis would help with writing blog posts and other documentation about Arrow. \n\n`[~kou]` do you have any experience writing Jekyll liquid tag plugins in Ruby? Under the hood, we would convert .ipynb to Markdown using https://github.com/jupyter/nbconvert. We would need to add some notebook-related CSS to make the output look nice. \n\nHere is a Jekyll-like plugin that does this for the Pelican platform: https://github.com/getpelican/pelican-plugins/blob/master/liquid_tags/notebook.py",
        "created_at": "2017-04-25T19:12:40.000Z",
        "updated_at": "2017-04-28T01:38:48.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Documentation",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2017-04-28T01:38:31.000Z"
    },
    "comments": [
        {
            "created_at": "2017-04-26T14:50:55.059Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-896?focusedCommentId=15984943) by Kouhei Sutou (kou):*\nYes. I can write a Jekyll liquid tag plugin. Here is a simple implementation:\n\n```\ndiff --git a/site/_plugins/notebook.rb b/site/_plugins/notebook.rb\nnew file mode 100644\nindex 0000000..4e6e22b\n--- /dev/null\n+++ b/site/_plugins/notebook.rb\n@@ -0,0 +1,34 @@\n+require \"tmpdir\"\n+\n+class JekyllNotebookTag < Liquid::Tag\n+  def initialize(tag_name, markup, tokens)\n+    super\n+    @notebook_path = markup.strip\n+  end\n+\n+  def syntax_example\n+    \"{% #{@tag_name} filename.ipynb %}\"\n+  end\n+\n+  def render(context)\n+    Dir.mktmpdir do |output|\n+      system(\"jupyter\",\n+             \"nbconvert\",\n+             \"--to\", \"html\",\n+             \"--output-dir\", output,\n+             @notebook_path)\n+      html_path = Dir.glob(\"#{output}/*.html\").first\n+      html = File.read(html_path)\n+      html.gsub!(/\\A.*?<\\/title>/m, \"\")\n+      html.gsub!(/<link.+?href=\"custom.css\">/, \"\")\n+      html.gsub!(/<\\/head>/, \"\")\n+      html.gsub!(/<body>/, \"\")\n+      html.gsub!(/<\\/body>.*\\z/m, \"\")\n+      <<-HTML\n+<div class=\"notebook\">#{html}</div>\n+      HTML\n+    end\n+  end\n+end\n+\n+Liquid::Template.register_tag(\"notebook\", JekyllNotebookTag)\n```\n\nIt works for https://github.com/jupyter/nbconvert/blob/master/docs/source/example.ipynb .\nIf you need to support more complex notebook and you can provide notebook files that you want to show, I may be able to improve the implementation."
        },
        {
            "created_at": "2017-04-26T20:17:41.790Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-896?focusedCommentId=15985485) by Wes McKinney (wesm):*\nCool! The only thing I don't know about is CSS styling customizations to make the notebooks like the same in the Jekyll site (e.g. look like https://nbviewer.jupyter.org/github/SciRuby/sciruby-notebooks/blob/master/getting_started.ipynb) without conflicting with any other CSS classes that may be defined. Feel free to contribute this as a patch to the site/ project, or we can wait until we have some notebook content we want to publish. "
        },
        {
            "created_at": "2017-04-27T14:27:33.332Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-896?focusedCommentId=15986711) by Kouhei Sutou (kou):*\nI created jekyll-jupyter-notebook gem because it'll be useful not only Apache Arrow site but also other sites.\n\nUsage:\n\n```\n{::nomarkdown}\n{% jupyter_notebook getting_started.ipynb %}\n{:/nomarkdown}\n```\n\n\nCSS related problems may be caused but there is no problem case yet. (We don't use the plugin yet.)\nHow about considering about the problems when we get the problems?"
        },
        {
            "created_at": "2017-04-28T01:38:31.813Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-896?focusedCommentId=15988019) by Wes McKinney (wesm):*\nIssue resolved by pull request 608\n<https://github.com/apache/arrow/pull/608>"
        }
    ]
}