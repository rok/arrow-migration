{
    "issue": {
        "title": "[C++] Use of uninitialized in arrow::detail::Fingerprintable",
        "body": "***Note**: This issue was originally created as [ARROW-15304](https://issues.apache.org/jira/browse/ARROW-15304). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n`arrow::detail::Fingerprintable`'s `fingerprint_` and `metadata_fingerprint_` members are not initialized by the default constructor, which can result in segmentation faults when accessed, if the initial value isn't coincidentally null.",
        "created_at": "2022-01-11T18:18:01.000Z",
        "updated_at": "2022-04-11T11:57:11.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-04-11T11:57:11.000Z"
    },
    "comments": [
        {
            "created_at": "2022-01-13T01:53:21.820Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15304?focusedCommentId=17475048) by Yibo Cai (yibocai):*\nThanks for the report. Do you have test cases for this bug?"
        },
        {
            "created_at": "2022-01-13T11:30:24.817Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15304?focusedCommentId=17475289) by Jeroen van Straten (jvanstraten):*\nIt's very broken [here](https://github.com/jvanstraten/arrow/commit/9255fb6) (roughly 3/4 of the test suite segfaults on Linux/GCC 11.1.0, once you get googletest to work with it) and subsequently fixed [here](https://github.com/jvanstraten/arrow/commit/1913e9e), but that's on an unrelated branch related to [this](https://github.com/apache/arrow/pull/11707) draft PR for Substrait integration. Looking at the code, `[~bkietz]` and I figured that it would be just as broken on master. However, for some reason that eludes me, I can't reproduce it there unless I copy over the explicit move constructor Ben added. My best guess is that it's a POD vs non-POD thing, but I haven't been able to find a MWE that confirms that.\r\n\r\nSo... either the behavior on master is undefined by the C++ spec and just happens to work for everyone, or some clause in the spec is mandating an implicit zero init for the version of `Fingerprintable` on master, but not the version on out Substrait branches. Though, nitpicking: relying on a zero init to set a pointer to null is wrong anyway, since null may not actually _be_ zero on exotic architectures.\r\n\r\nNot sure whether it's worth keeping this issue open or not. The fix will probably be merged in along with Substrait integration either way."
        },
        {
            "created_at": "2022-01-14T03:22:32.904Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15304?focusedCommentId=17475920) by Yibo Cai (yibocai):*\nLooks reasonable. Thanks `[~jvanstraten]`.\r\n"
        },
        {
            "created_at": "2022-04-04T18:09:40.597Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15304?focusedCommentId=17516991) by David Li (lidavidm):*\nLooks like this was fixed as part of ARROW-15238?"
        },
        {
            "created_at": "2022-04-11T09:28:48.769Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15304?focusedCommentId=17520459) by Edin Ragibovi\u0107 (Edin Ragibovi\u0107):*\nI share the view of David. The member variables are now default initialized and as of ARROW-15238 the issue does not exist anymore."
        },
        {
            "created_at": "2022-04-11T11:56:18.381Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15304?focusedCommentId=17520522) by Jeroen van Straten (jvanstraten):*\nMy bad, I should have closed this ages ago. The commit that I mentioned fixes the problem was already merged in as part of [https://github.com/apache/arrow/pull/12279](https://github.com/apache/arrow/pull/12279.) (though rewritten a bit as per review suggestions)."
        }
    ]
}