{
    "issue": {
        "title": "[C++][Python] Implement Between ternary kernel",
        "body": "***Note**: This issue was originally created as [ARROW-9843](https://issues.apache.org/jira/browse/ARROW-9843). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nA specialized `between(arr, left_bound, right_bound)` kernel would avoid \r\nmultiple scans and AND operation",
        "created_at": "2020-08-24T16:35:28.000Z",
        "updated_at": "2022-10-16T18:36:25.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2020-10-04T18:26:19.350Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9843?focusedCommentId=17207712) by David Sherrier (david1437):*\nI am interested in working on this issue and have a couple of questions on implementation details.\u00a0 I took a look at the compare kernel and based on that I would expect this to be a Scalar kernel with input array, scalar, scalar, and output of boolean filter?\u00a0 The main question I have otherwise is how AND operation would look and by multiple scans are there any more details I am missing?\r\n\r\nThanks,\r\n\r\nDavid"
        },
        {
            "created_at": "2020-10-06T21:41:44.495Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9843?focusedCommentId=17209182) by Wes McKinney (wesm):*\nI would suggest only implementing two versions, `(data: Array, left: Array, right: Array)` and `(data: Array, left: Scalar, right: Scalar)`.\r\n\r\nI added a missing \"avoid\" to the issue description. The idea is to compute BETWEEN as a loop of `(left < data[i]) && (data[i] < right)` instead of doing `AND(GREATER(data, left), LESS(data, right))`"
        },
        {
            "created_at": "2021-09-18T07:51:41.487Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9843?focusedCommentId=17417066) by Benson Muite (baksmj):*\nInterested in working on this."
        },
        {
            "created_at": "2021-09-18T07:51:42.293Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9843?focusedCommentId=17417067) by Benson Muite (baksmj):*\nInterested in working on this."
        },
        {
            "created_at": "2021-10-04T14:06:19.646Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9843?focusedCommentId=17423964) by Benson Muite (baksmj):*\nSlow implementation of expected functionality at https://github.com/bkmgit/arrow/blob/bkmgit-between-example/cpp/examples/arrow/compute_between_example.cc"
        },
        {
            "created_at": "2021-10-04T14:34:40.839Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9843?focusedCommentId=17423977) by Benson Muite (baksmj):*\nBetween functionality should be similar to [Pandas](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.between.html) should some kind of indicator be added similar to:\r\n\r\n**inclusive**\r\n\r\n{\u201cboth\u201d, \u201cneither\u201d, \u201cleft\u201d, \u201cright\u201d}\r\n\r\n[R](https://www.rdocumentation.org/packages/data.table/versions/1.14.2/topics/between) has similar functionality, though only has the equivalent of \"both\" and \"neither\" for including the bounds.\r\n\r\nThe description above has only strict inequalities, and this is what is implemented in the [kernel added in pull request #8387](https://github.com/david1437/arrow/blob/ARROW-9843/cpp/src/arrow/compute/kernels/scalar_between.cc)"
        },
        {
            "created_at": "2021-10-05T00:31:37.631Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9843?focusedCommentId=17424235) by Kouhei Sutou (kou):*\nYes. We should support all boundaries: `left < X < right`, `left <= X right`, `left < X <= right` and `left <= X <= right`\r\n\r\nThe default should be `left <= X <= right` like pandas and SQL's `BETWEEN`.\r\n\r\nWe can use `FunctionOptions` https://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/function.h#L60 feature for it. For example, `min_element_wise` uses the `FunctionOptions` feature: https://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/kernels/scalar_compare.cc"
        },
        {
            "created_at": "2021-12-14T16:57:23.223Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9843?focusedCommentId=17459315) by Benson Muite (baksmj):*\nA related issue for string comparison is https://issues.apache.org/jira/browse/ARROW-12046"
        },
        {
            "created_at": "2022-01-19T09:46:44.238Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9843?focusedCommentId=17478496) by Krisztian Szucs (kszucs):*\nPostponing to 8.0"
        },
        {
            "created_at": "2022-10-16T17:51:27.374Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9843?focusedCommentId=17618304) by Apache Arrow JIRA Bot (arrowjira):*\nThis issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned per [project policy](https://arrow.apache.org/docs/dev/developers/bug_reports.html#issue-assignment). Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon."
        }
    ]
}