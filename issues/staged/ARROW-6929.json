{
    "issue": {
        "title": "[C++] ValidateArray is out of sync with the ListArray IPC specification",
        "body": "***Note**: This issue was originally created as [ARROW-6929](https://issues.apache.org/jira/browse/ARROW-6929). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n- It appears to check that null values take zero space\n   \\* It still checks for a begin offset of 0 if the array isn't sliced (technically this doesn't seem necessary and it could be non-zero even if the array wasn't sliced.)\n   \\* I think it also fails if an array is sliced to truncate it since it should compare length to data_extent instead of last_offset.",
        "created_at": "2019-10-18T04:08:04.000Z",
        "updated_at": "2020-01-24T04:58:38.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-01-24T04:58:38.000Z"
    },
    "comments": [
        {
            "created_at": "2019-12-04T20:41:07.386Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6929?focusedCommentId=16988204) by Antoine Pitrou (apitrou):*\n[~emkornfield@gmail.com] Can you check the current implementation? It's been significantly overhauled."
        },
        {
            "created_at": "2020-01-13T17:03:11.981Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6929?focusedCommentId=17014476) by Antoine Pitrou (apitrou):*\nPing [~emkornfield@gmail.com]. If you could give a check to the current implementation."
        },
        {
            "created_at": "2020-01-14T06:07:13.139Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6929?focusedCommentId=17014877) by Micah Kornfield (emkornfield@gmail.com):*\napologies, I'll check by end of week."
        },
        {
            "created_at": "2020-01-17T05:16:34.793Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6929?focusedCommentId=17017722) by Micah Kornfield (emkornfield@gmail.com):*\nI'm not sure the condition checked (\u00a0\"if (array.length() > 0 && array.offset() == 0 && array.value_offset(0) != 0)\")\r\n return Status::Invalid(\"The first offset isn't zero\");\r\n } at\u00a0<https://github.com/apache/arrow/blob/master/cpp/src/arrow/array/validate.cc#L249>\u00a0is a requirement for arrays ?"
        },
        {
            "created_at": "2020-01-20T17:04:26.411Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6929?focusedCommentId=17019636) by Ben Kietzman (bkietz):*\n[~emkornfield@gmail.com] The \"first offset == 0\" requirement **was** explicitly stated in Layout.rst, line 286. It was removed in https://github.com/apache/arrow/commit/67d46c7149115ea1ab094ab80f1e1ff4add48be9 but that may not have been intentional,  `[~wesm]`? I agree that requirement seems unnecessary and could be safely removed now.\r\n\r\nI believe the other two points have been resolved: validate no longer checks for empty lists \"under\" null bits and I don't observe incorrect logic in the case of ValidateListArray(trucated)."
        },
        {
            "created_at": "2020-01-21T00:47:37.052Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6929?focusedCommentId=17019781) by Micah Kornfield (emkornfield@gmail.com):*\nagreed the other two have been resolved."
        },
        {
            "created_at": "2020-01-22T21:34:39.611Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6929?focusedCommentId=17021529) by Wes McKinney (wesm):*\nReviewing the changes, I agree that the first offset is not required to be zero, but it is a guideline (and note we shift everything to 0 in the C++ library on IPC write). If the first offset is non-zero then you are sending more data than you need to, so I think this validation check can be removed"
        },
        {
            "created_at": "2020-01-23T17:16:11.076Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6929?focusedCommentId=17022282) by Neal Richardson (npr):*\n`[~wesm]` [~emkornfield@gmail.com] `[~bkietz]` So this is done, right?"
        },
        {
            "created_at": "2020-01-23T18:29:29.306Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6929?focusedCommentId=17022353) by Ben Kietzman (bkietz):*\n`[~npr]` Almost: removing that unnecessary check in https://github.com/apache/arrow/pull/6269"
        },
        {
            "created_at": "2020-01-24T04:58:38.599Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6929?focusedCommentId=17022687) by Micah Kornfield (emkornfield@gmail.com):*\nIssue resolved by pull request 6269\n<https://github.com/apache/arrow/pull/6269>"
        }
    ]
}