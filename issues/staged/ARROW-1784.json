{
    "issue": {
        "title": "[Python] Read and write pandas.DataFrame in pyarrow.serialize by decomposing the BlockManager rather than coercing to Arrow format",
        "body": "***Note**: This issue was originally created as [ARROW-1784](https://issues.apache.org/jira/browse/ARROW-1784). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSee discussion in https://github.com/dask/distributed/pull/931\r\n\r\nThis will permit zero-copy reads for DataFrames not containing Python objects. In the event of an `ObjectBlock` these arrays will not be worse than pickle to reconstruct on the receiving side",
        "created_at": "2017-11-09T17:35:21.000Z",
        "updated_at": "2017-12-06T19:10:33.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2017-12-06T19:10:30.000Z"
    },
    "comments": [
        {
            "created_at": "2017-11-09T17:44:33.753Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1784?focusedCommentId=16246134) by Matthew Rocklin (mrocklin):*\nNote that matching the BlockManager itself is not important for us.  I could imagine doing things columnwise as well if that feels cleaner semantically or more future-proof.  "
        },
        {
            "created_at": "2017-11-09T19:11:39.540Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1784?focusedCommentId=16246309) by Wes McKinney (wesm):*\nIt's hard to prevent a memory doubling on receipt if you go column-wise (e.g. `pd.DataFrame(data)` where data is a dict of columns will double memory). So I think as long as we avoid memory doubling we are good"
        },
        {
            "created_at": "2017-12-06T19:10:30.637Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1784?focusedCommentId=16280701) by Wes McKinney (wesm):*\nIssue resolved by pull request 1390\n<https://github.com/apache/arrow/pull/1390>"
        }
    ]
}