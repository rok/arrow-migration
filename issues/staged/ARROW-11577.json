{
    "issue": {
        "title": "[Rust] Concat kernel panics on slices of string arrays",
        "body": "***Note**: This issue was originally created as [ARROW-11577](https://issues.apache.org/jira/browse/ARROW-11577). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSee the test case below:\r\n```java\n\r\n#[test]\r\nfn test_string_array_slices() -> Result<()> {\r\n    let input_1 = StringArray::from(vec![\"hello\", \"A\", \"B\", \"C\"]);\r\n    let input_2 = StringArray::from(vec![\"world\", \"D\", \"E\", \"Z\"]);\r\n\r\n    let arr = concat(&[\r\n        input_1.slice(1, 3).as_ref(),\r\n        input_2.slice(1, 2).as_ref(),\r\n    ])?;\r\n\r\n    let expected_output = StringArray::from(vec![\"A\", \"B\", \"C\", \"D\", \"E\"]);\r\n\r\n    let actual_output = arr\r\n        .as_any()\r\n        .downcast_ref::<StringArray>()\r\n        .unwrap();\r\n    assert_eq!(actual_output, &expected_output);\r\n\r\n    Ok(())\r\n}\n```\r\nFails with:\r\n```\n\r\nrange end index 8 out of range for slice of length 7\r\nthread 'compute::kernels::concat::tests::test_string_array_slices' panicked at 'range end index 8 out of range for slice of length 7', arrow/src/array/transform/variable_size.rs:38:23\r\n```",
        "created_at": "2021-02-09T22:47:20.000Z",
        "updated_at": "2021-03-11T16:22:07.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-02-10T11:29:24.000Z"
    },
    "comments": [
        {
            "created_at": "2021-02-10T11:29:24.157Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11577?focusedCommentId=17282389) by Andrew Lamb (alamb):*\nIssue resolved by pull request 9460\n<https://github.com/apache/arrow/pull/9460>"
        }
    ]
}