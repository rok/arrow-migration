{
    "issue": {
        "title": "[C++] Add casting support for map type",
        "body": "***Note**: This issue was originally created as [ARROW-17349](https://issues.apache.org/jira/browse/ARROW-17349). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nDifferent parquet implementations use different field names for internal fields of ListType and MapType, which can sometimes cause silly conflicts. For example, we use `item` as the field name for list, but Spark uses `element`. Fortunately, we can automatically cast between List and Map Types with different field names. Unfortunately, it only works at the top level. We should get it to work at arbitrary levels of nesting.\r\n\r\nThis was discovered in delta-rs: https://github.com/delta-io/delta-rs/pull/684#discussion_r935099285\r\n\r\nHere's a reproduction in Python:\r\n\r\n```Python\n\r\nimport pyarrow as pa\r\nimport pyarrow.parquet as pq\r\nimport pyarrow.dataset as ds\r\n\r\ndef roundtrip_scanner(in_arr, out_type):\r\n    table = pa.table({\"arr\": in_arr})\r\n    pq.write_table(table, \"test.parquet\")\r\n    schema = pa.schema({\"arr\": out_type})\r\n    ds.dataset(\"test.parquet\", schema=schema).to_table()\r\n\r\n# MapType\r\nty_named = pa.map_(pa.field(\"x\", pa.int32(), nullable=False), pa.int32())\r\nty = pa.map_(pa.int32(), pa.int32())\r\narr_named = pa.array([[(1, 2), (2, 4)]], type=ty_named)\r\nroundtrip_scanner(arr_named, ty)\r\n\r\n# ListType\r\nty_named = pa.list_(pa.field(\"x\", pa.int32(), nullable=False))\r\nty = pa.list_(pa.int32())\r\narr_named = pa.array([[1, 2, 4]], type=ty_named)\r\nroundtrip_scanner(arr_named, ty)\r\n\r\n# Combination MapType and ListType\r\nty_named = pa.map_(pa.string(), pa.field(\"x\", pa.list_(pa.field(\"x\", pa.int32(), nullable=True)), nullable=False))\r\nty = pa.map_(pa.string(), pa.list_(pa.int32()))\r\narr_named = pa.array([[(\"string\", [1, 2, 3])]], type=ty_named)\r\nroundtrip_scanner(arr_named, ty)\r\n# Traceback (most recent call last):\r\n#   File \"<stdin>\", line 1, in <module>\r\n#   File \"<stdin>\", line 5, in roundtrip_scanner\r\n#   File \"pyarrow/_dataset.pyx\", line 331, in pyarrow._dataset.Dataset.to_table\r\n#   File \"pyarrow/_dataset.pyx\", line 2577, in pyarrow._dataset.Scanner.to_table\r\n#   File \"pyarrow/error.pxi\", line 144, in pyarrow.lib.pyarrow_internal_check_status\r\n#   File \"pyarrow/error.pxi\", line 121, in pyarrow.lib.check_status\r\n# pyarrow.lib.ArrowNotImplementedError: Unsupported cast to map<string, list<item: int32>> from map<string, list<x: int32> ('arr')>\r\n```",
        "created_at": "2022-08-09T00:01:59.000Z",
        "updated_at": "2022-10-12T23:04:58.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-10-12T11:35:38.000Z"
    },
    "comments": [
        {
            "created_at": "2022-09-20T22:44:44.380Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17349?focusedCommentId=17607422) by Will Jones (willjones127):*\nWhat's actually going on is we don't have any cast kernel for Map. Casting from a map to map works, because we early return if types are equal, and our equals method doesn't care about map field names. But it does care about list field names, so if the map contains a list then it will look for a cast function.\r\n\r\nI'll create a separate ticket for implementing Cast for Map, but for this particular issue, I think it would be nice to have a fast path for renaming fields in cast."
        },
        {
            "created_at": "2022-10-05T09:36:52.663Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17349?focusedCommentId=17612926) by Joris Van den Bossche (jorisvandenbossche):*\n`[~willjones127]` this JIRA is now only about Map type? (casting nested lists already seems to work with different names, and https://github.com/apache/arrow/pull/14198 is only addressing Map?) "
        },
        {
            "created_at": "2022-10-05T14:53:59.786Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17349?focusedCommentId=17613030) by Will Jones (willjones127):*\nYes, I've updated the title. Casting lists only was broken if it was inside a map. The only reason casting maps looked as if it was working was because of the early return if types are \"equal\" (and maps are \"equal\" even if they have different field names)."
        },
        {
            "created_at": "2022-10-12T11:35:38.395Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17349?focusedCommentId=17616370) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 14198\n<https://github.com/apache/arrow/pull/14198>"
        }
    ]
}