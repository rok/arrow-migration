{
    "issue": {
        "title": "[C++] Distinguish between async-reentrant generators and unsafe generators",
        "body": "***Note**: This issue was originally created as [ARROW-13267](https://issues.apache.org/jira/browse/ARROW-13267). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nRight now there are a lot of comments in the MakeXyzGenerator functions explaining if a generator can be called async reentrantly and if it will call input generators async reentrantly.\u00a0 Rather than rely on comments and the user doing the right thing we could create types for the two generators.\u00a0 The unsafe generator could even serve as a base type that queues incoming requests.\u00a0 This way all generators would technically be async reentrant and it would hopefully remove some of the confusion.\r\n\r\n\u00a0\r\n\r\nThis does mean converting async generators from aliases of std::function to actual types.",
        "created_at": "2021-07-06T19:33:10.000Z",
        "updated_at": "2021-07-06T19:36:23.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-07-06T19:36:23.144Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13267?focusedCommentId=17375968) by Antoine Pitrou (apitrou):*\nI'm not sure adding implicit queueing is a good idea. Allowing to reliably distinguish reentrant and non-reentrant generators sounds useful however."
        }
    ]
}