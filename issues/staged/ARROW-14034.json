{
    "issue": {
        "title": "[Java] Unexpected Allocator states created after allocating buffer whose AllocationManager has different size from the requested size",
        "body": "***Note**: This issue was originally created as [ARROW-14034](https://issues.apache.org/jira/browse/ARROW-14034). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIf a buffer with altered AllocationManager size (which means, the size is different from request size) is created from a Allocator, then allocator still adds the request size rather than the altered size to its accountant. As a result inconsistency will be made once the buffer is getting destroyed because at that time the actual buffer size is used for releasing.\r\n\r\nThe predefined AllocationManager implementations don't make such inconsistencies since they always grant chunks within the request size. However we have [documented](https://github.com/apache/arrow/blob/e5f3e04b4b80c9b9c53f1f0f71f39d9f8308dced/java/memory/memory-core/src/main/java/org/apache/arrow/memory/AllocationManager.java#L184-L191) that the actual size can be altered from request size in custom implementations of AllocationManager. So this kind of customization should be supported.",
        "created_at": "2021-09-18T10:05:42.000Z",
        "updated_at": "2022-10-20T05:00:03.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-10-13T21:40:19.933Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14034?focusedCommentId=17428512) by Krisztian Szucs (kszucs):*\n`[~emkornfield]` Postponing it to 7.0, feel free to put back if the patch can be merged."
        }
    ]
}