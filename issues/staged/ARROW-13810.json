{
    "issue": {
        "title": "[C++][Compute] Predicate IsAsciiCharacter allows invalid types and values",
        "body": "***Note**: This issue was originally created as [ARROW-13810](https://issues.apache.org/jira/browse/ARROW-13810). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe **IsAsciiCharacter** predicate has a template type for its input parameter but it only checks if the value is less than 128. This check is unbounded in its lower bound, so it is prone to receive non-ASCII characters (negative value) and return true. There are three solutions in order of my preference:\r\n1. Remove the template and make the type uint8_t. All its use cases use uint8_t and this is the type used across the ASCII operations. Also, the other string-related utility functions are not templates.\n1. Constrain the template so that it only accepts unsigned integers.\n1. Add a check to validate that argument is non-negative. This check adds unnecessary overhead.",
        "created_at": "2021-08-31T03:51:32.000Z",
        "updated_at": "2021-09-07T10:19:33.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-09-07T10:19:21.000Z"
    },
    "comments": [
        {
            "created_at": "2021-09-07T10:19:21.361Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13810?focusedCommentId=17411103) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 11048\n<https://github.com/apache/arrow/pull/11048>"
        }
    ]
}