{
    "issue": {
        "title": "[C++] Add OutputStream::Write() variant taking an owned buffer",
        "body": "***Note**: This issue was originally created as [ARROW-6527](https://issues.apache.org/jira/browse/ARROW-6527). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen Write() takes an arbitrary data pointer and needs to buffer it, it is mandatory to copy the data because the pointer may go stale, or the data may be overwritten.\r\n\r\nBuf if the user has an immutable Buffer, then it should be enough to store the Buffer as necessary, without doing a memory copy. We could add a special Write() variant for that.",
        "created_at": "2019-09-11T10:00:34.000Z",
        "updated_at": "2019-09-18T18:46:03.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-09-18T18:46:03.000Z"
    },
    "comments": [
        {
            "created_at": "2019-09-11T13:04:23.366Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6527?focusedCommentId=16927541) by Antoine Pitrou (apitrou):*\nConcrete case which motivated this issue. With ARROW-6357, the S3 FileSystem implementation supports background writes. However, it must make sure the data remains valid until written, so has to make a copy. This is wasteful when e.g. writing a RecordBatch which is backed by owned read-only buffers.\r\n\r\n[~emkornfield@gmail.com] `[~wesmckinn]`"
        },
        {
            "created_at": "2019-09-11T13:22:57.925Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6527?focusedCommentId=16927562) by Wes McKinney (wesm):*\nAgreed that this would be useful. "
        },
        {
            "created_at": "2019-09-18T18:46:03.669Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6527?focusedCommentId=16932746) by Wes McKinney (wesm):*\nIssue resolved by pull request 5406\n<https://github.com/apache/arrow/pull/5406>"
        }
    ]
}