{
    "issue": {
        "title": "[C++/Python] Decimal conversion not working for exponential notation",
        "body": "***Note**: This issue was originally created as [ARROW-2153](https://issues.apache.org/jira/browse/ARROW-2153). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n```java\n\r\nimport pyarrow as pa\r\nimport pandas as pd\r\nimport decimal\r\n\r\npa.Table.from_pandas(pd.DataFrame({'a': [decimal.Decimal('1.1'), decimal.Decimal('2E+1')]}))\r\n```\r\n\u00a0\r\n```java\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"pyarrow/table.pxi\", line 875, in pyarrow.lib.Table.from_pandas (/arrow/python/build/temp.linux-x86_64-3.6/lib.cxx:44927)\r\n  File \"/home/skadlec/.local/lib/python3.6/site-packages/pyarrow/pandas_compat.py\", line 350, in dataframe_to_arrays\r\n    convert_types)]\r\n  File \"/home/skadlec/.local/lib/python3.6/site-packages/pyarrow/pandas_compat.py\", line 349, in <listcomp>\r\n    for c, t in zip(columns_to_convert,\r\n  File \"/home/skadlec/.local/lib/python3.6/site-packages/pyarrow/pandas_compat.py\", line 345, in convert_column\r\n    return pa.array(col, from_pandas=True, type=ty)\r\n  File \"pyarrow/array.pxi\", line 170, in pyarrow.lib.array (/arrow/python/build/temp.linux-x86_64-3.6/lib.cxx:29224)\r\n  File \"pyarrow/array.pxi\", line 70, in pyarrow.lib._ndarray_to_array (/arrow/python/build/temp.linux-x86_64-3.6/lib.cxx:28465)\r\n  File \"pyarrow/error.pxi\", line 77, in pyarrow.lib.check_status (/arrow/python/build/temp.linux-x86_64-3.6/lib.cxx:8270)\r\npyarrow.lib.ArrowInvalid: Expected base ten digit or decimal point but found 'E' instead.\r\n```\r\nIn manual cases clearly we can write `decimal.Decimal('20')` instead of `decimal.Decimal('2E+1')` but during arithmetical operations inside an application the exponential notation can be produced out of control (it is actually the _normalized_ form of the decimal number) plus for some values the exponential notation is the only\u00a0form\u00a0expressing the significance so this should be accepted.\r\n\r\nThe [documentation](https://docs.python.org/3/library/decimal.html) suggests using following transformation but that's only possible when the significance information doesn't need to be kept:\r\n```java\n\r\ndef remove_exponent(d):\r\n    return d.quantize(Decimal(1)) if d == d.to_integral() else d.normalize()\r\n```",
        "created_at": "2018-02-14T07:30:54.000Z",
        "updated_at": "2018-03-07T16:21:22.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2018-03-01T22:27:52.000Z"
    },
    "comments": [
        {
            "created_at": "2018-02-14T08:10:00.697Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2153?focusedCommentId=16363625) by Antony Mayi (antonymayi):*\nbtw. the workaround even doesn't work for cases like `decimal.Decimal('-3E-8')`"
        },
        {
            "created_at": "2018-02-14T15:54:15.823Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2153?focusedCommentId=16364319) by Phillip Cloud (cpcloud):*\nIf this is blocking you, you can use a decimal point as a workaround:\r\n\r\n```Java\n\r\npa.array(pd.Series([Decimal('-3.0e+1')]))\r\n```\r\n\r\nI'll put up a fix today for this."
        },
        {
            "created_at": "2018-02-14T20:57:32.900Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2153?focusedCommentId=16364769) by Antony Mayi (antonymayi):*\nnice, thanks!"
        },
        {
            "created_at": "2018-03-01T22:27:52.461Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2153?focusedCommentId=16382771) by Wes McKinney (wesm):*\nResolved as part of ARROW-2145 https://github.com/apache/arrow/commit/bfac60dd73bffa5f7bcefc890486268036182278"
        }
    ]
}