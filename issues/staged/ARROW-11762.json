{
    "issue": {
        "title": "[C++][Dataset] Refactor Partitioning to explicitly treat null and absent fields identically",
        "body": "***Note**: This issue was originally created as [ARROW-11762](https://issues.apache.org/jira/browse/ARROW-11762). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nARROW-10438 adds support for partition expressions with explicit absence of a partition key by including an `is_null(field_ref(\"absent key field name\"))` in the conjunction. Whenever possible, this should be preferred to an equivalent conjunction which simply omits an equality expression for the missing field.\r\n\r\nAdditionally since an absent partition key and a null partition key is semantically equivalent to a  null valued partition key, we should ensure there is no difference in behavior. Currently, `equal(field_ref(\"a\"), literal(0))` and `and_(equal(field_ref(\"a\"), literal(0)), is_null(\"b\"))` are formatted differently ",
        "created_at": "2021-02-24T15:29:25.000Z",
        "updated_at": "2022-10-13T17:51:28.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-03-29T15:18:09.255Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11762?focusedCommentId=17310723) by David Li (lidavidm):*\nI'm a little confused here. It seems the two expressions are not equivalent, as `a == 0`\u00a0should match both the paths `/a=0/b=\\_\\_HIVE\\_DEFAULT\\_PARTITION\\_\\_` and `/a=0/b=1` but `a == 0 && is_null(b)`\u00a0should match only `/a=0/b=\\_\\_HIVE\\_DEFAULT\\_PARTITION\\_\\_`."
        },
        {
            "created_at": "2021-07-26T14:44:18.469Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11762?focusedCommentId=17387396) by Ben Kietzman (bkietz):*\nYou're correct for those filter expressions, but I was referring to the guarantees produced by partitions. Specifically, currently it's legal for a HivePartitioning to parse either of `/a=0/` or `/a=0/b=__HIVE_DEFAULT_PARTITION__/` as `a == 0` or as `a == 0 and is_null(b)`. The former guarantee doesn't include explicit information about field `b`, which we currently consider to be equivalent to specifying that it's null. This is not optimal; we'd prefer to be specific"
        },
        {
            "created_at": "2022-10-13T17:51:27.972Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11762?focusedCommentId=17617230) by Apache Arrow JIRA Bot (arrowjira):*\nThis issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned per [project policy](https://arrow.apache.org/docs/dev/developers/bug_reports.html#issue-assignment). Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon."
        }
    ]
}