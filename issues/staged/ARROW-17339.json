{
    "issue": {
        "title": "[C++] Simplify IPC writer for dense unions",
        "body": "***Note**: This issue was originally created as [ARROW-17339](https://issues.apache.org/jira/browse/ARROW-17339). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIn ARROW-10580 we fixed the Arrow C++ implementation so that dense union offsets are always (non-strictly) monotonic for a given child, as mandated by the spec.\r\n\r\nThe IPC writer implementation, however, still assumes that dense union offsets may be in any order:\r\nhttps://github.com/apache/arrow/blob/5719576c611929dd790f7f8a1ae3169a8f96f7f1/cpp/src/arrow/ipc/writer.cc#L476-L485\r\n\r\nThis can probably be simplified, making it slightly less costly to emit a sliced union array.",
        "created_at": "2022-08-08T12:48:44.000Z",
        "updated_at": "2022-08-08T15:45:07.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-08-08T15:45:07.717Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17339?focusedCommentId=17576863) by Antoine Pitrou (apitrou):*\nAlso for the record the Go code for this is as follows:\r\n```go\n\r\n\r\n\tfor i, c := range codes {\r\n\t\tif offsets[c] == -1 {\r\n\t\t\t// offsets are guaranteed to be increasing according to the spec\r\n\t\t\t// so the first offset we find for a child is the initial offset\r\n\t\t\t// and will become the \"0\" for this child.\r\n\t\t\toffsets[c] = unshiftedOffsets[i]\r\n\t\t\tshiftedOffsets[i] = 0\r\n\t\t} else {\r\n\t\t\tshiftedOffsets[i] = unshiftedOffsets[i] - offsets[c]\r\n\t\t}\r\n\t\tlengths[c] = maxI32(lengths[c], shiftedOffsets[i]+1)\r\n\t}\r\n```"
        }
    ]
}