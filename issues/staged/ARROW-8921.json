{
    "issue": {
        "title": "[C++] Add \"TypeResolver\" class interface to replace current OutputType::Resolver pattern",
        "body": "***Note**: This issue was originally created as [ARROW-8921](https://issues.apache.org/jira/browse/ARROW-8921). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nLike the `TypeMatcher` for extensible input type checking, TypeResolver will allow more flexibility with respect to the output type resolution rule. Currently the resolver function is defined as\r\n\r\n```Java\n\r\nusing Resolver =\r\n      std::function<Result<ValueDescr>(KernelContext*, const std::vector<ValueDescr>&)>;\r\n```\r\n\r\nBy changing to a `TypeResolver` interface with a virtual Resolve function, we also can provide for better human-readability when printing kernel signatures (by having `TypeResolver::ToString`) and permitting TypeResolvers to be compared",
        "created_at": "2020-05-24T14:57:22.000Z",
        "updated_at": "2022-04-08T13:13:26.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": []
}