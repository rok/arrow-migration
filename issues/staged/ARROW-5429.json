{
    "issue": {
        "title": "[Java] Provide alternative buffer allocation policy",
        "body": "***Note**: This issue was originally created as [ARROW-5429](https://issues.apache.org/jira/browse/ARROW-5429). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe current buffer allocation policy works like this:\r\n \\* If the requested buffer size is greater than or equal to the chunk size, the buffer size will be as is.\r\n \\* If the requested size is within the chunk size, the buffer size will be rounded to the next power of 2.\r\n\r\nThis policy can lead to waste of memory in some cases. For example, if we request a buffer of size 10MB, Arrow will round the buffer size to 16 MB. If we only need 10 MB, this will lead to a waste of (16 - 10) / 10 = 60% of memory.\r\n\r\nSo in this proposal, we provide another policy: the rounded buffer size must be a multiple of some memory unit, like (32 KB). This policy has two benefits:\r\n1. The wasted memory cannot exceed one memory unit (32 KB), which is much smaller than the power-of-two policy.\n1. This is the memory allocation policy adopted by some computation engines (e.g. Apache Flink).\u00a0",
        "created_at": "2019-05-28T02:51:54.000Z",
        "updated_at": "2019-05-31T04:25:32.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-05-31T03:37:21.000Z"
    },
    "comments": [
        {
            "created_at": "2019-05-31T03:37:21.678Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5429?focusedCommentId=16852617) by Micah Kornfield (emkornfield@gmail.com):*\nIssue resolved by pull request 4400\n<https://github.com/apache/arrow/pull/4400>"
        }
    ]
}