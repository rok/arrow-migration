{
    "issue": {
        "title": "[C++] arrow-io-hdfs-test fails when run against HDFS cluster from docker-compose",
        "body": "***Note**: This issue was originally created as [ARROW-4058](https://issues.apache.org/jira/browse/ARROW-4058). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen running HDFS with `docker-compose up hdfs-data-node-1` I get the following error:\r\n\r\n```Java\n\r\n[==========] Running 2 tests from 2 test cases.\r\n[----------] Global test environment set-up.\r\n[----------] 1 test from TestHadoopFileSystem/0, where TypeParam = arrow::io::JNIDriver\r\n[ RUN      ] TestHadoopFileSystem/0.LargeFile\r\n[       OK ] TestHadoopFileSystem/0.LargeFile (1101 ms)\r\n[----------] 1 test from TestHadoopFileSystem/0 (1101 ms total)\r\n\r\n[----------] 1 test from TestHadoopFileSystem/1, where TypeParam = arrow::io::PivotalDriver\r\n[ RUN      ] TestHadoopFileSystem/1.LargeFile\r\nLoading libhdfs3 failed, skipping tests gracefully. IOError: ../src/arrow/io/hdfs-internal.cc:566 code: try_dlopen(libhdfs3_potential_paths, \"libhdfs3\", shim->handle)\r\nUnable to load libhdfs3\r\nDriver not loaded, skipping\r\n[       OK ] TestHadoopFileSystem/1.LargeFile (0 ms)\r\n[----------] 1 test from TestHadoopFileSystem/1 (0 ms total)\r\n\r\n[----------] Global test environment tear-down\r\n[==========] 2 tests from 2 test cases ran. (1101 ms total)\r\n[  PASSED  ] 2 tests.\r\n(arrow-dev) 21:06 ~/code/arrow/cpp/build  (ARROW-2919)$ ./debug/arrow-io-hdfs-test\r\nRunning main() from gtest_main.cc\r\n[==========] Running 24 tests from 2 test cases.\r\n[----------] Global test environment set-up.\r\n[----------] 12 tests from TestHadoopFileSystem/0, where TypeParam = arrow::io::JNIDriver\r\n[ RUN      ] TestHadoopFileSystem/0.ConnectsAgain\r\n[       OK ] TestHadoopFileSystem/0.ConnectsAgain (885 ms)\r\n[ RUN      ] TestHadoopFileSystem/0.MultipleClients\r\n[       OK ] TestHadoopFileSystem/0.MultipleClients (194 ms)\r\n[ RUN      ] TestHadoopFileSystem/0.MakeDirectory\r\n[       OK ] TestHadoopFileSystem/0.MakeDirectory (139 ms)\r\n[ RUN      ] TestHadoopFileSystem/0.GetCapacityUsed\r\n[       OK ] TestHadoopFileSystem/0.GetCapacityUsed (119 ms)\r\n[ RUN      ] TestHadoopFileSystem/0.GetPathInfo\r\n[       OK ] TestHadoopFileSystem/0.GetPathInfo (229 ms)\r\n[ RUN      ] TestHadoopFileSystem/0.AppendToFile\r\n18/12/17 21:06:38 WARN hdfs.DFSClient: DataStreamer Exception\r\njava.io.IOException: Failed to replace a bad datanode on the existing pipeline due to no more good datanodes being available to try. (Nodes: current=[172.19.0.3:50010], original=[172.19.0.3:50010]). The current failed datanode replacement policy is DEFAULT, and a client may configure this via 'dfs.client.block.write.replace-datanode-on-failure.policy' in its configuration.\r\n\tat org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.findNewDatanode(DFSOutputStream.java:1036)\r\n\tat org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.addDatanode2ExistingPipeline(DFSOutputStream.java:1102)\r\n\tat org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.setupPipelineForAppendOrRecovery(DFSOutputStream.java:1249)\r\n\tat org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.run(DFSOutputStream.java:593)\r\nFSDataOutputStream#close error:\r\njava.io.IOException: Failed to replace a bad datanode on the existing pipeline due to no more good datanodes being available to try. (Nodes: current=[172.19.0.3:50010], original=[172.19.0.3:50010]). The current failed datanode replacement policy is DEFAULT, and a client may configure this via 'dfs.client.block.write.replace-datanode-on-failure.policy' in its configuration.\r\n\tat org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.findNewDatanode(DFSOutputStream.java:1036)\r\n\tat org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.addDatanode2ExistingPipeline(DFSOutputStream.java:1102)\r\n\tat org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.setupPipelineForAppendOrRecovery(DFSOutputStream.java:1249)\r\n\tat org.apache.hadoop.hdfs.DFSOutputStream$DataStreamer.run(DFSOutputStream.java:593)\r\nWARNING: Logging before InitGoogleLogging() is written to STDERR\r\nF1217 21:06:38.871151 25929 hdfs.cc:275]  Check failed: impl_->Close().ok() \r\n*** Check failure stack trace: ***\r\nAborted (core dumped)\r\n```",
        "created_at": "2018-12-18T03:07:52.000Z",
        "updated_at": "2018-12-21T01:08:03.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2018-12-21T01:08:03.000Z"
    },
    "comments": [
        {
            "created_at": "2018-12-18T03:16:14.768Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4058?focusedCommentId=16723621) by Wes McKinney (wesm):*\nAfter some Google searching I found that adding the `$ARROW_ROOT/integration/hdfs` directory to `$CLASSPATH` made the error go away\r\n\r\n```Java\n\r\n$ export CLASSPATH=/home/wesm/code/arrow/integration/hdfs:$CLASSPATH\r\n(arrow-dev) 21:14 ~/code/arrow/cpp/build  (ARROW-2919)$ ./debug/arrow-io-hdfs-testRunning main() from gtest_main.cc\r\n[==========] Running 24 tests from 2 test cases.\r\n[----------] Global test environment set-up.\r\n[----------] 12 tests from TestHadoopFileSystem/0, where TypeParam = arrow::io::JNIDriver\r\n[ RUN      ] TestHadoopFileSystem/0.ConnectsAgain\r\n[       OK ] TestHadoopFileSystem/0.ConnectsAgain (892 ms)\r\n[ RUN      ] TestHadoopFileSystem/0.MultipleClients\r\n[       OK ] TestHadoopFileSystem/0.MultipleClients (178 ms)\r\n[ RUN      ] TestHadoopFileSystem/0.MakeDirectory\r\n[       OK ] TestHadoopFileSystem/0.MakeDirectory (134 ms)\r\n[ RUN      ] TestHadoopFileSystem/0.GetCapacityUsed\r\n[       OK ] TestHadoopFileSystem/0.GetCapacityUsed (119 ms)\r\n[ RUN      ] TestHadoopFileSystem/0.GetPathInfo\r\n[       OK ] TestHadoopFileSystem/0.GetPathInfo (243 ms)\r\n[ RUN      ] TestHadoopFileSystem/0.AppendToFile\r\n[       OK ] TestHadoopFileSystem/0.AppendToFile (197 ms)\r\n[ RUN      ] TestHadoopFileSystem/0.ListDirectory\r\n[       OK ] TestHadoopFileSystem/0.ListDirectory (167 ms)\r\n[ RUN      ] TestHadoopFileSystem/0.ReadableMethods\r\n[       OK ] TestHadoopFileSystem/0.ReadableMethods (164 ms)\r\n[ RUN      ] TestHadoopFileSystem/0.LargeFile\r\n[       OK ] TestHadoopFileSystem/0.LargeFile (200 ms)\r\n[ RUN      ] TestHadoopFileSystem/0.RenameFile\r\n[       OK ] TestHadoopFileSystem/0.RenameFile (150 ms)\r\n[       OK ] TestHadoopFileSystem/0.ChmodChown (166 ms)\r\n[ RUN      ] TestHadoopFileSystem/0.ThreadSafety\r\n[       OK ] TestHadoopFileSystem/0.ThreadSafety (933 ms)\r\n[----------] 12 tests from TestHadoopFileSystem/0 (3544 ms total)\r\n\r\n[----------] 12 tests from TestHadoopFileSystem/1, where TypeParam = arrow::io::PivotalDriver\r\n[ RUN      ] TestHadoopFileSystem/1.ConnectsAgain\r\nLoading libhdfs3 failed, skipping tests gracefully. IOError: ../src/arrow/io/hdfs-internal.cc:566 code: try_dlopen(libhdfs3_potential_paths, \"libhdfs3\", shim->handle)\r\nUnable to load libhdfs3\r\nDriver not loaded, skipping\r\n[       OK ] TestHadoopFileSystem/1.ConnectsAgain (0 ms)\r\n[ RUN      ] TestHadoopFileSystem/1.MultipleClients\r\nLoading libhdfs3 failed, skipping tests gracefully. IOError: Prior attempt to load libhdfs3 failed\r\nDriver not loaded, skipping\r\n[       OK ] TestHadoopFileSystem/1.MultipleClients (0 ms)\r\n[ RUN      ] TestHadoopFileSystem/1.MakeDirectory\r\nLoading libhdfs3 failed, skipping tests gracefully. IOError: Prior attempt to load libhdfs3 failed\r\nDriver not loaded, skipping\r\n[       OK ] TestHadoopFileSystem/1.MakeDirectory (0 ms)\r\n[ RUN      ] TestHadoopFileSystem/1.GetCapacityUsed\r\nLoading libhdfs3 failed, skipping tests gracefully. IOError: Prior attempt to load libhdfs3 failed\r\nDriver not loaded, skipping\r\n[       OK ] TestHadoopFileSystem/1.GetCapacityUsed (0 ms)\r\n[ RUN      ] TestHadoopFileSystem/1.GetPathInfo\r\nLoading libhdfs3 failed, skipping tests gracefully. IOError: Prior attempt to load libhdfs3 failed\r\nDriver not loaded, skipping\r\n[       OK ] TestHadoopFileSystem/1.GetPathInfo (0 ms)\r\n[ RUN      ] TestHadoopFileSystem/1.AppendToFile\r\nLoading libhdfs3 failed, skipping tests gracefully. IOError: Prior attempt to load libhdfs3 failed\r\nDriver not loaded, skipping\r\n[       OK ] TestHadoopFileSystem/1.AppendToFile (0 ms)\r\n[ RUN      ] TestHadoopFileSystem/1.ListDirectory\r\nLoading libhdfs3 failed, skipping tests gracefully. IOError: Prior attempt to load libhdfs3 failed\r\nDriver not loaded, skipping\r\n[       OK ] TestHadoopFileSystem/1.ListDirectory (0 ms)\r\n[ RUN      ] TestHadoopFileSystem/1.ReadableMethods\r\nLoading libhdfs3 failed, skipping tests gracefully. IOError: Prior attempt to load libhdfs3 failed\r\nDriver not loaded, skipping\r\n[       OK ] TestHadoopFileSystem/1.ReadableMethods (0 ms)\r\n[ RUN      ] TestHadoopFileSystem/1.LargeFile\r\nLoading libhdfs3 failed, skipping tests gracefully. IOError: Prior attempt to load libhdfs3 failed\r\nDriver not loaded, skipping\r\n[       OK ] TestHadoopFileSystem/1.LargeFile (0 ms)\r\n[ RUN      ] TestHadoopFileSystem/1.RenameFile\r\nLoading libhdfs3 failed, skipping tests gracefully. IOError: Prior attempt to load libhdfs3 failed\r\nDriver not loaded, skipping\r\n[       OK ] TestHadoopFileSystem/1.RenameFile (0 ms)\r\n[ RUN      ] TestHadoopFileSystem/1.ChmodChown\r\nLoading libhdfs3 failed, skipping tests gracefully. IOError: Prior attempt to load libhdfs3 failed\r\nDriver not loaded, skipping\r\n[       OK ] TestHadoopFileSystem/1.ChmodChown (0 ms)\r\n[ RUN      ] TestHadoopFileSystem/1.ThreadSafety\r\nLoading libhdfs3 failed, skipping tests gracefully. IOError: Prior attempt to load libhdfs3 failed\r\nDriver not loaded, skipping\r\n[       OK ] TestHadoopFileSystem/1.ThreadSafety (0 ms)\r\n[----------] 12 tests from TestHadoopFileSystem/1 (0 ms total)\r\n\r\n[----------] Global test environment tear-down\r\n[==========] 24 tests from 2 test cases ran. (3545 ms total)\r\n[  PASSED  ] 24 tests.\r\n```\r\n\r\nThis is a serious rough edge for developers, and needs to be carefully documented so people can work on this code reliably"
        },
        {
            "created_at": "2018-12-18T16:09:57.945Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4058?focusedCommentId=16724205) by Krisztian Szucs (kszucs):*\nActually it requires https://github.com/apache/arrow/blob/master/integration/hdfs/hdfs-site.xml#L40-L43\r\nAnd to configure libhdfs and libhdfs3 with it: https://github.com/apache/arrow/blob/master/integration/hdfs/runtest.sh#L23-L24\r\n\r\n"
        },
        {
            "created_at": "2018-12-21T01:08:03.428Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4058?focusedCommentId=16726358) by Wes McKinney (wesm):*\nI'm closing since this is largely a documentation issue. I just wrote https://cwiki.apache.org/confluence/display/ARROW/HDFS+Filesystem+Support. Please correct any mistakes I made, and we can try to keep this up to date for developers as things change"
        }
    ]
}