{
    "issue": {
        "title": "[Rust][DataFusion] Support grouping on expressions",
        "body": "***Note**: This issue was originally created as [ARROW-12159](https://issues.apache.org/jira/browse/ARROW-12159). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nUsecase:\r\n\r\nI want to group based on time windows (as defined by the `date_trunc` function). \r\n\r\nFor example, given the table:\r\n\r\n```Java\n\r\n+------+-------------------+---------------------+-------------+------------------+-------------------+--------------+-----------+------------+---------------+-------------+--------------------+--------------------+\r\n| cpu  | host              | time                | usage_guest | usage_guest_nice | usage_idle        | usage_iowait | usage_irq | usage_nice | usage_softirq | usage_steal | usage_system       | usage_user         |\r\n+------+-------------------+---------------------+-------------+------------------+-------------------+--------------+-----------+------------+---------------+-------------+--------------------+--------------------+\r\n| cpu0 | MacBook-Pro.local | 1617130130000000000 | 0           | 0                | 65.30408773649165 | 0            | 0         | 0          | 0             | 0           | 18.444666002000673 | 16.251246261217506 |\r\n| cpu1 | MacBook-Pro.local | 1617130130000000000 | 0           | 0                | 84.43113772402216 | 0            | 0         | 0          | 0             | 0           | 3.193612774446795  | 12.37524950097282  |\r\n| cpu2 | MacBook-Pro.local | 1617130130000000000 | 0           | 0                | 65.96806387199344 | 0            | 0         | 0          | 0             | 0           | 15.469061876247794 | 18.56287425146831  |\r\n| cpu3 | MacBook-Pro.local | 1617130130000000000 | 0           | 0                | 84.0478564307993  | 0            | 0         | 0          | 0             | 0           | 3.0907278165770684 | 12.861415752863932 |\r\n| cpu4 | MacBook-Pro.local | 1617130130000000000 | 0           | 0                | 63.21036889281897 | 0            | 0         | 0          | 0             | 0           | 13.758723828377473 | 23.030907278223218 |\r\n| cpu5 | MacBook-Pro.local | 1617130130000000000 | 0           | 0                | 83.94815553242313 | 0            | 0         | 0          | 0             | 0           | 2.991026919231221  | 13.0608175473346   |\r\n| cpu6 | MacBook-Pro.local | 1617130130000000000 | 0           | 0                | 70.85828343276965 | 0            | 0         | 0          | 0             | 0           | 12.87425149699077  | 16.26746506987651  |\r\n| cpu7 | MacBook-Pro.local | 1617130130000000000 | 0           | 0                | 83.9321357287122  | 0            | 0         | 0          | 0             | 0           | 3.093812375243205  | 12.974051896176206 |\r\n| cpu8 | MacBook-Pro.local | 1617130130000000000 | 0           | 0                | 74.80079681313936 | 0            | 0         | 0          | 0             | 0           | 10.756972111708253 | 14.442231075949556 |\r\n| cpu9 | MacBook-Pro.local | 1617130130000000000 | 0           | 0                | 83.84845463618315 | 0            | 0         | 0          | 0             | 0           | 3.0907278165434624 | 13.060817547316466 |\r\n+------+-------------------+---------------------+-------------+------------------+-------------------+--------------+-----------+------------+---------------+-------------+--------------------+--------------------+\r\n\r\n```\r\n\r\nI want to be able to find the min and max usage time grouped by minute\r\n\r\n```Java\n\r\nselect \r\n  date_trunc('minute', cast (time as timestamp)), \r\n  min(usage_user), \r\n  max(usage_user) \r\nfrom\r\n  cpu \r\ngroup by \r\n  date_trunc('minute', cast (time as timestamp)), min(usage_user)\"\r\n```\r\n\r\nOr alternately\r\n\r\n```Java\n\r\nselect \r\n  date_trunc('minute', cast (time as timestamp)), \r\n  min(usage_user), \r\n  max(usage_user) \r\nfrom\r\n  cpu \r\ngroup by \r\n  1\r\n```\r\n\r\n\r\n\r\n```Java\nInstead as of now I get a planning error:\r\nError preparing query Error during planning: Projection references non-aggregate values\r\n```",
        "created_at": "2021-03-30T20:01:14.000Z",
        "updated_at": "2022-01-01T11:49:10.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Component: Rust - DataFusion",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-01-01T11:49:10.000Z"
    },
    "comments": [
        {
            "created_at": "2021-12-16T16:32:02.586Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12159?focusedCommentId=17460858) by Joris Van den Bossche (jorisvandenbossche):*\nShould this be moved to https://github.com/apache/arrow-rs/ or https://github.com/apache/arrow-datafusion?"
        },
        {
            "created_at": "2022-01-01T11:48:55.678Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12159?focusedCommentId=17467410) by Andrew Lamb (alamb):*\nYes this should have been in arrow-datafusion (or maybe it was even fixed while datafusion lived in the main arrow repo). And it turns out that this feature is already implemented, so closing this ticket. \r\n\r\n\r\n```Java\n\r\n\u276f select x + 1, sum(y) from foo group by x + 1;\r\n+---------------------+------------+\r\n| foo.x Plus Int64(1) | SUM(foo.y) |\r\n+---------------------+------------+\r\n| 2                   | 2          |\r\n+---------------------+------------+\r\n```"
        }
    ]
}