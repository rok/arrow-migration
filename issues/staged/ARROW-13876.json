{
    "issue": {
        "title": "[C++] Uniform null handling in compute functions",
        "body": "***Note**: This issue was originally created as [ARROW-13876](https://issues.apache.org/jira/browse/ARROW-13876). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe compute functions today have mixed support for null types.\r\n\r\nUnary arithmetic functions (e.g. abs) don't support null arrays\r\n\r\nBinary arithmetic functions (e.g. add) support one null array (e.g. int32 + null) but not both null arrays (i.e. null + null) but they do support both values being null (e.g. [null] + [null] = [null] if dtype=int32 but not supported if dtype=null)\r\n\r\nsort_indices should support null arrays.\r\n\r\nSome functions do forward null arrays:\r\n - unique\r\n\r\nSome functions output a non-null type given null inputs\r\n\r\n- is_null (=> boolean)\n- is_valid (=> boolean)\n- value_counts (=> struct)\n- dictionary_encode (=> dictionary<null>)\n- count (=> int64)\n  \n  \n  Some functions throw an error other than \"not implemented\"\n  \n   - list_parent_indices",
        "created_at": "2021-09-03T01:16:55.000Z",
        "updated_at": "2021-09-28T20:22:41.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-09-28T18:18:54.000Z"
    },
    "comments": [
        {
            "created_at": "2021-09-28T18:18:54.109Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13876?focusedCommentId=17421592) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 11255\n<https://github.com/apache/arrow/pull/11255>"
        }
    ]
}