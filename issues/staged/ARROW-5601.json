{
    "issue": {
        "title": "[gandiva] Error when projector with a string field",
        "body": "***Note**: This issue was originally created as [ARROW-5601](https://issues.apache.org/jira/browse/ARROW-5601). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nwhen I try to select a string field by\u00a0`gandiva`\u00a0projector, it failed with errors.\r\n```python\n\r\nimport pandas as pd\r\nimport pyarrow as pa\r\nfrom pyarrow import gandiva\r\n\r\na = pd.DataFrame({'col1': [\"asdf\", \"abc\"]})\r\ntb = pa.Table.from_pandas(a)\r\nteb = gandiva.TreeExprBuilder()\r\ncol1 = tb.schema[0]\r\nnode1 = teb.make_field(col1)\r\nexp1 = teb.make_expression(node1, col1)\r\ngandiva.make_projector(tb.schema, [exp1], pa.default_memory_pool())\r\n```\r\nRun the code above, it crashs with error like this:\r\n```bash\n\r\n\r\npython: ../lib/IR/Instructions.cpp:1202: void llvm::StoreInst::AssertOK(): Assertion `getOperand(0)->getType() == cast<PointerType>(getOperand(1)->getType())->getElementType() && \"Ptr must be a pointer to Val type!\"' failed. Aborted\r\n```",
        "created_at": "2019-06-14T04:35:37.000Z",
        "updated_at": "2019-06-14T14:11:37.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++ - Gandiva",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-06-14T14:11:30.000Z"
    },
    "comments": [
        {
            "created_at": "2019-06-14T05:06:04.938Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5601?focusedCommentId=16863693) by Praveen Kumar (praveenbingo):*\n`[~sunchenggen]` Gandiva does not yet support variable length output (which is what strings would be). Gandiva currently accepts memory allocated by the caller and since caller would not know how much memory to allocate for variable length output, we would need a callback mechanism to increase the memory allocated if it is not enough.\r\n\r\nWe are planning to pick this up soon - will keep you posted."
        },
        {
            "created_at": "2019-06-14T05:26:56.459Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5601?focusedCommentId=16863703) by Pindikura Ravindra (pravindra):*\nwe should be returning a proper status in this case too, instead of crashing."
        },
        {
            "created_at": "2019-06-14T05:54:00.459Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5601?focusedCommentId=16863714) by Pindikura Ravindra (pravindra):*\nThere is an existing Jira ARROW-3459 to add support for variable len output expressions in gandiva.\r\n\r\nI'll use this Jira to add a fix that gracefully fails such expressions (instead of crashing), till ARROW-3459 is fixed."
        },
        {
            "created_at": "2019-06-14T14:11:31.018Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5601?focusedCommentId=16864104) by Pindikura Ravindra (pravindra):*\nIssue resolved by pull request 4569\n<https://github.com/apache/arrow/pull/4569>"
        }
    ]
}