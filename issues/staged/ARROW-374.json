{
    "issue": {
        "title": "Python: clarify unicode vs. binary in API",
        "body": "***Note**: This issue was originally created as [ARROW-374](https://issues.apache.org/jira/browse/ARROW-374). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\npyarrow supports arrow's String type, arrow-internally represented as BINARY+UTF8 annotation.\n\nIn python 2, the pyarrow API accept both `unicode` and binary strings (`str`), where the latter are assumed to be utf-8 encoded. I find this approach problematic, because:\n \\* there is an implicit assumption that a binary `str` contains valid utf-8 data. This assumption can be wrong, however, and it's not clear what the consequences are of passing such \"invalid data\" to the API are.\n \\* the utf-8 assumption is not clearly documented  or otherwise visible from the API\n \\* if pyarrow wants to support pure binary data in the future, a natural choice would be to use `str` as python2 type. However, this would conflict with the current interpretation of binary `str` as BINARY+UTF8\n\n\n**Proposed solution**\nI propose to change the API that it only accepts or returns unicode strings, i.e. python2's `unicode` and python3's `str`. Passing a python2 `str` should raise an exception, same for python3's `bytes`.\nIf in some point in the future also raw BINARY is supported, use python3's `bytes` and python2's `str`.\n\nAs convenience feature for API users, the API may allow to also pass utf-8 encoded binary data as arrow's String, but that should be an explicit, opt-in choice, s.t. API users are aware of the (encoding-)assumptions made.",
        "created_at": "2016-11-09T07:27:39.000Z",
        "updated_at": "2017-02-13T16:34:34.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2016-12-21T08:32:15.000Z"
    },
    "comments": [
        {
            "created_at": "2016-12-20T18:57:16.878Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-374?focusedCommentId=15764951) by Wes McKinney (wesm):*\nBinary type is already supported in the Arrow C++ API. I suggest that we convert arrays of PyBytes to `arrow::BinaryArray` instead of `arrow::StringArray`. For proper Unicode (Python 3 str or Python 2 unicode), we encode as UTF-8 on array construction"
        },
        {
            "created_at": "2016-12-20T19:43:46.938Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-374?focusedCommentId=15765071) by Wes McKinney (wesm):*\nPR: https://github.com/apache/arrow/pull/249\n\nSummary: bytes are bytes, unicode is unicode. We will make no wishful assumptions or guesses"
        },
        {
            "created_at": "2016-12-21T08:32:15.190Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-374?focusedCommentId=15766469) by Uwe Korn (uwe):*\nIssue resolved by pull request 249\n<https://github.com/apache/arrow/pull/249>"
        }
    ]
}