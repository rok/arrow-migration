{
    "issue": {
        "title": "[C++] Implement take kernel functions",
        "body": "***Note**: This issue was originally created as [ARROW-772](https://issues.apache.org/jira/browse/ARROW-772). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nAmong other things, this can be used to convert from DictionaryArray back to dense array. This is equivalent to `ndarray.take` in NumPy",
        "created_at": "2017-04-06T03:41:29.000Z",
        "updated_at": "2019-08-05T18:31:34.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-08-05T18:31:34.000Z"
    },
    "comments": [
        {
            "created_at": "2018-01-25T21:33:41.370Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-772?focusedCommentId=16340119) by Jingyuan Wang (alphalfalfa):*\nI'll take a stab at this one and get familiar with c++ code."
        },
        {
            "created_at": "2018-01-25T22:48:36.918Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-772?focusedCommentId=16340235) by Wes McKinney (wesm):*\nOK, this is a pretty good sized project. You can start with supporting any signed integer\u00a0indices to start. I suggest using the functor implementation approach used with cast since a particular take kernel will depend on 2 types (the value type and index type).\r\n\r\nYou're also welcome to create sub-JIRAs if you'd like to handle primitive arrays, string/binary arrays, and nested arrays in separate patches to keep the size of the patches (and number of test cases to write) smaller\r\n\r\nSome other notes off the top of my head:\r\n \\* In some cases, indices may be negative (e.g. `arr.take([-4, -3, -2, -1, 0])` selects the last 5 elements of a NumPy arrays in reverse order), but negative indexing could be handled in follow up work\r\n \\* Out of bounds indices could either yield null in the output array or cause an error, eventually we want to support both\r\n\r\n \\* If the indices have a null, so should the output"
        },
        {
            "created_at": "2018-02-03T21:45:02.468Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-772?focusedCommentId=16351535) by Jingyuan Wang (alphalfalfa):*\nOne question popped up after I started to implement the basic support of signed integers. I was mostly following the only-two existing cast and hash kernels. Take kernel would need to take some type of indices, either single integer or array of integers. I am wondering, should the kernel still be an UnaryKernel or the indices should be considered as a second input?"
        },
        {
            "created_at": "2018-02-04T00:47:36.723Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-772?focusedCommentId=16351591) by Wes McKinney (wesm):*\n`UnaryKernel` is a convenience for functions of one argument. I am not sure what will be the right structure long term, but for the moment I believe it should be to pass the arguments as a `Datum` with the `COLLECTION` type (possibly to be renamed later to \"SEQUENCE\") https://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/kernel.h#L53"
        },
        {
            "created_at": "2019-07-04T19:53:35.274Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-772?focusedCommentId=16878872) by Joris Van den Bossche (jorisvandenbossche):*\n`[~bkietz]` all mentioned subtasks here are resolved. Are there more \"take\" tasks, or can this issue be closed?"
        },
        {
            "created_at": "2019-07-06T19:36:53.097Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-772?focusedCommentId=16879741) by Wes McKinney (wesm):*\nI think unions remain. Is there a JIRA about that already?"
        },
        {
            "created_at": "2019-08-05T18:31:24.764Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-772?focusedCommentId=16900296) by Ben Kietzman (bkietz):*\nTake against UnionArrays has been resolved: https://issues.apache.org/jira/browse/ARROW-5594"
        }
    ]
}