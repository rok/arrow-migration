{
    "issue": {
        "title": "[R] Error: This build of the arrow package does not support Datasets",
        "body": "***Note**: This issue was originally created as [ARROW-15072](https://issues.apache.org/jira/browse/ARROW-15072). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nHello,\r\n\r\nI would like to report a possible issue (or I did not grasp the documentation and I apologize in advance)\r\n\r\nIm trying to use R with arrow on docker in {**}order to read parquet files from s3{**}:\r\n\r\n\u00a0\r\n```java\n\r\nFROM rocker/r-base:4.1.2\r\n\r\n# TO READ FROM S3\r\nRUN apt update -qq \\    \r\n    && apt install -t unstable -y --no-install-recommends \\    \r\n       libcurl4-openssl-dev \r\n\r\nENV LIBARROW_MINIMAL false\r\n\r\nRUN apt update && \\    \r\n    apt install -y -V ca-certificates lsb-release wget && \\    \r\n    wget \"https://apache.jfrog.io/artifactory/arrow/$(lsb_release --id --short | tr 'A-Z' 'a-z')/apache-arrow-  apt-source-latest-$(lsb_release --codename --short).deb\" && \\    \r\n    apt install -y -V ./apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb\r\n\r\nRUN apt update && \\    \r\n     apt install -y -V -f \\        \r\n     libarrow-dev \\        \r\n     libarrow-dataset-dev \\        \r\n     libarrow-glib-dev \\        \r\n     libarrow-flight-dev \\        \r\n     libparquet-dev \\        \r\n     libparquet-glib-dev\r\n\r\nRUN install2.r --error \\    \r\n      arrow\n```\r\nThats the output of sessionInfo from the container running R\r\n\r\n\u00a0\r\n```java\n\r\nsessionInfo()\r\nR version 4.1.2 (2021-11-01)\r\nPlatform: x86_64-pc-linux-gnu (64-bit)\r\nRunning under: Debian GNU/Linux 11 (bullseye)Matrix products: default\r\nBLAS: \u00a0 /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3\r\nLAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.18.solocale:\r\n\u00a0[1] LC_CTYPE=en_US.UTF-8 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0LC_NUMERIC=C \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\r\n\u00a0[3] LC_TIME=en_US.UTF-8 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 LC_COLLATE=en_US.UTF-8 \u00a0 \u00a0 \u00a0\u00a0\r\n\u00a0[5] LC_MONETARY=en_US.UTF-8 \u00a0 \u00a0 \u00a0 LC_MESSAGES=en_US.UTF-8 \u00a0 \u00a0 \u00a0\r\n\u00a0[7] LC_PAPER=en_US.UTF-8 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0LC_NAME=en_US.UTF-8 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\r\n\u00a0[9] LC_ADDRESS=en_US.UTF-8 \u00a0 \u00a0 \u00a0 \u00a0LC_TELEPHONE=en_US.UTF-8 \u00a0 \u00a0\u00a0\r\n[11] LC_MEASUREMENT=en_US.UTF-8 \u00a0 \u00a0LC_IDENTIFICATION=en_US.UTF-8attached base packages:\r\n[1] stats \u00a0 \u00a0 graphics \u00a0grDevices utils \u00a0 \u00a0 datasets \u00a0methods \u00a0 base \u00a0 \u00a0\u00a0other attached packages:\r\n[1] arrow_6.0.1 DBI_1.1.1 \u00a0loaded via a namespace (and not attached):\r\n\u00a0[1] tidyselect_1.1.1 \u00a0 bit_4.0.4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0compiler_4.1.2 \u00a0 \u00a0 magrittr_2.0.1 \u00a0 \u00a0\r\n\u00a0[5] assertthat_0.2.1 \u00a0 R6_2.5.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 tools_4.1.2 \u00a0 \u00a0 \u00a0 \u00a0glue_1.5.1 \u00a0 \u00a0 \u00a0 \u00a0\r\n\u00a0[9] bit64_4.0.5 \u00a0 \u00a0 \u00a0 \u00a0vctrs_0.3.8 \u00a0 \u00a0 \u00a0 \u00a0RJDBC_0.2-8 \u00a0 \u00a0 \u00a0 \u00a0rlang_0.4.12 \u00a0 \u00a0 \u00a0\r\n[13] rJava_1.0-5 \u00a0 \u00a0 \u00a0 \u00a0AWR.Athena_2.0.7-0 purrr_0.3.4 \u00a0 \u00a0\u00a0 \n```\r\nAnd as far as I understand,\u00a0 all requierements are fulfilled to use datasets\r\n\r\nR version 4.1.2\r\n\r\nPlatform: x86_64-pc-linux-gnu (64-bit)\r\n\r\narrow_6.0.1\r\n\r\n\u00a0\r\n```java\n\r\n> .Machine$sizeof.pointer < 8\r\n[1] FALSE\r\n> getRversion() < \"4.0.0\"\r\n[1] FALSE\r\n> tolower(Sys.info()[[\"sysname\"]]) == \"windows\"\r\n[1] FALSE\r\n>\u00a0 \n```\r\nNevertheless I get\u00a0\r\n\r\nError: This build of the arrow package does not support Datasets\r\n\r\nin return when\r\n```java\n\r\narrow::open_dataset(sources = path) \n```\r\nAppreciate any help!",
        "created_at": "2021-12-11T09:08:41.000Z",
        "updated_at": "2021-12-15T06:05:08.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Parquet",
            "Component: R",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-12-15T06:05:08.000Z"
    },
    "comments": [
        {
            "created_at": "2021-12-13T16:02:15.085Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15072?focusedCommentId=17458503) by Will Jones (willjones127):*\nWhen you install the arrow R package on linux, it defaults to a minimal installation. To install optional components you'll need to set some environment variables indicating which to build. For a simple fix, add `ENV LIBARROW_MINIMAL false` to your dockerfile. Other environment variables are covered [at the bottom of Installing the Arrow package on Linux](https://arrow.apache.org/docs/r/articles/install.html#summary-of-build-environment-variables).\r\n\r\nYou shouldn't strictly need those lines using apt to install arrow libraries; the R package will build the Arrow libraries from source. If you did want to use those binaries, the install script for the R package might automatically discover them, but I haven't tested that. (When I tried running your dockerfile it failed on one of those `apt install` commands.)"
        },
        {
            "created_at": "2021-12-13T16:10:09.049Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15072?focusedCommentId=17458505) by Jonathan Keane (jonkeane):*\nSeconding `[~willjones127]`'s suggestions here. Additionally, if you run into trouble implementing those, you might also set `ARROW_R_DEV=true` which will increase the verbosity of the logging during the install process.\r\n\r\n"
        },
        {
            "created_at": "2021-12-13T22:44:47.808Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15072?focusedCommentId=17458777) by hu geme (hugeme):*\nHi `[~willjones127]`, `[~jonkeane]` \u00a0 thx you for your comment. I have adjusted the Dockerfile and replaced one of those `apt install` commands, which might not have worked on your machine. I tried your suggestion by adding\u00a0\r\nENV LIBARROW_MINIMAL false\r\nto the Dockerfile, which did not solve the problem of using Datasets. Additionally, I ran install_arrow(binary = FALSE, minimal = FALSE) as well in the container. However, I was not able to use Datasets here as well which resulted in the same error. I guess, Im missing something here, though it seems not self explanatory to me :)\r\n\r\nBest & Big Thx"
        },
        {
            "created_at": "2021-12-13T22:49:59.897Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15072?focusedCommentId=17458780) by Will Jones (willjones127):*\nThanks for updating the dockerfile. I'll try to reproduce, but in the meantime could you also provide the output of the R command `{}arrow_info(){`}?"
        },
        {
            "created_at": "2021-12-13T23:08:55.802Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15072?focusedCommentId=17458786) by hu geme (hugeme):*\n```java\n\r\n> arrow_info()\r\nArrow package version: 6.0.1Capabilities:\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\r\ndataset \u00a0 FALSE\r\nparquet \u00a0 FALSE\r\njson \u00a0 \u00a0 \u00a0FALSE\r\ns3 \u00a0 \u00a0 \u00a0 \u00a0FALSE\r\nutf8proc \u00a0 TRUE\r\nre2 \u00a0 \u00a0 \u00a0 \u00a0TRUE\r\nsnappy \u00a0 \u00a0 TRUE\r\ngzip \u00a0 \u00a0 \u00a0 TRUE\r\nbrotli \u00a0 \u00a0 TRUE\r\nzstd \u00a0 \u00a0 \u00a0 TRUE\r\nlz4 \u00a0 \u00a0 \u00a0 \u00a0TRUE\r\nlz4_frame \u00a0TRUE\r\nlzo \u00a0 \u00a0 \u00a0 FALSE\r\nbz2 \u00a0 \u00a0 \u00a0 \u00a0TRUE\r\njemalloc \u00a0 TRUE\r\nmimalloc \u00a0 TRUETo reinstall with more optional capabilities enabled, see\r\n\u00a0 \u00a0https://arrow.apache.org/docs/r/articles/install.htmlMemory:\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\r\nAllocator jemalloc\r\nCurrent \u00a0 \u00a00 bytes\r\nMax \u00a0 \u00a0 \u00a0 \u00a00 bytesRuntime:\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\r\nSIMD Level \u00a0 \u00a0 \u00a0 \u00a0 \u00a0avx2\r\nDetected SIMD Level avx2Build:\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\r\nC++ Library Version \u00a0 6.0.1\r\nC++ Compiler \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0GNU\r\nC++ Compiler Version 10.2.1 \n```\r\nIs it safe to assume that LIBARROW_MINIMAL false should result in dataset true, parquet true, s3 true? since that is the whole point of using this awesome package"
        },
        {
            "created_at": "2021-12-14T00:14:58.090Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15072?focusedCommentId=17458823) by Will Jones (willjones127):*\nYes, LIBARROW_MINIMAL false should mean dataset is included. I don't seem to have access to that jfrog repo; I get 404 trying to download the deb file.\r\n\r\nI was able to build this dockerfile:\r\n\r\n```Java\n\r\nFROM rocker/r-base:4.1.2\r\n\r\n# TO READ FROM S3\r\nRUN apt update -qq \\    \r\n    && apt install -t unstable -y --no-install-recommends \\    \r\n       libcurl4-openssl-dev \r\n\r\nENV LIBARROW_MINIMAL false\r\nENV ARROW_DEV true\r\n\r\nRUN install2.r --error \\    \r\n      arrow\r\n```\r\n\r\nAnd here is what I got from `arrow_info()`:\r\n\r\n```Java\n\r\nArrow package version: 6.0.1\r\n\r\nCapabilities:\r\n               \r\ndataset    TRUE\r\nparquet    TRUE\r\njson       TRUE\r\ns3        FALSE\r\nutf8proc   TRUE\r\nre2        TRUE\r\nsnappy     TRUE\r\ngzip       TRUE\r\nbrotli     TRUE\r\nzstd       TRUE\r\nlz4        TRUE\r\nlz4_frame  TRUE\r\nlzo       FALSE\r\nbz2        TRUE\r\njemalloc   TRUE\r\nmimalloc   TRUE\r\n```\r\n\r\nS3 failed on mine because it was missing SSL libraries. There were likely some sort of errors in linking to the downloaded dataset and parquet binaries during your build.\r\n\r\nI recommend you build again with flags `--no-cache --progress=plain` and adding the environment variable `ARROW_DEV true`, and pipe the results to a log file. That should look something like `docker build --no-cache --progress=plain . > build.log`. We should then be able to see what went wrong in that log file."
        },
        {
            "created_at": "2021-12-14T20:17:29.075Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15072?focusedCommentId=17459457) by hu geme (hugeme):*\nHi `[~willjones127]` thx alot for putting your time into it. Just a small feedback. Running your dockerfile on MAC OSX 11.6.1 results in\r\n\r\n\u00a0\r\n\r\n#7 451.8 make[2]: \\*\\*\\* [CMakeFiles/awssdk_ep.dir/build.make:132: awssdk_ep-prefix/src/awssdk_ep-stamp/awssdk_ep-build] Error 1\r\n#7 451.8 make[1]: \\*\\*\\* [CMakeFiles/Makefile2:760: CMakeFiles/awssdk_ep.dir/all] Error 2\r\n#7 451.8 gmake: \\*\\*\\* [Makefile:160: all] Error 2\r\n#7 451.8 \\*\\*\\*\\* Error building Arrow C++. \u00a0\r\n#7 457.3 ------------------------- NOTE ---------------------------\r\n#7 457.3 There was an issue preparing the Arrow C++ libraries.\r\n#7 457.3 See <https://arrow.apache.org/docs/r/articles/install.html>\r\n#7 457.3 ---------------------------------------------------------\r\n#7 457.5 ERROR: configuration failed for package \u2018arrow\u2019\r\n#7 457.6 \\* removing \u2018/usr/local/lib/R/site-library/arrow\u2019\r\n#7 458.2\u00a0\r\n#7 458.2 The downloaded source packages are in\r\n#7 458.2 \u00a0 \u00a0 \u00a0 \u00a0\u2018/tmp/downloaded_packages\u2019\r\n#7 458.2 Error: installation of package \u2018arrow\u2019 had non-zero exit status\r\n#7 458.2 In addition: Warning message:\r\n#7 458.2 In install.packages(pkgs, ...) :\r\n#7 458.2 \u00a0 installation of package \u2018arrow\u2019 had non-zero exit status\r\n#7 ERROR: executor failed running [/bin/sh -c install2.r --error \u00a0 \u00a0 \u00a0 arrow]: exit code: 1\r\n\r\nHowever, same runs with without any issues on Ubuntu 18.04.6 LTS (GNU/Linux 5.4.0-1053-gcp x86_64).\u00a0\r\n\r\nAfter modifying the dockerfile as following it seems to work on MAC OSX 11.6.1, though I do not know why :)\r\n```java\n\r\nFROM rocker/r-base:4.1.2\r\n\r\n# TO READ FROM S3\r\nRUN apt update -qq \\    \r\n    && apt install -t unstable -y --no-install-recommends \\    \r\n       libcurl4-openssl-dev \r\n\r\nENV LIBARROW_MINIMAL false\r\nENV ARROW_DEV true \u00a0\r\n\r\nENV LIBARROW_BINARY true\r\nRUN R -e \"install.packages('arrow', type = 'source')\"\n```\r\nthx alot! I will close that story and my apologies to categorise it as a bug"
        }
    ]
}