{
    "issue": {
        "title": "Reusing arrow.so for both Python and R",
        "body": "***Note**: This issue was originally created as [ARROW-4316](https://issues.apache.org/jira/browse/ARROW-4316). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nMy team uses both pyarrow and R arrow, we'd like both libraries to link to the same arrow.so file for consistency. pyarrow ships both arrow.so and parquet.so, if I can\u00a0reuse those .so's\u00a0to\u00a0\u00a0link R that would guarantee consistency.\u00a0\r\n Under arrow v0.11.1 I was able to link R against libarrow.so found under pyarrow by passing LIB_DIR to the R\u00a0[configure file](https://github.com/apache/arrow/blob/master/r/configure). However, in v0.12.0 I am no longer able to do that. Here is a reproducible example on Ubuntu 16.04 which produces the error:\r\n\r\n\r\n\r\n\u00a0\r\n```java\n\r\nsh: line 1: 5404 Segmentation fault (core dumped) '/usr/lib/R/bin/R' --no-save --slave 2>&1 < '/tmp/RtmpyOuz4g/file14716feda8fc'\r\n*** caught segfault ***\r\naddress 0x7f160f026250, cause 'invalid permissions'\r\nAn irrecoverable exception occurred. R is aborting now ...\r\n```\r\n\u00a0\r\n\r\n\r\n\r\n Reproducible example:\r\n```java\n\r\n# get the parquet headers which are not shipped with pyarrow\r\n \u00a0\r\ntee /etc/apt/sources.list.d/apache-arrow.list <<APT_LINE\r\ndeb [arch=amd64] https://dl.bintray.com/apache/arrow/$(lsb_release --id --short | tr 'A-Z' 'a-z')/ $(lsb_release --codename --short) main\r\ndeb-src [] https://dl.bintray.com/apache/arrow/$(lsb_release --id --short | tr 'A-Z' 'a-z')/ $(lsb_release --codename --short) main\r\nAPT_LINE\r\napt-get update\r\nmkdir /tmp/arrow_headers; cd /tmp/arrow_headers\r\napt-get download --allow-unauthenticated libparquet-dev\r\nar -x libparquet-dev_0.12.0-1_amd64.deb\r\ntar -xJvf data.tar.xz\r\n \u00a0\r\n #get pyarrow v0.12\r\n \u00a0\r\n pip3 install pyarrow --upgrade\r\n #figure out where pyarrow is\r\n PY_ARROW_PATH=$(python3 -c \"import pyarrow, os; print(os.path.dirname(pyarrow.__file__))\")\r\n PY_ARROW_VERSION=$(python3 -c \"import pyarrow; print(pyarrow.__version__)\")\r\n PYTHON_LIBDIR=$(python3 -c \"import sysconfig; print(sysconfig.get_config_var('LIBDIR'))\")\r\n \u00a0\r\n\r\n# pyarrow doesn't ship parquet headers. Copy the ones from apt into the pyarrow dir\r\n mkdir $PY_ARROW_PATH/include/parquet\r\n cp -r /tmp/arrow_headers/usr/include/parquet/* $PY_ARROW_PATH/include/parquet/\r\n \u00a0\r\n #install R arrow\r\n echo \"export LD_LIBRARY_PATH=\\\"\\${LD_LIBRARY_PATH}:${PYTHON_LIBDIR}:${PY_ARROW_PATH}\\\"\" | tee -a /usr/lib/R/etc/ldpaths\r\n git clone https://github.com/apache/arrow.git /tmp/arrow\r\n cd /tmp/arrow/r\r\n git checkout \"apache-arrow-${PY_ARROW_VERSION}\"\r\n sed -i \"/Depends: R/c\\Depends: R (>= 3.4)\" DESCRIPTION\r\n sed -i \"s/PKG_CXXFLAGS=/PKG_CXXFLAGS=-D_GLIBCXX_USE_CXX11_ABI=0 /g\" src/Makevars.in\r\n R CMD INSTALL ./ --configure-vars=\"INCLUDE_DIR=$PY_ARROW_PATH/include LIB_DIR=$PY_ARROW_PATH\" \n```",
        "created_at": "2019-01-22T04:32:36.000Z",
        "updated_at": "2022-08-27T14:42:08.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Component: R",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-08-15T21:03:05.000Z"
    },
    "comments": [
        {
            "created_at": "2019-01-22T05:49:47.408Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4316?focusedCommentId=16748403) by Jeffrey Wong (jeffreyw):*\nI just built arrow 0.12.0 from github using the tag\u00a0apache-arrow-0.12.0. I compiled arrow with the flags\r\n\r\n\r\ncmake .. -DCMAKE_BUILD_TYPE=Release -DARROW_PARQUET=ON\u00a0-DARROW_PYTHON=ON\r\nmake install\r\n\r\nwhich produces the .so files in /usr/local/lib. I noticed that the libarrow.so file is 8.3 Mb, but the one that is shipped with\u00a0pyarrow is 9.7 Mb. What else is inside pyarrow's .so files? When I link against the .so's from github (and remove the command\u00a0\r\nsed -i \"s/PKG_CXXFLAGS=/PKG_CXXFLAGS=-D_GLIBCXX_USE_CXX11_ABI=0 /g\" src/Makevars.infrom my script) the R package will build successfully. To debug further, I think I need to know the difference between the .so files in pyarrow and the .so files that are built from source"
        },
        {
            "created_at": "2019-01-22T09:29:31.369Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4316?focusedCommentId=16748537) by Uwe Korn (uwe):*\n`pyarrow` also includes more features than mentioned in your CMake commandline like reading ORC files. This should explain the size difference. Have a look at <https://github.com/apache/arrow/blob/30422478cae9b55cb79b29115c43be683b9eb277/python/manylinux1/build_arrow.sh#L72> on how we build the `libarrow.so` for the pyarrow wheels.\r\n\r\nIn general our approach of using the same `libarrow.so` probably will only work when you use the same package manager for `pyarrow` and Arrow's R implementation. This could be solved in future by providing conda-forge packages for both (I'm aware that conda is not that spread in the R ecosystem).\r\n\r\nFor the segmentation fault, can you provide a backtrace, e.g. by running and pasting the output of\r\n```java\n\r\n# ulimit -c unlimited\r\n# /usr/lib/R/bin/R <your R code>\r\nSegmentation fault (core dumped).\r\n# gdb /usr/lib/R/bin/R core\r\ngdb> thread apply all bt full\n```"
        },
        {
            "created_at": "2019-01-22T16:39:45.266Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4316?focusedCommentId=16748893) by Jeffrey Wong (jeffreyw):*\nThanks Uwe, here is the output, though it looks like there are no debug symbols loaded.\r\n\r\nSecond glance: there is a reference to the address\u00a0\r\n0x0000000000000000\r\n\u00a0does that mean it tried to reference something\u00a0that didn't exist?\r\n```java\n\r\nGNU gdb (Ubuntu 7.11.1-0ubuntu1~16.5) 7.11.1\r\nCopyright (C) 2016 Free Software Foundation, Inc.\r\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\r\nThis is free software: you are free to change and redistribute it.\r\nThere is NO WARRANTY, to the extent permitted by law. Type \"show copying\"\r\nand \"show warranty\" for details.\r\nThis GDB was configured as \"x86_64-linux-gnu\".\r\nType \"show configuration\" for configuration details.\r\nFor bug reporting instructions, please see:\r\n<http://www.gnu.org/software/gdb/bugs/>.\r\nFind the GDB manual and other documentation resources online at:\r\n<http://www.gnu.org/software/gdb/documentation/>.\r\nFor help, type \"help\".\r\nType \"apropos word\" to search for commands related to \"word\"...\r\n\"/usr/bin/R\": not in executable format: File format not recognized\r\n[New LWP 17272]\r\nCore was generated by `/usr/lib/R/bin/exec/R --no-save --slave'.\r\nProgram terminated with signal SIGSEGV, Segmentation fault.\r\n#0 0x00007fc5f54b6250 in ?? ()\r\n(gdb) thread apply all bt full\r\nThread 1 (LWP 17272):\r\n#0 0x00007fc5f54b6250 in ?? ()\r\nNo symbol table info available.\r\n#1 0x00007fc5f49e5b19 in ?? ()\r\nNo symbol table info available.\r\n#2 0x0000000000000000 in ?? ()\r\nNo symbol table info available.\r\n```\r\n\u00a0"
        },
        {
            "created_at": "2019-08-15T21:03:05.845Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4316?focusedCommentId=16908476) by Neal Richardson (npr):*\nhttps://issues.apache.org/jira/browse/ARROW-5956\u00a0looks to be a more contemporary request of the same thing, so closing in favor of that one."
        },
        {
            "created_at": "2022-08-27T14:42:08.344Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4316?focusedCommentId=17586061) by @toddfarmer:*\nTransitioning issue from Resolved to Closed to based on resolution field value."
        }
    ]
}