{
    "issue": {
        "title": "[C++][Gandiva] Fix gandiva crash in certain OS/CPU combinations",
        "body": "***Note**: This issue was originally created as [ARROW-12154](https://issues.apache.org/jira/browse/ARROW-12154). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen running gandiva in a VM where the VM doesn't provide all the features of the host cpu,\u00a0specifically vector instructions like avx512 which needs vm support (because VM is older version and doesn't support them, or passthrough is disabled for these features), llvm::sys::getHostCPUName detects the processor with these features and so gandiva generates jit compiled code with these vector instructions, which the guest OS is unable to execute and hence faults.",
        "created_at": "2021-03-30T16:40:54.000Z",
        "updated_at": "2021-04-07T14:53:15.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++ - Gandiva",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-04-07T14:53:06.000Z"
    },
    "comments": [
        {
            "created_at": "2021-04-07T14:53:06.611Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12154?focusedCommentId=17316394) by Praveen Kumar (praveenbingo):*\nIssue resolved by pull request 9852\n<https://github.com/apache/arrow/pull/9852>"
        }
    ]
}