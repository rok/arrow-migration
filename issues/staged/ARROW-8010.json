{
    "issue": {
        "title": "[Python] Fixed size list not convertible to Numpy Array / pandas Series",
        "body": "***Note**: This issue was originally created as [ARROW-8010](https://issues.apache.org/jira/browse/ARROW-8010). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nFixed size list of base types (i.e. int, float, ...) are not convertible to Numpy array.\r\n\r\nThe following code:\r\n```java\n\r\nimport pyarrow as pa\r\n\r\nt = pa.list_(pa.float32(), 2)\r\narr = pa.array([[1, 2], [3, 4], [5, 6]], type=t)\r\narr.to_numpy()\n```\r\nraises a not implemented Arrow error as there is no Pandas block equivalent.\r\n\r\nIt sounds reasonable that the conversion to Pandas fails, but I would expect a natural conversion to Numpy Array, as according to the Fixed Size List Layout (<https://arrow.apache.org/docs/format/Columnar.html#>), the former could be mapped to a 2-dimensional row major matrix (e.g. 3x2 in the previous example).\r\n\r\nNote we can get the expected result by working around using flatten:\r\n```java\n\r\narr.flatten().to_numpy().reshape((-1, t.list_size))\n```\r\nThis form of memory representation is quite natural if ones wants to use Apache Arrow for in-memory collection of 2D/3D points, where we wish to have coordinates contiguous in memory.",
        "created_at": "2020-03-05T14:14:43.000Z",
        "updated_at": "2020-03-16T09:31:24.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-03-10T11:17:08.000Z"
    },
    "comments": [
        {
            "created_at": "2020-03-10T11:16:52.810Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8010?focusedCommentId=17055833) by Joris Van den Bossche (jorisvandenbossche):*\n`[~balancap]` Thanks for the report! \r\n\r\nI think for pandas, the natural conversion is to an object series of arrays (as we already support for the variable sized ListArray). \r\nFor numpy, although it could be represented as a 2D array, this would be surprising since pyarrow arrays are 1D arrays, so also here we should probably convert to the less efficient object array of numpy arrays.\r\n\r\nClosing as a duplicate of ARROW-7365, so let's continue discussion there."
        },
        {
            "created_at": "2020-03-16T09:31:24.144Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8010?focusedCommentId=17060064) by Paul Balanca (balancap):*\nThanks for the quick answer. Sorry I did not notice first it was already existing."
        }
    ]
}