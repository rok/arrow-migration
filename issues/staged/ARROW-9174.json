{
    "issue": {
        "title": "[Go] Tests panic with 386 (x86) builds",
        "body": "***Note**: This issue was originally created as [ARROW-9174](https://issues.apache.org/jira/browse/ARROW-9174). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe ExampleTable test panics:\r\n\r\n```bash\n\r\n$ GOOS=linux GOARCH=386 go test ./...      \r\n--- FAIL: Example_table (0.00s)\r\npanic: runtime error: invalid memory address or nil pointer dereference\r\n        panic: runtime error: invalid memory address or nil pointer dereference [recovered]\r\n        panic: runtime error: invalid memory address or nil pointer dereference\r\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x82a559d]\r\n\r\ngoroutine 1 [running]:\r\ntesting.(*InternalExample).processRunResult(0x9447eb0, 0x0, 0x0, 0x9168, 0x0, 0x8300800, 0x85b13f8, 0x1)\r\n        /usr/local/go/src/testing/example.go:89 +0x51f\r\ntesting.runExample.func2(0xe4ba5208, 0xbfb2ff3b, 0x2d8995, 0x0, 0x85b7bc0, 0x940fca0, 0x940e0d8, 0x94d73c0, 0x948aeb0, 0x9447ec8)\r\n        /usr/local/go/src/testing/run_example.go:58 +0xd9\r\npanic(0x8300800, 0x85b13f8)\r\n        /usr/local/go/src/runtime/panic.go:969 +0x122\r\ngithub.com/apache/arrow/go/arrow/array.(*Chunked).Release(0x0)\r\n        /home/kbrandt/go/github.com/apache/arrow/go/arrow/array/table.go:141 +0x1d\r\ngithub.com/apache/arrow/go/arrow/array.(*Column).Release(...)\r\n        /home/kbrandt/go/github.com/apache/arrow/go/arrow/array/table.go:76\r\ngithub.com/apache/arrow/go/arrow/array.NewTableFromRecords.func1(0x9495740, 0x2, 0x2)\r\n        /home/kbrandt/go/github.com/apache/arrow/go/arrow/array/table.go:258 +0x37\r\npanic(0x8300800, 0x85b13f8)\r\n        /usr/local/go/src/runtime/panic.go:969 +0x122\r\nruntime/internal/atomic.Xadd64(0x94d389c, 0x1, 0x0, 0x1, 0x0)\r\n        /usr/local/go/src/runtime/internal/atomic/asm_386.s:105 +0xc\r\ngithub.com/apache/arrow/go/arrow/array.(*Chunked).Retain(...)\r\n        /home/kbrandt/go/github.com/apache/arrow/go/arrow/array/table.go:134\r\ngithub.com/apache/arrow/go/arrow/array.NewColumn(0x8342542, 0x6, 0x83b8ff0, 0x85c8840, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, ...)\r\n        /home/kbrandt/go/github.com/apache/arrow/go/arrow/array/table.go:56 +0x91\r\ngithub.com/apache/arrow/go/arrow/array.NewTableFromRecords(0x94d35c0, 0x9447d74, 0x2, 0x2, 0x0)\r\n        /home/kbrandt/go/github.com/apache/arrow/go/arrow/array/table.go:268 +0x1a0\r\ngithub.com/apache/arrow/go/arrow_test.Example_table()\r\n        /home/kbrandt/go/github.com/apache/arrow/go/arrow/example_test.go:571 +0x671\r\ntesting.runExample(0x834458d, 0xd, 0x835b738, 0x8355f30, 0x10b, 0x0, 0x0)\r\n        /usr/local/go/src/testing/run_example.go:62 +0x18c\r\ntesting.runExamples(0x9447f80, 0x85b5080, 0xb, 0xb, 0x101)\r\n        /usr/local/go/src/testing/example.go:44 +0xf8\r\ntesting.(*M).Run(0x9454600, 0x0)\r\n        /usr/local/go/src/testing/testing.go:1200 +0x17c\r\nmain.main()\r\n        _testmain.go:130 +0x104\r\nFAIL    github.com/apache/arrow/go/arrow        0.018s\r\n--- FAIL: TestChunked (0.00s)\r\npanic: runtime error: invalid memory address or nil pointer dereference [recovered]\r\n        panic: runtime error: invalid memory address or nil pointer dereference\r\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x804a0ac]\r\n\r\ngoroutine 468 [running]:\r\ntesting.tRunner.func1.1(0x835f680, 0x86554c0)\r\n        /usr/local/go/src/testing/testing.go:940 +0x27c\r\ntesting.tRunner.func1(0x8d548c0)\r\n        /usr/local/go/src/testing/testing.go:943 +0x349\r\npanic(0x835f680, 0x86554c0)\r\n        /usr/local/go/src/runtime/panic.go:969 +0x122\r\nruntime/internal/atomic.Xadd64(0x8c6c18c, 0x1, 0x0, 0x0, 0x0)\r\n        /usr/local/go/src/runtime/internal/atomic/asm_386.s:105 +0xc\r\ngithub.com/apache/arrow/go/arrow/array.(*Chunked).Retain(...)\r\n        /home/kbrandt/go/github.com/apache/arrow/go/arrow/array/table.go:134\r\ngithub.com/apache/arrow/go/arrow/array_test.TestChunked(0x8d548c0)\r\n        /home/kbrandt/go/github.com/apache/arrow/go/arrow/array/table_test.go:34 +0xfa\r\ntesting.tRunner(0x8d548c0, 0x83bfbd8)\r\n        /usr/local/go/src/testing/testing.go:991 +0xb4\r\ncreated by testing.(*T).Run\r\n        /usr/local/go/src/testing/testing.go:1042 +0x2ad\r\nFAIL    github.com/apache/arrow/go/arrow/array  0.046s\r\nok      github.com/apache/arrow/go/arrow/arrio  1.408s\r\nok      github.com/apache/arrow/go/arrow/bitutil        0.004s\r\nok      github.com/apache/arrow/go/arrow/csv    0.003s\r\nok      github.com/apache/arrow/go/arrow/decimal128     0.001s\r\nok      github.com/apache/arrow/go/arrow/float16        0.009s\r\n?       github.com/apache/arrow/go/arrow/internal/arrdata       [no test files]\r\nok      github.com/apache/arrow/go/arrow/internal/arrjson       0.151s\r\nok      github.com/apache/arrow/go/arrow/internal/cpu   0.012s\r\n?       github.com/apache/arrow/go/arrow/internal/debug [no test files]\r\n?       github.com/apache/arrow/go/arrow/internal/flatbuf       [no test files]\r\nok      github.com/apache/arrow/go/arrow/internal/testing/tools 0.006s\r\nok      github.com/apache/arrow/go/arrow/ipc    0.434s\r\nok      github.com/apache/arrow/go/arrow/ipc/cmd/arrow-cat      0.016s\r\nok      github.com/apache/arrow/go/arrow/ipc/cmd/arrow-file-to-stream   0.373s\r\nok      github.com/apache/arrow/go/arrow/ipc/cmd/arrow-json-integration-test    0.163s\r\nok      github.com/apache/arrow/go/arrow/ipc/cmd/arrow-ls       0.012s\r\nok      github.com/apache/arrow/go/arrow/ipc/cmd/arrow-stream-to-file   0.344s\r\n--- FAIL: TestFloat64Funcs_Sum (0.00s)\r\npanic: runtime error: invalid memory address or nil pointer dereference [recovered]\r\n        panic: runtime error: invalid memory address or nil pointer dereference\r\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x8291511]\r\n\r\ngoroutine 6 [running]:\r\ntesting.tRunner.func1.1(0x82d2b80, 0x85513b8)\r\n        /usr/local/go/src/testing/testing.go:940 +0x27c\r\ntesting.tRunner.func1(0x9c9e140)\r\n        /usr/local/go/src/testing/testing.go:943 +0x349\r\npanic(0x82d2b80, 0x85513b8)\r\n        /usr/local/go/src/runtime/panic.go:969 +0x122\r\ngithub.com/apache/arrow/go/arrow/math.Float64Funcs.Sum(...)\r\n        /home/kbrandt/go/github.com/apache/arrow/go/arrow/math/float64.go:38\r\ngithub.com/apache/arrow/go/arrow/math_test.TestFloat64Funcs_Sum(0x9c9e140)\r\n        /home/kbrandt/go/github.com/apache/arrow/go/arrow/math/float64_test.go:35 +0x161\r\ntesting.tRunner(0x9c9e140, 0x8327d9c)\r\n        /usr/local/go/src/testing/testing.go:991 +0xb4\r\ncreated by testing.(*T).Run\r\n        /usr/local/go/src/testing/testing.go:1042 +0x2ad\r\nFAIL    github.com/apache/arrow/go/arrow/math   0.003s\r\nok      github.com/apache/arrow/go/arrow/memory 0.002s\r\nok      github.com/apache/arrow/go/arrow/tensor 0.003s\r\n```\r\n\r\nThis causes the following issue for Grafana https://github.com/grafana/grafana/issues/25287 , and tests in Grafana's SDK https://github.com/grafana/grafana-plugin-sdk-go/blob/master/data/arrow_test.go to fail.\r\n",
        "created_at": "2020-06-18T15:23:52.000Z",
        "updated_at": "2020-06-29T18:11:55.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Go",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-06-29T18:11:55.000Z"
    },
    "comments": [
        {
            "created_at": "2020-06-18T16:48:48.878Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9174?focusedCommentId=17139544) by Kyle Brandt (kylebrandt):*\nMaybe this is in atomic? https://github.com/golang/go/issues/37262"
        },
        {
            "created_at": "2020-06-18T17:03:00.163Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9174?focusedCommentId=17139555) by Kyle Brandt (kylebrandt):*\nOkay, pretty sure it is `sync/atomic`\r\n\r\nIn the package there is a bug note at the bottom:\r\n\r\n> On ARM, x86-32, and 32-bit MIPS, it is the caller's responsibility to arrange for 64-bit alignment of 64-bit words accessed atomically. The first word in a variable or in an allocated struct, array, or slice can be relied upon to be 64-bit aligned.\r\n\r\nSo for example, if the `array` package, if I change the following such that refCount is first, the tests in this folder no longer panic:\r\n\r\n\r\n```go\n\r\n// Chunked manages a collection of primitives arrays as one logical large array.\r\ntype Chunked struct {\r\n\tchunks []Interface\r\n\r\n\trefCount int64\r\n\r\n\tlength int\r\n\tnulls  int\r\n\tdtype  arrow.DataType\r\n}\r\n```\r\n\r\nto\r\n\r\n```go\n\r\n// Chunked manages a collection of primitives arrays as one logical large array.\r\ntype Chunked struct {\r\n       refCount int64\r\n\t\r\n       chunks []Interface\r\n\r\n\tlength int\r\n\tnulls  int\r\n\tdtype  arrow.DataType\r\n}\r\n```\r\n\r\n\r\n"
        },
        {
            "created_at": "2020-06-18T17:07:30.940Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9174?focusedCommentId=17139559) by Kyle Brandt (kylebrandt):*\nNote still a panic in `math` with the when doing 386 with this change, but likely a separate issue:\r\n```bash\n\r\n$ GOOS=linux GOARCH=386 go test ./...\r\nok      github.com/apache/arrow/go/arrow        0.011s\r\nok      github.com/apache/arrow/go/arrow/array  (cached)\r\nok      github.com/apache/arrow/go/arrow/arrio  (cached)\r\nok      github.com/apache/arrow/go/arrow/bitutil        (cached)\r\nok      github.com/apache/arrow/go/arrow/csv    (cached)\r\nok      github.com/apache/arrow/go/arrow/decimal128     (cached)\r\nok      github.com/apache/arrow/go/arrow/float16        (cached)\r\n?       github.com/apache/arrow/go/arrow/internal/arrdata       [no test files]\r\nok      github.com/apache/arrow/go/arrow/internal/arrjson       (cached)\r\nok      github.com/apache/arrow/go/arrow/internal/cpu   (cached)\r\n?       github.com/apache/arrow/go/arrow/internal/debug [no test files]\r\n?       github.com/apache/arrow/go/arrow/internal/flatbuf       [no test files]\r\nok      github.com/apache/arrow/go/arrow/internal/testing/tools (cached)\r\nok      github.com/apache/arrow/go/arrow/ipc    (cached)\r\nok      github.com/apache/arrow/go/arrow/ipc/cmd/arrow-cat      (cached)\r\nok      github.com/apache/arrow/go/arrow/ipc/cmd/arrow-file-to-stream   (cached)\r\nok      github.com/apache/arrow/go/arrow/ipc/cmd/arrow-json-integration-test    (cached)\r\nok      github.com/apache/arrow/go/arrow/ipc/cmd/arrow-ls       (cached)\r\nok      github.com/apache/arrow/go/arrow/ipc/cmd/arrow-stream-to-file   (cached)\r\n--- FAIL: TestFloat64Funcs_Sum (0.00s)\r\npanic: runtime error: invalid memory address or nil pointer dereference [recovered]\r\n        panic: runtime error: invalid memory address or nil pointer dereference\r\n[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x8291511]\r\n\r\ngoroutine 18 [running]:\r\ntesting.tRunner.func1.1(0x82d2b80, 0x85513b8)\r\n        /usr/local/go/src/testing/testing.go:940 +0x27c\r\ntesting.tRunner.func1(0xa4d4140)\r\n        /usr/local/go/src/testing/testing.go:943 +0x349\r\npanic(0x82d2b80, 0x85513b8)\r\n        /usr/local/go/src/runtime/panic.go:969 +0x122\r\ngithub.com/apache/arrow/go/arrow/math.Float64Funcs.Sum(...)\r\n        /home/kbrandt/go/github.com/apache/arrow/go/arrow/math/float64.go:38\r\ngithub.com/apache/arrow/go/arrow/math_test.TestFloat64Funcs_Sum(0xa4d4140)\r\n        /home/kbrandt/go/github.com/apache/arrow/go/arrow/math/float64_test.go:35 +0x161\r\ntesting.tRunner(0xa4d4140, 0x8327d9c)\r\n        /usr/local/go/src/testing/testing.go:991 +0xb4\r\ncreated by testing.(*T).Run\r\n        /usr/local/go/src/testing/testing.go:1042 +0x2ad\r\nFAIL    github.com/apache/arrow/go/arrow/math   0.008s\r\nok      github.com/apache/arrow/go/arrow/memory (cached)\r\nok      github.com/apache/arrow/go/arrow/tensor (cached)\r\nFAIL\r\n\r\n\r\n```"
        },
        {
            "created_at": "2020-06-18T17:14:53.885Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9174?focusedCommentId=17139564) by Kyle Brandt (kylebrandt):*\nI think this is a fix:\u00a0<https://github.com/apache/arrow/pull/7483>"
        },
        {
            "created_at": "2020-06-29T18:11:55.279Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9174?focusedCommentId=17148049) by Sebastien Binet (sbinet):*\nIssue resolved by pull request 7483\n<https://github.com/apache/arrow/pull/7483>"
        }
    ]
}