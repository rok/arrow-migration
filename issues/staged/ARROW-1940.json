{
    "issue": {
        "title": "[Python] Extra metadata gets added after multiple conversions between pd.DataFrame and pa.Table",
        "body": "***Note**: This issue was originally created as [ARROW-1940](https://issues.apache.org/jira/browse/ARROW-1940). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWe have a unit test that verifies that loading a dataframe from a .parq file and saving it back with no changes produces the same result as the original file. It started failing with pyarrow 0.8.0.\r\n\r\nAfter digging into it, I discovered that after the first conversion from pd.DataFrame to pa.Table, the table contains the following metadata (among other things):\r\n\r\n```Java\n\r\n\"column_indexes\": [{\"metadata\": null, \"field_name\": null, \"name\": null, \"numpy_type\": \"object\", \"pandas_type\": \"bytes\"}]\r\n```\r\n\r\nHowever, after converting it to pd.DataFrame and back into a pa.Table for the second time, the metadata gets an encoding field:\r\n\r\n```Java\n\r\n\"column_indexes\": [{\"metadata\": {\"encoding\": \"UTF-8\"}, \"field_name\": null, \"name\": null, \"numpy_type\": \"object\", \"pandas_type\": \"unicode\"}]\r\n```\r\n\r\nSee the attached file for a test case.\r\n\r\nSo specifically, it appears that dataframe->table->dataframe->table conversion produces a different result from just dataframe->table - which I think is unexpected.\r\n",
        "created_at": "2017-12-20T08:21:29.000Z",
        "updated_at": "2018-03-09T04:11:57.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2018-03-09T04:11:53.000Z"
    },
    "comments": [
        {
            "created_at": "2017-12-20T08:36:56.757Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1940?focusedCommentId=16298082) by Dima Ryazanov (dimaryaz):*\n(The attached test case only fails in Python2, though our unit test fails in both 2 and 3. I can come up with a Python3 test case, too, if that helps.)"
        },
        {
            "created_at": "2017-12-21T22:56:52.176Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1940?focusedCommentId=16300696) by Wes McKinney (wesm):*\nMarked for 0.9.0 \u2013 we can look into it. I will say that where bytes -> unicode promotions are occurring it may be challenging to preserve a perfect round trip on Python 2 in all cases. "
        },
        {
            "created_at": "2018-03-01T23:02:26.741Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1940?focusedCommentId=16382819) by Phillip Cloud (cpcloud):*\nTaking a look at this now."
        },
        {
            "created_at": "2018-03-09T04:11:53.106Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1940?focusedCommentId=16392376) by Wes McKinney (wesm):*\nIssue resolved by pull request 1728\n<https://github.com/apache/arrow/pull/1728>"
        }
    ]
}