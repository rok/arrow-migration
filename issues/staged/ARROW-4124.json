{
    "issue": {
        "title": "[C++] Abstract aggregation kernel API",
        "body": "***Note**: This issue was originally created as [ARROW-4124](https://issues.apache.org/jira/browse/ARROW-4124). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nRelated to the particular details of implementing various aggregation types, we should first put a bit of energy into the abstract API for aggregating data in a multi-threaded setting\r\n\r\nAggregators must support both hash/group (e.g. \"group by\" in SQL or data frame libraries) modes and non-group modes. \r\n\r\nAggregations ideally should also support filter pushdown. For example:\r\n\r\n```Java\n\r\nselect $AGG($EXPR)\r\nfrom $TABLE\r\nwhere $PREDICATE\r\n```\r\n\r\nSome systems might materialize the post-predicate / filtered version of `$EXPR`, then aggregate that. pandas does this for example. Vectorized performance can be much improved by filtering inside the aggregation kernel. How the predicate true/false values are handled may depend on the implementation details of the kernel (e.g. SUM or MEAN will be a bit different from PRODUCT)",
        "created_at": "2018-12-27T17:53:19.000Z",
        "updated_at": "2019-02-11T16:07:37.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-02-10T01:05:20.000Z"
    },
    "comments": [
        {
            "created_at": "2019-02-10T01:05:20.807Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4124?focusedCommentId=16764272) by Wes McKinney (wesm):*\nIssue resolved by pull request 3407\n<https://github.com/apache/arrow/pull/3407>"
        }
    ]
}