{
    "issue": {
        "title": "[C++][Dataset] Schema evolution for timestamp columns",
        "body": "***Note**: This issue was originally created as [ARROW-8284](https://issues.apache.org/jira/browse/ARROW-8284). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIn a dataset, one can have timestamp columns with different resolutions. There should be an optional to cast all timestamps to the type mentioned in the schema. A typical example could be that we store a pandas DataFrame with `ns` precision to Parquet files that only support `us` resolution in their most widespread from. Then the dataset schema and the actual file content don't match anymore.",
        "created_at": "2020-03-31T12:47:53.000Z",
        "updated_at": "2021-04-15T12:30:12.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-04-15T12:30:12.000Z"
    },
    "comments": [
        {
            "created_at": "2021-04-15T12:30:03.362Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8284?focusedCommentId=17322141) by Uwe Korn (uwe):*\nTested this with the following code to verify that this is fixed in master:\r\n\r\n```Java\n\r\nimport pyarrow as pa\r\nimport pyarrow.parquet as pq\r\nimport pyarrow.dataset as ds\r\nimport pandas as pd\r\nimport numpy as np\r\n\r\ntable1 = pa.table({\"timestamp\": pa.array([0, 1, 2], type=pa.timestamp(\"us\"))})\r\npq.write_table(table1, \"ts1.parquet\")\r\ntable2 = pa.table({\"timestamp\": pa.array([1, 10, 200], type=pa.timestamp(\"ms\"))})\r\npq.write_table(table2, \"ts2.parquet\")\r\n\r\ndataset = ds.FileSystemDataset.from_paths(\r\n    paths=[\"ts1.parquet\", \"ts2.parquet\"],\r\n    schema=table1.schema,\r\n    format=pa.dataset.ParquetFileFormat(),\r\n    filesystem=pa.fs.LocalFileSystem()\r\n)\r\ndataset.to_table().to_pandas()\r\n```"
        }
    ]
}