{
    "issue": {
        "title": "[C++] Implement asynchronous/\"lazy\" variants of ReadRangeCache",
        "body": "***Note**: This issue was originally created as [ARROW-12522](https://issues.apache.org/jira/browse/ARROW-12522). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently ReadRangeCache performs both readahead and coalescing. Also, it exposes primarily a blocking API. Two improvements would be useful for implementing async-generator versions of file readers:\r\n \\* A method to get a Future<> for a set of read ranges, so that you can asynchronously wait for ranges to be read instead of attempting to read and getting blocked\r\n \\* A way to make the cache not perform readahead, so that data is fetched only when requested. (Then, consumers could handle readahead by making multiple requests to the cache.)\r\n\r\nThe cache would still act as an actual cache and would still coalesce. (A further improvement might be to allow discarding cache entries. For the purpose of getting AsyncGenerator<RecordBatch>, we don't need a range more than once, so the cache is just wasting memory.)\r\n\r\nThis makes it straightforward to adapt synchronous readers into asynchronous ones so long as you know the read ranges up front; you can then cache all the ranges, call WaitFor<>, then hand the buffer to the existing synchronous reader.",
        "created_at": "2021-04-23T19:55:36.000Z",
        "updated_at": "2021-05-04T14:43:24.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-05-04T14:43:09.000Z"
    },
    "comments": [
        {
            "created_at": "2021-05-04T14:43:09.475Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12522?focusedCommentId=17339046) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 10145\n<https://github.com/apache/arrow/pull/10145>"
        }
    ]
}