{
    "issue": {
        "title": "[C++] Add variant of SerializeRecordBatch that accepts an writer-allocator callback",
        "body": "***Note**: This issue was originally created as [ARROW-1403](https://issues.apache.org/jira/browse/ARROW-1403). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen writing to other kinds of interfaces, like GPU, it would be useful to be able to pass a function or closure that can instantiate an instance of `OutputStream` (which might write to CPU memory, GPU, etc.) given the computed size of the record batch. Currently we allocate new CPU memory and write to that buffer, but this would eliminate an intermediate copy.\n\nSo something like\n\n```Java\ntypedef std::function<Status(const int64_t, std::unique_ptr<OutputStream>*)> StreamCreator;\n```\n\n",
        "created_at": "2017-08-23T03:25:16.000Z",
        "updated_at": "2019-11-14T12:59:27.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-11-14T12:59:27.000Z"
    },
    "comments": [
        {
            "created_at": "2017-08-24T03:42:09.376Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1403?focusedCommentId=16139515) by Wes McKinney (wesm):*\nI looked at this today. I think this might be overkill versus simply writing a version of `SerializeRecordBatch` specialized for GPU device memory"
        },
        {
            "created_at": "2019-11-14T12:59:27.286Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1403?focusedCommentId=16974226) by Antoine Pitrou (apitrou):*\nClosing as outdated."
        }
    ]
}