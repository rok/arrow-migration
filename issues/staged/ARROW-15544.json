{
    "issue": {
        "title": "[Go][Parquet] pqarrow.getOriginSchema error while decoding ARROW:schema",
        "body": "***Note**: This issue was originally created as [ARROW-15544](https://issues.apache.org/jira/browse/ARROW-15544). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nHello !\r\n\r\nThis is my first time participating in the open source community as a junior developer and I would like to thank you all for your hard work :)\r\n\r\nWhile using the new pqarrow package for our project [Metronlab/bow](https://github.com/Metronlab/bow) to read parquet files previously written by Pandas.\r\nAn error is returned by function getOriginSchema if the \"ARROW:schema\" base64 encoded value is ending with padding characters.\r\nThis is caused by the use of the [RawStdEncoding](https://pkg.go.dev/encoding/base64#pkg-variables) type that omits padding characters.\r\nIs there any reason for using raw encoding instead of standard?\r\n\r\nHere is a repo with a test script to demonstrate the problem: [antoinegelloz/arrowparquet](https://github.com/antoinegelloz/arrowparquet)\r\n\r\nThank you in advance for your help,\r\n\r\nAntoine Gelloz",
        "created_at": "2022-02-03T09:58:02.000Z",
        "updated_at": "2022-05-02T09:38:50.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Go",
            "Component: Parquet",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-03-21T19:28:52.000Z"
    },
    "comments": [
        {
            "created_at": "2022-03-16T16:47:57.030Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15544?focusedCommentId=17507723) by Matthew Topol (zeroshade):*\nHey `[~antoinegelloz]` and welcome! \r\n\r\nSo, the usage of `RawStdEncoding`, if I'm remembering correctly from when I implemented it, was because that was the way that the schema was encoded in a few of the test parquet files. That being said, it's a reasonable change to improve the pqarrow library to try using standard if the RawStdEncoding fails. I do have a question, can Pandas read the Parquet file written by pqarrow that is using RawStdEncoding? or does Pandas fail because it expects the padding characters? \r\n\r\nLooking at the current C++ code, I think that the existing base64 encoding code does indeed pad the characters and this might just be an oversight on my end that writing should be done with Standard, and reading should try both. When I get a chance I'll try putting a PR up with a fix."
        },
        {
            "created_at": "2022-03-21T17:40:44.187Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15544?focusedCommentId=17510047) by Matthew Topol (zeroshade):*\n`[~antoinegelloz]` I've put up a fix for this and opened a PR to merge it. If you get a chance you can test it yourself by running the following command in your module directory.\r\n\r\n```Java\n\r\ngo mod edit -replace github.com/apache/arrow/go/v8/parquet=github.com/zeroshade/arrow/go/v8/parquet@arrow-15544-origin-schema\r\n```\r\n\r\nand then rebuilding. It should pull down my branch and use that in place of the master. I've added a test case which shows it working for both padded and unpadded encodings, but feel free to try it with your test case directly and get back to me."
        },
        {
            "created_at": "2022-03-21T19:28:52.313Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15544?focusedCommentId=17510081) by Matthew Topol (zeroshade):*\nIssue resolved by pull request 12679\n<https://github.com/apache/arrow/pull/12679>"
        },
        {
            "created_at": "2022-05-02T09:38:50.559Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15544?focusedCommentId=17530653) by Antoine Gelloz (antoinegelloz):*\nHey Matthew,\r\n\r\nSorry for the late reply.\r\nWe just tested with your fix and it work perfectly now.\r\n\r\nThank you for your work!"
        }
    ]
}