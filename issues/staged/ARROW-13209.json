{
    "issue": {
        "title": "[Python][CI] macOS wheel builds should raise on linker warnings",
        "body": "***Note**: This issue was originally created as [ARROW-13209](https://issues.apache.org/jira/browse/ARROW-13209). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIn order to prevent similar issues to https://issues.apache.org/jira/browse/ARROW-13108 we need to halt the macOS wheel build on linker warnings like the following:\r\n- ld: warning: object file (/usr/local/Cellar/brotli/1.0.9/lib/libbrotlidec-static.a(decode.c.o)) was built for newer macOS version (10.15) than being linked (10.13)\n- ld: warning: object file (/usr/local/Cellar/brotli/1.0.9/lib/libbrotlienc-static.a(encode.c.o)) was built for newer macOS version (10.15) than being linked (10.13)\n",
        "created_at": "2021-06-29T10:38:25.000Z",
        "updated_at": "2021-06-30T12:51:15.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Continuous Integration",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-06-29T10:40:49.454Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13209?focusedCommentId=17371288) by Krisztian Szucs (kszucs):*\n`[~kou]` `[~uwe]` are you aware of a way to raise on those warnings? I couldn't find a relevant flag for `ld`."
        },
        {
            "created_at": "2021-06-29T11:33:49.601Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13209?focusedCommentId=17371302) by Uwe Korn (uwe):*\nI have no idea besides grep'ing the build log."
        },
        {
            "created_at": "2021-06-29T20:07:06.181Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13209?focusedCommentId=17371614) by Kouhei Sutou (kou):*\nI don't know too.\r\nWe may be able to use `otool -l` to show `cmd LC_VERSION_MIN_MACOSX` but it's not a link time error approach."
        },
        {
            "created_at": "2021-06-30T12:51:01.856Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13209?focusedCommentId=17371982) by Krisztian Szucs (kszucs):*\nThat could work, I get the following for a local test binary:\r\n\r\n```Java\n\r\nLoad command 10\r\n      cmd LC_BUILD_VERSION\r\n  cmdsize 32\r\n platform 1\r\n    minos 11.0\r\n      sdk 11.3\r\n   ntools 1\r\n     tool 3\r\n  version 650.9\r\n```\r\n\r\nMy question is whether we'll get the right `minos=10.15` version there if the inspected binary was built with `-mmacosx-version-min=10.13` but one of the static dependencies with  `-mmacosx-version-min=10.15`?\r\n\r\nI assume we need to try it out."
        }
    ]
}