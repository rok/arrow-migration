{
    "issue": {
        "title": "[Python] Arrow plasma throws ArrowIOError and process crashed",
        "body": "***Note**: This issue was originally created as [ARROW-2956](https://issues.apache.org/jira/browse/ARROW-2956). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nhello,\r\n\r\nWe start a plasma store with 100k memory. when storage is full, it throws ArrowIOError and the **process crashed,** not the expected PlasmaStoreFull error.\r\n\r\ncode:\r\n```java\n\r\nimport pyarrow.plasma as plasma\r\nimport numpy as np\r\n\r\nplasma_client = plasma.connect(plasma_socket, '', 0)\r\nref = []\r\nfor _ in range(1000):\r\n    obj_id = plasma_client.put(np.random.randint(100, size=(100, 100), dtype=np.int16))\r\n    data = plasma_client.get(obj_id)\r\n    ref.append(data)\r\n```\r\nerror:\r\n```\n\r\n---------------------------------------------------------------------------\r\nArrowIOError                              Traceback (most recent call last)\r\n<ipython-input-2-07ec7f6f4b82> in <module>()\r\n      2 ref = []\r\n      3 for _ in range(1000):\r\n----> 4     obj_id = plasma_client.put(np.random.randint(100, size=(100, 100), dtype=np.int16))\r\n      5     data = plasma_client.get(obj_id)\r\n      6     ref.append(data)\r\n\r\nplasma.pyx in pyarrow.plasma.PlasmaClient.put()\r\n\r\nplasma.pyx in pyarrow.plasma.PlasmaClient.create()\r\n\r\nerror.pxi in pyarrow.lib.check_status()\r\n\r\nArrowIOError: Encountered unexpected EOF\n```\r\nthis problem doesn't exist when dtype is np.int64 or share memory is larger(like more than 100M), it seems so strange, anybody knows the reason? Thanks a lot.\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0",
        "created_at": "2018-08-01T11:47:17.000Z",
        "updated_at": "2021-02-19T21:03:14.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-02-19T21:03:14.000Z"
    },
    "comments": [
        {
            "created_at": "2018-08-02T07:27:31.543Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2956?focusedCommentId=16566448) by Robert Nishihara (robertnishihara):*\nI'm not sure we support memory sizes this small. However, if we don't support it, then we need to fail when starting the plasma store in the first place instead of letting it fail later.\r\n\r\n\u00a0\r\n\r\nThis issue probably has to do with the default malloc sizes in this file\u00a0\r\n\r\nhttps://github.com/apache/arrow/blob/d48dce2cfebdbd044a8260d0a77f5fe3d89a4a2d/cpp/src/plasma/malloc.cc#L47"
        },
        {
            "created_at": "2018-08-02T12:48:11.401Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2956?focusedCommentId=16566730) by He Kaisheng (pole):*\nThis happened in our test case, now\u00a0we set all memory size more than 100M in case of crash.\r\n\r\n\u00a0\r\n\r\nThanks a lot."
        }
    ]
}