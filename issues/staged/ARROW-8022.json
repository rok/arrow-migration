{
    "issue": {
        "title": "[C++] Provide or Vendor a small_vector implementation",
        "body": "***Note**: This issue was originally created as [ARROW-8022](https://issues.apache.org/jira/browse/ARROW-8022). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n`small_vector<>` is a C++ utility class which does not use heap allocation for small numbers of elements. [Folly](https://github.com/facebook/folly/blob/master/folly/docs/small_vector.md), [Boost](https://github.com/boostorg/container/blob/develop/include/boost/container/small_vector.hpp), [Abseil](https://github.com/abseil/abseil-cpp/blob/master/absl/container/inlined_vector.h), and [LLVM](https://llvm.org/doxygen/classllvm_1_1SmallVector.html) each provide one.\r\n\r\nIn many cases a vector usually has few elements but might have many. If we use std::vector we have to bother the allocator unless the vector is actually empty. My specific use case for this is field lookup by name: I expect that most schemas will have unique field names, but strictly speaking we support duplicate field names. It would be ideal not incur a performance penalty for 99.9% of field lookups which yield 0 or 1 fields just to accommodate the case where there may be multiple.\r\n\r\n\r\n\r\n",
        "created_at": "2020-03-06T17:41:00.000Z",
        "updated_at": "2021-08-26T12:01:42.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-08-26T12:01:32.000Z"
    },
    "comments": [
        {
            "created_at": "2021-08-26T12:01:32.551Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8022?focusedCommentId=17405181) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 10915\n<https://github.com/apache/arrow/pull/10915>"
        }
    ]
}