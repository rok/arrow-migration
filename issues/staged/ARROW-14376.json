{
    "issue": {
        "title": "[C++] Split PushGenerator producer into separately tracked entity ",
        "body": "***Note**: This issue was originally created as [ARROW-14376](https://issues.apache.org/jira/browse/ARROW-14376). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe PushGenerator keeps a strong reference to its producer, keeping it alive until the generator closes.  This means the producer will never auto-close if all references to it are lost.  This can lead to memory leaks like:\r\n\r\n```cpp\n\r\nTEST(Weston, MemTest) {\r\n  PushGenerator<util::optional<int>> int_prod;\r\n  AsyncGenerator<util::optional<int>> int_gen = int_prod;\r\n  Future<> visit_fut = VisitAsyncGenerator(std::move(int_gen), [] (util::optional<int>) {\r\n    return Status::OK();\r\n  });\r\n}\r\n```\r\n\r\nIf we split the push generator creation code so it creates both a producer and a generator as separate objects then the lifecycle for the producer can be tracked separately and, if all references are lost, it can abort the iteration.",
        "created_at": "2021-10-19T11:14:56.000Z",
        "updated_at": "2022-07-12T14:04:27.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-07-12T14:04:27.644Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14376?focusedCommentId=17565625) by @toddfarmer:*\nThis issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned. Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon."
        }
    ]
}