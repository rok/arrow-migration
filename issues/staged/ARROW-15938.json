{
    "issue": {
        "title": "[R][C++] Segfault in left join with empty right table when filtered on partition",
        "body": "***Note**: This issue was originally created as [ARROW-15938](https://issues.apache.org/jira/browse/ARROW-15938). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen the right table in a join is empty as a result of a filtering on a partition group the join segfaults:\r\n```java\n\r\n\u00a0 library(arrow)\r\n\u00a0 library(glue)\r\n\u00a0 df <- mutate(iris, id = runif(n()))\r\n\u00a0 dir <- \"./tmp/iris\"\r\n\u00a0 dir.create(glue(\"{dir}/group=a/\"), recursive = T, showWarnings = F)\r\n\u00a0 dir.create(glue(\"{dir}/group=b/\"), recursive = T, showWarnings = F)\r\n\u00a0 write_parquet(df, glue(\"{dir}/group=a/part1.parquet\"))\r\n\u00a0 write_parquet(df, glue(\"{dir}/group=b/part2.parquet\"))\u00a0\r\n\r\n db1 <- open_dataset(dir) %>%\r\n\u00a0 \u00a0 filter(group == \"blabla\")\u00a0 \r\n\r\nopen_dataset(dir) %>%\r\n\u00a0 \u00a0 filter(group == \"b\") %>%\r\n\u00a0 \u00a0 select(id) %>%\r\n\u00a0 \u00a0 left_join(db1, by = \"id\") %>%\r\n\u00a0 \u00a0 collect()\r\n \u00a0\n```\r\n```java\n\r\n==24063== Thread 7:\r\n==24063== Invalid read of size 1\r\n==24063== \u00a0 \u00a0at 0x1FFE606D: arrow::compute::HashJoinBasicImpl::ProbeBatch_OutputOne(long, arrow::compute::ExecBatch*, arrow::compute::ExecBatch*, arrow::compute::ExecBatch*, arrow::compute::ExecBatch*) (in /home/vspinu/bin/arrow/lib/libarrow.so.800.0.0)\r\n==24063== \u00a0 \u00a0by 0x1FFE68CC: arrow::compute::HashJoinBasicImpl::ProbeBatch_OutputOne(unsigned long, long, int const*, int const*) (in /home/vspinu/bin/arrow/lib/libarrow.so.800.0.0)\r\n==24063== \u00a0 \u00a0by 0x1FFE84D5: arrow::compute::HashJoinBasicImpl::ProbeBatch(unsigned long, arrow::compute::ExecBatch const&) (in /home/vspinu/bin/arrow/lib/libarrow.so.800.0.0)\r\n==24063== \u00a0 \u00a0by 0x1FFE8CB4: arrow::compute::HashJoinBasicImpl::InputReceived(unsigned long, int, arrow::compute::ExecBatch) (in /home/vspinu/bin/arrow/lib/libarrow.so.800.0.0)\r\n==24063== \u00a0 \u00a0by 0x200011CF: arrow::compute::HashJoinNode::InputReceived(arrow::compute::ExecNode*, arrow::compute::ExecBatch) (in /home/vspinu/bin/arrow/lib/libarrow.so.800.0.0)\r\n==24063== \u00a0 \u00a0by 0x1FFB580E: arrow::compute::MapNode::SubmitTask(std::function<arrow::Result<arrow::compute::ExecBatch> (arrow::compute::ExecBatch)>, arrow::compute::ExecBatch)::{lambda()#1}::operator()() const (in /home/vspinu/bin/arrow/lib/libarrow.so.800.0.0)\r\n==24063== \u00a0 \u00a0by 0x1FFB6444: arrow::internal::FnOnce<void ()>::FnImpl<std::_Bind<arrow::detail::ContinueFuture (arrow::Future<arrow::internal::Empty>, arrow::compute::MapNode::SubmitTask(std::function<arrow::Result<arrow::compute::ExecBatch> (arrow::compute::ExecBatch)>, arrow::compute::ExecBatch)::{lambda()#2}::operator()() const::{lambda()#1})> >::invoke() (in /home/vspinu/bin/arrow/lib/libarrow.so.800.0.0)\r\n==24063== \u00a0 \u00a0by 0x1FE2B2A0: std::thread::_State_impl<std::thread::_Invoker<std::tuple<arrow::internal::ThreadPool::LaunchWorkersUnlocked(int)::{lambda()#1}> > >::_M_run() (in /home/vspinu/bin/arrow/lib/libarrow.so.800.0.0)\r\n==24063== \u00a0 \u00a0by 0x92844BF: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29)\r\n==24063== \u00a0 \u00a0by 0x6DD46DA: start_thread (pthread_create.c:463)\r\n==24063== \u00a0 \u00a0by 0x710D71E: clone (clone.S:95)\r\n==24063== \u00a0Address 0x10 is not stack'd, malloc'd or (recently) free'd\r\n==24063==\u00a0\u00a0*** caught segfault ***\r\naddress 0x10, cause 'memory not mapped'Traceback:\r\n\u00a01: Table__from_RecordBatchReader(self)\r\n\u00a02: tab$read_table()\r\n\u00a03: do_exec_plan(x)\r\n\u00a04: doTryCatch(return(expr), name, parentenv, handler)\r\n\u00a05: tryCatchOne(expr, names, parentenv, handlers[[1L]])\r\n\u00a06: tryCatchList(expr, classes, parentenv, handlers)\r\n\u00a07: tryCatch(tab <- do_exec_plan(x), error = function(e) { \u00a0 \u00a0handle_csv_read_error(e, x$.data$schema)})\r\n\u00a08: collect.arrow_dplyr_query(.)\r\n\u00a09: collect(.)\r\n10: open_dataset(dir) %>% filter(group == \"b\") %>% select(id) %>% \u00a0 \u00a0 left_join(db1, by = \"id\") %>% collect()Possible actions:\r\n1: abort (with core dump, if enabled)\r\n2: normal R exit\r\n3: exit R without saving workspace\r\n4: exit R saving workspace \n```\r\nThis is arrow from the current master ece0e23f1.\u00a0\r\n\r\nIt's worth noting that if the right table is filtered on a non-partitioned variable the problem does not occur.",
        "created_at": "2022-03-15T09:58:14.000Z",
        "updated_at": "2022-07-28T00:12:33.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-07-27T16:14:24.000Z"
    },
    "comments": [
        {
            "created_at": "2022-03-15T16:53:09.749Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15938?focusedCommentId=17507053) by Nicola Crane (thisisnic):*\nJust to confirm that I have managed to replicate this and here's the output I had with the gdb debugger attached.\r\n```cpp\n\r\n[New Thread 0x7fffaadff700 (LWP 115262)]\r\n/home/nic2/arrow/cpp/src/arrow/compute/exec/hash_join.cc:277:  Check failed: !is_from_payload || (opt_right_payload && from_payload.get(icol) < static_cast<int>(opt_right_payload->values.size()) && opt_right_payload->length == batch_size_next) \r\n/home/nic2/arrow_installed_version/lib/libarrow.so.800(_ZN5arrow4util7CerrLog14PrintBackTraceEv+0x39)[0x7fffef667a8b]\r\n/home/nic2/arrow_installed_version/lib/libarrow.so.800(_ZN5arrow4util7CerrLogD1Ev+0x5f)[0x7fffef667a01]\r\n/home/nic2/arrow_installed_version/lib/libarrow.so.800(_ZN5arrow4util7CerrLogD0Ev+0x1c)[0x7fffef667a26]\r\n/home/nic2/arrow_installed_version/lib/libarrow.so.800(_ZN5arrow4util8ArrowLogD1Ev+0x4b)[0x7fffef667843]\r\n/home/nic2/arrow_installed_version/lib/libarrow.so.800(_ZN5arrow7compute17HashJoinBasicImpl20ProbeBatch_OutputOneElPNS0_9ExecBatchES3_S3_S3_+0x8e4)[0x7fffef97a808]\r\n/home/nic2/arrow_installed_version/lib/libarrow.so.800(_ZN5arrow7compute17HashJoinBasicImpl20ProbeBatch_OutputOneEmlPKiS3_+0x993)[0x7fffef97c743]\r\n/home/nic2/arrow_installed_version/lib/libarrow.so.800(_ZN5arrow7compute17HashJoinBasicImpl20ProbeBatch_OutputAllEmRKNS0_8internal10RowEncoderES5_RKSt6vectorIiSaIiEESA_RS8_SB_+0x3ef)[0x7fffef97cd41]\r\n/home/nic2/arrow_installed_version/lib/libarrow.so.800(_ZN5arrow7compute17HashJoinBasicImpl10ProbeBatchEmRKNS0_9ExecBatchE+0x808)[0x7fffef97da44]\r\n/home/nic2/arrow_installed_version/lib/libarrow.so.800(_ZN5arrow7compute17HashJoinBasicImpl13InputReceivedEmiNS0_9ExecBatchE+0x14d)[0x7fffef978b31]\r\n/home/nic2/arrow_installed_version/lib/libarrow.so.800(_ZN5arrow7compute12HashJoinNode13InputReceivedEPNS0_8ExecNodeENS0_9ExecBatchE+0x1e4)[0x7fffef9a9426]\r\n/home/nic2/arrow_installed_version/lib/libarrow.so.800(+0x1c47363)[0x7fffef92d363]\r\n/home/nic2/arrow_installed_version/lib/libarrow.so.800(+0x1c4750f)[0x7fffef92d50f]\r\n/home/nic2/arrow_installed_version/lib/libarrow.so.800(+0x1c4c040)[0x7fffef932040]\r\n/home/nic2/arrow_installed_version/lib/libarrow.so.800(+0x1c4bfb4)[0x7fffef931fb4]\r\n/home/nic2/arrow_installed_version/lib/libarrow.so.800(+0x1c4bee0)[0x7fffef931ee0]\r\n/home/nic2/arrow_installed_version/lib/libarrow.so.800(+0x1c4be10)[0x7fffef931e10]\r\n/home/nic2/arrow_installed_version/lib/libarrow.so.800(+0x1c4bcf9)[0x7fffef931cf9]\r\n/home/nic2/arrow_installed_version/lib/libarrow.so.800(+0x1c4bc3a)[0x7fffef931c3a]\r\n/home/nic2/arrow_installed_version/lib/libarrow.so.800(_ZNO5arrow8internal6FnOnceIFvvEEclEv+0x59)[0x7fffef68a957]\r\n/home/nic2/arrow_installed_version/lib/libarrow.so.800(+0x19a076f)[0x7fffef68676f]\r\n/home/nic2/arrow_installed_version/lib/libarrow.so.800(+0x19a15dc)[0x7fffef6875dc]\r\n/home/nic2/arrow_installed_version/lib/libarrow.so.800(+0x19a40d1)[0x7fffef68a0d1]\r\n/home/nic2/arrow_installed_version/lib/libarrow.so.800(+0x19a4072)[0x7fffef68a072]\r\n/home/nic2/arrow_installed_version/lib/libarrow.so.800(+0x19a4010)[0x7fffef68a010]\r\n/home/nic2/arrow_installed_version/lib/libarrow.so.800(+0x19a3fd1)[0x7fffef689fd1]\r\n/home/nic2/arrow_installed_version/lib/libarrow.so.800(+0x19a3fa6)[0x7fffef689fa6]\r\n/lib/x86_64-linux-gnu/libstdc++.so.6(+0xd6de4)[0x7ffff54a5de4]\r\n/lib/x86_64-linux-gnu/libpthread.so.0(+0x8609)[0x7ffff70aa609]\r\n/lib/x86_64-linux-gnu/libc.so.6(clone+0x43)[0x7ffff7a09163]\r\n\r\nThread 7 \"R\" received signal SIGABRT, Aborted.\r\n\r\n```"
        },
        {
            "created_at": "2022-03-15T16:53:26.749Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15938?focusedCommentId=17507054) by Nicola Crane (thisisnic):*\nCC `[~apitrou]` \u00a0"
        },
        {
            "created_at": "2022-03-15T17:16:21.064Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15938?focusedCommentId=17507070) by Antoine Pitrou (apitrou):*\ncc `[~westonpace]`"
        },
        {
            "created_at": "2022-07-12T14:04:23.372Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15938?focusedCommentId=17565575) by @toddfarmer:*\nThis issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned. Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon."
        },
        {
            "created_at": "2022-07-13T13:49:53.668Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15938?focusedCommentId=17566322) by Neal Richardson (npr):*\nConfirmed that this is still an issue."
        },
        {
            "created_at": "2022-07-26T12:46:51.427Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15938?focusedCommentId=17571395) by Ra\u00fal Cumplido (raulcd):*\nThis is identified as one of the tickets required to create the first 9.0.0 RC, should this block the release?"
        },
        {
            "created_at": "2022-07-27T14:28:58.224Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15938?focusedCommentId=17571970) by Krisztian Szucs (kszucs):*\nPostponing to 10.0."
        },
        {
            "created_at": "2022-07-27T16:14:24.585Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15938?focusedCommentId=17572012) by Krisztian Szucs (kszucs):*\nIssue resolved by pull request 13686\n<https://github.com/apache/arrow/pull/13686>"
        }
    ]
}