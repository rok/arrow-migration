{
    "issue": {
        "title": "[Java] ArrowVectorIterator incorrectly closes Vectors ",
        "body": "***Note**: This issue was originally created as [ARROW-18178](https://issues.apache.org/jira/browse/ARROW-18178). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIf you\u2019re using the iterator with reuseVectorSchemaRoot set to false, the first n-1 VSRs returned by a call to next() have their resources managed by the client code, but the last one gets closed when the iterator is closed. This is inconsistent and contradicts the\u00a0 javadoc for next:\r\n \\* If \\{@link JdbcToArrowConfig#isReuseVectorSchemaRoot()} is false,\r\n \\* the client is responsible for freeing its resources.\r\n\r\n\r\nThe iterator calls close on its CompositeJDBCConsumer instance, which in turn closes the vectors held by each consumer.\u00a0\r\n\r\n\u00a0\r\n\r\n`@Override`\r\n`public void close() {`\r\n`\u00a0 if (config.isReuseVectorSchemaRoot()) {`\r\n`\u00a0 nextBatch.close();`\r\n\u00a0 \u00a0 }\r\n`\u00a0 compositeConsumer.close();`\r\n``}",
        "created_at": "2022-10-27T17:13:30.000Z",
        "updated_at": "2022-10-30T01:12:09.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-10-28T18:08:30.000Z"
    },
    "comments": [
        {
            "created_at": "2022-10-28T18:08:30.194Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18178?focusedCommentId=17625835) by David Li (lidavidm):*\nIssue resolved by pull request 14534\n<https://github.com/apache/arrow/pull/14534>"
        }
    ]
}