{
    "issue": {
        "title": "[C++][R] Support a \"modified\" hive style directory naming scheme",
        "body": "***Note**: This issue was originally created as [ARROW-14149](https://issues.apache.org/jira/browse/ARROW-14149). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI am working on a project where I need to create and analyze parquet files using Apache Arrow but the environment I'm working with does not allow \"=\" in file paths, which the hive naming convention forces, e.g. \"year=2007\". While I can specify the partitioning to not use the hive contention, I then lose the variable names. This is problematic when I'm sharing the datasets with others because they will have to specify the partitioning variables when opening the dataset but they don't know what the partitioning variables are.\r\n\r\n\u00a0\r\n\r\nWould it be possible to allow a modified hive-style directory naming convention that still preserves the variable name in the directory name? For example, allowing a delimiter other than \"=\"?",
        "created_at": "2021-09-28T00:31:22.000Z",
        "updated_at": "2021-09-28T12:57:11.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-09-28T00:58:09.495Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14149?focusedCommentId=17421104) by Ryan Hafen (rhafen):*\nWould one option here be that when you don't use hive-style names, then the partitioning variables automatically get stored as metadata when you write the file and then when you read it, it looks for that metadata and specifies the partitioning variables for you? I'm thinking of something like this being implemented in the high-level functions like write_dataset() and open_dataset() in R for example."
        }
    ]
}