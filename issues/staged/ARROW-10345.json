{
    "issue": {
        "title": "[C++] NaN breaks sorting",
        "body": "***Note**: This issue was originally created as [ARROW-10345](https://issues.apache.org/jira/browse/ARROW-10345). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n```python\n\r\n>>> import numpy as np\r\n>>> import pyarrow.compute as pc\r\n>>> pc.sort_indices([3.0, 4.0, 1.0, 2.0, None])\r\n<pyarrow.lib.UInt64Array object at 0x7f78368a0c90>\r\n[\r\n  2,\r\n  3,\r\n  0,\r\n  1,\r\n  4\r\n]\r\n>>> pc.sort_indices([3.0, 4.0, np.nan, 1.0, 2.0, None])\r\n<pyarrow.lib.UInt64Array object at 0x7f783684bf30>\r\n[\r\n  0,\r\n  1,\r\n  2,\r\n  3,\r\n  4,\r\n  5\r\n]\r\n```",
        "created_at": "2020-10-19T12:13:35.000Z",
        "updated_at": "2021-08-02T18:36:16.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-11-10T15:19:50.000Z"
    },
    "comments": [
        {
            "created_at": "2020-10-19T12:14:53.135Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10345?focusedCommentId=17216674) by Antoine Pitrou (apitrou):*\ncc `[~yibocai]`"
        },
        {
            "created_at": "2020-10-20T06:43:35.086Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10345?focusedCommentId=17217337) by Yibo Cai (yibocai):*\nNumpy uses a special compare function to treat NaN as largest floating point number.\r\nhttps://github.com/numpy/numpy/blob/578f4e7dca4701637284c782d8c74c0d5b688341/numpy/core/src/npysort/npysort_common.h#L123\r\n\r\nMaybe it's better to partition NaN to end of array before sorting, just like how Nulls are handled currently."
        },
        {
            "created_at": "2020-10-20T08:25:33.632Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10345?focusedCommentId=17217426) by Antoine Pitrou (apitrou):*\n> Maybe it's better to partition NaN to end of array before sorting, just like how Nulls are handled currently.\r\n\r\n+1"
        },
        {
            "created_at": "2020-11-03T14:01:12.413Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10345?focusedCommentId=17225420) by Joris Van den Bossche (jorisvandenbossche):*\n+1 on sorting NaNs last, but before Nulls. That also what eg Julia does, or what many database do (eg https://clickhouse.tech/docs/en/sql-reference/statements/select/order-by/#sorting-of-special-values, https://www.postgresql.org/docs/9.0/datatype-numeric.html, although databases typically do that by defining a different comparison to let NaN==NaN)."
        },
        {
            "created_at": "2020-11-10T15:19:50.229Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10345?focusedCommentId=17229289) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 8623\n<https://github.com/apache/arrow/pull/8623>"
        }
    ]
}