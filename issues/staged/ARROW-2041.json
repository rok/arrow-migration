{
    "issue": {
        "title": "[Python] pyarrow.serialize has high overhead for list of NumPy arrays",
        "body": "***Note**: This issue was originally created as [ARROW-2041](https://issues.apache.org/jira/browse/ARROW-2041). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n`Python 2.7.12 (default, Nov 20 2017, 18:23:56)`\r\n`[GCC 5.4.0 20160609] on linux2`\r\n`Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.`\r\n`>>> import pyarrow as pa, numpy as np`\r\n`>>> arrays = [np.arange(100, dtype=np.int32) for _ in range(10000)]`\r\n`>>> with open('test.pyarrow', 'w') as f:`\r\n`... f.write(pa.serialize(arrays).to_buffer().to_pybytes())`\r\n`...`\r\n`>>> import cPickle as pickle`\r\n`>>> pickle.dump(arrays, open('test.pkl', 'w'), pickle.HIGHEST_PROTOCOL)`\r\n\r\ntest.pyarrow is 6.2 MB, while test.pkl is only 4.2 MB.",
        "created_at": "2018-01-26T05:25:03.000Z",
        "updated_at": "2019-08-28T21:44:33.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-08-28T21:44:33.000Z"
    },
    "comments": [
        {
            "created_at": "2018-01-26T15:38:53.349Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2041?focusedCommentId=16341174) by Wes McKinney (wesm):*\nI'm interested to see if we can make the metadata smaller. It looks like the overhead is around ~200 bytes per array"
        },
        {
            "created_at": "2019-08-28T21:44:33.390Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2041?focusedCommentId=16918134) by Wes McKinney (wesm):*\nI looked at this. The breakdown of parts of each NumPy arrays is as follows:\r\n\r\n- 400 bytes of data\n- 176 bytes of metadata\n- 64 bytes of padding\n  \n  So there's a few things that can be done, and you're free to open some JIRA issues:\n  \n- Create more compact metadata for Tensors \u2013 Protocol Buffers could be a good option that's smaller than that Flatbuffers table that's produced. \n- Reduce the padding requirement to 8 bytes instead of 64 bytes. "
        }
    ]
}