{
    "issue": {
        "title": "[C++] Concatenating dictionary arrays with nulls fills wrong parts of index buffer with 0.",
        "body": "***Note**: This issue was originally created as [ARROW-17733](https://issues.apache.org/jira/browse/ARROW-17733). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen concatenating dictionary arrays with nulls, and whose index type is not 8-bit wide the wrong bits of the index buffer get zeroed out.\r\n\r\nExample using pyarrow:\r\n```java\n\r\nimport pyarrow as pa\r\ndictionary_type = pa.dictionary(pa.int16(), pa.string())\r\nempty_array = pa.array([], dictionary_type)\r\narray1 = pa.array([\"a\", \"b\", None], dictionary_type)\r\narray2 = pa.concat_arrays([empty_array, array1])\r\nprint(array1.to_pylist())\r\nprint(array2.to_pylist()) \n```\r\nWe would expect array1 and array2 to be the same, but this prints:\r\n```\n\r\n['a', 'b', None]\r\n['a', 'a', None] \n```\r\n\u00a0\r\n\r\nThis bug happens because the index type is 2-byte wide, so the null at position 2 should result in zeroing out byte 4-5 (0-indexed) of the index buffer. However the code instead zeroes out byte 2-3 because we don't take into account the width of the index type when adding the position here:\r\n\r\nhttps://github.com/apache/arrow/blob/master/cpp/src/arrow/array/concatenate.cc#L314-L315",
        "created_at": "2022-09-14T21:28:09.000Z",
        "updated_at": "2022-09-17T07:42:41.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-09-16T12:58:45.000Z"
    },
    "comments": [
        {
            "created_at": "2022-09-14T21:33:23.607Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17733?focusedCommentId=17604986) by Rasmus Johansen (rasnjo):*\nI've created this pull request which I believe solves this bug, and added a test to prevent regression: <https://github.com/apache/arrow/pull/14129/>"
        },
        {
            "created_at": "2022-09-16T06:07:58.804Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17733?focusedCommentId=17605629) by Rasmus Johansen (rasnjo):*\nI have put this \"In progress\" since the github actions bot was complaining in the pull request. I presume this is correct but if this is not how ticket workflow is supposed to go feel free to either correct the status/assignee or request that I do so."
        },
        {
            "created_at": "2022-09-16T12:58:45.777Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17733?focusedCommentId=17605807) by David Li (lidavidm):*\nIssue resolved by pull request 14129\n<https://github.com/apache/arrow/pull/14129>"
        }
    ]
}