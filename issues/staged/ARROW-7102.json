{
    "issue": {
        "title": "[Python] Make filesystems compatible with fsspec",
        "body": "***Note**: This issue was originally created as [ARROW-7102](https://issues.apache.org/jira/browse/ARROW-7102). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nUpdate: regarding compatibility with `fsspec`, there are two directions of wrapping possible:\r\n\r\n- Make a `fsspec` wrapper for `pyarrow.fs` (-> tracked in ARROW-8780, this can ensure `pyarrow.fs` filesystems can be used where `fsspec` filesytems are expected )\n- Make a `pyarrow.fs` wrapper for `fsspec` (-> tracked in ARROW-8766 + ARROW-9089 this can ensure `fsspec` filesystems can be used where `pyarrow.fs` filesytems are expected )\n  \n  \n----\r\n\r\n[fsspec](https://filesystem-spec.readthedocs.io/en/latest)\u00a0defines a common API for a variety filesystem implementations. I'm proposing a FSSpecWrapper, similar to S3FSWrapper, that works with any fsspec implementation.\r\n\r\n\u00a0\r\n\r\nRight now, pyarrow has a pyarrow.filesystems.S3FSWrapper, which is specific to s3fs. <https://github.com/apache/arrow/blob/21ad7ac1162eab188a1e15923fb1de5b795337ec/python/pyarrow/filesystem.py#L320>. This implementation could be removed entirely once an FSSPecWrapper is done, or kept as an alias if it's part of the public API.\r\n\r\n\u00a0\r\n\r\nThis is realted to ARROW-3717, which requested a GCSFSWrapper for working with google cloud storage.",
        "created_at": "2019-11-08T21:40:07.000Z",
        "updated_at": "2021-10-20T14:06:34.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-10-20T14:06:34.000Z"
    },
    "comments": [
        {
            "created_at": "2019-11-09T18:00:55.838Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7102?focusedCommentId=16970902) by Antoine Pitrou (apitrou):*\nHmm, so, to make sure there's no misunderstanding, we have been developing a C++ filesystem layer that's pretty much functional now, with local, mock and S3 implementations.\r\n\r\nThere's also a Python wrapping layer for the C++ filesystem layer. It's in `pyarrow.fs`, not `pyarrow.filesystem` which we now consider as legacy.\r\n\r\nGoing forward, two things could be useful:\r\n- Make a `fsspec` wrapper for `pyarrow.fs`\n- Make a `pyarrow.fs` wrapper for `fsspec`\n  \n  You can find the C++ filesystem API doc here:\n  https://arrow.apache.org/docs/cpp/api/filesystem.html#_CPPv4N5arrow2fs10FileSystemE\n  The Python wrappers are not documented on the website yet. But there are docstrings that you can also find here:\n  https://github.com/apache/arrow/blob/master/python/pyarrow/_fs.pyx#L172\n"
        },
        {
            "created_at": "2020-04-08T01:50:33.224Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7102?focusedCommentId=17077740) by Matthew Corley (corleyma):*\n`[~apitrou]` \u00a0- The Python wrapping for the C++ S3 filesystem implementation ( `pyarrow.fs.S3FileSystem`) seems to be missing in the latest (0.16.0) macOS wheel.\u00a0 Is this expected or should I open a separate issue?\r\n\r\nSteps to repro (in a fresh venv):\r\n**Install**\r\n```bash\n\r\n\u276f pip install --no-cache-dir --index-url https://pypi.python.org/pypi pyarrow\r\nLooking in indexes: https://pypi.python.org/pypi\r\nCollecting pyarrow\r\n  Downloading pyarrow-0.16.0-cp36-cp36m-macosx_10_9_intel.whl (40.6 MB)\r\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 40.6 MB 17.2 MB/s\r\nCollecting numpy>=1.14\r\n  Downloading numpy-1.18.2-cp36-cp36m-macosx_10_9_x86_64.whl (15.2 MB)\r\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 15.2 MB 2.7 MB/s\r\nCollecting six>=1.0.0\r\n  Downloading six-1.14.0-py2.py3-none-any.whl (10 kB)\r\nInstalling collected packages: numpy, six, pyarrow\r\nSuccessfully installed numpy-1.18.2 pyarrow-0.16.0 six-1.14.0\n```\r\n**Import:**\r\n```python\n\r\nPython 3.6.9 (default, Oct  1 2019, 14:07:47)\r\n[GCC 4.2.1 Compatible Apple LLVM 10.0.1 (clang-1001.0.46.4)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from pyarrow import fs\r\n>>> dir(fs)\r\n['FileSelector', 'FileStats', 'FileSystem', 'FileType', 'HadoopFileSystem', 'HdfsOptions', 'LocalFileSystem', 'LocalFileSystemOptions', 'SubTreeFileSystem', '_MockFileSystem', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'absolute_import']\r\n```\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0"
        },
        {
            "created_at": "2020-04-08T03:37:29.174Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7102?focusedCommentId=17077806) by Wes McKinney (wesm):*\nYou can open a separate issue. There are a number of features not available in the Python wheels because there has not been someone available to do the required packaging work. You can take a look at the wheel build toolchain if you want to try to add the AWS C++ SDK to the build\r\n\r\nhttps://github.com/apache/arrow/tree/master/python/manylinux1/scripts"
        },
        {
            "created_at": "2020-04-27T02:02:24.336Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7102?focusedCommentId=17092924) by Wes McKinney (wesm):*\nSeems like a wrapper should be developed. Is anyone interested to help with this?"
        },
        {
            "created_at": "2020-04-27T03:28:47.303Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7102?focusedCommentId=17092969) by Matthew Corley (corleyma):*\nI am going to take a look at getting the PyArrow native S3FS building for pip wheels starting next week.  Time permitting I could take a look at creating that fsspec wrapper after that, if the demand is there."
        },
        {
            "created_at": "2021-09-21T11:47:35.372Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7102?focusedCommentId=17418059) by Joris Van den Bossche (jorisvandenbossche):*\nAn fsspec wrapper around a pyarrow filesystem has now been added to `fsspec` (https://github.com/intake/filesystem_spec/pull/754, https://github.com/intake/filesystem_spec/issues/663). I will document this in the pyarrow docs, and then this issue (and the last child issue ARROW-8780) can be closed I think (since we already have the other way around, wrapping an fsspec filesystem in pyarrow)"
        },
        {
            "created_at": "2021-10-20T14:06:15.043Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7102?focusedCommentId=17431269) by Joris Van den Bossche (jorisvandenbossche):*\nWith all sub-issues being resolved, closing this parent issue as resolved as well."
        }
    ]
}