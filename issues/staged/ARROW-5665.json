{
    "issue": {
        "title": "[Python] ArrowInvalid on converting Pandas Series with dtype float64",
        "body": "***Note**: This issue was originally created as [ARROW-5665](https://issues.apache.org/jira/browse/ARROW-5665). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n```java\n\r\n('Could not convert 0 70.699997\\n0 73.000000\\n0 0.000000\\nName: fact_value, dtype: float64 with type Series: did not recognize Python value type when inferring an Arrow data type', 'Conversion failed for column fact_value with type float64')\n```\r\nWe are experiencing a lot of random errors (will run the same code and not get the error at all) when converting Pandas Dataframe to parquet files using pyarrow.\r\n\r\nWe use this line of code for the convertion:\r\n```java\n\r\ndataframe.to_parquet(filePath, compression=\"snappy\", index=False)\n```\r\nNote: `filePath`\u00a0is an\u00a0AWS S3 URI.\r\n```java\n\r\nArrowInvalid: ('Could not convert 0 70.699997\\n0 73.000000\\n0 0.000000\\nName: fact_value, dtype: float64 with type Series: did not recognize Python value type when inferring an Arrow data type', 'Conversion failed for column fact_value with type float64')\r\n File \"store_manager.py\", line 25, in _write_files_and_partitions\r\n dataframe.to_parquet(filePath, compression=\"snappy\", index=False)\r\n File \"pandas/core/frame.py\", line 2203, in to_parquet\r\n partition_cols=partition_cols, **kwargs)\r\n File \"pandas/io/parquet.py\", line 252, in to_parquet\r\n partition_cols=partition_cols, **kwargs)\r\n File \"pandas/io/parquet.py\", line 113, in write\r\n table = self.api.Table.from_pandas(df, **from_pandas_kwargs)\r\n File \"pyarrow/table.pxi\", line 1139, in pyarrow.lib.Table.from_pandas\r\n names, arrays, metadata = dataframe_to_arrays(\r\n File \"pyarrow/pandas_compat.py\", line 474, in dataframe_to_arrays\r\n convert_types))\r\n File \"concurrent/futures/_base.py\", line 586, in result_iterator\r\n yield fs.pop().result()\r\n File \"concurrent/futures/_base.py\", line 425, in result\r\n return self.__get_result()\r\n File \"concurrent/futures/_base.py\", line 384, in __get_result\r\n raise self._exception\r\n File \"concurrent/futures/thread.py\", line 57, in run\r\n result = self.fn(*self.args, **self.kwargs)\r\n File \"pyarrow/pandas_compat.py\", line 463, in convert_column\r\n raise e\r\n File \"pyarrow/pandas_compat.py\", line 457, in convert_column\r\n return pa.array(col, type=ty, from_pandas=True, safe=safe)\r\n File \"pyarrow/array.pxi\", line 173, in pyarrow.lib.array\r\n return _sequence_to_array(obj, mask, size, type, pool, from_pandas)\r\n File \"pyarrow/array.pxi\", line 36, in pyarrow.lib._sequence_to_array\r\n check_status(ConvertPySequence(sequence, mask, options, &out))\r\n File \"pyarrow/error.pxi\", line 81, in pyarrow.lib.check_status\r\n raise ArrowInvalid(message)\n```",
        "created_at": "2019-06-20T10:55:33.000Z",
        "updated_at": "2019-07-09T16:14:23.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-07-09T16:10:05.000Z"
    },
    "comments": [
        {
            "created_at": "2019-06-20T14:30:58.980Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5665?focusedCommentId=16868572) by Joris Van den Bossche (jorisvandenbossche):*\n`[~tnesztler]` Can you try to provide a reproducible example?\r\n\r\nBased on the error message, it seems you have a column in your DataFrame that has Series objects as values in the rows. That's not support by pyarrow. \r\nIf that is intentional, and you want to save them as a nested List type, then you need to convert the column of Series objects to a column of arrays or lists."
        },
        {
            "created_at": "2019-06-20T14:38:44.313Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5665?focusedCommentId=16868579) by Thibaud Nesztler (tnesztler):*\n`[~jorisvandenbossche]` I didn't understand that a Series object was used as value vs a simple float64.\r\n I have been trying to look at info() outputs of the DataFrame and it always stated float64 as the column dtype, not object.\r\n\r\nThis is not intentional and the entire column (fact_value in this example) should be a list / series of floats.\r\n\r\nIf I come across a reproducible example, I'll be happy to share it but\u00a0in the mean time,\u00a0with your help,\u00a0I will try\u00a0to\u00a0debug the issue.\u00a0"
        },
        {
            "created_at": "2019-07-09T16:09:43.160Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5665?focusedCommentId=16881351) by Joris Van den Bossche (jorisvandenbossche):*\nClosing this as it seems a user error (Series objects by accident in the columns), and not something to fix in pyarrow. `[~tnesztler]` That's correct right?"
        },
        {
            "created_at": "2019-07-09T16:14:23.486Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5665?focusedCommentId=16881355) by Thibaud Nesztler (tnesztler):*\n`[~jorisvandenbossche]` I am even unable to reproduce the issue in a controlled environment.\r\nI am trying to solve it by forcing reset_index on Pandas (and break those Series). So far it holds but since it was random in the first place, I have no idea if it is actually resolved.\r\n\r\nYou can close the issue and if it reappears, I'll let people know here."
        }
    ]
}