{
    "issue": {
        "title": "[Python] Parallel csv reader cancellation test kills pytest",
        "body": "***Note**: This issue was originally created as [ARROW-12241](https://issues.apache.org/jira/browse/ARROW-12241). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCI job is okay, but it failed from my side. Tested on x86 skylake server with 32 cores, and Apple M1 with 8 cores.\r\n\r\nMaybe I missed something?\r\n\r\nTest steps:\r\n```bash\n\r\n$ cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DARROW_COMPUTE=ON -DARROW_PARQUET=ON -DARROW_BUILD_TESTS=ON -DCMAKE_INSTALL_PREFIX=$(pwd)/_install -DCMAKE_INSTALL_LIBDIR=lib -DARROW_PYTHON=ON -DCMAKE_CXX_COMPILER=/usr/bin/clang++-9 -DCMAKE_C_COMPILER=/usr/bin/clang-9 ..\r\n$ ninja install\r\n$ cd ~/arrow/python\r\n# set LD_LIBRARY_PATH, ARROW_HOME to newly built binaries\r\n$ python setup.py build_ext --inplace\r\n$ pytest pyarrow\r\n```\r\n\r\nError log:\r\n```bash\n\r\n======================================================================================= test session starts ========================================================================================\r\nplatform linux -- Python 3.6.9, pytest-6.1.2, py-1.9.0, pluggy-0.13.1\r\nrootdir: /home/cyb/arrow/python, configfile: setup.cfg\r\nplugins: lazy-fixture-0.6.3, hypothesis-5.41.2\r\ncollected 3802 items / 3 skipped / 3799 selected                                                                                                                                                   \r\n\r\npyarrow/tests/test_adhoc_memory_leak.py s                                                                                                                                                    [  0%]\r\npyarrow/tests/test_array.py ......................s...........................................................................................s............................................. [  4%]\r\n............................ss.........                                                                                                                                                      [  5%]\r\npyarrow/tests/test_builder.py ....                                                                                                                                                           [  5%]\r\npyarrow/tests/test_cffi.py ......                                                                                                                                                            [  5%]\r\npyarrow/tests/test_compute.py ....................................................................................................................................................           [  9%]\r\npyarrow/tests/test_convert_builtin.py ...................................................................................................................................................... [ 13%]\r\n................................................................................................................................x..................................................x........ [ 18%]\r\n...............ssssss.....................................................................................................sssssss                                                            [ 21%]\r\npyarrow/tests/test_csv.py ....................................F.......................\r\n\r\n============================================================================================= FAILURES =============================================================================================\r\n______________________________________________________________________________ TestParallelCSVRead.test_cancellation _______________________________________________________________________________\r\n\r\nself = <pyarrow.tests.test_csv.TestParallelCSVRead testMethod=test_cancellation>\r\n\r\n    def test_cancellation(self):\r\n        if (threading.current_thread().ident !=\r\n                threading.main_thread().ident):\r\n            pytest.skip(\"test only works from main Python thread\")\r\n\r\n        if sys.version_info >= (3, 8):\r\n            raise_signal = signal.raise_signal\r\n        elif os.name == 'nt':\r\n# On Windows, os.kill() doesn't actually send a signal,\r\n# it just terminates the process with the given exit code.\r\n            pytest.skip(\"test requires Python 3.8+ on Windows\")\r\n        else:\r\n# On Unix, emulate raise_signal() with os.kill().\r\n            def raise_signal(signum):\r\n                os.kill(os.getpid(), signum)\r\n\r\n        large_csv = b\"a,b,c\\n\" + b\"1,2,3\\n\" * 30000000\r\n\r\n        def signal_from_thread():\r\n            time.sleep(0.2)\r\n            raise_signal(signal.SIGINT)\r\n\r\n        t1 = time.time()\r\n        with pytest.raises(KeyboardInterrupt) as exc_info:\r\n            threading.Thread(target=signal_from_thread).start()\r\n>           self.read_bytes(large_csv)\r\nE           Failed: DID NOT RAISE <class 'KeyboardInterrupt'>\r\n\r\npyarrow/tests/test_csv.py:927: Failed\r\n========================================================================================= warnings summary =========================================================================================\r\n../../archery/lib/python3.6/distutils/__init__.py:4\r\n  /home/cyb/archery/lib/python3.6/distutils/__init__.py:4: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses\r\n    import imp\r\n\r\n-- Docs: https://docs.pytest.org/en/stable/warnings.html\r\n===================================================================================== short test summary info ======================================================================================\r\nFAILED pyarrow/tests/test_csv.py::TestParallelCSVRead::test_cancellation - Failed: DID NOT RAISE <class 'KeyboardInterrupt'>\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! KeyboardInterrupt !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\npyarrow/error.pxi:221: KeyboardInterrupt\r\n(to show a full traceback on KeyboardInterrupt use --full-trace)\r\n================================================================= 1 failed, 864 passed, 21 skipped, 2 xfailed, 1 warning in 4.19s ==================================================================\r\n```\r\n",
        "created_at": "2021-04-07T06:36:45.000Z",
        "updated_at": "2021-04-07T14:03:54.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-04-07T14:03:54.000Z"
    },
    "comments": [
        {
            "created_at": "2021-04-07T06:58:33.220Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12241?focusedCommentId=17316047) by yibocai#1 (yibocai#1):*\nHmm..., looks the keyboard interrupt is generated deliberately to test the cancellation? But why it stops the pytest main process?"
        },
        {
            "created_at": "2021-04-07T07:21:21.458Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12241?focusedCommentId=17316063) by Antoine Pitrou (apitrou):*\n> , looks the keyboard interrupt is generated deliberately to test the cancellation? But why it stops the pytest main process?\r\n\r\nHmm... probably because CSV parsing is too fast on your machine (especially in release mode). We can try to tweak the timings and/or make the workload harder."
        },
        {
            "created_at": "2021-04-07T07:30:11.918Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12241?focusedCommentId=17316069) by yibocai#1 (yibocai#1):*\nDid a quick test by limiting the #cores \"taskset -c 1-4 pytest pyarrow\", it does resolves the issue."
        },
        {
            "created_at": "2021-04-07T07:31:30.160Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12241?focusedCommentId=17316076) by Antoine Pitrou (apitrou):*\nOk, we should try to make this test more robust anyway."
        },
        {
            "created_at": "2021-04-07T14:03:54.960Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12241?focusedCommentId=17316363) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 9920\n<https://github.com/apache/arrow/pull/9920>"
        }
    ]
}