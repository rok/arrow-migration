{
    "issue": {
        "title": "[C++] Enable joins when data contains a list column",
        "body": "***Note**: This issue was originally created as [ARROW-15731](https://issues.apache.org/jira/browse/ARROW-15731). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently Arrow joins with data that contain a list column errors, even when the list column is not a join key. Here's an example using the R bindings:\r\n```java\n\r\nlibrary(arrow)\r\nlibrary(dplyr)\r\n\r\njedi <- data.frame(name = c(\"C-3PO\", \"Luke Skywalker\"),\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0jedi = c(FALSE, TRUE))\r\n\r\narrow_table(starwars) %>%\r\n\u00a0 left_join(jedi) %>%\r\n\u00a0 collect()\r\n#> Error in `handle_csv_read_error()`:\r\n#> ! Invalid: Data type list<item: string> is not supported in join non-key field\r\n```\r\nThe ability to join would be a useful enhancement for workflows with tabular data where list columns can be common, and for geospatial workflows where geometry columns are stored as `list` or `fixed_size_list` (thanks `[~paleolimbot]` for mentioning that use case).\r\n\r\nRelated discussion here: ARROW-14519\r\n\r\n\u00a0",
        "created_at": "2022-02-18T19:37:23.000Z",
        "updated_at": "2022-02-18T20:40:03.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": []
}