{
    "issue": {
        "title": "[Rust] [DataFusion] Increase stability of average accumulator",
        "body": "***Note**: This issue was originally created as [ARROW-9779](https://issues.apache.org/jira/browse/ARROW-9779). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently, our method to compute the average is based on:\r\n\r\n1. compute sum of all terms\r\n2. compute count of all terms\r\n3. compute sum / count\r\n\r\nhowever, the sum may overflow.\r\n\r\nThere is a typical solution to this based on an online formula described e.g. [here](http://www.heikohoffmann.de/htmlthesis/node134.html) to keep the numbers small.\r\n",
        "created_at": "2020-08-18T06:12:17.000Z",
        "updated_at": "2020-08-23T21:53:44.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Component: Rust - DataFusion",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-08-23T21:53:44.000Z"
    },
    "comments": [
        {
            "created_at": "2020-08-23T21:53:44.560Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9779?focusedCommentId=17182861) by Jorge Leit\u00e3o (jorgecarleitao):*\nThere are other trade-offs here, and there is no consesus that this is worth. Spark also uses sum / count."
        }
    ]
}