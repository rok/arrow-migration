{
    "issue": {
        "title": "[C++] Provide more informative error when (CSV/JSON) parsing fails",
        "body": "***Note**: This issue was originally created as [ARROW-18107](https://issues.apache.org/jira/browse/ARROW-18107). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nRelated to ARROW-18106 (and derived from https://stackoverflow.com/questions/74138746/why-i-cant-parse-timestamp-in-pyarrow). \r\n\r\nAssume you have the following code to read a JSON file with timestamps. The timestamps have a sub-second part in their string, which fails parsing if you specify it as second resolution timestamp:\r\n\r\n```python\n\r\nimport io\r\nfrom pyarrow import json\r\n\r\ns_json = \"\"\"{\"column\":\"2022-09-05T08:08:46.000\"}\"\"\"\r\n\r\nopts = json.ParseOptions(explicit_schema=pa.schema([(\"column\", pa.timestamp(\"s\"))]), unexpected_field_behavior=\"ignore\")\r\njson.read_json(io.BytesIO(s_json.encode()), parse_options=opts)\r\n```\r\n\r\ngives:\r\n\r\n```Java\n\r\nArrowInvalid: Failed of conversion of JSON to timestamp[s], couldn't parse:2022-09-05T08:08:46.000\r\n```\r\n\r\nThis error is expected, but I think it could be more informative about the reason why it failed parsing (because at first sight it looks like a proper timestamp string, so you might be left wondering why this is failing). \r\n\r\n(this might not be that straightforward, though, since there can be many reasons why the parsing is failing)\r\n\r\n\r\n\r\n",
        "created_at": "2022-10-20T13:01:44.000Z",
        "updated_at": "2022-10-20T13:01:44.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": []
}