{
    "issue": {
        "title": "[Python] converting multidimensional numpy arrays to nested list type",
        "body": "***Note**: This issue was originally created as [ARROW-5857](https://issues.apache.org/jira/browse/ARROW-5857). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently we only support 1-dimensional numpy arrays:\r\n\r\n```python\n\r\nIn [28]: pa.array([np.array([[1, 2], [3, 4]])], type=pa.list_(pa.list_(pa.int64()))) \r\n...\r\nArrowInvalid: Can only convert 1-dimensional array values\r\n```\r\n\r\nSo to create a nested list array, you can do that with lists of lists or object numpy arrays with arrays as elements. We could expand this support to multi-dimensional numpy arrays.\r\n\r\nI am not sure we should do inference by default for this case, but at least when specifying a nested ListType, this would be nice. \r\n\r\nIt can be an alternative way to have some support for tensors, next to an ExtensionType (ARROW-1614 / ARROW-5819)\r\n\r\nRelated discussions: https://lists.apache.org/thread.html/9b142c1709aa37dc35f1ce8db4e1ced94fcc4cdd96cc72b5772b373b@%3Cdev.arrow.apache.org%3E, https://github.com/apache/arrow/issues/4802",
        "created_at": "2019-07-04T21:32:57.000Z",
        "updated_at": "2019-07-09T16:26:00.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-07-09T16:26:00.000Z"
    },
    "comments": [
        {
            "created_at": "2019-07-09T16:26:00.718Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5857?focusedCommentId=16881370) by Joris Van den Bossche (jorisvandenbossche):*\nThere was actually already an open issue for this: ARROW-5645"
        }
    ]
}