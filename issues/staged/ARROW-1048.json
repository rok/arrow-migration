{
    "issue": {
        "title": "Allow user LD_LIBRARY_PATH to be used with source release script",
        "body": "***Note**: This issue was originally created as [ARROW-1048](https://issues.apache.org/jira/browse/ARROW-1048). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIf user is developing Arrow C++ using `$BOOST_ROOT` for CMake, GLib will use the system Boost if it is installed, causing linker errors (I have run into this when creating source releases). We should provide a way to use the same toolchain dependencies when compiling arrow-glib as well",
        "created_at": "2017-05-17T20:01:18.000Z",
        "updated_at": "2017-06-07T13:35:42.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: GLib",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2017-06-07T13:35:42.000Z"
    },
    "comments": [
        {
            "created_at": "2017-05-18T00:25:07.410Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1048?focusedCommentId=16014980) by Kouhei Sutou (kou):*\nCould you share command lines that reproduce the problem? I wan to confirm this.\n\n(I think that arrow-glib shouldn't depend on Boost.)"
        },
        {
            "created_at": "2017-05-18T01:17:54.835Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1048?focusedCommentId=16015035) by Wes McKinney (wesm):*\nIt looks like the issue is that the `$LD_LIBRARY_PATH`, if any, is not visible during the link step\n\n```Java\n/usr/bin/ld: warning: libboost_system.so.1.64.0, needed by /home/wesm/code/arrow/tmp-apache-arrow/cpp/install/lib/libarrow.so.0, not found (try using -rpath or -rpath-link)\n/usr/bin/ld: warning: libboost_filesystem.so.1.64.0, needed by /home/wesm/code/arrow/tmp-apache-arrow/cpp/install/lib/libarrow.so.0, not found (try using -rpath or -rpath-link)\n/home/wesm/code/arrow/tmp-apache-arrow/cpp/install/lib/libarrow.so.0: undefined reference to `boost::system::system_category()'\n/home/wesm/code/arrow/tmp-apache-arrow/cpp/install/lib/libarrow.so.0: undefined reference to `boost::system::generic_category()'\n/home/wesm/code/arrow/tmp-apache-arrow/cpp/install/lib/libarrow.so.0: undefined reference to `boost::filesystem::path::operator/=(boost::filesystem::path const&)'\ncollect2: error: ld returned 1 exit status\nlinking of temporary binary failed: Command '['/bin/bash', '../libtool', '--mode=link', '--tag=CC', '--silent', '/home/wesm/code/native-toolchain/build/gcc-4.9.2/bin/gcc', '-o', '/home/wesm/code/arrow/tmp-apache-arrow/c_glib/arrow-glib/tmp-introspectFpRYOO/Arrow-1.0', '-export-dynamic', '/home/wesm/code/arrow/tmp-apache-arrow/c_glib/arrow-glib/tmp-introspectFpRYOO/Arrow-1.0.o', '-L.', 'libarrow-glib.la', '-Wl,--export-dynamic', '-pthread', '-lgio-2.0', '-lgmodule-2.0', '-lgobject-2.0', '-lglib-2.0']' returned non-zero exit status 1\nmake[3]: *** [Arrow-1.0.gir] Error 1\nmake[3]: Leaving directory `/home/wesm/code/arrow/tmp-apache-arrow/c_glib/arrow-glib'\nmake[2]: *** [all] Error 2\nmake[2]: Leaving directory `/home/wesm/code/arrow/tmp-apache-arrow/c_glib/arrow-glib'\nmake[1]: *** [all-recursive] Error 1\nmake[1]: Leaving directory `/home/wesm/code/arrow/tmp-apache-arrow/c_glib'\nmake: *** [all] Error 2\n```\n\nbut\n\n```Java\n$ ldd tmp-apache-arrow/cpp/install/lib/libarrow.so\tlinux-vdso.so.1 =>  (0x00007fff4a557000)\n\tlibdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f2f9fcde000)\n\tlibpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f2f9fabf000)\n\tlibboost_system.so.1.64.0 => /home/wesm/cpp-toolchain/lib/libboost_system.so.1.64.0 (0x00007f2f9f8bc000)\n\tlibboost_filesystem.so.1.64.0 => /home/wesm/cpp-toolchain/lib/libboost_filesystem.so.1.64.0 (0x00007f2f9f6a4000)\n\tlibstdc++.so.6 => /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007f2f9f391000)\n\tlibm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f2f9f08b000)\n\tlibgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007f2f9ee74000)\n\tlibc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f2f9eaab000)\n\t/lib64/ld-linux-x86-64.so.2 (0x00005617c7d1a000)\n\tlibrt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007f2f9e8a3000)\n```\n\nIf you would like to reproduce, you can run (though I haven't tested this, if it doesn't work I'll fix it for you)\n\n```Java\nwget -O miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh\n\nMINICONDA=$HOME/test_miniconda\nbash miniconda.sh -b -p $MINICONDA\nexport PATH=$MINICONDA/bin:$PATH\n\nexport TOOLCHAIN=$HOME/cpp-toolchain\nconda create -p  boost-cpp\nexport LD_LIBRARY_PATH=$TOOLCHAIN/lib:$LD_LIBRARY_PATH\nexport BOOST_ROOT=$TOOLCHAIN\n```"
        },
        {
            "created_at": "2017-05-18T04:06:48.140Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1048?focusedCommentId=16015167) by Kouhei Sutou (kou):*\nThanks. It's reasonable that this problem is related to `LD_LIBRARY_PATH`.\nWe need to set `LD_LIBRARY_PATH` like we did in `dev/release/02-source.sh` when we install libraries into the not standard directory: https://github.com/apache/arrow/blob/master/dev/release/02-source.sh#L77\n"
        },
        {
            "created_at": "2017-06-07T02:33:38.349Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1048?focusedCommentId=16040037) by Wes McKinney (wesm):*\nPR: https://github.com/apache/arrow/pull/738"
        },
        {
            "created_at": "2017-06-07T13:35:42.391Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1048?focusedCommentId=16040887) by Kouhei Sutou (kou):*\nIssue resolved by pull request 738\nhttps://github.com/apache/arrow/pull/738"
        }
    ]
}