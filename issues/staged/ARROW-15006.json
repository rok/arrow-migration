{
    "issue": {
        "title": "[Python][Doc] Iteratively enable more numpydoc checks",
        "body": "***Note**: This issue was originally created as [ARROW-15006](https://issues.apache.org/jira/browse/ARROW-15006). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nAsof https://github.com/apache/arrow/pull/7732 we're going to have a numpydoc check running on pull requests. There is a single rule enabled at the moment: PR01\r\n\r\nAdditional checks we can run:\r\n\r\n```Java\n\r\nERROR_MSGS = {\r\n    \"GL01\": \"Docstring text (summary) should start in the line immediately \"\r\n            \"after the opening quotes (not in the same line, or leaving a \"\r\n            \"blank line in between)\",\r\n    \"GL02\": \"Closing quotes should be placed in the line after the last text \"\r\n            \"in the docstring (do not close the quotes in the same line as \"\r\n            \"the text, or leave a blank line between the last text and the \"\r\n            \"quotes)\",\r\n    \"GL03\": \"Double line break found; please use only one blank line to \"\r\n            \"separate sections or paragraphs, and do not leave blank lines \"\r\n            \"at the end of docstrings\",\r\n    \"GL05\": 'Tabs found at the start of line \"{line_with_tabs}\", please use '\r\n            \"whitespace only\",\r\n    \"GL06\": 'Found unknown section \"{section}\". Allowed sections are: '\r\n            \"{allowed_sections}\",\r\n    \"GL07\": \"Sections are in the wrong order. Correct order is: {correct_sections}\",\r\n    \"GL08\": \"The object does not have a docstring\",\r\n    \"GL09\": \"Deprecation warning should precede extended summary\",\r\n    \"GL10\": \"reST directives {directives} must be followed by two colons\",\r\n    \"SS01\": \"No summary found (a short summary in a single line should be \"\r\n            \"present at the beginning of the docstring)\",\r\n    \"SS02\": \"Summary does not start with a capital letter\",\r\n    \"SS03\": \"Summary does not end with a period\",\r\n    \"SS04\": \"Summary contains heading whitespaces\",\r\n    \"SS05\": \"Summary must start with infinitive verb, not third person \"\r\n            '(e.g. use \"Generate\" instead of \"Generates\")',\r\n    \"SS06\": \"Summary should fit in a single line\",\r\n    \"ES01\": \"No extended summary found\",\r\n    \"PR01\": \"Parameters {missing_params} not documented\",\r\n    \"PR02\": \"Unknown parameters {unknown_params}\",\r\n    \"PR03\": \"Wrong parameters order. Actual: {actual_params}. \"\r\n            \"Documented: {documented_params}\",\r\n    \"PR04\": 'Parameter \"{param_name}\" has no type',\r\n    \"PR05\": 'Parameter \"{param_name}\" type should not finish with \".\"',\r\n    \"PR06\": 'Parameter \"{param_name}\" type should use \"{right_type}\" instead '\r\n            'of \"{wrong_type}\"',\r\n    \"PR07\": 'Parameter \"{param_name}\" has no description',\r\n    \"PR08\": 'Parameter \"{param_name}\" description should start with a '\r\n            \"capital letter\",\r\n    \"PR09\": 'Parameter \"{param_name}\" description should finish with \".\"',\r\n    \"PR10\": 'Parameter \"{param_name}\" requires a space before the colon '\r\n            \"separating the parameter name and type\",\r\n    \"RT01\": \"No Returns section found\",\r\n    \"RT02\": \"The first line of the Returns section should contain only the \"\r\n            \"type, unless multiple values are being returned\",\r\n    \"RT03\": \"Return value has no description\",\r\n    \"RT04\": \"Return value description should start with a capital letter\",\r\n    \"RT05\": 'Return value description should finish with \".\"',\r\n    \"YD01\": \"No Yields section found\",\r\n    \"SA01\": \"See Also section not found\",\r\n    \"SA02\": \"Missing period at end of description for See Also \"\r\n            '\"{reference_name}\" reference',\r\n    \"SA03\": \"Description should be capitalized for See Also \"\r\n            '\"{reference_name}\" reference',\r\n    \"SA04\": 'Missing description for See Also \"{reference_name}\" reference',\r\n    \"EX01\": \"No examples section found\",\r\n}\r\n```\r\n\r\ncc `[~alenkaf]` `[~amol-]` `[~jorisvandenbossche]`",
        "created_at": "2021-12-07T10:59:27.000Z",
        "updated_at": "2022-10-20T07:41:27.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Documentation",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-08-18T00:38:14.041Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15006?focusedCommentId=17581088) by Bryce Mecum (brycemecum):*\nIs this something others still want? If so, I'd like to help get this done.\r\n\r\nTo see the impact of running all validation checks instead of just two currently being run (PR01, PR10), I ran `archery numpydoc` without specifying any checks which seems to run all checks. I got 1458 violations across 26 checks [1] and that's even without a complete pyarrow build. Since expanding the number of numpydocs checks that get run would cause certain CI jobs to fail, would we want to expand the list strategically or just enable all of them at once?\r\n\r\n[1] https://gist.github.com/amoeba/8020032b94fc0aa217e69b4c0308c06c"
        },
        {
            "created_at": "2022-08-18T15:44:53.803Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15006?focusedCommentId=17581404) by Will Jones (willjones127):*\nPerhaps we should start with the style-only ones first (PR06: Parameter \"accept_root_dir\" type should use \"bool\" instead of \"boolean\"), and skip the \"missing\" warnings (GL08: The object does not have a docstring). I think the missing ones will be good to do, but will require a lot more work to get enough context to properly describe each of the objects, so possibly better as a follow up. That's should narrow things down to some mechanical changes that we can get out of the way quickly (if only there were an automatic formatter).\r\n\r\nAlso, we should double check that we have instructions for how to run these checks locally, so that developers can verify their changes before pushing them."
        },
        {
            "created_at": "2022-08-19T20:04:36.061Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15006?focusedCommentId=17582012) by Bryce Mecum (brycemecum):*\nMakes sense and seems pragmatic. I'll start with a patch just to enable PR06, fix all related issues, and add a note in the Python developer docs."
        },
        {
            "created_at": "2022-08-27T02:17:40.408Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15006?focusedCommentId=17585649) by Bryce Mecum (brycemecum):*\nI added a single check, PR03, in [13983](https://github.com/apache/arrow/pull/13983) and fixed the corresponding violations. While I was in there and looking at adding documentation on how to run the numpydoc checks, I realized there are two slightly different ways to run numpydoc:\r\n \\* archery numpydoc\r\n \\* archery lint --numpydoc\r\n\r\nI'm going to file a separate Jira for documenting how to run the checks locally and see if we can't provide just a single way."
        },
        {
            "created_at": "2022-08-29T09:47:40.592Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15006?focusedCommentId=17597082) by Joris Van den Bossche (jorisvandenbossche):*\nThanks for looking into this `[~brycemecum]`!\r\n\r\nIn general, I think we should maybe also have a brief discussion before adding a new check (and changing our code to pass the check). The ones that ensure completeness (like ensuring that there is a docstring, that all parameters are documented, there is a return statement, the titles are correct for online rendering, etc) are really useful, but there are also a bunch of style checks that might be less valuable (some might come off as a bit nitpicky, like missing \".\" at the end of the summary, I don't know if we want to follow all of them strictly)"
        },
        {
            "created_at": "2022-08-29T23:58:59.443Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15006?focusedCommentId=17597435) by Bryce Mecum (brycemecum):*\nA brief discussion sounds like a great idea. To accompany a discussion, I put together a Google Sheet with a summary all checks and their status with respect to being enabled on CI, passing, etc. See https://docs.google.com/spreadsheets/d/1NVzQe3MA4Mh-AqsWUmwIZu9r5gB-Lmugz7mge3stYvU. What's a good venue to discuss?"
        },
        {
            "created_at": "2022-08-30T15:24:41.583Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15006?focusedCommentId=17597937) by Will Jones (willjones127):*\nGreat spreadsheet! Best place for developer discussions is the dev mailing list, since it's the most public. Add a link to this ticket and the spreadsheet, and you can add a `[Python][Doc]` prefix to the subject to help recipients know if it's relevant to them."
        },
        {
            "created_at": "2022-09-06T14:34:39.419Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15006?focusedCommentId=17600800) by Joris Van den Bossche (jorisvandenbossche):*\nNice overview! I think your proposal for candidate checks to enable/update looks quite sensible, thanks for that (added a few comments).\r\n\r\n(personally not sure this requires a mailing list discussion, as it are relatively minor changes on its own, and only about documentation)"
        }
    ]
}