{
    "issue": {
        "title": "[C#] Remove IArrowArray and use Array base class.",
        "body": "***Note**: This issue was originally created as [ARROW-5546](https://issues.apache.org/jira/browse/ARROW-5546). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIn .NET libraries, we have historically favored classes (abstract or otherwise) over interfaces. See [Choosing Between Classes and Interfaces](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms229013(v%3dvs.100)). The main reasoning is that you can\u00a0add members to a class over time, but once you ship an interface, it can never be changed. You can only add new interfaces.\r\n\r\n\u00a0In light of this, we should remove the IArrowArray interface, and instead just the base `Array` class as the abstraction for all Arrow Arrays.\r\n\r\nAs part of this, we should also consider renaming `Array` because it conflicts with the System.Array type. Instead we should consider naming it `ArrowArray` to make it unique from the very common System.Array type in .NET.",
        "created_at": "2019-06-10T20:43:15.000Z",
        "updated_at": "2019-06-10T20:43:15.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C#",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": []
}