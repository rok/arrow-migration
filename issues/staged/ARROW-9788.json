{
    "issue": {
        "title": "Handle naming inconsistencies between SQL, DataFrame API and struct names",
        "body": "***Note**: This issue was originally created as [ARROW-9788](https://issues.apache.org/jira/browse/ARROW-9788). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently, we have naming inconsistencies between the different APIs that make it a bit confusing. The typical example atm is \r\n\r\n`df.where().to_plan?.explain()` shows a \"Selection\" in the plan when \"Selection\" in SQL and many other query languages is a projection, not a filter.\r\n\r\nOther examples:\r\n\r\n```\r\nname: Selection\r\nSQL: WHERE\r\nDF: filter\r\n```\r\n\r\n```\r\nname: Aggregation\r\nSQL: GROUP BY\r\nDF: aggregate\r\n```\r\n\r\n```\r\nname: Projection\r\nSQL: SELECT\r\nDF: select,select_columns\r\n```\r\n\r\nI suggest that we align them with a common notation, preferably aligned with other more common query languages.\r\n\r\nI am assigning this to you `[~andygrove]` as you are probably the only person that can take a decision on this.",
        "created_at": "2020-08-18T18:47:38.000Z",
        "updated_at": "2020-08-19T19:00:16.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust - DataFusion",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-08-19T13:28:22.000Z"
    },
    "comments": [
        {
            "created_at": "2020-08-19T13:28:22.310Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9788?focusedCommentId=17180549) by Andy Grove (andygrove):*\nIssue resolved by pull request 7998\n<https://github.com/apache/arrow/pull/7998>"
        }
    ]
}