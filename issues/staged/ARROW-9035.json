{
    "issue": {
        "title": "[C++] Writing IPC messages with 64-byte buffer alignment vs. 8-byte default",
        "body": "***Note**: This issue was originally created as [ARROW-9035](https://issues.apache.org/jira/browse/ARROW-9035). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI used the C++ library to create a very small arrow file (1 field of 5 int32) and was surprised that the buffers are not aligned to 64 bytes as per the documentation section \"Buffer Alignment and Padding\" with examples.. based on the examples there, the 20 bytes of int32 should be padded to 64 bytes, but it is only 24 (see below) .\u00a0 \u00a0\r\n\r\nextract message metadata - see BodyLength = 24\r\n```java\n\r\n{\r\n  version: \"V4\",\r\n  header_type: \"RecordBatch\",\r\n  header: {\r\n    nodes: [\r\n      {\r\n        length: 5,\r\n        null_count: 0\r\n      }\r\n    ],\r\n    buffers: [\r\n      {\r\n        offset: 0,\r\n        length: 0\r\n      },\r\n      {\r\n        offset: 0,\r\n        length: 20\r\n      }\r\n    ]\r\n  },\r\n  bodyLength: 24\r\n} \n```\r\nReading further down the documentation section \"Encapsulated message format\"\u00a0it says serialization should use 8 byte alignment.\u00a0\r\n\r\nThese both seem at odds with each other and some clarification is needed.\r\n\r\nIs the documentation wrong?\u00a0\r\n\r\nOr\r\n\r\nShould\u00a08 byte alignment be used for File and 64 byte for IPC ?",
        "created_at": "2020-06-04T15:44:53.000Z",
        "updated_at": "2020-06-04T17:38:02.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Documentation",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2020-06-04T16:22:15.685Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9035?focusedCommentId=17126052) by Anthony Abate (abbot):*\nPerhaps in RFC terms ([https://tools.ietf.org/html/rfc2119)](https://tools.ietf.org/html/rfc2119)\u00a0the doc should say:\r\n\r\nAll buffers (metadata (flatbuffers) and data buffers) MUST be 8 byte aligned but SHOULD be 64 byte aligned - This would apply to both sections.\r\n\r\nWith most of the docs going stressing 64 byte alignment, I didn't realize the 'default' alignment the C++ library is 8 bytes.. assumed it would be 64 byte.\r\n\r\n\u00a0\r\n\r\n\u00a0"
        },
        {
            "created_at": "2020-06-04T16:36:38.364Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9035?focusedCommentId=17126062) by Wes McKinney (wesm):*\nIt's supposed to be configurable\r\n\r\nhttps://github.com/apache/arrow/blob/master/cpp/src/arrow/ipc/options.h#L47\r\n\r\nI don't know if this configuration parameter is respected though. It's a big project and there are only so many helping hands. "
        },
        {
            "created_at": "2020-06-04T17:37:33.155Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9035?focusedCommentId=17126099) by Anthony Abate (abbot):*\nyes - I didn't realize it was configurable - it probably works (but i'll know soon if it doesnt)\u00a0\u00a0\r\n\r\nI thought the docs sections were in conflict - but now I realize that 8 byte alignment is the 'requirement' not 64..\u00a0 (64 is still a multiple of 8)\r\n\r\n\u00a0"
        }
    ]
}