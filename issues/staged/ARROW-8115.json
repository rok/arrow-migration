{
    "issue": {
        "title": "[Python] Conversion when mixing NaT and datetime objects not working",
        "body": "***Note**: This issue was originally created as [ARROW-8115](https://issues.apache.org/jira/browse/ARROW-8115). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n### Code Sample\r\n\r\n```python\n\r\nimport pandas as pd\r\ndf = pd.DataFrame({\"date\": [\"\", \"2019-05-01\"]})\r\ndf.date = pd.to_datetime(df.date).dt.date\r\ndf.to_parquet(\"issue_NaT_parquet\")\r\n```\r\n\r\n### Problem description\r\n\r\nThe above gives me the following error:\r\n\r\n```Java\n\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-13-432405bef6ac> in <module>\r\n----> 1 df.to_parquet(\"test.parquet\")\r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\lib\\site-packages\\pandas\\util\\_decorators.py in wrapper(*args, **kwargs)\r\n    212                 else:\r\n    213                     kwargs[new_arg_name] = new_arg_value\r\n--> 214             return func(*args, **kwargs)\r\n    215\r\n    216         return cast(F, wrapper)\r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\lib\\site-packages\\pandas\\core\\frame.py in to_parquet(self, path, engine, compression, index, partition_cols, **kwargs)\r\n   2114             index=index,\r\n   2115             partition_cols=partition_cols,\r\n-> 2116             **kwargs,\r\n   2117         )\r\n   2118\r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\lib\\site-packages\\pandas\\io\\parquet.py in to_parquet(df, path, engine, compression, index, partition_cols, **kwargs)\r\n    262         index=index,\r\n    263         partition_cols=partition_cols,\r\n--> 264         **kwargs,\r\n    265     )\r\n    266\r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\lib\\site-packages\\pandas\\io\\parquet.py in write(self, df, path, compression, coerce_timestamps, index, partition_cols, **kwargs)\r\n     99             from_pandas_kwargs[\"preserve_index\"] = index\r\n    100\r\n--> 101         table = self.api.Table.from_pandas(df, **from_pandas_kwargs)\r\n    102         if partition_cols is not None:\r\n    103             self.api.parquet.write_to_dataset(\r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\lib\\site-packages\\pyarrow\\table.pxi in pyarrow.lib.Table.from_pandas()\r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\lib\\site-packages\\pyarrow\\pandas_compat.py in dataframe_to_arrays(df, schema, preserve_index, nthreads, columns, safe)\r\n    573     if nthreads == 1:\r\n    574         arrays = [convert_column(c, f)\r\n--> 575                   for c, f in zip(columns_to_convert, convert_fields)]\r\n    576     else:\r\n    577         from concurrent import futures\r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\lib\\site-packages\\pyarrow\\pandas_compat.py in <listcomp>(.0)\r\n    573     if nthreads == 1:\r\n    574         arrays = [convert_column(c, f)\r\n--> 575                   for c, f in zip(columns_to_convert, convert_fields)]\r\n    576     else:\r\n    577         from concurrent import futures\r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\lib\\site-packages\\pyarrow\\pandas_compat.py in convert_column(col, field)\r\n    558\r\n    559         try:\r\n--> 560             result = pa.array(col, type=type_, from_pandas=True, safe=safe)\r\n    561         except (pa.ArrowInvalid,\r\n    562                 pa.ArrowNotImplementedError,\r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\lib\\site-packages\\pyarrow\\array.pxi in pyarrow.lib.array()\r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\lib\\site-packages\\pyarrow\\array.pxi in pyarrow.lib._ndarray_to_array()\r\n\r\nTypeError: an integer is required (got type datetime.date){quote}\r\n```\r\n\r\n### Expected Output\r\n\r\nParquet with null values mixed with date values.\r\n",
        "created_at": "2020-03-13T18:54:11.000Z",
        "updated_at": "2020-07-13T14:12:55.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-07-13T14:12:43.000Z"
    },
    "comments": [
        {
            "created_at": "2020-03-17T09:22:51.720Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8115?focusedCommentId=17060762) by Joris Van den Bossche (jorisvandenbossche):*\n`[~IlyaOrson]` thanks for the report! \r\n\r\nThis is an issue with converting the pandas DataFrame to an Arrow table (so not related with the actual writing to parquet)\r\n\r\nThe issue is that pandas creates an object dtype column with datetime.date objects using NaT as missing value sentinel. That combination doesn't seem to be supported by arrow:\r\n\r\n```Java\n\r\nIn [15]: pa.array([pd.NaT, datetime.date(2019, 5, 1)])                                                                                                                                                             \r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-15-dd2b1a934774> in <module>\r\n----> 1 pa.array([pd.NaT, datetime.date(2019, 5, 1)])\r\n\r\n~/scipy/repos/arrow/python/pyarrow/array.pxi in pyarrow.lib.array()\r\n\r\n~/scipy/repos/arrow/python/pyarrow/array.pxi in pyarrow.lib._sequence_to_array()\r\n\r\nTypeError: an integer is required (got type datetime.date)\r\n```\r\n\r\n"
        },
        {
            "created_at": "2020-03-17T09:35:02.399Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8115?focusedCommentId=17060769) by Joris Van den Bossche (jorisvandenbossche):*\nAlso related to ARROW-842"
        },
        {
            "created_at": "2020-07-13T14:12:19.498Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8115?focusedCommentId=17156730) by Joris Van den Bossche (jorisvandenbossche):*\nThis has been fixed by ARROW-842"
        }
    ]
}