{
    "issue": {
        "title": "[JS] Arrow Flight JavaScript Client or Example",
        "body": "***Note**: This issue was originally created as [ARROW-9860](https://issues.apache.org/jira/browse/ARROW-9860). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIs it possible to use Apache Arrow Flight to send data from a Python Web Server to a JavaScript browser client? If it is possible, is there a code example to use to get started?\u00a0\r\n\r\n\u00a0\r\n\r\nIf this is not possible, what is the fastest way to send data from a Python Web Server to Apache Arrow in the browser today? Would it be faster to send a Parquet file and unpack it client-side, or send Arrow directly/with gzip/ etc.?",
        "created_at": "2020-08-25T20:59:52.000Z",
        "updated_at": "2020-09-21T12:58:50.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: JavaScript",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2020-08-27T03:43:32.637Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9860?focusedCommentId=17185586) by Micah Kornfield (emkornfield@gmail.com):*\nI don't think there is an implementation of flight in JS yet.\u00a0 Probably the fastest way to get data to the browser is to [RecordBatchStreamWriter\\|[https://arrow.apache.org/docs/python/ipc.html]] from python over a websocket and the reading in JS.\u00a0 If bandwidth is a consideration, python should now support compressing buffers (I need to double check) but I don't think this support has been added to the JS implementation yet.\r\n\r\n\u00a0\r\n\r\nCC\u00a0 `[~bhulette]` [~paul.e.taylor]\u00a0to correct any inaccuracies."
        },
        {
            "created_at": "2020-09-19T19:59:30.266Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9860?focusedCommentId=17198828) by Paul Taylor (paul.e.taylor):*\nJS does not support buffer-level compression, and possibly shouldn't ever, due to the significant drawbacks of adding JS or WASM-based compression implementations to the browser bundles such as perf hit in the readers/writers, significant addition to library size, etc.\r\n\r\nThe only widely/natively supported deflate implementation in browsers is gzip (and to a lesser extent, brotli), but deflate is applied at the message/chunk level in the browser's networking stack, so compression must be applied to the entire payload."
        },
        {
            "created_at": "2020-09-21T09:28:36.132Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9860?focusedCommentId=17199288) by Hugh Matsubara (Hugheym):*\n[~paul.e.taylor]\u00a0So this means that [~emkornfield@gmail.com]'s suggestion without the buffer compression part should still work, correct?\u00a0\r\n\r\nMay I ask if there is any roadmap for implementing flight in JS? Are there any major technical roadblocks (like unimplemented features in web-grpc) or limitations that are known to the community?\u00a0"
        },
        {
            "created_at": "2020-09-21T12:58:50.496Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9860?focusedCommentId=17199372) by David Li (lidavidm):*\nHey `[~Hugheym]` it's mostly a question of effort, and approach (grpc-web, one of the gRPC proxies, a whole native REST-based implementation?) Also the various gRPC-in-the-browser implementations don't support bidirectional streaming - so we'd need to figure out what to do with DoPut and DoExchange. Finally I think the JS Arrow library has lagged behind a bit and so some work is needed there too (e.g. the 1.0.0 format changes).\r\n\r\nAll in all, I think it's feasible, but needs someone to drive it. I'm happy to answer questions about Flight and help with the effort as I have been interested, but never had the time to drive this by myself."
        }
    ]
}