{
    "issue": {
        "title": "[Rust] Use Array Slice for limit kernel",
        "body": "***Note**: This issue was originally created as [ARROW-4854](https://issues.apache.org/jira/browse/ARROW-4854). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWe currently reconstruct an array when taking a limit from it, we can improve performance by using slice from ARROW-3954",
        "created_at": "2019-03-13T13:45:34.000Z",
        "updated_at": "2019-03-21T16:04:41.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-03-21T13:30:01.000Z"
    },
    "comments": [
        {
            "created_at": "2019-03-13T19:29:52.784Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4854?focusedCommentId=16792047) by Neville Dipale (nevi_me):*\nNote to whomever implements this, it's better to not conditionally check the data type and\u00a0limit/slice based on it. We can wait for ARROW-4853\u00a0then implement a single slice function:\r\n```java\n\r\npub fn limit(array: &ArrayRef, num_elements: usize) -> Result<ArrayRef> {\r\nOk(array.slice(0, num_elements))\r\n}\r\n```"
        },
        {
            "created_at": "2019-03-21T13:30:01.092Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4854?focusedCommentId=16798091) by Krisztian Szucs (kszucs):*\nIssue resolved by pull request 4000\n<https://github.com/apache/arrow/pull/4000>"
        }
    ]
}