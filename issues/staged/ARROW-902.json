{
    "issue": {
        "title": "[C++] Build C++ project including thirdparty dependencies from local tarballs",
        "body": "***Note**: This issue was originally created as [ARROW-902](https://issues.apache.org/jira/browse/ARROW-902). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCould there be a flag or similar to make offline building of the project easier (or maybe that is in place and I don't see it)?  \n\nSomething that perhaps in CMakeLists.txt that has the option for the URL to be a file:// path? \n\nThis would help me in that I could download all relevant tarballs and have the same build happen offline or online.",
        "created_at": "2017-04-26T11:33:23.000Z",
        "updated_at": "2018-07-06T20:42:27.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2018-06-23T08:13:59.000Z"
    },
    "comments": [
        {
            "created_at": "2017-04-26T18:30:25.462Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-902?focusedCommentId=15985320) by Wes McKinney (wesm):*\nYou can already accomplish this by building an external toolchain and setting the \\*_HOME environment variables. We could also provide environment variables for setting the local tarball locations. Patch would be welcome for this"
        },
        {
            "created_at": "2017-04-27T14:49:49.775Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-902?focusedCommentId=15986755) by Luke Higgins (virtualluke):*\nI have a CMakeLists.txt (attached) that implements this.  How do I do propose this change in the way you want for this project?"
        },
        {
            "created_at": "2017-04-27T15:29:47.711Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-902?focusedCommentId=15986822) by Wes McKinney (wesm):*\nSee https://github.com/apache/arrow#how-to-contribute\n\nI am not sure what's the best way to do this. Environment variables (one per dependency for the URL) might be more flexible. Do you know another open source project that provides for offline builds to get some guidance about best practices? "
        },
        {
            "created_at": "2017-04-27T20:51:20.072Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-902?focusedCommentId=15987643) by Luke Higgins (virtualluke):*\nI do not know of other projects that have this feature to model on (although I have wanted this feature for a lot of projects!) \n\nI don't have a preference.  If preferred changing to check for an enviroment variable for each third party dependency seems fine to me too.\n\nThis feature would help a lot.  I believe there are quite a few people that are a little stuck from interacting with projects because of being in environments not connected to the internet (directly).\n\nOn a different note, is there a reason the boost dependency is not done like the other third party dependencies?"
        },
        {
            "created_at": "2017-04-27T21:21:02.259Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-902?focusedCommentId=15987702) by Wes McKinney (wesm):*\nBoost is much more complex than the other dependencies, and it's available almost everywhere, so I'm not sure what would be the benefit. \n\n> This feature would help a lot. I believe there are quite a few people that are a little stuck from interacting with projects because of being in environments not connected to the internet (directly).\n\nIt sounds like you are working in an airgapped environment, or behind some other firewall. In this environments, I would recommend building the thirdparty toolchain separately and using the \\*_HOME variables. I personally do some work in a firewalled environment and have been successfully building these libraries without giving cmake outbound internet access, using a separately-managed toolchain (using conda packages). \n\nOn some contemplation, I'm unsure if we want to support offline builds via ExternalProject due to the extra maintenance burden. I'm interested to hear from other users how they are handling builds in environments without direct internet access. "
        },
        {
            "created_at": "2017-04-28T11:28:00.106Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-902?focusedCommentId=15988674) by Luke Higgins (virtualluke):*\nYes, behind a firewall or airgapped is where I am often finding myself and wanting to do things in the latest pydata stack.\n\nI will give the thirdparty toolchain method a whirl.  Having a cmake,make process helps with my ansible deployments so was working towards that independent of shipping around a toolchain environment. "
        },
        {
            "created_at": "2017-04-28T13:16:20.939Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-902?focusedCommentId=15988787) by Luke Higgins (virtualluke):*\nso on the thirdparty toolchain doc, development.rst, I had to do the following for the build:\nexport ARROW_HOME=/[blah blah]/envs/pyarrow-dev/\nexport LD_LIBRARY_PATH=/[blah blah]/envs/pyarrow-dev/lib64/\n"
        },
        {
            "created_at": "2017-04-28T22:08:03.246Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-902?focusedCommentId=15989525) by Wes McKinney (wesm):*\nGood point; we have to add `CMAKE_INSTALL_LIBDIR` in conda recipes for this reason. I opened https://issues.apache.org/jira/browse/ARROW-912 to fix this in the documentation"
        },
        {
            "created_at": "2017-05-03T12:20:17.625Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-902?focusedCommentId=15994753) by Luke Higgins (virtualluke):*\nI like the whole conda environment build, but how does that help me with offline deployments? I was thinking there was a simple bundle environment kind of functionality in conda environments and that I could then copy the bundle.  It doesn't appear to be anything that straightforward.  I am okay with this feature not being in the master but for now I will be cloning the master at build and making modifications like above to the CMakeLists.txt so I have a pretty smooth ansible build in an offline cluster. My guess is that this won't be an issue as much as subsequent versions are released and key features aren't needed as much in between releases. Thanks for all the hard work!"
        },
        {
            "created_at": "2018-05-31T20:27:47.833Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-902?focusedCommentId=16497124) by Wes McKinney (wesm):*\nI've been having to build the project on airplanes a lot this year and there are some problematic thirdparty projects, like ORC, which have larger tarballs that take a long time to download over plane wifi. I'm adding this to 0.10.0 and I will look into allowing the user to configure the build to work in an environment with no internet assuming you have saved all the thirdparty package source tarballs in some particular location (which can be set using environment variables)"
        },
        {
            "created_at": "2018-06-23T08:13:59.541Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-902?focusedCommentId=16521002) by Wes McKinney (wesm):*\nIssue resolved by pull request 2141\n<https://github.com/apache/arrow/pull/2141>"
        }
    ]
}