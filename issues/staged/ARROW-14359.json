{
    "issue": {
        "title": "NumpyBuffer computes size incorrectly for non-contiguous arrays",
        "body": "***Note**: This issue was originally created as [ARROW-14359](https://issues.apache.org/jira/browse/ARROW-14359). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen wrapping a numpy array as an Arrow tensor, the underlying memory needs to be wrapped using a NumpyBuffer. The size of that buffer is calculated as follows:\r\n```cpp\n\r\n    size_ = PyArray_SIZE(ndarray) * PyArray_DESCR(ndarray)->elsize;\r\n```\r\n\r\nHowever, this is only correct for contiguous arrays - say, we do the following:\r\n```python\n\r\n>>> import numpy,pyarrow\r\n>>> arr = numpy.empty((10,10))\r\n>>> pyarrow.Tensor.from_numpy(arr[:,:5])\r\n<pyarrow.Tensor>\r\ntype: double\r\nshape: (10, 5)\r\nstrides: (80, 8)\r\n```\r\nThe underlying NumpyBuffer will have size 50\\*8=400 here, however going by shape and stride\u00a0 the last row starts at offset 9\\*80 = 720.\r\n\r\nThis is normally pretty harmless, because the buffer size isn't really used for anything. However, Tensor::CheckTensorStridesValidity will still object to this (\"strides must not involve buffer over run\"). This will happen when we try to use Tensor::Make to create a new tensor based on the same underlying buffer.\r\n\r\nThe \"correct\" implementation here would likely be to do something similar to CheckTensorStridesValidity, but with numpy flavour (untested!):\r\n```cpp\n\r\n  std::vector<npy_intp> last_index(shape);\r\n  for (int i = 0; i < ndarray->nd; ++i) {\r\n    last_index[i] = ndarray->dimensions[i]-1;\r\n  }\r\n  auto last_elem = reinterpret_cast<uint8_t*>(PyArray_GetPtr(ao, last_index.data()));\r\n  size_ = last_elem - data_ + PyArray_DESCR(ndarray)->elsize;\r\n```",
        "created_at": "2021-10-17T15:53:11.000Z",
        "updated_at": "2021-10-17T15:54:27.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": []
}