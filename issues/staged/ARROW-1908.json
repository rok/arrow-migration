{
    "issue": {
        "title": "[Python] Construction of arrow table from pandas DataFrame with duplicate column names crashes",
        "body": "***Note**: This issue was originally created as [ARROW-1908](https://issues.apache.org/jira/browse/ARROW-1908). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n`[~jorisvandenbossche]`'s example here: https://github.com/pandas-dev/pandas/pull/18201#issuecomment-350259248 shows that a `pyarrow.Table` with duplicate column names can be constructed.",
        "created_at": "2017-12-09T15:58:50.000Z",
        "updated_at": "2017-12-10T21:04:42.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2017-12-10T04:39:56.000Z"
    },
    "comments": [
        {
            "created_at": "2017-12-09T16:00:55.673Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1908?focusedCommentId=16284810) by Phillip Cloud (cpcloud):*\nIn `[~jorisvandenbossche]`'s example the construction succeeds, but in the following example the interpreter crashes:\r\n\r\n```Java\n\r\nIn [1]: df = pd.DataFrame([(1, 'a'), (2, 'b')], columns=list('aa'))\r\n\r\nIn [2]: t = pa.Table.from_pandas(df)\r\n```"
        },
        {
            "created_at": "2017-12-09T17:46:36.475Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1908?focusedCommentId=16284859) by Wes McKinney (wesm):*\nThere's nothing in the Arrow format that really disallows duplicate column names since the schema is just data."
        },
        {
            "created_at": "2017-12-09T19:04:25.370Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1908?focusedCommentId=16284962) by Phillip Cloud (cpcloud):*\nI think we shouldn't allow duplicate field names. There are so many problems that arise when columns can have the same name. One that shows up in the arrow-cpp implementation is that calls to `GetFieldByName` become unpredictable."
        },
        {
            "created_at": "2017-12-09T19:08:59.112Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1908?focusedCommentId=16284965) by Phillip Cloud (cpcloud):*\nI can bring this up on the mailing list and we can address it in 0.9.0"
        },
        {
            "created_at": "2017-12-09T19:29:24.637Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1908?focusedCommentId=16284969) by Wes McKinney (wesm):*\nWe at least should make sure that we don't segfault in 0.8.0"
        },
        {
            "created_at": "2017-12-09T19:32:03.018Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1908?focusedCommentId=16284971) by Phillip Cloud (cpcloud):*\nYep, I have a fix coming for that."
        },
        {
            "created_at": "2017-12-10T04:39:56.219Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1908?focusedCommentId=16285074) by Wes McKinney (wesm):*\nIssue resolved by pull request 1405\n<https://github.com/apache/arrow/pull/1405>"
        },
        {
            "created_at": "2017-12-10T15:38:35.417Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1908?focusedCommentId=16285288) by Joris Van den Bossche (jorisvandenbossche):*\nThere is still the general question that `[~cpcloud]` raised about allowing duplicate column names or not. Not sure if that is a discussion that should be held.\r\n\r\nEg when you manually create such a table, it fails to convert to pandas:\r\n\r\n\r\n```Java\n\r\nIn [19]: table = pa.Table.from_arrays([pa.array([1, 2]), pa.array([.1, .2])], names=['a', 'a'])\r\n\r\nIn [20]: table\r\nOut[20]: \r\npyarrow.Table\r\na: int64\r\na: double\r\n\r\nIn [21]: table.to_pandas()\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-21-33874de08f1b> in <module>()\r\n----> 1 table.to_pandas()\r\n\r\ntable.pxi in pyarrow.lib.Table.to_pandas()\r\n\r\n~/scipy/repos/arrow/python/pyarrow/pandas_compat.py in table_to_blockmanager(options, table, memory_pool, nthreads, categoricals)\r\n    518 \r\n    519     # ARROW-1751: flatten a single level column MultiIndex for pandas 0.21.0\r\n--> 520     columns = _flatten_single_level_multiindex(columns)\r\n    521 \r\n    522     axes = [columns, index]\r\n\r\n~/scipy/repos/arrow/python/pyarrow/pandas_compat.py in _flatten_single_level_multiindex(index)\r\n    580         # Cheaply check that we do not somehow have duplicate column names\r\n    581         if not index.is_unique:\r\n--> 582             raise ValueError('Found non-unique column index')\r\n    583 \r\n    584         return pd.Index([levels[_label] if _label != -1 else None\r\n\r\nValueError: Found non-unique column index\r\n\r\n```\r\n"
        },
        {
            "created_at": "2017-12-10T21:04:42.153Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1908?focusedCommentId=16285375) by Wes McKinney (wesm):*\nWe should create a separate issue about this. `[~cpcloud]` is right that allowing duplicate columns makes things more difficult in innumerable ways (e.g. SQL-style computing becomes basically impossible)"
        }
    ]
}