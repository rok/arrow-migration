{
    "issue": {
        "title": "[Python] libarrow_python..dylib does not exist",
        "body": "***Note**: This issue was originally created as [ARROW-6766](https://issues.apache.org/jira/browse/ARROW-6766). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n`After following the instructions found on the developer guides for Python, I was`\r\n `able to build fine by using:`\r\n\r\n`# Assuming immediately prior one has run:`\r\n `# $ git clone git@github.com:apache/arrow.git`\r\n1. $ conda create -y -n pyarrow-dev -c conda-forge\u00a0\n#\u00a0 \u00a0--file arrow/ci/conda_env_unix.yml\u00a0\r\n#\u00a0 \u00a0--file arrow/ci/conda_env_cpp.yml\u00a0\r\n#\u00a0 \u00a0--file arrow/ci/conda_env_python.yml\u00a0\r\n#\u00a0 \u00a0 compilers\u00a0\r\n `#\u00a0 python=3.7`\r\n `# $ conda activate pyarrow-dev`\r\n `# $ brew update && brew bundle --file=arrow/cpp/Brewfile``export ARROW_HOME=$(pwd)/arrow/dist`\r\n `export LD_LIBRARY_PATH=$(pwd)/arrow/dist/lib:$LD_LIBRARY_PATH``export CC=`which clang``\r\n `export CXX=`which clang++``{\\{mkdir arrow/cpp/build }}\r\n \u00a0 \u00a0 pushd arrow/cpp/build \\\r\n \u00a0 \u00a0 cmake -DCMAKE_INSTALL_PREFIX=$ARROW_HOME \\\r\n \u00a0 \u00a0 -DCMAKE_INSTALL_LIBDIR=lib \\\r\n \u00a0 \u00a0 -DARROW_FLIGHT=OFF \\\r\n \u00a0 \u00a0 -DARROW_GANDIVA=OFF \\\r\n \u00a0 \u00a0 -DARROW_ORC=ON \\\r\n \u00a0 \u00a0 -DARROW_PARQUET=ON \\\r\n \u00a0 \u00a0 -DARROW_PYTHON=ON \\\r\n \u00a0 \u00a0 -DARROW_PLASMA=ON \\\r\n \u00a0 \u00a0 -DARROW_BUILD_TESTS=ON \\\r\n \u00a0 \u00a0..\r\n `make -j4`\r\n `make install`\r\n `popd`\r\n\r\nBut when I run:\r\n\r\n`pushd arrow/python`\r\n `export PYARROW_WITH_FLIGHT=0`\r\n `export PYARROW_WITH_GANDIVA=0`\r\n `export PYARROW_WITH_ORC=1`\r\n `export PYARROW_WITH_PARQUET=1`\r\n `python setup.py build_ext --inplace`\r\n `popd`\r\n\r\nI get the following errors:\r\n\r\n`-- Build output directory: /Users/tallamjr/Github/arrow/python/build/temp.macosx-10.9-x86_64-3.7/release`\r\n `-- Found the Arrow core library: /usr/local/anaconda3/envs/pyarrow-dev/lib/libarrow.dylib`\r\n `-- Found the Arrow Python library: /usr/local/anaconda3/envs/pyarrow-dev/lib/libarrow_python.dylib`\r\n `CMake Error: File /usr/local/anaconda3/envs/pyarrow-dev/lib/libarrow..dylib does not exist.``...``CMake Error: File /usr/local/anaconda3/envs/pyarrow-dev/lib/libarrow..dylib does not exist.`\r\n `CMake Error at CMakeLists.txt:230 (configure_file):`\r\n \\` configure_file Problem configuring file`\r\n `Call Stack (most recent call first):`\r\n \\` CMakeLists.txt:315 (bundle_arrow_lib)`\r\n `CMake Error: File /usr/local/anaconda3/envs/pyarrow-dev/lib/libarrow_python..dylib does not exist.`\r\n `CMake Error at CMakeLists.txt:226 (configure_file):`\r\n \\` configure_file Problem configuring file`\r\n `Call Stack (most recent call first):`\r\n \\` CMakeLists.txt:320 (bundle_arrow_lib)`\r\n `CMake Error: File /usr/local/anaconda3/envs/pyarrow-dev/lib/libarrow_python..dylib does not exist.`\r\n `CMake Error at CMakeLists.txt:230 (configure_file):`\r\n \\` configure_file Problem configuring file`\r\n `Call Stack (most recent call first):`\r\n \\` CMakeLists.txt:320 (bundle_arrow_lib)`\r\n\r\n\u00a0\r\n\r\nWhat is quite strange is that the libraries seem to indeed be there but they\r\n have an addition component such as `libarrow.15.dylib` .e.g:\r\n\r\n`$ ls -l libarrow_python.15.dylib && echo $PWD`\r\n `lrwxr-xr-x 1 tallamjr staff 28 Oct 2 14:02 libarrow_python.15.dylib ->`\r\n `libarrow_python.15.0.0.dylib`\r\n `/Users/tallamjr/github/arrow/dist/lib`\r\n\r\nI guess I am not exactly sure what the issue here is but it appears to be that\r\n the version is not captured as a variable that is used by CMAKE? I have run the\r\n same setup on `master` (`7d18c1c`) and on `apache-arrow-0.14.0` (`a591d76`)\r\n which both seem to produce same errors.\r\n\r\nApologies if this is not quite the format for JIRA issues here or perhaps if\r\n it's not the correct platform for this, I'm very new to the project and\r\n contributing to apache in general. Thanks\r\n\r\n\u00a0",
        "created_at": "2019-10-02T14:16:04.000Z",
        "updated_at": "2022-08-27T14:41:46.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-02-26T18:56:45.000Z"
    },
    "comments": [
        {
            "created_at": "2019-10-02T18:42:06.565Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6766?focusedCommentId=16943073) by Wes McKinney (wesm):*\nLooks like your build isn't picking up the library SO/ABI version correctly. I'm not sure what's wrong, someone else may have an idea"
        },
        {
            "created_at": "2019-10-04T15:55:36.397Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6766?focusedCommentId=16944619) by Tarek Allam (tallamjr):*\nInteresting.. After your comment `[~wesm]` \u00a0 I looked further into the stderr and found:\r\n\r\n`...`\r\n`-- Added shared library dependency arrow_shared: /usr/local/anaconda3/envs/pyarrow-dev/lib/libarrow.dylib`\r\n`-- Added shared library dependency arrow_python_shared: /usr/local/anaconda3/envs/pyarrow-dev/lib/libarrow_python.dylib`\r\n`-- Parquet C++ ABI version: 15`\r\n`-- Parquet C++ SO version: 15`\r\n\r\n`...`\r\n\r\nI don't know if that is at all useful, or if perhaps it just provides more confusion. Should there be an equivalent \"Arrow C++ ABI version\" and \"Arrow C++ SO version\", is that what you meant?\u00a0\r\n\r\n\u00a0\r\n\r\nVery strange indeed."
        },
        {
            "created_at": "2019-10-04T19:32:38.284Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6766?focusedCommentId=16944781) by Wes McKinney (wesm):*\nI don't develop on macOS but maybe `[~uwe]` or `[~npr]` can show what a successful build log on macOS should look like. You can also look at our CI logs to see where there is a breakdown"
        },
        {
            "created_at": "2019-10-04T20:55:50.551Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6766?focusedCommentId=16944823) by Neal Richardson (npr):*\nI don't use conda but I believe Uwe does so he's probably better positioned to advise."
        },
        {
            "created_at": "2019-11-13T20:28:48.186Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6766?focusedCommentId=16973663) by Uwe Korn (uwe):*\nAs you install in a non-standard location, you probably also need to adjust the pkg-config search path. Try setting `PKG_CONFIG_PATH=$(pwd)/arrow/dist/lib/pkgconfig`."
        },
        {
            "created_at": "2020-02-26T17:26:10.417Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6766?focusedCommentId=17045733) by Tarek Allam (tallamjr):*\nAfter being away ill for some time I came back to revisit this, and now on `apache-arrow-0.16.0-134-g76db492c3` this seems to build fine.\r\n\r\nI double checked with the version stated previously i.e. `apache-arrow-0.14.0` and that now mysteriously is fine. I am thinking to close this issue as in the time I was away it seems to be fixed now."
        },
        {
            "created_at": "2020-02-26T18:56:34.311Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6766?focusedCommentId=17045812) by Uwe Korn (uwe):*\nThanks for revistiting this!"
        },
        {
            "created_at": "2022-08-27T14:41:46.149Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6766?focusedCommentId=17585834) by @toddfarmer:*\nTransitioning issue from Resolved to Closed to based on resolution field value."
        }
    ]
}