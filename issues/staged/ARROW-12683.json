{
    "issue": {
        "title": "[C++] Enable fine-grained I/O (coalescing) in IPC reader",
        "body": "***Note**: This issue was originally created as [ARROW-12683](https://issues.apache.org/jira/browse/ARROW-12683). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nARROW-11772 enables I/O coalescing in the IPC reader, but the reader operates at the granularity of an entire record batch; even if you're loading only a few columns, the entire record batch is read. When on a high-latency file system (e.g. S3), we may be able to get further performance improvement by traversing the schema and reading only the buffers we need to read. This can be combined with coalescing to reduce the number of I/O calls that need to be made.\r\n\r\n(Maybe there's another savings here in that instead of traversing the schema every time to figure out the buffer layout, we can do that only once up front and then reuse the layout subsequently?)\r\n\r\nWhile ArrayLoader already appears to perform this optimization, it's being handed an in-memory buffer in the first place, so no savings are accomplished.",
        "created_at": "2021-05-07T13:44:55.000Z",
        "updated_at": "2021-11-04T02:02:17.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-11-03T14:25:16.000Z"
    },
    "comments": [
        {
            "created_at": "2021-11-03T14:25:16.627Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12683?focusedCommentId=17438103) by David Li (lidavidm):*\nIssue resolved by pull request 11486\n<https://github.com/apache/arrow/pull/11486>"
        }
    ]
}