{
    "issue": {
        "title": "[Plasma] PlasmaClient::Get() could take vector of object ids",
        "body": "***Note**: This issue was originally created as [ARROW-2364](https://issues.apache.org/jira/browse/ARROW-2364). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIt would be mode modern C++ than taking a raw pointer + number of elements.",
        "created_at": "2018-03-29T13:28:21.000Z",
        "updated_at": "2018-06-29T14:46:05.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++ - Plasma",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2018-04-05T16:04:27.000Z"
    },
    "comments": [
        {
            "created_at": "2018-03-29T15:58:59.884Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2364?focusedCommentId=16419243) by Phillip Cloud (cpcloud):*\nIterators are also another common modern C++ pattern that support both vectors, pointers, and a host of other containers. At some point we'll probably want a `span<T>` container that is essentially a C++ iterator-interface-compatible pointer-plus-length abstraction. Things like a slice of a string not owned by the caller become much easier to deal with."
        },
        {
            "created_at": "2018-03-29T16:06:52.295Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2364?focusedCommentId=16419258) by Antoine Pitrou (apitrou):*\nYes, iterators are nice, but the `(begin, end)` idiom is more cumbersome than passing a container. Apparently `span<T>` is not standard C++ yet."
        },
        {
            "created_at": "2018-04-05T16:04:09.418Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2364?focusedCommentId=16427164) by Antoine Pitrou (apitrou):*\nThis was resolved in ARROW-2195."
        }
    ]
}