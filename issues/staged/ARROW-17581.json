{
    "issue": {
        "title": "[R] Refactor build_expr and eval_array_expression to remove special casing",
        "body": "***Note**: This issue was originally created as [ARROW-17581](https://issues.apache.org/jira/browse/ARROW-17581). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nAs `[~paleolimbot]` observes\u00a0[here](https://github.com/apache/arrow/pull/13985#discussion_r957286453), we should avoid adding additional complexity or indirection in how expressions/bindings are defined--it's complex enough as is. We have helper functions `build_expr` (used with Acero, wrapper around Expression$create, returns Expression) and `eval_array_expression` (for eager computation on Arrays, wrapper around call_function) that wrap input arguments as Scalars or whatever, but they also do some special casing for functions that need custom handling. \r\n\r\nHowever, since those functions were initially written, we've developed other ways to handle these special cases more explicitly, and not all operations pass through these helper functions. We should pull out the special cases and define those functions/bindings explicitly and only use these helpers in the simple case where no extra logic is required.",
        "created_at": "2022-08-31T15:04:46.000Z",
        "updated_at": "2022-10-13T14:14:01.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": []
}