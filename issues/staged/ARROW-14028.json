{
    "issue": {
        "title": "[R] Cast of NaN to integer should return NA_integer_",
        "body": "***Note**: This issue was originally created as [ARROW-14028](https://issues.apache.org/jira/browse/ARROW-14028). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCasting double\u00a0`NaN` to integer returns a sentinel value:\r\n```r\n\r\ncall_function(\"cast\", Scalar$create(NaN), options = list(to_type = int32(), allow_float_truncate = TRUE))\r\n#> Scalar\r\n#> -2147483648\r\n\r\ncall_function(\"cast\", Scalar$create(NaN), options = list(to_type = int64(), allow_float_truncate = TRUE))\r\n#> Scalar\r\n#> -9223372036854775808\n```\r\nIt would be nice if this would instead return `NA_integer`.\r\n\r\nN.B. for some reason this doesn't reproduce in dplyr unless you round-trip it back to double:\r\n```r\n\r\n> Table$create(x = NaN) %>% transmute(as.double(as.integer(x))) %>% pull(1)\r\n#> [1] -2147483648\n```",
        "created_at": "2021-09-17T18:57:44.000Z",
        "updated_at": "2022-06-30T16:41:15.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-09-17T19:13:15.477Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14028?focusedCommentId=17416881) by Neal Richardson (npr):*\nThis seems like a C++ issue, right? Or do numpy and others handle this differently from R?"
        },
        {
            "created_at": "2021-09-18T07:14:28.161Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14028?focusedCommentId=17417055) by Joris Van den Bossche (jorisvandenbossche):*\nIn Arrow world, NaN and NA/null are not the same, so I am not sure this should cast this way? (at least not without a specific option)\r\n\r\nNumpy doesn't know a concept of NA_integer, it only has the full range of integers. So when casting float with NaNs to integer, you get also get the sentinel value as above (but in contrast to Arrow, numpy does that by default, while in Arrow only if you enable unsafe casts)\r\n\r\n\u00a0"
        }
    ]
}