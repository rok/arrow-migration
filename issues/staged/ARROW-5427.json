{
    "issue": {
        "title": "[Python] RangeIndex serialization change implications",
        "body": "***Note**: This issue was originally created as [ARROW-5427](https://issues.apache.org/jira/browse/ARROW-5427). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIn 0.13, the conversion of a pandas DataFrame's RangeIndex changed: it is no longer serialized as an actual column in the arrow table, but only saved as metadata (in the pandas metadata) (ARROW-1639).\r\n\r\nThis change lead to a couple of issues:\r\n\r\n- It can sometimes be unpredictable in pandas when you have a RangeIndex and when not. Which means that the resulting schema in arrow can be somewhat unexpected. See ARROW-5104: empty DataFrame has RangeIndex or not depending on how it was created\n- The metadata is not always enough (or not updated) to reconstruct it when the table has been modified / subsetted.  \n    For example, ARROW-5138: retrieving a single row group from parquet file doesn't restore index properly (since the RangeIndex metadata was for the full table, not this subset)\n    And another one, ARROW-5139: empty column selection no longer restores index.\n  \n  I think we should decide if we either want to try to fix those (or give an option to avoid those issues), or either close those as \"won't fix\".\n  \n  One idea I had that could potentially alleviate some of those issues:\n  \n- Make it possible for the user to still force actual serialization of the index, always, even if it is a RangeIndex.\n- To not introduce a new option, we could reuse the `preserve_index` keyword: change the default to None (which means the current behaviour), and change `True` to mean \"always serialize\" (although this is not fully backwards compatible with 0.13.0 for those users who explicitly specified the keyword).\n  \n  I am not sure this is worth the added complexity (although I personally like providing the option where the index is simply always serialized as columns, without surprises). But ideally we decide on it for 0.14, to either fix or close the mentioned issues.",
        "created_at": "2019-05-27T19:13:47.000Z",
        "updated_at": "2019-06-27T07:15:43.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-06-27T07:15:43.000Z"
    },
    "comments": [
        {
            "created_at": "2019-06-25T01:28:08.119Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5427?focusedCommentId=16871908) by Wes McKinney (wesm):*\nI made this a Blocker so we can force some action on this issue"
        },
        {
            "created_at": "2019-06-25T19:20:24.526Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5427?focusedCommentId=16872636) by Francois Saint-Jacques (fsaintjacques):*\nI think this is related to the dask failure ARROW-5730 . Once I apply this patch, it reduces the failures from 9 to 1."
        },
        {
            "created_at": "2019-06-25T19:45:09.074Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5427?focusedCommentId=16872654) by Wes McKinney (wesm):*\nI can have a look at the patch"
        },
        {
            "created_at": "2019-06-27T07:15:43.765Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5427?focusedCommentId=16873872) by Micah Kornfield (emkornfield@gmail.com):*\nIssue resolved by pull request 4651\n<https://github.com/apache/arrow/pull/4651>"
        }
    ]
}