{
    "issue": {
        "title": "[Java] Experiment with performance difference of avoiding the use of Avro Decoder",
        "body": "***Note**: This issue was originally created as [ARROW-6593](https://issues.apache.org/jira/browse/ARROW-6593). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIt has been posited that the Decoder object (and on-heap work in general) is potentially slow for decoding.\r\n\r\n\u00a0\r\n\r\nThe scope of this Jira is to add a new method that instead of consuming from Decoder, consumes directly from a ByteBuffer.\u00a0 In order to this we there needs to be utility classes for zig-zag decoding (one might existing in avro) from a ByteBuffer.\r\n\r\n\u00a0\r\n\r\nThis is esentially rewriting logic in the decoder to work directly against a bytebuffer and then measure if there is a meaningful performance impact.\r\n\r\n\u00a0\r\n\r\n\u00a0",
        "created_at": "2019-09-18T05:43:46.000Z",
        "updated_at": "2022-07-12T14:04:33.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: task"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-07-12T14:04:33.741Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6593?focusedCommentId=17565705) by @toddfarmer:*\nThis issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned. Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon."
        }
    ]
}