{
    "issue": {
        "title": "[C++] Support string collation for sorting",
        "body": "***Note**: This issue was originally created as [ARROW-12046](https://issues.apache.org/jira/browse/ARROW-12046). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently the C++ library orders strings lexicographically as bytestrings. We should implement the capability to change string sorting behavior based on locale settings for string collation.",
        "created_at": "2021-03-22T18:34:49.000Z",
        "updated_at": "2022-07-04T17:41:30.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-03-22T18:35:25.721Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12046?focusedCommentId=17306488) by Ian Cook (icook):*\ncc `[~apitrou]`"
        },
        {
            "created_at": "2021-03-22T18:37:30.853Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12046?focusedCommentId=17306490) by Antoine Pitrou (apitrou):*\nThe current locale is a global process setting, so Arrow shouldn't change it. What we may add is a \"compare strings using the current locale\" option, though."
        },
        {
            "created_at": "2021-03-22T18:38:20.633Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12046?focusedCommentId=17306491) by Antoine Pitrou (apitrou):*\nNote this would only work probably if a UTF-8 locale is selected."
        },
        {
            "created_at": "2021-04-21T18:45:28.326Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12046?focusedCommentId=17326813) by Antoine Pitrou (apitrou):*\nDuckDB has built a stripped down version of ICU, which might be useful to us:\r\nhttps://github.com/duckdb/duckdb/tree/master/extension/icu\r\nhttps://github.com/Mytherin/minimal-icu-collation\r\n\u00a0"
        },
        {
            "created_at": "2021-06-28T08:17:00.881Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12046?focusedCommentId=17370484) by Antoine Pitrou (apitrou):*\nAlso see <https://github.com/jecolon/ziglyph/issues/3>"
        },
        {
            "created_at": "2021-10-12T09:10:53.043Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12046?focusedCommentId=17427570) by Benson Muite (baksmj):*\nCompression will be helpful.\u00a0 One way of sorting Mandarin is by stroke count, for which there is [a table for unicode](https://www.unicode.org/reports/tr38/#SortingAlgorithm) However, this is not the only way so allowing developers freedom to create appropriate comparison functions is useful. [Minimal-icu-collation](https://github.com/Mytherin/minimal-icu-collation) also seems helpful, but is not vectorized. Javascript has a specification for [comparison functions](https://402.ecma-international.org/8.0/#sec-collator-compare-functions) - while there will be a loss of efficiency, something like this seems most appropriate. An example of using this can be found in this\u00a0[DataTables blog](https://www.datatables.net/blog/2017-02-28). [QString](https://doc.qt.io/qt-5/qstring.html) has a [locale aware comparison](https://doc.qt.io/qt-5/qstring.html#localeAwareCompare) but licensing only allows incorporation of Apache code into GPL or LGPL code, and not the other way round."
        },
        {
            "created_at": "2021-12-14T16:52:31.036Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12046?focusedCommentId=17459313) by Benson Muite (baksmj):*\nA related issue is the between kernel for string comparisons https://issues.apache.org/jira/browse/ARROW-9843"
        },
        {
            "created_at": "2021-12-28T15:22:13.775Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12046?focusedCommentId=17466148) by Benson Muite (baksmj):*\nSort Keys can be used:\r\n\r\nhttps://arrow.apache.org/docs/cpp/api/compute.html#_CPPv4N5arrow7compute11SortOptionsE\r\n\r\nIs this a reasonable approach to build on? This is used for example in R\r\n\r\nhttps://www.rdocumentation.org/packages/base/versions/3.6.2/topics/xtfrm"
        }
    ]
}