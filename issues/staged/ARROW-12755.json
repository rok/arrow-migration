{
    "issue": {
        "title": "[C++][Compute] Add quotient and modulo kernels",
        "body": "***Note**: This issue was originally created as [ARROW-12755](https://issues.apache.org/jira/browse/ARROW-12755). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nAdd a pair of binary kernels to compute the:\r\n \\* quotient (result after division,\u00a0discarding any fractional part, a.k.a integer division)\r\n \\* mod or modulo (remainder after division, a.k.a `%` / `%%`\u00a0/\u00a0modulus).\r\n\r\nThe returned array should have the same data type as the input arrays or promote to an appropriate type to avoid loss of precision if the input types differ.",
        "created_at": "2021-05-12T14:12:50.000Z",
        "updated_at": "2022-10-13T17:51:28.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-06-10T16:09:36.821Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12755?focusedCommentId=17361052) by Antoine Pitrou (apitrou):*\nPerhaps this could be a single \"divmod\" kernel if that makes the computation more efficient?\r\n\r\n(note \"divmod\" is the Python name for that functionality)\r\n\r\nShould also choose what happens for negative divisors."
        },
        {
            "created_at": "2021-07-29T01:38:59.881Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12755?focusedCommentId=17389157) by yibocai#1 (yibocai#1):*\nFor the record, `libdivide` may be useful for optimal integer division performance.\r\nhttps://github.com/ridiculousfish/libdivide\r\n\r\nNOTE: this is only for `vector/scalar`, when there's only one divisor."
        },
        {
            "created_at": "2021-07-29T01:55:35.551Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12755?focusedCommentId=17389162) by yibocai#1 (yibocai#1):*\nI agree \"divmod\" to return quotient and remainder at once is more efficient.\r\nx86 `idiv` instruction always returns quotient together with remainder. In computation cost, div = mod = divmod.\r\nArm `sdiv` instruction does division only. So div < mod = divmod. We can use the existing \"division\" kernel if we only want the quotient.\r\nhttps://godbolt.org/z/fvGh3vh3f"
        },
        {
            "created_at": "2021-07-29T02:02:30.931Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12755?focusedCommentId=17389167) by Eduardo Ponce (edponce):*\n`[~yibocai]` thanks for the tips!"
        },
        {
            "created_at": "2022-01-14T14:11:37.204Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12755?focusedCommentId=17476161) by Krisztian Szucs (kszucs):*\nSince the PR is in draft, I'm postponing to 8.0"
        },
        {
            "created_at": "2022-10-13T17:51:27.622Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12755?focusedCommentId=17617226) by Apache Arrow JIRA Bot (arrowjira):*\nThis issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned per [project policy](https://arrow.apache.org/docs/dev/developers/bug_reports.html#issue-assignment). Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon."
        }
    ]
}