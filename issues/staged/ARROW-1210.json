{
    "issue": {
        "title": "example does not work",
        "body": "***Note**: This issue was originally created as [ARROW-1210](https://issues.apache.org/jira/browse/ARROW-1210). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nbeing trying to write something like this\n\n```java\n#include <arrow/api.h>\n#include <arrow/memory_pool.h>\n\n        struct ArrowBuilder{\n\n            string type;\n            ::arrow::Int64Builder i32_builder(::arrow::default_memory_pool());\n            ::arrow::DoubleBuilder d_builder(::arrow::default_memory_pool());\n            ::arrow::Int64Builder i64_builder(::arrow::default_memory_pool());\n            ::arrow::StringBuilder s_builder(::arrow::default_memory_pool());\n        };\n```\nkept throwing error: \u2018arrow::default_memory_pool\u2019 is not a type",
        "created_at": "2017-07-12T21:20:43.000Z",
        "updated_at": "2017-07-19T15:51:54.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2017-07-12T21:40:28.000Z"
    },
    "comments": [
        {
            "created_at": "2017-07-12T21:40:28.495Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1210?focusedCommentId=16084756) by Wes McKinney (wesm):*\nhi `[~elderrex]`\n\nThe code you posted is not valid C++. If you want to have a class with builders as members, consider using pointers or smart pointers, e.g. (did not try compiling this code, apologies for any typos):\n\n```Java\n#include <memory>\n\n#include \"arrow/api.h\"\n\nusing namespace arrow;\n\nstruct ArrowBuilder {\n  ArrowBuilder() {\n    i32_builder.reset(new Int32Builder(default_memory_pool()));\n    // etc.\n  }\n\n  string type;\n  std::unique_ptr<Int32Builder> i32_builder;\n  std::unique_ptr<DoubleBuilder> d_builder;\n  std::unique_ptr<Int64Builder> i64_builder;\n  std::unique_ptr<StringBuilder> s_builder;\n};\n```\n\nYou can also stack allocate builders:\n\n```Java\nvoid MyFunction(...) {\n  Int64Builder i64_builder(default_memory_pool());\n}\n```\n\nWe could in theory add default constructors for the builders but right now you need to explicitly pass a memory pool."
        },
        {
            "created_at": "2017-07-13T14:40:04.902Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1210?focusedCommentId=16085778) by yugu (elderrex):*\nthat works! Thank you so much for the help!"
        }
    ]
}