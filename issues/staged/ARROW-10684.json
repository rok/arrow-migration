{
    "issue": {
        "title": "[Rust] Logical equality should consider parent array nullability",
        "body": "***Note**: This issue was originally created as [ARROW-10684](https://issues.apache.org/jira/browse/ARROW-10684). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen creating a struct array with a primitive child array, it is possible for the child to be non-nullable, while its parent struct array is nullable.\r\n\r\nIn this scenario, the child array's slots where the parent is null, become invalidated, such that an array with [1, 2, 3] having slot 2 being null, should be interpreted as [1, 0, 3].\r\n\r\nThis issue becomes evident in Parquet roundtrip tests, as we end up not able to correctly compare nested structures that have non-null children.\r\n\r\nThe specification caters for the above behaviour, see <http://arrow.apache.org/docs/format/Columnar.html#struct-layout>\u00a0.\r\n\r\nWhen a struct has nulls, its child array(s) nullability is subject to the parent struct.",
        "created_at": "2020-11-22T10:15:50.000Z",
        "updated_at": "2020-11-29T12:34:45.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-11-29T12:34:45.000Z"
    },
    "comments": [
        {
            "created_at": "2020-11-29T12:34:45.958Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10684?focusedCommentId=17240220) by Jorge Leit\u00e3o (jorgecarleitao):*\nIssue resolved by pull request 8739\n<https://github.com/apache/arrow/pull/8739>"
        }
    ]
}