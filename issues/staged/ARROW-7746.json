{
    "issue": {
        "title": "[Java] Support large buffer for Flight",
        "body": "***Note**: This issue was originally created as [ARROW-7746](https://issues.apache.org/jira/browse/ARROW-7746). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe motivation is described in https://github.com/apache/arrow/pull/6323#issuecomment-580137629.\r\n\r\nWhen the size of the ArrowBuf exceeds 2GB, our flighing library does not work due to integer overflow. \r\n\r\nThis is because internally, we have used some data structures which are based on 32-bit integers. To resolve the problem, we must revise/replace the data structures to make them support 64-bit integers. \r\n\r\nAs a concrete example, we can see that when the server sends data through IPC, an org.apache.arrow.flight.ArrowMessage object is created, and is wrapped as an InputStream through the `asInputStream` method. In this method, we use data stuctures like java.io.ByteArrayOutputStream and io.netty.buffer.ByteBuf, which are based on 32-bit integers (we can observe that NettyArrowBuf#length and ByteArrayOutputStream#count are both 32-bit integers). ",
        "created_at": "2020-02-03T07:26:20.000Z",
        "updated_at": "2022-08-27T14:42:00.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: task"
        ],
        "closed": true,
        "closed_at": "2020-02-27T16:15:16.000Z"
    },
    "comments": [
        {
            "created_at": "2020-02-27T06:35:51.832Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7746?focusedCommentId=17046221) by Micah Kornfield (emkornfield@gmail.com):*\nWhy is an\u00a0org.apache.arrow.flight.ArrowMessage necessary for IPC (I imagine it would be required for flight, but don't think it should be required for IPC)."
        },
        {
            "created_at": "2020-02-27T08:19:52.208Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7746?focusedCommentId=17046316) by Liya Fan (fan_li_ya):*\n[~emkornfield@gmail.com] Sorry. There must be some misunderstanding here. I thought flight was a necessary part for IPC. \r\n\r\nSo I will change the title for this issue, and provide support for the rest issues of IPC (e.g. ArrowStreamWriter/ArrowStreamReader) in ARROW-7610."
        },
        {
            "created_at": "2020-02-27T09:53:13.149Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7746?focusedCommentId=17046431) by Liya Fan (fan_li_ya):*\nIt seems the PR for ARROW-7610 is already big enough. To make code reviewing easier, I have opened ARROW-7955 to track the support for file/stream IPC. "
        },
        {
            "created_at": "2020-02-27T16:14:52.343Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7746?focusedCommentId=17046771) by Micah Kornfield (emkornfield@gmail.com):*\nthanks [~fan_li_ya].\u00a0 I don't think this Jira will be doable because gRPC has a maximum message size of 2GB.\u00a0"
        },
        {
            "created_at": "2022-08-27T14:42:00.237Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7746?focusedCommentId=17585982) by @toddfarmer:*\nTransitioning issue from Resolved to Closed to based on resolution field value."
        }
    ]
}