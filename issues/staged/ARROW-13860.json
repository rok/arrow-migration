{
    "issue": {
        "title": "[R] arrow 5.0.0 write_parquet throws error writing grouped data.frame",
        "body": "***Note**: This issue was originally created as [ARROW-13860](https://issues.apache.org/jira/browse/ARROW-13860). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\narrow 5.0.0 write_parquet throws error writing grouped data.frame.\r\n\r\nHere is how to reproduce it.\r\n\r\n`library(dplyr)`\r\n` arrow::write_parquet(mtcars %>% group_by(am),\"/tmp/mtcars_test.parquet\")`\r\n`# Error: x must be an object of class 'data.frame', 'RecordBatch', or 'Table', not 'arrow_dplyr_query\u2019.`\r\n\r\n\u00a0\r\n\r\nWith arrow 4.0.1, this used to work fine.\r\n\r\n`library(dplyr)`\r\n`arrow::write_parquet(mtcars %>% group_by(am),\"/tmp/mtcars_test.parquet\")`\r\n`x <- arrow::read_parquet(\"/tmp/mtcars_test.parquet\")`\r\n`x`\r\n`# A tibble: 32 x 11`\r\n`# Groups: \u00a0 am [2]`\r\n`#\u00a0 \u00a0 \u00a0mpg \u00a0 cyl \u00a0disp \u00a0 \u00a0hp \u00a0drat \u00a0 \u00a0wt \u00a0qsec \u00a0 \u00a0vs \u00a0 \u00a0am \u00a0gear \u00a0carb`\r\n`# * <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>`\r\n`# 1 \u00a021 \u00a0 \u00a0 \u00a0 6 \u00a0160 \u00a0 \u00a0110 \u00a03.9 \u00a0 2.62 \u00a016.5 \u00a0 \u00a0 0 \u00a0 \u00a0 1 \u00a0 \u00a0 4 \u00a0 \u00a0 4`\r\n`# 2 \u00a021 \u00a0 \u00a0 \u00a0 6 \u00a0160 \u00a0 \u00a0110 \u00a03.9 \u00a0 2.88 \u00a017.0 \u00a0 \u00a0 0 \u00a0 \u00a0 1 \u00a0 \u00a0 4 \u00a0 \u00a0 4`\r\n`# 3 \u00a022.8 \u00a0 \u00a0 4 \u00a0108 \u00a0 \u00a0 93 \u00a03.85 \u00a02.32 \u00a018.6 \u00a0 \u00a0 1 \u00a0 \u00a0 1 \u00a0 \u00a0 4 \u00a0 \u00a0 1`\r\n`# 4 \u00a021.4 \u00a0 \u00a0 6 \u00a0258 \u00a0 \u00a0110 \u00a03.08 \u00a03.22 \u00a019.4 \u00a0 \u00a0 1 \u00a0 \u00a0 0 \u00a0 \u00a0 3 \u00a0 \u00a0 1`\r\n`# 5 \u00a018.7 \u00a0 \u00a0 8 \u00a0360 \u00a0 \u00a0175 \u00a03.15 \u00a03.44 \u00a017.0 \u00a0 \u00a0 0 \u00a0 \u00a0 0 \u00a0 \u00a0 3 \u00a0 \u00a0 2`\r\n`# 6 \u00a018.1 \u00a0 \u00a0 6 \u00a0225 \u00a0 \u00a0105 \u00a02.76 \u00a03.46 \u00a020.2 \u00a0 \u00a0 1 \u00a0 \u00a0 0 \u00a0 \u00a0 3 \u00a0 \u00a0 1`\r\n`# 7 \u00a014.3 \u00a0 \u00a0 8 \u00a0360 \u00a0 \u00a0245 \u00a03.21 \u00a03.57 \u00a015.8 \u00a0 \u00a0 0 \u00a0 \u00a0 0 \u00a0 \u00a0 3 \u00a0 \u00a0 4`\r\n`# \u2026`\r\n\r\n\u00a0\r\n\r\n\u00a0",
        "created_at": "2021-09-02T07:32:14.000Z",
        "updated_at": "2021-10-17T00:41:14.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-10-14T20:19:52.000Z"
    },
    "comments": [
        {
            "created_at": "2021-09-02T20:10:23.449Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13860?focusedCommentId=17409102) by Ian Cook (icook):*\nThanks for the report!\r\n\r\nI dug into this and observed that it is happening because\r\n```java\n\r\nwrite_parquet(x, ...) \n```\r\ncalls\r\n```java\n\r\nx <- Table$create()\n```\r\nwhich changes\u00a0`x` into an `arrow_dplyr_query` because\u00a0`x`\u00a0has groups.\r\n\r\nThen it calls\r\n```java\n\r\nis_writable_table(x)\n```\r\nwhich triggers an error because\u00a0`x` does not inherit `data.frame` or `ArrowTabular`.\r\n\r\nIn version 4.0.1 of the arrow package, this did not trigger an error because the `is_writable_table\\(x\\)` function did not exist. It was introduced in #10387: <https://github.com/apache/arrow/commit/2e3a25e5f1329929e0fdb88ecc76bf404a5ccf57#diff-f6235d4767fc4a7ee1bb726d816b9742ef0bc07503dceb678fd3bc55ee15454b>\r\n\r\nBut I am confused: Before ARROW-11769, I thought groups were lost when a grouped R data.frame was converted to a `Table`. So how is it that in the example above, the groups were seemingly written to the Parquet file and read back in? Didn't we always call `Table$create()`\u00a0on the input to `write_parquet()` so shouldn't the groups have been lost?\r\n\r\ncc `[~jonkeane]` `[~thisisnic]`"
        },
        {
            "created_at": "2021-09-02T22:30:48.803Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13860?focusedCommentId=17409141) by Nicola Crane (thisisnic):*\n`[~icook]` I have no idea, but I ran a few things in Arrow 4.1 and make what you will of the below, but I think it might answer your question\r\n\r\n\r\n```java\n\r\n> iris %>% group_by(Species) %>% record_batch() \r\n\r\nRecordBatch\r\n150 rows x 5 columns\r\n$Sepal.Length <double>\r\n$Sepal.Width <double>\r\n$Petal.Length <double>\r\n$Petal.Width <double>\r\n$Species <dictionary<values=string, indices=int8>>\r\n\r\nSee $metadata for additional Schema metadata\r\n\r\n> iris %>% group_by(Species) %>% record_batch() %>% collect()\r\n# A tibble: 150 x 5\r\n# Groups:   Species [3]\r\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\r\n *        <dbl>       <dbl>        <dbl>       <dbl> <fct>  \r\n 1          5.1         3.5          1.4         0.2 setosa \r\n 2          4.9         3            1.4         0.2 setosa \r\n 3          4.7         3.2          1.3         0.2 setosa \r\n 4          4.6         3.1          1.5         0.2 setosa \r\n 5          5           3.6          1.4         0.2 setosa \r\n 6          5.4         3.9          1.7         0.4 setosa \r\n 7          4.6         3.4          1.4         0.3 setosa \r\n 8          5           3.4          1.5         0.2 setosa \r\n 9          4.4         2.9          1.4         0.2 setosa \r\n10          4.9         3.1          1.5         0.1 setosa \r\n# \u2026 with 140 more rows\r\n\r\n> iris %>% record_batch() %>% group_by(Species) \r\nRecordBatch (query)\r\nSepal.Length: double\r\nSepal.Width: double\r\nPetal.Length: double\r\nPetal.Width: double\r\nSpecies: dictionary<values=string, indices=int8>\r\n\r\n* Grouped by Species\r\nSee $.data for the source Arrow object\r\n\r\n> iris %>% record_batch() %>% group_by(Species)  %>% collect()\r\n# A tibble: 150 x 5\r\n# Groups:   Species [3]\r\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\r\n          <dbl>       <dbl>        <dbl>       <dbl> <fct>  \r\n 1          5.1         3.5          1.4         0.2 setosa \r\n 2          4.9         3            1.4         0.2 setosa \r\n 3          4.7         3.2          1.3         0.2 setosa \r\n 4          4.6         3.1          1.5         0.2 setosa \r\n 5          5           3.6          1.4         0.2 setosa \r\n 6          5.4         3.9          1.7         0.4 setosa \r\n 7          4.6         3.4          1.4         0.3 setosa \r\n 8          5           3.4          1.5         0.2 setosa \r\n 9          4.4         2.9          1.4         0.2 setosa \r\n10          4.9         3.1          1.5         0.1 setosa \r\n# \u2026 with 140 more rows\r\n\r\n```\r\n"
        },
        {
            "created_at": "2021-09-02T22:48:26.440Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13860?focusedCommentId=17409144) by Ian Cook (icook):*\nAh, thanks `[~thisisnic]`, so I guess we used to define the groups directly in the `Table` or `RecordBatch` object instead of creating an `arrow_dplyr_query`\u00a0object whenever there were groups."
        },
        {
            "created_at": "2021-09-02T23:17:11.643Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13860?focusedCommentId=17409150) by Nicola Crane (thisisnic):*\n`[~icook]` I think there might be other things at play as well as we also made big changes to `arrow:::collect.arrow_dplyr_query()` but honestly, it's confusing me more, so I'm leaving it as \"the output reported above is as expected and it's just the `is_writable_table()` bit that is a problem\".  "
        },
        {
            "created_at": "2021-09-03T13:55:13.212Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13860?focusedCommentId=17409519) by Neal Richardson (npr):*\ncollect() isn't the issue, this is an unintended consequence of ARROW-11769 and we should figure out how to handle it."
        },
        {
            "created_at": "2021-10-14T20:19:52.773Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13860?focusedCommentId=17429004) by Jonathan Keane (jonkeane):*\nIssue resolved by pull request 11315\n<https://github.com/apache/arrow/pull/11315>"
        }
    ]
}