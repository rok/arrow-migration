{
    "issue": {
        "title": "[Rust] Create record batches from in memory IPC without memory copies",
        "body": "***Note**: This issue was originally created as [ARROW-11696](https://issues.apache.org/jira/browse/ARROW-11696). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI have the IPC format of Arrow record batches in memory (e.g. as `&[u8]`) and would like to create a vector of batches while avoiding as many memory copies as possible. It would be great if there was a way to create the vector without having to go through the file abstraction. \r\n\r\nI might be misunderstanding the way the file reader works and maybe it does not incur memory copies. I think it does, though, since creating arrow record batches from a larger arrow buffer takes much longer. ",
        "created_at": "2021-02-19T12:19:42.000Z",
        "updated_at": "2021-04-26T12:48:13.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-04-26T12:48:13.000Z"
    },
    "comments": [
        {
            "created_at": "2021-03-08T22:10:56.189Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11696?focusedCommentId=17297721) by Andrew Lamb (alamb):*\n`[~domoritz]` I wonder if you mean this reader: https://docs.rs/arrow/3.0.0/arrow/ipc/reader/struct.FileReader.html#method.try_new\r\n\r\nIf so, while it is called a `FileReader` I think that is somewhat misleading. It requires something that implements `std::io::Read` \u2013 which `&[u8]` does.\r\n\r\nhttps://doc.rust-lang.org/std/io/trait.Read.html#impl-Read-2"
        },
        {
            "created_at": "2021-03-09T08:12:41.105Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11696?focusedCommentId=17297929) by Dominik Moritz (domoritz):*\nBut `&[u8]`\u00a0does not seem to implement Seek so FileReader does not work.\r\n\r\nThe error is:\r\n\r\n`the trait bound `&[u8]: Seek` is not satisfied`\r\n` required by `FileReader::<R>::try_new``\r\n\r\nIf I switch to the StreamReader, I get an IO error at runtime:\r\n\r\n`Io error: failed to fill whole buffer`\r\n\r\nSo what I implemented was\r\n\r\n`let cursor = std::io::Cursor::new(contents);`\r\n`\u00a0 let reader = match arrow::ipc::reader::FileReader::try_new(cursor) {`\r\n`\u00a0 Ok(reader) => reader,`\r\n`\u00a0 Err(error) => return Err(format!(\"{}\", error).into()),`\r\n` };`"
        },
        {
            "created_at": "2021-04-26T12:48:11.685Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11696?focusedCommentId=17332220) by Andrew Lamb (alamb):*\nMigrated to github: https://github.com/apache/arrow-rs/issues/189"
        }
    ]
}