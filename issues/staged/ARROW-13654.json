{
    "issue": {
        "title": "[C++][Parquet] Appending a FileMetaData object to itselfs explodes memory",
        "body": "***Note**: This issue was originally created as [ARROW-13654](https://issues.apache.org/jira/browse/ARROW-13654). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWriting a tiny parquet file, to read in its metadata (to obtain a FileMetaData object):\r\n\r\n```Java\n\r\nimport pyarrow as pa\r\nimport pyarrow.parquet as pq\r\n\r\ntable = pa.table({'a': [1, 2, 3], 'b': [4, 5, 6]})\r\npq.write_table(table, \"test_file_for_metadata.parquet\")\r\nmetadata = pq.read_metadata(\"test_file_for_metadata.parquet\")\r\n\r\nmetadata.append_row_groups(metadata)\r\n```\r\n\r\nThe last line using `AppendRowGroups` (appending the metadata object to itself) keeps running with increasing memory usage (I killed the process when it was using 10 GB).\r\n\r\nThis is not something useful to do, but still I wouldn't expect it to blow up (as one can accidentally do it; I was actually trying it in a attempt to create a large FileMetaData object). ",
        "created_at": "2021-08-18T12:32:45.000Z",
        "updated_at": "2021-09-21T07:17:07.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Parquet",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-09-20T11:47:54.000Z"
    },
    "comments": [
        {
            "created_at": "2021-09-20T11:47:54.287Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13654?focusedCommentId=17417602) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 11171\n<https://github.com/apache/arrow/pull/11171>"
        }
    ]
}