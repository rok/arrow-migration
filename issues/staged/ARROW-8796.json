{
    "issue": {
        "title": "[Rust] Allow parquet to be written directly to memory",
        "body": "***Note**: This issue was originally created as [ARROW-8796](https://issues.apache.org/jira/browse/ARROW-8796). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe `TryClone` bound currently needed in `ParquetWriter` makes it awkward to write parquet to memory, forcing either a `Rc` + `RefCell` wrapper or to write to a `File` first.\r\n\r\nBy explictly threading lifetimes around the underlying writer can be passed mutably through all parts of the writer, allowing `&mut Vec<u8>` or any other implementors of the basic io traits to be used directly.",
        "created_at": "2020-05-14T09:20:32.000Z",
        "updated_at": "2021-04-09T18:13:29.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-04-09T18:13:29.000Z"
    },
    "comments": []
}