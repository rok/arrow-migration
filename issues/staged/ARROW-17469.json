{
    "issue": {
        "title": "Failure to parse files that can be parsed on pyarrow. Also, failure to recover from crash",
        "body": "***Note**: This issue was originally created as [ARROW-17469](https://issues.apache.org/jira/browse/ARROW-17469). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI am using the following code to read parquet files in go and it works on some parquet files:\r\n```java\n\r\nimport (\r\n\"github.com/apache/arrow/go/v10/arrow/memory\"\r\n\"github.com/apache/arrow/go/v10/parquet/file\"\r\n\"github.com/apache/arrow/go/v10/parquet/pqarrow\"\r\n...\r\n\r\npf, err := file.NewParquetReader(bytes.NewReader(data))\r\ncheck(err)\r\npreader, err := pqarrow.NewFileReader(pf, pqarrow.ArrowReadProperties{}, memory.DefaultAllocator)\r\ncheck(err)\r\nfmt.Println(\"before read table\")\r\nresult, err := preader.ReadTable(ctx)\r\ncheck(err)\r\nfmt.Println(\"result is\", result.NumRows())\r\nresult.Release()\n```\r\nIt works on some parquet files but not on others files that can be parse by pyarrow's read_table function. However, even pyarrow fails to parse some parquet files that I was able to parse with <https://github.com/xitongsys/parquet-go.> I've attached an example of a file that fails. When it fails I get this stack trace:\r\n\r\npanic: runtime error: index out of range [0] with length 0\r\n\r\ngoroutine 595 [running]:\r\ngithub.com/apache/arrow/go/v10/parquet/internal/utils.NewFirstTimeBitmapWriter(...)\r\n\u00a0 \u00a0\u00a0\r\n```java\n\r\n/Users/josephgardi/.gvm/pkgsets/go1.17.1/global/pkg/mod/github.com/apache/arrow/go/v10@v10.0.0-20220818191625-a1c3d57af514/parquet/internal/utils/bitmap_writer.go:83\r\ngithub.com/apache/arrow/go/v10/parquet/file.defLevelsToBitmapInternal({0xc001714500, 0x0, 0x1000}, {0x881b680, 0x0, 0x100, 0x2648}, 0xc001583880, 0x40)\r\n\u00a0 \u00a0 /Users/josephgardi/.gvm/pkgsets/go1.17.1/global/pkg/mod/github.com/apache/arrow/go/v10@v10.0.0-20220818191625-a1c3d57af514/parquet/file/level_conversion.go:173 +0x23b\r\ngithub.com/apache/arrow/go/v10/parquet/file.DefLevelsToBitmap(...)\r\n\u00a0 \u00a0 /Users/josephgardi/.gvm/pkgsets/go1.17.1/global/pkg/mod/github.com/apache/arrow/go/v10@v10.0.0-20220818191625-a1c3d57af514/parquet/file/level_conversion.go:186\r\ngithub.com/apache/arrow/go/v10/parquet/pqarrow.(*structReader).BuildArray(0xc00049dec0, 0x0)\r\n\u00a0 \u00a0 /Users/josephgardi/.gvm/pkgsets/go1.17.1/global/pkg/mod/github.com/apache/arrow/go/v10@v10.0.0-20220818191625-a1c3d57af514/parquet/pqarrow/column_readers.go:279 +0x1b3\r\ngithub.com/apache/arrow/go/v10/parquet/pqarrow.(*listReader).BuildArray(0xc000a31ac0, 0xbd3)\r\n\u00a0 \u00a0 /Users/josephgardi/.gvm/pkgsets/go1.17.1/global/pkg/mod/github.com/apache/arrow/go/v10@v10.0.0-20220818191625-a1c3d57af514/parquet/pqarrow/column_readers.go:391 +0x4a2\r\ngithub.com/apache/arrow/go/v10/parquet/pqarrow.(*structReader).BuildArray(0xc000418f60, 0xbd3)\r\n\u00a0 \u00a0 /Users/josephgardi/.gvm/pkgsets/go1.17.1/global/pkg/mod/github.com/apache/arrow/go/v10@v10.0.0-20220818191625-a1c3d57af514/parquet/pqarrow/column_readers.go:289 +0x534\r\ngithub.com/apache/arrow/go/v10/parquet/pqarrow.(*ColumnReader).NextBatch(0xc00051c330, 0x0)\r\n\u00a0 \u00a0 /Users/josephgardi/.gvm/pkgsets/go1.17.1/global/pkg/mod/github.com/apache/arrow/go/v10@v10.0.0-20220818191625-a1c3d57af514/parquet/pqarrow/file_reader.go:134 +0x5c\r\ngithub.com/apache/arrow/go/v10/parquet/pqarrow.(*FileReader).ReadColumn(0xc001583f88, {0xc0008f72b0, 0xc000bda3f0, 0x0}, 0xc000a316c0)\r\n\u00a0 \u00a0 /Users/josephgardi/.gvm/pkgsets/go1.17.1/global/pkg/mod/github.com/apache/arrow/go/v10@v10.0.0-20220818191625-a1c3d57af514/parquet/pqarrow/file_reader.go:247 +0x65\r\ngithub.com/apache/arrow/go/v10/parquet/pqarrow.(*FileReader).ReadRowGroups.func1()\r\n\u00a0 \u00a0 /Users/josephgardi/.gvm/pkgsets/go1.17.1/global/pkg/mod/github.com/apache/arrow/go/v10@v10.0.0-20220818191625-a1c3d57af514/parquet/pqarrow/file_reader.go:341 +0xd2\r\ncreated by github.com/apache/arrow/go/v10/parquet/pqarrow.(*FileReader).ReadRowGroups\r\n\u00a0 \u00a0 /Users/josephgardi/.gvm/pkgsets/go1.17.1/global/pkg/mod/github.com/apache/arrow/go/v10@v10.0.0-20220818191625-a1c3d57af514/parquet/pqarrow/file_reader.go:332 +0x3d2\n```\r\n\u00a0\r\n\r\nThere is always some chance that my application will encounter a bad parquet file so I'd like to be able to recover from this panic. However, that doesn't work easily because this stack trace is coming from a different goroutine which is created on line 332 of ffile_reader.go:ReadRowGroups.\u00a0\r\n\r\nSo it seems that the solution is to do a recover within that goroutine and then try a different prarser such as [xitongsys](https://github.com/xitongsys/parquet-go.)/go-parquet.\r\n\r\n\u00a0\r\n\r\nOn an unrelated note, I'm wonder why is the go implementation of read_table so much faster than the python one if they are both calling c++?",
        "created_at": "2022-08-18T23:44:45.000Z",
        "updated_at": "2022-08-18T23:55:30.000Z",
        "labels": [
            "Migrated from Jira",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": []
}