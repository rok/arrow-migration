{
    "issue": {
        "title": "[C++/Python] Validate scale and precision of decimal128 type",
        "body": "***Note**: This issue was originally created as [ARROW-3904](https://issues.apache.org/jira/browse/ARROW-3904). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nDo We have a specification for it? \r\nCurrently I can create `pa.decimal128(-2147483648, 2147483647)`, which seems wrong.\r\n\r\nReferences:\r\n- https://docs.microsoft.com/en-us/sql/t-sql/data-types/precision-scale-and-length-transact-sql?view=sql-server-2017\n- https://docs.oracle.com/cd/B28359_01/server.111/b28318/datatype.htm#CNCPT1832",
        "created_at": "2018-11-29T11:57:36.000Z",
        "updated_at": "2019-04-11T16:33:57.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-04-11T16:33:51.000Z"
    },
    "comments": [
        {
            "created_at": "2018-11-29T23:39:04.686Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3904?focusedCommentId=16704037) by Wes McKinney (wesm):*\nIn PostgreSQL it seems to be configurable\r\n\r\nhttps://www.postgresql.org/docs/10/datatype-numeric.html#DATATYPE-NUMERIC-DECIMAL\r\n\r\nParquet supports precision 1 through 38 (https://github.com/apache/parquet-format/blob/master/LogicalTypes.md#decimal). It seems scale is limited to be between 0 and 38. So that seems like a reasonable constraint for now"
        },
        {
            "created_at": "2019-04-11T16:33:51.392Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3904?focusedCommentId=16815561) by Antoine Pitrou (apitrou):*\nThis was fixed in ARROW-4563."
        }
    ]
}