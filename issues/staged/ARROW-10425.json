{
    "issue": {
        "title": "[Python] Support reading (compressed) CSV file from remote file / binary blob",
        "body": "***Note**: This issue was originally created as [ARROW-10425](https://issues.apache.org/jira/browse/ARROW-10425). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nFrom https://stackoverflow.com/questions/64588076/how-can-i-read-a-csv-gz-file-with-pyarrow-from-a-file-object\r\n\r\nCurrently `pyarrow.csv.rad_csv` happily takes a path to a compressed file and automatically decompresses it, but AFAIK this only works for local paths. \r\n\r\nIt would be nice to in general support reading CSV from remote files (with URI / specifying a filesystem), and in that case also support compression. \r\n\r\nIn addition we could also read a compressed file from a BytesIO / file-like object, but not sure we want that (as it would required a keyword to indicate the used compression).",
        "created_at": "2020-10-29T20:32:43.000Z",
        "updated_at": "2021-05-17T14:47:47.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2020-10-29T20:34:25.382Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10425?focusedCommentId=17223190) by Joris Van den Bossche (jorisvandenbossche):*\nThe general filesystem support is also covered by ARROW-9938"
        },
        {
            "created_at": "2021-05-12T16:27:21.420Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10425?focusedCommentId=17343347) by Antoine Pitrou (apitrou):*\nI'm not sure what this issue is about. Currently the following works:\r\n```python\n\r\n>>> data = b\"\"\"a,b,c\\n1,2,3\\n\"\"\"\r\n>>> csv.read_csv(pa.BufferReader(data)).to_pandas()\r\n   a  b  c\r\n0  1  2  3\r\n>>> csv.read_csv(io.BytesIO(data)).to_pandas()\r\n   a  b  c\r\n0  1  2  3\r\n```\r\n\r\n`[~jorisvandenbossche]` Could you elaborate a bit?"
        },
        {
            "created_at": "2021-05-17T14:47:47.919Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10425?focusedCommentId=17346205) by Joris Van den Bossche (jorisvandenbossche):*\nYes, reading from a buffer works, but your example is not using a compressed buffer. So for example:\r\n\r\n```Java\n\r\nfrom pyarrow import fs, csv\r\n\r\ns3 = fs.S3FileSystem()\r\n\r\nwith s3.open_input_file(\"bucket/data.csv.gz\") as file:\r\n    table = csv.read_csv(file)\r\n```\r\n\r\ncurrently doesn't work? (tried it with LocalFileSystem)\r\n\r\nI am not sure this _should_ work, as right now we just infer the compression from the file path, and not from the actual content of the file. \r\n\r\nBut, then it might be nice that something like `csv.read_csv(\"s3://bucket/data.csv.gz\")` would work so that it could be detected from the file path. "
        }
    ]
}