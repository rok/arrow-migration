{
    "issue": {
        "title": "Avoid unnecessary copies of collection",
        "body": "***Note**: This issue was originally created as [ARROW-13847](https://issues.apache.org/jira/browse/ARROW-13847). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThere are several occurences of unnecessary copies of collections in Arrow Java code.\r\n\r\nOne typical example is for a constructor to copy a collection provided as an argument, and then invoking `Collections2` method to create a immutable copy of it, like for `Schema` (<https://github.com/apache/arrow/blob/247a7a9bf1b7090b1bffc14bec84d188dccb52dc/java/vector/src/main/java/org/apache/arrow/vector/types/pojo/Schema.java#L113)>\r\n```java\n\r\n\r\n  /**\r\n   * Constructor with metadata.\r\n   */\r\n  public Schema(Iterable<Field> fields,\r\n                Map<String, String> metadata) {\r\n    List<Field> fieldList = new ArrayList<>();\r\n    for (Field field : fields) {\r\n      fieldList.add(field);\r\n    }\r\n    this.fields = Collections2.immutableListCopy(fieldList);\r\n    this.metadata = metadata == null ? Collections.emptyMap() : Collections2.immutableMapCopy(metadata);\r\n  } \n```",
        "created_at": "2021-09-01T16:42:56.000Z",
        "updated_at": "2021-09-26T03:15:47.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-09-26T03:15:46.000Z"
    },
    "comments": [
        {
            "created_at": "2021-09-26T03:15:46.583Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13847?focusedCommentId=17420192) by Micah Kornfield (emkornfield):*\nIssue resolved by pull request 11063\n<https://github.com/apache/arrow/pull/11063>"
        }
    ]
}