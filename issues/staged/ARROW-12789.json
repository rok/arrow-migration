{
    "issue": {
        "title": "[C++] Support for scalar value recycling in RecordBatch/Table creation",
        "body": "***Note**: This issue was originally created as [ARROW-12789](https://issues.apache.org/jira/browse/ARROW-12789). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nPlease can we have the capability to be able to recycle scalar values during table creation?\u00a0 It would work as follows:\r\n\r\nUpon creation of a new Table/RecordBatch, the length of each column is checked.\u00a0 If:\r\n \\* number of columns is > 1 and\r\n \\* any columns have length 1 and\r\n \\* not all columns have length 1\r\n\r\nthen, the value in the length 1 column(s) should be repeated to make it as long as the other columns.\u00a0\r\n\r\nThis should only occur if all columns either have length 1 or N (where N is some value greater than 1), and if any columns lengths are values other than 1 or N, we should still get an error as we do now.",
        "created_at": "2021-05-14T07:18:48.000Z",
        "updated_at": "2021-06-04T01:18:24.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-05-17T12:04:11.890Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12789?focusedCommentId=17346113) by Joris Van den Bossche (jorisvandenbossche):*\nI was going to comment that, alternatively, C++ could also provide the utility to easily/efficiently create an array of a given length from a scalar, and then leave it up to the bindings to check for scalars and create the appropriate array. But it seems (from the PR for the other issue) this is what is already being done with `MakeArrayFromScalar`."
        },
        {
            "created_at": "2021-05-17T18:00:20.226Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12789?focusedCommentId=17346319) by Weston Pace (westonpace):*\n`[~jorisvandenbossche]` I've just opened ARROW-12813 for that as it has come up a few times."
        },
        {
            "created_at": "2021-05-17T18:02:01.947Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12789?focusedCommentId=17346330) by Weston Pace (westonpace):*\n`[~bkietz]` \u00a0 I'm going to tag you for input just because you've done some work with broadcasting in the past (e.g. in regards to projection) which seems quite similar.\u00a0 Perhaps this PR could be achieved by a \"broadcast\" compute function which takes in a vector of arrays? (which I suppose is an odd shape for input into the compute layer)."
        },
        {
            "created_at": "2021-05-17T20:32:04.911Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12789?focusedCommentId=17346422) by Nicola Crane (thisisnic):*\nAlso, feel free to push back on this if you don't think there's a huge amount of application beyond R - I can always look to implement it in the R package's C++ code if this is looking to be a particularly special case that won't be needed elsewhere?"
        },
        {
            "created_at": "2021-06-04T01:18:24.453Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12789?focusedCommentId=17356998) by Ben Kietzman (bkietz):*\nIn C++ terms, a RecordBatch's column is strictly an array and not a scalar. I'm guessing you'd like to do something similar to\r\n\r\n```Java\n\r\ntibble(a = 1:10, s = 0)\r\n```\r\n\r\nthat seems useful, but it's not something which makes sense to add in C++. I'd recommend adding a clause to `RecordBatch$create` which detects Scalars and invokes MakeArrayFromScalar to coerce to an Array"
        }
    ]
}