{
    "issue": {
        "title": "[Rust] CSV Reader & Writer",
        "body": "***Note**: This issue was originally created as [ARROW-3726](https://issues.apache.org/jira/browse/ARROW-3726). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nAs an Arrow Rust user, I would like to be able to read and write CSV files, so that I can quickly ingest data into an Arrow format for futher use, and save outputs in CSV.\r\n\r\nAs there aren't yet many options for working with tabular/df structures in Rust (other than Andy's DataFusion), I'm struggling to motivate for this feature. However, I think building a csv parser into Rust would\u00a0reduce effort for\u00a0future libs (incl DataFusion).",
        "created_at": "2018-11-08T18:28:58.000Z",
        "updated_at": "2018-11-21T18:52:31.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2018-11-21T17:39:33.000Z"
    },
    "comments": [
        {
            "created_at": "2018-11-08T20:09:58.451Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3726?focusedCommentId=16680332) by Wes McKinney (wesm):*\nSince `[~pitrou]` has just been building a fresh new parallel CSV reader for Cplusplus, its design could be used to help with creating a Rust-native one (or you could possibly wrap the C++ library in Rust, too)"
        },
        {
            "created_at": "2018-11-08T21:11:21.299Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3726?focusedCommentId=16680388) by Chao Sun (csun):*\nLooks interesting. I'll take this (probably with Rust-native impl)."
        },
        {
            "created_at": "2018-11-18T17:22:38.753Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3726?focusedCommentId=16690973) by Andy Grove (andygrove):*\nI have a CSV reader + writer already in DataFusion that I was planning on contributing. It needs to be updated to reflect some of the recent changes in the Rust implementation of Arrow.\r\n\r\n`[~csun]` Are you OK with me taking this one, or do you still want to work on this?"
        },
        {
            "created_at": "2018-11-18T17:24:11.805Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3726?focusedCommentId=16690974) by Andy Grove (andygrove):*\nAlso, worth stating that my reader + writer leverages the excellent (and high performance) Rust csv crate, so we don't have to reinvent the wheel there."
        },
        {
            "created_at": "2018-11-19T15:36:15.346Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3726?focusedCommentId=16691880) by Neville Dipale (nevi_me):*\nThanks `[~andygrove]`, does the reader support inferring data schema? I got schema inference working through sampling a csv and using the regex crate to match fields by some hierarchy.\u00a0\r\n\r\nIt worked relatively well on primitive types, but I struggled with timestamps because I was trying to read from csv to parquet. For\u00a0timestamps we could allow the user to specify the format (yyyy-mm-dd-... etc), or default to an ISO format. What do you think?"
        },
        {
            "created_at": "2018-11-19T15:57:10.802Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3726?focusedCommentId=16691901) by Andy Grove (andygrove):*\nI have not implemented schema inference yet. I think we should create a separate ticket for this feature where we can figure out the requirements, like the timestamp issue you mentioned."
        },
        {
            "created_at": "2018-11-21T17:39:33.606Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3726?focusedCommentId=16695012) by Andy Grove (andygrove):*\nIssue resolved by pull request 2992\n<https://github.com/apache/arrow/pull/2992>"
        },
        {
            "created_at": "2018-11-21T18:52:31.463Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3726?focusedCommentId=16695112) by Neville Dipale (nevi_me):*\nHi `[~andygrove]` `[~pitrou]`, I just remembered that the csv library used in Arrow only supports UTF8. Does the cpp-based CSV reader have the same limitation, or will this be limited to Rust? It might be something worth documenting for Rust."
        }
    ]
}