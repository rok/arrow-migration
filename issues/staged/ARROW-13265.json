{
    "issue": {
        "title": "[R] cli valgrind errors in nightlies",
        "body": "***Note**: This issue was originally created as [ARROW-13265](https://issues.apache.org/jira/browse/ARROW-13265). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe r-valgrind nightly job has been failing from July 1-today.\r\n\r\nThe last known good build was on June 30.\r\n\r\nThe following were merged on 30 June so likely one of them is the culprit:\r\nARROW-13128: [C#] TimestampArray conversion logic for nano and micro \u2026 \u2026\r\nARROW-13025: [C++][Python] Add FunctionOptions::Equals/ToString/Seria\u2026 \u2026\r\nARROW-13095: [C++] Implement trig compute functions \u2026\r\nMINOR: [C#] Fixing example to use WriteEndAsync instead of WriteFoote\u2026 \u2026\r\nARROW-13010: [C++][Compute] Support outputting to slices from kleene \u2026 \u2026\r\nARROW-12996: Add bytes_read() to StreamingReader \u2026\r\nARROW-13072: [C++] Add bit-wise arithmetic kernels \u2026\r\nARROW-13104: [C++] Fix unsafe cast in ByteStreamSplit implementation \u2026\r\nARROW-13134: [C++][CI] Pin aws-sdk-cpp to < 1.9 \u2026\r\n\r\nFor reference: \r\nlast commit on June 29: 42048e554056baa7fb3d1159a859f3e08056fc1b\r\nlast commit on June 30: ab5747959d2defeda9ff159155fb4673e3f77e8d\r\n\r\nThe error is: \r\n```Java\n\r\n2021-07-06T09:03:49.4267523Z ==3154== HEAP SUMMARY:\r\n2021-07-06T09:03:49.4269578Z ==3154==     in use at exit: 322,229,205 bytes in 61,881 blocks\r\n2021-07-06T09:03:49.4271423Z ==3154==   total heap usage: 3,962,401 allocs, 3,900,520 frees, 2,926,474,902 bytes allocated\r\n2021-07-06T09:03:49.4273205Z ==3154== \r\n2021-07-06T09:03:56.2319948Z ==3154== 336 bytes in 1 blocks are possibly lost in loss record 174 of 3,640\r\n2021-07-06T09:03:56.2321803Z ==3154==    at 0x483DD99: calloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n2021-07-06T09:03:56.2323056Z ==3154==    by 0x40149CA: allocate_dtv (dl-tls.c:286)\r\n2021-07-06T09:03:56.2324056Z ==3154==    by 0x40149CA: _dl_allocate_tls (dl-tls.c:532)\r\n2021-07-06T09:03:56.2324838Z ==3154==    by 0x5721322: allocate_stack (allocatestack.c:622)\r\n2021-07-06T09:03:56.2329162Z ==3154==    by 0x5721322: pthread_create@@GLIBC_2.2.5 (pthread_create.c:660)\r\n2021-07-06T09:03:56.2329726Z ==3154==    by 0x1317E67A: cli__start_thread (thread.c:46)\r\n2021-07-06T09:03:56.2330502Z ==3154==    by 0x1317E6D6: clic_start_thread (thread.c:63)\r\n2021-07-06T09:03:56.2331474Z ==3154==    by 0x494214E: R_doDotCall (dotcode.c:604)\r\n2021-07-06T09:03:56.2331893Z ==3154==    by 0x49B135F: bcEval (eval.c:7671)\r\n2021-07-06T09:03:56.2332311Z ==3154==    by 0x498C2A2: Rf_eval (eval.c:727)\r\n2021-07-06T09:03:56.2332712Z ==3154==    by 0x498F011: R_execClosure (eval.c:1897)\r\n2021-07-06T09:03:56.2333146Z ==3154==    by 0x498ECC4: Rf_applyClosure (eval.c:1823)\r\n2021-07-06T09:03:56.2333567Z ==3154==    by 0x49A084C: bcEval (eval.c:7083)\r\n2021-07-06T09:03:56.2333952Z ==3154==    by 0x498C2A2: Rf_eval (eval.c:727)\r\n2021-07-06T09:03:56.2334279Z ==3154== \r\n2021-07-06T09:03:56.2361291Z ==3154== LEAK SUMMARY:\r\n2021-07-06T09:03:56.2362383Z ==3154==    definitely lost: 0 bytes in 0 blocks\r\n2021-07-06T09:03:56.2362824Z ==3154==    indirectly lost: 0 bytes in 0 blocks\r\n2021-07-06T09:03:56.2363239Z ==3154==      possibly lost: 336 bytes in 1 blocks\r\n2021-07-06T09:03:56.2363802Z ==3154==    still reachable: 322,228,869 bytes in 61,880 blocks\r\n2021-07-06T09:03:56.2364367Z ==3154==                       of which reachable via heuristic:\r\n2021-07-06T09:03:56.2365602Z ==3154==                         newarray           : 4,264 bytes in 1 blocks\r\n2021-07-06T09:03:56.2366369Z ==3154==         suppressed: 0 bytes in 0 blocks\r\n2021-07-06T09:03:56.2366834Z ==3154== Reachable blocks (those to which a pointer was found) are not shown.\r\n2021-07-06T09:03:56.2367759Z ==3154== To see them, rerun with: --leak-check=full --show-leak-kinds=all\r\n2021-07-06T09:03:56.2368331Z ==3154== \r\n2021-07-06T09:03:56.2368935Z ==3154== For lists of detected and suppressed errors, rerun with: -s\r\n2021-07-06T09:03:56.2369460Z ==3154== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 1)\r\n```\r\n\r\nhttps://dev.azure.com/ursacomputing/crossbow/_build/results?buildId=7714&view=logs&j=0da5d1d9-276d-5173-c4c4-9d4d4ed14fdb&t=d9b15392-e4ce-5e4c-0c8c-b69645229181&l=13491\r\n\r\n ",
        "created_at": "2021-07-06T18:32:53.000Z",
        "updated_at": "2021-07-21T01:36:07.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: R",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-07-09T02:19:08.000Z"
    },
    "comments": [
        {
            "created_at": "2021-07-06T18:33:31.546Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13265?focusedCommentId=17375932) by Jonathan Keane (jonkeane):*\nI'm rerunning with `--show-leak-kinds=all` to see if that provides any more information at https://dev.azure.com/ursacomputing/crossbow/_build/results?buildId=7720&view=logs&j=0da5d1d9-276d-5173-c4c4-9d4d4ed14fdb&t=5bbb8710-d4c1-5a8b-fc80-a388730cf6ac"
        },
        {
            "created_at": "2021-07-06T18:39:28.249Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13265?focusedCommentId=17375936) by Mauricio 'Pach\u00e1' Vargas Sep\u00falveda (pachamaltese):*\nI've tried to run the mentioned commits during July 4th holiday, but locally\r\nthe Ubuntu 21.04 installation problem (now fixed) was a large blocker to show the problem rather than hiding it."
        },
        {
            "created_at": "2021-07-06T18:40:18.064Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13265?focusedCommentId=17375937) by Mauricio 'Pach\u00e1' Vargas Sep\u00falveda (pachamaltese):*\nmy candidate was https://issues.apache.org/jira/browse/ARROW-13104, but I couldn't move beyond a mere gut feeling"
        },
        {
            "created_at": "2021-07-06T18:49:29.223Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13265?focusedCommentId=17375944) by Antoine Pitrou (apitrou):*\nIt seems to be a thread that's not stopped before the process ends. Technically it may be harmless, but Valgrind doesn't like it.\r\n\r\nIt would be nice if you could try to enable tests selectively to try and find out which one produces the leak exactly."
        },
        {
            "created_at": "2021-07-06T18:51:05.294Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13265?focusedCommentId=17375945) by Antoine Pitrou (apitrou):*\nAlso `[~jonkeane]` \u00a0 you can reproduce locally using `archery`, so you should bisect the aforementioned commits to find which one introduced the issue."
        },
        {
            "created_at": "2021-07-06T19:14:49.511Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13265?focusedCommentId=17375958) by Jonathan Keane (jonkeane):*\nYup, that's exactly what I'm already running locally to see if I can narrow it down. I'll post here when I have more information"
        },
        {
            "created_at": "2021-07-07T17:58:50.689Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13265?focusedCommentId=17376754) by Jonathan Keane (jonkeane):*\nThis might not actually be us after all. The day that this error started there was a release of the cli package (from 2.5.0 to 3.0.0).\r\n\r\nWhen I tried replicating the last passing build locally, that actually failed by default (with cli 3.0.0) and I was only able to recreate the failure with cli 2.5.0. I'm running HEAD with cli 2.5.0 to see if that passes."
        },
        {
            "created_at": "2021-07-07T18:20:01.904Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13265?focusedCommentId=17376764) by Jonathan Keane (jonkeane):*\nA ha! Yes, we can see the valgrind issue:\r\n\r\n```Java\n\r\n2021-07-01T07:50:16.9999210Z ==3158== 336 bytes in 1 blocks are possibly lost in loss record 175 of 3,689\r\n2021-07-01T07:50:17.0000076Z ==3158==    at 0x483DD99: calloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)\r\n2021-07-01T07:50:17.0000778Z ==3158==    by 0x40149CA: allocate_dtv (dl-tls.c:286)\r\n2021-07-01T07:50:17.0001425Z ==3158==    by 0x40149CA: _dl_allocate_tls (dl-tls.c:532)\r\n2021-07-01T07:50:17.0001913Z ==3158==    by 0x5721322: allocate_stack (allocatestack.c:622)\r\n2021-07-01T07:50:17.0002419Z ==3158==    by 0x5721322: pthread_create@@GLIBC_2.2.5 (pthread_create.c:660)\r\n2021-07-01T07:50:17.0002939Z ==3158==    by 0x1315E67A: cli__start_thread (thread.c:46)\r\n2021-07-01T07:50:17.0003412Z ==3158==    by 0x1315E6D6: clic_start_thread (thread.c:63)\r\n2021-07-01T07:50:17.0003877Z ==3158==    by 0x494214E: R_doDotCall (dotcode.c:604)\r\n2021-07-01T07:50:17.0004296Z ==3158==    by 0x49B135F: bcEval (eval.c:7671)\r\n2021-07-01T07:50:17.0004716Z ==3158==    by 0x498C2A2: Rf_eval (eval.c:727)\r\n2021-07-01T07:50:17.0005153Z ==3158==    by 0x498F011: R_execClosure (eval.c:1897)\r\n2021-07-01T07:50:17.0005609Z ==3158==    by 0x498ECC4: Rf_applyClosure (eval.c:1823)\r\n2021-07-01T07:50:17.0006034Z ==3158==    by 0x49A084C: bcEval (eval.c:7083)\r\n2021-07-01T07:50:17.0006462Z ==3158==    by 0x498C2A2: Rf_eval (eval.c:727)\r\n```\r\n\r\nwhich is calling [`cli__start_thread`](https://github.com/r-lib/cli/blob/43a695dba7636c5aae31a16508231ed9ac57f061/src/thread.c#L37-L57)\r\n\r\nI'm still digging to see if I can figure out what is calling that in our tests."
        },
        {
            "created_at": "2021-07-07T18:29:58.416Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13265?focusedCommentId=17376776) by Antoine Pitrou (apitrou):*\nHa! Looking at that code, you may be able to disable the thread creation simply by setting the `CLI_NO_THREAD` environment variable.\r\n\r\nThat said, it may be worth reporting the issue to their issue tracker anyway."
        },
        {
            "created_at": "2021-07-07T18:57:03.550Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13265?focusedCommentId=17376797) by Jonathan Keane (jonkeane):*\nI've submitted https://github.com/r-lib/cli/issues/311 to hopefully resolve that. We can try setting that in our CI, but AFAIK we cannot set that on CRAN when they run the valgrind tests, so we'll have to ask that they overlook this in our submission since it looks like it's a {cli} issue."
        },
        {
            "created_at": "2021-07-09T02:19:08.986Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13265?focusedCommentId=17377709) by Jonathan Keane (jonkeane):*\nIssue resolved by pull request 10676\n<https://github.com/apache/arrow/pull/10676>"
        }
    ]
}