{
    "issue": {
        "title": "[C++] SliceBuffer on CudaBuffer should return CudaBuffer",
        "body": "***Note**: This issue was originally created as [ARROW-2446](https://issues.apache.org/jira/browse/ARROW-2446). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently `SliceBuffer` on a `CudaBuffer` returns a plain `Buffer` instance, which is dangerous for unsuspecting consumers.",
        "created_at": "2018-04-11T10:04:52.000Z",
        "updated_at": "2020-02-17T14:34:18.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: GPU",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-02-17T14:34:02.000Z"
    },
    "comments": [
        {
            "created_at": "2018-04-28T18:34:22.959Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2446?focusedCommentId=16457744) by Wes McKinney (wesm):*\nBuffer slicing may be a hot path in IPC reads, so we need to take care with performance if making any changes to how these mechanics work"
        },
        {
            "created_at": "2020-02-17T14:33:53.119Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2446?focusedCommentId=17038406) by Antoine Pitrou (apitrou):*\nThe original motivation (the dangerous aspect of returning a plain Buffer) has disappeared with the device API work. This would now be more of a convenience improvement, and I'm not sure it's worth the complication of introducing virtual method calls for buffer slices.\r\n"
        },
        {
            "created_at": "2020-02-17T14:34:18.272Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2446?focusedCommentId=17038407) by Wes McKinney (wesm):*\nAgreed"
        }
    ]
}