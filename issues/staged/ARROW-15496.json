{
    "issue": {
        "title": "[C++][Python] Log warning when user tries to write parquet table with incompatible type",
        "body": "***Note**: This issue was originally created as [ARROW-15496](https://issues.apache.org/jira/browse/ARROW-15496). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCould we get a logged warning when a user tries to `pyarrow.parquet.write_table()` with `version=1.0` and a schema that contains an incompatible `uint32()` type? I don't think the behavior to upcast to an `int64()` is immediately obvious (although the docs are clear on it) and I think it would help prevent some confusion for other users.",
        "created_at": "2022-01-28T17:58:12.000Z",
        "updated_at": "2022-07-04T17:41:26.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Parquet",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-01-31T14:02:57.668Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15496?focusedCommentId=17484701) by Antoine Pitrou (apitrou):*\nThis sounds quite reasonable to me. The only complication is that this is detected on the C++ side and the user would presumably prefer a Python warning?"
        },
        {
            "created_at": "2022-01-31T14:03:04.324Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15496?focusedCommentId=17484702) by Antoine Pitrou (apitrou):*\ncc `[~jorisvandenbossche]`"
        },
        {
            "created_at": "2022-02-04T17:54:38.637Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15496?focusedCommentId=17487205) by Joris Van den Bossche (jorisvandenbossche):*\nShort term it will probably be more useful to actually switch the default to a more recent version that can handle those types (but I think we are planning to do that in the next release? -> ARROW-12203). But yes, aside from that I agree that a warning might be useful."
        }
    ]
}