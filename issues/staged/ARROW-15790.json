{
    "issue": {
        "title": "[C++] field's metadata is not written to Parquet file",
        "body": "***Note**: This issue was originally created as [ARROW-15790](https://issues.apache.org/jira/browse/ARROW-15790). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI used this code to test the metadata write into file and read back behavior of parquet\u00a0 file:\r\n\r\n<https://gist.github.com/dantrim/33f9f14d0b2d3ec45c022aa05f7a45ee>\r\n\r\n\u00a0\r\n\r\nThe generated file does not have metadata when I read the file in using code below and print it out:\u00a0\r\n\u00a0\r\n> std::shared_ptr<arrow::io::ReadableFile> infile;\n> PARQUET_ASSIGN_OR_THROW(infile,\n> arrow::io::ReadableFile::Open(\"./test.parquet\", arrow::default_memory_pool()));\n> \n> std::unique_ptr<parquet::arrow::FileReader> reader;\n> PARQUET_THROW_NOT_OK(\n> parquet::arrow::OpenFile(infile, arrow::default_memory_pool(), &reader));\n> std::shared_ptr<arrow::Table> table;\n> PARQUET_THROW_NOT_OK(reader->ReadTable(&table));\n> EXPECT_EQ(frameCount, table->num_rows());\n> std::cout<<\"===\"<<table->schema()->ToString(true) <<std::endl; /// no meta shown\r\nHere is the version info:\r\nlibparquet-dev/focal,now 7.0.0-1 amd64 [installed]\r\nlibparquet-glib-dev/focal,now 7.0.0-1 amd64 [installed]\r\nlibparquet-glib700/focal,now 7.0.0-1 amd64 [installed,automatic]\r\nlibparquet700/focal,now 7.0.0-1 amd64 [installed,automatic]",
        "created_at": "2022-02-25T21:47:36.000Z",
        "updated_at": "2022-03-03T07:40:50.000Z",
        "labels": [
            "Migrated from Jira",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-03-03T07:40:50.000Z"
    },
    "comments": [
        {
            "created_at": "2022-02-28T23:26:55.959Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15790?focusedCommentId=17499224) by Sifang Li (sclaker):*\nI can see in writer.cc - the metadata is apparently ignored:\r\n\r\n\u00a0\r\nStatus Init() {\r\nreturnSchemaManifest::Make(writer_->schema(), /**schema_metadata=**/nullptr,\r\ndefault_arrow_reader_properties(), &schema_manifest_);\r\n}"
        },
        {
            "created_at": "2022-03-01T14:43:49.148Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15790?focusedCommentId=17499585) by Joris Van den Bossche (jorisvandenbossche):*\nCurrently, if you want to preserve Arrow's field metadata in a Parquet roundtrip, you need to set the `parquet::ArrowWriterProperties::store_schema` option to true. This will store a serialized arrow schema in the Parquet FileMetaData, and restore information from this when reading. \r\n\r\nFor actually supporting reading/writing field / column-level metadata in Parquet, see ARROW-15548"
        },
        {
            "created_at": "2022-03-01T18:56:48.889Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15790?focusedCommentId=17499692) by Sifang Li (sclaker):*\nyes - that worked for me - it would be nice if they are stored automatically because I cannot imagine it would take up much space or why people would want that info dropped in any scenarios."
        },
        {
            "created_at": "2022-03-03T07:40:32.959Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15790?focusedCommentId=17500552) by Joris Van den Bossche (jorisvandenbossche):*\nWell, see ARROW-15548 for some discussion on why this is not yet supported (for a start, we don't yet expose `ColumnMetaData.key_value_metadata`). \r\n\r\nI am going to close this as a duplicate of ARROW-15548, we can continue the discussion there."
        }
    ]
}