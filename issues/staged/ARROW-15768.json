{
    "issue": {
        "title": "[CI][C++] Reinstate a code coverage job",
        "body": "***Note**: This issue was originally created as [ARROW-15768](https://issues.apache.org/jira/browse/ARROW-15768). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nLong ago we used to have code coverage measured on our Travis-CI setup. We dropped it because it was difficult to maintain and also a bit costly in additional execution time AFAIR.\r\n\r\nNow that we have nightly builds using Crossbow and the flexibility of Github Actions workflows (where we could even perhaps run coverage on e.g. Linux and Windows, then combine the files as a final merge job), we should be able to create a new code coverage job.",
        "created_at": "2022-02-23T17:02:46.000Z",
        "updated_at": "2022-05-20T00:48:55.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Continuous Integration",
            "Type: task"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-05-19T08:26:00.268Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15768?focusedCommentId=17539399) by Antoine Pitrou (apitrou):*\ncc `[~raulcd]` `[~assignUser]`\r\n"
        },
        {
            "created_at": "2022-05-19T10:07:05.831Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15768?focusedCommentId=17539442) by Jacob Wujciak-Jens (assignUser):*\nWould it make sense to extend this to all components? Is there a codecov/coveralls integration in the apache repo so it can be commented on the PRs?\u00a0"
        },
        {
            "created_at": "2022-05-19T10:46:51.801Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15768?focusedCommentId=17539459) by Antoine Pitrou (apitrou):*\nI don't think we can reasonably do that on PRs given the execution times that it implies."
        },
        {
            "created_at": "2022-05-19T11:55:33.005Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15768?focusedCommentId=17539492) by Antoine Pitrou (apitrou):*\nBut to answer your other question, yes, we could extend this to all components. It's just probably easier to do it piecewise."
        },
        {
            "created_at": "2022-05-19T22:23:43.071Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15768?focusedCommentId=17539830) by Jacob Wujciak-Jens (assignUser):*\nYes I agree that doing it piecewise would be the right choice and that creating an umbrella issue for that with this as a subtask would be the way to go. But I am whole unfamiliar with any code coverage systems outside of R's testthat & codecov (where you just run the test suit again to collect the data which takes marginal time compared to compiling libarrow) so I will have to look into this before committing to anything :)"
        },
        {
            "created_at": "2022-05-20T00:48:55.204Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15768?focusedCommentId=17539862) by Dewey Dunnington (paleolimbot):*\nI'd be content with a crossbow job that I could trigger from a PR that I was authoring/reviewing...I rather like the codecov visualization but the static html that `covr::report()` generates as an artifact that could be downloaded would be a good start (at least for the R bindings). I have never run it for Arrow, though, so I don't know if that's opening a can of worms."
        }
    ]
}