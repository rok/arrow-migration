{
    "issue": {
        "title": "CXX flags for development more permissive than Travis CI builds",
        "body": "***Note**: This issue was originally created as [ARROW-1615](https://issues.apache.org/jira/browse/ARROW-1615). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n\narrow/cpp/cmake_modules/SetupCxxFlags.cmake uses more permissive CXX flags than the Travis CI integration build.\n\nA project that builds without warnings or errors on a development machine can break during a Travis build.\n\nThose using CLang and GNU may not see the same warnings before a check-in.\n\nTravis CI:\n\n-Wall -std=c11 -Wconversion -Wno-sign-conversion -Werror -std=gnu+11\n\nArrow:\n\n-Wall -std=c+11 -std=gnu+11\n\nParquet-CPP:\n\n-Wall -std=gnu++11\n\n\nWith only CLang installed, g++ is a wrapper for CLang.\n\nTo make it less likely that a Clang build will break when checked-in, CLang has a -Weverything flag from which specific warnings can be disabled and enabled.\n\nhttp://amattn.com/p/better_apps_clang_weverything_or_wall_is_a_lie.html\n\nhttps://gcc.gnu.org/wiki/ClangDiagnosticsComparison\n\nhttps://github.com/Barro/compiler-warnings\n\n\nHowever, the warning that caused this particular build failure is specific to GNU gcc.\n\nhttps://gcc.gnu.org/bugzilla/show_bug.cgi?id=40752\n\nhttps://stackoverflow.com/questions/12641387/is-gccs-wconversion-incompatible-with-the-use-of-compound-assignment-etc\n\nCLang has a \"-Weverything\" flag. Individual warnings were disabled until the current Arrow source code compiled without errors.\n\nIndividual warnings can be enabled when using the CLang compiler to see if there is anything that needs to be fixed.\n\n```\nelseif((CMAKE_CXX_COMPILER_ID STREQUAL \"Clang\") OR (CMAKE_CXX_COMPILER_ID STREQUAL \"AppleClang\"))\n1. NOTE: -Wconversion does not return the same warnings on CLang and GNU (build can still fail even when enabled)\n     set(CXX_COMMON_FLAGS \"-Weverything -Wno-c+98-compat -Wno-c 98-compat-pedantic -Wno-deprecated -Wno-weak-vtables -Wno-padded -Wno-unused-parameter -Wno-undef -Wno-documentation-deprecated-sync -Wno-reserved-id-macro -Wno-shadow -Wno-switch-enum -Wno-documentation -Wno-exit-time-destructors -Wno-global-constructors -Wno-weak-template-vtables -Wno-undefined-reinterpret-cast -Wno-implicit-fallthrough -Wno-old-style-cast -Wno-unreachable-code-return -Wno-float-equal -Wno-missing-prototypes -Wno-double-promotion -Wno-non-virtual-dtor -Wno-unused-macros -Wno-covered-switch-default -Wno-unreachable-code-break -Wno-extra-semi -Wno-range-loop-analysis -Wno-shift-sign-overflow -Wno-used-but-marked-unused -Wno-missing-variable-declarations -Wno-gnu-zero-variadic-macro-arguments -Wconversion -Wno-sign-conversion -Wc 11-narrowing -Wnarrowing -Werror -std=c+11\")\n   else()\n1. Travis CI builds use these flags\n     set(CXX_COMMON_FLAGS \"-Wall -Wconversion -Wno-sign-conversion -Werror -std=c++11\")\n   endif()\n   ```\n\n```\nIn file included from /home/travis/build/apache/arrow/cpp/src/arrow/buffer.h:29:0,\nfrom /home/travis/build/apache/arrow/cpp/src/arrow/buffer.cc:18:\n/home/travis/build/apache/arrow/cpp/src/arrow/util/bit-util.h: In member function \u2018void arrow::internal::BitmapWriter::Set()\u2019:\n/home/travis/build/apache/arrow/cpp/src/arrow/util/bit-util.h:108:30: error: conversion to \u2018uint8_t\n{aka unsigned char}\u2019 from \u2018int\u2019 may alter its value [-Werror=conversion]\nvoid Set() { current_byte_ |= (1 << bit_offset_); }\n^\n/home/travis/build/apache/arrow/cpp/src/arrow/util/bit-util.h: In member function \u2018void arrow::internal::BitmapWriter::Clear()\u2019:\n/home/travis/build/apache/arrow/cpp/src/arrow/util/bit-util.h:110:32: error: conversion to \u2018uint8_t {aka unsigned char}\n\u2019 from \u2018int\u2019 may alter its value [-Werror=conversion]\nvoid Clear()\n{ current_byte_ &= ~(1 << bit_offset_); }\n^\ncc1plus: all warnings being treated as errors\n[28/137] Building CXX object CMakeFiles/arrow_objlib.dir/src/arrow/array.cc.o\nFAILED: CMakeFiles/arrow_objlib.dir/src/arrow/array.cc.o \n/usr/bin/ccache /usr/lib/ccache/g+-4.9 -DARROW_EXTRA_ERROR_CONTEXT -DARROW_NO_DEPRECATED_API -DARROW_WITH_BROTLI -DARROW_WITH_LZ4 -DARROW_WITH_SNAPPY -DARROW_WITH_ZLIB -DARROW_WITH_ZSTD -isystem /home/travis/build/apache/arrow/cpp-toolchain/include -isystem googletest_ep-prefix/src/googletest_ep/include -isystem gbenchmark_ep/src/gbenchmark_ep-install/include -isystem /home/travis/build/apache/arrow/cpp/thirdparty/hadoop/include -I/home/travis/build/apache/arrow/cpp/src -ggdb -O0 -Wall -std=c11 -msse3 -Wconversion -Wno-sign-conversion -Werror -g -fPIC -std=gnu+11 -MD -MT CMakeFiles/arrow_objlib.dir/src/arrow/array.cc.o -MF CMakeFiles/arrow_objlib.dir/src/arrow/array.cc.o.d -o CMakeFiles/arrow_objlib.dir/src/arrow/array.cc.o -c /home/travis/build/apache/arrow/cpp/src/arrow/array.cc\nIn file included from /home/travis/build/apache/arrow/cpp/src/arrow/buffer.h:29:0,\nfrom /home/travis/build/apache/arrow/cpp/src/arrow/array.h:27,\nfrom /home/travis/build/apache/arrow/cpp/src/arrow/array.cc:18:\n/home/travis/build/apache/arrow/cpp/src/arrow/util/bit-util.h: In member function \u2018void arrow::internal::BitmapWriter::Set()\u2019:\n/home/travis/build/apache/arrow/cpp/src/arrow/util/bit-util.h:108:30: error: conversion to \u2018uint8_t {aka unsigned char}\u2019 from \u2018int\u2019 may alter its value [-Werror=conversion]\nvoid Set() { current_byte_ |= (1 << bit_offset_); }\n^\n/home/travis/build/apache/arrow/cpp/src/arrow/util/bit-util.h: In member function \u2018void arrow::internal::BitmapWriter::Clear()\u2019:\n/home/travis/build/apache/arrow/cpp/src/arrow/util/bit-util.h:110:32: error: conversion to \u2018uint8_t {aka unsigned char}\u2019 from \u2018int\u2019 may alter its value [-Werror=conversion]\nvoid Clear() { current_byte_ &= ~(1 << bit_offset_); }\n^\ncc1plus: all warnings being treated as errors\n```",
        "created_at": "2017-09-27T01:05:42.000Z",
        "updated_at": "2019-06-03T12:48:10.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2017-09-30T18:31:07.000Z"
    },
    "comments": [
        {
            "created_at": "2017-09-27T02:13:50.965Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1615?focusedCommentId=16181884) by Wes McKinney (wesm):*\nI agree that this should be better documented so that developers know what standard of warning cleanliness is being enforced in Travis CI. We should indicate the set of additional flags that each kind of compiler (gcc, clang, etc.) should pass as part of development. \n\nI am not sure we should require _all_ builds on all platforms to compile with these flags, as it may result in unnecessary failures due to compiler warnings (although if you do not build with `-Werror` then maybe the compiler warnings are OK)."
        },
        {
            "created_at": "2017-09-28T18:38:50.651Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1615?focusedCommentId=16184625) by Rene Sugar (renesugar):*\nAdded BUILD_WARNING_LEVEL and BUILD_WARNING_FLAGS to SetupCxxFlags.cmake\n\n\nBUILD_WARNING_LEVEL Values:\n\n1) Checkin (use before checkin to attempt to determine if Travis CI build will fail)\n\ncmake -DBUILD_WARNING_LEVEL=checkin ..\n\n2) Everything (use with the Clang compiler's -Weverything flag to find potential errors)\n\nUse with BUILD_WARNING_FLAGS to disable warnings to get to the next warning.\n\nhttp://amattn.com/p/better_apps_clang_weverything_or_wall_is_a_lie.html\n\ncmake -DBUILD_WARNING_LEVEL=everything ..\nmake VERBOSE=1 unittest\ncmake -DBUILD_WARNING_LEVEL=everything -DBUILD_WARNING_FLAGS=\"-Wno-padded -Wno-sign-conversion\" ..\nmake VERBOSE=1 unittest\n-DBUILD_WARNING_LEVEL=everything -DBUILD_WARNING_FLAGS=\"-Wno-padded -Wno-sign-conversion -Wno-unused-parameter\" ..\nmake VERBOSE=1 unittest\netc.\n\n3) Development (default; warnings are not treated as errors)\n\ncmake ..\n"
        },
        {
            "created_at": "2017-09-29T20:29:50.890Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1615?focusedCommentId=16186351) by Wes McKinney (wesm):*\nIssue resolved by pull request 1145\n<https://github.com/apache/arrow/pull/1145>"
        }
    ]
}