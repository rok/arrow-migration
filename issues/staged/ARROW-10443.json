{
    "issue": {
        "title": "[Python] Nested dictionaries not able to be converted to table",
        "body": "***Note**: This issue was originally created as [ARROW-10443](https://issues.apache.org/jira/browse/ARROW-10443). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nHi, it seems as you wanted questions and issues here and not in github.\r\n\r\nI was trying to convert a nested dictionary creating my own schema without success, it seems like it should and I get an unintuitive error message. When I execute the code below I get the error message \"pyarrow.lib.ArrowTypeError: Could not convert b with type str: was expecting tuple of (key, value) pair\"\r\n```java\n\r\nimport pyarrow as pa\r\n\r\na = {'a': {'b': [1, 2, 3, 4, 5, 6], 'c': [3, 2, 1], 'd': [1, 2]}}\r\nstruct = pa.struct([pa.field('b', pa.int32()), pa.field('c', pa.int32()), pa.field('d', pa.int32())])\r\n\r\nschema = pa.schema([pa.field('a', struct)])\r\n\r\na_pa = pa.Table.from_pydict(a, schema)\r\n```\r\n\u00a0",
        "created_at": "2020-10-31T02:11:34.000Z",
        "updated_at": "2022-08-27T14:41:57.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-11-02T18:23:07.000Z"
    },
    "comments": [
        {
            "created_at": "2020-11-02T16:33:19.284Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10443?focusedCommentId=17224790) by Joris Van den Bossche (jorisvandenbossche):*\n(General questions are probably better asked on the user or dev mailing list, see https://arrow.apache.org/community/, or on StackOverflow, as you already did https://stackoverflow.com/questions/64618007/nested-dictionaries-in-pyarrow, to keep JIRA issues for actual bug reports / enhancement requests)\r\n\r\nThe problem you are running into here is that the `from_pydict` method is expecting a dictionary of \\{column name: array-like\\}, and here what is inside your dictionary for the \"a\" key is not an array like, but another dictionary. \r\nSo what would work is this:\r\n\r\n```Java\n\r\nIn [24]: a = {'a': [{'b': 1, 'c': 3, 'd': 1}, {'b': 2, 'c': 2, 'd': 2}]}\r\n\r\nIn [25]: a_pa = pa.Table.from_pydict(a, schema)\r\n\r\nIn [26]: a_pa\r\nOut[26]: \r\npyarrow.Table\r\na: struct<b: int32, c: int32, d: int32>\r\n  child 0, b: int32\r\n  child 1, c: int32\r\n  child 2, d: int32\r\n\r\nIn [27]: a_pa.to_pandas()\r\nOut[27]: \r\n                          a\r\n0  {'b': 1, 'c': 3, 'd': 1}\r\n1  {'b': 2, 'c': 2, 'd': 2}\r\n```\r\n\r\nNow, the format you have (a full array for each of the struct's childs) is of course also useful to be able to convert. One option that works right now is to first directly create a StructArray, and then only afterwards put this in a table:\r\n\r\n```Java\n\r\nIn [42]: a = {'a': {'b': [1, 2, 3], 'c': [3, 2, 1], 'd': [1, 2, 3]}}\r\n\r\nIn [43]: struct_arr = pa.StructArray.from_arrays(a['a'].values(), a['a'].keys())\r\n\r\nIn [44]: pa.table({'a': struct_arr})\r\nOut[44]: \r\npyarrow.Table\r\na: struct<b: int64, c: int64, d: int64>\r\n  child 0, b: int64\r\n  child 1, c: int64\r\n  child 2, d: int64\r\n\r\nIn [45]: pa.table({'a': struct_arr}).to_pandas()\r\nOut[45]: \r\n                          a\r\n0  {'b': 1, 'c': 3, 'd': 1}\r\n1  {'b': 2, 'c': 2, 'd': 2}\r\n2  {'b': 3, 'c': 1, 'd': 3}\r\n```\r\n\r\nBut note that this only works if your arrays in the nested dictionary all have the same length, which is not the case for your original example."
        },
        {
            "created_at": "2020-11-02T18:24:01.557Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10443?focusedCommentId=17224871) by Xavante Erickson (Pleb):*\nThanks very much for the quick response and the very useful help. I will direct further questions to the mailing lists."
        },
        {
            "created_at": "2022-08-27T14:41:57.669Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10443?focusedCommentId=17585953) by @toddfarmer:*\nTransitioning issue from Resolved to Closed to based on resolution field value."
        }
    ]
}