{
    "issue": {
        "title": "[C++] Implement compute function \"binary_slice\"",
        "body": "***Note**: This issue was originally created as [ARROW-17301](https://issues.apache.org/jira/browse/ARROW-17301). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIn some situations, may\u00a0 request an access method to get binary or sting likes array one or some continuous bytes , for example start 1 end 3 step 1,\u00a0 the two bytes, it seems like \"`{}binary_replace_slice{`} \" function, provide byte and code two measurement unit\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n# **application case:**\r\n\r\n\u00a0\r\nhere, I can give one example to descirbe why need a function to extract binary in byte unit:\r\n\u00a0\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 In distribute database, data has distribute policy and relatived hash algorithm for different data type, here we just discuss string-like and binary type, the hash algorithm need detach string-like or binary in bytes to calculating, for example , take 1-4 byte cast to integer and shift-left 16 bits, then take 5-6byte cast to integer and the result from last step, and so on, the\u00a0 'utf8_slice_codeunits' function can partly meet the require if all are ascii,\u00a0 but if the string-like contain chinese, one chinese may occupied three bytes,\u00a0 start 1 to end 3, three utf8 character\r\n\u00a0 may take nine bytes, but it not meet the hash algorithm, it only need 3 bytes, so if provide a function but not cast, the same\u00a0function arguments like 'utf8_slice_codeunits', it may called 'binary_slice_byteunit'",
        "created_at": "2022-08-04T07:25:17.000Z",
        "updated_at": "2022-11-15T17:23:07.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-11-15T11:27:28.000Z"
    },
    "comments": [
        {
            "created_at": "2022-08-04T08:22:48.632Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17301?focusedCommentId=17575111) by Antoine Pitrou (apitrou):*\nSo, the need is really for a slicing function on binary and string types."
        },
        {
            "created_at": "2022-08-04T08:24:23.399Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17301?focusedCommentId=17575113) by Antoine Pitrou (apitrou):*\n> In distribute database, data has distribute policy and relatived hash algorithm for different data type, here we just discuss string-like and binary type, the hash algorithm need detach string-like or binary in bytes to calculating, for example , take 1-4 byte cast to integer and shift-left 16 bits, then take 5-6byte cast to integer and the result from last step, and so on, the  'utf8_slice_codeunits' function can partly meet the require if all are ascii,  but if the string-like contain chinese, one chinese may occupied three bytes,  start 1 to end 3, three utf8 character\r\n> \r\n\r\nI'm not sure I understand what you're saying here, but if you need to compute the hash of some values, then it's certainly counter-productive to produce physical slices (copies) of the data. Just iterate on the data and produce the hash values directly.\r\n\r\nAlso cc `[~lidavidm]` who might have a better opinion."
        },
        {
            "created_at": "2022-08-04T13:10:29.975Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17301?focusedCommentId=17575260) by David Li (lidavidm):*\nHmm, we don't have a `binary_slice`. But if we did, the way to do this would be to cast utf8 to binary, then slice - I don't think it makes sense to have a direct utf8->binary slice.\r\n\r\nHowever, I think the 'right' way to do this is to just implement the hash directly as Antoine suggests, instead of repeatedly calling a compute function to extract slices."
        },
        {
            "created_at": "2022-08-04T14:29:31.017Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17301?focusedCommentId=17575292) by Eduardo Ponce (edponce):*\nAsides from the use case of using a `binary_slice` for a hash algorithm, I consider it is a reasonable compute function to add given that some string/binary functions come in multiple variants (ascii, utf8, binary). For example, currently there are related functions `binary_replace_slice` and `utf8_replace_slice` that support both the byte-oriented and encoded forms of data."
        },
        {
            "created_at": "2022-08-07T13:51:00.022Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17301?focusedCommentId=17576387) by ChenTsing (chenbaggio):*\nDear Antonie:\n                       Is there exist round-shift function provided by arrow lib, in the document only could find shift_left and shift right etc, out hash algorithm need the round\n shift, for example 10000000, shift-left one bit, then change into 00000001 and not 00000000, if the function has exits, please tell me, thank you! \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "created_at": "2022-08-07T15:03:56.635Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17301?focusedCommentId=17576401) by Antoine Pitrou (apitrou):*\n`[~chenbaggio]` It would be much more efficient to implement your hash function yourself instead of combining compute functions (which will create intermediate copies).\r\n\r\nAlso, if a compute function is not listed, then it doesn't exist."
        },
        {
            "created_at": "2022-08-07T22:33:02.181Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17301?focusedCommentId=17576452) by ChenTsing (chenbaggio):*\n`[~edponce]` \u00a0 how do you think about round -shift mentioned above"
        },
        {
            "created_at": "2022-08-08T07:06:47.348Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17301?focusedCommentId=17576583) by Antoine Pitrou (apitrou):*\n`[~chenbaggio]` Please, don't use this JIRA for off-topic questions. This is about \"binary_slice\". If you want to suggest another compute function, please open another JIRA.\r\n\r\nAlso, it's frustrating that you ask questions and then don't even read or acknowledge the responses being made.\r\n\r\nIf you continue I will have to delete your messages here."
        },
        {
            "created_at": "2022-08-08T21:01:06.258Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17301?focusedCommentId=17576983) by Eduardo Ponce (edponce):*\nI think a binary_slice function would be used solely with binary data, so no casting necessary (but up to the user). I do not consider worthwhile to take binary input and cast to UTF-8 and then slice, nor vice-versa.\r\n\r\nIf this is OK, then we can leave this ticket open."
        },
        {
            "created_at": "2022-10-29T08:57:04.273Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17301?focusedCommentId=17626023) by Kshiteej K (kshitij12345):*\nIIUC, the new function will be binary equivalent of existing `utf8_slice_codeunits` which takes `start`, `stop` and `step` and returns slices.\r\n\r\nIs my understanding correct?\r\n\r\nRef:\u00a0<https://arrow.apache.org/docs/cpp/compute.html#string-slicing>"
        },
        {
            "created_at": "2022-10-29T09:59:00.022Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17301?focusedCommentId=17626030) by ChenTsing (chenbaggio):*\nIt is right and the step unit is byte\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
        },
        {
            "created_at": "2022-10-29T16:32:33.540Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17301?focusedCommentId=17626082) by Kshiteej K (kshitij12345):*\n`[~chenbaggio]` \u00a0Thanks for confirming!"
        },
        {
            "created_at": "2022-11-15T11:27:28.488Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17301?focusedCommentId=17634317) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 14550\n<https://github.com/apache/arrow/pull/14550>"
        }
    ]
}