{
    "issue": {
        "title": "[R] Table viewer for knitr/notebooks",
        "body": "***Note**: This issue was originally created as [ARROW-17461](https://issues.apache.org/jira/browse/ARROW-17461). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIn RStudio's R Markdown notebook mode, R data.frames get rendered with an interactive table browser where you can paginate through it. I haven't looked into how this works, but it would be nice if we could do something similar with an Arrow Table",
        "created_at": "2022-08-18T18:30:13.000Z",
        "updated_at": "2022-08-19T19:53:33.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-08-19T19:53:33.904Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17461?focusedCommentId=17582009) by Dewey Dunnington (paleolimbot):*\nI'll look into this again because it may have changed...the last time I browsed the RStudio source for this I remember seeing a lot of hardcoded stuff. I was looking before because I wanted to customize how some geometry types were rendered and I remember concluding that `as.character()` was my only option.\r\n\r\nIf you had a shell around an Arrow Array that was a vctrs implementation (I do something like this in geoarrow but using C Data interface arrays), you can stuff them into a data.frame losslessly with zero copy (but the RMarkdown viewer throws errors for this, too, because it tries to serialize the external pointer and gets back a NULL)."
        }
    ]
}