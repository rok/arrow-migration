{
    "issue": {
        "title": "[Python] parquet.read_table causes crashes on Windows Server 2016 w/ Xeon Processor",
        "body": "***Note**: This issue was originally created as [ARROW-9349](https://issues.apache.org/jira/browse/ARROW-9349). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCall to read_all() crashes immediately with a windows fatal error on version 0.16.0, 0.17.0, 0.17.1.\u00a0 Downgrading to 0.15.1 fixes the problem.\r\n\r\nPython scripts work fine on all other PCs, but on Server w/ Windows Server 2016 and Xeon processor, it crashes immediately.\r\n\r\nERROR:\r\n\r\nWindows fatal exception: code 0xc000001d\r\n\r\nCurrent thread 0x00001950 (most recent call first):\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\pyarrow\\parquet.py\", line 253 in read\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\pyarrow\\parquet.py\", line 605 in read\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\pyarrow\\parquet.py\", line 1137 in read\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\pyarrow\\parquet.py\", line 1281 in read_table\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\pycelonis\\objects_ibc.py\", line 888 in upload_file\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\pycelonis\\objects_ibc.py\", line 938 in upload_df_chunk\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\joblib\\parallel.py\", line 253 in <listcomp>\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\joblib\\parallel.py\", line 253 in __call__\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\joblib\\_parallel_backends.py\", line 572 in __init__\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\joblib\\_parallel_backends.py\", line 208 in apply_async\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\joblib\\parallel.py\", line 765 in _dispatch\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\joblib\\parallel.py\", line 847 in dispatch_one_batch\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\joblib\\parallel.py\", line 1029 in __call__\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\pycelonis\\utils\\api_utils.py\", line 32 in threaded\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\pycelonis\\objects_ibc.py\", line 944 in <listcomp>\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\pycelonis\\objects_ibc.py\", line 944 in push_table\r\n\u00a0 File \"pythonscript.py\", line 152 in main\r\n\u00a0 File \"pythonscript.py\", line 171 in <module>\r\nFatal Python error: Illegal instruction\r\n\r\nCurrent thread 0x00001950 (most recent call first):\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\pyarrow\\parquet.py\", line 253 in read\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\pyarrow\\parquet.py\", line 605 in read\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\pyarrow\\parquet.py\", line 1137 in read\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\pyarrow\\parquet.py\", line 1281 in read_table\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\pycelonis\\objects_ibc.py\", line 888 in upload_file\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\pycelonis\\objects_ibc.py\", line 938 in upload_df_chunk\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\joblib\\parallel.py\", line 253 in <listcomp>\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\joblib\\parallel.py\", line 253 in __call__\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\joblib\\_parallel_backends.py\", line 572 in __init__\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\joblib\\_parallel_backends.py\", line 208 in apply_async\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\joblib\\parallel.py\", line 765 in _dispatch\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\joblib\\parallel.py\", line 847 in dispatch_one_batch\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\joblib\\parallel.py\", line 1029 in __call__\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\pycelonis\\utils\\api_utils.py\", line 32 in threaded\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\pycelonis\\objects_ibc.py\", line 944 in <listcomp>\r\n\u00a0 File \"D:\\XXXXXXXXXXXXXXXXXXXXXXXXX\\lib\\site-packages\\pycelonis\\objects_ibc.py\", line 944 in push_table\r\n\u00a0 File \"pythonscript.py\", line 152 in main\r\n\u00a0 File \"pythonscript.py\", line 171 in <module>",
        "created_at": "2020-07-07T16:03:20.000Z",
        "updated_at": "2022-03-08T18:06:54.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2020-07-07T16:46:04.000Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9349?focusedCommentId=17152891) by Wes McKinney (wesm):*\nCan you let us know what the processor ID is? This is almost certainly ARROW-7939"
        },
        {
            "created_at": "2020-07-07T16:53:11.158Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9349?focusedCommentId=17152896) by Wes McKinney (wesm):*\nSorry I missed that it's E5-2699.  This processor has AVX2 so I don't think it's ARROW-7939. If you can find out any information to determine what is the illegal instruction that is crashing the application that would help us figure out what's wrong"
        },
        {
            "created_at": "2020-07-07T17:00:59.526Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9349?focusedCommentId=17152898) by Wes McKinney (wesm):*\nCould you try using a nightly build `pip install --extra-index-url https://pypi.fury.io/arrow-nightlies/ --pre pyarrow`. That would help us rule out the BMI2 issue"
        },
        {
            "created_at": "2020-07-08T18:09:24.011Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9349?focusedCommentId=17153826) by Kristopher Jong (kmj1104213):*\nI installed\u00a0pyarrow-0.18.0.dev551 build and it has the same behavior."
        },
        {
            "created_at": "2020-07-08T18:17:11.447Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9349?focusedCommentId=17153835) by Kristopher Jong (kmj1104213):*\nI can't figure out what the illegal instruction is, it appears to be the point when it switches into the DLL compiled instructions which is why my python script isn't picking up the exception stack.\u00a0 The original behavior was no errors at all, it just causes the python script to fail with no exceptions.\u00a0 Once I turned on the faulthandler, I was able to find it was a windows fatal error that was happening causing the failure."
        },
        {
            "created_at": "2020-07-08T18:31:05.751Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9349?focusedCommentId=17153845) by Wes McKinney (wesm):*\n`[~mparry]` can you offer any guidance to `[~kmj1104213]` about how to determine what illegal instruction is causing the problem like you did in ARROW-9114?"
        },
        {
            "created_at": "2020-07-09T08:20:10.922Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9349?focusedCommentId=17154319) by Morgan Parry (mparry):*\nWe just attached the Visual Studio debugger to the Python process. It trapped the illegal instruction and it was then apparent from the disassembly what the offender was.\r\n\r\nI see from the env reported that this is running under VMWare. Note that this can mask CPU features, depending on the software version, configuration, specs of other machines in the cluster (i.e. it may mask to the lowest common denominator), etc. This is exactly what was happening in our case, which took a while to figure out - i.e. the physical CPU had AVX2 but the virtual one didn't."
        },
        {
            "created_at": "2020-07-21T19:30:35.956Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9349?focusedCommentId=17162304) by Charles Surett (csurett):*\nCan someone make a debug build? I've been attempting to get a build with debug symbols but haven't had any luck."
        },
        {
            "created_at": "2022-03-08T18:06:46.608Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9349?focusedCommentId=17503096) by Joris Van den Bossche (jorisvandenbossche):*\n`[~kmj1104213]` do you know if you still run into this issue with the latest pyarrow release?"
        }
    ]
}