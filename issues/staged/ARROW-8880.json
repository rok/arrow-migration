{
    "issue": {
        "title": "[R][Linux] Make R Binary Install Friendlier",
        "body": "***Note**: This issue was originally created as [ARROW-8880](https://issues.apache.org/jira/browse/ARROW-8880). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen R install tries to run a binary install, it looks for an exact match on the binary version, say \"0.17.1.zip\" from\u00a0<https://dl.bintray.com/ursalabs/arrow-r/libarrow/bin/ubuntu-18.04/>.\r\n\r\nThe problem is that even though \"0.17.1\" is pushed to CRAN as an official release, there is a time period (like right now) where bintray does not have an official binary build, just a date stamped build:\r\n\r\n\u00a0\r\n\r\narrow-0.17.0.20200516.zip\r\n arrow-0.17.0.20200517.zip\r\n arrow-0.17.0.20200518.zip\r\n arrow-0.17.0.zip\r\n arrow-0.17.1.20200517.zip\r\n arrow-0.17.1.20200519.zip\r\n arrow-0.17.1.20200520.zip\r\n\r\n\u00a0\r\n\r\nI'd like to suggest adding a new environment variable trigger that would allow for the scanning of bintray for a recent timestamped version, if the specific release number is not present.\r\n\r\nI'd like to suggest enhancing the linux code:\r\n\r\n<https://github.com/apache/arrow/blob/02f7be33d1c32d1636323e6fb90c63cb01bf44af/r/tools/linuxlibs.R#L39-L47>\r\n\r\nwith scanning functionality:\r\n\r\n<font color=\"#c1c7d0\">try_download <- function(from_url, to_file, scan_dates = FALSE) {</font>\r\n <font color=\"#c1c7d0\">\u00a0 \u00a0 try(</font>\r\n <font color=\"#c1c7d0\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 suppressWarnings(</font>\r\n <font color=\"#c1c7d0\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 download.file(from_url, to_file, quiet = quietly)</font>\r\n <font color=\"#c1c7d0\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ),</font>\r\n <font color=\"#c1c7d0\">\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 silent = quietly</font>\r\n <font color=\"#c1c7d0\">\u00a0 \u00a0 \u00a0 )</font>\r\n <font color=\"#0747a6\">{color:#c1c7d0}\u00a0 \u00a0 \u00a0 if (!file.exists(to_file)) {</font>{color}\r\n<font color=\"#0747a6\"> {color:#c1c7d0}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0</font><font color=\"#c1c7d0\"> if (scan_dates) {</font>{color}\r\n<font color=\"#0747a6\"> {color:#0747a6}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 scan_dates <- format(Sys.Date()-(0:10),\"%Y%m%d\")</font>{color}\r\n<font color=\"#0747a6\"> {color:#0747a6} \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 for (scan_date in scan_dates) {</font>{color}\r\n<font color=\"#0747a6\"> {color:#0747a6} \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0base_url <- tools::file_path_sans_ext(from_url)</font>{color}\r\n<font color=\"#0747a6\"> {color:#0747a6} \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0ext <- tools::file_ext(from_url)</font>{color}\r\n<font color=\"#0747a6\"> {color:#0747a6} \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0scan_url <- sprintf(\"%s.%s.%s\", base_url, scan_date, ext)</font>{color}\r\n<font color=\"#0747a6\"> {color:#0747a6} \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0if (try_download(from_url = scan_url, to_file, scan_dates = FALSE)) {</font>{color}\r\n<font color=\"#0747a6\"> {color:#0747a6} \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0return(TRUE)</font>{color}\r\n<font color=\"#0747a6\"> {color:#0747a6} \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}</font>{color}\r\n<font color=\"#0747a6\"> {color:#0747a6} \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}</font>{color}\r\n<font color=\"#0747a6\"> {color:#0747a6}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}</font>{color}\r\n<font color=\"#0747a6\"> {color:#0747a6}\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0return(FALSE)</font>{color}\r\n\r\n<font color=\"#0747a6\">{color:#c1c7d0}\u00a0 \u00a0} else {</font>{color}\r\n<font color=\"#0747a6\"> {color:#c1c7d0}\u00a0 \u00a0 \u00a0 \u00a0 return(TRUE)</font>{color}\r\n<font color=\"#0747a6\"> {color:#c1c7d0}\u00a0 \u00a0}</font>{color}\r\n}\r\n\r\nAnd then augment the calling function:\r\n\r\n<https://github.com/apache/arrow/blob/02f7be33d1c32d1636323e6fb90c63cb01bf44af/r/tools/linuxlibs.R#L55>\r\n\r\n\u00a0\r\n\r\nwith:\r\n\r\nbinary_scan_ok <- !identical(tolower(Sys.getenv(\"LIBARROW_BINARY_SCAN\", \"false\")), \"false\")\r\n <font color=\"#c1c7d0\">if (try_download(binary_url, libfile, </font>scan_dates = binary_scan_ok<font color=\"#c1c7d0\">)) {</font>\r\n\r\n\u00a0\r\n\r\nThis would allow automated builds to set the scan option, and then find and install the most recent daily build in lieu of an official binary build being in place.\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0",
        "created_at": "2020-05-21T16:43:14.000Z",
        "updated_at": "2020-05-21T23:16:21.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-05-21T23:16:21.000Z"
    },
    "comments": [
        {
            "created_at": "2020-05-21T21:41:35.006Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8880?focusedCommentId=17113564) by Neal Richardson (npr):*\nIt's an interesting idea, though it wouldn't have actually worked in the case of 0.17.1 because the patch release was not built off of master, so arrow-0.17.0.20200518.zip C++ actually would have failed with 0.17.1 R due to ABI incompatibility. \r\n\r\nThe real problem here is that the 0.17.1 binaries weren't published correctly, it turns out. So I'll fix that. Thanks for the alert.\r\n\r\nIf you want to try out how your proposal would work, you're welcome to make a PR and we can discuss there. I could see it being interesting for the nightly builds, as they can occasionally fail to build for spurious reasons. I wouldn't want to do it for official releases though--those should match exactly, and should exist."
        },
        {
            "created_at": "2020-05-21T22:00:10.828Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8880?focusedCommentId=17113573) by Neal Richardson (npr):*\nC++ binaries for 0.17.1 now exist in the right place. Thanks again for the heads up about that."
        },
        {
            "created_at": "2020-05-21T23:14:17.936Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8880?focusedCommentId=17113614) by Brian Schultheiss (bschulth):*\nThanks, verified that the 0.17.1.zip is now found during install of CRAN package.\r\n\r\n\u00a0\r\n\r\nAlso, thanks for the clarification on the timestamped files as being nightly's and **not**\u00a0source compatible with the CRAN release. With this insight, I am happy for you to close this request as my thought process was wrong on the compatibility with CRAN releases."
        }
    ]
}