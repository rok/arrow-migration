{
    "issue": {
        "title": "[R] Objects Written to Feather Not Restored Exactly",
        "body": "***Note**: This issue was originally created as [ARROW-13661](https://issues.apache.org/jira/browse/ARROW-13661). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nRather simple - write the standard 'iris' dataset to feather, then read it back.\r\n\r\nAt first glance everything looks the same, but setting 'attrib.as.set = FALSE' to identical() will return FALSE.\r\n\r\nUsing Waldo to compare, you can see that the order of attributes is different on the restored object. \"class\" should be the second attribute after \"names\" but before \"row.names\".\r\n\r\nThis should be a simple fix to the 'read_feather' function to set the correct order of attributes.\r\n\r\n\u2014\r\n\r\niris <- iris\r\n arrow::write_feather(iris, file <- tempfile())\r\n iris2 <- arrow::read_feather(file)\r\n unlink(file)\r\n identical(iris, iris2)\r\n #> [1] TRUE\r\n identical(iris, iris2, attrib.as.set = FALSE)\r\n #> [1] FALSE\r\n waldo::compare(attributes(iris), attributes(iris2))\r\n #> `names(old)`: \"names\" \"class\" \"row.names\" \r\n #> `names(new)`: \"names\" \"row.names\" \"class\"",
        "created_at": "2021-08-18T14:28:44.000Z",
        "updated_at": "2021-08-18T15:13:27.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-08-18T15:02:03.711Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13661?focusedCommentId=17401124) by Ian Cook (icook):*\nThanks for the report!\r\n\r\nDoes this difference in the order of the attributes have any practical significance?"
        },
        {
            "created_at": "2021-08-18T15:13:27.429Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13661?focusedCommentId=17401138) by Charlie Gao (shikokuchuo):*\nStrictly speaking, the order of attributes does not matter as documented in R. But how else do you ensure you get the same thing out as you put in?\n\nThe practical significance is that currently I am hashing the object before I write, storing the hash and then hashing the restored object to verify integrity. Currently I am having to deal with the attribute order in the code on my side, but I am thinking there is no good reason for the attributes to be out of order in the first place. Thanks."
        }
    ]
}