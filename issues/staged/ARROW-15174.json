{
    "issue": {
        "title": "[Java] Consolidate JNI compilation",
        "body": "***Note**: This issue was originally created as [ARROW-15174](https://issues.apache.org/jira/browse/ARROW-15174). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n**Umbrella ticket for consolidating Java JNI compilation initiative**\r\n\r\nSeems we have spread the JNI code across the `cpp` and `java` directories. As for other bindings (Python) we already discussed it would be great to consolidate and move all cpp code related to PYthon into PyArrow, we should do something equivalent for Java too and move all C++ code specific to Java into the Java project.\r\n\r\nAt the moment there are two JNI related directories:\r\n \\* <https://github.com/apache/arrow/tree/master/java/c>\r\n \\* <https://github.com/apache/arrow/tree/master/cpp/src/jni>\r\n\r\nLet's also research what's the best method to build those. The `java/c` directory seems to be already integrated with the Java build process, let's check if that approach is something we can reuse for the `dataset` directory too",
        "created_at": "2021-12-21T17:09:06.000Z",
        "updated_at": "2022-07-06T07:40:07.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-07-05T15:29:50.000Z"
    },
    "comments": [
        {
            "created_at": "2022-02-22T15:17:00.337Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15174?focusedCommentId=17496165) by Antoine Pitrou (apitrou):*\nThere's also some JNI code in https://github.com/apache/arrow/tree/master/cpp/src/plasma/lib/java , but we can probably ignore this one as Plasma is deprecated (and we'd eventually like to drop it from the repo?)."
        },
        {
            "created_at": "2022-02-22T15:17:52.565Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15174?focusedCommentId=17496167) by Antoine Pitrou (apitrou):*\nBut there's also https://github.com/apache/arrow/tree/master/cpp/src/gandiva/jni which is obviously not deprecated."
        },
        {
            "created_at": "2022-02-22T15:20:58.258Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15174?focusedCommentId=17496169) by Antoine Pitrou (apitrou):*\nThe relevant CMake config options on the C++ side seem to be `ARROW_JNI` (for `cpp/src/jni`) and `ARROW_GANDIVA_JAVA` (for `cpp/src/gandiva`)."
        },
        {
            "created_at": "2022-02-22T16:29:08.268Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15174?focusedCommentId=17496199) by Antoine Pitrou (apitrou):*\nI took a look at the dataset and ORC JNI bridges. I don't think it makes sense to consolidate them without also moving them to the C data interface, as that would remove much of the custom code."
        },
        {
            "created_at": "2022-04-26T07:49:41.571Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15174?focusedCommentId=17527978) by Antoine Pitrou (apitrou):*\nNote that moving the dataset JNI bridge to use the C data interface is being handled in ARROW-7272."
        },
        {
            "created_at": "2022-05-16T16:28:53.706Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15174?focusedCommentId=17537634) by Larry White (ljw1001):*\nNote that the is a new JNI interface (to datafusion) that does not use the c-data-interface. \u00a0(and, incidentally, also takes a different approach to \u00a0packaging the native binaries in Maven than the other JNI interfaces).\r\n\r\nSee: <https://lists.apache.org/thread/6h1mry3n3fb2omf3o24dzbf0n9rhs51h>\u00a0for the archive thread.\r\n\r\nAnnouncement email below:\u00a0\r\n\r\nHi dev@arrow,\r\n\r\nRecently I've created and published a Java binding[1] to datafusion[2],\r\nas part of datafusion-contrib projects[3]. I've updated the README.md[4]\r\nso people can pick it up via maven[5] or gradle.\r\n\r\nAny feedback or contributions are welcome!\r\n\r\n[1]: <https://github.com/datafusion-contrib/datafusion-java>\r\n[2]: <https://github.com/apache/arrow-datafusion>\r\n[3]: <https://github.com/datafusion-contrib>\r\n[4]: <https://github.com/datafusion-contrib/datafusion->\r\njava/blob/main/README.md\r\n[5]: <https://repo.maven.apache.org/maven2/io/github/datafusion->\r\ncontrib/datafusion-java/"
        }
    ]
}