{
    "issue": {
        "title": "C++: memcmp can be avoided in Equal when comparing with the same Buffer",
        "body": "***Note**: This issue was originally created as [ARROW-85](https://issues.apache.org/jira/browse/ARROW-85). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIt looks too expensive to use memcmp to compare two buffers. Instead, the starting address and length/capacity would be good enough to use. Higher level codes relying on memcmp behaviour can be done in higher level.\n\nUpdate: memcmp should be avoided in Equal when comparing with the same Buffer. In other cases, it's still needed to know the content are the same or not.",
        "created_at": "2016-03-28T11:09:54.000Z",
        "updated_at": "2019-06-03T13:21:38.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2016-04-11T08:36:10.000Z"
    },
    "comments": [
        {
            "created_at": "2016-03-28T15:49:42.670Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-85?focusedCommentId=15214360) by Wes McKinney (wesm):*\nThe `Equals` method compares the buffers' **contents**, so you need to compare the memory somehow. "
        },
        {
            "created_at": "2016-03-29T00:21:41.252Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-85?focusedCommentId=15215142) by Kai Zheng (drankye):*\nYes I understood. I thought at least we need to be careful about calling the method directly or indirectly given a large dataset to comare against another. Would leave this for further investigation and consideration, right now we don't have much benchmark tests to verify this."
        },
        {
            "created_at": "2016-03-29T04:11:22.659Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-85?focusedCommentId=15215384) by Wes McKinney (wesm):*\nIf separate Buffer objects reference the same virtual address segment we should not call memcmp, I agree. Can you clarify the JIRA scope to optimize for this special case? If two Buffers reference different memory, we must use memcmp (or equivalent). "
        },
        {
            "created_at": "2016-03-29T10:42:23.998Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-85?focusedCommentId=15215824) by Kai Zheng (drankye):*\n> Can you clarify the JIRA scope to optimize for this special case?\nSounds good for now. Done. I'll do it as my first taking after forgetting the language so many years. :)"
        },
        {
            "created_at": "2016-04-04T00:47:12.061Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-85?focusedCommentId=15223572) by Kai Zheng (drankye):*\nhttps://github.com/apache/arrow/pull/57"
        },
        {
            "created_at": "2016-04-11T08:36:10.196Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-85?focusedCommentId=15234696) by Wes McKinney (wesm):*\nIssue resolved by pull request 57\n<https://github.com/apache/arrow/pull/57>"
        },
        {
            "created_at": "2016-04-11T08:36:56.707Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-85?focusedCommentId=15234697) by Wes McKinney (wesm):*\nCan you self-assign this JIRA? Thank you"
        },
        {
            "created_at": "2016-04-11T08:41:56.989Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-85?focusedCommentId=15234737) by Kai Zheng (drankye):*\nThanks `[~wesmckinn]` and [~emkornfield@gmail.com] for the patient review. It's a good starting for me."
        }
    ]
}