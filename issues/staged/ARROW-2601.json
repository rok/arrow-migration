{
    "issue": {
        "title": "[Python] MemoryPool bytes_allocated causes seg",
        "body": "***Note**: This issue was originally created as [ARROW-2601](https://issues.apache.org/jira/browse/ARROW-2601). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nPython 3.6.5 |Anaconda, Inc.| (default, Mar 29 2018, 18:21:58) \r\n[GCC 7.2.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n\r\n\r\n>>> import pyarrow as pa\r\n\r\n>>> mp = pa.MemoryPool()\r\n>>> arr = pa.array([1,2,3], memory_pool=mp)\r\n>>> mp.bytes_allocated()\r\n\r\nSegmentation fault (core dumped)\r\n\r\nI'll dig into this further, but should bytes_alloacted be returning anything when called like this? Or should it raise NotImplemented?",
        "created_at": "2018-05-17T12:25:02.000Z",
        "updated_at": "2018-07-09T01:51:15.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2018-07-08T14:13:08.000Z"
    },
    "comments": [
        {
            "created_at": "2018-05-17T13:55:32.583Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2601?focusedCommentId=16479090) by Antoine Pitrou (apitrou):*\nUh... Calling the `MemoryPool` constructor creates an invalid MemoryPool object. It's surprising that `pa.array` accepts it silently and doesn't crash.\r\n\r\nI suppose `MemoryPool.bytes_allocated()` should check for the pointer being null and raise ValueError in that case. This is already done in other places (see e.g. `Tensor._validate()`)."
        },
        {
            "created_at": "2018-07-08T14:13:08.658Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2601?focusedCommentId=16536126) by Wes McKinney (wesm):*\nIssue resolved by pull request 2228\n<https://github.com/apache/arrow/pull/2228>"
        }
    ]
}