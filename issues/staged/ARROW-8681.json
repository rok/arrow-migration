{
    "issue": {
        "title": "[Rust][DataFusion] Improve like/nlike performance",
        "body": "***Note**: This issue was originally created as [ARROW-8681](https://issues.apache.org/jira/browse/ARROW-8681). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently, the implementation of\u00a0 `like_utf8` and `nlike_utf8` is based on regex, which is simple and readable, but poor at the performance.\r\n\r\n\u00a0\r\n\r\nI do some benchmark in <https://github.com/TennyZhuang/like-bench/> , in this repo, I compare three like algorithm.\r\n1. `like`(includes partial_like): this is the first naive version, using the recursive approach, which will cause terrible performance on special attack input, such as `a%a%a%a%a%a%a%a%b`.\n1. `like_to_regex`: which is almost the same as the current implementation in arrow.\n1. `like_optimize`: the like problem is similar to glob in shell, so a perfect solution is proposed in <https://research.swtch.com/glob> . The code in the research is written golang but I translate it to rust.\n   \n   \u00a0\n   \n   In my benchmark result, the recursive solution can be ignored due to bad time complexity lower bound.\n   \n   the regex solution will cost about 1000x time including regex compiling, and about 4x time without regex compiling then solution 3. And It seems that the code complexity of solution 3 is acceptable.\n   \n   Everyone can reproduce the benchmark result using this repo with a few codes.\n   \n   \u00a0\n   \n   I have submitted a PR to TiKV to optimize the like performance ([https://github.com/tikv/tikv/pull/5866/files](https://github.com/tikv/tikv/pull/5866/files)), without UTF-8 support), and add collation support in <https://github.com/tikv/tikv/pull/6592>, which can be simply port to data-fusion.\n   \n   \u00a0\n   \n   \u00a0\n   \n   \u00a0\n   \n   \u00a0",
        "created_at": "2020-05-03T21:03:21.000Z",
        "updated_at": "2021-04-26T13:17:54.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Component: Rust - DataFusion",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-04-26T13:17:54.000Z"
    },
    "comments": [
        {
            "created_at": "2021-04-26T12:30:42.598Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8681?focusedCommentId=17332092) by Andrew Lamb (alamb):*\nMigrated to github: https://github.com/apache/arrow-rs/issues/71"
        },
        {
            "created_at": "2021-04-26T13:17:53.269Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8681?focusedCommentId=17332282) by Andrew Lamb (alamb):*\nMigrated to github: https://github.com/apache/arrow-datafusion/issues/88"
        }
    ]
}