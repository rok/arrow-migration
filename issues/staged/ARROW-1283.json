{
    "issue": {
        "title": "[Java] VectorSchemaRoot should be able to be closed() more than once",
        "body": "***Note**: This issue was originally created as [ARROW-1283](https://issues.apache.org/jira/browse/ARROW-1283). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen working with a VectorSchemaRoot, once it is no longer needed it resources are freed by calling `close()` followed by then closing the allocator.  Sometimes it is needed to close a second time due to complex operations.  If the VectorSchemaRoot is closed again after the allocator, it raises an assertion error during `clear()` because it is trying to allocate an empty buffer, which ends up being destroyed immediately anyway.  The `close()` operation should mean that the object is no longer to be used, so once closed it should not try to reallocate it.",
        "created_at": "2017-07-27T01:20:24.000Z",
        "updated_at": "2017-08-07T20:14:49.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2017-08-07T19:04:37.000Z"
    },
    "comments": [
        {
            "created_at": "2017-08-07T19:04:37.276Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1283?focusedCommentId=16117073) by Wes McKinney (wesm):*\nIssue resolved by pull request 898\n<https://github.com/apache/arrow/pull/898>"
        }
    ]
}