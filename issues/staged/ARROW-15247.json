{
    "issue": {
        "title": "[Python] Convert array of Pandas dataframe to struct column",
        "body": "***Note**: This issue was originally created as [ARROW-15247](https://issues.apache.org/jira/browse/ARROW-15247). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently, converting a Pandas dataframe with a column of dataframes to Arrow fails with \"Could not convert <data> with type DataFrame: did not recognize Python value type when inferring an Arrow data type\". We should be able to convert this to a List<Struct> array, similar to how [the R binding do it](https://arrow.apache.org/docs/r/articles/arrow.html#r-to-arrow). This could even be bi-directional, where structs could be parsed back into a column of dataframe in `to_pandas()`\r\n\r\nHere is an example that currently fails:\r\n\r\n```python\n\r\nimport pandas as pd\r\nimport pyarrow as pa\r\n\r\ndf1 = pd.DataFrame({\r\n    'x': [1, 2, 3],\r\n    'y': ['a', 'b', 'c']\r\n})\r\n\r\ndf = pd.DataFrame({\r\n    'df': [df1]*10\r\n})\r\n\r\npa.Table.from_pandas(df)\r\n```\r\n\r\nHere's what the other directly might look like for the same data:\r\n\r\n```python\n\r\nsub_tab = [{'x': 1, 'y': 'a'},\r\n           {'x': 2, 'y': 'b'},\r\n           {'x': 3, 'y': 'c'}]\r\n\r\ntab = pa.table({\r\n    'df': pa.array([sub_tab]*10)\r\n})\r\n\r\nprint(tab.schema)\r\n# df: list<item: struct<x: int64, y: string>>\r\n#    child 0, item: struct<x: int64, y: string>\r\n#       child 0, x: int64\r\n#       child 1, y: string\r\n\r\ntab.to_pandas()\r\n```",
        "created_at": "2022-01-04T19:21:45.000Z",
        "updated_at": "2022-01-04T19:21:45.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": []
}