{
    "issue": {
        "title": "[Rust][DataFusion] Implement predicate push-down for parquet tables",
        "body": "***Note**: This issue was originally created as [ARROW-11074](https://issues.apache.org/jira/browse/ARROW-11074). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhile profiling a DataFusion query I found that the code spends a lot of time in reading data from parquet files. Predicate / filter push-down is a commonly used performance optimization, where statistics data stored in parquet files (such as min / max values for columns in a parquet row group) is evaluated against query filters to determine which row groups could contain data requested by a query. In this way, by pushing down query filters all the way to the parquet data source, entire row groups or even parquet files can be skipped often resulting in significant performance improvements.\r\n\r\n\u00a0\r\n\r\nI have been working on an implementation for a few weeks and initial results look promising - with predicate push-down, DataFusion is now faster than Apache Spark (140ms for DataFusion vs 200ms for Spark) for the same query against the same parquet files. And I suspect with the latest improvements to the filter kernel, DataFusion performance will be even better.\r\n\r\n\u00a0\r\n\r\nMy work is based on the following key ideas:\r\n \\* it's best to reuse the existing code for evaluating physical expressions already implemented in DataFusion\r\n \\* filter expressions pushed down to a parquet table are rewritten to use parquet statistics, for example `(column\u00a0/\u00a02)\u00a0=\u00a04`\u00a0 becomes\u00a0 `(column_min\u00a0/\u00a02)\u00a0<=\u00a04\u00a0&&\u00a04\u00a0<=\u00a0(column_max\u00a0/\u00a02)` - this is done once for all files in a parquet table\r\n \\* for each parquet file, a RecordBatch containing all required statistics columns is produced, and the predicate expression from the previous step is evaluated, producing a binary array which is finally used to filter the row groups in each parquet file\r\n\r\nNext steps are: integrate this work with latest changes from master branch, publish WIP PR, implement more unit tests\r\n\r\n`[~andygrove]` \u00a0, `[~alamb]` \u00a0let me know what you think",
        "created_at": "2020-12-30T12:14:07.000Z",
        "updated_at": "2021-01-19T16:17:22.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust - DataFusion",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-01-19T15:51:16.000Z"
    },
    "comments": [
        {
            "created_at": "2021-01-19T15:51:16.869Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11074?focusedCommentId=17267985) by Andrew Lamb (alamb):*\nIssue resolved by pull request 9064\n<https://github.com/apache/arrow/pull/9064>"
        }
    ]
}