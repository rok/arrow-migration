{
    "issue": {
        "title": "[Python] wrong conversion of DataFrame with boolean values",
        "body": "***Note**: This issue was originally created as [ARROW-6325](https://issues.apache.org/jira/browse/ARROW-6325). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nFrom https://github.com/pandas-dev/pandas/issues/28090\r\n\r\n```Java\n\r\nIn [19]: df = pd.DataFrame(np.ones((3, 2), dtype=bool), columns=['a', 'b']) \r\n\r\nIn [20]: df  \r\nOut[20]: \r\n      a     b\r\n0  True  True\r\n1  True  True\r\n2  True  True\r\n\r\nIn [21]: table = pa.table(df) \r\n\r\nIn [23]: table.column(0)\r\nOut[23]: \r\n<pyarrow.lib.ChunkedArray object at 0x7fd08a96e090>\r\n[\r\n  [\r\n    true,\r\n    false,\r\n    false,\r\n  ]\r\n]\r\n```\r\n\r\nThe resulting table has False values while the original DataFrame had only true values. \r\nIt seems this has to do with the fact that it are multiple columns, as with a single column it converts correctly.",
        "created_at": "2019-08-22T18:11:15.000Z",
        "updated_at": "2019-11-12T09:36:43.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-08-23T23:26:17.000Z"
    },
    "comments": [
        {
            "created_at": "2019-08-22T18:14:20.526Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6325?focusedCommentId=16913572) by Joris Van den Bossche (jorisvandenbossche):*\nSo when converting an array of the column gives also wrong values, but when taking a copy of the values, not:\r\n\r\n```Java\n\r\nIn [39]: pa.array(np.asarray(df['a']))                                                                                                                                                                             \r\nOut[39]: \r\n<pyarrow.lib.BooleanArray object at 0x7fd08a8a2c50>\r\n[\r\n  true,\r\n  false,\r\n  false\r\n]\r\n\r\nIn [40]: pa.array(np.array(df['a']))                                                                                                                                                                               \r\nOut[40]: \r\n<pyarrow.lib.BooleanArray object at 0x7fd08a88c990>\r\n[\r\n  true,\r\n  true,\r\n  true\r\n]\r\n```\r\n\r\nSo it probably has to do with in the first case the values being a view on a 2D array ?\r\n\r\n"
        },
        {
            "created_at": "2019-08-22T18:19:50.597Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6325?focusedCommentId=16913575) by Joris Van den Bossche (jorisvandenbossche):*\nA numpy only reproducer. Starting from a 2D array, slicing a row is fine, but slicing a column gives the problems:\r\n\r\n```Java\n\r\nIn [64]: a = np.ones((3, 2), dtype=bool)                                                                                                                                                                           \r\n\r\nIn [65]: pa.array(a[0, :])                                                                                                                                                                                         \r\nOut[65]: \r\n<pyarrow.lib.BooleanArray object at 0x7fd093368d00>\r\n[\r\n  true,\r\n  true\r\n]\r\n\r\nIn [66]: pa.array(a[:, 0])                                                                                                                                                                                         \r\nOut[66]: \r\n<pyarrow.lib.BooleanArray object at 0x7fd093368bf8>\r\n[\r\n  true,\r\n  false,\r\n  false\r\n]\r\n```"
        },
        {
            "created_at": "2019-08-23T23:26:17.185Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6325?focusedCommentId=16914707) by Wes McKinney (wesm):*\nIssue resolved by pull request 5176\n<https://github.com/apache/arrow/pull/5176>"
        }
    ]
}