{
    "issue": {
        "title": "Failure loading arrow_dataset_jni library on Mac M1",
        "body": "***Note**: This issue was originally created as [ARROW-17267](https://issues.apache.org/jira/browse/ARROW-17267). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nOn a Mac M1, using Java 11 and Maven, I was initially trying to load a Parquet file using FileSystemDatasetFactory. However, when calling NativeMemoryPool.getDefault(), it throws an UnsatisfiedLinkError:\r\n\r\n```java\n\r\njava.lang.UnsatisfiedLinkError: Can't load library: /var/folders/c9/h03f8v4s037gvwlfgs98b_y00000gp/T/jnilib-18262759266549290103.tmp\r\n\u00a0 \u00a0 at java.lang.ClassLoader.loadLibrary (ClassLoader.java:2633)\r\n\u00a0 \u00a0 at java.lang.Runtime.load0 (Runtime.java:768)\r\n\u00a0 \u00a0 at java.lang.System.load (System.java:1837)\r\n\u00a0 \u00a0 at org.apache.arrow.dataset.jni.JniLoader.load (JniLoader.java:88)\r\n\u00a0 \u00a0 at org.apache.arrow.dataset.jni.JniLoader.loadRemaining (JniLoader.java:73)\r\n\u00a0 \u00a0 at org.apache.arrow.dataset.jni.JniLoader.ensureLoaded (JniLoader.java:60)\r\n\u00a0 \u00a0 at org.apache.arrow.dataset.jni.NativeMemoryPool.<clinit> (NativeMemoryPool.java:27)\r\n\u00a0 \u00a0 at com.example.App.main (App.java:8)\r\n\u00a0 \u00a0 at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\r\n\u00a0 \u00a0 at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\r\n\u00a0 \u00a0 at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\r\n\u00a0 \u00a0 at java.lang.reflect.Method.invoke (Method.java:566)\r\n\u00a0 \u00a0 at org.codehaus.mojo.exec.ExecJavaMojo$1.run (ExecJavaMojo.java:282)\r\n\u00a0 \u00a0 at java.lang.Thread.run (Thread.java:829)\n```\r\n\r\nI've created a minimum reproducible example [here](https://gist.github.com/adzcai/7cb1b9316d8529cf2c0ffe19f0901adc), where the only line of code is ```\nNativeMemoryPool.getDefault()\n```. At the call to ```\norg.apache.arrow.dataset.jni.JniLoader.load\n``` in the stack trace above, \"arrow_dataset_jni\" is passed as the name, and \"libarrow_dataset_jni.dylib\" is the library name, which it successfully locates.\r\n\r\nHowever, this works fine in Java 8. Running the same code in an EC2 container on Java 11 also works fine, so I'm fairly certain this is an M1 issue.\r\n\r\n\r\n\u00a0",
        "created_at": "2022-07-30T15:52:50.000Z",
        "updated_at": "2022-10-13T17:10:58.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-10-13T17:10:58.000Z"
    },
    "comments": [
        {
            "created_at": "2022-07-30T17:37:36.866Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17267?focusedCommentId=17573285) by David Li (lidavidm):*\nHmm, `[~dsusanibara]` do you know if we build the JNI libraries for M1 or only x64?"
        },
        {
            "created_at": "2022-08-01T01:47:18.529Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17267?focusedCommentId=17573512) by Kouhei Sutou (kou):*\nARROW-16608 is for Gandiva for M1 Mac but it will also create an `arrow_dataset_jni` binary  for M1 Mac too."
        },
        {
            "created_at": "2022-10-13T16:57:35.321Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17267?focusedCommentId=17617193) by Rok Mihevc (rokm):*\nI observed the same problem on my M1 machine. However I was able to build the example by building JNI modules locally and using them using Azul JDK as described here <https://arrow.apache.org/docs/dev/developers/java/building.html.> This probably means we don't distribute M1 compatible artifacts from Maven and I'll open another Jira for that."
        },
        {
            "created_at": "2022-10-13T17:10:58.489Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17267?focusedCommentId=17617201) by Rok Mihevc (rokm):*\nClosing in favour of ARROW-18042"
        }
    ]
}