{
    "issue": {
        "title": "[R] Environment variables controlling package build makes locking down package version difficult/impossible",
        "body": "***Note**: This issue was originally created as [ARROW-14719](https://issues.apache.org/jira/browse/ARROW-14719). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThis is a companion issue to this one I raised for \\{renv}: <https://github.com/rstudio/renv/issues/860>\r\n\r\n\u00a0\r\n\r\nThe use of env vars to control package features at build time as described at [https://arrow.apache.org/docs/r/articles/install.html](https://arrow.apache.org/docs/r/articles/install.html)) is not compatible with R's premier package dependency control system: \\{renv}.\u00a0\r\n\r\n\u00a0\r\n\r\n{renv} caches package builds, which creates a failure mode where the cached build of \\{arrow} on one system does not have the same features as that on another. The two systems can restore from the same `renv.lock` file and get package libraries that contain the same versions of \\{arrow} with different capabilities, potentially causing the project to unexpectedly fail an automated deployment.\r\n\r\nThis actually happened to my team.\r\n\r\nIt could be helpful to have\u00a0 LIBARROW_MINIMAL set to false by default, reducing the chance of this happening. But ultimately any use of env vars driving capabilities in build creates a risk of version capability mismatches that {renv} cannot mitigate at present.\r\n\r\nThere are possibly some clever solutions that could be deployed on both sides. This issue is just trying to start a conversation.\r\n\r\n",
        "created_at": "2021-11-16T06:29:52.000Z",
        "updated_at": "2021-11-16T06:34:46.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": []
}