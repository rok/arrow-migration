{
    "issue": {
        "title": "[C++] Purely static linking broken",
        "body": "***Note**: This issue was originally created as [ARROW-4958](https://issues.apache.org/jira/browse/ARROW-4958). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nOn the current master,\u00a0816c10d030842a1a0da4d00f95a5e3749c86a74f (#3965), running\r\n\r\n\u00a0\r\n```java\n\r\ndocker-compose build cpp\r\ndocker-compose run cpp-static-only\n```\r\nyields\r\n```java\n\r\n[357/382] Linking CXX executable debug/parquet-encoding-benchmark\r\n\r\nFAILED: debug/parquet-encoding-benchmark\r\n\r\n: && /opt/conda/bin/ccache /usr/bin/g++\u00a0 -Wno-noexcept-type\u00a0 -fdiagnostics-color=always -ggdb -O0\u00a0 -Wall -Wno-conversion -Wno-sign-conversion -Werror -msse4.2\u00a0 -g\u00a0 -rdynamic src/parquet/CMakeFiles/parquet-encoding-benchmark.dir/encoding-benchmark.cc.o\u00a0 -o debug/parquet-encoding-benchmark\u00a0 -Wl,-rpath,/opt/conda/lib /opt/conda/lib/libbenchmark_main.a debug/libparquet.a /opt/conda/lib/libbenchmark.a debug/libarrow.a /opt/conda/lib/libdouble-conversion.a /opt/conda/lib/libbrotlienc.so /opt/conda/lib/libbrotlidec.so /opt/conda/lib/libbrotlicommon.so /opt/conda/lib/libbz2.so /opt/conda/lib/liblz4.so /opt/conda/lib/libsnappy.so.1.1.7 /opt/conda/lib/libz.so /opt/conda/lib/libzstd.so orc_ep-install/lib/liborc.a /opt/conda/lib/libprotobuf.so /opt/conda/lib/libglog.so /opt/conda/lib/libboost_system.so /opt/conda/lib/libboost_filesystem.so jemalloc_ep-prefix/src/jemalloc_ep/dist//lib/libjemalloc_pic.a -pthread -lrt /opt/conda/lib/libboost_regex.so /opt/conda/lib/libthrift.so && :\r\n\r\nsrc/parquet/CMakeFiles/parquet-encoding-benchmark.dir/encoding-benchmark.cc.o: In function `testing::AssertionResult::AppendMessage(testing::Message const&)':\r\n\r\n/opt/conda/include/gtest/gtest.h:352: undefined reference to `testing::Message::GetString[abi:cxx11]() const'\r\n\r\nsrc/parquet/CMakeFiles/parquet-encoding-benchmark.dir/encoding-benchmark.cc.o: In function `parquet::BenchmarkDecodeArrow::InitDataInputs()':\r\n\r\n/arrow/cpp/src/parquet/encoding-benchmark.cc:201: undefined reference to `arrow::random::RandomArrayGenerator::StringWithRepeats(long, long, int, int, double)'\r\n\r\nsrc/parquet/CMakeFiles/parquet-encoding-benchmark.dir/encoding-benchmark.cc.o: In function `parquet::BM_DictDecodingByteArray::DoEncodeData()':\r\n\r\n/arrow/cpp/src/parquet/encoding-benchmark.cc:317: undefined reference to `testing::internal::AlwaysTrue()'\r\n\r\n/arrow/cpp/src/parquet/encoding-benchmark.cc:317: undefined reference to `testing::internal::AlwaysTrue()'\r\n\r\n/arrow/cpp/src/parquet/encoding-benchmark.cc:317: undefined reference to `testing::Message::Message()'\r\n\r\n/arrow/cpp/src/parquet/encoding-benchmark.cc:317: undefined reference to `testing::internal::AssertHelper::AssertHelper(testing::TestPartResult::Type, char const*, int, char const*)'\r\n\r\n/arrow/cpp/src/parquet/encoding-benchmark.cc:317: undefined reference to `testing::internal::AssertHelper::operator=(testing::Message const&) const'\r\n\r\n/arrow/cpp/src/parquet/encoding-benchmark.cc:317: undefined reference to `testing::internal::AssertHelper::~AssertHelper()'\r\n\r\n/arrow/cpp/src/parquet/encoding-benchmark.cc:321: undefined reference to `testing::Message::Message()'\r\n\r\n/arrow/cpp/src/parquet/encoding-benchmark.cc:321: undefined reference to `testing::internal::AssertHelper::AssertHelper(testing::TestPartResult::Type, char const*, int, char const*)'\r\n\r\n/arrow/cpp/src/parquet/encoding-benchmark.cc:321: undefined reference to `testing::internal::AssertHelper::operator=(testing::Message const&) const'\r\n\r\n/arrow/cpp/src/parquet/encoding-benchmark.cc:321: undefined reference to `testing::internal::AssertHelper::~AssertHelper()'\r\n\r\n/arrow/cpp/src/parquet/encoding-benchmark.cc:317: undefined reference to `testing::internal::AssertHelper::~AssertHelper()'\r\n\r\n/arrow/cpp/src/parquet/encoding-benchmark.cc:321: undefined reference to `testing::internal::AssertHelper::~AssertHelper()'\r\n\r\nsrc/parquet/CMakeFiles/parquet-encoding-benchmark.dir/encoding-benchmark.cc.o: In function `testing::internal::scoped_ptr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::reset(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)':\r\n\r\n/opt/conda/include/gtest/internal/gtest-port.h:1215: undefined reference to `testing::internal::IsTrue(bool)'\r\n\r\nsrc/parquet/CMakeFiles/parquet-encoding-benchmark.dir/encoding-benchmark.cc.o: In function `testing::AssertionResult testing::internal::CmpHelperNE<parquet::DictEncoder<parquet::DataType<(parquet::Type::type)6> >*, decltype(nullptr)>(char const*, char const*, parquet::DictEncoder<parquet::DataType<(parquet::Type::type)6> >* const&, decltype(nullptr) const&)':\r\n\r\n/opt/conda/include/gtest/gtest.h:1573: undefined reference to `testing::AssertionSuccess()'\r\n\r\nsrc/parquet/CMakeFiles/parquet-encoding-benchmark.dir/encoding-benchmark.cc.o: In function `testing::internal::scoped_ptr<std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> > >::reset(std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >*)':\r\n\r\n/opt/conda/include/gtest/internal/gtest-port.h:1215: undefined reference to `testing::internal::IsTrue(bool)'\r\n\r\nsrc/parquet/CMakeFiles/parquet-encoding-benchmark.dir/encoding-benchmark.cc.o: In function `testing::AssertionResult testing::internal::CmpHelperOpFailure<parquet::DictEncoder<parquet::DataType<(parquet::Type::type)6> >*, decltype(nullptr)>(char const*, char const*, parquet::DictEncoder<parquet::DataType<(parquet::Type::type)6> >* const&, decltype(nullptr) const&, char const*)':\r\n\r\n/opt/conda/include/gtest/gtest.h:1541: undefined reference to `testing::AssertionFailure()'\r\n\r\n/opt/conda/include/gtest/gtest.h:1543: undefined reference to `testing::AssertionResult::AssertionResult(testing::AssertionResult const&)'\r\n\r\nsrc/parquet/CMakeFiles/parquet-encoding-benchmark.dir/encoding-benchmark.cc.o: In function `testing::AssertionResult& testing::AssertionResult::operator<< <char [12]>(char const (&) [12])':\r\n\r\n/opt/conda/include/gtest/gtest.h:335: undefined reference to `testing::Message::Message()'\r\n\r\nsrc/parquet/CMakeFiles/parquet-encoding-benchmark.dir/encoding-benchmark.cc.o: In function `testing::AssertionResult& testing::AssertionResult::operator<< <char const*>(char const* const&)':\r\n\r\n/opt/conda/include/gtest/gtest.h:335: undefined reference to `testing::Message::Message()'\r\n\r\nsrc/parquet/CMakeFiles/parquet-encoding-benchmark.dir/encoding-benchmark.cc.o: In function `testing::AssertionResult& testing::AssertionResult::operator<< <char [3]>(char const (&) [3])':\r\n\r\n/opt/conda/include/gtest/gtest.h:335: undefined reference to `testing::Message::Message()'\r\n\r\nsrc/parquet/CMakeFiles/parquet-encoding-benchmark.dir/encoding-benchmark.cc.o: In function `testing::AssertionResult& testing::AssertionResult::operator<< <std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)':\r\n\r\n/opt/conda/include/gtest/gtest.h:335: undefined reference to `testing::Message::Message()'\r\n\r\nsrc/parquet/CMakeFiles/parquet-encoding-benchmark.dir/encoding-benchmark.cc.o: In function `testing::AssertionResult& testing::AssertionResult::operator<< <char [5]>(char const (&) [5])':\r\n\r\n/opt/conda/include/gtest/gtest.h:335: undefined reference to `testing::Message::Message()'\r\n\r\ncollect2: error: ld returned 1 exit status\r\n\r\n[366/382] Linking CXX executable debug/parquet-column_writer-test\r\n\r\nninja: build stopped: subcommand failed.\n```",
        "created_at": "2019-03-19T01:54:40.000Z",
        "updated_at": "2019-03-19T13:09:24.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-03-19T13:09:04.000Z"
    },
    "comments": [
        {
            "created_at": "2019-03-19T13:09:04.572Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4958?focusedCommentId=16796066) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 3974\n<https://github.com/apache/arrow/pull/3974>"
        }
    ]
}