{
    "issue": {
        "title": "[Python] Specify behavior for converting tz-aware datetime.datetime objects to Arrow format",
        "body": "***Note**: This issue was originally created as [ARROW-8066](https://issues.apache.org/jira/browse/ARROW-8066). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe original description is at\u00a0<https://github.com/pandas-dev/pandas/issues/32587>\r\n\r\n### Code Sample, a copy-pastable example if possible\r\n\r\n```python\n\r\nimport pandas as pd\r\nfrom datetime import datetime, timezone\r\n\r\ndf = pd.DataFrame.from_records([\r\n    (1, datetime.now().replace(tzinfo=timezone.utc)),\r\n    (2, datetime.now().replace(tzinfo=timezone.min))],\r\n    columns=[\"1\", \"2\"])\r\n\r\nprint(df[\"2\"])\r\nprint()\r\n\r\ndf.to_feather(\"/tmp/1\") \r\ndf2 = pd.read_feather(\"/tmp/1\")\r\n\r\nprint(df2[\"2\"])\r\n```\r\n\r\n\r\nThis code will output:\r\n\r\n```\n\r\n0    2020-03-10 18:13:49.405598+00:00\r\n1    2020-03-10 18:13:49.405626-23:59\r\nName: 2, dtype: object\r\n\r\n0   2020-03-10 18:13:49.405598\r\n1   2020-03-10 18:13:49.405626\r\nName: 2, dtype: datetime64[ns]\r\n\r\n```\r\n\r\n### Problem description\r\n\r\nThe round-trip dtype changed from the correct `object` to incorrect `datetime64`. Thus the timezones were discarded in Arrow and the timestamps became invalid.\r\n\r\n### Expected Output\r\n\r\n(identical)\r\n\r\n```\n\r\n0    2020-03-10 18:13:49.405598+00:00\r\n1    2020-03-10 18:13:49.405626-23:59\r\nName: 2, dtype: object\r\n\r\n0    2020-03-10 18:13:49.405598+00:00\r\n1    2020-03-10 18:13:49.405626-23:59\r\nName: 2, dtype: object\r\n```\r\n\r\n\r\n### Output of ``pd.show_versions()``\r\n\r\n\r\n```\n\r\nINSTALLED VERSIONS\r\n------------------\r\ncommit           : None\r\npython           : 3.7.5.final.0\r\npython-bits      : 64\r\nOS               : Linux\r\nOS-release       : 5.3.0-40-generic\r\nmachine          : x86_64\r\nprocessor        : x86_64\r\nbyteorder        : little\r\nLC_ALL           : None\r\nLANG             : en_US.UTF-8\r\nLOCALE           : en_US.UTF-8\r\n\r\npandas           : 1.0.1\r\nnumpy            : 1.17.4\r\npytz             : 2019.2\r\ndateutil         : 2.7.3\r\npip              : 19.3.1\r\nsetuptools       : 42.0.1\r\nCython           : 0.29.14\r\npytest           : 5.3.1\r\nhypothesis       : None\r\nsphinx           : None\r\nblosc            : None\r\nfeather          : None\r\nxlsxwriter       : None\r\nlxml.etree       : 4.5.0\r\nhtml5lib         : None\r\npymysql          : None\r\npsycopg2         : 2.8.4 (dt dec pq3 ext lo64)\r\njinja2           : 2.10.3\r\nIPython          : 7.10.0\r\npandas_datareader: None\r\nbs4              : 4.8.1\r\nbottleneck       : None\r\nfastparquet      : None\r\ngcsfs            : None\r\nlxml.etree       : 4.5.0\r\nmatplotlib       : 3.1.2\r\nnumexpr          : None\r\nodfpy            : None\r\nopenpyxl         : None\r\npandas_gbq       : None\r\npyarrow          : 0.16.0\r\npytables         : None\r\npytest           : 5.3.1\r\npyxlsb           : None\r\ns3fs             : None\r\nscipy            : 1.2.1\r\nsqlalchemy       : 1.3.12\r\ntables           : None\r\ntabulate         : None\r\nxarray           : None\r\nxlrd             : None\r\nxlwt             : None\r\nxlsxwriter       : None\r\nnumba            : None\r\n\r\n```\r\n",
        "created_at": "2020-03-10T19:27:05.000Z",
        "updated_at": "2020-08-13T11:31:03.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-08-13T11:31:03.000Z"
    },
    "comments": [
        {
            "created_at": "2020-03-10T19:48:06.434Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8066?focusedCommentId=17056323) by Wes McKinney (wesm):*\nCan you copy the details to this issue?"
        },
        {
            "created_at": "2020-03-10T20:06:26.145Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8066?focusedCommentId=17056337) by Markovtsev Vadim (vmarkovtsev):*\n`[~wesm]` Done. +100 to my pain (y)"
        },
        {
            "created_at": "2020-03-10T20:45:29.003Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8066?focusedCommentId=17056405) by Wes McKinney (wesm):*\nThanks. \r\n\r\nI believe we don't have any handling of tz-aware datetime.datetime objects when converting to the Arrow format. Best case scenario all values have the same time zone, but we will need to decide what happens when they have different time zones. We won't be able to have each value have its own different time zone at the moment, though\r\n\r\nOptions for what should take place:\r\n\r\n1. UTC-normalize tz-aware datetime.datetime\r\n2. When all values have the same time zone, convert the tzinfo to a timezone string for storage in the Arrow metadata\r\n3. When there are distinct tzinfos, we should do one of two things: either UTC-normalize (and set timezone utc) or raise an exception\r\n\r\nEither way there's a fair bit of work to do to accomplish these"
        },
        {
            "created_at": "2020-03-12T08:44:23.890Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8066?focusedCommentId=17057712) by Joris Van den Bossche (jorisvandenbossche):*\nAt least we should normalize to UTC, I think (now it is just taking the \"local\" time with discarding the time zone, it seems). \r\n\r\nBTW,I don't think that such roundtrip can ever work (automatically). In addition to not being able to support different timezones within an array as Wes mentioned, converting TimestampArray back to pandas will also prefer datetime64 (and I don't think we have an option to specify you want datetime.datetime objects?) "
        },
        {
            "created_at": "2020-03-12T14:03:19.288Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8066?focusedCommentId=17057949) by Markovtsev Vadim (vmarkovtsev):*\nYep, converting mixed timezones to UTC would make much sense IMO.\r\n\r\nPandas will prefer datetime64 if the items are within the allowed range (year 1677 - year 2262) and the timezone is the same, otherwise, it will resort to datetime.datetime."
        }
    ]
}