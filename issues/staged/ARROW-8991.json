{
    "issue": {
        "title": "[C++][Compute] Add scalar_hash function",
        "body": "***Note**: This issue was originally created as [ARROW-8991](https://issues.apache.org/jira/browse/ARROW-8991). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe purpose of this function is to compute 32- or 64-bit hash values for each cell in an Array. Hashes for nested types can be computed recursively by combining the hash values of their children",
        "created_at": "2020-05-31T14:58:05.000Z",
        "updated_at": "2022-10-17T20:33:32.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2020-06-03T19:15:37.257Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8991?focusedCommentId=17125246) by Antoine Pitrou (apitrou):*\nRight, this is what I had proposed in ARROW-3978 as well."
        },
        {
            "created_at": "2020-06-03T19:37:10.323Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8991?focusedCommentId=17125259) by Wes McKinney (wesm):*\nIf you're interested in working on this, I'll be tied up with some other things for the next few days, otherwise I'll tackle it after that"
        },
        {
            "created_at": "2020-06-03T19:38:59.472Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8991?focusedCommentId=17125260) by Antoine Pitrou (apitrou):*\nIt'll depend on the other things I have on my plate. Is this a dependency of something else?"
        },
        {
            "created_at": "2020-06-03T19:41:53.460Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8991?focusedCommentId=17125264) by Wes McKinney (wesm):*\nIt's needed for implementing hash aggregations (and any other grouping-type algorithm). No need to rearrange priorities, just wanted to mention. "
        },
        {
            "created_at": "2021-06-21T23:45:53.956Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8991?focusedCommentId=17366903) by Wes McKinney (wesm):*\nSeems like this could be implemented now? "
        },
        {
            "created_at": "2021-11-03T20:09:45.862Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8991?focusedCommentId=17438276) by Niranda Perera (niranda):*\nIs there anyone working on this ATM? If not, I can take this up. \r\n `[~wesm]` is there a preference of a hash function, ex: Murmur etc?"
        },
        {
            "created_at": "2021-11-03T20:10:54.557Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8991?focusedCommentId=17438277) by Antoine Pitrou (apitrou):*\nThe underlying idea is to reuse the hash functions already used for hash kernels."
        },
        {
            "created_at": "2021-11-03T20:11:25.405Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8991?focusedCommentId=17438278) by Neal Richardson (npr):*\nDon't we already have this for the group-by aggregation and joining? As in, the algorithms may already be there, you would just have to expose a scalar kernel. (Alternatively, since we already have those functions, is this still valuable?)"
        },
        {
            "created_at": "2022-08-22T17:22:50.770Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8991?focusedCommentId=17583105) by Aldrin Montana (octalene):*\nthis PR is ready for review if anyone has time"
        }
    ]
}