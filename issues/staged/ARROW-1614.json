{
    "issue": {
        "title": "[C++] Add a Tensor logical value type with constant shape, implemented using ExtensionType",
        "body": "***Note**: This issue was originally created as [ARROW-1614](https://issues.apache.org/jira/browse/ARROW-1614). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIn an Arrow table, we would like to add support for a column that has values cells each containing a tensor value, with all tensors having the same shape/dimensions. These would be stored as a binary value, plus some metadata to store type and shape/strides.",
        "created_at": "2017-09-26T19:59:42.000Z",
        "updated_at": "2022-10-11T17:53:47.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Format",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2017-10-16T00:05:18.200Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1614?focusedCommentId=16205349) by Wes McKinney (wesm):*\nThis can be handled via custom_metadata, so we don't actually need to change the format"
        },
        {
            "created_at": "2020-05-05T20:44:39.158Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1614?focusedCommentId=17100249) by Christian Hudon (chrish42):*\nThis is a blocker for some Arrow use cases for us, so I'd be willing to work on this, with a bit of guidance. The first step would be to agree on the approach to take.\r\n\r\nFor me, there are two cases I'd need Arrow to support:\r\n1. Each row is a tensor of a different shape (e.g images of different sizes), but of the same underlying type (e.g. int32). I don't see needing each row being a tensor with a different number of dimensions, so that could be out of scope if desired.\n1. All rows have the same shape (so the whole column could potentially be handed off to e.g. scikit-image, as an array of n images of the same size).\n   \n   From what I understand of Arrow, here's how I would implement this:\n1. A first column containing the elements from all the tensors (in row-major order), and a second containing a tuple with that tensor's shape. The start offset of the data for the next tensor can be computed from the shape of the previous one. (Would also need a separate column containing the pre-computed start index of for each tensor?)\n1. Similarly, the data from the tensors would be stored all together in row-major order. The shape (without the first dimension) would be store in the metadata for that column.\n   \n   Thoughts?"
        },
        {
            "created_at": "2020-05-05T22:58:01.377Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1614?focusedCommentId=17100306) by Wes McKinney (wesm):*\nSounds like two different extension types. Do you want to split the work into separate PRs for the sake of code review?"
        },
        {
            "created_at": "2020-05-06T13:32:54.193Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1614?focusedCommentId=17100808) by Christian Hudon (chrish42):*\nCreated ARROW-8714 for the varying dimensions case. Renamed this one to be clearer that it is about the constant dimensions case.\r\n\r\nIs the approach proposed sound for this case? What would be a next step in terms of code? Is there an example of another type that's implemented as en ExtensionType that I could have a look at?"
        },
        {
            "created_at": "2020-05-06T13:53:18.530Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1614?focusedCommentId=17100822) by Joris Van den Bossche (jorisvandenbossche):*\n`[~chrish42]` for experimenting, you could also first implement it in Python (to have a prototype, to experiment with and discuss how to store metadata, etc, that might be easier to play with).   \r\nFor Python, we have docs here: https://arrow.apache.org/docs/python/extending_types.html#defining-extension-types-user-defined-types (and there are also examples in the pandas codebase (for intervals and period dtypes): https://github.com/pandas-dev/pandas/blob/master/pandas/core/arrays/_arrow_utils.py, or also in the pyarrow tests: https://github.com/apache/arrow/blob/master/python/pyarrow/tests/test_extension_type.py)\r\n\r\nFor implementing it in C++, probably best source are the test extension types: https://github.com/apache/arrow/blob/master/cpp/src/arrow/testing/extension_type.h and https://github.com/apache/arrow/blob/master/cpp/src/arrow/extension_type_test.cc"
        },
        {
            "created_at": "2020-05-08T17:54:34.163Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1614?focusedCommentId=17102790) by Christian Hudon (chrish42):*\n`[~jorisvandenbossche]` \u00a0Thanks for all the doc pointers. I think I'll start with a Python prototype, then, as that'll be a lot faster to experiment with. Once we're good with the results of that, I'll port it to C++."
        },
        {
            "created_at": "2020-05-13T20:50:07.311Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1614?focusedCommentId=17106655) by Christopher Osborn (csosborn):*\nThank you `[~chrish42]` \u00a0for taking this on! I was happy to find this ticket. I also need to store constant-dimension tensors in tables, with the intention of then exposing them in Python as ndarrays and in C++ as Eigen Matrix/Tensor views. I'm still ramping up on Arrow (and so far only in C++), and don't really understand the ExtensionType facility yet, but would be happy to lend a hand if possible. I was about to start picking my way painfully down a similar road."
        },
        {
            "created_at": "2020-10-07T21:16:19.679Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1614?focusedCommentId=17209872) by Rok Mihevc (rokm):*\nI'd like to contribute to this work and will have time available next week. `[~chrish42]` \u00a0could I help out somehow?"
        },
        {
            "created_at": "2020-10-08T22:04:10.474Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1614?focusedCommentId=17210489) by Bryan Cutler (bryanc):*\nI just wanted to let you all know I have been working on a similar Tensor extension type. I currently have a Pandas extension type for a tensor with conversion to/from an Arrow extension type, just for Python/PyArrow right now, and zero-copy conversion with numpy.ndarrays. It's part of the project [Text Extensions for Pandas](https://github.com/CODAIT/text-extensions-for-pandas) where we use it for NLP feature vectors, but it's really general purpose. You can check it out at\r\n\r\n<https://github.com/CODAIT/text-extensions-for-pandas/blob/master/text_extensions_for_pandas/array/tensor.py>\r\n <https://github.com/CODAIT/text-extensions-for-pandas/blob/master/text_extensions_for_pandas/array/arrow_conversion.py>\r\n Or install the package if you like via `pip install text-extensions-for-pandas` (it's currently in alpha)\r\n\r\nWe would love to help out with this effort and contribute what we have to Arrow, if it fits the bill!"
        },
        {
            "created_at": "2020-10-09T00:10:04.860Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1614?focusedCommentId=17210537) by Rok Mihevc (rokm):*\n`[~bryanc]` \u00a0Text Extensions for Pandas looks like a good start for the Python part.\u00a0 We'd probably want to base it on pyarrow.Tensor instead of np.ndarray? Would you like to do this or shall I start and ask you for review?"
        },
        {
            "created_at": "2020-10-09T06:05:44.513Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1614?focusedCommentId=17210634) by Bryan Cutler (bryanc):*\n`[~rokm]` for our purposes, it wasn't necessary to use pyarrow.Tensor, but there are some limitations with it currently so maybe there are some trade-offs. Please go ahead and start if you like and I'd be happy to help review and discuss further."
        },
        {
            "created_at": "2020-10-20T15:11:23.709Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1614?focusedCommentId=17217666) by Christian Hudon (chrish42):*\nI manifestly haven't had time to work on this yet, mostly because my Arrow time is still dedicated to trying to figure out why my other Arrow pull request isn't working. Once that other pull request is done, I'll move to working on this one, but if someone else can start working on this, please do so and open a draft pull request with your work. I'll join you there when I can, in that case."
        },
        {
            "created_at": "2020-10-22T17:11:45.415Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1614?focusedCommentId=17219199) by Rok Mihevc (rokm):*\nAs proposed by `[~jorisvandenbossche]` \u00a0I've made a draft PR ( https://github.com/apache/arrow/pull/8510) with python logic prototype. It was heavily inspired by `[~bryanc]`'s text-extensions-for-pandas. Once we agree on the design we can rewrite it to c++.\r\n\r\nAs this is for the case where all tensors in the array are of the same shape I propose we store the data in a single Tensor. Is there a good reason not to do that?\r\n\r\nI assume we should support non-contiguous tensors. I'll add that.\r\n\r\nAny comments at this point?\r\n\r\n`[~chrish42]` \u00a0- feel free to jump in any time."
        },
        {
            "created_at": "2020-10-22T20:56:00.418Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1614?focusedCommentId=17219342) by Bryan Cutler (bryanc):*\n> As this is for the case where all tensors in the array are of the same shape I propose we store the data in a single Tensor. Is there a good reason not to do that?\r\n\r\nI believe if there is a single pyarrow.Tensor serialized in the backing binary array, that array will have a length of 1.  Then if placing in a Table or RecordBatch, would restrict it to 1 row for the other columns as well."
        },
        {
            "created_at": "2020-10-28T21:28:41.496Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1614?focusedCommentId=17222496) by Bryan Cutler (bryanc):*\n`[~rokm]` I had an idea for making a single extension type that would handle constant and varying dimensions, see comment [here](https://issues.apache.org/jira/browse/ARROW-8714?focusedCommentId=17222490&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-17222490) and let me know what you think."
        },
        {
            "created_at": "2020-10-29T21:07:24.464Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1614?focusedCommentId=17223211) by Rok Mihevc (rokm):*\n`[~bryanc]` \u00a0I've replied in that thread.\r\n\r\nI've also started working on the c++ for this I'll report back soon."
        },
        {
            "created_at": "2020-10-30T18:29:06.304Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1614?focusedCommentId=17223839) by Bryan Cutler (bryanc):*\nGreat, `[~rokm]` , looking forward to it. I also updated the title and description to reflect this is for tensors with the same fixed shape."
        },
        {
            "created_at": "2021-09-21T21:00:32.001Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1614?focusedCommentId=17418318) by Wenbing Bai (wenbing-bai):*\nHi there, just want to followup the status of this ticket. Any updates?"
        },
        {
            "created_at": "2021-09-23T10:35:24.924Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1614?focusedCommentId=17419118) by Rok Mihevc (rokm):*\nHey `[~wenbing-bai]`, I'm planing to take a look at this next week."
        },
        {
            "created_at": "2022-07-12T14:04:21.507Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1614?focusedCommentId=17565553) by @toddfarmer:*\nThis issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned. Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon."
        },
        {
            "created_at": "2022-10-11T17:51:26.493Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1614?focusedCommentId=17616008) by Apache Arrow JIRA Bot (arrowjira):*\nThis issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned per [project policy](https://arrow.apache.org/docs/dev/developers/bug_reports.html#issue-assignment). Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon."
        }
    ]
}