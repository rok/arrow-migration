{
    "issue": {
        "title": "[C++] combine_chunks on DictionaryArray appears to be broken",
        "body": "***Note**: This issue was originally created as [ARROW-17900](https://issues.apache.org/jira/browse/ARROW-17900). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nRecently upgraded from pyarrow 4.0.1 to 9.0.0 and there appears to be a bug when combining the chunks of a dictionary with multiple row groups.\u00a0 The dictionary is a stringarray of categories.\r\n\r\nIt is worth noting here that each category is not present in each chunk. To me, the issue appears to be that the category indices per chunk appear to be incorrect when a category is missing from a chunk when they are combined together. I assume this as counts for the categories of a lower index (0, 1) appear to be more frequent in the bugged version compared to the working version, and the counts of the lower indices (2, 3, 4) are lower.\r\n\r\n\u00a0\r\n\r\nThe difference can be easily noted when running a value count. For example;\r\n\r\n![two.png](https://issues.apache.org/jira/secure/attachment/13049954/two.png)\r\n\r\nA workaround for now is to read directly as a string array, and then encode this as a dictionary. This isn't the best however due to speed and memory concerns.\r\n\r\n![one.png](https://issues.apache.org/jira/secure/attachment/13049955/one.png)\r\n\r\n\u00a0\r\n\r\nAttached is my parquet file (test.parquet) and a simply python script to see the difference (category_counts.py). I did not create this parquet file, rather am consuming it from a service- so excuse the data / uuid style column names. Please run this with pyarrow 4.0.1 and pyarrow 9.0.0 to see the difference in output. The images say pyarrow 6.0.0 but the issue is still present in 9.0.0. too\r\n\r\n\u00a0",
        "created_at": "2022-09-29T23:30:42.000Z",
        "updated_at": "2022-10-03T12:04:05.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-09-30T09:36:55.592Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17900?focusedCommentId=17611468) by Alenka Frim (alenka):*\nThank you for reporting this! I made a small reproducible example:\r\n```python\n\r\nimport pyarrow as pa\r\nindices = pa.array([0, 1, 2, 0, 2, 0, None, 2])\r\ndictionary = pa.array([\"MV\", \"OB\", \"LMS2\"])\r\ndict_array = pa.DictionaryArray.from_arrays(indices, dictionary)\r\n\r\nindices1 = pa.array([0, 0, 0, 0, 0, 0, 0, 0])\r\ndictionary1 = pa.array([\"MV\",\"OB\"])\r\ndict_array1 = pa.DictionaryArray.from_arrays(indices1, dictionary1)\r\n\r\n# ChunkedArray made from two separate\r\n# DictionarryArray objects\r\nca = pa.chunked_array((\r\n    dict_array,\r\n    dict_array1\r\n))\r\n# Creating one DictionarryArray from a ChunkedArray\r\n# where each chunk is a DictionarryArray \r\nda = ca.combine_chunks()\n```\r\nResearching the data in pyarrow 4.0.1:\r\n```python\n\r\n>>> pa.__version__\r\n'4.0.1'\r\n>>> ca.value_counts()\r\n<pyarrow.lib.StructArray object at 0x7fcc4083d280>\r\n-- is_valid: all not null\r\n-- child 0 type: dictionary<values=string, indices=int64, ordered=0>\r\n\r\n  -- dictionary:\r\n    [\r\n      \"MV\",\r\n      \"OB\",\r\n      \"LMS2\"\r\n    ]\r\n  -- indices:\r\n    [\r\n      0,\r\n      1,\r\n      2,\r\n      null\r\n    ]\r\n-- child 1 type: int64\r\n  [\r\n    11,\r\n    1,\r\n    3,\r\n    1\r\n  ]\r\n>>> da.value_counts()\r\n<pyarrow.lib.StructArray object at 0x7fcc4083d220>\r\n-- is_valid: all not null\r\n-- child 0 type: dictionary<values=string, indices=int64, ordered=0>\r\n\r\n  -- dictionary:\r\n    [\r\n      \"MV\",\r\n      \"OB\",\r\n      \"LMS2\"\r\n    ]\r\n  -- indices:\r\n    [\r\n      0,\r\n      1,\r\n      2,\r\n      null\r\n    ]\r\n-- child 1 type: int64\r\n  [\r\n    11,\r\n    1,\r\n    3,\r\n    1\r\n  ]\r\n```\r\nand in pyarrow 9.0.0:\r\n```python\n\r\n>>> pa.__version__\r\n'9.0.0'\r\n>>> ca.value_counts()\r\n<pyarrow.lib.StructArray object at 0x7fa4989877c0>\r\n-- is_valid: all not null\r\n-- child 0 type: dictionary<values=string, indices=int64, ordered=0>\r\n\r\n  -- dictionary:\r\n    [\r\n      \"MV\",\r\n      \"OB\",\r\n      \"LMS2\"\r\n    ]\r\n  -- indices:\r\n    [\r\n      0,\r\n      1,\r\n      2,\r\n      null\r\n    ]\r\n-- child 1 type: int64\r\n  [\r\n    11,\r\n    1,\r\n    3,\r\n    1\r\n  ]\r\n>>> da.value_counts()\r\n<pyarrow.lib.StructArray object at 0x7fa498987be0>\r\n-- is_valid: all not null\r\n-- child 0 type: dictionary<values=string, indices=int64, ordered=0>\r\n\r\n  -- dictionary:\r\n    [\r\n      \"MV\",\r\n      \"OB\",\r\n      \"LMS2\"\r\n    ]\r\n  -- indices:\r\n    [\r\n      0,\r\n      2,\r\n      null\r\n    ]\r\n-- child 1 type: int64\r\n  [\r\n    12,\r\n    3,\r\n    1\r\n  ]\r\n```"
        },
        {
            "created_at": "2022-10-03T09:47:41.146Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17900?focusedCommentId=17612230) by Alenka Frim (alenka):*\n`[~lidavidm]` I _think_ this could be a bug in the `Concatenate` method in C++ introduced with version 6.0.0:\r\n```python\n\r\n>>> pa.__version__\r\n'6.0.0'\r\n>>> da.value_counts()\r\n<pyarrow.lib.StructArray object at 0x7faa4013fa60>\r\n-- is_valid: all not null\r\n-- child 0 type: dictionary<values=string, indices=int64, ordered=0>\r\n\r\n\r\n\u00a0 -- dictionary:\r\n\u00a0 \u00a0 [\r\n\u00a0 \u00a0 \u00a0 \"MV\",\r\n\u00a0 \u00a0 \u00a0 \"OB\",\r\n\u00a0 \u00a0 \u00a0 \"LMS2\"\r\n\u00a0 \u00a0 ]\r\n\u00a0 -- indices:\r\n\u00a0 \u00a0 [\r\n\u00a0 \u00a0 \u00a0 0,\r\n\u00a0 \u00a0 \u00a0 2,\r\n\u00a0 \u00a0 \u00a0 null\r\n\u00a0 \u00a0 ]\r\n-- child 1 type: int64\r\n\u00a0 [\r\n\u00a0 \u00a0 12,\r\n\u00a0 \u00a0 3,\r\n\u00a0 \u00a0 1\r\n\u00a0 ] \r\n```\r\n```python\n\r\n>>> pa.__version__\r\n'5.0.0'\r\n>>> da.value_counts()\r\n<pyarrow.lib.StructArray object at 0x7fe8f827eb20>\r\n-- is_valid: all not null\r\n-- child 0 type: dictionary<values=string, indices=int64, ordered=0>\r\n\r\n  -- dictionary:\r\n    [\r\n      \"MV\",\r\n      \"OB\",\r\n      \"LMS2\"\r\n    ]\r\n  -- indices:\r\n    [\r\n      0,\r\n      1,\r\n      2,\r\n      null\r\n    ]\r\n-- child 1 type: int64\r\n  [\r\n    11,\r\n    1,\r\n    3,\r\n    1\r\n  ]\r\n\r\n```\r\n(`{}da{`} being a StructArray created with combining chunks where each chunk is a DictionarryArray)\r\n\r\n<https://github.com/apache/arrow/blob/f0303652b4934a9f767dca88268016c69375687d/python/pyarrow/array.pxi#L2946>\r\n\r\nCan't find an open Jira issue for it.\r\n\r\n\u00a0"
        },
        {
            "created_at": "2022-10-03T11:32:17.727Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17900?focusedCommentId=17612251) by David Li (lidavidm):*\nWell, that'd make this the open Jira issue for it :) \r\n\r\nI don't really have the time to investigate right now, unless this is a release blocker"
        },
        {
            "created_at": "2022-10-03T12:02:54.250Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17900?focusedCommentId=17612265) by Alenka Frim (alenka):*\nNo, I do not think it is a release blocker. Just wanted to be sure I got it right - will change the components and such.\r\n\r\nThanks! :)"
        }
    ]
}