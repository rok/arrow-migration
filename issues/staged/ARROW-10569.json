{
    "issue": {
        "title": "[C++][Python] Poor Table filtering performance",
        "body": "***Note**: This issue was originally created as [ARROW-10569](https://issues.apache.org/jira/browse/ARROW-10569). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nFrom the mailing list\r\n\r\n\u00a0\r\n```java\n\r\nimport pandas as pd\r\nimport pyarrow as pa\r\nimport pyarrow.compute as pc\r\nimport numpy as np\r\n\r\nnum_rows = 10_000_000\r\ndata = np.random.randn(num_rows)\r\n\r\ndf = pd.DataFrame({'data{}'.format(i): data\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0for i in range(100)})\r\n\r\ndf['key'] = np.random.randint(0, 100, size=num_rows)\r\n\r\nrb = pa.record_batch(df)\r\nt = pa.table(df)\r\n\r\nI found that the performance of filtering a record batch is very similar:\r\n\r\nIn [22]: timeit df[df.key == 5]\r\n71.3 ms \u00b1 148 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 10 loops each)\r\n\r\nIn [24]: %timeit rb.filter(pc.equal(rb[-1], 5))\r\n75.8 ms \u00b1 2.47 ms per loop (mean \u00b1 std. dev. of 7 runs, 10 loops each)\r\n\r\nWhereas the performance of filtering a table is absolutely abysmal (no\r\nidea what's going on here)\r\n\r\nIn [23]: %timeit t.filter(pc.equal(t[-1], 5))\r\n961 ms \u00b1 3.5 ms per loop (mean \u00b1 std. dev. of 7 runs, 1 loop each)\r\n \n```\r\n\u00a0\r\n\r\n<https://lists.apache.org/thread.html/r4d4ffa7935efb2902600b9024859211e53aa6552d43ba0ad83517af5%40%3Cuser.arrow.apache.org%3Ehttps://lists.apache.org/thread.html/r4d4ffa7935efb2902600b9024859211e53aa6552d43ba0ad83517af5%40%3Cuser.arrow.apache.org%3E>",
        "created_at": "2020-11-12T15:58:34.000Z",
        "updated_at": "2020-12-02T17:30:39.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-12-02T17:30:30.000Z"
    },
    "comments": [
        {
            "created_at": "2020-11-26T15:50:59.222Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10569?focusedCommentId=17239320) by Antoine Pitrou (apitrou):*\nThe issue here is of filtering each of the 100 columns with the boolean filter, which is slow-ish.\r\nThe solution is to first convert the boolean filter to indices, as is already done for record batches."
        },
        {
            "created_at": "2020-12-02T17:30:30.284Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10569?focusedCommentId=17242550) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 8777\n<https://github.com/apache/arrow/pull/8777>"
        }
    ]
}