{
    "issue": {
        "title": "[C++] Consolidate Filter and Expression classes",
        "body": "***Note**: This issue was originally created as [ARROW-6711](https://issues.apache.org/jira/browse/ARROW-6711). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThere is unnecessary boilerplate required when using the Filter/Expression classes. Filter is no longer necessary; it (and FilterVector) can be replaced with Expression. Expression is sufficiently general that it can be subclassed to provide any custom functionality which would have been added through a GenericFilter (add some tests for this).\r\n\r\nAdditionally rows within RecordBatches yielded from a scan are not currently filtered using Expression::Evaluate(). (Add tests ensuring both row filtering and pruning obey Kleene logic)\r\n\r\nAdd some comments on the mechanism of `Assume()` too, and refactor it not to return a Result (its failure modes are covered by `Validate()`)",
        "created_at": "2019-09-26T14:23:39.000Z",
        "updated_at": "2019-10-11T18:24:13.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-10-11T18:24:12.000Z"
    },
    "comments": [
        {
            "created_at": "2019-10-11T18:24:13.036Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6711?focusedCommentId=16949700) by Ben Kietzman (bkietz):*\nIssue resolved by pull request 5594\n<https://github.com/apache/arrow/pull/5594>"
        }
    ]
}