{
    "issue": {
        "title": "[Python] Improve Table column access",
        "body": "***Note**: This issue was originally created as [ARROW-2453](https://issues.apache.org/jira/browse/ARROW-2453). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSuppose you have a table column named \"nulls\". Right now, to access it on a table, you need to do something like this:\r\n```python\n\r\n>>> table.column(table.schema.get_field_index('nulls'))\r\n<pyarrow.lib.Column object at 0x7fe4144d2570>\r\nchunk 0: <pyarrow.lib.NullArray object at 0x7fe3db51b4a8>\r\n[\r\n  NA,\r\n  NA,\r\n  NA\r\n]\r\n```\r\n\r\nAlso, if you mistype the column name, instead of getting an error you get an arbitrary column:\r\n```Java\n\r\n>>> table.column(table.schema.get_field_index('z'))\r\n<pyarrow.lib.Column object at 0x7fe3dbd6cc30>\r\nchunk 0: <pyarrow.lib.Int64Array object at 0x7fe3db54b408>\r\n[\r\n  0,\r\n  1,\r\n  2\r\n]\r\n```\r\n\r\n`Table.column()` should accept a string object and return the column with the corresponding name. KeyError should be raised if there is no column with a such name.\r\n",
        "created_at": "2018-04-13T09:40:56.000Z",
        "updated_at": "2018-04-21T20:22:46.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2018-04-21T20:22:44.000Z"
    },
    "comments": [
        {
            "created_at": "2018-04-21T20:22:44.577Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2453?focusedCommentId=16446971) by Uwe Korn (uwe):*\nIssue resolved by pull request 1923\n<https://github.com/apache/arrow/pull/1923>"
        }
    ]
}