{
    "issue": {
        "title": "[C++] Is Precision check necessary when appending values at decimal builder",
        "body": "***Note**: This issue was originally created as [ARROW-16696](https://issues.apache.org/jira/browse/ARROW-16696). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThis is one issue found when I'm trying to enable generate_decimal128_case integration case for Rust at C++ repo: https://github.com/apache/arrow/pull/13219.\r\n\r\nRust validates precision of decimal in few places, e.g. DecimalBuilder's append_value. However, in decimal golden file 0.14.1_decimal.gold.json, there are some values failing this check. C++ doesn't perform similar check in appending value at decimal builder as I did a search (e.g. Decimal128Builder, DecimalFromString), and I can confirm that test case can be passed if I remove the check in DecimalBuilder.append_value.\r\n\r\nActually in C++, similar check is done when doing a full validating ArrayData: https://github.com/apache/arrow/blob/c715bebbd89089f385c9996560866da23ea1ddda/cpp/src/arrow/array/validate.cc#L672.\r\n\r\nI'm wondering if we should follow C++ at Rust implementation, i.e. removing the check from appending value at decimal builder, and moving the check to the full validation of ArrayData?\r\n\r\nI opened a Rust PR (https://github.com/apache/arrow-rs/pull/1767) for that.\r\n\r\nAnother opinion from the comments is, as we don't do full validation when finishing the decimal builder, it seems this check is necessary if it is the promise of the builder to always build a valid ArrayData. Then the check is needed and it seems C++ needs to add the check there.\r\n\r\nWould like to hear some feedback here. Thanks.\r\n\r\n",
        "created_at": "2022-05-31T17:15:52.000Z",
        "updated_at": "2022-06-03T16:15:45.000Z",
        "labels": [
            "Migrated from Jira",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-06-03T16:15:45.000Z"
    },
    "comments": [
        {
            "created_at": "2022-05-31T17:31:02.314Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16696?focusedCommentId=17544527) by David Li (lidavidm):*\nWe skip the validation for this reason in the C++ tests now. https://github.com/apache/arrow/blob/5680d209fd870f99134e2d7299b47acd90fabb8e/dev/archery/archery/integration/runner.py#L154-L160"
        },
        {
            "created_at": "2022-05-31T17:33:08.114Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16696?focusedCommentId=17544529) by David Li (lidavidm):*\nI suppose in Rust parlance, the C++ builders are `unsafe` because they don't do the check. We could consider adding checked variants/adding an explicitly unchecked variant."
        },
        {
            "created_at": "2022-05-31T20:41:19.715Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16696?focusedCommentId=17544596) by L. C. Hsieh (viirya):*\nThanks `[~lidavidm]`. Then it makes sense. I will keep this open for a while to get more comments if any."
        },
        {
            "created_at": "2022-05-31T20:43:07.824Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16696?focusedCommentId=17544597) by David Li (lidavidm):*\n`[~viirya]` you may also find it useful to start a discussion on dev@arrow.apache.org"
        }
    ]
}