{
    "issue": {
        "title": "[C++] implement partial schema class to extend JSON conversion",
        "body": "***Note**: This issue was originally created as [ARROW-5423](https://issues.apache.org/jira/browse/ARROW-5423). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently the JSON parser supports only basic conversion rules such as parsing a number to `int64`. In general users will want more capable conversions like parsing a base64 string into binary or parsing a column of objects to `map<string, string>` instead of `struct<string...>`. This will require extension of `arrow::json::ParseOptions::explicit_schema` to something analagous to a schema but which supports mapping to more than a simple output type.",
        "created_at": "2019-05-27T15:35:42.000Z",
        "updated_at": "2022-07-12T14:04:47.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-07-12T14:04:47.069Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5423?focusedCommentId=17565744) by @toddfarmer:*\nThis issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned. Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon."
        }
    ]
}