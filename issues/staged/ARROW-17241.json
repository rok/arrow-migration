{
    "issue": {
        "title": "[R] Support scientific notation for integers in csv reader",
        "body": "***Note**: This issue was originally created as [ARROW-17241](https://issues.apache.org/jira/browse/ARROW-17241). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIt looks like the csv reader doesn't support scientific notation for integers, as shown in the following reprex. However, it works fine for floats/doubles.\r\n\r\nCould support for scientific notation for integers be added please?\r\n\r\n\u00a0\r\n```\n\r\ntestcsv <- tempfile(fileext = \".csv\")\r\n\r\nc(1, 2, 1e6) |> \r\n  as.data.frame() |> \r\n  setNames(\"int\") |> \r\n  write.csv(testcsv, row.names = FALSE)\r\n\r\narrow::read_csv_arrow(testcsv, col_types = \"i\", col_names = \"int\", skip = 1)\r\n#> Error:\r\n#> ! Invalid: In CSV column #0: CSV conversion error to int32: invalid value '1e+06'\r\n\r\n#> Backtrace:\r\n#>     \u2586\r\n#>  1. \u2514\u2500arrow (local) `<fn>`(...)\r\n#>  2.   \u2514\u2500base::tryCatch(...)\r\n#>  3.     \u2514\u2500base (local) tryCatchList(expr, classes, parentenv, handlers)\r\n#>  4.       \u2514\u2500base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\r\n#>  5.         \u2514\u2500value[[3L]](cond)\r\n#>  6.           \u2514\u2500arrow:::handle_csv_read_error(e, schema, call)\r\n#>  7.             \u2514\u2500rlang::abort(msg, call = call)\r\n\r\narrow::read_csv_arrow(testcsv, col_types = \"d\", col_names = \"int\", skip = 1)\r\n#> # A tibble: 3 \u00d7 1\r\n#>       int\r\n#>     <dbl>\r\n#> 1       1\r\n#> 2       2\r\n#> 3 1000000\r\n```\r\n\u00a0",
        "created_at": "2022-07-28T14:57:41.000Z",
        "updated_at": "2022-07-31T14:39:52.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-07-31T14:39:52.007Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17241?focusedCommentId=17573442) by Antoine Pitrou (apitrou):*\nYou can easily cast floating-point columns to integer as desired.\r\n\r\ncc `[~npr]` for opinions."
        }
    ]
}