{
    "issue": {
        "title": "[Java] Upgrade to official FlatBuffers release (Flatbuffers incompatibility)",
        "body": "***Note**: This issue was originally created as [ARROW-3175](https://issues.apache.org/jira/browse/ARROW-3175). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nArrow Java currently uses an unofficial flatbuffers dependency - com.vlkan:flatbuffers:\r\n <https://github.com/apache/arrow/blob/master/java/pom.xml#L481-L485>\r\n\r\nThe likely motivation here is that previously, no Java flatbuffers implementation was available on maven central.\r\n <https://github.com/vy/flatbuffers>\r\n > Unfortunately, FlatBuffers project does not publish any artifacts to the Maven Central Repository\r\n\r\nHowever, this is no longer the case:\r\n <https://search.maven.org/search?q=g:com.google.flatbuffers%20AND%20a:flatbuffers-java&core=gav>\r\n\r\nThe flatbuffers version used in Arrow java is a nearly 3-year-old snapshot, not even a version of an official release: <https://github.com/vy/flatbuffers#usage>\r\n\r\nThe main problem is that this version of flatbuffers is not compatible with the official releases of flatbuffers.\r\n For example, we use the official flatbuffers releases in ND4J and Deeplearning4j: <https://github.com/deeplearning4j/deeplearning4j>\r\n\r\nRunning Arrow with an official flatbuffers library on the classpath results in issues such as:\r\n```\n\r\njava.lang.NoSuchMethodError: com.google.flatbuffers.FlatBufferBuilder.createString(Ljava/lang/String;)I\r\n at org.apache.arrow.vector.types.pojo.Field.getField(Field.java:154)\r\n at org.apache.arrow.vector.types.pojo.Schema.getSchema(Schema.java:145)\r\n at org.apache.arrow.vector.ipc.message.MessageSerializer.serialize(MessageSerializer.java:124)\r\n at org.apache.arrow.vector.ipc.ArrowWriter.ensureStarted(ArrowWriter.java:136)\r\n at org.apache.arrow.vector.ipc.ArrowWriter.start(ArrowWriter.java:97)\r\n at FlatBuffersDependencyIssue.test(FlatBuffersDependencyIssue.java:56)\r\n```\r\n\u00a0\r\n\r\nSimply excluding the\u00a0com.vlkan:flatbuffers dependency in lieu of an official flatbuffers release is not a solution (same exception as above) and we aren't prepared to downgrade all of our projects to use the flatbuffers version that Arrow currently requires.\r\n Consequently, this is a major issue that prevents us using Arrow in our libraries.\r\n\r\nI have prepared a simple repository to reproduce this issue, if required: <https://github.com/AlexDBlack/arrowflatbufferstest>\r\n\r\nIs there a reason for using this particular version of flatbuffers, and if not, can Arrow java use an official release of flatbuffers instead?",
        "created_at": "2018-09-05T05:48:38.000Z",
        "updated_at": "2018-10-02T14:35:54.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2018-09-28T17:40:37.000Z"
    },
    "comments": [
        {
            "created_at": "2018-09-05T13:29:50.308Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3175?focusedCommentId=16604403) by Li Jin (icexelloss):*\nLooks like something we should fix. I will take a look."
        },
        {
            "created_at": "2018-09-28T17:40:37.504Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3175?focusedCommentId=16632165) by Bryan Cutler (bryanc):*\nIssue resolved by pull request 2515\n<https://github.com/apache/arrow/pull/2515>"
        }
    ]
}