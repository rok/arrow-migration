{
    "issue": {
        "title": "[Python] concat_tables() failing from bad Pandas Metadata",
        "body": "***Note**: This issue was originally created as [ARROW-3065](https://issues.apache.org/jira/browse/ARROW-3065). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nLooks like the major bug from https://issues.apache.org/jira/browse/ARROW-1941 is back...\r\n\r\nAfter I downgraded from 0.10.0 to 0.9.0, the error disappeared..\r\n\r\n```python\n\r\nnew_arrow_table = pa.concat_tables(my_arrow_tables)\r\n\r\n File \"pyarrow/table.pxi\", line 1562, in pyarrow.lib.concat_tables\r\n  File \"pyarrow/error.pxi\", line 81, in pyarrow.lib.check_status\r\npyarrow.lib.ArrowInvalid: Schema at index 2 was different:\r\n```\r\n\r\nIn order to debug this I saved the first 4 arrow tables to 4 parquet files and inspected the parquet files. The parquet schema is identical, but the Pandas Metadata is different.\r\n\r\n```python\n\r\nfor i in range(5):\r\n     pq.write_table(my_arrow_tables[i], \"test\" + str(i) + \".parquet\")\r\n```\r\n\r\nIt looks like a column which contains empty strings is getting typed as float64.\r\n\r\n```python\n\r\n>>> test1.schema\r\nHoldingDetail_Id: string\r\nmetadata\r\n--------\r\n{b'pandas': b'{\"index_columns\": [], \"column_indexes\": [], \"columns\": [\r\n{\"name\": \"HoldingDetail_Id\", \"field_name\": \"HoldingDetail_Id\", \"pandas_type\": \"unicode\", \"numpy_type\": \"object\", \"metadata\": null},\r\n\r\n>>> test1[0]\r\n<Column name='HoldingDetail_Id' type=DataType(string)>\r\n[\r\n  [\r\n    \"Z4\",\r\n    \"SF\",\r\n    \"J7\",\r\n    \"W6\",\r\n    \"L7\",\r\n    \"Q9\",\r\n    \"NE\",\r\n    \"F7\",\r\n\r\n\r\n>>> test2.schema\r\nHoldingDetail_Id: string\r\nmetadata\r\n--------\r\n{b'pandas': b'{\"index_columns\": [], \"column_indexes\": [], \"columns\": [\r\n{\"name\": \"HoldingDetail_Id\", \"field_name\": \"HoldingDetail_Id\", \"pandas_type\": \"unicode\", \"numpy_type\": \"float64\", \"metadata\": null},\r\n\r\n>>> test2[0]\r\n<Column name='HoldingDetail_Id' type=DataType(string)>\r\n[\r\n  [\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n```\r\n",
        "created_at": "2018-08-17T01:01:07.000Z",
        "updated_at": "2018-09-27T15:15:32.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2018-09-27T15:15:24.000Z"
    },
    "comments": [
        {
            "created_at": "2018-09-23T07:30:28.765Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3065?focusedCommentId=16625011) by Krisztian Szucs (kszucs):*\nI've tried to reproduce it, sadly with no luck.\r\nBased on your description, I used the following snippet including the parquet roundtrip:\r\n\r\n```python\n\r\nimport pandas as pd\r\nimport pyarrow as pa\r\nimport pyarrow.parquet as pq\r\n\r\n\r\ndf1 = pd.DataFrame({\"col\": list(\"abcdefgh\")})\r\ndf2 = pd.DataFrame({\"col\":  [\"\"] * 8})\r\n\r\ntbl1 = pa.Table.from_pandas(df1)\r\ntbl2 = pa.Table.from_pandas(df2)\r\n\r\npq.write_table(tbl1, 'tbl1.parquet')\r\npq.write_table(tbl2, 'tbl2.parquet')\r\n\r\ntbl1_ = pq.read_table('tbl1.parquet')\r\ntbl2_ = pq.read_table('tbl2.parquet')\r\n\r\npa.concat_tables([tbl1_, tbl2_])\r\nprint(tbl2.schema)\r\n```\r\n\r\nAlso the column which contains empty strings correctly has object numpy_type instead of float64.\r\nTested with 0.10.0, 0.9.0, HEAD(391516df8ce084c279e854cf52c8beb4a4fc444a)\r\n\r\n[~davlee1972@yahoo.com] Could You please provide a more reproducible example?"
        },
        {
            "created_at": "2018-09-24T19:52:10.261Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3065?focusedCommentId=16626336) by David Lee (davlee1972@yahoo.com):*\nThis test fails.. Tested against 0.10.0.. Works in 0.9.0. In one table the column doesn't exist to start and is added using pandas.reindex(). The reasoning behind this is the original file(s) being converted to parquet may or may not contain all 100+ columns.\r\n> ```java\n> import pandas as pd\n> import pyarrow as pa\n> import pyarrow.parquet as pq\n> \n> schema = pa.schema([\n> pa.field('col1', pa.string()),\n> pa.field('col2', pa.string()),\n> ])\n> \n> df1 = pd.DataFrame([{\"col1\": v, \"col2\": v} for v in list(\"abcdefgh\")])\n> df2 = pd.DataFrame([{\"col2\": v} for v in list(\"abcdefgh\")])\n> \n> df1 = df1.reindex(columns=schema.names)\n> df2 = df2.reindex(columns=schema.names)\n> \n> tbl1 = pa.Table.from_pandas(df1, schema = schema, preserve_index=False)\n> tbl2 = pa.Table.from_pandas(df2, schema = schema, preserve_index=False)\n> \n> tbl3 = pa.concat_tables([tbl1, tbl2])\n> \n> Traceback (most recent call last):\n> {{ File \"<stdin>\", line 1, in <module>}}\n> {{ File \"pyarrow/table.pxi\", line 1562, in pyarrow.lib.concat_tables}}\n> {{ File \"pyarrow/error.pxi\", line 81, in pyarrow.lib.check_status}}\n> pyarrow.lib.ArrowInvalid: Schema at index 1 was different:\n> ```"
        },
        {
            "created_at": "2018-09-24T21:14:33.996Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3065?focusedCommentId=16626470) by David Lee (davlee1972@yahoo.com):*\nIn pyarrow 0.9.0 the pandas metadata still says float64, but it works..\r\n\r\n\u00a0\r\n```java\n\r\n>>> tbl1.schema\r\ncol1: string\r\ncol2: string\r\nmetadata\r\n--------\r\n{b'pandas': b'{\"index_columns\": [], \"column_indexes\": [], \"columns\": [{\"name\":'\r\nb' \"col1\", \"field_name\": \"col1\", \"pandas_type\": \"unicode\", \"numpy_'\r\nb'type\": \"object\", \"metadata\": null}, {\"name\": \"col2\", \"field_name'\r\nb'\": \"col2\", \"pandas_type\": \"unicode\", \"numpy_type\": \"object\", \"me'\r\nb'tadata\": null}], \"pandas_version\": \"0.23.0\"}'}\r\n>>> tbl2.schema\r\ncol1: string\r\ncol2: string\r\nmetadata\r\n--------\r\n{b'pandas': b'{\"index_columns\": [], \"column_indexes\": [], \"columns\": [{\"name\":'\r\nb' \"col1\", \"field_name\": \"col1\", \"pandas_type\": \"unicode\", \"numpy_'\r\nb'type\": \"float64\", \"metadata\": null}, {\"name\": \"col2\", \"field_nam'\r\nb'e\": \"col2\", \"pandas_type\": \"unicode\", \"numpy_type\": \"object\", \"m'\r\nb'etadata\": null}], \"pandas_version\": \"0.23.0\"}'}\r\n>>> tbl3.schema\r\ncol1: string\r\ncol2: string\r\nmetadata\r\n--------\r\n{b'pandas': b'{\"index_columns\": [], \"column_indexes\": [], \"columns\": [{\"name\":'\r\nb' \"col1\", \"field_name\": \"col1\", \"pandas_type\": \"unicode\", \"numpy_'\r\nb'type\": \"object\", \"metadata\": null}, {\"name\": \"col2\", \"field_name'\r\nb'\": \"col2\", \"pandas_type\": \"unicode\", \"numpy_type\": \"object\", \"me'\r\nb'tadata\": null}], \"pandas_version\": \"0.23.0\"}'}\r\n>>> tbl3[0]\r\n<pyarrow.lib.Column object at 0x7f4055eabc30>\r\nchunk 0: <pyarrow.lib.StringArray object at 0x7f4055e3cf48>\r\n[\r\n'a',\r\n'b',\r\n'c',\r\n'd',\r\n'e',\r\n'f',\r\n'g',\r\n'h'\r\n]\r\nchunk 1: <pyarrow.lib.StringArray object at 0x7f4055e58138>\r\n[\r\n'',\r\n'',\r\n'',\r\n'',\r\n'',\r\n'',\r\n'',\r\n''\r\n]\r\n\r\n```\r\nIn the 0.10.0 example above that can't produce the error tbl3[0] comes back with:\r\n\r\n\u00a0\r\n```java\n\r\n>>> tbl3[0]\r\n<Column name='col' type=DataType(string)>\r\n[\r\n[\r\n\"a\",\r\n\"b\",\r\n\"c\",\r\n\"d\",\r\n\"e\",\r\n\"f\",\r\n\"g\",\r\n\"h\"\r\n],\r\n[\r\n\"\",\r\n\"\",\r\n\"\",\r\n\"\",\r\n\"\",\r\n\"\",\r\n\"\",\r\n\"\"\r\n]\r\n]\r\n\r\n\r\n```\r\n\u00a0"
        },
        {
            "created_at": "2018-09-27T11:36:51.098Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3065?focusedCommentId=16630255) by Krisztian Szucs (kszucs):*\nThanks [~davlee1972@yahoo.com]![ That's an excellent example, now I'm able to reproduce. Fix is arriving]( That's an excellent example, now I'm able to reproduce. Fix is arriving)"
        },
        {
            "created_at": "2018-09-27T15:15:24.649Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3065?focusedCommentId=16630597) by Wes McKinney (wesm):*\nIssue resolved by pull request 2644\n<https://github.com/apache/arrow/pull/2644>"
        }
    ]
}