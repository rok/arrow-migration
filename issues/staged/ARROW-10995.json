{
    "issue": {
        "title": "[Rust] [DataFusion] Improve parallelism when reading Parquet files",
        "body": "***Note**: This issue was originally created as [ARROW-10995](https://issues.apache.org/jira/browse/ARROW-10995). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently the unit of parallelism is the number of parquet files being read.\r\n\r\nFor example, if we run a query against a Parquet table that consists of 8 partitions then we will attempt to run 8 async tasks in parallel and if there is a single Parquet file then we will only try and run 1 async task so this does not scale well. Also, if there are hundreds or thousands of Parquet files then we will try and process them all concurrently which also doesn't scale well.\r\n\r\nThese are the options for improving this situation:\r\n\r\n\u00a0\r\n1. Use Parquet row groups as the unit of partitioning and divide the number of row groups by the desired level of concurrency (defaulting to number of cores)\n1. Keep file as the unit of partitions and add a RepartitionExec into the plan if there are fewer partitions (files) than cores and in the case where there are more files than cores, split the files up into lists so that each partition is a list of files rather than a single file. Each partition task will process one file at a time.\n   \n   \u00a0\n   \n   \u00a0",
        "created_at": "2020-12-20T23:07:10.000Z",
        "updated_at": "2020-12-29T16:30:40.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust - DataFusion",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-12-29T16:30:27.000Z"
    },
    "comments": [
        {
            "created_at": "2020-12-29T16:30:27.267Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10995?focusedCommentId=17256048) by Andy Grove (andygrove):*\nIssue resolved by pull request 9029\n<https://github.com/apache/arrow/pull/9029>"
        }
    ]
}