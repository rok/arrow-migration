{
    "issue": {
        "title": "[C++][R] Unknown C compiler / ccache on Arch Linux",
        "body": "***Note**: This issue was originally created as [ARROW-14638](https://issues.apache.org/jira/browse/ARROW-14638). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI'm not sure if this is the same issue as highlighted in the [docs](https://arrow.apache.org/docs/r/articles/install.html#known-installation-issues-1) for CentOS, but I'm having trouble installing arrow on my Arch system.\r\n\r\nI've also seen there's another open ccache issue (#ARROW-12654). However, that thread seems unrelated to the error that I run into below.\r\n\r\nThanks in advance for any help or tips to resolve.\r\n\r\nGrant\r\n\r\nEdit: I should probably add that I've not run into any compiler or ccache issues before.\r\n```java\n\r\n> Sys.setenv(ARROW_R_DEV=TRUE)\r\n> install.packages('arrow')\r\ntrying URL 'https://packagemanager.rstudio.com/all/latest/src/contrib/arrow_6.0.0.2.tar.gz'\r\nContent type 'binary/octet-stream' length 4767616 bytes (4.5 MB)\r\n==================================================\r\ndownloaded 4.5 MB\r\n* installing *source* package \u2018arrow\u2019 ...\r\n** package \u2018arrow\u2019 successfully unpacked and MD5 sums checked\r\n** using staged installation\r\ntrying URL 'https://github.com'\r\ndownloaded 249 KB\r\n*** Found local C++ source: 'tools/cpp'\r\n*** Building C++ libraries\r\n*** Building with MAKEFLAGS= -j2\u00a0\r\n**** arrow with SOURCE_DIR='tools/cpp' BUILD_DIR='/tmp/RtmpuQguxd/file3b88710a7be7' DEST_DIR='libarrow/arrow-6.0.0.2' CMAKE='/usr/bin/cmake' EXTRA_CMAKE_FLAGS='' CC='ccache gcc' CXX='g++ -std=gnu++11' LDFLAGS='-Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now' ARROW_S3='OFF' ARROW_MIMALLOC='OFF'\u00a0\r\n++ pwd\r\n+ : /tmp/RtmpKTw8XS/R.INSTALL3b616292d01d/arrow\r\n+ : tools/cpp\r\n+ : /tmp/RtmpuQguxd/file3b88710a7be7\r\n+ : libarrow/arrow-6.0.0.2\r\n+ : /usr/bin/cmake\r\n++ cd tools/cpp\r\n++ pwd\r\n+ SOURCE_DIR=/tmp/RtmpKTw8XS/R.INSTALL3b616292d01d/arrow/tools/cpp\r\n++ mkdir -p libarrow/arrow-6.0.0.2\r\n++ cd libarrow/arrow-6.0.0.2\r\n++ pwd\r\n+ DEST_DIR=/tmp/RtmpKTw8XS/R.INSTALL3b616292d01d/arrow/libarrow/arrow-6.0.0.2\r\n+ '[' '' '!=' '' ']'\r\n+ '[' '' = false ']'\r\n+ ARROW_DEFAULT_PARAM=OFF\r\n+ mkdir -p /tmp/RtmpuQguxd/file3b88710a7be7\r\n+ pushd /tmp/RtmpuQguxd/file3b88710a7be7\r\n/tmp/RtmpuQguxd/file3b88710a7be7 /tmp/RtmpKTw8XS/R.INSTALL3b616292d01d/arrow\r\n+ /usr/bin/cmake -DARROW_BOOST_USE_SHARED=OFF -DARROW_BUILD_TESTS=OFF -DARROW_BUILD_SHARED=OFF -DARROW_BUILD_STATIC=ON -DARROW_COMPUTE=ON -DARROW_CSV=ON -DARROW_DATASET=ON -DARROW_DEPENDENCY_SOURCE=BUNDLED -DAWSSDK_SOURCE= -DARROW_FILESYSTEM=ON -DARROW_JEMALLOC=OFF -DARROW_MIMALLOC=OFF -DARROW_JSON=ON -DARROW_PARQUET=ON -DARROW_S3=OFF -DARROW_WITH_BROTLI=OFF -DARROW_WITH_BZ2=OFF -DARROW_WITH_LZ4=OFF -DARROW_WITH_RE2=ON -DARROW_WITH_SNAPPY=OFF -DARROW_WITH_UTF8PROC=ON -DARROW_WITH_ZLIB=OFF -DARROW_WITH_ZSTD=OFF -DARROW_VERBOSE_THIRDPARTY_BUILD=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_INSTALL_PREFIX=/tmp/RtmpKTw8XS/R.INSTALL3b616292d01d/arrow/libarrow/arrow-6.0.0.2 -DCMAKE_EXPORT_NO_PACKAGE_REGISTRY=ON -DCMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY=ON -DCMAKE_UNITY_BUILD=ON -G 'Unix Makefiles' /tmp/RtmpKTw8XS/R.INSTALL3b616292d01d/arrow/tools/cpp\r\n-- Building using CMake version: 3.21.4\r\n-- The C compiler identification is GNU 11.1.0\r\n-- The CXX compiler identification is GNU 11.1.0\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Check for working C compiler: /usr/bin/ccache - skipped\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Check for working CXX compiler: /usr/bin/g++ - skipped\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\n-- Arrow version: 6.0.0 (full: '6.0.0')\r\n-- Arrow SO version: 600 (full: 600.0.0)\r\n-- clang-tidy not found\r\n-- clang-format not found\r\n-- Could NOT find ClangTools (missing: CLANG_FORMAT_BIN CLANG_TIDY_BIN)\u00a0\r\n-- infer not found\r\nfatal: not a git repository (or any parent up to mount point /)\r\nStopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).\r\n-- Found Python3: /usr/bin/python3.9 (found version \"3.9.7\") found components: Interpreter\u00a0\r\n-- Using ccache: /usr/bin/ccache\r\n-- Found cpplint executable at /tmp/RtmpKTw8XS/R.INSTALL3b616292d01d/arrow/tools/cpp/build-support/cpplint.py\r\n-- System processor: x86_64\r\n-- Performing Test CXX_SUPPORTS_SSE4_2\r\n-- Performing Test CXX_SUPPORTS_SSE4_2 - Success\r\n-- Performing Test CXX_SUPPORTS_AVX2\r\n-- Performing Test CXX_SUPPORTS_AVX2 - Success\r\n-- Performing Test CXX_SUPPORTS_AVX512\r\n-- Performing Test CXX_SUPPORTS_AVX512 - Success\r\n-- Arrow build warning level: PRODUCTION\r\nUsing ld linker\r\nConfigured for RELEASE build (set with cmake -DCMAKE_BUILD_TYPE={release,debug,...})\r\n-- Build Type: RELEASE\r\n-- Performing Test CXX_LINKER_SUPPORTS_VERSION_SCRIPT\r\n-- Performing Test CXX_LINKER_SUPPORTS_VERSION_SCRIPT - Success\r\n-- Using BUNDLED approach to find dependencies\r\n-- ARROW_ABSL_BUILD_VERSION: 20210324.2\r\n-- ARROW_ABSL_BUILD_SHA256_CHECKSUM: 59b862f50e710277f8ede96f083a5bb8d7c9595376146838b9580be90374ee1f\r\n-- ARROW_AWSSDK_BUILD_VERSION: 1.8.133\r\n-- ARROW_AWSSDK_BUILD_SHA256_CHECKSUM: d6c495bc06be5e21dac716571305d77437e7cfd62a2226b8fe48d9ab5785a8d6\r\n-- ARROW_AWS_CHECKSUMS_BUILD_VERSION: v0.1.10\r\n-- ARROW_AWS_CHECKSUMS_BUILD_SHA256_CHECKSUM: c9d0100a5743765fc8034e34e2310f77f59b1adab6f2e2f2d4d2a3bd81b2a36d\r\n-- ARROW_AWS_C_COMMON_BUILD_VERSION: v0.6.9\r\n-- ARROW_AWS_C_COMMON_BUILD_SHA256_CHECKSUM: 928a3e36f24d1ee46f9eec360ec5cebfe8b9b8994fe39d4fa74ff51aebb12717\r\n-- ARROW_AWS_C_EVENT_STREAM_BUILD_VERSION: v0.1.5\r\n-- ARROW_AWS_C_EVENT_STREAM_BUILD_SHA256_CHECKSUM: f1b423a487b5d6dca118bfc0d0c6cc596dc476b282258a3228e73a8f730422d4\r\n-- ARROW_BOOST_BUILD_VERSION: 1.75.0\r\n-- ARROW_BOOST_BUILD_SHA256_CHECKSUM: cb97b36e2295a321c34851e0455bc2630ad6c691d4f9f589170066cd11c835b4\r\n-- ARROW_BROTLI_BUILD_VERSION: v1.0.9\r\n-- ARROW_BROTLI_BUILD_SHA256_CHECKSUM: f9e8d81d0405ba66d181529af42a3354f838c939095ff99930da6aa9cdf6fe46\r\n-- ARROW_BZIP2_BUILD_VERSION: 1.0.8\r\n-- ARROW_BZIP2_BUILD_SHA256_CHECKSUM: ab5a03176ee106d3f0fa90e381da478ddae405918153cca248e682cd0c4a2269\r\n-- ARROW_CARES_BUILD_VERSION: 1.17.1\r\n-- ARROW_CARES_BUILD_SHA256_CHECKSUM: d73dd0f6de824afd407ce10750ea081af47eba52b8a6cb307d220131ad93fc40\r\n-- ARROW_CRC32C_BUILD_VERSION: 1.1.2\r\n-- ARROW_CRC32C_BUILD_SHA256_CHECKSUM: ac07840513072b7fcebda6e821068aa04889018f24e10e46181068fb214d7e56\r\n-- ARROW_GBENCHMARK_BUILD_VERSION: v1.5.2\r\n-- ARROW_GBENCHMARK_BUILD_SHA256_CHECKSUM: dccbdab796baa1043f04982147e67bb6e118fe610da2c65f88912d73987e700c\r\n-- ARROW_GFLAGS_BUILD_VERSION: v2.2.2\r\n-- ARROW_GFLAGS_BUILD_SHA256_CHECKSUM: 34af2f15cf7367513b352bdcd2493ab14ce43692d2dcd9dfc499492966c64dcf\r\n-- ARROW_GLOG_BUILD_VERSION: v0.4.0\r\n-- ARROW_GLOG_BUILD_SHA256_CHECKSUM: f28359aeba12f30d73d9e4711ef356dc842886968112162bc73002645139c39c\r\n-- ARROW_GOOGLE_CLOUD_CPP_BUILD_VERSION: v1.31.1\r\n-- ARROW_GOOGLE_CLOUD_CPP_BUILD_SHA256_CHECKSUM: dc7cbf95b506a84b48cf71e0462985d262183edeaabdacaaee2109852394a609\r\n-- ARROW_GRPC_BUILD_VERSION: v1.35.0\r\n-- ARROW_GRPC_BUILD_SHA256_CHECKSUM: 27dd2fc5c9809ddcde8eb6fa1fa278a3486566dfc28335fca13eb8df8bd3b958\r\n-- ARROW_GTEST_BUILD_VERSION: 1.10.0\r\n-- ARROW_GTEST_BUILD_SHA256_CHECKSUM: 9dc9157a9a1551ec7a7e43daea9a694a0bb5fb8bec81235d8a1e6ef64c716dcb\r\n-- ARROW_JEMALLOC_BUILD_VERSION: 5.2.1\r\n-- ARROW_JEMALLOC_BUILD_SHA256_CHECKSUM: 34330e5ce276099e2e8950d9335db5a875689a4c6a56751ef3b1d8c537f887f6\r\n-- ARROW_LZ4_BUILD_VERSION: v1.9.3\r\n-- ARROW_LZ4_BUILD_SHA256_CHECKSUM: 030644df4611007ff7dc962d981f390361e6c97a34e5cbc393ddfbe019ffe2c1\r\n-- ARROW_MIMALLOC_BUILD_VERSION: v1.7.2\r\n-- ARROW_MIMALLOC_BUILD_SHA256_CHECKSUM: b1912e354565a4b698410f7583c0f83934a6dbb3ade54ab7ddcb1569320936bd\r\n-- ARROW_NLOHMANN_JSON_BUILD_VERSION: v3.10.2\r\n-- ARROW_NLOHMANN_JSON_BUILD_SHA256_CHECKSUM: 081ed0f9f89805c2d96335c3acfa993b39a0a5b4b4cef7edb68dd2210a13458c\r\n-- ARROW_ORC_BUILD_VERSION: 1.7.0\r\n-- ARROW_ORC_BUILD_SHA256_CHECKSUM: 45d6ba9149ffa2aaa168d61ab326f61181861c94529f26da3918a9aa2f801e39\r\n-- ARROW_PROTOBUF_BUILD_VERSION: v3.17.3\r\n-- ARROW_PROTOBUF_BUILD_SHA256_CHECKSUM: 77ad26d3f65222fd96ccc18b055632b0bfedf295cb748b712a98ba1ac0b704b2\r\n-- ARROW_RAPIDJSON_BUILD_VERSION: 1a803826f1197b5e30703afe4b9c0e7dd48074f5\r\n-- ARROW_RAPIDJSON_BUILD_SHA256_CHECKSUM: 0b6b780b6c534bfb0b23d29910bfe361e486bcfeaf106db8bc8995792072905a\r\n-- ARROW_RE2_BUILD_VERSION: 2021-02-02\r\n-- ARROW_RE2_BUILD_SHA256_CHECKSUM: 1396ab50c06c1a8885fb68bf49a5ecfd989163015fd96699a180d6414937f33f\r\n-- ARROW_SNAPPY_BUILD_VERSION: 1.1.8\r\n-- ARROW_SNAPPY_BUILD_SHA256_CHECKSUM: 16b677f07832a612b0836178db7f374e414f94657c138e6993cbfc5dcc58651f\r\n-- ARROW_THRIFT_BUILD_VERSION: 0.13.0\r\n-- ARROW_THRIFT_BUILD_SHA256_CHECKSUM: 7ad348b88033af46ce49148097afe354d513c1fca7c607b59c33ebb6064b5179\r\n-- ARROW_UTF8PROC_BUILD_VERSION: v2.6.1\r\n-- ARROW_UTF8PROC_BUILD_SHA256_CHECKSUM: 4c06a9dc4017e8a2438ef80ee371d45868bda2237a98b26554de7a95406b283b\r\n-- ARROW_XSIMD_BUILD_VERSION: aeec9c872c8b475dedd7781336710f2dd2666cb2\r\n-- ARROW_XSIMD_BUILD_SHA256_CHECKSUM: 0a841e6c8acf216150e4fc19fca8e29fbab9614b56ac7b96e56019264ca27b26\r\n-- ARROW_ZLIB_BUILD_VERSION: 1.2.11\r\n-- ARROW_ZLIB_BUILD_SHA256_CHECKSUM: c3e5e9fdd5004dcb542feda5ee4f0ff0744628baf8ed2dd5d66f8ca1197cb1a1\r\n-- ARROW_ZSTD_BUILD_VERSION: v1.5.0\r\n-- ARROW_ZSTD_BUILD_SHA256_CHECKSUM: 0d9ade222c64e912d6957b11c923e214e2e010a18f39bec102f572e693ba2867\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed\r\n-- Check if compiler accepts -pthread\r\n-- Check if compiler accepts -pthread - yes\r\n-- Found Threads: TRUE \u00a0\r\n-- Looking for __SIZEOF_INT128__\r\n-- Looking for __SIZEOF_INT128__ - found\r\n-- Boost include dir: /tmp/RtmpuQguxd/file3b88710a7be7/boost_ep-prefix/src/boost_ep\r\n-- Boost libraries: boost_system_static;boost_filesystem_static\r\n-- Building without OpenSSL support. Minimum OpenSSL version 1.0.2 required.\r\nBuilding Apache Thrift from source\r\n-- Building RapidJSON from source\r\n-- Building xsimd from source\r\n-- Building RE2 from source\r\n-- Building utf8proc from source\r\n-- Found hdfs.h at: /tmp/RtmpKTw8XS/R.INSTALL3b616292d01d/arrow/tools/cpp/thirdparty/hadoop/include/hdfs.h\r\n-- All bundled static libraries: thrift::thrift;re2::re2;utf8proc::utf8proc\r\n-- CMAKE_C_FLAGS: \u00a0-O3 -DNDEBUG \u00a0-Wall -fno-semantic-interposition -msse4.2\u00a0\r\n-- CMAKE_CXX_FLAGS: \u00a0-Wno-noexcept-type -Wno-subobject-linkage \u00a0-fdiagnostics-color=always -O3 -DNDEBUG \u00a0-Wall -fno-semantic-interposition -msse4.2\u00a0\r\n-- Looking for backtrace\r\n-- Looking for backtrace - found\r\n-- backtrace facility detected in default set of libraries\r\n-- Found Backtrace: /usr/include \u00a0\r\n-- Creating bundled static library target arrow_bundled_dependencies at /tmp/RtmpuQguxd/file3b88710a7be7/release/libarrow_bundled_dependencies.a\r\n-- ---------------------------------------------------------------------\r\n-- Arrow version: \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 6.0.0\r\n--\u00a0\r\n-- Build configuration summary:\r\n-- \u00a0 Generator: Unix Makefiles\r\n-- \u00a0 Build type: RELEASE\r\n-- \u00a0 Source directory: /tmp/RtmpKTw8XS/R.INSTALL3b616292d01d/arrow/tools/cpp\r\n-- \u00a0 Install prefix: /tmp/RtmpKTw8XS/R.INSTALL3b616292d01d/arrow/libarrow/arrow-6.0.0.2\r\n--\u00a0\r\n-- Compile and link options:\r\n--\u00a0\r\n-- \u00a0 ARROW_CXXFLAGS=\"\" [default=\"\"]\r\n-- \u00a0 \u00a0 \u00a0 Compiler flags to append when compiling Arrow\r\n-- \u00a0 ARROW_BUILD_STATIC=ON [default=ON]\r\n-- \u00a0 \u00a0 \u00a0 Build static libraries\r\n-- \u00a0 ARROW_BUILD_SHARED=OFF [default=ON]\r\n-- \u00a0 \u00a0 \u00a0 Build shared libraries\r\n-- \u00a0 ARROW_PACKAGE_KIND=\"\" [default=\"\"]\r\n-- \u00a0 \u00a0 \u00a0 Arbitrary string that identifies the kind of package\r\n-- \u00a0 \u00a0 \u00a0 (for informational purposes)\r\n-- \u00a0 ARROW_GIT_ID=\"\" [default=\"\"]\r\n-- \u00a0 \u00a0 \u00a0 The Arrow git commit id (if any)\r\n-- \u00a0 ARROW_GIT_DESCRIPTION=\"\" [default=\"\"]\r\n-- \u00a0 \u00a0 \u00a0 The Arrow git commit description (if any)\r\n-- \u00a0 ARROW_NO_DEPRECATED_API=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Exclude deprecated APIs from build\r\n-- \u00a0 ARROW_USE_CCACHE=ON [default=ON]\r\n-- \u00a0 \u00a0 \u00a0 Use ccache when compiling (if available)\r\n-- \u00a0 ARROW_USE_LD_GOLD=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Use ld.gold for linking on Linux (if available)\r\n-- \u00a0 ARROW_USE_PRECOMPILED_HEADERS=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Use precompiled headers when compiling\r\n-- \u00a0 ARROW_SIMD_LEVEL=SSE4_2 [default=NONE|SSE4_2|AVX2|AVX512|NEON|DEFAULT]\r\n-- \u00a0 \u00a0 \u00a0 Compile-time SIMD optimization level\r\n-- \u00a0 ARROW_RUNTIME_SIMD_LEVEL=MAX [default=NONE|SSE4_2|AVX2|AVX512|MAX]\r\n-- \u00a0 \u00a0 \u00a0 Max runtime SIMD optimization level\r\n-- \u00a0 ARROW_ARMV8_ARCH=armv8-a [default=armv8-a|armv8-a+crc+crypto]\r\n-- \u00a0 \u00a0 \u00a0 Arm64 arch and extensions\r\n-- \u00a0 ARROW_ALTIVEC=ON [default=ON]\r\n-- \u00a0 \u00a0 \u00a0 Build with Altivec if compiler has support\r\n-- \u00a0 ARROW_RPATH_ORIGIN=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build Arrow libraries with RATH set to $ORIGIN\r\n-- \u00a0 ARROW_INSTALL_NAME_RPATH=ON [default=ON]\r\n-- \u00a0 \u00a0 \u00a0 Build Arrow libraries with install_name set to @rpath\r\n-- \u00a0 ARROW_GGDB_DEBUG=ON [default=ON]\r\n-- \u00a0 \u00a0 \u00a0 Pass -ggdb flag to debug builds\r\n--\u00a0\r\n-- Test and benchmark options:\r\n--\u00a0\r\n-- \u00a0 ARROW_BUILD_EXAMPLES=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build the Arrow examples\r\n-- \u00a0 ARROW_BUILD_TESTS=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build the Arrow googletest unit tests\r\n-- \u00a0 ARROW_ENABLE_TIMING_TESTS=ON [default=ON]\r\n-- \u00a0 \u00a0 \u00a0 Enable timing-sensitive tests\r\n-- \u00a0 ARROW_BUILD_INTEGRATION=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build the Arrow integration test executables\r\n-- \u00a0 ARROW_BUILD_BENCHMARKS=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build the Arrow micro benchmarks\r\n-- \u00a0 ARROW_BUILD_BENCHMARKS_REFERENCE=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build the Arrow micro reference benchmarks\r\n-- \u00a0 ARROW_TEST_LINKAGE=static [default=shared|static]\r\n-- \u00a0 \u00a0 \u00a0 Linkage of Arrow libraries with unit tests executables.\r\n-- \u00a0 ARROW_FUZZING=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build Arrow Fuzzing executables\r\n-- \u00a0 ARROW_LARGE_MEMORY_TESTS=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Enable unit tests which use large memory\r\n--\u00a0\r\n-- Lint options:\r\n--\u00a0\r\n-- \u00a0 ARROW_ONLY_LINT=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Only define the lint and check-format targets\r\n-- \u00a0 ARROW_VERBOSE_LINT=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 If off, 'quiet' flags will be passed to linting tools\r\n-- \u00a0 ARROW_GENERATE_COVERAGE=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build with C++ code coverage enabled\r\n--\u00a0\r\n-- Checks options:\r\n--\u00a0\r\n-- \u00a0 ARROW_TEST_MEMCHECK=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Run the test suite using valgrind --tool=memcheck\r\n-- \u00a0 ARROW_USE_ASAN=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Enable Address Sanitizer checks\r\n-- \u00a0 ARROW_USE_TSAN=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Enable Thread Sanitizer checks\r\n-- \u00a0 ARROW_USE_UBSAN=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Enable Undefined Behavior sanitizer checks\r\n--\u00a0\r\n-- Project component options:\r\n--\u00a0\r\n-- \u00a0 ARROW_BUILD_UTILITIES=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build Arrow commandline utilities\r\n-- \u00a0 ARROW_COMPUTE=ON [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build the Arrow Compute Modules\r\n-- \u00a0 ARROW_CSV=ON [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build the Arrow CSV Parser Module\r\n-- \u00a0 ARROW_CUDA=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build the Arrow CUDA extensions (requires CUDA toolkit)\r\n-- \u00a0 ARROW_DATASET=ON [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build the Arrow Dataset Modules\r\n-- \u00a0 ARROW_FILESYSTEM=ON [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build the Arrow Filesystem Layer\r\n-- \u00a0 ARROW_FLIGHT=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build the Arrow Flight RPC System (requires GRPC, Protocol Buffers)\r\n-- \u00a0 ARROW_GANDIVA=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build the Gandiva libraries\r\n-- \u00a0 ARROW_GCS=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build Arrow with GCS support (requires the GCloud SDK for C++)\r\n-- \u00a0 ARROW_HDFS=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build the Arrow HDFS bridge\r\n-- \u00a0 ARROW_HIVESERVER2=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build the HiveServer2 client and Arrow adapter\r\n-- \u00a0 ARROW_IPC=ON [default=ON]\r\n-- \u00a0 \u00a0 \u00a0 Build the Arrow IPC extensions\r\n-- \u00a0 ARROW_JEMALLOC=OFF [default=ON]\r\n-- \u00a0 \u00a0 \u00a0 Build the Arrow jemalloc-based allocator\r\n-- \u00a0 ARROW_JNI=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build the Arrow JNI lib\r\n-- \u00a0 ARROW_JSON=ON [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build Arrow with JSON support (requires RapidJSON)\r\n-- \u00a0 ARROW_MIMALLOC=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build the Arrow mimalloc-based allocator\r\n-- \u00a0 ARROW_PARQUET=ON [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build the Parquet libraries\r\n-- \u00a0 ARROW_ORC=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build the Arrow ORC adapter\r\n-- \u00a0 ARROW_PLASMA=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build the plasma object store along with Arrow\r\n-- \u00a0 ARROW_PLASMA_JAVA_CLIENT=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build the plasma object store java client\r\n-- \u00a0 ARROW_PYTHON=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build the Arrow CPython extensions\r\n-- \u00a0 ARROW_S3=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build Arrow with S3 support (requires the AWS SDK for C++)\r\n-- \u00a0 ARROW_TENSORFLOW=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build Arrow with TensorFlow support enabled\r\n-- \u00a0 ARROW_TESTING=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build the Arrow testing libraries\r\n--\u00a0\r\n-- Thirdparty toolchain options:\r\n--\u00a0\r\n-- \u00a0 ARROW_DEPENDENCY_SOURCE=BUNDLED [default=AUTO|BUNDLED|SYSTEM|CONDA|VCPKG|BREW]\r\n-- \u00a0 \u00a0 \u00a0 Method to use for acquiring arrow's build dependencies\r\n-- \u00a0 ARROW_VERBOSE_THIRDPARTY_BUILD=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Show output from ExternalProjects rather than just logging to files\r\n-- \u00a0 ARROW_DEPENDENCY_USE_SHARED=ON [default=ON]\r\n-- \u00a0 \u00a0 \u00a0 Link to shared libraries\r\n-- \u00a0 ARROW_BOOST_USE_SHARED=OFF [default=ON]\r\n-- \u00a0 \u00a0 \u00a0 Rely on boost shared libraries where relevant\r\n-- \u00a0 ARROW_BROTLI_USE_SHARED=ON [default=ON]\r\n-- \u00a0 \u00a0 \u00a0 Rely on Brotli shared libraries where relevant\r\n-- \u00a0 ARROW_BZ2_USE_SHARED=ON [default=ON]\r\n-- \u00a0 \u00a0 \u00a0 Rely on Bz2 shared libraries where relevant\r\n-- \u00a0 ARROW_GFLAGS_USE_SHARED=ON [default=ON]\r\n-- \u00a0 \u00a0 \u00a0 Rely on GFlags shared libraries where relevant\r\n-- \u00a0 ARROW_GRPC_USE_SHARED=ON [default=ON]\r\n-- \u00a0 \u00a0 \u00a0 Rely on gRPC shared libraries where relevant\r\n-- \u00a0 ARROW_LZ4_USE_SHARED=ON [default=ON]\r\n-- \u00a0 \u00a0 \u00a0 Rely on lz4 shared libraries where relevant\r\n-- \u00a0 ARROW_OPENSSL_USE_SHARED=ON [default=ON]\r\n-- \u00a0 \u00a0 \u00a0 Rely on OpenSSL shared libraries where relevant\r\n-- \u00a0 ARROW_PROTOBUF_USE_SHARED=ON [default=ON]\r\n-- \u00a0 \u00a0 \u00a0 Rely on Protocol Buffers shared libraries where relevant\r\n-- \u00a0 ARROW_THRIFT_USE_SHARED=ON [default=ON]\r\n-- \u00a0 \u00a0 \u00a0 Rely on thrift shared libraries where relevant\r\n-- \u00a0 ARROW_UTF8PROC_USE_SHARED=ON [default=ON]\r\n-- \u00a0 \u00a0 \u00a0 Rely on utf8proc shared libraries where relevant\r\n-- \u00a0 ARROW_SNAPPY_USE_SHARED=ON [default=ON]\r\n-- \u00a0 \u00a0 \u00a0 Rely on snappy shared libraries where relevant\r\n-- \u00a0 ARROW_UTF8PROC_USE_SHARED=ON [default=ON]\r\n-- \u00a0 \u00a0 \u00a0 Rely on utf8proc shared libraries where relevant\r\n-- \u00a0 ARROW_ZSTD_USE_SHARED=ON [default=ON]\r\n-- \u00a0 \u00a0 \u00a0 Rely on zstd shared libraries where relevant\r\n-- \u00a0 ARROW_USE_GLOG=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build libraries with glog support for pluggable logging\r\n-- \u00a0 ARROW_WITH_BACKTRACE=ON [default=ON]\r\n-- \u00a0 \u00a0 \u00a0 Build with backtrace support\r\n-- \u00a0 ARROW_WITH_BROTLI=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build with Brotli compression\r\n-- \u00a0 ARROW_WITH_BZ2=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build with BZ2 compression\r\n-- \u00a0 ARROW_WITH_LZ4=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build with lz4 compression\r\n-- \u00a0 ARROW_WITH_SNAPPY=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build with Snappy compression\r\n-- \u00a0 ARROW_WITH_ZLIB=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build with zlib compression\r\n-- \u00a0 ARROW_WITH_ZSTD=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build with zstd compression\r\n-- \u00a0 ARROW_WITH_UTF8PROC=ON [default=ON]\r\n-- \u00a0 \u00a0 \u00a0 Build with support for Unicode properties using the utf8proc library\r\n-- \u00a0 \u00a0 \u00a0 (only used if ARROW_COMPUTE is ON or ARROW_GANDIVA is ON)\r\n-- \u00a0 ARROW_WITH_RE2=ON [default=ON]\r\n-- \u00a0 \u00a0 \u00a0 Build with support for regular expressions using the re2 library\r\n-- \u00a0 \u00a0 \u00a0 (only used if ARROW_COMPUTE or ARROW_GANDIVA is ON)\r\n--\u00a0\r\n-- Parquet options:\r\n--\u00a0\r\n-- \u00a0 PARQUET_MINIMAL_DEPENDENCY=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Depend only on Thirdparty headers to build libparquet.\r\n-- \u00a0 \u00a0 \u00a0 Always OFF if building binaries\r\n-- \u00a0 PARQUET_BUILD_EXECUTABLES=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build the Parquet executable CLI tools. Requires static libraries to be built.\r\n-- \u00a0 PARQUET_BUILD_EXAMPLES=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build the Parquet examples. Requires static libraries to be built.\r\n-- \u00a0 PARQUET_REQUIRE_ENCRYPTION=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build support for encryption. Fail if OpenSSL is not found\r\n--\u00a0\r\n-- Gandiva options:\r\n--\u00a0\r\n-- \u00a0 ARROW_GANDIVA_JAVA=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Build the Gandiva JNI wrappers\r\n-- \u00a0 ARROW_GANDIVA_STATIC_LIBSTDCPP=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Include -static-libstdc++ -static-libgcc when linking with\r\n-- \u00a0 \u00a0 \u00a0 Gandiva static libraries\r\n-- \u00a0 ARROW_GANDIVA_PC_CXX_FLAGS=\"\" [default=\"\"]\r\n-- \u00a0 \u00a0 \u00a0 Compiler flags to append when pre-compiling Gandiva operations\r\n--\u00a0\r\n-- Advanced developer options:\r\n--\u00a0\r\n-- \u00a0 ARROW_EXTRA_ERROR_CONTEXT=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 Compile with extra error context (line numbers, code)\r\n-- \u00a0 ARROW_OPTIONAL_INSTALL=OFF [default=OFF]\r\n-- \u00a0 \u00a0 \u00a0 If enabled install ONLY targets that have already been built. Please be\r\n-- \u00a0 \u00a0 \u00a0 advised that if this is enabled 'install' will fail silently on components\r\n-- \u00a0 \u00a0 \u00a0 that have not been built\r\n-- \u00a0 Outputting build configuration summary to /tmp/RtmpuQguxd/file3b88710a7be7/cmake_summary.json\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /tmp/RtmpuQguxd/file3b88710a7be7\r\n+ /usr/bin/cmake --build . --target install\r\n[ \u00a02%] Creating directories for 'utf8proc_ep'\r\n[ \u00a02%] Creating directories for 'boost_ep'\r\n[ \u00a04%] Performing download step (download, verify and extract) for 'boost_ep'\r\n[ \u00a04%] Performing download step (download, verify and extract) for 'utf8proc_ep'\r\n-- utf8proc_ep download command succeeded. \u00a0See also /tmp/RtmpuQguxd/file3b88710a7be7/utf8proc_ep-prefix/src/utf8proc_ep-stamp/utf8proc_ep-download-*.log\r\n[ \u00a05%] No update step for 'utf8proc_ep'\r\n[ \u00a06%] No patch step for 'utf8proc_ep'\r\n[ \u00a07%] Performing configure step for 'utf8proc_ep'\r\nCMake Error at /tmp/RtmpuQguxd/file3b88710a7be7/utf8proc_ep-prefix/src/utf8proc_ep-stamp/utf8proc_ep-configure-RELEASE.cmake:37 (message):\r\n\u00a0 Command failed: 1\r\n\u00a0 \u00a0'/usr/bin/cmake' '-DCMAKE_C_COMPILER=/usr/bin/ccache' '-DCMAKE_CXX_COMPILER=/usr/bin/g++' '-DCMAKE_AR=/usr/bin/ar' '-DCMAKE_RANLIB=/usr/bin/ranlib' '-DCMAKE_INSTALL_PREFIX=/tmp/RtmpuQguxd/file3b88710a7be7/utf8proc_ep-install' '-DCMAKE_BUILD_TYPE=RELEASE' '-DCMAKE_INSTALL_LIBDIR=lib' '-DBUILD_SHARED_LIBS=OFF' '-GUnix Makefiles' '/tmp/RtmpuQguxd/file3b88710a7be7/utf8proc_ep-prefix/src/utf8proc_ep'\r\n\u00a0 See also\r\n\u00a0 \u00a0 /tmp/RtmpuQguxd/file3b88710a7be7/utf8proc_ep-prefix/src/utf8proc_ep-stamp/utf8proc_ep-configure-*.log\r\n\r\n-- stdout output is:\r\n-- The C compiler identification is unknown\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - failed\r\n-- Check for working C compiler: /usr/bin/ccache\r\n-- Check for working C compiler: /usr/bin/ccache - broken\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"/tmp/RtmpuQguxd/file3b88710a7be7/utf8proc_ep-prefix/src/utf8proc_ep-build/CMakeFiles/CMakeOutput.log\".\r\nSee also \"/tmp/RtmpuQguxd/file3b88710a7be7/utf8proc_ep-prefix/src/utf8proc_ep-build/CMakeFiles/CMakeError.log\".\r\n-- stderr output is:\r\nCMake Error at /usr/share/cmake-3.21/Modules/CMakeTestCCompiler.cmake:69 (message):\r\n\u00a0 The C compiler\r\n\u00a0 \u00a0 \"/usr/bin/ccache\"\r\n\u00a0 is not able to compile a simple test program.\r\n\u00a0 It fails with the following output:\r\n\u00a0 \u00a0 Change Dir: /tmp/RtmpuQguxd/file3b88710a7be7/utf8proc_ep-prefix/src/utf8proc_ep-build/CMakeFiles/CMakeTmp\r\n\u00a0 \u00a0\u00a0\r\n\u00a0 \u00a0 Run Build Command(s):/usr/bin/make -f Makefile cmTC_994a6/fast && make[3]: Entering directory '/tmp/RtmpuQguxd/file3b88710a7be7/utf8proc_ep-prefix/src/utf8proc_ep-build/CMakeFiles/CMakeTmp'\r\n\u00a0 \u00a0 make \u00a0-f CMakeFiles/cmTC_994a6.dir/build.make CMakeFiles/cmTC_994a6.dir/build\r\n\u00a0 \u00a0 make[4]: Entering directory '/tmp/RtmpuQguxd/file3b88710a7be7/utf8proc_ep-prefix/src/utf8proc_ep-build/CMakeFiles/CMakeTmp'\r\n\u00a0 \u00a0 Building C object CMakeFiles/cmTC_994a6.dir/testCCompiler.c.o\r\n\u00a0 \u00a0 /usr/bin/ccache \u00a0 \u00a0-o CMakeFiles/cmTC_994a6.dir/testCCompiler.c.o -c /tmp/RtmpuQguxd/file3b88710a7be7/utf8proc_ep-prefix/src/utf8proc_ep-build/CMakeFiles/CMakeTmp/testCCompiler.c\r\n\u00a0 \u00a0 ccache: error: missing equal sign in \"CMakeFiles/cmTC_994a6.dir/testCCompiler.c.o\"\r\n\u00a0 \u00a0 make[4]: *** [CMakeFiles/cmTC_994a6.dir/build.make:78: CMakeFiles/cmTC_994a6.dir/testCCompiler.c.o] Error 1\r\n\u00a0 \u00a0 make[4]: Leaving directory '/tmp/RtmpuQguxd/file3b88710a7be7/utf8proc_ep-prefix/src/utf8proc_ep-build/CMakeFiles/CMakeTmp'\r\n\u00a0 \u00a0 make[3]: *** [Makefile:127: cmTC_994a6/fast] Error 2\r\n\u00a0 \u00a0 make[3]: Leaving directory '/tmp/RtmpuQguxd/file3b88710a7be7/utf8proc_ep-prefix/src/utf8proc_ep-build/CMakeFiles/CMakeTmp'\r\n\u00a0 \u00a0\u00a0\r\n\u00a0 \u00a0\u00a0\r\n\u00a0\u00a0\r\n\u00a0 CMake will not be able to correctly generate this project.\r\nCall Stack (most recent call first):\r\n\u00a0 CMakeLists.txt:7 (project)\r\n\u00a0\r\nCMake Error at /tmp/RtmpuQguxd/file3b88710a7be7/utf8proc_ep-prefix/src/utf8proc_ep-stamp/utf8proc_ep-configure-RELEASE.cmake:47 (message):\r\n\u00a0 Stopping after outputting logs.\r\n\r\nmake[2]: *** [CMakeFiles/utf8proc_ep.dir/build.make:92: utf8proc_ep-prefix/src/utf8proc_ep-stamp/utf8proc_ep-configure] Error 1\r\nmake[1]: *** [CMakeFiles/Makefile2:638: CMakeFiles/utf8proc_ep.dir/all] Error 2\r\nmake[1]: *** Waiting for unfinished jobs....\r\n-- boost_ep download command succeeded. \u00a0See also /tmp/RtmpuQguxd/file3b88710a7be7/boost_ep-prefix/src/boost_ep-stamp/boost_ep-download-*.log\r\n[ \u00a08%] No update step for 'boost_ep'\r\n[ \u00a09%] No patch step for 'boost_ep'\r\n[ 10%] No configure step for 'boost_ep'\r\n[ 11%] No build step for 'boost_ep'\r\n[ 12%] No install step for 'boost_ep'\r\n[ 13%] Completed 'boost_ep'\r\n[ 13%] Built target boost_ep\r\nmake: *** [Makefile:146: all] Error 2\r\n**** Error building Arrow C++. \u00a0\r\n------------------------- NOTE ---------------------------\r\nThere was an issue preparing the Arrow C++ libraries.\r\nSee https://arrow.apache.org/docs/r/articles/install.html\r\n---------------------------------------------------------\r\nERROR: configuration failed for package \u2018arrow\u2019\r\n```\r\n* removing \u2018/usr/lib/R/library/arrow\u2019\r\n* restoring previous \u2018/usr/lib/R/library/arrow\u2019\r\nWarning in install.packages :\r\n\u00a0 installation of package \u2018arrow\u2019 had non-zero exit status\r\nThe downloaded source packages are in\r\n\u00a0 \u00a0 \u2018/tmp/RtmpV7JvEV/downloaded_packages\u2019 \n```",
        "created_at": "2021-11-09T06:56:35.000Z",
        "updated_at": "2022-04-26T22:24:24.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: R",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-04-21T21:50:21.000Z"
    },
    "comments": [
        {
            "created_at": "2021-11-10T16:51:01.952Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14638?focusedCommentId=17441840) by Antoine Pitrou (apitrou):*\n`[~npr]` \u00a0"
        },
        {
            "created_at": "2021-11-10T17:07:09.127Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14638?focusedCommentId=17441845) by Jonathan Keane (jonkeane):*\nI'm working on a CI job to replicate this (I've replicated it locally, but need to push it to a branch)"
        },
        {
            "created_at": "2022-04-21T21:50:21.639Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14638?focusedCommentId=17526102) by Jonathan Keane (jonkeane):*\nIssue resolved by pull request 11666\n<https://github.com/apache/arrow/pull/11666>"
        }
    ]
}