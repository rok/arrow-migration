{
    "issue": {
        "title": "[R] segfault on calls to arrow::S3FileSystem$create",
        "body": "***Note**: This issue was originally created as [ARROW-14667](https://issues.apache.org/jira/browse/ARROW-14667). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI was trying out a colleague's example code today and ended up with a segfault. Their code was:\r\n\r\n```r\n\r\nlibrary(arrow)\r\n\r\nminio <- S3FileSystem$create(\r\n  access_key = \"\",\r\n  secret_key = \"\",\r\n  scheme = \"http\",\r\n  endpoint_override = \"data.ecoforecast.org\"\r\n)\r\n```\r\n\r\nThough I'm able to reproduce the segfault with a more minimal example like:\r\n\r\n```r\n\r\nlibrary(arrow)\r\nS3FileSystem$create()\r\n```\r\n\r\nThe output I get immediately in the R console is:\r\n\r\n\r\n```r\n\r\n> S3FileSystem$create()\r\n\r\n *** caught segfault ***\r\naddress 0x1a0, cause 'memory not mapped'\r\n\r\nTraceback:\r\n 1: (function (anonymous, access_key, secret_key, session_token,     role_arn, session_name, external_id, load_frequency, region,     endpoint_override, scheme, background_writes) {    .Call(`_arrow_fs___S3FileSystem__create`, anonymous, access_key,         secret_key, session_token, role_arn, session_name, external_id,         load_frequency, region, endpoint_override, scheme, background_writes)})(access_key = \"\", secret_key = \"\", session_token = \"\", role_arn = \"\",     session_name = \"\", external_id = \"\", load_frequency = 900L,     region = \"\", endpoint_override = \"\", scheme = \"\", background_writes = TRUE,     anonymous = FALSE)\r\n 2: exec(fs___S3FileSystem__create, !!!args)\r\n 3: S3FileSystem$create()\r\n```\r\n\r\nI've attached detailed info about my environment and a full core dump to the issue but the high level stuff is:\r\n\r\n- OS: macOS 12.0.1\n- R: 4.1.2\n- R arrow version: 6.0.0.2\n  \n  \n  \n  \u00a0",
        "created_at": "2021-11-10T22:08:23.000Z",
        "updated_at": "2021-11-19T11:34:33.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-11-11T18:32:34.000Z"
    },
    "comments": [
        {
            "created_at": "2021-11-11T12:08:45.187Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14667?focusedCommentId=17442256) by Nicola Crane (thisisnic):*\nThanks for reporting this Bryce. Here's the segfault with a little extra from the C++ debugger - will follow up with the C++ devs as I'm not sure what's happening here.\r\n```c++\n\r\n> S3FileSystem$create()\r\n\r\nThread 1 \"R\" received signal SIGSEGV, Segmentation fault.\r\n0x00007ffff0128369 in std::__atomic_base<long>::operator++ (this=0x178) at /usr/include/c++/9/bits/atomic_base.h:318\r\n318\t      operator++() noexcept\r\n```"
        },
        {
            "created_at": "2021-11-11T17:49:51.732Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14667?focusedCommentId=17442379) by Nicola Crane (thisisnic):*\nFurther investigation by `[~jonkeane]` found this to be an error in the R package's C++ code, where it was trying to use an object which hadn't yet been initialised.\u00a0 There is now a PR open for this, so `[~brycemecum]` , this should be fixed in the next nightly build.\u00a0 Thanks again for catching this!"
        },
        {
            "created_at": "2021-11-11T18:32:34.409Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14667?focusedCommentId=17442392) by Jonathan Keane (jonkeane):*\nIssue resolved by pull request 11680\n<https://github.com/apache/arrow/pull/11680>"
        }
    ]
}