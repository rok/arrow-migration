{
    "issue": {
        "title": "C++/Python: Check Boost/Arrow C++ABI for consistency",
        "body": "***Note**: This issue was originally created as [ARROW-851](https://issues.apache.org/jira/browse/ARROW-851). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen building with dependencies from conda-forge on a newer system with GCC, the C++ ABI versions can differ. We need to ensure that the versions match between Boost, arrow-cpp and pyarrow in our CMake scripts.\n\nDepending on this, we may need to pass `-D_GLIBCXX_USE_CXX11_ABI=0` to `CMAKE_CXX_FLAGS`.",
        "created_at": "2017-04-18T17:21:37.000Z",
        "updated_at": "2019-11-14T20:48:23.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-11-14T20:48:23.000Z"
    },
    "comments": [
        {
            "created_at": "2017-04-19T01:22:31.515Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-851?focusedCommentId=15973850) by Wes McKinney (wesm):*\nPer comments in ARROW-850, I think this is mostly a documentation issue. Is this something that can even be easily checked for? "
        },
        {
            "created_at": "2017-04-19T14:31:39.999Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-851?focusedCommentId=15974780) by Uwe Korn (uwe):*\nYes, we should be able to check this automatically in CMake. For 0.3, documentation should suffice but I can do a PR later on that does the check in CMake."
        },
        {
            "created_at": "2017-04-26T18:34:30.150Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-851?focusedCommentId=15985327) by Wes McKinney (wesm):*\nI made this not a release blocker. I added a note about using gcc 4.8 or 4.9 with conda-based toolchain (https://github.com/apache/arrow/blob/master/python/doc/source/development.rst) \u2013 if the user is getting all of their packages from the Linux package manager, then this issue becomes moot because the toolchain will all be consistent. The conda case of mixing gcc/clang toolchains becomes a bit more esoteric, then"
        },
        {
            "created_at": "2019-11-14T12:06:38.059Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-851?focusedCommentId=16974176) by Antoine Pitrou (apitrou):*\nIs this issue still relevant?"
        },
        {
            "created_at": "2019-11-14T20:48:23.686Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-851?focusedCommentId=16974592) by Uwe Korn (uwe):*\nconda-forge moved to the new CXX ABI and thus this is no longer relevant."
        }
    ]
}