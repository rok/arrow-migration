{
    "issue": {
        "title": "Identify selected row when using filters",
        "body": "***Note**: This issue was originally created as [ARROW-13518](https://issues.apache.org/jira/browse/ARROW-13518). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI created a proposed enhancement to speed up reading of specific rows arrow-13517 https://issues.apache.org/jira/browse/ARROW-13517\r\n\r\nproposing extending the functions that provides filter parquet.read_table (<https://arrow.apache.org/docs/python/generated/pyarrow.parquet.read_table.html#pyarrow.parquet.read_table>) to support returning actual row numbers (e.g, row_group and row_index).\u00a0\r\n\r\nwith the proposed enhancement, this can provide for faster reading of the data (e.g. by caching the return indices, and reading the full data when needed).\u00a0\r\n\r\nproposed implementation will be to add 2 pseudo columns, which can be requested in the columns list. E.g., columns=[ \u2018$row_group\u2019, \u2018$row_index\u2019, \u2018dealid\u2019, \u2026] or similar.\r\n \\* $row_group - 0 based row group index\r\n \\* $row_index - 0 \u00a0based position within the row group\r\n \\* $row_file_index - 0 based position in the file (not critical), can be constructed from the other two\r\n\r\n\u00a0\r\n\r\nnot sure if this requires change to the c++ interface, or just to the python part of pyarrow.\r\n\r\n\u00a0",
        "created_at": "2021-08-01T12:21:12.000Z",
        "updated_at": "2021-08-10T20:54:51.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Parquet",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-08-10T20:54:51.185Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13518?focusedCommentId=17396886) by Weston Pace (westonpace):*\nARROW-13599 is somewhat related."
        }
    ]
}