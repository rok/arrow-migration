{
    "issue": {
        "title": "[Python] Need a lite version of pyarrow",
        "body": "***Note**: This issue was originally created as [ARROW-6776](https://issues.apache.org/jira/browse/ARROW-6776). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently I am building a library packages on top of pyarrow, so I include pyarrow as a dependency and ship it to our customer. However, when our customer installed our packages, it will also install pyarrow and pyarrow's dependency (numpy). However the dependency size is huge.\u00a0\r\n```bash\n\r\n(py36env) [hyu@c6x64-hyu-newuser-final-clone connector]$ ls -l --block-size=M /home/hyu/py36env/lib/python3.6/site-packages/pyarrow/ \r\ntotal 186M\r\n```\r\n\u00a0And numpy is around 80MB. Total is more than 250 MB.\r\n\r\nOur customer want to bundle all dependency and run the code inside AWS Lambda, however they hit the size limit and failed to run the code.\r\n\r\nLooking into the pyarrow, I saw multiple .so files are shipped both with and without version suffix, I wonder if you can remove the one of them (either with or without suffix), it will at least reduce the package size by half.\r\n\r\nFurther, our library just want to use IPC and read data as record batch, I don't need arrow flight at all (which is the biggest .so file and takes around 100 MB). I wonder if you can push a lite version of the pyarrow so that I can specify lite version as the dependency. Or maybe I need to build my own lite version and push it pypi. However, this approach cause further problem if our customer is using the \"fat\" version of pyarrow unless you the change the namespace of lite version of pyarrow.\r\n\r\nAnother alternative is that I bundle the pyarrow with our library ( copy the whole directory into vendored namespace) and ship it to our customer without specifying pyarrow as a dependency. The advantage of this one is that I can build pyarrow with whatever option/sub-module/libraries I need. However, I tried a lot but failed because pyarrow use absolute import and it will fail to import the script in the new location.\u00a0\r\n\r\nAny insight how I should resolve this issue?",
        "created_at": "2019-10-03T01:08:34.000Z",
        "updated_at": "2020-06-29T14:10:51.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-06-29T14:10:51.000Z"
    },
    "comments": [
        {
            "created_at": "2019-10-03T01:31:57.641Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6776?focusedCommentId=16943279) by Wes McKinney (wesm):*\nOur wheel build scripts are found here\r\n\r\nhttps://github.com/apache/arrow/tree/master/python/manylinux1\r\n\r\nIt's easy to build your own wheels, just follow the README.\r\n\r\nWe are shipping many optional components that you can turn off and make smaller wheels.\r\n\r\nThe duplicated shared library issue is https://issues.apache.org/jira/browse/ARROW-5082. You are welcome to try to resolve this. I and my team have decided to not spend time on wheel-related issues anymore, but other Arrow community members are welcome to do what they wish"
        },
        {
            "created_at": "2020-06-29T10:47:12.973Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6776?focusedCommentId=17147676) by Antoine Pitrou (apitrou):*\nThe latest PyArrow wheels are much lighter:\r\n```Java\n\r\n$ du -hs venv-3.7/lib/python3.7/site-packages/pyarrow/\r\n57M\tvenv-3.7/lib/python3.7/site-packages/pyarrow/\r\n```\r\n\r\nPS: see here for nightly PyArrow wheels:\r\nhttps://arrow.apache.org/docs/python/install.html#installing-nightly-packages\r\n"
        },
        {
            "created_at": "2020-06-29T14:10:51.336Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6776?focusedCommentId=17147815) by Wes McKinney (wesm):*\nYes indeed. I'm closing this as resolved. "
        }
    ]
}