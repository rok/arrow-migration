{
    "issue": {
        "title": "[C++] Add extraction function support for time32/time64",
        "body": "***Note**: This issue was originally created as [ARROW-14111](https://issues.apache.org/jira/browse/ARROW-14111). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\ntime64('ns') should support:\r\n - hour\r\n - minute\r\n - second\r\n - millisecond\r\n - microsecond\r\n - nanosecond\r\n - subsecond\r\n\r\ntime64('us'), time32('ms'), and time32('s') should support those values that fit their resolution.\r\n\r\nIt's probably debatable if something like millisecond(time32('s')) should be supported but for ease of use it would probably be simplest to just hard code these to return 0.",
        "created_at": "2021-09-23T22:22:26.000Z",
        "updated_at": "2021-09-27T13:35:06.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-09-27T13:33:28.000Z"
    },
    "comments": [
        {
            "created_at": "2021-09-24T10:35:14.384Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14111?focusedCommentId=17419715) by Joris Van den Bossche (jorisvandenbossche):*\n> It's probably debatable if something like millisecond(time32('s')) should be supported but for ease of use it would probably be simplest to just hard code these to return 0.\r\n\r\nIt can be consistent with how this is handled for timestamp[s], and I think we indeed return 0 for those"
        },
        {
            "created_at": "2021-09-27T13:33:28.677Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14111?focusedCommentId=17420744) by David Li (lidavidm):*\nIssue resolved by pull request 11229\n<https://github.com/apache/arrow/pull/11229>"
        }
    ]
}