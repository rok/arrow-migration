{
    "issue": {
        "title": "[gandiva] floating point division shouldn't cause errors",
        "body": "***Note**: This issue was originally created as [ARROW-3991](https://issues.apache.org/jira/browse/ARROW-3991). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nfor division, gandiva explicitly checks if the divisor is zero and raises an error.\r\n\r\nThis is correct for integer division. For float point divisions, it should just return infinity.\r\n\r\nhttps://www.gnu.org/software/libc/manual/html_node/Infinity-and-NaN.html#Infinity-and-NaN",
        "created_at": "2018-12-10T18:35:23.000Z",
        "updated_at": "2018-12-13T10:20:05.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++ - Gandiva",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2018-12-13T10:20:05.000Z"
    },
    "comments": [
        {
            "created_at": "2018-12-13T10:19:01.196Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3991?focusedCommentId=16720010) by Pindikura Ravindra (pravindra):*\nI checked Oracle, SQLServer and PostgreSQL - all of them throw a divide-by-zero for floating point types too. So, the current behavior of gandiva is already correct."
        }
    ]
}