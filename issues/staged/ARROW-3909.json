{
    "issue": {
        "title": "[Python] Table.from_pandas call that seemingly should zero copy does not",
        "body": "***Note**: This issue was originally created as [ARROW-3909](https://issues.apache.org/jira/browse/ARROW-3909). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhile doing some performance testing, I noticed that a `Table.from_pandas` call that ought to be zero-copy / free was taking 50ms\r\n\r\n```Java\n\r\nimport pandas as pd\r\nimport pyarrow as pa\r\nimport numpy as np\r\n\r\nK = 1000\r\nN = 50000000\r\ndf = pd.DataFrame({'ints': np.tile(np.arange(K), N // K)})\r\ntable = pa.Table.from_pandas(df)\r\n```\r\n\r\nI see\r\n\r\n```Java\n\r\nIn [14]: timeit table = pa.Table.from_pandas(df)\r\n51.9 ms \u00b1 751 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 10 loops each)\r\n```\r\n\r\nI haven't determined what's going on (is it counting nulls?), and initial attempts to get a Flamegraph produced a bunch of \"unknown\" entries",
        "created_at": "2018-11-30T00:15:49.000Z",
        "updated_at": "2018-11-30T00:49:37.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2018-11-30T00:49:37.000Z"
    },
    "comments": [
        {
            "created_at": "2018-11-30T00:17:02.789Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3909?focusedCommentId=16704053) by Wes McKinney (wesm):*\nNote that no memory is being allocated. So this is weird\r\n\r\n```Java\n\r\nIn [3]: table = pa.Table.from_pandas(df)\r\n\r\nIn [4]: pa.total_allocated_bytes()\r\nOut[4]: 0\r\n```"
        },
        {
            "created_at": "2018-11-30T00:49:37.704Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3909?focusedCommentId=16704081) by Wes McKinney (wesm):*\nI'm a little slow today. The problem is materializing the `RangeIndex`\r\n\r\n```Java\n\r\nIn [21]: timeit table = pa.Table.from_pandas(df, preserve_index=False)\r\n283 \u00b5s \u00b1 5.33 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\r\n```"
        }
    ]
}