{
    "issue": {
        "title": "[C++] Add RecordBatch projection functionality",
        "body": "***Note**: This issue was originally created as [ARROW-6368](https://issues.apache.org/jira/browse/ARROW-6368). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\ndefine classes RecordBatchProjector (which projects from one schema to another, augmenting with null/constant columns where necessary) and a subtype of RecordBatchIterator which projects each batch yielded by a wrapped iterator.",
        "created_at": "2019-08-27T14:26:43.000Z",
        "updated_at": "2019-09-09T12:47:40.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-09-09T12:39:58.000Z"
    },
    "comments": [
        {
            "created_at": "2019-08-27T15:08:21.751Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6368?focusedCommentId=16916790) by Wes McKinney (wesm):*\nYou might consider making this general enough to handle type alterations or other operations, too. This could be addressed later also"
        },
        {
            "created_at": "2019-08-27T16:54:28.704Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6368?focusedCommentId=16916880) by Ben Kietzman (bkietz):*\nIf the operation is potentially expensive then we might want to avoid hiding it in the projector; in the case of augmenting as described above the columns to augment can be generated once then reused for each yielded batch."
        },
        {
            "created_at": "2019-09-09T12:39:58.517Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6368?focusedCommentId=16925648) by Francois Saint-Jacques (fsaintjacques):*\nIssue resolved by pull request 5207\n<https://github.com/apache/arrow/pull/5207>"
        }
    ]
}