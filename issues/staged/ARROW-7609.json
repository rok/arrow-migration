{
    "issue": {
        "title": "[C++] Build error by passing -DARROW_HIVESERVER2=ON",
        "body": "***Note**: This issue was originally created as [ARROW-7609](https://issues.apache.org/jira/browse/ARROW-7609). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently using Apple Clang 11.0.0 and Thrift 0.13.0 on macOS Mojave 10.14.4.\r\nI got the following errors by passing -DARROW_HIVESERVER2=ON.\r\n```java\n\r\nIn file included from /Users/shiro/dev/arrow/cpp/build/src/arrow/dbi/hiveserver2/BeeswaxService.cpp:7:\r\n/Users/shiro/dev/arrow/cpp/build/src/arrow/dbi/hiveserver2/BeeswaxService.h:29:17: error: empty paragraph passed to '@param' command [-Werror,-Wdocumentation]\r\n   * @param query\r\n     ~~~~~~~~~~~^\r\n/Users/shiro/dev/arrow/cpp/build/src/arrow/dbi/hiveserver2/BeeswaxService.h:36:17: error: empty paragraph passed to '@param' command [-Werror,-Wdocumentation]\r\n   * @param query\r\n     ~~~~~~~~~~~^\r\n/Users/shiro/dev/arrow/cpp/build/src/arrow/dbi/hiveserver2/BeeswaxService.h:37:21: error: empty paragraph passed to '@param' command [-Werror,-Wdocumentation]\r\n   * @param clientCtx\r\n     ~~~~~~~~~~~~~~~^\r\n/Users/shiro/dev/arrow/cpp/build/src/arrow/dbi/hiveserver2/BeeswaxService.h:44:17: error: empty paragraph passed to '@param' command [-Werror,-Wdocumentation]\r\n   * @param query\r\n     ~~~~~~~~~~~^\r\n/Users/shiro/dev/arrow/cpp/build/src/arrow/dbi/hiveserver2/BeeswaxService.h:53:20: error: empty paragraph passed to '@param' command [-Werror,-Wdocumentation]\r\n   * @param query_id\r\n     ~~~~~~~~~~~~~~^\r\n/Users/shiro/dev/arrow/cpp/build/src/arrow/dbi/hiveserver2/BeeswaxService.h:54:22: error: empty paragraph passed to '@param' command [-Werror,-Wdocumentation]\r\n   * @param start_over\r\n     ~~~~~~~~~~~~~~~~^\r\n/Users/shiro/dev/arrow/cpp/build/src/arrow/dbi/hiveserver2/BeeswaxService.h:55:22: error: empty paragraph passed to '@param' command [-Werror,-Wdocumentation]\r\n   * @param fetch_size\r\n     ~~~~~~~~~~~~~~~~^\r\n/Users/shiro/dev/arrow/cpp/build/src/arrow/dbi/hiveserver2/BeeswaxService.h:62:18: error: empty paragraph passed to '@param' command [-Werror,-Wdocumentation]\r\n   * @param handle\r\n     ~~~~~~~~~~~~^\r\n/Users/shiro/dev/arrow/cpp/build/src/arrow/dbi/hiveserver2/BeeswaxService.h:69:18: error: empty paragraph passed to '@param' command [-Werror,-Wdocumentation]\r\n   * @param handle\r\n     ~~~~~~~~~~~~^\r\n/Users/shiro/dev/arrow/cpp/build/src/arrow/dbi/hiveserver2/BeeswaxService.h:76:13: error: empty paragraph passed to '@param' command [-Werror,-Wdocumentation]\r\n   * @param s\r\n     ~~~~~~~^\r\n/Users/shiro/dev/arrow/cpp/build/src/arrow/dbi/hiveserver2/BeeswaxService.h:89:19: error: empty paragraph passed to '@param' command [-Werror,-Wdocumentation]\r\n   * @param context\r\n     ~~~~~~~~~~~~~^\r\n11 errors generated.\r\n\r\n```\r\nCMake command:\r\n```java\n\r\ncmake -DCMAKE_BUILD_TYPE=debug -DARROW_GANDIVA=ON -DARROW_PARQUET=ON -DARROW_PLASMA=ON -DARROW_FLIGHT=ON -DARROW_WITH_ZLIB=ON -DARROW_JSON=ON -DARROW_CSV=ON -DARROW_ORC=ON -DARROW_TENSORFLOW=ON -DARROW_HIVESERVER2=ON ..\n```\r\nOutput of CMake:\r\n```java\n\r\n-- Building using CMake version: 3.15.4\r\n-- The C compiler identification is AppleClang 11.0.0.11000033\r\n-- The CXX compiler identification is AppleClang 11.0.0.11000033\r\n-- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc\r\n-- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++\r\n-- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\n-- Arrow version: 1.0.0 (full: '1.0.0-SNAPSHOT')\r\n-- Arrow SO version: 100 (full: 100.0.0)\r\n-- Found PkgConfig: /usr/local/bin/pkg-config (found version \"0.29.2\")\r\n-- clang-tidy not found\r\n-- clang-format not found\r\n-- infer not found\r\n-- Found PythonInterp: /Users/shiro/.pyenv/shims/python (found version \"3.6.1\")\r\n-- Using ccache: /usr/local/bin/ccache\r\n-- Found cpplint executable at /Users/shiro/dev/arrow/cpp/build-support/cpplint.py\r\n-- Performing Test CXX_SUPPORTS_SSE4_2\r\n-- Performing Test CXX_SUPPORTS_SSE4_2 - Success\r\n-- Performing Test CXX_SUPPORTS_ALTIVEC\r\n-- Performing Test CXX_SUPPORTS_ALTIVEC - Success\r\n-- Performing Test CXX_SUPPORTS_ARMCRC\r\n-- Performing Test CXX_SUPPORTS_ARMCRC - Failed\r\n-- Performing Test CXX_SUPPORTS_ARMV8_CRC_CRYPTO\r\n-- Performing Test CXX_SUPPORTS_ARMV8_CRC_CRYPTO - Failed\r\n-- Arrow build warning level: CHECKIN\r\nConfigured for DEBUG build (set with cmake -DCMAKE_BUILD_TYPE={release,debug,...})\r\n-- Build Type: DEBUG\r\n-- Using AUTO approach to find dependencies\r\n-- ARROW_AWSSDK_BUILD_VERSION: 1.7.160\r\n-- ARROW_BOOST_BUILD_VERSION: 1.71.0\r\n-- ARROW_BROTLI_BUILD_VERSION: v1.0.7\r\n-- ARROW_BZIP2_BUILD_VERSION: 1.0.8\r\n-- ARROW_CARES_BUILD_VERSION: 1.15.0\r\n-- ARROW_GBENCHMARK_BUILD_VERSION: v1.5.0\r\n-- ARROW_GFLAGS_BUILD_VERSION: v2.2.0\r\n-- ARROW_GLOG_BUILD_VERSION: v0.3.5\r\n-- ARROW_GRPC_BUILD_VERSION: v1.24.3\r\n-- ARROW_GTEST_BUILD_VERSION: 1.8.1\r\n-- ARROW_JEMALLOC_BUILD_VERSION: 5.2.1\r\n-- ARROW_LZ4_BUILD_VERSION: v1.9.2\r\n-- ARROW_MIMALLOC_BUILD_VERSION: 270e765454f98e8bab9d42609b153425f749fff6\r\n-- ARROW_ORC_BUILD_VERSION: 1.5.7\r\n-- ARROW_PROTOBUF_BUILD_VERSION: v3.7.1\r\n-- ARROW_RAPIDJSON_BUILD_VERSION: 2bbd33b33217ff4a73434ebf10cdac41e2ef5e34\r\n-- ARROW_RE2_BUILD_VERSION: 2019-08-01\r\n-- ARROW_SNAPPY_BUILD_VERSION: 1.1.7\r\n-- ARROW_THRIFT_BUILD_VERSION: 0.12.0\r\n-- ARROW_THRIFT_BUILD_MD5_CHECKSUM: 3deebbb4d1ca77dd9c9e009a1ea02183\r\n-- ARROW_ZLIB_BUILD_VERSION: 1.2.11\r\n-- ARROW_ZSTD_BUILD_VERSION: v1.4.3\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success\r\n-- Found Threads: TRUE\r\n-- Found Boost: /usr/local/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found suitable version \"1.72.0\", minimum required is \"1.58\") found components:  regex system filesystem\r\n-- Boost include dir: /usr/local/include\r\n-- Boost libraries: Boost::system;Boost::filesystem\r\n-- Found OpenSSL: /usr/local/opt/openssl@1.1/lib/libcrypto.dylib (found suitable version \"1.1.1d\", minimum required is \"1.0.2\") \r\n-- Found OpenSSL Crypto Library: /usr/local/opt/openssl@1.1/lib/libcrypto.dylib\r\n-- Building with OpenSSL (Version: 1.1.1d) support\r\n-- Checking for module 'thrift'\r\n--   Found thrift, version 0.13.0\r\n-- Found Thrift: /usr/local/Cellar/thrift/0.13.0/lib/libthrift.dylib (found suitable version \"0.13.0\", minimum required is \"0.10.0\")\r\n-- Found Protobuf: /usr/local/lib/libprotobuf.dylib (found suitable version \"3.10.0\", minimum required is \"3.7.0\")\r\n-- Found protoc: /usr/local/bin/protoc\r\n-- Found libprotoc: /usr/local/lib/libprotoc.dylib\r\n-- Found libprotobuf: /usr/local/lib/libprotobuf.dylib\r\n-- Found protobuf headers: /usr/local/include\r\n-- Building (vendored) jemalloc from source\r\n-- RapidJSON found. Headers: /usr/local/Cellar/rapidjson/1.1.0/include\r\n-- Found ZLIB: /usr/lib/libz.dylib (found version \"1.2.11\")\r\n-- Checking for module 'liblz4'\r\n--   Found liblz4, version 1.9.2\r\n-- Found Lz4: /usr/local/Cellar/lz4/1.9.2/lib/liblz4.dylib\r\n-- Checking for module 're2'\r\n--   Found re2, version 0.0.0\r\n-- Found RE2: /usr/local/Cellar/re2/20190701/lib/libre2.dylib\r\n-- Building c-ares from source\r\n-- Checking for module 'grpc++'\r\n--   Found grpc++, version 1.23.0\r\n-- /usr/local/Cellar/grpc/1.23.0_3/lib;/usr/local/Cellar/grpc/1.23.0_3/lib\r\n-- Found gRPCAlt: /usr/local/Cellar/grpc/1.23.0_3/include (found suitable version \"1.23.0\", minimum required is \"1.17.0\")\r\n-- Found hdfs.h at: /Users/shiro/dev/arrow/cpp/thirdparty/hadoop/include/hdfs.h\r\nBuilding Apache ORC from source\r\n-- Found ORC static library: /Users/shiro/dev/arrow/cpp/build/orc_ep-install/lib/liborc.a\r\n-- Found ORC headers: /Users/shiro/dev/arrow/cpp/build/orc_ep-install/include\r\n-- CMAKE_C_FLAGS:  -Qunused-arguments -ggdb -O0   -Wall -Wextra -Wdocumentation -Wno-missing-braces -Wno-unused-parameter -Wno-unknown-warning-option -Wno-constant-logical-operand -Werror -Wno-unknown-warning-option -stdlib=libc++ -msse4.2 -maltivec\r\n-- CMAKE_CXX_FLAGS:   -Qunused-arguments -fcolor-diagnostics -ggdb -O0  -Wall -Wextra -Wdocumentation -Wno-missing-braces -Wno-unused-parameter -Wno-unknown-warning-option -Wno-constant-logical-operand -Werror -Wno-unknown-warning-option -stdlib=libc++ -msse4.2 -maltivec\r\nUsing Thrift compiler: /usr/local/Cellar/thrift/0.13.0/bin/thrift\r\n-- Looking for backtrace\r\n-- Looking for backtrace - found\r\n-- backtrace facility detected in default set of libraries\r\n-- Found Backtrace: /usr/include\r\nCMake Warning at cmake_modules/FindLLVM.cmake:28 (find_package):\r\n  Could not find a configuration file for package \"LLVM\" that is compatible\r\n  with requested version \"7.0\".  The following configuration files were considered but not accepted:    /usr/local/opt/llvm@7/lib/cmake/llvm/LLVMConfig.cmake, version: 7.1.0\r\n    /usr/local/opt/llvm@7/lib/cmake/llvm/llvm-config.cmake, version: unknownCall Stack (most recent call first):\r\n  src/gandiva/CMakeLists.txt:31 (find_package)\r\n-- Found LLVM 7.1.0\r\n-- Using LLVMConfig.cmake in: /usr/local/opt/llvm@7/lib/cmake/llvm\r\n-- Found llvm-link /usr/local/opt/llvm@7/bin/llvm-link\r\n-- Found clang 7.1.0 /usr/local/opt/llvm@7/bin/clang-7\r\n-- ---------------------------------------------------------------------\r\n-- Arrow version:                                 1.0.0-SNAPSHOT\r\n--\r\n-- Build configuration summary:\r\n--   Generator: Unix Makefiles\r\n--   Build type: DEBUG\r\n--   Source directory: /Users/shiro/dev/arrow/cpp\r\n--   Install prefix: /usr/local\r\n--\r\n-- Compile and link options:\r\n--\r\n--   ARROW_CXXFLAGS                                                        [default=\"\"] \"\"\r\n--       Compiler flags to append when compiling Arrow\r\n--\r\n--   ARROW_BUILD_STATIC                                                    [default=ON] ON\r\n--       Build static libraries\r\n--\r\n--   ARROW_BUILD_SHARED                                                    [default=ON] ON\r\n--       Build shared libraries\r\n--\r\n--   ARROW_NO_DEPRECATED_API                                             [default=OFF] OFF\r\n--       Exclude deprecated APIs from build\r\n--\r\n--   ARROW_USE_CCACHE                                                      [default=ON] ON\r\n--       Use ccache when compiling (if available)\r\n--\r\n--   ARROW_USE_LD_GOLD                                                   [default=OFF] OFF\r\n--       Use ld.gold for linking on Linux (if available)\r\n--\r\n--   ARROW_USE_SIMD                                                        [default=ON] ON\r\n--       Build with SIMD optimizations\r\n--\r\n--   ARROW_SSE42                                                           [default=ON] ON\r\n--       Build with SSE4.2 if compiler has support\r\n--\r\n--   ARROW_ALTIVEC                                                         [default=ON] ON\r\n--       Build with Altivec if compiler has support\r\n--\r\n--   ARROW_RPATH_ORIGIN                                                  [default=OFF] OFF\r\n--       Build Arrow libraries with RATH set to $ORIGIN\r\n--\r\n--   ARROW_INSTALL_NAME_RPATH                                              [default=ON] ON\r\n--       Build Arrow libraries with install_name set to @rpath\r\n--\r\n--   ARROW_GGDB_DEBUG                                                      [default=ON] ON\r\n--       Pass -ggdb flag to debug builds\r\n--\r\n--\r\n-- Test and benchmark options:\r\n--\r\n--   ARROW_BUILD_EXAMPLES                                                [default=OFF] OFF\r\n--       Build the Arrow examples\r\n--\r\n--   ARROW_BUILD_TESTS                                                   [default=OFF] OFF\r\n--       Build the Arrow googletest unit tests\r\n--\r\n--   ARROW_BUILD_INTEGRATION                                             [default=OFF] OFF\r\n--       Build the Arrow integration test executables\r\n--\r\n--   ARROW_BUILD_BENCHMARKS                                              [default=OFF] OFF\r\n--       Build the Arrow micro benchmarks\r\n--\r\n--   ARROW_BUILD_BENCHMARKS_REFERENCE                                    [default=OFF] OFF\r\n--       Build the Arrow micro reference benchmarks\r\n--\r\n--   ARROW_TEST_LINKAGE                                     [default=shared|static] shared\r\n--       Linkage of Arrow libraries with unit tests executables.\r\n--\r\n--   ARROW_FUZZING                                                       [default=OFF] OFF\r\n--       Build Arrow Fuzzing executables\r\n--\r\n--   ARROW_LARGE_MEMORY_TESTS                                            [default=OFF] OFF\r\n--       Enable unit tests which use large memory\r\n--\r\n--\r\n-- Lint options:\r\n--\r\n--   ARROW_ONLY_LINT                                                     [default=OFF] OFF\r\n--       Only define the lint and check-format targets\r\n--\r\n--   ARROW_VERBOSE_LINT                                                  [default=OFF] OFF\r\n--       If off, 'quiet' flags will be passed to linting tools\r\n--\r\n--   ARROW_GENERATE_COVERAGE                                             [default=OFF] OFF\r\n--       Build with C++ code coverage enabled\r\n--\r\n--\r\n-- Checks options:\r\n--\r\n--   ARROW_TEST_MEMCHECK                                                 [default=OFF] OFF\r\n--       Run the test suite using valgrind --tool=memcheck\r\n--\r\n--   ARROW_USE_ASAN                                                      [default=OFF] OFF\r\n--       Enable Address Sanitizer checks\r\n--\r\n--   ARROW_USE_TSAN                                                      [default=OFF] OFF\r\n--       Enable Thread Sanitizer checks\r\n--\r\n--   ARROW_USE_UBSAN                                                     [default=OFF] OFF\r\n--       Enable Undefined Behavior sanitizer checks\r\n--\r\n--\r\n-- Project component options:\r\n--\r\n--   ARROW_BUILD_UTILITIES                                               [default=OFF] OFF\r\n--       Build Arrow commandline utilities\r\n--\r\n--   ARROW_COMPUTE                                                        [default=OFF] ON\r\n--       Build the Arrow Compute Modules\r\n--\r\n--   ARROW_CSV                                                            [default=OFF] ON\r\n--       Build the Arrow CSV Parser Module\r\n--\r\n--   ARROW_CUDA                                                          [default=OFF] OFF\r\n--       Build the Arrow CUDA extensions (requires CUDA toolkit)\r\n--\r\n--   ARROW_DATASET                                                       [default=OFF] OFF\r\n--       Build the Arrow Dataset Modules\r\n--\r\n--   ARROW_FILESYSTEM                                                    [default=OFF] OFF\r\n--       Build the Arrow Filesystem Layer\r\n--\r\n--   ARROW_FLIGHT                                                         [default=OFF] ON\r\n--       Build the Arrow Flight RPC System (requires GRPC, Protocol Buffers)\r\n--\r\n--   ARROW_GANDIVA                                                        [default=OFF] ON\r\n--       Build the Gandiva libraries\r\n--\r\n--   ARROW_HDFS                                                          [default=OFF] OFF\r\n--       Build the Arrow HDFS bridge\r\n--\r\n--   ARROW_HIVESERVER2                                                    [default=OFF] ON\r\n--       Build the HiveServer2 client and Arrow adapter\r\n--\r\n--   ARROW_IPC                                                             [default=ON] ON\r\n--       Build the Arrow IPC extensions\r\n--\r\n--   ARROW_JEMALLOC                                                        [default=ON] ON\r\n--       Build the Arrow jemalloc-based allocator\r\n--\r\n--   ARROW_JNI                                                           [default=OFF] OFF\r\n--       Build the Arrow JNI lib\r\n--\r\n--   ARROW_JSON                                                           [default=OFF] ON\r\n--       Build Arrow with JSON support (requires RapidJSON)\r\n--\r\n--   ARROW_MIMALLOC                                                      [default=OFF] OFF\r\n--       Build the Arrow mimalloc-based allocator\r\n--\r\n--   ARROW_PARQUET                                                        [default=OFF] ON\r\n--       Build the Parquet libraries\r\n--\r\n--   ARROW_ORC                                                            [default=OFF] ON\r\n--       Build the Arrow ORC adapter\r\n--\r\n--   ARROW_PLASMA                                                         [default=OFF] ON\r\n--       Build the plasma object store along with Arrow\r\n--\r\n--   ARROW_PLASMA_JAVA_CLIENT                                            [default=OFF] OFF\r\n--       Build the plasma object store java client\r\n--\r\n--   ARROW_PYTHON                                                        [default=OFF] OFF\r\n--       Build the Arrow CPython extensions\r\n--\r\n--   ARROW_S3                                                            [default=OFF] OFF\r\n--       Build Arrow with S3 support (requires the AWS SDK for C++)\r\n--\r\n--   ARROW_TENSORFLOW                                                     [default=OFF] ON\r\n--       Build Arrow with TensorFlow support enabled\r\n--\r\n--\r\n-- Thirdparty toolchain options:\r\n--\r\n--   ARROW_DEPENDENCY_SOURCE                 [default=AUTO|BUNDLED|SYSTEM|CONDA|BREW] AUTO\r\n--       Method to use for acquiring arrow's build dependencies\r\n--\r\n--   ARROW_VERBOSE_THIRDPARTY_BUILD                                      [default=OFF] OFF\r\n--       Show output from ExternalProjects rather than just logging to files\r\n--\r\n--   ARROW_BOOST_USE_SHARED                                                [default=ON] ON\r\n--       Rely on boost shared libraries where relevant\r\n--\r\n--   ARROW_PROTOBUF_USE_SHARED                                             [default=ON] ON\r\n--       Rely on Protocol Buffers shared libraries where relevant\r\n--\r\n--   ARROW_GFLAGS_USE_SHARED                                               [default=ON] ON\r\n--       Rely on GFlags shared libraries where relevant\r\n--\r\n--   ARROW_WITH_BACKTRACE                                                  [default=ON] ON\r\n--       Build with backtrace support\r\n--\r\n--   ARROW_USE_GLOG                                                      [default=OFF] OFF\r\n--       Build libraries with glog support for pluggable logging\r\n--\r\n--   ARROW_WITH_BROTLI                                                   [default=OFF] OFF\r\n--       Build with Brotli compression\r\n--\r\n--   ARROW_WITH_BZ2                                                      [default=OFF] OFF\r\n--       Build with BZ2 compression\r\n--\r\n--   ARROW_WITH_LZ4                                                       [default=OFF] ON\r\n--       Build with lz4 compression\r\n--\r\n--   ARROW_WITH_SNAPPY                                                    [default=OFF] ON\r\n--       Build with Snappy compression\r\n--\r\n--   ARROW_WITH_ZLIB                                                      [default=OFF] ON\r\n--       Build with zlib compression\r\n--\r\n--   ARROW_WITH_ZSTD                                                     [default=OFF] OFF\r\n--       Build with zstd compression\r\n--\r\n--\r\n-- Parquet options:\r\n--\r\n--   PARQUET_MINIMAL_DEPENDENCY                                          [default=OFF] OFF\r\n--       Depend only on Thirdparty headers to build libparquet.\r\n--       Always OFF if building binaries\r\n--\r\n--   PARQUET_BUILD_EXECUTABLES                                           [default=OFF] OFF\r\n--       Build the Parquet executable CLI tools. Requires static libraries to be built.\r\n--\r\n--   PARQUET_BUILD_EXAMPLES                                              [default=OFF] OFF\r\n--       Build the Parquet examples. Requires static libraries to be built.\r\n--\r\n--   PARQUET_REQUIRE_ENCRYPTION                                          [default=OFF] OFF\r\n--       Build support for encryption. Fail if OpenSSL is not found\r\n--\r\n--\r\n-- Gandiva options:\r\n--\r\n--   ARROW_GANDIVA_JAVA                                                  [default=OFF] OFF\r\n--       Build the Gandiva JNI wrappers\r\n--\r\n--   ARROW_GANDIVA_STATIC_LIBSTDCPP                                      [default=OFF] OFF\r\n--       Include -static-libstdc++ -static-libgcc when linking with\r\n--       Gandiva static libraries\r\n--\r\n--   ARROW_GANDIVA_PC_CXX_FLAGS                                            [default=\"\"] \"\"\r\n--       Compiler flags to append when pre-compiling Gandiva operations\r\n--\r\n--\r\n-- Advanced developer options:\r\n--\r\n--   ARROW_EXTRA_ERROR_CONTEXT                                           [default=OFF] OFF\r\n--       Compile with extra error context (line numbers, code)\r\n--\r\n--   ARROW_OPTIONAL_INSTALL                                              [default=OFF] OFF\r\n--       If enabled install ONLY targets that have already been built. Please be\r\n--       advised that if this is enabled 'install' will fail silently on components\r\n--       that have not been built\r\n--\r\n--   Outputting build configuration summary to /Users/shiro/dev/arrow/cpp/build/cmake_summary.json\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /Users/shiro/dev/arrow/cpp/build\r\n```\r\n\u00a0",
        "created_at": "2020-01-18T00:30:46.000Z",
        "updated_at": "2022-06-20T05:26:34.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-06-20T05:26:34.000Z"
    },
    "comments": [
        {
            "created_at": "2020-01-20T03:55:53.827Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7609?focusedCommentId=17019213) by Wes McKinney (wesm):*\nI apologize that I haven't been actively maintaining this code. I'm still interested in developing this and having it as part of the Arrow codebase, and having a standardized database driver API for Arrow"
        },
        {
            "created_at": "2020-01-21T15:41:48.412Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7609?focusedCommentId=17020315) by Yosuke Shiro (shiro615):*\nI see. Thank you for confirming this issue."
        },
        {
            "created_at": "2022-06-20T05:26:34.064Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7609?focusedCommentId=17556195) by Kouhei Sutou (kou):*\nWe removed hiveserver2 by ARROW-16832."
        }
    ]
}