{
    "issue": {
        "title": "[C++] input stream locking inconsistent",
        "body": "***Note**: This issue was originally created as [ARROW-2490](https://issues.apache.org/jira/browse/ARROW-2490). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nReading from the current file pointer is inherently thread-unsafe, since the file pointer may be updated by another thread (either before or during the operation). However, currently, we have:\r\n- `ReadableFile::Read` takes a lock\n- `MemoryMappedFile::Read` doesn't take a lock\n- `BufferReader::Read` doesn't take a lock\n  \n  We could always take a lock in `Read`. But I don't think there's a pattern where it's useful to call `Read` from multiple threads at once (since you're not sure where the file pointer will be exactly when the read starts). So we could as well specify that `Read` isn't thread-safe and let people make sure they don't call it from multiple threads.\n",
        "created_at": "2018-04-21T17:18:42.000Z",
        "updated_at": "2019-09-17T14:34:09.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-09-17T08:55:02.000Z"
    },
    "comments": [
        {
            "created_at": "2019-09-17T08:55:02.936Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2490?focusedCommentId=16931205) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 5358\n<https://github.com/apache/arrow/pull/5358>"
        },
        {
            "created_at": "2019-09-17T14:05:53.021Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2490?focusedCommentId=16931494) by Ben Kietzman (bkietz):*\n`[~pitrou]` should a similar concurrency checker be added to output streams?"
        },
        {
            "created_at": "2019-09-17T14:34:09.167Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2490?focusedCommentId=16931523) by Antoine Pitrou (apitrou):*\nI'm not sure it's useful. There's no incentive to use output streams in parallel since writes are generally asynchronous.\r\n\r\nWe do have a `WritableFile` interface with a `WriteAt` method, but it's only used once in Plasma."
        }
    ]
}