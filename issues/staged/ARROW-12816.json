{
    "issue": {
        "title": "[C++] C++14 laundry list",
        "body": "***Note**: This issue was originally created as [ARROW-12816](https://issues.apache.org/jira/browse/ARROW-12816). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nImprovements to make/be aware of once C++14 is available:\r\n\r\n- Ensure that lambda closure members are moved into where ever possible/appropriate. We have a lot of local variables whose only function is getting copied into a closure, including some demotions to shared_ptr since move only types can't be closed over in c++11\n- visitor pattern can be used more fluidly with template lambdas, for example we could have a utility like\n  ```cpp\n  \n  VisitInts(offset_width, offset_bytes, [&](auto* offsets) { /*mutate offsets*/ })\n  ```\n  to replace a switch statement like\n  ```cpp\n  \n  switch (offset_width) {\n  case 8:\n    /* mutate offsets<int8_t> */\n    break;\n  case 16:\n    /* mutate offsets<int16_t> */\n    break;\n  // ...\n  }\n  ```\n- deduced return type with `auto`:\n  ```cpp\n  \n  template <typename Container>\n  auto GetBeginAndEnd(const Container& cont) {\n    return std::make_pair(cont.begin(), cont.end());\n  }\n  ```\n- constexpr switch, for use in type traits functions\n- std::enable_if_t\n- std::quoted is available for escaping strings\n- std::make_unique\n- standard `[[deprecated]]` attribute\n- temporal literals such as \"\"s, \"\"ns, ...\n- binary literals with place markers such as 0b1100_1111",
        "created_at": "2021-05-17T21:38:59.000Z",
        "updated_at": "2022-08-29T12:24:22.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-08-29T12:24:22.000Z"
    },
    "comments": [
        {
            "created_at": "2021-05-17T21:39:35.061Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12816?focusedCommentId=17346454) by Ben Kietzman (bkietz):*\n`[~apitrou]` `[~westonpace]` `[~lidavidm]`"
        },
        {
            "created_at": "2021-05-27T17:36:25.315Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12816?focusedCommentId=17352658) by Antoine Pitrou (apitrou):*\nFor the record, I've opened https://github.com/apache/arrow/pull/10414 to test C++17 support."
        }
    ]
}