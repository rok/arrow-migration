{
    "issue": {
        "title": "[R] Add error handling to C++ compute functions listed via list_compute_functions() which don't have bindings in R or options not supplied by user",
        "body": "***Note**: This issue was originally created as [ARROW-14067](https://issues.apache.org/jira/browse/ARROW-14067). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently we have the function `list_compute_functions()` which lists all available Arrow compute functions.  However, it can return functions which have been implemented in C++ but don't yet have bindings in R.\r\n\r\nA recent ticket implemented (nearly) all of the remaining compute functions without bound options at that moment, but more could appear.\r\n\r\nCurrently the error message shown is:\r\n\r\n```java\n\r\nlibrary(dplyr)\r\nlibrary(arrow) # 5.0.0.2\r\nTable$create(tibble::tibble(Species = c(\"versicolor\", \"virginica\", \"setosa\"))) %>%\r\n    mutate(x = arrow_utf8_trim(Species, options = list(characters = \"a\")))\r\n## Error: Invalid: Attempted to initialize KernelState from null FunctionOptions\r\n```\r\n\r\nWe should catch this and instead raise a more user-friendly error. \r\n\r\nAlso, if a valid function is called without options supplied, we get a `could not find function` error:\r\n\r\n```java\n\r\nlibrary(dplyr)\r\nlibrary(arrow) # dev\r\nTable$create(tibble::tibble(Species = c(\"versicolor\", \"virginica\", \"setosa\"))) %>%\r\n  mutate(x = arrow_utf8_trim(Species))\r\n## Error in arrow_utf8_trim(Species) :  could not find function \"arrow_utf8_trim\"\r\n```\r\n\r\nIt'd be great to instead inform the user that the correct options haven't been supplied.",
        "created_at": "2021-09-22T11:32:13.000Z",
        "updated_at": "2022-06-30T16:40:23.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": []
}