{
    "issue": {
        "title": "[R] CRAN Installation error on CentOS cluster ",
        "body": "***Note**: This issue was originally created as [ARROW-16748](https://issues.apache.org/jira/browse/ARROW-16748). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI am trying to install R arrow on a university cluster that's running CentOS v 7.9.2009. I've tried all of the options on <https://arrow.apache.org/docs/r/,> but continually get the same cryptic error:\r\n\r\n\u00a0\r\n```R\n\r\n[ 34%] Building CXX object src/arrow/CMakeFiles/arrow_objlib.dir/c/bridge.cc.o\r\nIn file included from /tmp/RtmpIAcCpl/R.INSTALL352b6de22db6/arrow/tools/cpp/src/arrow/c/bridge.cc:42:0:\r\n/tmp/RtmpIAcCpl/R.INSTALL352b6de22db6/arrow/tools/cpp/src/arrow/util/small_vector.h: In member function \u2018void arrow::internal::StaticVectorStorage<T, N, D>::move_construct(arrow::internal::StaticVectorStorage<T, N, D>&&)\u2019:\r\n/tmp/RtmpIAcCpl/R.INSTALL352b6de22db6/arrow/tools/cpp/src/arrow/util/small_vector.h:98:44: error: invalid use of qualified-name \u2018::move_construct_several\u2019\r\n\u00a0 \u00a0 \u00a0 \u00a0storage_type::move_construct_several(other.static_data_, static_data_, size_, N);\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ^\r\n/tmp/RtmpIAcCpl/R.INSTALL352b6de22db6/arrow/tools/cpp/src/arrow/util/small_vector.h: In member function \u2018void arrow::internal::StaticVectorStorage<T, N, D>::clear()\u2019:\r\n/tmp/RtmpIAcCpl/R.INSTALL352b6de22db6/arrow/tools/cpp/src/arrow/util/small_vector.h:109:35: error: invalid use of qualified-name \u2018::destroy_several\u2019\r\n\u00a0 \u00a0 \u00a0storage_type::destroy_several(static_data_, size_);\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0^\r\nmake[2]: *** [src/arrow/CMakeFiles/arrow_objlib.dir/c/bridge.cc.o] Error 1\r\nmake[2]: *** Waiting for unfinished jobs....\r\nmake[1]: *** [src/arrow/CMakeFiles/arrow_objlib.dir/all] Error 2\r\ngmake: *** [all] Error 2\r\n * \r\n ** \r\n *** \r\n **** Error building Arrow C++.\u00a0\u00a0\r\n```\r\n\r\nHere's the gcc/g++ backend that's loaded\r\n\r\n```Java\n\r\n[jm@login-17 r]$ /cluster/apps/gcc/5.2.0/bin/g++ --version\r\ng++ (GCC) 5.2.0\r\n[jm@login-17 r]$ /cluster/apps/gcc/5.2.0/bin/gcc --version\r\ngcc (GCC) 5.2.0\r\n```\r\n\r\nI've also tried with gcc/g++ v 6.3.0, with the same error. And get this regardless of whether I try to build from source, install from specific repos, or fix the known issues for CentOS.\r\n\r\n\u00a0\r\n\r\nAny thoughts on what the problem is?",
        "created_at": "2022-06-03T09:25:57.000Z",
        "updated_at": "2022-06-13T12:38:19.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: R",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-06-13T12:38:19.541Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16748?focusedCommentId=17553559) by Dewey Dunnington (paleolimbot):*\nThank you for reporting! In theory we support gcc 4.8 and we should be providing a binary for CentOS7 when `NOT_CRAN=true`...could you post the full install command you used and the output? I suspect that the compiler flags are not what we normally expect for CentOS7 and that maybe the compiler isn't getting the signal that we're using C++11. If you aren't already, I believe that you need to set the environment variable `ARROW_R_DEV=true` to get the most verbose output.\r\n\r\nThe reason I say this is that I believe we compile using the output of `R CMD config CXX11` and `R CMD config CXX11STD`  instead of whatever `g++` is linked on the command line (although we still should be providing a binary for CentOS7 and I'm not sure why we aren't in this case).\r\n\r\nAs a workaround, you may be able to get this to work using something like the following to override the default makevars:\r\n\r\n`withr::with_makevars(list(CXX11 = \"g++\"), install.packages(\"arrow\", type = \"source\"))`"
        }
    ]
}