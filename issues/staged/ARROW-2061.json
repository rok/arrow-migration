{
    "issue": {
        "title": "[C++] Run ASAN builds in Travis CI",
        "body": "***Note**: This issue was originally created as [ARROW-2061](https://issues.apache.org/jira/browse/ARROW-2061). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n[Address Sanitizer](https://github.com/google/sanitizers/wiki/AddressSanitizer) might be a better alternative to valgrind in clang or gcc builds. As part of this, we should also document how users can run their own local ASAN builds",
        "created_at": "2018-01-30T21:10:01.000Z",
        "updated_at": "2018-08-06T19:41:35.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2018-08-06T18:41:57.000Z"
    },
    "comments": [
        {
            "created_at": "2018-06-29T15:52:13.790Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2061?focusedCommentId=16527853) by Wes McKinney (wesm):*\nWe are using clang in our builds now. Any objections to switching to ASAN from valgrind?"
        },
        {
            "created_at": "2018-06-29T15:52:31.884Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2061?focusedCommentId=16527854) by Wes McKinney (wesm):*\nIf we do that, we should probably have a nightly build at some point that checks with valgrind, too"
        },
        {
            "created_at": "2018-06-30T15:19:51.265Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2061?focusedCommentId=16528758) by Uwe Korn (uwe):*\nHaving ASAN in PR builds and valgrind in nightlies sounds fine. ASAN is much faster but I still have the feeling that valgrind highlights a bit more memory issues."
        },
        {
            "created_at": "2018-08-06T12:02:46.248Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2061?focusedCommentId=16570114) by Antoine Pitrou (apitrou):*\nAccording to [AddressSanitizerComparisonOfMemoryTools](https://github.com/google/sanitizers/wiki/AddressSanitizerComparisonOfMemoryTools), ASAN won't detect reads of uninitialized memory, unlike Valgrind. Such detection can be done by [Memory Sanitizer](https://github.com/google/sanitizers/wiki/MemorySanitizer), which unfortunately requires rebuilding all dependencies including libstdc++."
        },
        {
            "created_at": "2018-08-06T12:24:41.190Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2061?focusedCommentId=16570143) by Wes McKinney (wesm):*\nI see. Valgrind is pretty useful, then. We might want to see if there's a way to opt in to valgrind (using `[valgrind]` or some tag in commit messages) if we decide to cut build times by turning off valgrind by default"
        },
        {
            "created_at": "2018-08-06T12:40:58.771Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2061?focusedCommentId=16570158) by Antoine Pitrou (apitrou):*\nNote the current testing duration with Valgrind is 3 minutes, which isn't enormous either:\r\nhttps://travis-ci.org/apache/arrow/jobs/412563130#L2044\r\n"
        },
        {
            "created_at": "2018-08-06T12:44:47.585Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2061?focusedCommentId=16570166) by Wes McKinney (wesm):*\nThe `PLASMA_VALGRIND=1` option has a significant impact also"
        },
        {
            "created_at": "2018-08-06T13:28:35.251Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2061?focusedCommentId=16570203) by Antoine Pitrou (apitrou):*\nI'd estimate we spend 1-2 minutes in `test_plasma.py` indeed:\r\n<https://travis-ci.org/apache/arrow/jobs/412563130#L9303>\r\n\r\n\u00a0"
        },
        {
            "created_at": "2018-08-06T18:41:57.213Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2061?focusedCommentId=16570620) by Wes McKinney (wesm):*\nIssue resolved by pull request 2377\n<https://github.com/apache/arrow/pull/2377>"
        }
    ]
}