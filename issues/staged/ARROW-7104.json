{
    "issue": {
        "title": "[Go] Unable to Resize/Reserve more space on ListBuilder after init",
        "body": "***Note**: This issue was originally created as [ARROW-7104](https://issues.apache.org/jira/browse/ARROW-7104). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen using the ListBuilder unless I reserve enough capacity on the initialize resize/init call I run into.\u00a0\u00a0Based on the code I would expect to be able to grow the list builder after the initial call to reserve capacity.\r\n```java\n\r\npanic: runtime error: index out of range [33] with length 33 [recovered]panic: runtime error: index out of range [33] with length 33 [recovered] panic: runtime error: index out of range [33] with length 33\r\n\r\ngithub.com/apache/arrow/go/arrow/array.(*Int32Builder).UnsafeAppend(...)github.com/apache/arrow/go/arrow/array.(*Int32Builder).UnsafeAppend(...) external/com_github_apache_arrow/go/arrow/array/numericbuilder.gen.go:479github.com/apache/arrow/go/arrow/array.(*Int32Builder).Append(0xc0000d3b00, 0x21) external/com_github_apache_arrow/go/arrow/array/numericbuilder.gen.go:469 +0xa9github.com/apache/arrow/go/arrow/array.(*ListBuilder).appendNextOffset(0xc0000d3b60) external/com_github_apache_arrow/go/arrow/array/list.go:152 +0x4fgithub.com/apache/arrow/go/arrow/array.(*ListBuilder).Append(0xc0000d3b60, 0xc0000d0001) external/com_github_apache_arrow/go/arrow/array/list.go:158 +0x90\r\n```\r\nWhere the default slice size in the builders is 32.\r\n\r\nIf I print out the capacity and length of the builder I do see it grow as expected prior to this error.\u00a0 My best guess is that while the capacity on the value builder is growing the resize calls aren't making its way to the offset int32 builder which is why you see that in the above stack.\r\n```java\n\r\nCap()=64 Len()=32\n```\r\nI am using tag\u00a0**apache-arrow-0.15.1**",
        "created_at": "2019-11-10T14:36:17.000Z",
        "updated_at": "2022-08-27T14:42:03.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Go",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-07-08T16:11:17.000Z"
    },
    "comments": [
        {
            "created_at": "2022-07-08T16:11:17.606Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7104?focusedCommentId=17564347) by Matthew Topol (zeroshade):*\nThis was likely fixed in an earlier version but never tagged as the issue indicates they were using Arrow 0.15.1 and I am not able to reproduce this issue currently.\r\n\r\n[~rwhitcomb_nvidia] If you're still able to reproduce this on v8 feel free to re-open this please."
        },
        {
            "created_at": "2022-08-27T14:42:03.490Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7104?focusedCommentId=17586013) by @toddfarmer:*\nTransitioning issue from Resolved to Closed to based on resolution field value."
        }
    ]
}