{
    "issue": {
        "title": "[Java] Support non-nullable vectors",
        "body": "***Note**: This issue was originally created as [ARROW-9680](https://issues.apache.org/jira/browse/ARROW-9680). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThis issue was first discussed in the ML (<https://lists.apache.org/thread.html/r480387ec9ec822f3ed30e9131109e43874a1c4d18af74ede1a7e41c5%40%3Cdev.arrow.apache.org%3E>), from which we have received some feedback.\r\n\r\nWe briefly resate it here as below:\r\n\r\n\u00a0\r\n1. Non-nullable vectors are widely used in practice. For example, in a database engine, a column can be declared as not null, so it cannot contain null values.\r\n2.Non-nullable vectors has significant performance advantages compared with their nullable conterparts, such as:\r\n\u00a0 1) the memory space of the validity buffer can be saved.\r\n\u00a0 2) manipulation of the validity buffer can be bypassed\r\n\u00a0 3) some if-else branches can be replaced by sequential instructions (by the JIT compiler), leading to high throughput for the CPU pipeline.\u00a0\r\n\u00a0\r\nWe open this Jira to facilitate further discussions, and we may provide a sample PR, which will help us make a clearer decision.\u00a0",
        "created_at": "2020-08-10T09:06:04.000Z",
        "updated_at": "2021-07-23T14:45:30.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-07-23T14:45:30.000Z"
    },
    "comments": [
        {
            "created_at": "2021-07-23T14:45:30.851Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9680?focusedCommentId=17386272) by Neal Richardson (npr):*\nPR discussion suggests that we won't do this."
        }
    ]
}