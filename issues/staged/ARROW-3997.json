{
    "issue": {
        "title": "[C++] [Doc] Clarify dictionary encoding integer signedness (and width?)",
        "body": "***Note**: This issue was originally created as [ARROW-3997](https://issues.apache.org/jira/browse/ARROW-3997). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe Arrow spec states that a dictionary-encoded array uses int32 indices. Signed or unsigned? The spec doesn't say.\r\n\r\nAlso, the C++ implementation supports all kinds of integers as indices (8- to 64-bit, signed and unsigned). I wonder if we should at least mandate a specific signedness.",
        "created_at": "2018-12-11T15:31:04.000Z",
        "updated_at": "2019-01-09T22:16:57.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Documentation",
            "Component: Format",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-01-09T22:16:46.000Z"
    },
    "comments": [
        {
            "created_at": "2018-12-11T16:05:40.180Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3997?focusedCommentId=16717441) by Wes McKinney (wesm):*\nSee comment at\r\n\r\nhttps://github.com/apache/arrow/blob/master/format/Schema.fbs#L232\r\n\r\nThe intent was to support any integer index, with the constraint of the values being non-negative. I would be in favor with constraining to signed integer types (from 8 to 64 bits) until there is demand / use case for unsigned integers"
        },
        {
            "created_at": "2019-01-09T22:16:46.563Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3997?focusedCommentId=16738718) by Wes McKinney (wesm):*\nIssue resolved by pull request 3355\n<https://github.com/apache/arrow/pull/3355>"
        }
    ]
}