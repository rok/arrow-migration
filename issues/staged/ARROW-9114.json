{
    "issue": {
        "title": "[C++][Packaging] Illegal instruction crash in arrow.dll",
        "body": "***Note**: This issue was originally created as [ARROW-9114](https://issues.apache.org/jira/browse/ARROW-9114). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWe have been encountering illegal instruction crashes in `arrow.dll` when using the\u00a0`conda` packages from `conda-forge`. Here are the relevant packages that were installed:\r\n\r\n```\n\r\narrow-cpp: 0.17.1-py37h1234567_4_cpu\r\nparquet-cpp: 1.5.1-2\r\npyarrow: 0.17.1-py37h1234567_4_cpu\r\nsnappy: 1.1.8-he025d50_1\r\n```\r\n\r\nThe error is:\r\n\r\n```\nWindows fatal exception: code 0xc000001d\n```\r\n\r\nSome further investigation revealed that the offending instruction is `BZHI`, which as I understand it is part of the `BMI2` set, in turn part of `AVX2`. We believe this is in fact arising in `snappy` code here:\r\n\r\nhttps://github.com/google/snappy/blob/1.1.8/snappy.cc#L717-L728\r\n\r\nThe `snappy 1.1.8` package appears to have been built with `BMI2` support enabled, if you look at the release build log here:\r\n\r\nhttps://dev.azure.com/conda-forge/feedstock-builds/_build/results?buildId=115252&view=logs&j=2cc45e14-23e3-52d7-b33a-8c2744410b97&t=21c44aa7-1ae3-5312-cacc-7f19fefc82f4\r\n\r\nOf course, this is then arguably an upstream issue, but I have reported it here because perhaps that configuration is the desired choice for the 'standard' `snappy` package and something else might need to be done in `arrow` instead, for example.\r\n\r\n(Incidentally, is the `snappy` runtime dependency correct in the `arrow` feedstocks? If it's statically linked, shouldn't it only be required at build time?)",
        "created_at": "2020-06-12T11:35:51.000Z",
        "updated_at": "2020-06-29T15:12:26.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-06-12T13:44:05.000Z"
    },
    "comments": [
        {
            "created_at": "2020-06-12T12:05:28.871Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9114?focusedCommentId=17134161) by Wes McKinney (wesm):*\nThis is a packaging issue. Can you please report it to conda-forge/snappy-feedstock? We can leave this issue open until it is resolved. "
        },
        {
            "created_at": "2020-06-12T12:17:45.607Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9114?focusedCommentId=17134172) by Morgan Parry (mparry):*\nSure: https://github.com/conda-forge/snappy-feedstock/issues/24"
        },
        {
            "created_at": "2020-06-15T08:51:46.859Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9114?focusedCommentId=17135613) by Uwe Korn (uwe):*\n`[~mparry]` \u00a0I pushed `arrow-cpp/pyarrow 0.17` build number 5 to conda-forge. This now has dynamic Snappy linkage and hopefully tells better whether the instruction is in snappy or somewhere else."
        },
        {
            "created_at": "2020-06-15T10:32:50.561Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9114?focusedCommentId=17135727) by Morgan Parry (mparry):*\nThanks - I have posted updates (including results from those new builds) to the linked GitHub issue"
        },
        {
            "created_at": "2020-06-29T15:12:26.349Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9114?focusedCommentId=17147869) by Wes McKinney (wesm):*\nThanks for confirming"
        }
    ]
}