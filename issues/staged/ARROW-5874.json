{
    "issue": {
        "title": "[Python] pyarrow 0.14.0 macOS wheels depend on shared libs under /usr/local/opt",
        "body": "***Note**: This issue was originally created as [ARROW-5874](https://issues.apache.org/jira/browse/ARROW-5874). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nHello, and congrats on the recent release of Apache Arrow 0.14.0!\r\n\r\nThis morning I installed pyarrow 0.14.0 on my macOS 10.14.5 system like so:\r\n```java\n\r\npython3.7 -m venv ~/virtualenv/pyarrow-0.14.0\r\nsource ~/virtualenv/pyarrow-0.14.0/bin/activate\r\npip install --upgrade pip setuptools\r\npip install pyarrow\u00a0 # installs pyarrow-0.14.0-cp37-cp37m-macosx_10_6_intel.whl\r\n\r\npip freeze --all\r\n# numpy==1.16.4\r\n# pip==19.1.1\r\n# pyarrow==0.14.0\r\n# setuptools==41.0.1\r\n# six==1.12.0\r\n```\r\nHowever I am unable to import pyarrow:\r\n```java\n\r\npython -c 'import pyarrow'\r\n# Traceback (most recent call last):\r\n#\u00a0\u00a0 File \"<string>\", line 1, in <module>\r\n#\u00a0\u00a0 File \"/Users/manselmi/virtualenv/pyarrow-0.14.0/lib/python3.7/site-packages/pyarrow/__init__.py\", line 49, in <module>\r\n#\u00a0\u00a0\u00a0\u00a0 from pyarrow.lib import cpu_count, set_cpu_count\r\n# ImportError: dlopen(/Users/manselmi/virtualenv/pyarrow-0.14.0/lib/python3.7/site-packages/pyarrow/lib.cpython-37m-darwin.so, 2): Library not loaded: /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib\r\n#\u00a0\u00a0 Referenced from: /Users/manselmi/virtualenv/pyarrow-0.14.0/lib/python3.7/site-packages/pyarrow/libarrow.14.dylib\r\n#\u00a0\u00a0 Reason: image not found\r\n```\r\npyarrow is trying to load a shared library (OpenSSL in this case) from a path under\u00a0`/usr/local/opt` that doesn't exist; perhaps that OpenSSL had been provided by Homebrew as part of your build process?\u00a0 Unfortunately this makes the pyarrow 0.14.0 wheel completely unusable on my system or any system that doesn't have OpenSSL installed in that location.\u00a0 This is a regression from pyarrow 0.13.0 as those wheels \"just worked\".\r\n\r\nAdditional diagnostic output below.\u00a0 I ran\u00a0`otool -L` on each\u00a0`.dylib` and\u00a0`.so` file in\u00a0`/Users/manselmi/virtualenv/pyarrow-0.14.0/lib/python3.7/site-packages/pyarrow` and included the output for those with dependencies under\u00a0`/usr/local/opt`:\r\n```java\n\r\notool -L /Users/manselmi/virtualenv/pyarrow-0.14.0/lib/python3.7/site-packages/pyarrow/libarrow.14.dylib\r\n# /Users/manselmi/virtualenv/pyarrow-0.14.0/lib/python3.7/site-packages/pyarrow/libarrow.14.dylib:\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 @rpath/libarrow.14.dylib (compatibility version 14.0.0, current version 14.0.0)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /usr/local/opt/openssl/lib/libssl.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.8)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 @rpath/libarrow_boost_system.dylib (compatibility version 0.0.0, current version 0.0.0)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 @rpath/libarrow_boost_filesystem.dylib (compatibility version 0.0.0, current version 0.0.0)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 @rpath/libarrow_boost_regex.dylib (compatibility version 0.0.0, current version 0.0.0)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 307.5.0)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1238.50.2)\r\n\r\n\r\notool -L /Users/manselmi/virtualenv/pyarrow-0.14.0/lib/python3.7/site-packages/pyarrow/libarrow_flight.14.dylib\r\n# /Users/manselmi/virtualenv/pyarrow-0.14.0/lib/python3.7/site-packages/pyarrow/libarrow_flight.14.dylib:\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 @rpath/libarrow_flight.14.dylib (compatibility version 14.0.0, current version 14.0.0)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 @rpath/libarrow.14.dylib (compatibility version 14.0.0, current version 14.0.0)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /usr/local/opt/openssl/lib/libssl.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 307.5.0)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1238.50.2)\r\n\r\notool -L /Users/manselmi/virtualenv/pyarrow-0.14.0/lib/python3.7/site-packages/pyarrow/libarrow_python.14.dylib\r\n# /Users/manselmi/virtualenv/pyarrow-0.14.0/lib/python3.7/site-packages/pyarrow/libarrow_python.14.dylib:\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 @rpath/libarrow_python.14.dylib (compatibility version 14.0.0, current version 14.0.0)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1238.50.2)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation (compatibility version 150.0.0, current version 1349.64.0)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 @rpath/libarrow_flight.14.dylib (compatibility version 14.0.0, current version 14.0.0)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 @rpath/libarrow.14.dylib (compatibility version 14.0.0, current version 14.0.0)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /usr/local/opt/openssl/lib/libssl.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 307.5.0)\r\n\r\notool -L /Users/manselmi/virtualenv/pyarrow-0.14.0/lib/python3.7/site-packages/pyarrow/libgandiva.14.dylib\r\n# /Users/manselmi/virtualenv/pyarrow-0.14.0/lib/python3.7/site-packages/pyarrow/libgandiva.14.dylib:\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 @rpath/libgandiva.14.dylib (compatibility version 14.0.0, current version 14.0.0)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 @rpath/libarrow.14.dylib (compatibility version 14.0.0, current version 14.0.0)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /usr/local/opt/openssl/lib/libssl.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.8)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /usr/lib/libncurses.5.4.dylib (compatibility version 5.4.0, current version 5.4.0)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1238.50.2)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 307.5.0)\r\n\r\notool -L /Users/manselmi/virtualenv/pyarrow-0.14.0/lib/python3.7/site-packages/pyarrow/libplasma.14.dylib\r\n# /Users/manselmi/virtualenv/pyarrow-0.14.0/lib/python3.7/site-packages/pyarrow/libplasma.14.dylib:\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 @rpath/libplasma.14.dylib (compatibility version 14.0.0, current version 14.0.0)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 @rpath/libarrow.14.dylib (compatibility version 14.0.0, current version 14.0.0)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /usr/local/opt/openssl/lib/libssl.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 307.5.0)\r\n#\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1238.50.2)\r\n```",
        "created_at": "2019-07-08T12:09:25.000Z",
        "updated_at": "2019-08-01T22:34:02.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-07-08T17:51:11.000Z"
    },
    "comments": [
        {
            "created_at": "2019-07-08T13:35:40.030Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5874?focusedCommentId=16880355) by Wes McKinney (wesm):*\nThanks for the report. Since adding the OpenSSL dependency we expected some hiccups. There's a couple possible solutions\r\n\r\n- Bundling OpenSSL shared libraries in the wheel\n- Fixing the library path to not be looking for libraries in a hard-coded location (I thought that the wheel build was supposed to fix this)\n- Only linking to OpenSSL in libarrow_flight (I'm not sure that it needs to be linked with `pyarrow.lib`). I think we should do this regardless\n  \n  FYI: maintaining wheels is extremely difficult for us. The project, and the Python ecosystem in general, would be much better off if everyone used conda for complex packages like this"
        },
        {
            "created_at": "2019-07-08T13:46:11.055Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5874?focusedCommentId=16880364) by Krisztian Szucs (kszucs):*\nI can confirm the issue, with brew installed openssl the same error occurs.\r\nThe test section in the build script doesn't remove system openssl, this is why we have not captured the issue https://github.com/apache/arrow/blob/master/dev/tasks/python-wheels/travis.osx.yml#L71"
        },
        {
            "created_at": "2019-07-08T13:51:12.147Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5874?focusedCommentId=16880369) by Wes McKinney (wesm):*\nThis was actually intentional to depend on system OpenSSL, but it was inadequately tested. We probably will need to bundle the Homebrew-provided OpenSSL libraries"
        },
        {
            "created_at": "2019-07-08T13:54:52.885Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5874?focusedCommentId=16880373) by Michael Anselmi (manselmi):*\nHi `[~wesmckinn]`, thanks for the response.\r\n\r\nI haven't used it myself but [delocate](https://github.com/matthew-brett/delocate) may help with bundling OpenSSL shared libraries into the wheel if you decide to go that route.\u00a0 It seems to be the macOS counterpart of [auditwheel](https://github.com/pypa/auditwheel)."
        },
        {
            "created_at": "2019-07-08T15:07:39.157Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5874?focusedCommentId=16880443) by Krisztian Szucs (kszucs):*\nAccording to homebrew: \"Apple has deprecated use of OpenSSL in favor of its own TLS and crypto libraries.\"\r\nSo we cannot expect to have system openssl. \r\n\r\nThanks for the delocate reference, I'm taking a look. cc `[~xhochy]`"
        },
        {
            "created_at": "2019-07-08T15:16:46.762Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5874?focusedCommentId=16880457) by Uwe Korn (uwe):*\nWe should bundle OpenSSL with the wheel and declare it as unsafe to use in production. Either compile from source when using `pip` in your production environment or use `conda`. This is roughly the same way `psycopg2` went. You cannot manage this type of binary dependencies with `pip`, this is why `conda` was created.\r\n\r\nI'm aware of `delocate` but we are explcitly not using it as we rely on CMake and `setup.py` to bundle all required libraries. In our case it might be better to statically link OpenSSL to not pollute the global namespace with our shipped version of OpenSSL."
        },
        {
            "created_at": "2019-07-08T17:51:11.874Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5874?focusedCommentId=16880584) by Uwe Korn (uwe):*\nIssue resolved by pull request 4823\n<https://github.com/apache/arrow/pull/4823>"
        }
    ]
}