{
    "issue": {
        "title": "[R] Windows multithreading error: filtering datasets ",
        "body": "***Note**: This issue was originally created as [ARROW-11413](https://issues.apache.org/jira/browse/ARROW-11413). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI was trying to recreate the [vignette](https://arrow.apache.org/docs/r/articles/dataset.html) on datasets and dplyr on a win10 machine. I downloaded the data for 2 consecutive years (2017, 2018) to my laptop.\r\n\r\nThe filter is working only for variables used for partitioning. When I am inserting any other variable (like the total_amount) the R/RStudio session hangs: no error message and more interestingly no detectable CPU load nor disk usage (task manager) for many minutes.\u00a0 \r\n\r\nI experienced the same issue both with arrow 2.0.0 and 3.0.0 (just I update my R packages this morning). Previously, I already tried to reinstall the arrow 2.0.0 package.\r\n\r\nDid I misunderstand something in the vignette? Is there any OS limitation?\r\n\r\n\u00a0\r\n```java\n\r\n// \r\n> library(arrow)Attaching package: 'arrow'The following object is masked from 'package:utils':    timestamp> library(tidyverse)\r\n-- Attaching packages ---------------------------------------------------------------------- tidyverse 1.3.0 --\r\nv ggplot2 3.3.3     v purrr   0.3.4\r\nv tibble  3.0.5     v dplyr   1.0.3\r\nv tidyr   1.1.2     v stringr 1.4.0\r\nv readr   1.4.0     v forcats 0.5.1\r\n-- Conflicts ------------------------------------------------------------------------- tidyverse_conflicts() --\r\nx dplyr::filter() masks stats::filter()\r\nx dplyr::lag()    masks stats::lag()\r\n> arrow_available()\r\n[1] TRUE\r\n> arrow_info()\r\nArrow package version: 3.0.0Capabilities:\r\n               \r\ns3         TRUE\r\nsnappy     TRUE\r\ngzip       TRUE\r\nbrotli    FALSE\r\nzstd       TRUE\r\nlz4        TRUE\r\nlz4_frame  TRUE\r\nlzo       FALSE\r\nbz2       FALSE\r\njemalloc  FALSE\r\nmimalloc   TRUEMemory:\r\n                  \r\nAllocator mimalloc\r\nCurrent    0 bytes\r\nMax        0 bytes> \r\n> ds <- open_dataset(taxidir, partitioning = c(\"year\", \"month\"))\r\n> ds\r\nFileSystemDataset with 24 Parquet files\r\nvendor_id: string\r\npickup_at: timestamp[us]\r\ndropoff_at: timestamp[us]\r\npassenger_count: int8\r\ntrip_distance: float\r\nrate_code_id: string\r\nstore_and_fwd_flag: string\r\npickup_location_id: int32\r\ndropoff_location_id: int32\r\npayment_type: string\r\nfare_amount: float\r\nextra: float\r\nmta_tax: float\r\ntip_amount: float\r\ntolls_amount: float\r\nimprovement_surcharge: float\r\ntotal_amount: float\r\nyear: int32\r\nmonth: int32See $metadata for additional Schema metadata\r\n> \r\n> a <- ds %>% \r\n+   select(year, total_amount) %>% collect()\r\n> \r\n> b <- ds %>% \r\n+   filter(year == 2018) %>% \r\n+   select(year, total_amount) %>% collect()\r\n> \r\n> c <- ds %>% \r\n+   filter(total_amount > 100) %>% \r\n+   select(year, total_amount) %>% collect()\n```\r\n\u00a0",
        "created_at": "2021-01-28T08:28:25.000Z",
        "updated_at": "2021-05-18T13:26:55.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-05-18T13:26:55.000Z"
    },
    "comments": [
        {
            "created_at": "2021-01-29T16:17:56.863Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11413?focusedCommentId=17274546) by Jonathan Keane (jonkeane):*\nThank you for the report, there shouldn't be a limitation like that. We are trying to reproduce this on our end, but haven't been able to so far.\r\n\r\nCould you please share with us what version of R you're running this in, as well as some details about the system you're running it on (especially how much RAM you have available)? "
        },
        {
            "created_at": "2021-01-29T17:37:04.134Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11413?focusedCommentId=17275215) by Zsolt Kegyes-Brassai (kbzsl):*\nThank you.\u00a0\r\n\r\nI have a laptop with an i7 processor, 32GB RAM and SSD, running on win10 (build 17763). My R environment is quite up to date.\r\n\r\n\u00a0\r\n```java\n\r\n> RStudio.Version()$version\r\n[1] \u20181.3.1093\u2019\r\n\r\n> sessionInfo()\r\nR version 4.0.3 (2020-10-10)\r\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\r\nRunning under: Windows 10 x64 (build 17763)Matrix products: defaultlocale:\r\n[1] LC_COLLATE=English_United States.1252  LC_CTYPE=English_United States.1252   \r\n[3] LC_MONETARY=English_United States.1252 LC_NUMERIC=C                          \r\n[5] LC_TIME=English_United States.1252    attached base packages:\r\n[1] stats     graphics  grDevices utils     datasets  methods   base     other attached packages:\r\n [1] forcats_0.5.1   stringr_1.4.0   dplyr_1.0.3     purrr_0.3.4     readr_1.4.0     tidyr_1.1.2    \r\n [7] tibble_3.0.5    ggplot2_3.3.3   tidyverse_1.3.0 arrow_3.0.0    loaded via a namespace (and not attached):\r\n [1] Rcpp_1.0.6        cellranger_1.1.0  pillar_1.4.7      compiler_4.0.3    dbplyr_2.0.0     \r\n [6] lobstr_1.1.1      tools_4.0.3       bit_4.0.4         lubridate_1.7.9.2 jsonlite_1.7.2   \r\n[11] lifecycle_0.2.0   gtable_0.3.0      pkgconfig_2.0.3   rlang_0.4.10      reprex_1.0.0     \r\n[16] cli_2.2.0         DBI_1.1.1         rstudioapi_0.13   haven_2.3.1       withr_2.4.1      \r\n[21] xml2_1.3.2        httr_1.4.2        fs_1.5.0          generics_0.1.0    vctrs_0.3.6      \r\n[26] tictoc_1.0        hms_1.0.0         bit64_4.0.5       grid_4.0.3        tidyselect_1.1.0 \r\n[31] glue_1.4.2        R6_2.5.0          fansi_0.4.2       readxl_1.3.1      modelr_0.1.8     \r\n[36] magrittr_2.0.1    backports_1.2.0   scales_1.1.1      ellipsis_0.3.1    rvest_0.3.6      \r\n[41] assertthat_0.2.1  colorspace_2.0-0  stringi_1.5.3     munsell_0.5.0     broom_0.7.3      \r\n[46] crayon_1.3.4 \r\n```\r\nI can load these two columns quite fast without the filter command, but adding the filter nothing happens (just a hanging session).\r\n```java\n\r\n\u00a0> tictoc::tic()\r\n> a <- ds %>% \r\n+   select(year, total_amount) %>% collect()\r\n> tictoc::toc()\r\n1.22 sec elapsed\r\n> nrow(a)\r\n[1] 216301124\r\n> lobstr::obj_size(a)\r\n2,595,614,480 B\r\n```\r\n\u00a0"
        },
        {
            "created_at": "2021-02-18T05:14:49.943Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11413?focusedCommentId=17286277) by Ian Cook (icook):*\n`[~kbzsl]` \u00a0Sometimes problems like this happen because of thread deadlocks. Could you try configuring Arrow to use only one virtual CPU core, and see if that resolves the hanging behavior?\r\n\r\nYou can see how many virtual CPU cores Arrow is able to use by running\u00a0\r\n```java\n\r\narrow::cpu_count() \n```\r\nand you can configure Arrow to use only one virtual CPU core by running:\r\n```java\n\r\narrow::set_cpu_count(1) \n```\r\n\u00a0"
        },
        {
            "created_at": "2021-02-18T05:51:24.707Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11413?focusedCommentId=17286289) by Zsolt Kegyes-Brassai (kbzsl):*\n`[~icook]` Thank you. It is working with the recommended settings (num_threads = 1).\r\n\r\nThe only disadvantage is that there is a trade-off in the execution times. Based on a short series of ad-hoc measurement it takes around 2x more time. But the reduced memory usage compensates well, makes more sense than the raw speed.\r\n\r\n\u00a0"
        },
        {
            "created_at": "2021-05-18T13:26:55.607Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11413?focusedCommentId=17346898) by Jonathan Keane (jonkeane):*\nI'm resolving this in favor of ARROW-11579 which we have used to track other threading issues on windows and this seems to be related to."
        }
    ]
}