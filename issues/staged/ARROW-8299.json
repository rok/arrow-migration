{
    "issue": {
        "title": "[C++] Reusable \"optional ParallelFor\" function for optional use of multithreading",
        "body": "***Note**: This issue was originally created as [ARROW-8299](https://issues.apache.org/jira/browse/ARROW-8299). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWe often see code like\r\n\r\n```Java\n\r\n    if (use_threads) {\r\n      return ::arrow::internal::ParallelFor(n, Func);\r\n    } else {\r\n      for (size_t i = 0; i < n; ++i) {\r\n        RETURN_NOT_OK(Func(i));\r\n      }\r\n      return Status::OK();\r\n```\r\n\r\nIt might be nice to have a helper function to do this. It doesn't even need to be an inline template, it could be a precompiled function accepting `std::function<Status(int)>`",
        "created_at": "2020-03-31T18:05:03.000Z",
        "updated_at": "2020-04-15T18:50:11.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-04-08T14:28:14.000Z"
    },
    "comments": [
        {
            "created_at": "2020-04-08T02:17:23.742Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8299?focusedCommentId=17077752) by Liya Fan (fan_li_ya):*\n`[~wesm]` I notice the assignee is left empty. May I try to provide a patch for this issue?"
        },
        {
            "created_at": "2020-04-08T03:41:31.073Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8299?focusedCommentId=17077811) by Wes McKinney (wesm):*\nOf course, thanks"
        },
        {
            "created_at": "2020-04-08T14:28:14.265Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8299?focusedCommentId=17078341) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 6870\n<https://github.com/apache/arrow/pull/6870>"
        }
    ]
}