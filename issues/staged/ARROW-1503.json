{
    "issue": {
        "title": "[Python] Add serialization callbacks for pandas objects in pyarrow.serialize",
        "body": "***Note**: This issue was originally created as [ARROW-1503](https://issues.apache.org/jira/browse/ARROW-1503). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n",
        "created_at": "2017-09-09T00:57:19.000Z",
        "updated_at": "2017-10-10T19:22:28.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2017-10-10T19:22:26.000Z"
    },
    "comments": [
        {
            "created_at": "2017-09-11T04:16:59.057Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1503?focusedCommentId=16160652) by Wes McKinney (wesm):*\nMoved this to 0.8.0. There's some work to do here \u2013 to really efficiently handle pandas objects we should more efficiently handle `pyarrow.Buffer` in `pyarrow.serialize`."
        },
        {
            "created_at": "2017-10-05T19:25:55.833Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1503?focusedCommentId=16193498) by Wes McKinney (wesm):*\n`[~pcmoritz]` `[~robertnishihara]` what do you think about having a default serialization context where we can register serializers for pandas (and some other things, too)?"
        },
        {
            "created_at": "2017-10-05T20:32:01.891Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1503?focusedCommentId=16193594) by Robert Nishihara (robertnishihara):*\nI think that's a good idea and would make things a lot more convenient. This makes sense for pandas dataframes. The types that we're currently registering in Ray (at https://github.com/ray-project/ray/blob/aebe9f937451bfa10aa0f2a41bafcf4747fb60f0/python/ray/worker.py#L1045-L1076) would probably make sense in the default serialization context. We're currently doing it for `collections.OrderedDict`, `collections.defaultdict`, and numpy arrays with non-nice dtypes.\n\nWe could also consider supporting pytorch tensors and things like that here (although of course we can't assume that pytorch is installed), though that might make more sense in Ray as opposed to pyarrow."
        },
        {
            "created_at": "2017-10-10T19:22:26.912Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1503?focusedCommentId=16199224) by Philipp Moritz (pcmoritz):*\nIssue resolved by pull request 1192\n<https://github.com/apache/arrow/pull/1192>"
        }
    ]
}