{
    "issue": {
        "title": "[C++] Implement arrow::Concatenate for dictionary-encoded arrays with unequal dictionaries",
        "body": "***Note**: This issue was originally created as [ARROW-5336](https://issues.apache.org/jira/browse/ARROW-5336). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently (as of ARROW-3144) if any dictionary is different, an error is returned",
        "created_at": "2019-05-15T21:21:38.000Z",
        "updated_at": "2021-01-12T10:53:05.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-01-11T08:49:57.000Z"
    },
    "comments": [
        {
            "created_at": "2019-09-17T16:06:06.666Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5336?focusedCommentId=16931601) by Antoine Pitrou (apitrou):*\n`[~bkietz]`"
        },
        {
            "created_at": "2020-03-16T16:23:17.810Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5336?focusedCommentId=17060349) by Ben Kietzman (bkietz):*\n`[~wesm]` would it be acceptable to require that if two dictionaries differ then one must be a prefix of the other?"
        },
        {
            "created_at": "2020-06-12T02:09:50.234Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5336?focusedCommentId=17133843) by Wes McKinney (wesm):*\n`[~bkietz]` do you plan to implement this for 1.0.0?"
        },
        {
            "created_at": "2020-12-18T02:04:20.788Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5336?focusedCommentId=17251442) by Weston Pace (westonpace):*\n`[~wesm]` `[~bkietz]` I'm planning on taking this for 3.0.0 (after discussion with Ben).\u00a0 A few questions:\r\n\r\nThe I/O APIs and builder API make use of delta dictionaries.\u00a0 However, these seem to not be required in the `Array` itself.\u00a0 By the time we arrive at `Array` any \"deltaing\" has been taken care of.\u00a0 So I believe I do not have to worry about delta dictionaries for this correct?\r\n\r\nThere is an existing `DictionaryUnifier` which seems to be unused.\u00a0 There is some comment referring to `Transpose` but that method does not appear to make use of this.\u00a0 However, it appears it is a good place to start.\u00a0 Is there any reason this would not be so?\r\n\r\nThe existing `DictionaryUnifier`has a check on `null_count` with a message `Cannot yet unify dictionaries with nulls`.\u00a0 From what I've read `null_count` is only referring to the nulls in the array's buffer and not nulls in the array data's dictionary itself.\u00a0 I'm not sure how these would affect unification.\u00a0 These fields don't have an index in the dictionary so they can be safely ignored correct?"
        },
        {
            "created_at": "2020-12-18T11:34:33.635Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5336?focusedCommentId=17251715) by Antoine Pitrou (apitrou):*\n> By the time we arrive at `Array` any \"deltaing\" has been taken care of. So I believe I do not have to worry about delta dictionaries for this correct?\r\n\r\nThis is right.\r\n\r\n\u00a0"
        },
        {
            "created_at": "2020-12-19T02:22:56.495Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5336?focusedCommentId=17252084) by Weston Pace (westonpace):*\nSo the unifier currently reassigns the index type to be as small as needed.\r\n\r\nPros:\r\n \\* Allows unification of arrays that don't have the same index type\r\n \\* Resulting dictionary will be as space efficient as possible\r\n\r\nCons:\r\n \\* Combining arrays could modify the type of the array\r\n \\* We don't tolerate differences in other types (e.g. we can't combine int8() with int16())\r\n\r\nRight now I'm planning on disabling this for concatenate.\u00a0 All incoming arrays must have identical value and index types and the resulting array will have the same value and index type.\u00a0 I will leave the capability in the unifier but allow for an index type to be specified that will override the auto-calculate."
        },
        {
            "created_at": "2021-01-11T08:49:57.602Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5336?focusedCommentId=17262486) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 8984\n<https://github.com/apache/arrow/pull/8984>"
        }
    ]
}