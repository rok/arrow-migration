{
    "issue": {
        "title": "[C++] Add Roundtrip Support to Plans",
        "body": "***Note**: This issue was originally created as [ARROW-16860](https://issues.apache.org/jira/browse/ARROW-16860). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nConvert an ACERO plan to a Substrait plan. The missing component is to add `ToProto` function to convert an ACERO `ExecPlan` to a Substrait-Plan.",
        "created_at": "2022-06-20T01:55:03.000Z",
        "updated_at": "2022-10-04T17:51:25.000Z",
        "labels": [
            "Migrated from Jira",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-06-21T05:01:44.022Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16860?focusedCommentId=17556638) by Vibhatha Lakmal Abeykoon (vibhatha):*\nOne unclear part with this task is, how to populate the _ExtensionSet_ from {_}compute::ExecPlan{_}? We can always include the URI from which to look for the extension types, but the extensions, and function anchors are hard to interpret. Assume this can be explored when relations are populated. For each relation we can look for populating the _ExtensionSet_ with the functions used in the operations. Mainly the project and filter operations can be quite clearly captured from the _Declaration_ itself. Is this a good approach or is there a better way to do this?\r\n\r\ncc `[~westonpace]` \u00a0"
        },
        {
            "created_at": "2022-06-27T14:47:56.709Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16860?focusedCommentId=17559202) by Weston Pace (westonpace):*\nI think I answered this offline but, for clarity (and I think this is what you are arguing for):\r\n\r\n \\* Start with an empty ExtensionSet\r\n \\* Convert the relations to protobuf\r\n   \\* During the various ToProto calls there will be calls made to extension_set->EncodeFunction which will populate the extension set.\r\n \\* Once all top-level relations are converted to protobuf the extension set should be populated.  So now it is just a matter of converting the populated extension set to protobuf and adding it to the plan"
        },
        {
            "created_at": "2022-06-27T15:44:01.448Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16860?focusedCommentId=17559234) by Vibhatha Lakmal Abeykoon (vibhatha):*\nYes, you did and I had doubts with the `ExtensionSet` `ToProto` idea which we agreed upon not to do since it is already covered by an existing function. Not doing the same task but doing what is required. `\r\nAddExtensionSetToPlan` is doing what is required. I think this is resolved and good to go.\u00a0"
        },
        {
            "created_at": "2022-07-06T12:49:27.454Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16860?focusedCommentId=17563214) by Jeroen van Straten (jvanstraten):*\n> Start with an empty ExtensionSet\r\n\r\nI think the original idea was to allow passing an existing ExtensionSet as well, such that when you're truly round-tripping, you can use the original ExtensionSet to get exactly the same anchors, URIs, and so on (except, I think, the order in which the extensions are declared, which is completely arbitrary as far as Substrait is concerned... so it still wouldn't be a perfect round trip unless the incoming plan defines them in the \"correct\" order or we would also track the order). Either way, though, the various ToProto calls should add missing extensions to the ExtensionSet as needed, so this doesn't change anything aside from adding an optional argument to SerializePlan.\r\n\r\nPerfect round-tripping is in general almost impossible though, and I stand by it being a bad idea to even try, because it would give very suboptimal plans at the Acero side even if the incoming Substrait plan is optimized (see ARROW-16986). I'd suggest introducing a conversion option that selects how strict the converter should be about maintaining structure and meta-information loss (see ARROW-16988)."
        },
        {
            "created_at": "2022-10-04T17:51:24.903Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16860?focusedCommentId=17612718) by Apache Arrow JIRA Bot (arrowjira):*\nThis issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned per [project policy](https://arrow.apache.org/docs/dev/developers/bug_reports.html#issue-assignment). Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon."
        }
    ]
}