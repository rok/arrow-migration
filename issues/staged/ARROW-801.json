{
    "issue": {
        "title": "[JAVA] Provide direct access to underlying buffer memory addresses in consistent way without generating garbage or large amount indirections",
        "body": "***Note**: This issue was originally created as [ARROW-801](https://issues.apache.org/jira/browse/ARROW-801). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen working with Arrow vectors recently, we observed a situation where our time was dominated  by calls to getFieldBuffers() to be able to retrieve memory addresses (22s out of 26s total for a piece of code). We should provide a direct mechanism to access this data so we can avoid all the extra indirection and object creation. \n\nA proposal:\ngetBitAddress();\ngetDataAddress();\ngetOffsetAddress();\n\nThese interfaces would be made available at the FieldVector interface and simply throw UnsupportedOperationException where not supported.\n\nUnsupported Operations: \ndata for list type\noffset for fixed width types\ndata and offset for struct type\ndata for union type",
        "created_at": "2017-04-10T18:06:01.000Z",
        "updated_at": "2017-08-16T22:11:22.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2017-08-16T00:16:38.000Z"
    },
    "comments": [
        {
            "created_at": "2017-04-10T18:14:46.184Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-801?focusedCommentId=15963281) by Julien Le Dem (julienledem):*\nSounds good.\nRather than adding them at the FieldVector level, it sounds like they should be on the vectors that support them. We can have base classes or interfaces for FixWidthVector, VariableWidthVector, ...\nAnd then we define what each supports."
        },
        {
            "created_at": "2017-04-11T15:17:27.317Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-801?focusedCommentId=15964505) by Jacques Nadeau (jnadeau):*\nSince these are low-level interfaces, i'd prefer to not have to constantly deal with type casting. (Much like java.lang.Iterator has remove() even if it isn't always supported). \n\nUsing [Fix\\|Variable]WidthVector interfaces are especially problematic since they aren't connected to FieldVector.  I think the interface hierarchy could be improved but I'd prefer not to block this work by that (since I think that is a longer term piece of work)."
        },
        {
            "created_at": "2017-04-11T16:03:58.708Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-801?focusedCommentId=15964572) by Julien Le Dem (julienledem):*\nWe'd need to cast only if the types are not declared properly. java.lang.Iterator is pretty old. Guava and Scala for example clearly separate mutable and immutable collection without needing to cast. [Fix\\|Variable]WidthVector can be subclasses of FieldVector. I think we should try before declaring it's too much work."
        },
        {
            "created_at": "2017-04-13T19:05:02.588Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-801?focusedCommentId=15968091) by Jacques Nadeau (jnadeau):*\nFixedWidthVector is a disjunct set from FieldVector. For example IntVector is a FixedWidthVector but is not a FieldVector. What're you're asking for could be done by implementing a new set of interfaces such as FixedFieldVector and VariableFieldVector. But this begs the question of starting to rationalize why we even have ValueVector versus FieldVector, and whether ValueVector should be logical type-independent (defined solely by width). That is why I said what you're asking for is really an iceberg to a larger problem. \n\n"
        },
        {
            "created_at": "2017-08-16T00:14:08.865Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-801?focusedCommentId=16128129) by Siddharth Teotia (siddteotia):*\nPR: https://github.com/apache/arrow/pull/958"
        },
        {
            "created_at": "2017-08-16T00:16:38.546Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-801?focusedCommentId=16128132) by Wes McKinney (wesm):*\nIssue resolved by pull request 958\n<https://github.com/apache/arrow/pull/958>"
        }
    ]
}