{
    "issue": {
        "title": "[C++] Release mode lacks convenience input validation",
        "body": "***Note**: This issue was originally created as [ARROW-5145](https://issues.apache.org/jira/browse/ARROW-5145). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI am a new user of the C++ library trying to output data that contains dictionary columns using `RecordBatchFileWriter`. The\u00a0attached code seg faults, it is able to write a\u00a0`Feather`\u00a0file but fails when I use the\u00a0`RecordBatchFileWriter`.\r\n\r\nI am not sure whether I am using the library correctly, but the produced Feather file loads properly in Julia and has the expected data. I installed Arrow following the [instructions](https://arrow.apache.org/install/) for CentOS.\u00a0\r\n\r\nHere is the stacktrace of the executable compiled with the command 'g++ -g -larrow repro.cpp' :\r\n\r\n\u00a0\r\n\r\n`Program terminated with signal SIGSEGV, Segmentation fault.`\r\n`#0 0x0000000000000000 in ?? ()`\r\n`Missing separate debuginfos, use: debuginfo-install arrow-libs-0.13.0-1.el7.x86_64 boost-filesystem-1.53.0-27.el7.x86_64 boost-regex-1.53.0-27.el7.x86_64 boost-system-1.53.0-27.el7.x86_64 double-conversion-2.0.1-3.el7.x86_64 gflags-2.1.1-6.el7.x86_64 glibc-2.17-260.el7_6.3.x86_64 glog-0.3.3-8.el7.x86_64 libgcc-4.8.5-36.el7.x86_64 libicu-50.1.2-17.el7.x86_64 libstdc++-4.8.5-36.el7.x86_64 libzstd-1.3.8-1.el7.x86_64 lz4-1.7.5-2.el7.x86_64 snappy-1.1.0-3.el7.x86_64 zlib-1.2.7-18.el7.x86_64`\r\n`(gdb) bt`\r\n`#0 0x0000000000000000 in ?? ()`\r\n`#1 0x00007f43fc8870d1 in arrow::ipc::internal::FieldToFlatbufferVisitor::GetResult(arrow::Field const&, flatbuffers::Offset<org::apache::arrow::flatbuf::Field>*) ()`\r\n` from /lib64/libarrow.so.13`\r\n`#2 0x00007f43fc880374 in arrow::ipc::internal::FieldToFlatbuffer(flatbuffers::FlatBufferBuilder&, arrow::Field const&, arrow::ipc::DictionaryMemo*, flatbuffers::Offset<org::apache::arrow::flatbuf::Field>*) () from /lib64/libarrow.so.13`\r\n`#3 0x00007f43fc880759 in arrow::ipc::internal::SchemaToFlatbuffer(flatbuffers::FlatBufferBuilder&, arrow::Schema const&, arrow::ipc::DictionaryMemo*, flatbuffers::Offset<org::apache::arrow::flatbuf::Schema>*) [clone .constprop.548] () from /lib64/libarrow.so.13`\r\n`#4 0x00007f43fc880f7f in arrow::ipc::internal::WriteSchemaMessage(arrow::Schema const&, arrow::ipc::DictionaryMemo*, std::shared_ptr<arrow::Buffer>*) () from /lib64/libarrow.so.13`\r\n`#5 0x00007f43fc8986eb in arrow::ipc::RecordBatchStreamWriter::RecordBatchStreamWriterImpl::Start() () from /lib64/libarrow.so.13`\r\n`#6 0x00007f43fc898936 in arrow::ipc::RecordBatchFileWriter::RecordBatchFileWriterImpl::Start() () from /lib64/libarrow.so.13`\r\n`#7 0x00007f43fc891cfc in arrow::ipc::RecordBatchFileWriter::WriteRecordBatch(arrow::RecordBatch const&, bool) () from /lib64/libarrow.so.13`\r\n`#8 0x00000000004022ec in job () at repro.cpp:63`\r\n`#9 0x00000000004026e7 in main (argc=1, argv=0x7ffef5892268) at repro.cpp:77`\r\n\r\n\u00a0\r\n\r\nThanks for your help.\u00a0",
        "created_at": "2019-04-09T00:57:41.000Z",
        "updated_at": "2019-06-27T16:21:14.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-06-27T16:21:01.000Z"
    },
    "comments": [
        {
            "created_at": "2019-04-09T10:09:40.223Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5145?focusedCommentId=16813217) by Antoine Pitrou (apitrou):*\nThe following line is wrong:\r\n```cpp\n\r\nauto sch = schema({arrow::field(\"TEST\", dictionary(utf8(), dict_array))});\r\n```\r\nas it defines the index type of the dictionary type (normally an integer type) to be \"utf8\".\r\n\r\nInstead you can use:\r\n```cpp\n\r\nauto sch = schema({arrow::field(\"TEST\", col->type())});\r\n```\r\n"
        },
        {
            "created_at": "2019-04-09T10:10:17.282Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5145?focusedCommentId=16813218) by Antoine Pitrou (apitrou):*\n`[~wesmckinn]` I wonder if we should improve the user experience in release mode. Some checks are cheap enough that we may always execute them?"
        },
        {
            "created_at": "2019-04-10T00:19:39.695Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5145?focusedCommentId=16813925) by Ankur deDev (Ankur deDev):*\nThanks a lot for fixing my code and sorry for missing that, I got distracted\u00a0as Feather was able to dump this."
        },
        {
            "created_at": "2019-04-22T11:50:29.486Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5145?focusedCommentId=16823048) by Wes McKinney (wesm):*\n`[~pitrou]` I'm not sure about that. It seems neither appropriate to make the application crash nor to be refactored to return Status in this instance. In our developer instructions we should provide guidance around debugging segfaults and include making a debug build as part of the approach. We could also add an option to enable DCHECK assertions in release builds (e.g. this may be helpful on windows)"
        },
        {
            "created_at": "2019-04-22T11:52:25.468Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5145?focusedCommentId=16823050) by Antoine Pitrou (apitrou):*\nYes, my suggestion was that some \"debug\" checks could actually be cheaply enabled in release mode."
        },
        {
            "created_at": "2019-06-27T16:21:01.221Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5145?focusedCommentId=16874295) by Wes McKinney (wesm):*\nIssue resolved by pull request 4720\n<https://github.com/apache/arrow/pull/4720>"
        }
    ]
}