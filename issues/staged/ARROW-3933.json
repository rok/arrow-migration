{
    "issue": {
        "title": "[Python] Segfault reading Parquet files from GNOMAD",
        "body": "***Note**: This issue was originally created as [ARROW-3933](https://issues.apache.org/jira/browse/ARROW-3933). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI am getting segfault trying to run a basic program Ubuntu 18.04 VM (AWS). Error also occurs out of box on Mac OS X.\r\n\r\n$ sudo snap install --classic google-cloud-sdk\r\n$ gsutil cp gs://gnomad-public/release/2.0.2/vds/exomes/gnomad.exomes.r2.0.2.sites.vds/rdd.parquet/part-r-00000-31fcf9bd-682f-4c20-bbe5-b0bd08699104.snappy.parquet .\r\n$ conda install pyarrow\r\n$ python test.py\r\nSegmentation fault (core dumped)\r\n\r\ntest.py:\r\n\r\nimport pyarrow.parquet as pq\r\npath = \"part-r-00000-31fcf9bd-682f-4c20-bbe5-b0bd08699104.snappy.parquet\"\r\npq.read_table(path)\r\n\r\ngdb output:\r\n\r\nThread 3 \"python\" received signal SIGSEGV, Segmentation fault.\r\n[Switching to Thread 0x7fffdf199700 (LWP 13703)]\r\n0x00007fffdfc2a470 in parquet::arrow::StructImpl::GetDefLevels(short const\\***, unsigned long**) () from /home/ubuntu/miniconda2/lib/python2.7/site-packages/pyarrow/../../../libparquet.so.11\r\n\r\nI tested fastparquet, it reads the file just fine.",
        "created_at": "2018-12-04T02:14:54.000Z",
        "updated_at": "2019-09-07T23:13:01.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-09-07T23:12:58.000Z"
    },
    "comments": [
        {
            "created_at": "2018-12-04T15:00:16.670Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3933?focusedCommentId=16708821) by David Konerding (dekapache):*\nDo you have suggestions for a workaround?\u00a0 In particular, I'm curious if the problem repros outside of a conda install.\u00a0 I don't want to build the software manually but will do so if that resolves the issue (but I would also want to see a fixed version pushed to PyPI/conda forge)."
        },
        {
            "created_at": "2018-12-04T15:29:17.175Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3933?focusedCommentId=16708875) by Wes McKinney (wesm):*\nIt's hard to say until someone has a chance to look at it. Hopefully it can get fixed in time for the 0.12 release"
        },
        {
            "created_at": "2018-12-04T20:31:47.562Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3933?focusedCommentId=16709222) by David Konerding (dekapache):*\nIs there a file validator for parquet?\u00a0 Or something in arrow I can use without python (say, arrow-cpp simple test program) that will attempt to read the file?\u00a0\r\n\r\nDoes arrow have a general philosophy about releases and segfaulting (IE, I would expect that segfaulting on reading a valid parquet file would be a release-blocker)."
        },
        {
            "created_at": "2018-12-04T22:20:55.053Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3933?focusedCommentId=16709343) by Tim Poterba (tpoterba):*\nI'll note that this file has a pretty huge schema, in case that could be a factor. The following is from a different data release, but should be similar in dimension:\r\n\r\n<https://gist.github.com/tpoterba/7e44fc74d9692c9c4ccdf5693c36d370>"
        },
        {
            "created_at": "2018-12-04T22:23:58.345Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3933?focusedCommentId=16709349) by Wes McKinney (wesm):*\nTry using parquet-tools in the Java library https://github.com/apache/parquet-mr\r\n\r\n> Does arrow have a general philosophy about releases and segfaulting\r\n\r\nNo. A regression would be considered more seriously but we can't hold a release hostage if someone from the community cannot fix a bug"
        },
        {
            "created_at": "2018-12-04T22:38:53.328Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3933?focusedCommentId=16709364) by David Konerding (dekapache):*\nI noticed that the latest release of gnomad no longer uses Parquet (citing many problems with the format), so this bug is no longer a priority for me.\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0"
        },
        {
            "created_at": "2018-12-05T02:09:27.446Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3933?focusedCommentId=16709537) by Francois Saint-Jacques (fsaintjacques):*\nOffending line <https://github.com/apache/arrow/blob/master/cpp/src/parquet/arrow/reader.cc#L1538>\u00a0, I don't have enough knowledge on parquet file format to decide\u00a0if the file is corrupted or the assumption\u00a0in the code is correct.\u00a0"
        },
        {
            "created_at": "2018-12-05T02:31:26.889Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3933?focusedCommentId=16709548) by Wes McKinney (wesm):*\nEither `[~xhochy]` or I can take a closer look. This code path hasn't been hardened too much \u2013 and, of course, our support for nested data is very incomplete"
        },
        {
            "created_at": "2019-08-21T23:09:19.428Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3933?focusedCommentId=16912773) by Wes McKinney (wesm):*\nAdded to 0.15.0 milestone so I can take a quick look to assess whether this is a bug in Parquet C++"
        },
        {
            "created_at": "2019-09-06T19:41:22.678Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3933?focusedCommentId=16924554) by Wes McKinney (wesm):*\nThis is still core dumping. I'm going to take a look and see if I can figure it out\r\n\r\n```Java\n\r\n#0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51\r\n#1  0x00007ffff7805801 in __GI_abort () at abort.c:79\r\n#2  0x00007fffa4a37eee in arrow::util::CerrLog::~CerrLog (this=0x7fff84003b60) at ../src/arrow/util/logging.cc:50\r\n#3  0x00007fffa4a37f29 in arrow::util::CerrLog::~CerrLog (this=0x7fff84003b60) at ../src/arrow/util/logging.cc:44\r\n#4  0x00007fffa4a37b40 in arrow::util::ArrowLog::~ArrowLog (this=0x7fff9e63d188) at ../src/arrow/util/logging.cc:228\r\n#5  0x00007fffa2f8e0cc in parquet::arrow::StructReader::GetDefLevels (this=0x7fff8400b4b0, data=0x7fff9e63d328, length=0x7fff9e63d320)\r\n    at ../src/parquet/arrow/reader.cc:607\r\n#6  0x00007fffa2f8d615 in parquet::arrow::StructReader::DefLevelsToNullArray (this=0x7fff8400b4b0, null_bitmap_out=0x7fff9e63d4b0, null_count_out=0x7fff9e63d4a8)\r\n    at ../src/parquet/arrow/reader.cc:561\r\n#7  0x00007fffa2f8e75b in parquet::arrow::StructReader::NextBatch (this=0x7fff8400b4b0, records_to_read=1777, out=0x55555607cd60)\r\n    at ../src/parquet/arrow/reader.cc:647\r\n#8  0x00007fffa2fa403b in parquet::arrow::FileReaderImpl::ReadSchemaField (this=0x555555eb6310, i=2, indices=..., row_groups=..., out_field=0x55555607cd20, \r\n    out=0x55555607cd60) at ../src/parquet/arrow/reader.cc:182\r\n```"
        },
        {
            "created_at": "2019-09-06T19:41:48.267Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3933?focusedCommentId=16924555) by Wes McKinney (wesm):*\nI attached the offending file for convenience"
        },
        {
            "created_at": "2019-09-06T20:04:51.244Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3933?focusedCommentId=16924566) by Wes McKinney (wesm):*\nAs step one, I have it returning a reasonable error message instead of segfaulting:\r\n\r\n```Java\n\r\npyarrow.lib.ArrowIOError: Parquet struct decoding error. Expected to decode 1777 definition levels from child field \"bytes: binary not null\" in parent \"gs: struct<decompLen: int32, bytes: binary not null> not null\" but was only able to decode 0\r\nIn ../src/parquet/arrow/reader.cc, line 561, code: GetDefLevels(&def_levels_data, &def_levels_length)\r\nIn ../src/parquet/arrow/reader.cc, line 659, code: DefLevelsToNullArray(&null_bitmap, &null_count)\r\nIn ../src/parquet/arrow/reader.cc, line 795, code: final_status\r\n```\r\n\r\nNote that it won't be possible to read this file anyway because it contains repeated structs (see ARROW-1644)\r\n\r\nhttps://gist.github.com/wesm/fefdfc74bd5acffb92a6cbd3ec6e3c20"
        },
        {
            "created_at": "2019-09-07T23:12:58.563Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3933?focusedCommentId=16924997) by Wes McKinney (wesm):*\nIssue resolved by pull request 5314\n<https://github.com/apache/arrow/pull/5314>"
        }
    ]
}