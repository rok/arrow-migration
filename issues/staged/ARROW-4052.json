{
    "issue": {
        "title": "[C++] Linker errors with glog and gflags",
        "body": "***Note**: This issue was originally created as [ARROW-4052](https://issues.apache.org/jira/browse/ARROW-4052). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThis is very recent, probably one of Saturday's or Sunday's merges:\r\n```Java\n\r\n[176/293] Linking CXX executable debug/plasma_store_server\r\nFAILED: debug/plasma_store_server \r\n: && /usr/bin/ccache /usr/bin/g++-7  -Wno-noexcept-type  -fuse-ld=gold -ggdb -O0  -Wall -msse4.2 -fdiagnostics-color=always -Wextra -Wunused-result -Wno-unused-parameter -Wno-implicit-fallthrough -Wconversion -D_GLIBCXX_USE_CXX11_ABI=1 -D_XOPEN_SOURCE=500 -D_POSIX_C_SOURCE=200809L -fPIC -g  -rdynamic src/plasma/CMakeFiles/plasma_store_server.dir/store.cc.o  -o debug/plasma_store_server  -Wl,-rpath,/home/antoine/miniconda3/envs/pyarrow/lib: -lrt debug/libplasma.a debug/libarrow_cuda.a debug/libarrow.a -Wl,-Bstatic -lcudart_static -Wl,-Bdynamic -ldl -lrt -lcuda -lrt /home/antoine/miniconda3/envs/pyarrow/lib/libglog.a /home/antoine/miniconda3/envs/pyarrow/lib/libzstd.a /home/antoine/miniconda3/envs/pyarrow/lib/libz.so /home/antoine/miniconda3/envs/pyarrow/lib/libsnappy.a /home/antoine/miniconda3/envs/pyarrow/lib/liblz4.a /home/antoine/miniconda3/envs/pyarrow/lib/libbrotlidec-static.a /home/antoine/miniconda3/envs/pyarrow/lib/libbrotlienc-static.a /home/antoine/miniconda3/envs/pyarrow/lib/libbrotlicommon-static.a double-conversion_ep/src/double-conversion_ep/lib/libdouble-conversion.a /home/antoine/miniconda3/envs/pyarrow/lib/libboost_system.so /home/antoine/miniconda3/envs/pyarrow/lib/libboost_filesystem.so /home/antoine/miniconda3/envs/pyarrow/lib/libboost_regex.so jemalloc_ep-prefix/src/jemalloc_ep/dist//lib/libjemalloc_pic.a -lpthread /usr/lib/x86_64-linux-gnu/libpthread.so /home/antoine/miniconda3/envs/pyarrow/lib/libflatbuffers.a -lpthread && :\r\n/home/antoine/miniconda3/envs/pyarrow/lib/libglog.a(libglog_la-logging.o):logging.cc:function _GLOBAL__sub_I_logging.cc: error: undefined reference to 'google::FlagRegisterer::FlagRegisterer<bool>(char const*, char const*, char const*, bool*, bool*)'\r\n/home/antoine/miniconda3/envs/pyarrow/lib/libglog.a(libglog_la-logging.o):logging.cc:function _GLOBAL__sub_I_logging.cc: error: undefined reference to 'google::FlagRegisterer::FlagRegisterer<bool>(char const*, char const*, char const*, bool*, bool*)'\r\n/home/antoine/miniconda3/envs/pyarrow/lib/libglog.a(libglog_la-logging.o):logging.cc:function _GLOBAL__sub_I_logging.cc: error: undefined reference to 'google::FlagRegisterer::FlagRegisterer<bool>(char const*, char const*, char const*, bool*, bool*)'\r\n/home/antoine/miniconda3/envs/pyarrow/lib/libglog.a(libglog_la-logging.o):logging.cc:function _GLOBAL__sub_I_logging.cc: error: undefined reference to 'google::FlagRegisterer::FlagRegisterer<bool>(char const*, char const*, char const*, bool*, bool*)'\r\n/home/antoine/miniconda3/envs/pyarrow/lib/libglog.a(libglog_la-logging.o):logging.cc:function _GLOBAL__sub_I_logging.cc: error: undefined reference to 'google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*)'\r\n/home/antoine/miniconda3/envs/pyarrow/lib/libglog.a(libglog_la-logging.o):logging.cc:function _GLOBAL__sub_I_logging.cc: error: undefined reference to 'google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)'\r\n/home/antoine/miniconda3/envs/pyarrow/lib/libglog.a(libglog_la-logging.o):logging.cc:function _GLOBAL__sub_I_logging.cc: error: undefined reference to 'google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*)'\r\n/home/antoine/miniconda3/envs/pyarrow/lib/libglog.a(libglog_la-logging.o):logging.cc:function _GLOBAL__sub_I_logging.cc: error: undefined reference to 'google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*)'\r\n/home/antoine/miniconda3/envs/pyarrow/lib/libglog.a(libglog_la-logging.o):logging.cc:function _GLOBAL__sub_I_logging.cc: error: undefined reference to 'google::FlagRegisterer::FlagRegisterer<int>(char const*, char const*, char const*, int*, int*)'\r\n/home/antoine/miniconda3/envs/pyarrow/lib/libglog.a(libglog_la-logging.o):logging.cc:function _GLOBAL__sub_I_logging.cc: error: undefined reference to 'google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)'\r\n/home/antoine/miniconda3/envs/pyarrow/lib/libglog.a(libglog_la-logging.o):logging.cc:function _GLOBAL__sub_I_logging.cc: error: undefined reference to 'google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)'\r\n/home/antoine/miniconda3/envs/pyarrow/lib/libglog.a(libglog_la-logging.o):logging.cc:function _GLOBAL__sub_I_logging.cc: error: undefined reference to 'google::FlagRegisterer::FlagRegisterer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)'\r\ncollect2: error: ld returned 1 exit status\r\n```\r\n\r\nThis is the build command line:\r\n```bash\n\r\ncmake .. -GNinja \\\r\n    -DCMAKE_BUILD_TYPE=Debug \\\r\n    -DCMAKE_INSTALL_PREFIX=$ARROW_HOME \\\r\n    -DCMAKE_INSTALL_MESSAGE=LAZY \\\r\n    -DARROW_CXXFLAGS=\"$ARROW_CXXFLAGS\" \\\r\n    -DARROW_CUDA=on \\\r\n    -DARROW_PARQUET=on \\\r\n    -DARROW_PLASMA=on \\\r\n    -DARROW_PYTHON=on \\\r\n    -DARROW_GANDIVA=off \\\r\n    -DARROW_BUILD_TESTS=on \\\r\n\r\nnice cmake --build . --target install\r\n```\r\n\r\nThese are the installed versions (through Anaconda):\r\n```Java\n\r\ngflags                    2.2.2                he6710b0_0    defaults\r\nglog                      0.3.5                hf484d3e_1    defaults\r\n```\r\n",
        "created_at": "2018-12-17T10:33:22.000Z",
        "updated_at": "2018-12-20T22:55:37.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2018-12-20T22:55:19.000Z"
    },
    "comments": [
        {
            "created_at": "2018-12-17T10:35:13.898Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4052?focusedCommentId=16722858) by Antoine Pitrou (apitrou):*\n(uninstalling glog and passing `ARROW_USE_GLOG=off` works around the issue)"
        },
        {
            "created_at": "2018-12-17T16:39:51.677Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4052?focusedCommentId=16723140) by Wes McKinney (wesm):*\nThat's https://github.com/apache/arrow/commit/77d3a46e14c5292024619c1fb08bba444c42b52c \u2013 glog wasn't being used at all before that patch (with with ARROW_USE_GLOG=on) so this part of your toolchain never got exercised"
        },
        {
            "created_at": "2018-12-20T09:10:56.262Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4052?focusedCommentId=16725695) by Kousuke Saruta (sarutak):*\nNow I'm working on this."
        },
        {
            "created_at": "2018-12-20T22:55:19.024Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4052?focusedCommentId=16726296) by Wes McKinney (wesm):*\nIssue resolved by pull request 3234\n<https://github.com/apache/arrow/pull/3234>"
        }
    ]
}