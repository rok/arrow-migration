{
    "issue": {
        "title": "[C++] Array methods IsNull and IsValid are not complementary",
        "body": "***Note**: This issue was originally created as [ARROW-2622](https://issues.apache.org/jira/browse/ARROW-2622). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nHi, not sure if this is a bug or if I misinterpret the spec. According to the latter, \"Arrays having a 0 null count may choose to not allocate the null bitmap\". From\u00a0this I'd infer that the\u00a0statement also holds in the other direction, i.e.\u00a0non-allocated bitmaps imply a 0 null count. This would mean that if a bitmap is not allocated, IsValid() should always return true. But at the moment it's doing this:\r\n```java\n\r\nbool IsNull(int64_t i) const {\r\n  return null_bitmap_data_ != NULLPTR &&\r\n    BitUtil::BitNotSet(null_bitmap_data_, i + data_->offset);\r\n}\r\n\r\nbool IsValid(int64_t i) const {\r\n  return null_bitmap_data_ != NULLPTR &&\r\n    BitUtil::GetBit(null_bitmap_data_, i + data_->offset);\r\n}\r\n```\r\nWhich leads to a situation where\u00a0in the case of non-allocated bitmaps values are neither Null nor Valid. Shouldn't it rather be:\r\n```java\n\r\nbool IsValid(int64_t i) const {\r\n  return null_bitmap_data_ == NULLPTR ||\r\n    BitUtil::GetBit(null_bitmap_data_, i + data_->offset);\r\n}\n```\r\n?",
        "created_at": "2018-05-21T17:03:21.000Z",
        "updated_at": "2019-02-06T14:49:21.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-02-06T14:48:57.000Z"
    },
    "comments": [
        {
            "created_at": "2018-05-26T19:53:17.454Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2622?focusedCommentId=16491808) by Antoine Pitrou (apitrou):*\nYes, you're right that `IsValid` seems buggy here. Do you want to propose a PR?"
        },
        {
            "created_at": "2019-02-06T14:48:28.757Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2622?focusedCommentId=16761797) by Antoine Pitrou (apitrou):*\nLooks like this was fixed in ARROW-2641."
        }
    ]
}