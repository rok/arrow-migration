{
    "issue": {
        "title": "[Dev] \"archery lint\" outputs unapplicable patch file",
        "body": "***Note**: This issue was originally created as [ARROW-7401](https://issues.apache.org/jira/browse/ARROW-7401). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n```Java\n\r\nINFO:archery:Running r linter\r\n/home/antoine/arrow/dev/r/src/py-to-r.cpp had clang-format style issues\r\n\r\n--- /home/antoine/arrow/dev/r/src/py-to-r.cpp\r\n+++ /home/antoine/arrow/dev/r/src/py-to-r.cpp (after clang format)\r\n@@ -21,16 +21,15 @@\r\n \r\n // [[arrow::export]]\r\n std::shared_ptr<arrow::Array> ImportArray(uintptr_t array, uintptr_t schema) {\r\n-  return VALUE_OR_STOP(arrow::ImportArray(\r\n-      reinterpret_cast<struct ArrowArray*>(array),\r\n-      reinterpret_cast<struct ArrowSchema*>(schema)));\r\n+  return VALUE_OR_STOP(arrow::ImportArray(reinterpret_cast<struct ArrowArray*>(array),\r\n+                                          reinterpret_cast<struct ArrowSchema*>(schema)));\r\n }\r\n \r\n // [[arrow::export]]\r\n std::shared_ptr<arrow::RecordBatch> ImportRecordBatch(uintptr_t array, uintptr_t schema) {\r\n-  return VALUE_OR_STOP(arrow::ImportRecordBatch(\r\n-      reinterpret_cast<struct ArrowArray*>(array),\r\n-      reinterpret_cast<struct ArrowSchema*>(schema)));\r\n+  return VALUE_OR_STOP(\r\n+      arrow::ImportRecordBatch(reinterpret_cast<struct ArrowArray*>(array),\r\n+                               reinterpret_cast<struct ArrowSchema*>(schema)));\r\n }\r\n \r\n // [[arrow::export]]\r\n@@ -56,23 +55,22 @@\r\n \r\n // [[arrow::export]]\r\n void ExportSchema(const std::shared_ptr<arrow::Schema>& schema, uintptr_t ptr) {\r\n-  STOP_IF_NOT_OK(arrow::ExportSchema(*schema, reinterpret_cast<struct ArrowSchema*>(ptr)));\r\n+  STOP_IF_NOT_OK(\r\n+      arrow::ExportSchema(*schema, reinterpret_cast<struct ArrowSchema*>(ptr)));\r\n }\r\n \r\n // [[arrow::export]]\r\n void ExportArray(const std::shared_ptr<arrow::Array>& array, uintptr_t ptr,\r\n                  uintptr_t schema_ptr) {\r\n-  STOP_IF_NOT_OK(arrow::ExportArray(*array,\r\n-                                    reinterpret_cast<struct ArrowArray*>(ptr),\r\n+  STOP_IF_NOT_OK(arrow::ExportArray(*array, reinterpret_cast<struct ArrowArray*>(ptr),\r\n                                     reinterpret_cast<struct ArrowSchema*>(schema_ptr)));\r\n }\r\n \r\n // [[arrow::export]]\r\n-void ExportRecordBatch(const std::shared_ptr<arrow::RecordBatch>& batch,\r\n-                       uintptr_t ptr, uintptr_t schema_ptr) {\r\n+void ExportRecordBatch(const std::shared_ptr<arrow::RecordBatch>& batch, uintptr_t ptr,\r\n+                       uintptr_t schema_ptr) {\r\n   STOP_IF_NOT_OK(\r\n-      arrow::ExportRecordBatch(*batch,\r\n-                               reinterpret_cast<struct ArrowArray*>(ptr),\r\n+      arrow::ExportRecordBatch(*batch, reinterpret_cast<struct ArrowArray*>(ptr),\r\n                                reinterpret_cast<struct ArrowSchema*>(schema_ptr)));\r\n }\r\n \r\n```\r\n\r\nIf I try to apply the patch file using `patch -p0`:\r\n```Java\n\r\nIgnoring potentially dangerous file name /home/antoine/arrow/dev/r/src/py-to-r.cpp\r\ncan't find file to patch at input line 3\r\nPerhaps you used the wrong -p or --strip option?\r\nThe text leading up to this was:\r\n--------------------------\r\n|--- /home/antoine/arrow/dev/r/src/py-to-r.cpp\r\n|+++ /home/antoine/arrow/dev/r/src/py-to-r.cpp (after clang format)\r\n--------------------------\r\n```\r\n\r\n",
        "created_at": "2019-12-16T12:59:15.000Z",
        "updated_at": "2020-06-12T03:15:14.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Developer Tools",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2019-12-16T12:59:29.501Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7401?focusedCommentId=16997261) by Antoine Pitrou (apitrou):*\nIt seems there is an obscure incantation to work around the issue:\r\nhttps://unix.stackexchange.com/questions/167216/how-can-i-apply-a-p0-patch-from-any-working-directory\r\n"
        }
    ]
}