{
    "issue": {
        "title": "[C++][Parquet] Timestamp ColumnDescriptor (from logical type) incorrectly showing ConvertedType as NONE",
        "body": "***Note**: This issue was originally created as [ARROW-11399](https://issues.apache.org/jira/browse/ARROW-11399). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI ran into this, and find it confusing:\r\n\r\n```Java\n\r\nIn [1]: import pyarrow.parquet as pq\r\n\r\nIn [3]: table = pa.table({'a': pa.array([1, 2], pa.timestamp(\"ms\")), 'b': pa.array([1, 2], pa.timestamp(\"ms\", tz=\"UTC\"))})\r\n\r\nIn [4]: pq.write_table(table, \"test_parquet_schema.parquet\")\r\n\r\nIn [5]: pq.read_metadata(\"test_parquet_schema.parquet\").schema.column(0)\r\nOut[5]: \r\n<ParquetColumnSchema>\r\n  name: a\r\n  path: a\r\n  max_definition_level: 1\r\n  max_repetition_level: 0\r\n  physical_type: INT64\r\n  logical_type: Timestamp(isAdjustedToUTC=false, timeUnit=milliseconds, is_from_converted_type=false, force_set_converted_type=false)\r\n  converted_type (legacy): NONE\r\n\r\nIn [6]: pq.read_metadata(\"test_parquet_schema.parquet\").schema.column(1)\r\nOut[6]: \r\n<ParquetColumnSchema>\r\n  name: b\r\n  path: b\r\n  max_definition_level: 1\r\n  max_repetition_level: 0\r\n  physical_type: INT64\r\n  logical_type: Timestamp(isAdjustedToUTC=true, timeUnit=milliseconds, is_from_converted_type=false, force_set_converted_type=false)\r\n  converted_type (legacy): TIMESTAMP_MILLIS\r\n```\r\n\r\nSo it \"seems\" that the parquet file has the legacy ConvertedType only set for the second column, and not the first (where the first is timezone naive, and the second timezone aware). \r\n\r\nHowever, I am quite sure it sets it for both. Because that was the result of the discussion about this at the time of pyarrow 0.14 (ARROW-5878, https://github.com/apache/arrow/pull/4825. Initially we only set the ConvertedType for tz-aware data, but after discussion that was changed to do for both, see also the update to the parquet thrift at PARQUET-1627), and can also be shown by reading the parquet schema with an older version of pyarrow that doesn't support logical types:\r\n\r\n```Java\n\r\nIn [1]: import pyarrow.parquet as pq\r\n\r\nIn [2]: pa.__version__\r\nOut[2]: '0.13.0'\r\n\r\nIn [4]: pq.read_metadata(\"test_parquet_schema.parquet\").schema\r\nOut[4]: \r\n<pyarrow._parquet.ParquetSchema object at 0x7f67d407fe50>\r\na: INT64 TIMESTAMP_MILLIS\r\nb: INT64 TIMESTAMP_MILLIS\r\n```\r\n\r\nI understand that when _reading_ the schema in a recent version of pyarrow, we don't need the ConvertedType information anymore for proper reading of the data, but seemingly indicating that the ConvertedType is not present in the parquet schema is quite confusing (certainly if checking files for forward/backward compatibility behaviour).\r\n\r\ncc `[~tpboudreau]`",
        "created_at": "2021-01-27T13:26:11.000Z",
        "updated_at": "2021-01-27T13:28:47.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": []
}