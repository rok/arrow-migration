{
    "issue": {
        "title": "[Python][C++] Enable CSV reader to read from concatenated gzip stream",
        "body": "***Note**: This issue was originally created as [ARROW-5974](https://issues.apache.org/jira/browse/ARROW-5974). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIf two gzipped files are concatenated together, the result is a valid gzip file.\u00a0 However, it appears that pyarrow.csv.read_csv will only read the portion related to the first file.\r\n\r\nIf the repro script [here](https://gist.github.com/jordansamuels/d69f1c22c58418f5dfa0785b9ecd211e)\u00a0is run, the output is:\r\n\r\n`$ python repro.py`\r\n`pyarrow.csv only reads one row:`\r\n` x`\r\n`0 1`\r\n`pandas reads two rows:`\r\n` x`\r\n`0 1`\r\n`1 2`\r\n`pyarrow version: 0.14.0`",
        "created_at": "2019-07-18T03:12:15.000Z",
        "updated_at": "2019-08-01T22:39:40.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-08-01T14:04:57.000Z"
    },
    "comments": [
        {
            "created_at": "2019-07-18T03:13:35.879Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5974?focusedCommentId=16887574) by Jordan Samuels (jordan_samuels):*\nConfirmed same issue for 0.13.0"
        },
        {
            "created_at": "2019-07-18T08:35:18.186Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5974?focusedCommentId=16887750) by Antoine Pitrou (apitrou):*\nI'm not sure Pandas does it deliberately. `[~wesmckinn]` Do you know about that?"
        },
        {
            "created_at": "2019-07-18T08:43:42.330Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5974?focusedCommentId=16887755) by Antoine Pitrou (apitrou):*\nFrom a technical point of view, when you're concatenating several gzip files, you're creating a file with several gzip streams. Python reads all the streams as if they were a single one. Arrow doesn't.\r\n\r\nIs there a reason why you'd like to this to work?"
        },
        {
            "created_at": "2019-07-18T10:05:53.791Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5974?focusedCommentId=16887829) by Jordan Samuels (jordan_samuels):*\n`[~pitrou]` there are two reasons I'd like it to work.\u00a0 Generally, because it seems intuitive that reading a gzip'd file with decompression should have the same end state as gunzip'ing the file on the command line and then reading it - and this is not the case in my example.\u00a0 Also specifically, I'm working with some third party data that is evidently of this form - a vendor has concatenated gzip'd files together as .gz files, and it would be useful to be able to read them directly with read_csv directly rather than gunzip them as a separate step."
        },
        {
            "created_at": "2019-07-18T16:19:57.866Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5974?focusedCommentId=16888117) by Wes McKinney (wesm):*\nYou would need to develop a C++ interface to interpret a file-of-concatenated-gzips as a single logical stream. \r\n\r\nI don't think pandas has any specific logic about this, it's all handled by the `gzip.GzipFile`\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/2811464a87e6e18f5daef87ee700075ebd8a5e7d/pandas/_libs/parsers.pyx#L625"
        },
        {
            "created_at": "2019-07-18T16:20:47.944Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5974?focusedCommentId=16888120) by Wes McKinney (wesm):*\nI updated the JIRA to reclassify this as a new feature. PRs welcome"
        },
        {
            "created_at": "2019-08-01T14:04:57.028Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5974?focusedCommentId=16898108) by Francois Saint-Jacques (fsaintjacques):*\nIssue resolved by pull request 4923\n<https://github.com/apache/arrow/pull/4923>"
        }
    ]
}