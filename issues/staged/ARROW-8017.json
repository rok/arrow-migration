{
    "issue": {
        "title": "[Python] Pyarrow no support for pathlib Path with table = pa.Table.from_pandas() or pd.to_parquet()",
        "body": "***Note**: This issue was originally created as [ARROW-8017](https://issues.apache.org/jira/browse/ARROW-8017). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nTrying to store a table with Python's pathlib Path will give an ArrowInvalid:\r\n\r\n`ArrowInvalid: ('Could not convert foo/spam.wav with type PosixPath: did not recognize Python value type when inferring an Arrow data type', 'Conversion failed for column filepath with type object')`\r\n\r\n`Pandas approach:`\r\n```python\n\r\nimport pandas as pd\r\ndf_test = pd.DataFrame({\"filepath\": [Path(\"foo\", \"spam.wav\")]})\r\ndf_test.to_parquet(\"egg.parquet\")\n```\r\n\u00a0\r\n\r\n`Parquet approach`\r\n```python\n\r\nimport pyarrow as pa\r\nimport pyarrow.parquet as pq\r\ntable = pa.Table.from_pandas(df_test)\u00a0 # fails here\r\n# pq.write_table(table, 'egg.parquet') # , version='2.0'\r\n```\r\n\u00a0\r\n\r\n`Full error Traceback of\u00a0``pa.Table.from_pandas`\r\n```python\n\r\n---------------------------------------------------------------------------\r\nArrowInvalid                              Traceback (most recent call last)\r\n<ipython-input-220-bce69439945e> in <module>\r\n      2 import pyarrow.parquet as pq\r\n      3 \r\n----> 4 table = pa.Table.from_pandas(df_test)\r\n      5 pq.write_table(table, 'egg.parquet', version='2.0')\r\n\r\n~/anaconda3/envs/soundrhythm/lib/python3.8/site-packages/pyarrow/table.pxi in pyarrow.lib.Table.from_pandas()\r\n\r\n~/anaconda3/envs/soundrhythm/lib/python3.8/site-packages/pyarrow/pandas_compat.py in dataframe_to_arrays(df, schema, preserve_index, nthreads, columns, safe)\r\n    552 \r\n    553     if nthreads == 1:\r\n--> 554         arrays = [convert_column(c, f)\r\n    555                   for c, f in zip(columns_to_convert, convert_fields)]\r\n    556     else:\r\n\r\n~/anaconda3/envs/soundrhythm/lib/python3.8/site-packages/pyarrow/pandas_compat.py in <listcomp>(.0)\r\n    552 \r\n    553     if nthreads == 1:\r\n--> 554         arrays = [convert_column(c, f)\r\n    555                   for c, f in zip(columns_to_convert, convert_fields)]\r\n    556     else:\r\n\r\n~/anaconda3/envs/soundrhythm/lib/python3.8/site-packages/pyarrow/pandas_compat.py in convert_column(col, field)\r\n    544             e.args += (\"Conversion failed for column {0!s} with type {1!s}\"\r\n    545                        .format(col.name, col.dtype),)\r\n--> 546             raise e\r\n    547         if not field_nullable and result.null_count > 0:\r\n    548             raise ValueError(\"Field {} was non-nullable but pandas column \"\r\n\r\n~/anaconda3/envs/soundrhythm/lib/python3.8/site-packages/pyarrow/pandas_compat.py in convert_column(col, field)\r\n    538 \r\n    539         try:\r\n--> 540             result = pa.array(col, type=type_, from_pandas=True, safe=safe)\r\n    541         except (pa.ArrowInvalid,\r\n    542                 pa.ArrowNotImplementedError,\r\n\r\n~/anaconda3/envs/soundrhythm/lib/python3.8/site-packages/pyarrow/array.pxi in pyarrow.lib.array()\r\n\r\n~/anaconda3/envs/soundrhythm/lib/python3.8/site-packages/pyarrow/error.pxi in pyarrow.lib.check_status()\r\n\r\n~/anaconda3/envs/soundrhythm/lib/python3.8/site-packages/pyarrow/error.pxi in pyarrow.lib.check_status()\r\n\r\nArrowInvalid: ('Could not convert foo/spam.wav with type PosixPath: did not recognize Python value type when inferring an Arrow data type', 'Conversion failed for column filepath with type object')\n```\r\n\r\nMight be related to https://issues.apache.org/jira/browse/ARROW-2046 , although that was about file save location.",
        "created_at": "2020-03-06T06:33:56.000Z",
        "updated_at": "2021-08-23T09:42:54.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-08-23T09:39:35.000Z"
    },
    "comments": [
        {
            "created_at": "2021-08-23T09:38:19.085Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8017?focusedCommentId=17403079) by Joris Van den Bossche (jorisvandenbossche):*\nA very late response, but the issue here is that pyarrow doesn't support converting custom Python objects (because we can't store them in one of the pyarrow data types). Thus in practice, we only support object dtype columns that contain basic numbers of strings. \r\n\r\nSmall example with a custom class:\r\n\r\n```python\n\r\nclass MyClass:\r\n    pass\r\n\r\n# putting a custom class in a pandas Series works, this is stored in an \"object\" dtype column\r\nIn [16]: s = pd.Series([MyClass()])\r\n\r\nIn [17]: s\r\nOut[17]: \r\n0    <__main__.MyClass object at 0x7f887ad3f850>\r\ndtype: object\r\n\r\n# but converting such object dtype data to pyarrow isn't supported\r\nIn [18]: pa.array(s)\r\n...\r\nArrowInvalid: Could not convert <__main__.MyClass object at 0x7f887ad3f850> with type MyClass: did not recognize Python value type when inferring an Arrow data type\r\n```\r\n\r\nThe same happens here with the `pathlib.Path` object in your example. I think the best workaround is to convert those paths upfront to strings before trying to save to Parquet."
        },
        {
            "created_at": "2021-08-23T09:42:54.792Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8017?focusedCommentId=17403083) by Joris Van den Bossche (jorisvandenbossche):*\nAlthough I closed this as a \"won't fix\" (short term), we actually have ARROW-5931 about a potential way to store custom Python objects."
        }
    ]
}