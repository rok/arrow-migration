{
    "issue": {
        "title": "[C++] Investigate spurious memset() calls",
        "body": "***Note**: This issue was originally created as [ARROW-2641](https://issues.apache.org/jira/browse/ARROW-2641). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n`builder.cc` has TODO statements of the form:\r\n\r\n```c++\n\r\n  // TODO(emkornfield) valgrind complains without this\r\n  memset(data_->mutable_data(), 0, static_cast<size_t>(nbytes));\r\n```\r\n\r\nIdeally we shouldn't have to zero-initialize a data buffer before writing to it.\r\n",
        "created_at": "2018-05-28T12:50:44.000Z",
        "updated_at": "2019-02-06T14:48:58.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2018-05-31T15:38:16.000Z"
    },
    "comments": [
        {
            "created_at": "2018-05-28T20:11:12.795Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2641?focusedCommentId=16492909) by Robert Nishihara (robertnishihara):*\nMost likely unrelated, but we memset some unused padding bytes to 0 in the c++ implementation to make the serialization deterministic. e.g., https://github.com/apache/arrow/pull/405"
        },
        {
            "created_at": "2018-05-31T15:38:16.471Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2641?focusedCommentId=16496724) by Wes McKinney (wesm):*\nIssue resolved by pull request 2091\n<https://github.com/apache/arrow/pull/2091>"
        },
        {
            "created_at": "2018-05-31T15:44:01.525Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2641?focusedCommentId=16496730) by Antoine Pitrou (apitrou):*\nAs a side note, though, the fact that our IPC code can write out uninitialized memory /might/ have adverse security consequences."
        }
    ]
}