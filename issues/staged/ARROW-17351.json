{
    "issue": {
        "title": "[C++][Compute] Support to initialize expression with a string",
        "body": "***Note**: This issue was originally created as [ARROW-17351](https://issues.apache.org/jira/browse/ARROW-17351). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI want to achieve such a function, first would like to ask you which way to achieve better\r\n\r\n\u00a0\r\n\r\nFor example, I want to initialize an expression whose content is\r\n\r\na210 - (a210 /203) \\* 203 = 0\r\n\r\nThis means that column A210 modulo 203 is equal to 0\r\n\r\n\u00a0\r\n\r\nHow do you compare these two ideas?\r\n\r\n\u00a0\r\n\r\n\"(subtract(a210, multiply(divide(a210, 203), 203)) == 0)\" to Expression\r\n\r\nor\r\n\r\n\"a210-(a210/203)\\*203==0\" to Expression",
        "created_at": "2022-08-09T03:10:23.000Z",
        "updated_at": "2022-11-18T23:04:38.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-08-09T16:00:39.466Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17351?focusedCommentId=17577503) by Weston Pace (westonpace):*\nI think the first (more verbose) option is preferred because it will be more generic.\r\n\r\nHowever, if the first option is working, the second option can always be added later as an optional shortcut (and then support both)."
        },
        {
            "created_at": "2022-08-19T03:01:50.822Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17351?focusedCommentId=17581621) by Eduardo Ponce (edponce):*\nI have several comments with respect to string-to-Expression support:\r\n1. Favor explicit names for operations (via prefix notation) instead of algebraic expressions\r\n     \\* Names allow referring to any compute function. Recall that there are different variants of the same operation (e.g., `add` vs `add_checked`) and many functions do not have an mathematical symbol.\r\n     \\* Names with parenthesis allow passing `FunctionOptions` where applicable.\r\n     \\* [Mapping common mathematical symbols to compute functions is done currently in Arrow R.](https://github.com/apache/arrow/blob/master/r/R/expression.R#L89-L100)\r\n\r\n2. String expressions require defining an escape character and rules for handling this type of nuisances.\r\n\r\n3. There have been ideas to support a text format for defining unit tests' inputs. Ideally, a single text format would be practical for both cases, otherwise, it may not be adequate to pursue an Arrow custom text format."
        }
    ]
}