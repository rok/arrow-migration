{
    "issue": {
        "title": "[C++] S3-related crash on macOS",
        "body": "***Note**: This issue was originally created as [ARROW-16043](https://issues.apache.org/jira/browse/ARROW-16043). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI'm not sure that's due to a AWS SDK version bump, but the C++ (and Python) S3 tests have started crashing on macOS CI.\r\n\r\nThere's a lldb traceback here:\r\nhttps://github.com/apache/arrow/runs/5714619423?check_suite_focus=true#step:8:222\r\nExcerpt:\r\n```Java\n\r\n* thread #1, stop reason = signal SIGSTOP\r\n  * frame #0: 0x00007fff202d2bca libc++.1.dylib`std::__1::basic_istream<char, std::__1::char_traits<char> >::sentry::sentry(std::__1::basic_istream<char, std::__1::char_traits<char> >&, bool) + 26\r\n    frame #1: 0x00007fff202d4c32 libc++.1.dylib`std::__1::basic_istream<char, std::__1::char_traits<char> >::tellg() + 132\r\n    frame #2: 0x000000011000f445 libaws-cpp-sdk-core.dylib`Aws::Utils::Crypto::MD5CommonCryptoImpl::Calculate(std::__1::basic_istream<char, std::__1::char_traits<char> >&) + 71\r\n    frame #3: 0x000000010ffd562f libaws-cpp-sdk-core.dylib`Aws::Utils::Crypto::MD5::Calculate(std::__1::basic_istream<char, std::__1::char_traits<char> >&) + 19\r\n    frame #4: 0x000000010ffcf5d5 libaws-cpp-sdk-core.dylib`Aws::Utils::HashingUtils::CalculateMD5(std::__1::basic_iostream<char, std::__1::char_traits<char> >&) + 51\r\n    frame #5: 0x000000010fff88d0 libaws-cpp-sdk-core.dylib`Aws::Client::AWSClient::AddChecksumToRequest(std::__1::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&) const + 1250\r\n    frame #6: 0x000000010fff9dfb libaws-cpp-sdk-core.dylib`Aws::Client::AWSClient::BuildHttpRequest(Aws::AmazonWebServiceRequest const&, std::__1::shared_ptr<Aws::Http::HttpRequest> const&) const + 77\r\n    frame #7: 0x000000010fff541d libaws-cpp-sdk-core.dylib`Aws::Client::AWSClient::AttemptOneRequest(std::__1::shared_ptr<Aws::Http::HttpRequest> const&, Aws::AmazonWebServiceRequest const&, char const*, char const*, char const*) const + 51\r\n    frame #8: 0x000000010fff4137 libaws-cpp-sdk-core.dylib`Aws::Client::AWSClient::AttemptExhaustively(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const + 875\r\n    frame #9: 0x000000010fffc3ee libaws-cpp-sdk-core.dylib`Aws::Client::AWSXMLClient::MakeRequest(Aws::Http::URI const&, Aws::AmazonWebServiceRequest const&, Aws::Http::HttpMethod, char const*, char const*, char const*) const + 60\r\n    frame #10: 0x000000010fc65913 libaws-cpp-sdk-s3.dylib`Aws::S3::S3Client::PutObject(Aws::S3::Model::PutObjectRequest const&) const + 1811\r\n    frame #11: 0x00000001030dfa1c arrow-s3fs-test`arrow::fs::TestS3FS::SetUp(this=0x00007fbcb3cf3340) at s3fs_test.cc:421:7\r\n    frame #12: 0x0000000110100a0b libgtestd.1.11.0.dylib`void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(object=0x00007fbcb3cf3340, method=11 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00, location=\"SetUp()\")(), char const*) at gtest.cc:2607:10\r\n    frame #13: 0x00000001100c324a libgtestd.1.11.0.dylib`void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(object=0x00007fbcb3cf3340, method=11 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00, location=\"SetUp()\")(), char const*) at gtest.cc:2643:14\r\n    frame #14: 0x00000001100c313c libgtestd.1.11.0.dylib`testing::Test::Run(this=0x00007fbcb3cf3340) at gtest.cc:2677:3\r\n    frame #15: 0x00000001100c4371 libgtestd.1.11.0.dylib`testing::TestInfo::Run(this=0x00007fbcb3c1f790) at gtest.cc:2861:11\r\n    frame #16: 0x00000001100c5414 libgtestd.1.11.0.dylib`testing::TestSuite::Run(this=0x00007fbcb3c1f8f0) at gtest.cc:3015:28\r\n    frame #17: 0x00000001100d4b2e libgtestd.1.11.0.dylib`testing::internal::UnitTestImpl::RunAllTests(this=0x00007fbcb3c207d0) at gtest.cc:5855:44\r\n    frame #18: 0x0000000110105abb libgtestd.1.11.0.dylib`bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(object=0x00007fbcb3c207d0, method=50 47 0d 10 01 00 00 00 00 00 00 00 00 00 00 00, location=\"auxiliary test code (environments or event listeners)\")(), char const*) at gtest.cc:2607:10\r\n    frame #19: 0x00000001100d44ea libgtestd.1.11.0.dylib`bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(object=0x00007fbcb3c207d0, method=50 47 0d 10 01 00 00 00 00 00 00 00 00 00 00 00, location=\"auxiliary test code (environments or event listeners)\")(), char const*) at gtest.cc:2643:14\r\n    frame #20: 0x00000001100d43cb libgtestd.1.11.0.dylib`testing::UnitTest::Run(this=0x000000011011f440) at gtest.cc:5438:10\r\n    frame #21: 0x000000010f782ed1 libgtest_maind.1.11.0.dylib`RUN_ALL_TESTS() at gtest.h:2490:46\r\n    frame #22: 0x000000010f782ead libgtest_maind.1.11.0.dylib`main(argc=1, argv=0x00007ffeecb61390) at gtest_main.cc:52:10\r\n    frame #23: 0x00007fff20381f3d libdyld.dylib`start + 1\r\n```",
        "created_at": "2022-03-28T12:55:04.000Z",
        "updated_at": "2022-04-16T14:31:16.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Continuous Integration",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-04-15T20:24:04.000Z"
    },
    "comments": [
        {
            "created_at": "2022-03-28T12:56:21.828Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16043?focusedCommentId=17513362) by Antoine Pitrou (apitrou):*\ncc `[~kou]`"
        },
        {
            "created_at": "2022-03-28T13:28:24.147Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16043?focusedCommentId=17513381) by Kouhei Sutou (kou):*\nIt seems that this is caused by https://github.com/aws/aws-sdk-cpp/commit/01e61b3137f90509e71765ee7e3b4a39e2e8de91 .\r\n`Aws::Client::AWSClient::AddChecksumToRequest` was added by the commit.\r\n\r\nI don't know why but `if (request.IsStreaming())` check doesn't exist only for `md5` checkum case: https://github.com/aws/aws-sdk-cpp/commit/01e61b3137f90509e71765ee7e3b4a39e2e8de91#diff-0d6ccd061cd510e9343ec544ade9358c104f8b004ac66bb6d441c18cd3b73d2aR701-R704\r\nThis may be a problem."
        },
        {
            "created_at": "2022-04-14T18:49:42.218Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16043?focusedCommentId=17522497) by Jonathan Keane (jonkeane):*\n`[~kou]` any chance you might be able to look at this before the upcoming release? \r\n\r\nWe also suspect it might be the same thing going on with ARROW-16070"
        },
        {
            "created_at": "2022-04-15T00:13:40.299Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16043?focusedCommentId=17522593) by Kouhei Sutou (kou):*\nOK. I'll fix this."
        },
        {
            "created_at": "2022-04-15T20:24:04.684Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16043?focusedCommentId=17522945) by Kouhei Sutou (kou):*\nIssue resolved by pull request 12895\n<https://github.com/apache/arrow/pull/12895>"
        }
    ]
}