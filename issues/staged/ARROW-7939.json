{
    "issue": {
        "title": "[Python] crashes when reading parquet file compressed with snappy",
        "body": "***Note**: This issue was originally created as [ARROW-7939](https://issues.apache.org/jira/browse/ARROW-7939). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen I installed pyarrow 0.16, some parquet files created with pyarrow 0.15.1 would make python crash. I drilled down to the simplest example I could find.\r\n\r\nIt happens that some parquet files created with pyarrow 0.16 cannot either be read back. The example below works fine with arrays_ok but python crashes with arrays_nok (and as soon as they are at least three different values apparently).\r\n\r\nBesides, it works fine with 'none', 'gzip' and 'brotli' compression. The problem seems to happen only with snappy.\r\n```python\n\r\nimport pyarrow.parquet as pq\r\nimport pyarrow as pa\r\narrays_ok = [[0,1]]\r\narrays_ok = [[0,1,1]]\r\narrays_nok = [[0,1,2]]\r\ntable = pa.Table.from_arrays(arrays_nok,names=['a'])\r\npq.write_table(table,'foo.parquet',compression='snappy')\r\npq.read_table('foo.parquet')\r\n```",
        "created_at": "2020-02-25T14:59:59.000Z",
        "updated_at": "2021-01-15T18:28:24.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-06-27T23:05:00.000Z"
    },
    "comments": [
        {
            "created_at": "2020-03-03T18:20:43.541Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7939?focusedCommentId=17050456) by Joris Van den Bossche (jorisvandenbossche):*\n`[~marcbernot]` Thanks for the report!\r\n\r\nCan you give a bit more details on the environment you experience this with? \r\nI just tried with conda-forge (clean environment with ` conda create -n arrow-016 ipython pyarrow=0.16` with everything from conda-forge on Ubuntu), and the above snippet does not give any error for me. Might be a windows problem then."
        },
        {
            "created_at": "2020-03-23T13:56:13.270Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7939?focusedCommentId=17064816) by Marc Bernot (marcbernot):*\nIndeed I tried this with macOS and this did not give any error. This seems Windows specific.\r\n\r\nI checked if the generated foo.parquet files were exactly the same on Windows and macOS and they are.\u00a0\r\n\r\nI experienced this on two separate windows environments.\r\n \\* Windows 10 family 64bits, intel Atom x5-Z8500 CPU @1,44GHz\r\n As you did, I started from a clean miniconda environment then\u00a0\\` conda create -c\u00a0conda-forge\u00a0-n arrow-3x016 python=3.x pyarrow=0.16` with x=6,7,8\u00a0\r\n\r\n \\* \r\n \\*\\* all these python versions result in the same crash\r\n \\* Windows 7, 64bits, HPZ820 workstation, intel Xeon CPU E5-2630\r\n \\*\\* here I tested only python=3.6.9\r\n\r\nWould other informations on my environment be useful?"
        },
        {
            "created_at": "2020-03-24T01:00:09.330Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7939?focusedCommentId=17065219) by Wes McKinney (wesm):*\nSomeone should take a quick look at this on a Windows machine before the 0.17.0 backlog closes to see if there are any clues"
        },
        {
            "created_at": "2020-04-01T01:01:32.172Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7939?focusedCommentId=17072279) by Wes McKinney (wesm):*\nI'll try to look at this tomorrow to see if I can learn something about what's up"
        },
        {
            "created_at": "2020-04-02T16:09:07.488Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7939?focusedCommentId=17073859) by Antoine Pitrou (apitrou):*\nI could not reproduce under Windows 7 64-bit, with pyarrow 0.16.0 from conda-forge."
        },
        {
            "created_at": "2020-04-02T16:11:14.088Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7939?focusedCommentId=17073860) by Antoine Pitrou (apitrou):*\nI've also checked that the nightly builds work fine.\r\n\r\n`[~marcbernot]` Can you try to install a nightly build?\r\n```java\n\r\nconda update -c arrow-nightlies pyarrow\r\n\r\n```"
        },
        {
            "created_at": "2020-04-03T01:31:12.147Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7939?focusedCommentId=17074188) by Wes McKinney (wesm):*\nI can't reproduce on Windows 10 64-bit with the conda-forge nightly, nor with the 0.16.0 wheel. I recommend we close as a cannot reproduce"
        },
        {
            "created_at": "2020-04-03T20:04:28.986Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7939?focusedCommentId=17074863) by Wes McKinney (wesm):*\nPlease re-open if you can give us another reproducer to try"
        },
        {
            "created_at": "2020-06-24T09:56:26.524Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7939?focusedCommentId=17143714) by Nicolas Elie (n-elie):*\nHello,\r\n\r\nI just faced the same issue with pyarrow 0.17.1 installed from conda-forge on Windows 7 64 bit with Python 3.8.3.\r\n\r\nThe example code given in description crash with array_nok and compression='snappy' but not with other compression algorithms nor with array_ok. Works fine with pyarrow 0.15.1\r\n\r\nI also tried with a clean environment as suggested in first comment (pyarrow 0.16) and the problem is the same.\r\n\r\nI tried to open the generated parquet files (that can't be read by pyarrow, compression='snappy') with [fastparquet ](https://github.com/dask/fastparquet) or [ParquetViewer](https://github.com/mukunku/ParquetViewer): They both can't read the parquet file...\r\n\r\nWhat additionnal information could I give you?"
        },
        {
            "created_at": "2020-06-24T10:00:02.161Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7939?focusedCommentId=17143720) by Nicolas Elie (n-elie):*\nAlso tried with a nightly build and the same crash happens"
        },
        {
            "created_at": "2020-06-24T12:59:55.531Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7939?focusedCommentId=17143823) by Wes McKinney (wesm):*\n`[~n-elie]` I'm pretty sure this is caused by https://github.com/conda-forge/snappy-feedstock/issues/24 cc `[~uwe]` \r\n\r\nIf you switch to the wheels from `pip` does the problem go away?"
        },
        {
            "created_at": "2020-06-24T13:59:25.162Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7939?focusedCommentId=17143853) by Nicolas Elie (n-elie):*\nSo I created a new virtual environment with just ipython from conda and then installed pyarrow from pip. This results in the following errror when the sample code is run:\r\n\r\n```python\n\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n~\\AppData\\Local\\Continuum\\miniconda3\\envs\\arrow\\lib\\site-packages\\pyarrow\\pandas-shim.pxi in pyarrow.lib._PandasAPIShim._check_import()\r\n\r\n~\\AppData\\Local\\Continuum\\miniconda3\\envs\\arrow\\lib\\site-packages\\pyarrow\\pandas-shim.pxi in pyarrow.lib._PandasAPIShim._import_pandas()\r\n\r\nAttributeError: module 'pandas' has no attribute '__version__'\r\nException ignored in: 'pyarrow.lib._PandasAPIShim._have_pandas_internal'\r\nTraceback (most recent call last):\r\n  File \"pyarrow\\pandas-shim.pxi\", line 107, in pyarrow.lib._PandasAPIShim._check_import\r\n  File \"pyarrow\\pandas-shim.pxi\", line 54, in pyarrow.lib._PandasAPIShim._import_pandas\r\nAttributeError: module 'pandas' has no attribute '__version__'\n```\r\n\r\n\r\nHowever, when using pyarrow from conda, the crash happens with 0.17.1 and 0.16 and not with 0.15.1 even though snappy is the same version (1.1.8)"
        },
        {
            "created_at": "2020-06-24T15:58:32.098Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7939?focusedCommentId=17143965) by Wes McKinney (wesm):*\nWhat processor does your machine have? If you can produce a backtrace with Visual Studio that would help us determine where the crash is coming from. It sounds like it's a processor feature support issue related to the build flags used with conda-forge"
        },
        {
            "created_at": "2020-06-25T18:03:15.180Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7939?focusedCommentId=17145704) by Josh Dimarsky (ydimarsky@gmail.com):*\nAs `[~uwe]` noted, I have the same issue, accidentally created a new issue for it here https://issues.apache.org/jira/browse/ARROW-9229"
        },
        {
            "created_at": "2020-06-26T15:06:46.719Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7939?focusedCommentId=17146381) by Marc Bernot (marcbernot):*\nIf this helps, I tried to reproduce the bug on several windows machine with the same conda/python environment on an external harddrive.\r\n\r\nThe bug was there with the two processors (no AVX2) mentionned earlier in the discussion.\r\n\r\nHowever on a laptop with intel Core i5-4300M @ 2.6GHz (AVX2 instructions) there was no bug."
        },
        {
            "created_at": "2020-06-26T15:41:55.101Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7939?focusedCommentId=17146416) by Wes McKinney (wesm):*\nThis will almost certainly be fixed by https://github.com/conda-forge/snappy-feedstock/pull/26"
        },
        {
            "created_at": "2020-06-27T23:05:00.530Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7939?focusedCommentId=17147132) by Wes McKinney (wesm):*\nThe conda-forge patch was just merged\r\n\r\nhttps://github.com/conda-forge/snappy-feedstock/commit/5b7b850667c769df4551c81dc8ffaef76e8d371b\r\n\r\nPlease wait a while for the package to update and please confirm that the issue is resolved with the new snappy 1.1.8 package"
        },
        {
            "created_at": "2020-06-29T08:55:57.105Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7939?focusedCommentId=17147631) by Nicolas Elie (n-elie):*\nI can confirm that the fix works on my computer"
        },
        {
            "created_at": "2020-06-29T14:41:28.711Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7939?focusedCommentId=17147843) by Josh Dimarsky (ydimarsky@gmail.com):*\nI can confirm, works for me as well now on a processor that doesn't support AVX2 / BMI2 instructions (Intel64 Family 6 Model 45 Stepping 7) and had previously crashed with this, so appears to be fixed. Just tested with Snappy 1.1.8 build #3 in conda-forge."
        },
        {
            "created_at": "2021-01-12T17:32:11.238Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7939?focusedCommentId=17263542) by Michael Peleshenko (mpeleshenko):*\nWe seem to be facing the same crash with the sample code here, but with the pyarrow 2.0.0 pip wheel for Windows and Python 3.8.\r\nOn an Intel Xeon Silver 4114 CPU, I have no issues.\r\nOn an Intel Xeon E5-2620, my Python crashes.\r\n\r\nAccording to https://ark.intel.com/content/www/us/en/ark/products/64594/intel-xeon-processor-e5-2620-15m-cache-2-00-ghz-7-20-gt-s-intel-qpi.html, the Xeon E5-2620, does not support AVX2, while the other one does, so I suspect we are hitting the same issue here.\r\n\r\nAssuming this is the same issue, has this snappy fix been including in the pyarrow pip wheel build for Windows?"
        },
        {
            "created_at": "2021-01-12T17:45:21.171Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7939?focusedCommentId=17263554) by Antoine Pitrou (apitrou):*\n`[~mpeleshenko]` Can you try with the nightly wheels? See https://arrow.apache.org/docs/python/install.html#installing-nightly-packages"
        },
        {
            "created_at": "2021-01-12T20:35:39.472Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7939?focusedCommentId=17263678) by Michael Peleshenko (mpeleshenko):*\n`[~apitrou]` I'm testing on Windows 10 and the latest nightly wheel I see is pyarrow-2.1.0.dev48 while linux wheels go all the way to dev 581. It worked fine on my Xeon Silver so far. I'll let you know the results of my colleague's test with his Xeon E5 tomorrow."
        },
        {
            "created_at": "2021-01-13T15:34:21.765Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7939?focusedCommentId=17264215) by Michael Peleshenko (mpeleshenko):*\n`[~apitrou]` Even with the nightly wheel build, it crashes with the below.\r\n```Java\n\r\nProcess finished with exit code -1073741795 (0xC000001D)\r\n```\r\nIt does however work fine with the below conda env, which leads me to suspect the snappy patch is missing in the wheel build.\r\n```Java\n\r\nconda create -c conda-forge -n pyarrow_test python=3.8 pyarrow=2.0.0\r\n```"
        },
        {
            "created_at": "2021-01-13T15:45:43.735Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7939?focusedCommentId=17264221) by Antoine Pitrou (apitrou):*\nOh, you're right, we need to apply the patch. I misunderstood that Snappy 1.1.8 was fixed :-("
        },
        {
            "created_at": "2021-01-15T18:20:58.241Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7939?focusedCommentId=17266276) by Michael Peleshenko (mpeleshenko):*\n`[~apitrou]` Should I create another JIRA to track patching the wheel build?"
        },
        {
            "created_at": "2021-01-15T18:28:24.620Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7939?focusedCommentId=17266283) by Antoine Pitrou (apitrou):*\n`[~mpeleshenko]` It should already be done now: https://github.com/apache/arrow/pull/9096/files#diff-9ad0d6bbe849c2154feb10cd87f1be85ebf54001fa00ec25d428730609b3d158"
        }
    ]
}