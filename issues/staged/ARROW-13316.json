{
    "issue": {
        "title": "[C++][Doc] Fix warnings generated by sphinx when incorporating doxygen docs",
        "body": "***Note**: This issue was originally created as [ARROW-13316](https://issues.apache.org/jira/browse/ARROW-13316). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSphinx interprets the doxygen output to build the final documentation.\u00a0 This process generates some warnings.\r\n\r\n\u00a0\r\n\r\nThis warning is generated when running doxygen:\r\n```java\n\r\nwarning: Tag 'COLS_IN_ALPHA_INDEX' at line 1118 of file 'Doxyfile' has become obsolete.\r\n         To avoid this warning please remove this line from your configuration file or upgrade it using \"doxygen -u\"\r\n```\r\nThere are many warnings contributed to compute.rst that look like this (it is unclear where this static constexpr static is coming from as it is not present in the repo or doxygen that I can find):\r\n```java\n\r\n/home/pace/dev/arrow/docs/source/cpp/api/compute.rst:51: WARNING: Invalid C++ declaration: Expected identifier in nested name, got keyword: static [error at 23]\r\n  static constexpr static char const kTypeName []  = \"ScalarAggregateOptions\"\r\n```\r\nThere is a duplicate definition warning (I think this one is because the doc comment is present on both the definition and the override)\r\n```java\n\r\n/home/pace/dev/arrow/docs/source/cpp/api/dataset.rst:69: WARNING: Duplicate declaration, Result< std::shared_ptr< FileFragment > > MakeFragment (FileSource source, compute::Expression partition_expression, std::shared_ptr< Schema > physical_schema)\r\n```\r\nFinally, there is a specific issue with the GetRecordBatchGenerator function\r\n```java\n\r\n/home/pace/dev/arrow/docs/source/cpp/api/formats.rst:80: WARNING: Error when parsing function declaration.\r\nIf the function has no return type:\r\n  Error in declarator or parameters-and-qualifiers\r\n  Main error:\r\n    Invalid C++ declaration: Expecting \"(\" in parameters-and-qualifiers. [error at 23]\r\n      virtual ::arrow::Result< std::function<::arrow::Future< std::shared_ptr<::arrow::RecordBatch > >)> > GetRecordBatchGenerator (std::shared_ptr< FileReader > reader, const std::vector< int > row_group_indices, const std::vector< int > column_indices, ::arrow::internal::Executor *cpu_executor=NULLPTR)=0\r\n      -----------------------^\r\n  Potential other error:\r\n    Error in parsing template argument list.\r\n    If type argument:\r\n      Main error:\r\n        Invalid C++ declaration: Expected \"...>\", \">\" or \",\" in template argument list. [error at 38]\r\n          virtual ::arrow::Result< std::function<::arrow::Future< std::shared_ptr<::arrow::RecordBatch > >)> > GetRecordBatchGenerator (std::shared_ptr< FileReader > reader, const std::vector< int > row_group_indices, const std::vector< int > column_indices, ::arrow::internal::Executor *cpu_executor=NULLPTR)=0\r\n          --------------------------------------^\r\n      Potential other error:\r\n        Main error:\r\n          Invalid C++ declaration: Expected identifier in nested name. [error at 38]\r\n            virtual ::arrow::Result< std::function<::arrow::Future< std::shared_ptr<::arrow::RecordBatch > >)> > GetRecordBatchGenerator (std::shared_ptr< FileReader > reader, const std::vector< int > row_group_indices, const std::vector< int > column_indices, ::arrow::internal::Executor *cpu_executor=NULLPTR)=0\r\n            --------------------------------------^\r\n        Potential other error:\r\n          Error in parsing template argument list.\r\n          If type argument:\r\n            Invalid C++ declaration: Expected \"...>\", \">\" or \",\" in template argument list. [error at 96]\r\n              virtual ::arrow::Result< std::function<::arrow::Future< std::shared_ptr<::arrow::RecordBatch > >)> > GetRecordBatchGenerator (std::shared_ptr< FileReader > reader, const std::vector< int > row_group_indices, const std::vector< int > column_indices, ::arrow::internal::Executor *cpu_executor=NULLPTR)=0\r\n              ------------------------------------------------------------------------------------------------^\r\n          If non-type argument:\r\n            Invalid C++ declaration: Expected \"...>\", \">\" or \",\" in template argument list. [error at 96]\r\n              virtual ::arrow::Result< std::function<::arrow::Future< std::shared_ptr<::arrow::RecordBatch > >)> > GetRecordBatchGenerator (std::shared_ptr< FileReader > reader, const std::vector< int > row_group_indices, const std::vector< int > column_indices, ::arrow::internal::Executor *cpu_executor=NULLPTR)=0\r\n              ------------------------------------------------------------------------------------------------^\r\n    If non-type argument:\r\n      Invalid C++ declaration: Expected \"...>\", \">\" or \",\" in template argument list. [error at 96]\r\n        virtual ::arrow::Result< std::function<::arrow::Future< std::shared_ptr<::arrow::RecordBatch > >)> > GetRecordBatchGenerator (std::shared_ptr< FileReader > reader, const std::vector< int > row_group_indices, const std::vector< int > column_indices, ::arrow::internal::Executor *cpu_executor=NULLPTR)=0\r\n        ------------------------------------------------------------------------------------------------^\r\nIf the function has a return type:\r\n  Error in declarator or parameters-and-qualifiers\r\n  If pointer to member declarator:\r\n    Main error:\r\n      Invalid C++ declaration: Expected identifier in nested name. [error at 23]\r\n        virtual ::arrow::Result< std::function<::arrow::Future< std::shared_ptr<::arrow::RecordBatch > >)> > GetRecordBatchGenerator (std::shared_ptr< FileReader > reader, const std::vector< int > row_group_indices, const std::vector< int > column_indices, ::arrow::internal::Executor *cpu_executor=NULLPTR)=0\r\n        -----------------------^\r\n    Potential other error:\r\n      Error in parsing template argument list.\r\n      If type argument:\r\n        Main error:\r\n          Invalid C++ declaration: Expected \"...>\", \">\" or \",\" in template argument list. [error at 38]\r\n            virtual ::arrow::Result< std::function<::arrow::Future< std::shared_ptr<::arrow::RecordBatch > >)> > GetRecordBatchGenerator (std::shared_ptr< FileReader > reader, const std::vector< int > row_group_indices, const std::vector< int > column_indices, ::arrow::internal::Executor *cpu_executor=NULLPTR)=0\r\n            --------------------------------------^\r\n        Potential other error:\r\n          Main error:\r\n            Invalid C++ declaration: Expected identifier in nested name. [error at 38]\r\n              virtual ::arrow::Result< std::function<::arrow::Future< std::shared_ptr<::arrow::RecordBatch > >)> > GetRecordBatchGenerator (std::shared_ptr< FileReader > reader, const std::vector< int > row_group_indices, const std::vector< int > column_indices, ::arrow::internal::Executor *cpu_executor=NULLPTR)=0\r\n              --------------------------------------^\r\n          Potential other error:\r\n            Error in parsing template argument list.\r\n            If type argument:\r\n              Invalid C++ declaration: Expected \"...>\", \">\" or \",\" in template argument list. [error at 96]\r\n                virtual ::arrow::Result< std::function<::arrow::Future< std::shared_ptr<::arrow::RecordBatch > >)> > GetRecordBatchGenerator (std::shared_ptr< FileReader > reader, const std::vector< int > row_group_indices, const std::vector< int > column_indices, ::arrow::internal::Executor *cpu_executor=NULLPTR)=0\r\n                ------------------------------------------------------------------------------------------------^\r\n            If non-type argument:\r\n              Invalid C++ declaration: Expected \"...>\", \">\" or \",\" in template argument list. [error at 96]\r\n                virtual ::arrow::Result< std::function<::arrow::Future< std::shared_ptr<::arrow::RecordBatch > >)> > GetRecordBatchGenerator (std::shared_ptr< FileReader > reader, const std::vector< int > row_group_indices, const std::vector< int > column_indices, ::arrow::internal::Executor *cpu_executor=NULLPTR)=0\r\n                ------------------------------------------------------------------------------------------------^\r\n      If non-type argument:\r\n        Invalid C++ declaration: Expected \"...>\", \">\" or \",\" in template argument list. [error at 96]\r\n          virtual ::arrow::Result< std::function<::arrow::Future< std::shared_ptr<::arrow::RecordBatch > >)> > GetRecordBatchGenerator (std::shared_ptr< FileReader > reader, const std::vector< int > row_group_indices, const std::vector< int > column_indices, ::arrow::internal::Executor *cpu_executor=NULLPTR)=0\r\n          ------------------------------------------------------------------------------------------------^\r\n  If declarator-id:\r\n    Invalid C++ declaration: Expected identifier in nested name. [error at 23]\r\n      virtual ::arrow::Result< std::function<::arrow::Future< std::shared_ptr<::arrow::RecordBatch > >)> > GetRecordBatchGenerator (std::shared_ptr< FileReader > reader, const std::vector< int > row_group_indices, const std::vector< int > column_indices, ::arrow::internal::Executor *cpu_executor=NULLPTR)=0\r\n      -----------------------^\r\n\r\n```",
        "created_at": "2021-07-12T19:45:47.000Z",
        "updated_at": "2022-10-04T17:51:25.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Documentation",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-07-16T08:55:49.702Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13316?focusedCommentId=17381909) by Joris Van den Bossche (jorisvandenbossche):*\nI was chatting about this with `[~bkietz]`, and tried out his suggestion to disable doxygen for all the kTypeName declarations, like:\r\n\r\n```Java\n\r\n  /// \\cond false\r\n  constexpr static char const kTypeName[] = \"VarianceOptions\";\r\n  /// \\endcond\r\n```\r\n\r\nThis seems to fix the warning, and simply removed the kTypeName value from the documentation (which I assume is fine).\r\n\r\n"
        },
        {
            "created_at": "2022-10-04T17:51:24.913Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13316?focusedCommentId=17612722) by Apache Arrow JIRA Bot (arrowjira):*\nThis issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned per [project policy](https://arrow.apache.org/docs/dev/developers/bug_reports.html#issue-assignment). Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon."
        }
    ]
}