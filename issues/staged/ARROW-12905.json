{
    "issue": {
        "title": "[Java] Adapt to Java 9/9+ automatic module system",
        "body": "***Note**: This issue was originally created as [ARROW-12905](https://issues.apache.org/jira/browse/ARROW-12905). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIn Java 9/9+, within following module-info.java definition the build will fail by error:\r\n\r\n```Java\n\r\nmodule my.app {\r\n  exports my.app;\r\n\r\n  requires arrow.memory.core;\r\n  requires arrow.memory.unsafe;\r\n}\r\n```\r\n\r\nThe error:\r\n> java: the unnamed module reads package org.apache.arrow.memory from both arrow.memory.core and arrow.memory.unsafe\r\n\r\nIt seems that JPMS requires a package to be read from at most one individual module. Ref: http://openjdk.java.net/projects/jigsaw/spec/sotms/#the-module-path. If so what we may have to do is to conduct a code clean up for our maven modules to make sure we don't populate codes in the same package into different libraries.\r\n\r\nAlso, as a more standardized practice, it's might be an option to put entries with name **Automatic-Module-Name** into manifest files to tell automatic module system to generate predefined module names rather than parsing from jar file name. Ref: https://docs.oracle.com/javase/9/docs/api/java/lang/module/ModuleFinder.html#automatic-modules\r\n\r\nNote that it's not a goal for this topic to migrate to Java 9/9+.",
        "created_at": "2021-05-29T07:38:23.000Z",
        "updated_at": "2021-05-29T07:38:23.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": []
}