{
    "issue": {
        "title": "[Java] Redesign the dictionary encoder",
        "body": "***Note**: This issue was originally created as [ARROW-5917](https://issues.apache.org/jira/browse/ARROW-5917). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe current dictionary encoder implementation (org.apache.arrow.vector.dictionary.DictionaryEncoder) has heavy performance overhead, which prevents it from being useful in practice:\r\n1. There are repeated conversions between Java objects and bytes (e.g. vector.getObject(i)).\n1. Unnecessary memory copy (the vector data must be copied to the hash table).\n1. The hash table cannot be reused for encoding multiple vectors (other data structure & results cannot be reused either).\n1. The output vector should not be created/managed by the encoder (just like in the out-of-place sorter)\n1. The hash table requires that the hashCode & equals methods be implemented appropriately, but this is not guaranteed.\n   \n   We plan to implement a new one in the algorithm module, and gradually deprecate the current one.",
        "created_at": "2019-07-12T08:25:22.000Z",
        "updated_at": "2019-09-18T04:45:09.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-09-18T04:45:09.000Z"
    },
    "comments": [
        {
            "created_at": "2019-09-18T04:45:09.771Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5917?focusedCommentId=16932054) by Micah Kornfield (emkornfield@gmail.com):*\nIssue resolved by pull request 4994\n<https://github.com/apache/arrow/pull/4994>"
        }
    ]
}