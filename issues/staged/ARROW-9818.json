{
    "issue": {
        "title": "[Python] Obscure C++ Error when Calling to_pandas on a RecordBatch",
        "body": "***Note**: This issue was originally created as [ARROW-9818](https://issues.apache.org/jira/browse/ARROW-9818). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI'm using Pyarrow to stream a CSV from an input over HTTP and then converting each RecordBatch to a Pandas DataFrame for manipulation. For testing, I'm using the NYPD Motor Vehicle Collisions Open source dataset. However, for anything above the 5MB file e.g. 1GB, 240MB, my code that is running in an AWS Lambda is failing with a RuntimeError because of\r\n\r\nterminate called after throwing an instance of 'std::logic_error'\r\n what(): basic_string::_S_construct null not valid\r\n\r\nafter calling to_pandas() on the first batch. Why is this happening? How can I fix it? This happened when some 7 of the 28 columns were inferred to be of type null, so I instead set strings_can_be_null=True on my ReadOptions for CSV reading and provided a schema that forced the null columns to be strings. This didn't work. I suspect it has something to do with the size of the file, but am unsure.",
        "created_at": "2020-08-21T09:18:40.000Z",
        "updated_at": "2022-03-08T18:04:24.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-03-08T18:04:24.000Z"
    },
    "comments": [
        {
            "created_at": "2020-08-21T14:22:21.271Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9818?focusedCommentId=17181915) by Joris Van den Bossche (jorisvandenbossche):*\nCan you reproduce this locally as well? \r\nAnd on AWS Lambda, what kind of environment do you have? (how is pyarrow installed, how much memory is available, ..?)"
        },
        {
            "created_at": "2020-08-21T15:07:24.678Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9818?focusedCommentId=17181936) by Nolo Ogbirner (Lachrymatory):*\n\u00a0Will try to reproduce locally ASAP. Have tried with max 512 MB and 1024 MB memory for AWS Lambda. The version I\u2019m using was built from source with S3 but without Gandiva to get a dependency that fits in Lambda. It is then uploaded as an unzipped wheel as a dependency.\u00a0"
        },
        {
            "created_at": "2020-08-27T09:20:04.175Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9818?focusedCommentId=17185739) by Nolo Ogbirner (Lachrymatory):*\nFor future reference, I couldn't reproduce this locally and realized I didn't need the S3 dependency so I used the latest version on pip and that works even on AWS Lambda. Strange bug though which seems to arise from custom build."
        },
        {
            "created_at": "2022-03-08T18:04:10.257Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9818?focusedCommentId=17503095) by Joris Van den Bossche (jorisvandenbossche):*\nSince there is no clear reproducible issue, I am going to close this. `[~Lachrymatory]` if you would run into it again, feel free to reopen"
        }
    ]
}