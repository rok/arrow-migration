{
    "issue": {
        "title": "[Python][Packaging] Add Parquet encryption/decryption / OpenSSL to Python wheels",
        "body": "***Note**: This issue was originally created as [ARROW-8040](https://issues.apache.org/jira/browse/ARROW-8040). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n",
        "created_at": "2020-03-09T16:52:16.000Z",
        "updated_at": "2022-03-21T17:11:26.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2020-08-25T15:34:12.525Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8040?focusedCommentId=17184135) by Itamar Turner-Trauring (itamarst):*\nI would like to get this working (doing this on behalf of a client)\u2014the packaging sides seem relatively simple, just adding the right flags to the build scripts, and maybe making sure OpenSSL is compiled in statically.\r\n\r\nHowever, it doesn't seem like there's Python bindings for the encryption? Or at least, it's not clear to me how to use Parquet encryption from Python... So does that need to be done separately? Or is there an example I can look at?\r\n\r\nThanks!"
        },
        {
            "created_at": "2020-09-01T16:44:49.037Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8040?focusedCommentId=17188633) by Itamar Turner-Trauring (itamarst):*\nJust checking in again\u2014could someone answer my question above re the need for Python bindings in addition to packaging wheels? Thanks!"
        },
        {
            "created_at": "2020-09-03T14:23:28.889Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8040?focusedCommentId=17190183) by Antoine Pitrou (apitrou):*\nRight, it seems that encryption options are not exposed in the Python bindings. So I suggest you start with that. Do you need any guidance?  Places to look at probably include `pyarrow/_parquet.pxd`, `pyarrow/_parquet.pyx` and `pyarrow/parquet.py`."
        },
        {
            "created_at": "2020-09-03T14:24:40.339Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8040?focusedCommentId=17190184) by Antoine Pitrou (apitrou):*\nPerhaps open a separate JIRA for exposing encryption options in the Python bindings?"
        },
        {
            "created_at": "2020-09-03T14:30:03.563Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8040?focusedCommentId=17190187) by Itamar Turner-Trauring (itamarst):*\nThanks for the confirmation. Will open new issue and try to create a first pass API design."
        },
        {
            "created_at": "2020-09-03T14:55:41.062Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8040?focusedCommentId=17190196) by Gidon Gershinsky (gershinsky):*\n`[~itamarst]` \u00a0Sorry for missing the start of this discussion. Please see my response in the list, and feel free to contact me with any questions, I'd be glad to help with this."
        },
        {
            "created_at": "2021-02-09T14:20:47.456Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8040?focusedCommentId=17281803) by Itamar Turner-Trauring (itamarst):*\nSo it seems like high-level encryption is going to be a long time coming, and access to low-level encryption is still useful. So going to try to do that."
        },
        {
            "created_at": "2021-02-09T19:13:56.581Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8040?focusedCommentId=17281975) by Gidon Gershinsky (gershinsky):*\nHi Itamar, to sum up my previous comments on this, there are two issues with exposing the low level encryption to the users,\r\n - security: low-level encryption API is easy to misuse (eg giving the same keys for a number of different files; this'd break the AES GCM cipher). The high-level encryption layer handles that by applying envelope encryption and other best practices in data security. Also, this layer is maintained by the community, meaning that future improvements and security fixes can be upstreamed by anyone, and available to all.\r\n - compatibility: parquet-mr implements the high-level encryption layer. If we want the files produced by Spark/Presto/etc to be readable by pandas/PyArrow (and vice versa), we need to provide the Arrow users with the high-level API.\u00a0\r\n\r\nActually, this layer is already implemented in C++ and sent as a PR to the Arrow repo (<https://github.com/apache/arrow/pull/8023).>\u00a0I agree with you it is a long time coming, and wonder when the review can be resumed by the community..\u00a0"
        },
        {
            "created_at": "2021-02-09T19:27:16.362Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8040?focusedCommentId=17281985) by Itamar Turner-Trauring (itamarst):*\nGiven people are paying me to try to get this moving, some people are using the low-level API directly already, and they want to use it from Python too, and now. So exposing it doesn't necessarily make their situation any worse. And I do understand the concerns about interop.\r\n\r\nSo my thought was to expose the low-level API in a way that didn't preclude a higher-level API, and made it clear (via documentation and API names) that there will eventually be a nicer, higher-level API. Would something like that take away your concerns?"
        },
        {
            "created_at": "2021-02-09T19:54:30.201Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8040?focusedCommentId=17282000) by Gidon Gershinsky (gershinsky):*\nI presume you are getting paid to apply this code in their usecase, not to upstream it to an open source repository. I don't have concerns with the internal usage."
        },
        {
            "created_at": "2021-02-09T20:00:14.314Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8040?focusedCommentId=17282001) by Itamar Turner-Trauring (itamarst):*\nSure, but that suggests it might be useful to other people? The low-level encryption API is already exposed in C+, and is the\u00a0_only_ API in C+, so people can already use it right now. It's possible no one is, of course.\r\n\r\nBasically argument I'm making is \"this will be useful to some people\". That may not override the concerns about security, of course."
        },
        {
            "created_at": "2021-02-09T20:28:14.081Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8040?focusedCommentId=17282018) by Itamar Turner-Trauring (itamarst):*\nThe `cryptography` library has this issue, with primitives they don't think most people should be using, and the solution is having a \"hazardous materials\" part of the API, explicitly marked as such: https://cryptography.io/en/latest/hazmat/primitives/index.html"
        },
        {
            "created_at": "2021-02-09T20:32:38.952Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8040?focusedCommentId=17282021) by Gidon Gershinsky (gershinsky):*\nYep, I understand. But with this being a data protection technology, we need to take extra care to keep it secure.\u00a0\r\n\r\nRegarding C++ - we're building this bottom up, starting with a cipher layer, then low-level encryption layer, then the high-level layer. No way this'd be accepted by the community as a single PR. The current situation is not ideal, it'd be good to merge the high-level PR (and maybe hide the low level), but here we are; also, C++ is a kind of a low-level language; Python would expose it to a less experienced audience."
        },
        {
            "created_at": "2021-02-16T15:20:56.723Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8040?focusedCommentId=17285271) by Itamar Turner-Trauring (itamarst):*\nOn the list, Micah Kornfield pointed out that decryption doesn't have the security concerns, and insofar as interop is a concern it's never going to produce incompatible files. So I'm going to start with doing that as a minimum, and we can revisit encryption as a second pass if the high-level API is still in limbo."
        },
        {
            "created_at": "2021-02-16T15:33:22.860Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8040?focusedCommentId=17285281) by Gidon Gershinsky (gershinsky):*\nThanks. I agree the decryption part is much safer than encryption. Regarding interop - this decryption code will not be able to read files, produced by Spark, because that would require parsing the key material. Implementation of key material parsing means implementation of the high level layer. I'll send a mail to the list to check if this can be indeed be moved out of a state of limbo."
        },
        {
            "created_at": "2021-02-16T16:01:19.786Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8040?focusedCommentId=17285302) by Itamar Turner-Trauring (itamarst):*\nHigh-level API would be better, yeah. So I'm just going to do decryption low-level, have my client test it and see if it works for them. And if high-level gets merged soon (and that works for them), even better, can switch to wrapping that for Python."
        },
        {
            "created_at": "2021-02-16T16:11:16.680Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8040?focusedCommentId=17285309) by Gidon Gershinsky (gershinsky):*\nSure, SGTM"
        },
        {
            "created_at": "2021-02-18T14:49:35.166Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8040?focusedCommentId=17286508) by Itamar Turner-Trauring (itamarst):*\nTurns out I probalby need to wrap some of the encryption API just to make testing easy :( So the first pass might include that, but won't expose it publicly."
        },
        {
            "created_at": "2021-03-04T16:58:32.687Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8040?focusedCommentId=17295411) by Itamar Turner-Trauring (itamarst):*\nI have an initial working sketch PR: <https://github.com/apache/arrow/pull/9631>\r\n\r\nWould appreciate any feedback, especially on API design. As mentioned above, I was forced to wrap encryption in order to do testing, but the plan is to not make it public part of the API."
        },
        {
            "created_at": "2021-03-04T17:00:07.218Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8040?focusedCommentId=17295414) by Itamar Turner-Trauring (itamarst):*\nAnd also, of course, this only wraps parts of the decryption API, I plan to wrap the rest of it as well."
        },
        {
            "created_at": "2022-03-21T17:11:26.270Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8040?focusedCommentId=17510019) by Antoine Pitrou (apitrou):*\nNote that Parquet modular encryption is now available in the Python wheels (there are nightly builds: https://arrow.apache.org/docs/python/install.html#installing-nightly-packages ). Should this JIRA be kept open?"
        }
    ]
}