{
    "issue": {
        "title": "Relaxing `grpc-cpp` requirements to avoid package inconsistency",
        "body": "***Note**: This issue was originally created as [ARROW-15330](https://issues.apache.org/jira/browse/ARROW-15330). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nStarting arrow `6.0.1`, the `grpc-cpp` requirement was raised to `>=1.42.0,<1.43.0a0` which forces the GCC stack (`libstdcxx-ng`, `ibgcc-ng`) to pin to `>=11.2.0`.\u00a0\u00a0\r\n\r\n\u00a0\r\n\r\nPrior to this change, the GCC stack was pinned to `>=9.4.0`.\r\n\r\n\u00a0\r\n\r\nDue to this change, many downstream libraries will have a conflict as many OSS libraries rely on if they rely on default GCC of LTS versions of OS's. Currently, Ubuntu 20.04 ships with gcc-9 and ubuntu 22.04 which will have gcc-11 as default is not out yet. The lastest `nvcc` 11.5 also doesn't fully support host compiler gcc 11.x for the same reason. Hence is it possible to relax arrow-cpp's `grpc-cpp` requirements so that it is also compatible with `libstdcxx-ng`/`ibgcc-ng`>=9.4.0 and release binaries for `6.0.1`?",
        "created_at": "2022-01-13T21:09:27.000Z",
        "updated_at": "2022-01-14T22:01:30.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-01-14T22:01:30.000Z"
    },
    "comments": [
        {
            "created_at": "2022-01-13T22:10:47.188Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15330?focusedCommentId=17475787) by Keith Kraus (keith.j.kraus):*\nThose are only pinning the runtime libraries and not the compilers themselves. Those runtime libraries are backwards compatible where there shouldn't be any issue in allowing those to float forward while continuing to use an older version of the actual compiler.\r\n\r\nI.E. in installing g++ via conda you get the `gxx_linux-64` package with version `9.4.0` with `libstdcxx-devel_linux-64` `9.4.0` and `libstdcxx-ng` `11.2.0` which is expected."
        },
        {
            "created_at": "2022-01-14T22:01:15.081Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15330?focusedCommentId=17476449) by Prem Sagar Gali (galipremsagar):*\nThanks [~keith.j.kraus] ! I was under the assumption that it was a compiler library, closing this request."
        }
    ]
}