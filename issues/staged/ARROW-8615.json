{
    "issue": {
        "title": "[R] Error better and insist on RandomAccessFile in read_feather",
        "body": "***Note**: This issue was originally created as [ARROW-8615](https://issues.apache.org/jira/browse/ARROW-8615). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe use of read_feather function with CompressedInputStream fails with the error:\r\n\r\n\u00a0\r\n```java\n\r\nError in ipc___feather___Reader__Open(file) : \r\n Invalid: File is too small to be a well-formed file\r\n```\r\nThe minimal code to get it:\r\n```java\n\r\nfilename <- \"x.gz\"\r\ndata <- data.frame(c(1,2), c(3,4), stringsAsFactors=FALSE)\r\nfos <- FileOutputStream$create(filename)\r\ncodec <- Codec$create(\"gzip\")\r\ncos <- CompressedOutputStream$create(fos, codec)\r\nwrite_feather(data, cos)\r\ncos$close()\r\nfos <- ReadableFile$create(filename)\r\ncodec <- Codec$create(\"gzip\")\r\ncos <- CompressedInputStream$create(fos, codec)\r\nread_feather(cos)\r\n```\r\nHowever, I can extract the file \"x.gz\" with\r\n```java\n\r\ngzip -d x.gz\r\n```\r\nand then run in R:\r\n```java\n\r\nfos <- ReadableFile$create(\"x\")\r\nread_feather(fos);\r\n  c.1..2. c.3..4.\r\n1       1       3\r\n2       2       4\r\n```\r\nThe codec gzip is available according to:\r\n```java\n\r\ncodec_is_available(\"gzip\")\r\n[1] TRUE\n```\r\nAttached the generated \"x.gz\"\r\n\r\n\u00a0",
        "created_at": "2020-04-28T15:27:24.000Z",
        "updated_at": "2020-05-15T03:03:27.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-05-15T03:03:16.000Z"
    },
    "comments": [
        {
            "created_at": "2020-04-28T15:43:27.660Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8615?focusedCommentId=17094618) by Wes McKinney (wesm):*\nThis isn't supported because the Feather format requires random access, which is not possible with `CompressedInputStream`. There should be an informative message though\r\n\r\nNote that compression is _built in_ to the format as of 0.17.0 so you don't need to deal with codecs yourself"
        },
        {
            "created_at": "2020-05-15T03:03:16.424Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8615?focusedCommentId=17107878) by Neal Richardson (npr):*\nIssue resolved by pull request 7185\n<https://github.com/apache/arrow/pull/7185>"
        }
    ]
}