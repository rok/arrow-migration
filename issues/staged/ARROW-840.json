{
    "issue": {
        "title": "[Python] Provide Python API for creating user-defined data types that can survive Arrow IPC",
        "body": "***Note**: This issue was originally created as [ARROW-840](https://issues.apache.org/jira/browse/ARROW-840). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe user will provide:\n\n- Data type subclass that can indicate the physical storage type\n- \"get state\" and \"set state\" functions for serializing custom metadata to bytes\n- An optional function for \"boxing\" scalar values from the physical array storage\n\nInternally, this will build on an analogous C++ API for defining user data types",
        "created_at": "2017-04-16T23:38:46.000Z",
        "updated_at": "2019-06-14T13:22:17.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-06-14T12:53:47.000Z"
    },
    "comments": [
        {
            "created_at": "2017-04-16T23:55:54.607Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-840?focusedCommentId=15970558) by Robert Nishihara (robertnishihara):*\nIs \"user-defined\" data types intended to include arbitrary custom Python classes?\n\n```Java\nclass Foo(object):\n  def __init__(self):\n    ...\n```\n\nFor example, if we wish to pass a `Foo` object through Arrow IPC, what would the custom metadata be? Would it be the pickled class definition? Would it be something like the string `\"Foo\"`?"
        },
        {
            "created_at": "2017-04-17T01:02:14.072Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-840?focusedCommentId=15970570) by Wes McKinney (wesm):*\nYeah, the idea is to embed basically anything that can be serialized to and from a bytestring. So you could use pickle to do the metadata serialization, but it would go into the IPC metadata as opaque bytes in https://github.com/apache/arrow/blob/master/format/Schema.fbs#L250"
        },
        {
            "created_at": "2019-03-30T20:22:44.385Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-840?focusedCommentId=16805966) by Wes McKinney (wesm):*\nThis is within reach now because of the C++ extension types"
        },
        {
            "created_at": "2019-06-11T20:00:02.029Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-840?focusedCommentId=16861428) by Wes McKinney (wesm):*\n`[~jorisvandenbossche]` `[~pitrou]` what do you think is the path ahead for this project? There are two distinct areas of work:\r\n\r\n- Defining extension types in Python and providing Python exposure for already C++-defined types\n- Bridging between extension types (which may be C++ or Python-defined) and pandas\n  \n  This issue ARROW-840 covers the former but not the latter. It would be nice to have this feature available in 0.14.0. I'm concerned from today's date (June 11) that we may miss the window for 0.14.0 though"
        },
        {
            "created_at": "2019-06-11T20:18:56.730Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-840?focusedCommentId=16861454) by Antoine Pitrou (apitrou):*\nIt looks the former should be reasonably doable. I have no idea about the latter."
        },
        {
            "created_at": "2019-06-11T20:20:59.681Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-840?focusedCommentId=16861459) by Wes McKinney (wesm):*\nI think it becomes a pure Python exercise at that point, shouldn't really be any C++ development required. It looks like it's already ARROW-2428"
        },
        {
            "created_at": "2019-06-11T20:23:24.601Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-840?focusedCommentId=16861465) by Wes McKinney (wesm):*\nActually, I'm wrong about that, because the mapped types have to be serialized in arrow_to_pandas.cc, so there is some C++ development work to do there"
        },
        {
            "created_at": "2019-06-11T21:32:34.668Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-840?focusedCommentId=16861515) by Joris Van den Bossche (jorisvandenbossche):*\nSo the first bullet point (enabling \"defining extension types in Python) requires to implement a C++ PythonExtensionType that can translate python function callbacks to the actual ExtensionType methods?\r\n\r\nI looked into that a bit some time ago, and I think it is above my current C++ skill level (at least to start it). `[~pitrou]` is that something that you might want to look at? \r\nOnce the basics are there, I am very much interested to further help with this and do further work to enable pandas ExtensionArray interaction."
        },
        {
            "created_at": "2019-06-12T13:41:57.726Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-840?focusedCommentId=16862115) by Antoine Pitrou (apitrou):*\nJust a heads up that I'm working on the first point."
        },
        {
            "created_at": "2019-06-12T14:13:53.705Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-840?focusedCommentId=16862143) by Wes McKinney (wesm):*\nCool \u2013 that's this JIRA so I assigned it to you"
        },
        {
            "created_at": "2019-06-14T12:53:47.131Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-840?focusedCommentId=16864028) by Wes McKinney (wesm):*\nIssue resolved by pull request 4532\n<https://github.com/apache/arrow/pull/4532>"
        }
    ]
}