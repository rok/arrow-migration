{
    "issue": {
        "title": "[Rust] Eliminate indirection of ZST allocations",
        "body": "***Note**: This issue was originally created as [ARROW-8629](https://issues.apache.org/jira/browse/ARROW-8629). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently, no matter what any array construction without data creates 0 sized layouts and passes itself to Rust's allocator API, thus OS then comes back to the program and does the job.\r\n\r\nThis issue is two-fold:\r\n \\* First, this creates indirection and UB in a sense.\r\n \\* Second, degrades the performance for the merging simd, merging arrays, constructing arrays etc. and intermediate arrays when doing ops. over them.\r\n\r\nThe solution would be:\r\n \\* Having UB solved without a performance downside.\r\n \\* Improve the performance",
        "created_at": "2020-04-29T17:55:00.000Z",
        "updated_at": "2020-05-19T23:29:07.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-05-19T23:29:00.000Z"
    },
    "comments": [
        {
            "created_at": "2020-05-19T23:29:00.535Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8629?focusedCommentId=17111616) by Andy Grove (andygrove):*\nIssue resolved by pull request 7061\n<https://github.com/apache/arrow/pull/7061>"
        }
    ]
}