{
    "issue": {
        "title": "[Python] dtype=object arrays cannot be converted to a list-of-list ListArray",
        "body": "***Note**: This issue was originally created as [ARROW-4350](https://issues.apache.org/jira/browse/ARROW-4350). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nNested numpy arrays (as the scalar value) cannot be converted to a list-of-list type array:\r\n```Java\n\r\narr = np.empty(2, dtype=object)\r\narr[:] = [np.array([1, 2]), np.array([2, 3])]\r\n\r\npa.array([arr, arr])\r\n```\r\nresults in\r\n```java\n\r\nArrowTypeError: only size-1 arrays can be converted to Python scalars\r\n```\r\nStarting from lists of lists works fine:\r\n```Java\n\r\nlists = [[1, 2], [2, 3]]\r\npa.array([lists, lists]).type\r\n```\r\n```none\n\r\nListType(list<item: list<item: int64>>)\r\n```\r\nSpecifying the type explicitly as `pa.array([arr, arr], type=pa.list_(pa.list_(pa.int64())))` does not help.\r\n\r\nDue to this, a round-trip is not working, as the list of list type gives back an array of arrays in python:\r\n```Java\n\r\nIn [2]: lists = [[1, 2], [2, 3]] \r\n   ...: a = pa.array([lists, lists])                                                                                                                                                                                \r\n\r\nIn [3]: a.to_pandas()                                                                                                                                                                                               \r\nOut[3]: \r\narray([array([array([1, 2]), array([2, 3])], dtype=object),\r\n       array([array([1, 2]), array([2, 3])], dtype=object)], dtype=object)\r\n\r\nIn [4]: pa.array(a.to_pandas())                                                                                                                                                                                     \r\n---------------------------------------------------------------------------\r\nArrowTypeError                            Traceback (most recent call last)\r\n<ipython-input-4-9fee6dc9d0b8> in <module>\r\n----> 1 pa.array(a.to_pandas())\r\n\r\n~/scipy/repos/arrow/python/pyarrow/array.pxi in pyarrow.lib.array()\r\n\r\n~/scipy/repos/arrow/python/pyarrow/array.pxi in pyarrow.lib._ndarray_to_array()\r\n\r\n~/scipy/repos/arrow/python/pyarrow/error.pxi in pyarrow.lib.check_status()\r\n\r\nArrowTypeError: only size-1 arrays can be converted to Python scalars\r\n```\r\n----\r\nOrigingal report:\r\n```java\n\r\nIn [19]: df = pd.DataFrame({'a': [[[1], [2]], [[2], [3]]], 'b': [1, 2]})\r\n\r\nIn [20]: df.iloc[0].to_dict()\r\nOut[20]: {'a': [[1], [2]], 'b': 1}\r\n\r\nIn [21]: pa.Table.from_pandas(df).to_pandas().iloc[0].to_dict()\r\nOut[21]: {'a': array([array([1]), array([2])], dtype=object), 'b': 1}\r\n\r\nIn [24]: np.array(df.iloc[0].to_dict()['a']).shape\r\nOut[24]: (2, 1)\r\n\r\nIn [25]: pa.Table.from_pandas(df).to_pandas().iloc[0].to_dict()['a'].shape\r\nOut[25]: (2,)\r\n```\r\nAdding extra array type is not functioning as expected.\u00a0\r\n\r\n\u00a0\r\n\r\nMore importantly, this would fail\r\n\r\n\u00a0\r\n```java\n\r\nIn [108]: df = pd.DataFrame({'a': [[[1, 2],[2, 3]], [[1,2], [2, 3]]], 'b': [[1, 2],[2, 3]]})\r\n\r\nIn [109]: df\r\nOut[109]:\r\na b\r\n0 [[1, 2], [2, 3]] [1, 2]\r\n1 [[1, 2], [2, 3]] [2, 3]\r\n\r\nIn [110]: pa.Table.from_pandas(pa.Table.from_pandas(df).to_pandas())\r\n---------------------------------------------------------------------------\r\nArrowTypeError Traceback (most recent call last)\r\n<ipython-input-110-4a09836f807e> in <module>()\r\n----> 1 pa.Table.from_pandas(pa.Table.from_pandas(df).to_pandas())\r\n\r\n/Users/pengyu/.pyenv/virtualenvs/starscream/2.7.11/lib/python2.7/site-packages/pyarrow/table.pxi in pyarrow.lib.Table.from_pandas()\r\n1215 <pyarrow.lib.Table object at 0x7f05d1fb1b40>\r\n1216 \"\"\"\r\n-> 1217 names, arrays, metadata = pdcompat.dataframe_to_arrays(\r\n1218 df,\r\n1219 schema=schema,\r\n\r\n/Users/pengyu/.pyenv/virtualenvs/starscream/2.7.11/lib/python2.7/site-packages/pyarrow/pandas_compat.pyc in dataframe_to_arrays(df, schema, preserve_index, nthreads, columns, safe)\r\n379 arrays = [convert_column(c, t)\r\n380 for c, t in zip(columns_to_convert,\r\n--> 381 convert_types)]\r\n382 else:\r\n383 from concurrent import futures\r\n\r\n/Users/pengyu/.pyenv/virtualenvs/starscream/2.7.11/lib/python2.7/site-packages/pyarrow/pandas_compat.pyc in convert_column(col, ty)\r\n374 e.args += (\"Conversion failed for column {0!s} with type {1!s}\"\r\n375 .format(col.name, col.dtype),)\r\n--> 376 raise e\r\n377\r\n378 if nthreads == 1:\r\n\r\nArrowTypeError: ('only size-1 arrays can be converted to Python scalars', 'Conversion failed for column a with type object')\r\n\r\n```\r\n\u00a0",
        "created_at": "2019-01-24T03:37:26.000Z",
        "updated_at": "2019-06-19T17:29:43.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-06-19T17:29:39.000Z"
    },
    "comments": [
        {
            "created_at": "2019-02-26T06:23:46.920Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4350?focusedCommentId=16777625) by Wes McKinney (wesm):*\nHere is a minimal reproduction of the issue\r\n\r\n```Java\n\r\nIn [38]: arr = np.empty(2, dtype=object)\r\n\r\nIn [39]: arr[0] = np.array([1, 2])\r\n\r\nIn [40]: arr[1] = np.array([2, 3])\r\n\r\nIn [41]: arr2 = np.empty(2, dtype=object)\r\n\r\nIn [42]: arr2[0] = arr\r\n\r\nIn [43]: arr2[1] = arr\r\n\r\nIn [45]: pa.array(arr2)\r\n---------------------------------------------------------------------------\r\nArrowTypeError                            Traceback (most recent call last)\r\n<ipython-input-45-4dfe5219bac5> in <module>\r\n----> 1 pa.array(arr2)\r\n\r\n~/miniconda/envs/pyarrow-0.12.0-3.7/lib/python3.7/site-packages/pyarrow/array.pxi\r\nin pyarrow.lib.array()\r\n\r\n~/miniconda/envs/pyarrow-0.12.0-3.7/lib/python3.7/site-packages/pyarrow/array.pxi\r\nin pyarrow.lib._ndarray_to_array()\r\n\r\n~/miniconda/envs/pyarrow-0.12.0-3.7/lib/python3.7/site-packages/pyarrow/error.pxi\r\nin pyarrow.lib.check_status()\r\n\r\nArrowTypeError: only size-1 arrays can be converted to Python scalars\r\n```"
        },
        {
            "created_at": "2019-03-11T20:48:39.499Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4350?focusedCommentId=16789952) by yu peng (yupbank):*\n```java\n\r\nIn [1]: import numpy as np \r\nIn [2]: import pyarrow as pa \r\nIn [3]: arr = np.empty(2, dtype=object) \r\nIn [4]: arr[0] = np.array([1, 2]) \r\nIn [5]: arr[1] = np.array([2, 3]) \r\nIn [6]: pa.array(arr).to_numpy() \r\n--------------------------------------------------------------------------- NotImplementedError Traceback (most recent call last) \r\n<ipython-input-6-4940e4471348> in <module>() \r\n----> 1 pa.array(arr).to_numpy() /Users/pengyu/.pyenv/virtualenvs/starscream/2.7.11/lib/python2.7/site-packages/pyarrow/array.pxi in pyarrow.lib.Array.to_numpy() \r\n694 'for arrays without nulls.') \r\n695 if not is_primitive(self.type.id) or self.type.id == _Type_BOOL: \r\n--> 696 raise NotImplementedError('NumPy array view is only supported ' \r\n697 'for primitive types.') \r\n698 buflist = self.buffers() \r\nNotImplementedError: NumPy array view is only supported for primitive types.\r\n```\r\nI'm not sure whether we want to support `dtype=np.object`, since we can't even convert them back to numpy array"
        },
        {
            "created_at": "2019-03-14T23:16:42.637Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4350?focusedCommentId=16793155) by Wes McKinney (wesm):*\nPlease feel free to submit a patch for 0.13. I'm not sure if anyone else will have time for this over the next several days"
        },
        {
            "created_at": "2019-05-31T02:04:40.909Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4350?focusedCommentId=16852577) by Wes McKinney (wesm):*\n`[~jorisvandenbossche]` could you take a look and maybe clarify the issue title etc.?"
        },
        {
            "created_at": "2019-06-07T09:32:48.373Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4350?focusedCommentId=16858438) by Joris Van den Bossche (jorisvandenbossche):*\nUpdated the title and top post with additional explanation.\r\n\r\nThe main problem of this limitation is that a roundtrip is not possible (ListArray with nested lists result in arrays-of-arrays when converting to pandas, but arrays-of-arrays cannot be converted back to a nested ListArray.\r\n\r\nFor the subarrays of length 1 (the first example of the original report) \"seems\" to work, but actually gives a wrong result on round-trip:\r\n\r\n```python\n\r\nIn [5]: arr = [[1], [2]] \r\n   ...: a = pa.array([arr, arr])                                                                                                                                                                                    \r\n\r\nIn [6]: a.to_pandas()                                                                                                                                                                                               \r\nOut[6]: \r\narray([array([array([1]), array([2])], dtype=object),\r\n       array([array([1]), array([2])], dtype=object)], dtype=object)\r\n\r\nIn [7]: a.to_pylist()                                                                                                                                                                                               \r\nOut[7]: [[[1], [2]], [[1], [2]]]\r\n\r\nIn [8]: pa.array(a.to_pandas())                                                                                                                                                                                     \r\nOut[8]: \r\n<pyarrow.lib.ListArray object at 0x7feaee6be098>\r\n[\r\n  [\r\n    [\r\n      1,\r\n      2\r\n    ]\r\n  ],\r\n  [\r\n    [\r\n      1,\r\n      2\r\n    ]\r\n  ]\r\n]\r\n\r\nIn [9]: pa.array(a.to_pylist())                                                                                                                                                                                     \r\nOut[9]: \r\n<pyarrow.lib.ListArray object at 0x7feaeee708b8>\r\n[\r\n  [\r\n    [\r\n      1\r\n    ],\r\n    [\r\n      2\r\n    ]\r\n  ],\r\n  [\r\n    [\r\n      1\r\n    ],\r\n    [\r\n      2\r\n    ]\r\n  ]\r\n]\r\n```\r\n\r\nSo both give the same type, but the array-of-array incorrectly gives a \"list of 1 list of len 2\" as scalar instead of \"list of 2 lists of len 1\" as scalar."
        },
        {
            "created_at": "2019-06-17T21:42:00.702Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4350?focusedCommentId=16866007) by Wes McKinney (wesm):*\nI started looking at this"
        },
        {
            "created_at": "2019-06-19T17:29:39.447Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4350?focusedCommentId=16867856) by Wes McKinney (wesm):*\nIssue resolved by pull request 4609\n<https://github.com/apache/arrow/pull/4609>"
        }
    ]
}