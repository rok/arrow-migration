{
    "issue": {
        "title": "[Rust] Specify behavior of filter kernel on `null`",
        "body": "***Note**: This issue was originally created as [ARROW-11846](https://issues.apache.org/jira/browse/ARROW-11846). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently, the behavior of `filter` is undefined on null values.\r\n\r\nThis leads to a few issues in cases where you may have a `boolean` array containing `null` values. For instance, I created a `null_to_false` which has to manipulate the underlying buffers in order to combine the null-bits with false. The C++ `filter` kernel allows specifying the behavior on nulls. Thoughts on adding a method that takes an additional parameter to configure the behavior, and then picking a \"default\" behavior for the existing implementation?\r\n```java\n\r\npub enum NullFilterBehavior {\r\n  // Include values where the filter was NULL.\r\n  EMIT,\r\n  // Exclude values where the filter was NULL.\r\n  SKIP,\r\n  // Ignore the null bits. Behavior is undefined.\r\n  UNDEFINED,\r\n}\r\n\r\npub struct FilterConfig {\r\n  null_behavior: NullFilterBehavior\r\n}\r\n\r\nimpl Default for FilterConfig {\r\n  fn default() -> Self {\r\n    Self {\r\n      null_behavior: NullFilterBehavior::UNDEFINED,\r\n    }\r\n  }\r\n}\r\n\r\npub fn filter(array: &Array, filter: &BooleanArray) -> Result<ArrayRef> {\r\n  filter_config(array, filter, FilterConfig::default()\r\n}\r\n\r\npub fn filter(array: &Array, filter: &BooleanArray, config: FilterConfig) -> Result<ArrayRef> {\r\n ...\r\n}\r\n```\r\nIt seems like implementing such a method could be done by allowing the BitChunksIterator to AND / OR each of the chunks before passing it to the BitSlices iterator.",
        "created_at": "2021-03-03T00:18:30.000Z",
        "updated_at": "2021-04-26T12:48:48.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-04-26T12:48:48.000Z"
    },
    "comments": [
        {
            "created_at": "2021-03-04T19:34:47.785Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11846?focusedCommentId=17295543) by Andrew Lamb (alamb):*\n`[~bchambers]` the idea of allowing a choice for behavior seems reasonable to me"
        },
        {
            "created_at": "2021-04-26T12:48:47.368Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11846?focusedCommentId=17332225) by Andrew Lamb (alamb):*\nMigrated to github: https://github.com/apache/arrow-rs/issues/194"
        }
    ]
}