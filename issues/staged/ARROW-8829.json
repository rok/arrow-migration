{
    "issue": {
        "title": "[Rust] Implement SQL parser",
        "body": "***Note**: This issue was originally created as [ARROW-8829](https://issues.apache.org/jira/browse/ARROW-8829). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nImplement SQL parser that can take a Vec<SQLToken> and produce a SQL AST.\r\n\r\nWe can potentially break this down into separate JIRAs.\r\n\r\nIt needs to support:\r\n \\* Single table SELECT ... FROM\r\n \\* WHERE\r\n \\* GROUP BY\r\n \\* ORDER BY\r\n \\* LIMIT\r\n\r\nIt needs to support the following expressions:\r\n \\* Literals (long, string, double)\r\n \\* Identifiers\r\n \\* Binary expressions\r\n \\*\\* Arithmetic (+, -, **, /, %)\r\n \\*** Boolean (AND, OR)\r\n \\*\\* Comparison (=, !=, <, <=, >, >=, <>)\r\n \\* Unary boolean expression: NOT\r\n \\* CAST(expr AS type)\r\n \\* Aliased expressions: expr AS alias\r\n \\* Scalar functions\r\n \\* Aggregate functions",
        "created_at": "2020-05-16T19:03:47.000Z",
        "updated_at": "2020-07-14T13:48:20.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Component: Rust - DataFusion",
            "Type: task"
        ],
        "closed": true,
        "closed_at": "2020-07-14T13:48:19.000Z"
    },
    "comments": []
}