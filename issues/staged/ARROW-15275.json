{
    "issue": {
        "title": "[C++][JNI] DisposableScannerAdaptor does not handle arrays with offsets",
        "body": "***Note**: This issue was originally created as [ARROW-15275](https://issues.apache.org/jira/browse/ARROW-15275). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe DisposableScannerAdaptor is a JNI bridge from Java to the C++ datasets API.  When it scans record batches it collects all of the buffers from all of the arrays and returns a list of buffer handles to Java which puts these into an ArrowRecordBatch on the Java end.\r\n\r\nUnfortunately, if the array has offsets then the bridge does not return the offset buffer but it returns the entire buffer.  The Java record batch is then incorrect.  The length is wrong (and so it doesn't fully free the memory) and the values are incorrect.\r\n\r\nI'm not familiar enough with the Java implementation to suggest a good fix.  Figuring out the buffer offsets from array offsets is a bit tricky since the logic depends on the data type.  Also, I'm pretty sure the Java side now has to take ownership of the entire buffer which could be tricky because multiple batches could share ownership of the buffer.\r\n\r\nAs a temporary fix for ARROW-13554 I am going to copy the array if it has an offset.  This means the transfer is not zero-copy so I'm creating this issue to solve this properly.",
        "created_at": "2022-01-06T21:11:46.000Z",
        "updated_at": "2022-02-22T16:27:53.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-02-22T16:19:32.760Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15275?focusedCommentId=17496193) by Antoine Pitrou (apitrou):*\nThe dataset JNI bridge seems to only handle primitive arrays (it doesn't transfer buffers for nested arrays, or dictionaries). It should simply be rewritten using the C data interface, now that Arrow Java supports it."
        }
    ]
}