{
    "issue": {
        "title": "[Rust] [DataFusion] Optimize nested joins",
        "body": "***Note**: This issue was originally created as [ARROW-10964](https://issues.apache.org/jira/browse/ARROW-10964). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nOnce <https://github.com/apache/arrow/pull/8961> is merged, we have an optimization for a JOIN that operates on two tables.\r\n\r\nThe next step is to extend this optimization to work with nested joins, and this is not trivial. See discussion in <https://github.com/apache/arrow/pull/8961> for context.\r\n\r\n\u00a0",
        "created_at": "2020-12-18T17:24:13.000Z",
        "updated_at": "2021-04-26T13:24:34.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust - DataFusion",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-04-26T13:24:34.000Z"
    },
    "comments": [
        {
            "created_at": "2020-12-22T13:07:20.151Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10964?focusedCommentId=17253477) by Dani\u00ebl Heres (Dandandan):*\nFound some nice material from Spark on this:\r\n<https://databricks.com/blog/2017/08/31/cost-based-optimizer-in-apache-spark-2-2.html>\r\n\r\nbasically the idea to use column level statistics such as:\r\n- min/max\n- nr of distinct values\n- null count\n  \n  to come up with e.g. selectivity of a filter.\n  \n  Also there is a formula for (inner) join cardinality:\n  \n  `num(A IJ B) = num(A)*num(B)/max(distinct(A.k),distinct(B.k))`"
        },
        {
            "created_at": "2021-04-26T13:24:33.605Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10964?focusedCommentId=17332322) by Andrew Lamb (alamb):*\nMigrated to github: https://github.com/apache/arrow-datafusion/issues/128"
        }
    ]
}