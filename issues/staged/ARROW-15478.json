{
    "issue": {
        "title": "[C++] Creating (or casting to) list array with non-nullable field doesn't check nulls",
        "body": "***Note**: This issue was originally created as [ARROW-15478](https://issues.apache.org/jira/browse/ARROW-15478). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen creating a ListArray where you indicate that the values field is not nullable, you can actually create the array with nulls without this is being validated:\r\n\r\n```python\n\r\n>>> typ = pa.list_(pa.field(\"element\", pa.int64(), nullable=False))\r\n>>> arr = pa.array([[1, 2], [3, 4, None]], typ)\r\n>>> arr\r\n<pyarrow.lib.ListArray object at 0x7f75bdeba760>\r\n[\r\n  [\r\n    1,\r\n    2\r\n  ],\r\n  [\r\n    3,\r\n    4,\r\n    null\r\n  ]\r\n]\r\n\r\n>>> arr.type\r\nListType(list<element: int64 not null>)\r\n```\r\n\r\nAlso explicitly validating it doesn't raise:\r\n\r\n```python\n\r\n>>> arr.validate(full=True)\r\n```\r\n\r\nIs this something we should check?   \r\nWhat guarantees do we attach to the nullability of a field of a nested type?\r\n\r\n",
        "created_at": "2022-01-27T15:00:14.000Z",
        "updated_at": "2022-05-25T08:56:57.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": []
}