{
    "issue": {
        "title": "[C++] CSV example coredump error",
        "body": "***Note**: This issue was originally created as [ARROW-7030](https://issues.apache.org/jira/browse/ARROW-7030). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI am trying to write a example for reading csv by apache-arrow in c++ according to the offical one,<https://arrow.apache.org/docs/cpp/csv.html#>, but it meets Segmentation fault at **`status = reader->Read(&table);`**\r\n\r\nCan anyone help? thank you~\r\n\r\n\u00a0\r\n\r\n**environment info:**\r\n `g++:7.3.1`\r\n\r\n**make command:**\r\n `c++ -g -std=c++11 -Wall -O2 test.cpp -o test -I../../arrow/src -L../../arrow/lib -larrow -lparquet -Wl,-rpath,./`\r\n\r\n**code info:**\r\n ```\r\n arrow::Status status;\r\n arrow::MemoryPool \\*pool = arrow::default_memory_pool();\r\n std::shared_ptr<arrow::io::InputStream> input;\r\n std::string csv_file = \"test.csv\";\r\n auto input_readable = std::dynamic_pointer_cast<arrow::io::ReadableFile>(input);\r\n PARQUET_THROW_NOT_OK(arrow::io::ReadableFile::Open(csv_file, pool, &input_readable));\r\n\r\nauto read_options = arrow::csv::ReadOptions::Defaults();\r\n read_options.use_threads = false;\r\n read_options.column_names.emplace_back(\"name\");\r\n read_options.column_names.emplace_back(\"age\");\r\n\r\nauto parse_options = arrow::csv::ParseOptions::Defaults();\r\n\r\nauto convert_options = arrow::csv::ConvertOptions::Defaults();\r\n convert_options.include_missing_columns = true;\r\n\r\nstd::shared_ptr<arrow::csv::TableReader> reader;\r\n status = arrow::csv::TableReader::Make(pool, input, read_options,\r\n parse_options, convert_options,\r\n &reader);\r\n if (!status.ok())\r\n\r\n{ std::cout << \"make csv table error\" << std::endl; return -1; }\r\n\r\nstd::shared_ptr<arrow::Table> table;\r\n status = reader->Read(&table);\r\n if (!status.ok())\r\n\r\n{ std::cout << \"read csv table error\" << std::endl; return -1; }\r\n\r\n```\r\n\r\n**coredump info:**\r\n ```\r\n Program terminated with signal 11, Segmentation fault.\r\n #0 0x00007fe4fcda83e7 in arrow::io::internal::ReadaheadSpooler::Impl::WorkerLoop() () from ./libarrow.so.15\r\n (gdb) bt\r\n #0 0x00007fe4fcda83e7 in arrow::io::internal::ReadaheadSpooler::Impl::WorkerLoop() () from ./libarrow.so.15\r\n #1 0x00007fe4fd405a2f in execute_native_thread_routine () from ./libarrow.so.15\r\n #2 0x00007fe4fa8ecdf3 in start_thread () from /lib64/libpthread.so.0\r\n #3 0x00007fe4fb86e1bd in clone () from /lib64/libc.so.6\r\n ```\r\n\r\n\u00a0\r\n\r\n**csv info:**\r\n\r\nname,age\r\n aaa,12\r\n bbb,13\r\n ccc,14\r\n ddd,15",
        "created_at": "2019-10-30T11:37:36.000Z",
        "updated_at": "2019-10-30T18:22:43.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-10-30T18:22:43.000Z"
    },
    "comments": [
        {
            "created_at": "2019-10-30T13:09:51.934Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7030?focusedCommentId=16963006) by Wes McKinney (wesm):*\nIs this issue present in the master branch? There was a fix related to threading that will show up in 0.15.1"
        },
        {
            "created_at": "2019-10-30T13:28:08.821Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7030?focusedCommentId=16963016) by wjw (annsshadow):*\n`[~wesm]` yes~I got it from the master branch\u00a0 0.15.0~\r\n\r\nI hava resolved this problem by changing the type of `input` to\u00a0ReadableFile directly~\r\n\r\nanother question, now I can't get the whole parquet file in the memory, only can fetch it slice by slice from the network, so how can I use arrow to read the parquet file?\r\n\r\nthank you~"
        },
        {
            "created_at": "2019-10-30T18:22:43.505Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7030?focusedCommentId=16963302) by Wes McKinney (wesm):*\nLet's move other usage questions to the Arrow mailing lists (dev@ or user@)"
        }
    ]
}