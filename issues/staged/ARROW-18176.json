{
    "issue": {
        "title": "[R] arrow::open_dataset %>% select(myvars) %>% collect causes memory leak",
        "body": "***Note**: This issue was originally created as [ARROW-18176](https://issues.apache.org/jira/browse/ARROW-18176). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI first posted on StackOverlow, [here.](https://stackoverflow.com/questions/74221492/r-arrow-open-dataset-selectmyvars-collect-causing-memory-leak)\r\n\r\nI am having trouble using arrow in R. First, I saved some\u00a0`data.tables`\u00a0that were about 50-60Gb (`{}d{`}\u00a0in the code chunk) in memory to a parquet file using:\r\n\u00a0\r\n`d %>% write_dataset(f, format='parquet') # f is the directory name`\r\n\r\nThen I try to read open the file, select the relevant variables and\r\n\u00a0\r\n`tic()d2 <- open_dataset(f) %>% select(all_of(myvars)) %>% collect #myvars is a vector of variable namestoc()`\r\n\r\nI did this conversion for 3 sets of data.tables (unfortunately, data is confidential so I can't include in the example). In one set, I was able to\u00a0`open>select>collect`\u00a0the desired table in about 60s, obtaining a 10Gb file (after variable selection).\r\n\r\nFor the other two sets, the command caused a memory leak. tic()-toc() returned after 80s. But the object name (d2) never appeared in Rstudio's \"Enviroment panel\", and memory used keeps creeping up until it occupied most of the available RAM of the server, and then R crashed. Note the orginal dataset, without subsetting cols, was smaller than 60Gb and the server had 512GB.\r\n\r\nAny ideas on what could be going on here?\r\n\r\nUPDATE: today I noticed a few more things.\r\n\r\n1) If the collected object is small enough (3 cols, 66million rows), R will unfreeze. The console becomes responsive, the object shows up in the Environment panel. But memory use keeps going up (by small amounts because the underlying that is small). While this is helpening, issuing a gc() command reduces the memory use, but it then starts growing again.\r\n\r\n2) Even after \"rm(d2)\" and\u00a0 \"gc()\", the R session that issued the arrow commands still use around 60-70Gb of RAM... The only way to end that is to close the R session.\u00a0\r\n\r\n3) I am using arrow 10.0.0\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0",
        "created_at": "2022-10-27T13:36:54.000Z",
        "updated_at": "2022-11-01T23:42:21.000Z",
        "labels": [
            "Migrated from Jira",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-10-31T11:11:27.111Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18176?focusedCommentId=17626534) by Nicola Crane (thisisnic):*\nThanks for reporting this `[~lucasmation]`.  This looks like it could potentially be related to ARROW-17541.  Thanks for adding the updates as well."
        }
    ]
}