{
    "issue": {
        "title": "[Java] Move Netty memory manager into a separate module",
        "body": "***Note**: This issue was originally created as [ARROW-8230](https://issues.apache.org/jira/browse/ARROW-8230). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nMove Netty memory manager into a separate module such that the basic allocator does not depend on it.",
        "created_at": "2020-03-26T10:17:10.000Z",
        "updated_at": "2020-07-14T12:21:21.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-07-02T02:09:22.000Z"
    },
    "comments": [
        {
            "created_at": "2020-03-26T10:19:20.293Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8230?focusedCommentId=17067574) by Liya Fan (fan_li_ya):*\n`[~rymurr]` Please feel free to assign it to yourself, if you are interested"
        },
        {
            "created_at": "2020-03-30T12:04:14.709Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8230?focusedCommentId=17070919) by Ryan Murray (rymurr):*\nHey [~fan_li_ya],\r\n\r\nI have had a look and I **think** I understand what the ticket wants, I thought it would be useful to double check before going into implementation.\r\n\r\nThe end goal of ARROW-4526 is to remove all the dependencies on Netty from arrow-memory. Correct?\r\n\r\nThis particular ticket is meant to create a new module (eg arrow-memory-netty) and remove all netty dependencies from arrow-memory. arrow-memory-netty will depend on arrow-memory but not the other way around. Does this sound roughly correct?\r\n\r\nAt first glance there are still a few references to netty in arrow-memory, including: ArrowBuf, BaseAllocator, BufferAllocator, BufferLedger as well as some usages of PlatformDependent in the Hasher classes. Some of which have already been marked Deprecated. Is the goal of this ticket to reconcile all of these references? I assume that given the deprecated flag was added by you only recently we only want to mark some things as deprecated rather than outright remove them"
        },
        {
            "created_at": "2020-03-30T14:16:10.777Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8230?focusedCommentId=17071018) by Liya Fan (fan_li_ya):*\n`[~rymurr]` \r\nI think my understanding is close to yours. \r\n\r\nHowever, it may not be feasible to remove the netty dependency completely in a single PR, as some refactoring work is required before we are ready to remove it completely.\r\n\r\nSo I think in this issue, we need to create the new module, move some classes there, mark some as deprecated, and leave the rest as future work. "
        },
        {
            "created_at": "2020-03-30T16:59:38.588Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8230?focusedCommentId=17071146) by Ryan Murray (rymurr):*\nThanks [~fan_li_ya]!\r\n\r\nI am thinking the same. Will post a patch soon. I think we will end up with a circular dependency between arrow-memory and arrow-memory-netty which I don't like but its temporary. Can discuss further once I post the PR"
        },
        {
            "created_at": "2020-03-31T01:45:09.328Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8230?focusedCommentId=17071382) by Liya Fan (fan_li_ya):*\n`[~rymurr]` Sounds good to me. Please go ahead with your PR. "
        },
        {
            "created_at": "2020-07-02T02:09:22.150Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8230?focusedCommentId=17149775) by Liya Fan (fan_li_ya):*\nFixed by https://issues.apache.org/jira/browse/ARROW-9236"
        }
    ]
}