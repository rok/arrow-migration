{
    "issue": {
        "title": "[Python] pyarrow.parquet.read_table fails with predicate pushdown on categorical data with use_legacy_dataset=False",
        "body": "***Note**: This issue was originally created as [ARROW-10008](https://issues.apache.org/jira/browse/ARROW-10008). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI apologise if this is a known issue; I looked both in this issue tracker and on github and I didn't find it.\r\n\r\nThere seems to be a problem reading a dataset with predicate pushdown (filters) on columns with categorical data. The problem only occurs with `use_legacy_dataset=False` (but if that's True it has no effect if the column isn't a partition key.\r\n\r\nReproducer:\r\n```python\n\r\nimport shutil\r\nimport sys, platform\r\nfrom pathlib import Path\r\nimport pyarrow as pa\r\nimport pyarrow.parquet as pq\r\nimport pandas as pd\r\n\r\n# Settings\r\nCATEGORICAL_DTYPE = True\r\nUSE_LEGACY_DATASET = False\r\n\r\nprint('Platform:', platform.platform())\r\nprint('Python version:', sys.version)\r\nprint('Pandas version:', pd.__version__)\r\nprint('pyarrow version:', pa.__version__)\r\nprint('categorical enabled:', CATEGORICAL_DTYPE)\r\nprint('use_legacy_dataset:', USE_LEGACY_DATASET)\r\nprint()\r\n\r\n# Clean up test dataset if present\r\npath = Path('blah.parquet')\r\nif path.exists():\r\n    shutil.rmtree(str(path))\r\n\r\n# Simple data\r\nd = dict(col1=['a', 'b'], col2=[1, 2])\r\n\r\n# Either categorical or not\r\nif CATEGORICAL_DTYPE:\r\n    df = pd.DataFrame(data=d, dtype='category')\r\nelse:\r\n    df = pd.DataFrame(data=d)\r\n\r\n# Write dataset\r\ntable = pa.Table.from_pandas(df)\r\npq.write_to_dataset(table, str(path))\r\n\r\n# Load dataset\r\ntable = pq.read_table(\r\n    str(path),\r\n    filters=[('col1', '=', 'a')],\r\n    use_legacy_dataset=USE_LEGACY_DATASET,\r\n)\r\ndf = table.to_pandas()\r\nprint(df.dtypes)\r\nprint(repr(df))\r\n\r\n```\r\n\u00a0Output:\r\n```java\n\r\n$ python categorical_predicate_pushdown.py \r\nPlatform: Linux-5.8.9-050809-generic-x86_64-with-glibc2.10\r\nPython version: 3.8.5 (default, Aug  5 2020, 08:36:46) \r\n[GCC 7.3.0]\r\nPandas version: 1.1.2\r\npyarrow version: 1.0.1\r\ncategorical enabled: True\r\nuse_legacy_dataset: False\r\n\r\n/arrow/cpp/src/arrow/result.cc:28: ValueOrDie called on an error: Type error: Cannot compare scalars of differing type: dictionary<values=string, indices=int32, ordered=0> vs string\r\n/home/caleb/Documents/kapiche/chrysalis/venv38/lib/python3.8/site-packages/pyarrow/libarrow.so.100(+0x4fc128)[0x7f50568c6128]\r\n/home/caleb/Documents/kapiche/chrysalis/venv38/lib/python3.8/site-packages/pyarrow/libarrow.so.100(_ZN5arrow4util8ArrowLogD1Ev+0xdd)[0x7f50568c693d]\r\n/home/caleb/Documents/kapiche/chrysalis/venv38/lib/python3.8/site-packages/pyarrow/libarrow.so.100(_ZN5arrow8internal14DieWithMessageERKSs+0x51)[0x7f50569757c1]\r\n/home/caleb/Documents/kapiche/chrysalis/venv38/lib/python3.8/site-packages/pyarrow/libarrow.so.100(_ZN5arrow8internal17InvalidValueOrDieERKNS_6StatusE+0x4c)[0x7f505697716c]\r\n/home/caleb/Documents/kapiche/chrysalis/venv38/lib/python3.8/site-packages/pyarrow/libarrow_dataset.so.100(_ZNK5arrow7dataset20ComparisonExpression21AssumeGivenComparisonERKS1_+0x438)[0x7f5043334f18]\r\n/home/caleb/Documents/kapiche/chrysalis/venv38/lib/python3.8/site-packages/pyarrow/libarrow_dataset.so.100(_ZNK5arrow7dataset20ComparisonExpression6AssumeERKNS0_10ExpressionE+0x34)[0x7f5043334fa4]\r\n/home/caleb/Documents/kapiche/chrysalis/venv38/lib/python3.8/site-packages/pyarrow/libarrow_dataset.so.100(_ZNK5arrow7dataset20ComparisonExpression6AssumeERKNS0_10ExpressionE+0xce)[0x7f504333503e]\r\n/home/caleb/Documents/kapiche/chrysalis/venv38/lib/python3.8/site-packages/pyarrow/libarrow_dataset.so.100(_ZNK5arrow7dataset20ComparisonExpression6AssumeERKNS0_10ExpressionE+0xce)[0x7f504333503e]\r\n/home/caleb/Documents/kapiche/chrysalis/venv38/lib/python3.8/site-packages/pyarrow/libarrow_dataset.so.100(_ZNK5arrow7dataset12RowGroupInfo7SatisfyERKNS0_10ExpressionE+0x1c)[0x7f50433116ac]\r\n/home/caleb/Documents/kapiche/chrysalis/venv38/lib/python3.8/site-packages/pyarrow/libarrow_dataset.so.100(_ZN5arrow7dataset19ParquetFileFragment15FilterRowGroupsERKNS0_10ExpressionE+0x563)[0x7f5043311cb3]\r\n/home/caleb/Documents/kapiche/chrysalis/venv38/lib/python3.8/site-packages/pyarrow/libarrow_dataset.so.100(_ZNK5arrow7dataset17ParquetFileFormat8ScanFileESt10shared_ptrINS0_11ScanOptionsEES2_INS0_11ScanContextEEPNS0_12FileFragmentE+0x203)[0x7f50433168a3]\r\n/home/caleb/Documents/kapiche/chrysalis/venv38/lib/python3.8/site-packages/pyarrow/libarrow_dataset.so.100(_ZN5arrow7dataset12FileFragment4ScanESt10shared_ptrINS0_11ScanOptionsEES2_INS0_11ScanContextEE+0x55)[0x7f5043329785]\r\n/home/caleb/Documents/kapiche/chrysalis/venv38/lib/python3.8/site-packages/pyarrow/libarrow_dataset.so.100(_ZZN5arrow7dataset19GetScanTaskIteratorENS_8IteratorISt10shared_ptrINS0_8FragmentEEEES2_INS0_11ScanOptionsEES2_INS0_11ScanContextEEENKUlS4_E_clES4_+0x91)[0x7f50433485a1]\r\n/home/caleb/Documents/kapiche/chrysalis/venv38/lib/python3.8/site-packages/pyarrow/libarrow_dataset.so.100(_ZN5arrow8IteratorINS0_ISt10shared_ptrINS_7dataset8ScanTaskEEEEE4NextINS_11MapIteratorIZNS2_19GetScanTaskIteratorENS0_IS1_INS2_8FragmentEEEES1_INS2_11ScanOptionsEES1_INS2_11ScanContextEEEUlSA_E_SA_S5_EEEENS_6ResultIS5_EEPv+0xde)[0x7f504334b55e]\r\n/home/caleb/Documents/kapiche/chrysalis/venv38/lib/python3.8/site-packages/pyarrow/libarrow_dataset.so.100(_ZN5arrow15FlattenIteratorISt10shared_ptrINS_7dataset8ScanTaskEEE4NextEv+0x127)[0x7f50433616b7]\r\n/home/caleb/Documents/kapiche/chrysalis/venv38/lib/python3.8/site-packages/pyarrow/libarrow_dataset.so.100(_ZN5arrow8IteratorISt10shared_ptrINS_7dataset8ScanTaskEEE4NextINS_15FlattenIteratorIS4_EEEENS_6ResultIS4_EEPv+0x14)[0x7f5043361874]\r\n/home/caleb/Documents/kapiche/chrysalis/venv38/lib/python3.8/site-packages/pyarrow/libarrow_dataset.so.100(_ZN5arrow7dataset7Scanner7ToTableEv+0x611)[0x7f5043336691]\r\n/home/caleb/Documents/kapiche/chrysalis/venv38/lib/python3.8/site-packages/pyarrow/_dataset.cpython-38-x86_64-linux-gnu.so(+0x3b150)[0x7f50435c9150]\r\n/home/caleb/Documents/kapiche/chrysalis/venv38/lib/python3.8/site-packages/pyarrow/_dataset.cpython-38-x86_64-linux-gnu.so(+0x2c0eb)[0x7f50435ba0eb]\r\n/home/caleb/Documents/kapiche/chrysalis/venv38/lib/python3.8/site-packages/pyarrow/_dataset.cpython-38-x86_64-linux-gnu.so(+0x2d9ab)[0x7f50435bb9ab]\r\npython(PyCFunction_Call+0x56)[0x562843a6dce6]\r\npython(_PyObject_MakeTpCall+0x22f)[0x562843a2b5cf]\r\npython(_PyEval_EvalFrameDefault+0x11d7)[0x562843aaf727]\r\npython(_PyEval_EvalCodeWithName+0x2d2)[0x562843a78802]\r\npython(+0x18bb80)[0x562843a79b80]\r\npython(+0x1001e3)[0x5628439ee1e3]\r\npython(_PyEval_EvalCodeWithName+0x2d2)[0x562843a78802]\r\npython(_PyFunction_Vectorcall+0x1e3)[0x562843a797a3]\r\npython(+0x1001e3)[0x5628439ee1e3]\r\npython(_PyEval_EvalCodeWithName+0x2d2)[0x562843a78802]\r\npython(PyEval_EvalCodeEx+0x44)[0x562843a795b4]\r\npython(PyEval_EvalCode+0x1c)[0x562843b07bdc]\r\npython(+0x219c84)[0x562843b07c84]\r\npython(+0x24be94)[0x562843b39e94]\r\npython(PyRun_FileExFlags+0xa1)[0x562843a0279a]\r\npython(PyRun_SimpleFileExFlags+0x3b4)[0x562843a02b7f]\r\npython(+0x115a44)[0x562843a03a44]\r\npython(Py_BytesMain+0x39)[0x562843b3c9b9]\r\n/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7f5058f2a0b3]\r\npython(+0x1dea83)[0x562843acca83]\r\nAborted (core dumped)\r\n```\r\nWith `CATEGORICAL_DTYPE = False`, it works as expected:\r\n```java\n\r\n$ python categorical_predicate_pushdown.py \r\nPlatform: Linux-5.8.9-050809-generic-x86_64-with-glibc2.10\r\nPython version: 3.8.5 (default, Aug  5 2020, 08:36:46) \r\n[GCC 7.3.0]\r\nPandas version: 1.1.2\r\npyarrow version: 1.0.1\r\ncategorical enabled: False\r\nuse_legacy_dataset: Falsecol1    object\r\ncol2     int64\r\ndtype: object\r\n  col1  col2\r\n0    a     1\r\n\r\n```\r\n\u00a0\r\n\r\n\u00a0",
        "created_at": "2020-09-15T00:40:58.000Z",
        "updated_at": "2020-10-22T00:50:23.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-10-05T20:24:29.000Z"
    },
    "comments": [
        {
            "created_at": "2020-09-15T15:07:57.590Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10008?focusedCommentId=17196215) by Joris Van den Bossche (jorisvandenbossche):*\n`[~cjrh]` Thanks for the report!\r\n\r\nI _thought_ we solved this with ARROW-9345, but seems not (I can reproduce the crash). "
        },
        {
            "created_at": "2020-09-15T15:22:46.462Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10008?focusedCommentId=17196226) by Joris Van den Bossche (jorisvandenbossche):*\nA little bit simplified reproducer:\r\n\r\n```Java\n\r\ndf = pd.DataFrame(dict(col1=['a', 'b'], col2=[1, 2]))\r\ndf['col1'] = df['col1'].astype(\"category\")\r\n\r\nimport pyarrow.parquet as pq\r\npq.write_table(pa.table(df), \"test_filter_dictionary.parquet\")\r\n\r\nimport pyarrow.dataset as ds\r\ndataset = ds.dataset('test_filter_dictionary.parquet')\r\ndataset.to_table(filter=ds.field(\"col1\") == \"a\")\r\n```\r\n\r\non master giving this stacktrace:\r\n\r\n```Java\n\r\n../src/arrow/result.cc:28: ValueOrDie called on an error: Type error: Cannot compare scalars of differing type: dictionary<values=string, indices=int32, ordered=0> vs string\r\n/home/joris/miniconda3/envs/arrow-dev/lib/libarrow.so.200(+0xba26d0)[0x7f3ae9db36d0]\r\n/home/joris/miniconda3/envs/arrow-dev/lib/libarrow.so.200(+0xba264e)[0x7f3ae9db364e]\r\n/home/joris/miniconda3/envs/arrow-dev/lib/libarrow.so.200(+0xba2670)[0x7f3ae9db3670]\r\n/home/joris/miniconda3/envs/arrow-dev/lib/libarrow.so.200(_ZN5arrow4util8ArrowLogD1Ev+0x57)[0x7f3ae9db39dd]\r\n/home/joris/miniconda3/envs/arrow-dev/lib/libarrow.so.200(_ZN5arrow8internal14DieWithMessageERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x5b)[0x7f3ae9bb8925]\r\n/home/joris/miniconda3/envs/arrow-dev/lib/libarrow.so.200(_ZN5arrow8internal17InvalidValueOrDieERKNS_6StatusE+0x88)[0x7f3ae9bb89e8]\r\n/home/joris/miniconda3/envs/arrow-dev/lib/libarrow_dataset.so.200(+0x1ec945)[0x7f3ae461b945]\r\n/home/joris/miniconda3/envs/arrow-dev/lib/libarrow_dataset.so.200(_ZNK5arrow7dataset20ComparisonExpression21AssumeGivenComparisonERKS1_+0x28c)[0x7f3ae45fe1ca]\r\n/home/joris/miniconda3/envs/arrow-dev/lib/libarrow_dataset.so.200(_ZNK5arrow7dataset20ComparisonExpression6AssumeERKNS0_10ExpressionE+0x88)[0x7f3ae45fdbf0]\r\n/home/joris/miniconda3/envs/arrow-dev/lib/libarrow_dataset.so.200(_ZNK5arrow7dataset20ComparisonExpression6AssumeERKNS0_10ExpressionE+0x28d)[0x7f3ae45fddf5]\r\n/home/joris/miniconda3/envs/arrow-dev/lib/libarrow_dataset.so.200(_ZNK5arrow7dataset20ComparisonExpression6AssumeERKNS0_10ExpressionE+0x28d)[0x7f3ae45fddf5]\r\n/home/joris/miniconda3/envs/arrow-dev/lib/libarrow_dataset.so.200(+0x1add8a)[0x7f3ae45dcd8a]\r\n/home/joris/miniconda3/envs/arrow-dev/lib/libarrow_dataset.so.200(+0x1adde1)[0x7f3ae45dcde1]\r\n/home/joris/miniconda3/envs/arrow-dev/lib/libarrow_dataset.so.200(_ZNK5arrow7dataset12RowGroupInfo7SatisfyERKNS0_10ExpressionE+0x3a)[0x7f3ae46929e6]\r\n/home/joris/miniconda3/envs/arrow-dev/lib/libarrow_dataset.so.200(+0x264fb4)[0x7f3ae4693fb4]\r\n/home/joris/miniconda3/envs/arrow-dev/lib/libarrow_dataset.so.200(+0x275e8b)[0x7f3ae46a4e8b]\r\n/home/joris/miniconda3/envs/arrow-dev/lib/libarrow_dataset.so.200(+0x279bb8)[0x7f3ae46a8bb8]\r\n/home/joris/miniconda3/envs/arrow-dev/lib/libarrow_dataset.so.200(+0x275e01)[0x7f3ae46a4e01]\r\n/home/joris/miniconda3/envs/arrow-dev/lib/libarrow_dataset.so.200(+0x271b66)[0x7f3ae46a0b66]\r\n/home/joris/miniconda3/envs/arrow-dev/lib/libarrow_dataset.so.200(+0x26c9fc)[0x7f3ae469b9fc]\r\n/home/joris/miniconda3/envs/arrow-dev/lib/libarrow_dataset.so.200(_ZN5arrow7dataset19ParquetFileFragment15FilterRowGroupsERKNS0_10ExpressionE+0x2a0)[0x7f3ae469425a]\r\n/home/joris/miniconda3/envs/arrow-dev/lib/libarrow_dataset.so.200(_ZNK5arrow7dataset17ParquetFileFormat8ScanFileESt10shared_ptrINS0_11ScanOptionsEES2_INS0_11ScanContextEEPNS0_12FileFragmentE+0x61c)[0x7f3ae469130c]\r\n```\r\n\r\nSo for some reason, the inserted implicit cast didn't do its work. And also anyway, if you have incompatible types, we should fail with a nice error message instead of crashing like above)."
        },
        {
            "created_at": "2020-10-05T20:24:29.488Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10008?focusedCommentId=17208296) by Ben Kietzman (bkietz):*\nIssue resolved by pull request 8311\n<https://github.com/apache/arrow/pull/8311>"
        },
        {
            "created_at": "2020-10-22T00:47:21.819Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10008?focusedCommentId=17218672) by Caleb Hattingh (cjrh):*\nThank you everyone for your work on this (\\*)"
        }
    ]
}