{
    "issue": {
        "title": "[C++] Expose CSV I/O readahead as a read option",
        "body": "***Note**: This issue was originally created as [ARROW-12090](https://issues.apache.org/jira/browse/ARROW-12090). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nAll of the CSV readers today base their I/O readahead on the parallelism of the executor (or 2 for the serial reader).\u00a0 This is a reasonable default if the I/O is homogeneous but better values could presumably be used for some situations.\r\n\r\nFor example, if most files are buffered in RAM (and the reader is CPU bound for these files) but some files are not, then you would want the readahead to be large enough to read the unbuffered files while the CPU bound work is being done (assuming you are even lucky enough for things to be scheduled in that way)\r\n\r\nThis isn't likely to be much benefit in most situations though and it does add yet another option so I'm not really motivated to do this work until such a situation arises.",
        "created_at": "2021-03-25T18:31:46.000Z",
        "updated_at": "2021-06-07T20:50:32.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-06-07T20:50:32.000Z"
    },
    "comments": [
        {
            "created_at": "2021-06-07T20:50:32.249Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12090?focusedCommentId=17358868) by Weston Pace (westonpace):*\nI don't think I'm ever going to do this.\u00a0 It's a very fine-tuned option.\u00a0 If we start to see it matter (e.g. different datasets need different values) then we should find a way to detect the correct value."
        }
    ]
}