{
    "issue": {
        "title": "[C++] ParquetFileFragment scanning doesn't handle filter on partition field",
        "body": "***Note**: This issue was originally created as [ARROW-9105](https://issues.apache.org/jira/browse/ARROW-9105). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen splitting a fragment into row group fragments, filtering on the partition field raises an error.\r\n\r\nPython reproducer:\r\n\r\n```python\n\r\ndf = pd.DataFrame({\"dummy\": [1, 1, 1, 1], \"part\": [\"A\", \"A\", \"B\", \"B\"]})\r\ndf.to_parquet(\"test_partitioned_filter\", partition_cols=[\"part\"], engine=\"pyarrow\")\r\n\r\nimport pyarrow.dataset as ds\r\ndataset = ds.dataset(\"test_partitioned_filter\", format=\"parquet\", partitioning=\"hive\")\r\nfragment = list(dataset.get_fragments())[0]\r\n```\r\n\r\n```Java\n\r\nIn [31]: dataset.to_table(filter=ds.field(\"part\") == \"A\").to_pandas()                                                                                                                                              \r\nOut[31]: \r\n   dummy part\r\n0      1    A\r\n1      1    A\r\n\r\nIn [32]: fragment.split_by_row_group(ds.field(\"part\") == \"A\")                                                                                                                                                      \r\n---------------------------------------------------------------------------\r\nArrowInvalid                              Traceback (most recent call last)\r\n<ipython-input-32-371cba80fd6f> in <module>\r\n----> 1 fragment.split_by_row_group(ds.field(\"part\") == \"A\")\r\n\r\n~/scipy/repos/arrow/python/pyarrow/_dataset.pyx in pyarrow._dataset.ParquetFileFragment.split_by_row_group()\r\n\r\n~/scipy/repos/arrow/python/pyarrow/_dataset.pyx in pyarrow._dataset._insert_implicit_casts()\r\n\r\n~/scipy/repos/arrow/python/pyarrow/error.pxi in pyarrow.lib.pyarrow_internal_check_status()\r\n\r\n~/scipy/repos/arrow/python/pyarrow/error.pxi in pyarrow.lib.check_status()\r\n\r\nArrowInvalid: Field named 'part' not found or not unique in the schema.\r\n```\r\n\r\nThis is probably a \"strange\" thing to do, since the fragment from a partitioned dataset is already coming only from a single partition (so will always only satisfy a single equality expression). But it's still nice that as a user you don't have to care about only passing part of the filter down to `split_by_row_groups`.\r\n",
        "created_at": "2020-06-11T14:25:49.000Z",
        "updated_at": "2020-06-17T15:23:40.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-06-17T15:23:25.000Z"
    },
    "comments": [
        {
            "created_at": "2020-06-11T14:27:14.298Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9105?focusedCommentId=17133291) by Joris Van den Bossche (jorisvandenbossche):*\nAnd it's not only `SplitByRowGroup`, but also general scanning with eg `ToTable`:\r\n\r\n```Java\n\r\nIn [34]: fragment.to_table(filter=ds.field(\"part\") == \"A\").to_pandas()                                                                                                                                             \r\n...\r\nArrowInvalid: Field named 'part' not found or not unique in the schema.\r\n```"
        },
        {
            "created_at": "2020-06-11T15:12:30.052Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9105?focusedCommentId=17133320) by Ben Kietzman (bkietz):*\nThe fragment's physical schema is used to insert implicit casts into the predicate (without which filtering will fail with type mismatches). Since the field `\"part\"` is not present in that schema insertion of implicit casts fails (since we don't know what type it should be cast to). If row group splitting on `\"part\"` should not fail, I'm not sure how to resolve this.\r\n- We could unconditionally remove filter subexpressions which reference fields absent from the fragment's physical schema, but this seems like foot-gun territory.\n- Fragments could maintain information from their parent dataset such that partition fields can be correctly typed or safely removed before inserting implicit casts."
        },
        {
            "created_at": "2020-06-11T15:21:16.388Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9105?focusedCommentId=17133329) by Ben Kietzman (bkietz):*\n- Infer a schema for fields referenced in a fragment's partition expression but absent from its physical schema, then use this schema as supplemental information when inserting implicit casts, so a fragment with partition expression `\"part\" == \"XXX\"` would infer that `\"part\"` has type `string` and **not** fail when inserting implicit casts into `\"part\" == \"A\"`"
        },
        {
            "created_at": "2020-06-17T15:23:25.225Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9105?focusedCommentId=17138561) by Francois Saint-Jacques (fsaintjacques):*\nIssue resolved by pull request 7438\n<https://github.com/apache/arrow/pull/7438>"
        }
    ]
}