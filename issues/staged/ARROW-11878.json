{
    "issue": {
        "title": "[C++] Improve Converter API to support chunking",
        "body": "***Note**: This issue was originally created as [ARROW-11878](https://issues.apache.org/jira/browse/ARROW-11878). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWe would like to be able to chunk a data frame when converting to Arrow Table in R (see ARROW-9293). Apparently this is also not supported in pyarrow. \r\n\r\n`[~romainfrancois]` says two things need to happen: \r\n\r\n - Converter api needs to be able to Extend() a range of values, as opposed to the current api we have : `Status Extend(SEXP x, int64_t size)` override which says ingest that vector x and btw it has this many elements. \r\n\r\n - Chunker or perhaps another/new class would sit on top of that and perhaps `Chunker::Extend(x)` would call multiple times (one for each chunk) `Converter$Extend(x, start, size)`. \r\n\r\nThe current chunker solves I believe a different problem and is rooted in a Converter that deals with elements one by one so that: \r\n  - if the element can be Append() that\u2019s fine\r\n  - if not, then create a new chunk and try again\r\n\r\nThe current chunker has a multiple element method but it\u2019s an all or nothing: \r\n\r\n```Java\n\r\n  // we could get bit smarter here since the whole batch of appendable values\r\n  // will be rejected if a capacity error is raised\r\n  Status Extend(InputType values, int64_t size) {\r\n    auto status = converter_->Extend(values, size);\r\n    if (ARROW_PREDICT_FALSE(status.IsCapacityError())) {\r\n      if (converter_->builder()->length() == 0) {\r\n        return status;\r\n      }\r\n      ARROW_RETURN_NOT_OK(FinishChunk());\r\n      return Extend(values, size);\r\n    }\r\n    length_ += size;\r\n    return status;\r\n  }\r\n```\r\n\r\nThis does not give a way to say e.g. take this vector and chunk it into arrays of this size, which is what we want. \r\n\r\ncc `[~kszucs]` `[~bkietz]`",
        "created_at": "2021-03-05T19:27:58.000Z",
        "updated_at": "2022-07-04T17:41:29.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": []
}