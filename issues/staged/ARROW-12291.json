{
    "issue": {
        "title": "[R] Determine the type of an unevaluated expression",
        "body": "***Note**: This issue was originally created as [ARROW-12291](https://issues.apache.org/jira/browse/ARROW-12291). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThere would be several benefits to knowing the data type of an expression before its value has actually been computed. Probably the greatest benefit would be that other expressions could then behave dynamically based on the data types of their inputs. Consider how this capability might be implemented.",
        "created_at": "2021-04-08T03:40:41.000Z",
        "updated_at": "2021-05-13T17:28:44.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-05-13T15:48:49.000Z"
    },
    "comments": [
        {
            "created_at": "2021-04-08T17:14:56.041Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12291?focusedCommentId=17317357) by Neal Richardson (npr):*\nI think this just isn't knowable from R without evaluating the expressions, or otherwise reimplementing the C++ kernel logic. "
        },
        {
            "created_at": "2021-04-09T00:19:08.192Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12291?focusedCommentId=17317552) by Ian Cook (icook):*\nI wonder whether the function registry in the C++ library could be extended with a function that could be called exactly like `arrow::compute::CallFunction`\u00a0but that would return the resultant data type instead of the result itself (and would do so without actually running any computations on the data)."
        },
        {
            "created_at": "2021-05-13T14:37:05.892Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12291?focusedCommentId=17343899) by Neal Richardson (npr):*\nDone in ARROW-12731"
        }
    ]
}