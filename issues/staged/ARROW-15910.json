{
    "issue": {
        "title": "[Python] pyarrow.parquet.read_table either returns FileNotFound or ArrowInvalid",
        "body": "***Note**: This issue was originally created as [ARROW-15910](https://issues.apache.org/jira/browse/ARROW-15910). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nrunning below results in `\"GetFileIno() yielded path 'myBucket/features/MyParquet.parquet/year=2022/part-0019.snappy.parquet' which is outside base dir 'gs://myBucket/features/MyParquet.parquet/' \"`\r\n\r\n```Java\n\r\nimport pyarrow.parquet as pq\r\nimport gcsfs\r\nfile_path=\"gs://myBucket/features/MyParquet.parquet/\"\r\nfs=gcsfs.GCSFileSystem()\r\ntable=pq.read_table(file_path,filesystem=fs)\u00a0\r\n```\r\nRemoving the gs:// from file_path results in a `FileNotFoundError`. Any variation of / or // at the beginning of the path gives me the 'outside base dir' error.\r\n\r\nI also ran the below and got valid results using both file_path patterns, so I know it finds the path just fine.\r\n\r\n```Java\n\r\nfrom pyarrow.fs import FileSelector, PyFileSystem, FSSpecHandler\r\nfilesys = PyFileSystem(FSSpecHandler(fs))\r\nselector = FileSelector(file_path, recursive=True)\r\nfilesys.get_file_info(selector)\r\n```",
        "created_at": "2022-03-10T17:14:00.000Z",
        "updated_at": "2022-03-21T18:53:44.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Parquet",
            "Component: Python",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-03-10T17:16:59.166Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15910?focusedCommentId=17504443) by Antoine Pitrou (apitrou):*\nCan you try with PyArrow 7.0.0?\r\nAlso cc `[~jorisvandenbossche]`"
        },
        {
            "created_at": "2022-03-10T17:22:57.531Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15910?focusedCommentId=17504456) by Callista Rogers (crogers923):*\nHey Antoine,\r\n\r\nSame results in both tests with PyArrow 7.0.0 as well"
        },
        {
            "created_at": "2022-03-15T14:52:35.174Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15910?focusedCommentId=17506951) by Joris Van den Bossche (jorisvandenbossche):*\nThe first error is expected I _think_, because you can either pass a URI (with \"gs://\") or either a path + filesystem object (in which case the file path cannot contain \"gs://\"). And since we do not yet expose GCS filesystem discovery in python, the only option is to do it via the fsspec filesystem, and thus you have to pass a file path and not URI.\r\n\r\n> Removing the gs:// from file_path results in a FileNotFoundError. Any variation of / or // at the beginning of the path gives me the 'outside base dir' error.\r\n\r\nSo this would then be expected to work (remove the gs://).  \r\n\r\nCan you show the full error traceback from `pq.read_table(file_path,filesystem=fs)` (with file_path without gs://)?\r\n\r\n\r\n "
        },
        {
            "created_at": "2022-03-18T16:07:17.497Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15910?focusedCommentId=17508892) by Callista Rogers (crogers923):*\n```Java\n\r\nFileNotFoundError                         Traceback (most recent call last)\r\n/tmp/ipykernel_1684296/1250703457.py in <module>\r\n      3 file_path=\"MyBucket/path/Name_of_parquet.parquet/\"\r\n      4 fs=gcsfs.GCSFileSystem()\r\n----> 5 table=pq.read_table(file_path,filesystem=fs)\r\n\r\n/opt/conda/lib/python3.7/site-packages/pyarrow/parquet.py in read_table(source, columns, use_threads, metadata, use_pandas_metadata, memory_map, read_dictionary, filesystem, filters, buffer_size, partitioning, use_legacy_dataset, ignore_prefixes, pre_buffer, coerce_int96_timestamp_unit)\r\n   1968                 ignore_prefixes=ignore_prefixes,\r\n   1969                 pre_buffer=pre_buffer,\r\n-> 1970                 coerce_int96_timestamp_unit=coerce_int96_timestamp_unit\r\n   1971             )\r\n   1972         except ImportError:\r\n\r\n/opt/conda/lib/python3.7/site-packages/pyarrow/parquet.py in __init__(self, path_or_paths, filesystem, filters, partitioning, read_dictionary, buffer_size, memory_map, ignore_prefixes, pre_buffer, coerce_int96_timestamp_unit, **kwargs)\r\n   1782                                    format=parquet_format,\r\n   1783                                    partitioning=partitioning,\r\n-> 1784                                    ignore_prefixes=ignore_prefixes)\r\n   1785 \r\n   1786     @property\r\n\r\n/opt/conda/lib/python3.7/site-packages/pyarrow/dataset.py in dataset(source, schema, format, filesystem, partitioning, partition_base_dir, exclude_invalid_files, ignore_prefixes)\r\n    665 \r\n    666     if _is_path_like(source):\r\n--> 667         return _filesystem_dataset(source, **kwargs)\r\n    668     elif isinstance(source, (tuple, list)):\r\n    669         if all(_is_path_like(elem) for elem in source):\r\n\r\n/opt/conda/lib/python3.7/site-packages/pyarrow/dataset.py in _filesystem_dataset(source, schema, filesystem, partitioning, format, partition_base_dir, exclude_invalid_files, selector_ignore_prefixes)\r\n    420     factory = FileSystemDatasetFactory(fs, paths_or_selector, format, options)\r\n    421 \r\n--> 422     return factory.finish(schema)\r\n    423 \r\n    424 \r\n\r\n/opt/conda/lib/python3.7/site-packages/pyarrow/_dataset.pyx in pyarrow._dataset.DatasetFactory.finish()\r\n\r\n/opt/conda/lib/python3.7/site-packages/pyarrow/error.pxi in pyarrow.lib.pyarrow_internal_check_status()\r\n\r\n/opt/conda/lib/python3.7/site-packages/pyarrow/_fs.pyx in pyarrow._fs._cb_open_input_file()\r\n\r\n/opt/conda/lib/python3.7/site-packages/pyarrow/fs.py in open_input_file(self, path)\r\n    392 \r\n    393         if not self.fs.isfile(path):\r\n--> 394             raise FileNotFoundError(path)\r\n    395 \r\n    396         return PythonFile(self.fs.open(path, mode=\"rb\"), mode=\"r\")\r\n```"
        },
        {
            "created_at": "2022-03-21T16:39:02.734Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15910?focusedCommentId=17509997) by Joris Van den Bossche (jorisvandenbossche):*\nCould you also show the output of \r\n\r\n```Java\n\r\nimport gcsfs\r\nfile_path = \"MyBucket/path/Name_of_parquet.parquet/\"\r\nfs = gcsfs.GCSFileSystem()\r\nprint(fs.info(flle_path))\r\n\r\nfrom pyarrow.fs import PyFileSystem, FSSpecHandler\r\npa_fs = PyFileSystem(FSSpecHandler(fs))\r\nprint(pa_fs.get_file_info(file_path))\r\n```"
        },
        {
            "created_at": "2022-03-21T17:06:54.499Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15910?focusedCommentId=17510016) by Callista Rogers (crogers923):*\nfrom `fs.info(file_path)`:\r\n{'bucket': 'MyBucket', 'name': 'MyBucket/path/Name_of_parquet.parquet/', 'size': 0, 'storageClass': 'DIRECTORY', 'type': 'directory'}\r\n\r\nfrom `pa_fs.get_file_info(file_path))`\r\n<FileInfo for 'MyBucket/path/Name_of_parquet.parquet/': type=FileType.Directory>"
        },
        {
            "created_at": "2022-03-21T17:20:40.757Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15910?focusedCommentId=17510023) by Joris Van den Bossche (jorisvandenbossche):*\n`[~crogers923]` thanks for the quick follow-up.\r\n\r\nIt's strange that it correctly sees a directory, but then the actual reading fails with \"FIleNotFound\" (thinking it is a file, not a directory).  \r\nBut I remember now that a few weeks ago we had a similar issue on the user mailing list with gcsfs giving such error (see my answer at https://lists.apache.org/thread/d0fccn94ovt2hh6cgyktcvz127x5pysw). In that case, it mattered whether you called the \"info\" method the first or the second time. Can you check that here as well? The above output that you show, is that the output you get when running that the first time? (after restarting the interactive (console) session)\r\n\r\n"
        },
        {
            "created_at": "2022-03-21T18:25:51.641Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15910?focusedCommentId=17510062) by Callista Rogers (crogers923):*\nOh that's interesting. The first time I run fs.info, I get:\r\n\r\n{'kind': 'storage#object', 'id': 'MyBucket/path/name_of_parquet.parquet//1646930508287024', 'selfLink': 'https://www.googleapis.com/storage/v1/b/MyBucket%2Fpath/name_of_parquet.parquet%2F', 'mediaLink': 'https://storage.googleapis.com/download/storage/v1/b/MyBucket/o/path%2Fname_of_parquet.parquet%2F?generation=1646930508287024&alt=media', 'name': 'MyBucket/path/name_of_parquet.parquet/', 'bucket': 'MyBucket', 'generation': '1646930508287024', 'metageneration': '1', 'contentType': 'application/octet-stream', 'storageClass': 'STANDARD', 'size': 0, 'md5Hash': '1B2M2Y8AsgTpgAmY7PhCfg==', 'crc32c': 'AAAAAA==', 'etag': 'CLCYqp/+u/YCEAE=', 'timeCreated': '2022-03-10T16:41:48.428Z', 'updated': '2022-03-10T16:41:48.428Z', 'timeStorageClassUpdated': '2022-03-10T16:41:48.428Z', 'type': 'file'}\r\n\r\n\r\nfrom `pa_fs.get_file_info(file_path))` the first time\r\n<FileInfo for 'myBucket/features/MyParquet.parquet/': type=FileType.File, size=0>"
        },
        {
            "created_at": "2022-03-21T18:32:06.463Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15910?focusedCommentId=17510063) by Joris Van den Bossche (jorisvandenbossche):*\nOK, so it's the same bug in gcsfs from the mailing list thread that you are running into: because gcsfs returns something different the first vs subsequent times, pyarrow is confused about whether it is querying a file or directory. I know that gcsfs uses size 0 empty files to mimic directories (since the filesystem itself doesn't have that concept), but I think it can still be expected from gcsfs to return a consistent info for the same file path.\r\n\r\nI would open an issue about this on the gcsfs side (I don't think that happened after the previous mailing list thread).\r\n\r\nIf you first do such an initial \"info\" call, and then do the `read_table` call (which now should directly think the file path is a directory), does it then work correctly?"
        },
        {
            "created_at": "2022-03-21T18:40:51.172Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15910?focusedCommentId=17510064) by Callista Rogers (crogers923):*\nIt doesn't work, I still get the FileNotFound error.\r\n\r\nI'll open a ticket with gcsfs. Thanks!"
        },
        {
            "created_at": "2022-03-21T18:45:34.633Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15910?focusedCommentId=17510065) by Joris Van den Bossche (jorisvandenbossche):*\n> It doesn't work, I still get the FileNotFound error.\r\n\r\nThat's strange, I expected that that would be a workaround. Does it give the exact same error message and traceback? Can you show the output of doing the `get_file_info` twice (so it shows the file path is a directory the second time), and then passing that path to the `read_table` ?"
        },
        {
            "created_at": "2022-03-21T18:53:44.132Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15910?focusedCommentId=17510069) by Callista Rogers (crogers923):*\nRunning it the first time on a fresh kernel I actually get a shorter traceback. The above matches the second time running traceback.\r\n```java\n\r\n---------------------------------------------------------------------------\r\nFileNotFoundError                         Traceback (most recent call last)\r\n/tmp/ipykernel_48702/3635827774.py in <module>\r\n----> 1 table=pq.read_table(file_path,filesystem=fs)\r\n\r\n/opt/conda/lib/python3.7/site-packages/pyarrow/parquet.py in read_table(source, columns, use_threads, metadata, use_pandas_metadata, memory_map, read_dictionary, filesystem, filters, buffer_size, partitioning, use_legacy_dataset, ignore_prefixes, pre_buffer, coerce_int96_timestamp_unit)\r\n   1968                 ignore_prefixes=ignore_prefixes,\r\n   1969                 pre_buffer=pre_buffer,\r\n-> 1970                 coerce_int96_timestamp_unit=coerce_int96_timestamp_unit\r\n   1971             )\r\n   1972         except ImportError:\r\n\r\n/opt/conda/lib/python3.7/site-packages/pyarrow/parquet.py in __init__(self, path_or_paths, filesystem, filters, partitioning, read_dictionary, buffer_size, memory_map, ignore_prefixes, pre_buffer, coerce_int96_timestamp_unit, **kwargs)\r\n   1764 \r\n   1765             self._dataset = ds.FileSystemDataset(\r\n-> 1766                 [fragment], schema=fragment.physical_schema,\r\n   1767                 format=parquet_format,\r\n   1768                 filesystem=fragment.filesystem\r\n\r\n/opt/conda/lib/python3.7/site-packages/pyarrow/_dataset.pyx in pyarrow._dataset.Fragment.physical_schema.__get__()\r\n\r\n/opt/conda/lib/python3.7/site-packages/pyarrow/error.pxi in pyarrow.lib.pyarrow_internal_check_status()\r\n\r\n/opt/conda/lib/python3.7/site-packages/pyarrow/_fs.pyx in pyarrow._fs._cb_open_input_file()\r\n\r\n/opt/conda/lib/python3.7/site-packages/pyarrow/fs.py in open_input_file(self, path)\r\n    392 \r\n    393         if not self.fs.isfile(path):\r\n--> 394             raise FileNotFoundError(path)\r\n    395 \r\n    396         return PythonFile(self.fs.open(path, mode=\"rb\"), mode=\"r\")\r\n \n```"
        }
    ]
}