{
    "issue": {
        "title": "[Doc][C++][Python] Unclear how to influence compilation flags",
        "body": "***Note**: This issue was originally created as [ARROW-17580](https://issues.apache.org/jira/browse/ARROW-17580). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nFrequently people need to customize compilation flags for C++ and/or C files.\r\n\r\nUnfortunately, both for Arrow C++ and PyArrow, it is very difficult to find out the proper way to do this.\r\n\r\nFor Arrow C++, it seems `ARROW_CXXFLAGS` should be passed to CMake, while the `CXXFLAGS` environment variable is ignored (it probably shouldn't?). \r\n\r\nFor PyArrow, I have not found a way to do it. -The `CXXFLAGS` environment variable is ignored, and -the `PYARROW_CXXFLAGS` CMake variable has two problems:\r\n- it is only recognized for Cython-generated files, not for PyArrow C++ sources\n- it only affects linker calls, while it should actually affect compiler calls (edit: does it?)\n  \n**Edit: I was wrong, the `CXXFLAGS` environment variable is not ignored.**",
        "created_at": "2022-08-31T13:13:18.000Z",
        "updated_at": "2022-09-08T09:54:29.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Documentation",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-09-08T09:54:29.000Z"
    },
    "comments": [
        {
            "created_at": "2022-08-31T13:13:37.980Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17580?focusedCommentId=17598372) by Antoine Pitrou (apitrou):*\ncc `[~alenka]` `[~kou]`"
        },
        {
            "created_at": "2022-08-31T13:16:25.261Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17580?focusedCommentId=17598375) by Antoine Pitrou (apitrou):*\nAnother problem seems to be that PyArrow uses two independent CMakeLists files that are not related to each other (meaning two different sets of CMake invocations, with different possible options...)."
        },
        {
            "created_at": "2022-09-01T01:23:18.723Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17580?focusedCommentId=17598685) by Kouhei Sutou (kou):*\n> For Arrow C++, it seems `ARROW_CXXFLAGS` should be passed to CMake, while the `CXXFLAGS` environment variable is ignored (it probably shouldn't?).\r\n\r\nReally? `CXXFLAGS` environment variable should be respected because we don't override `CMAKE_CXX_FLAGS` that is initialized with `CXXFLAGS` environment variable.\r\nSee also:\r\n- https://github.com/apache/arrow/blob/master/cpp/CMakeLists.txt#L555\n- https://cmake.org/cmake/help/latest/envvar/CXXFLAGS.html\n  \n  For PyArrow:\n- We should unify `python/CMakeLists.txt` and `python/pyarrow/src/CMakeLists.txt`.\n- We need to look into why `CXXFLAGS` environment variable is ignored."
        },
        {
            "created_at": "2022-09-01T15:39:02.315Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17580?focusedCommentId=17599042) by Alenka Frim (alenka):*\n> For PyArrow:\n> - We should unify\u00a0`python/CMakeLists.txt`\u00a0and\u00a0`{}python/pyarrow/src/CMakeLists.txt{`}.\n> - We need to look into why\u00a0`CXXFLAGS`\u00a0environment variable is ignored.\r\nI will look into why CXXFLAGS env var is ignored.\r\n\r\nI also agree that we should unify the CMakeLists files for PyArrow. I would fist deal with the issues in the follow-up of the refactoring\u00a0https://issues.apache.org/jira/browse/ARROW-17122 and then try unifying the CMakeLists. Would that work for you `[~apitrou]`, if I make sure that the compilation flags for C++ and/or C files are equal between the builds?"
        },
        {
            "created_at": "2022-09-01T15:57:17.039Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17580?focusedCommentId=17599051) by Antoine Pitrou (apitrou):*\nHmm, it seems I was wrong. Apparently the CXXFLAGS environment variable is not ignored, at least in my local tests. I'm a bit puzzled..."
        },
        {
            "created_at": "2022-09-02T08:19:52.194Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17580?focusedCommentId=17599308) by Alenka Frim (alenka):*\nI did some research and found:\r\n - `CMAKE_CXX_FLAGS` in pyarrow include `CXX_COMMON_FLAGS` but this is not true for pyarrow c++ **->** I need to add\u00a0`set(CMAKE_CXX_FLAGS \"${CXX_COMMON_FLAGS} ${CMAKE_CXX_FLAGS}\")` to pyarrow c++ CMakeLists file\r\n - `PYARROW_CXXFLAGS` is ignored by pyarrow c++ and pyarrow **->** I need to add it to the cmake_options in setup.py, then they are read by the cmake\r\n - `ARROW_CXXFLAGS` are recognised by all three builds\r\n\u00a0\r\n```bash\n\r\narrow c++\r\n-- ARROW_CXXFLAGS: -ggdb\r\n-- PYARROW_CXXFLAGS: \r\n-- CXXFLAGS: \r\n-- CXX_COMMON_FLAGS:  -Wall -Wextra -Wdocumentation -Wshorten-64-to-32 -Wno-missing-braces -Wno-unused-parameter -Wno-constant-logical-operand -Wno-return-stack-address -Werror -Wno-unknown-warning-option -Wno-pass-failed -stdlib=libc++ -march=armv8-a\r\n--CMAKE_CXX_FLAGS:   -Qunused-arguments -fcolor-diagnostics -ggdb -O0  -Wall -Wextra -Wdocumentation -Wshorten-64-to-32 -Wno-missing-braces -Wno-unused-parameter -Wno-constant-logical-operand -Wno-return-stack-address -Werror -Wno-unknown-warning-option -Wno-pass-failed -stdlib=libc++ -march=armv8-a -ggdb\r\n\r\npyarrow c++\r\n-- ARROW_CXXFLAGS: -ggdb\r\n-- PYARROW_CXXFLAGS: \r\n-- CXXFLAGS: \r\n-- CXX_COMMON_FLAGS:  -Wall -Wextra -Wdocumentation -Wshorten-64-to-32 -Wno-missing-braces -Wno-unused-parameter -Wno-constant-logical-operand -Wno-return-stack-address -Werror -Wno-unknown-warning-option -Wno-pass-failed -stdlib=libc++ -march=armv8-a\r\n--CMAKE_CXX_FLAGS:  -Qunused-arguments -fcolor-diagnostics -ggdb -O0\r\n\r\npyarrow\r\n-- ARROW_CXXFLAGS: -ggdb\r\n-- PYARROW_CXXFLAGS: \r\n-- CXXFLAGS: \r\n-- CXX_COMMON_FLAGS:  -Wall -Wno-unknown-warning-option -Wno-pass-failed -stdlib=libc++ -march=armv8-a\r\n-- CMAKE_CXX_FLAGS:   -Wall -Wno-unknown-warning-option -Wno-pass-failed -stdlib=libc++ -march=armv8-a  -Qunused-arguments -fcolor-diagnostics -g -O0  -fno-omit-frame-pointer -Wno-unused-variable -Wno-maybe-uninitialized -Wno-parentheses-equality -Wno-constant-logical-operand -Wno-missing-declarations -Wno-sometimes-uninitialized -Wno-return-type-c-linkage\r\n```\r\n\u00a0\r\n\r\n - I think `CXXFLAGS` doesn't get included in the `CMAKE_CXX_FLAGS` list. Maybe even setting `CMAKE_CXX_FLAGS` in <https://github.com/apache/arrow/blob/413e49385f52b8c76aa02f67588f4dc66d5ed86b/cpp/CMakeLists.txt#L555> makes the variable to be ignnored?\r\n\r\n```bash\n\r\n(pyarrow-dev-9) (base) alenkafrim@Alenkas-MacBook-Pro arrow % printenv CXXFLAGS\r\n-Woverloaded-virtual ../dist/configure\r\n(pyarrow-dev-9) (base) alenkafrim@Alenkas-MacBook-Pro arrow % arrow cmake-debug\r\n...\r\n-- ARROW_CXXFLAGS: -ggdb\r\n-- PYARROW_CXXFLAGS: \r\n-- CXXFLAGS: \r\n-- CXX_COMMON_FLAGS:  -Wall -Wextra -Wdocumentation -Wshorten-64-to-32 -Wno-missing-braces -Wno-unused-parameter -Wno-constant-logical-operand -Wno-return-stack-address -Werror -Wno-unknown-warning-option -Wno-pass-failed -stdlib=libc++ -march=armv8-a\r\n-- CMAKE_CXX_FLAGS:   -Qunused-arguments -fcolor-diagnostics -ggdb -O0  -Wall -Wextra -Wdocumentation -Wshorten-64-to-32 -Wno-missing-braces -Wno-unused-parameter -Wno-constant-logical-operand -Wno-return-stack-address -Werror -Wno-unknown-warning-option -Wno-pass-failed -stdlib=libc++ -march=armv8-a -ggdb\r\n-- ******************************************\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /Users/alenkafrim/repos/arrow/cpp/build\r\n~/repos/arrow\r\n\r\n```"
        },
        {
            "created_at": "2022-09-08T08:33:46.433Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17580?focusedCommentId=17601712) by Alenka Frim (alenka):*\n_Update about the `{}CXXFLAGS{`}:_\r\n\r\nCMake does in fact read them. I have tried again with a clean built. I have set `CXXFLAGS` env var to a random value and the built failed. See:\r\n```java\n\r\n(pyarrow-dev-9) (base) alenkafrim@Alenkas-MacBook-Pro arrow % printenv CXXFLAGS\r\n-Woverloaded-virtual ../dist/configure\n```\r\n```java\n\r\n(pyarrow-dev-9) (base) alenkafrim@Alenkas-MacBook-Pro arrow % arrow cmake-debug\r\nARROW_BUILD_TYPE=debug\r\n~/repos/arrow/cpp/build ~/repos/arrow\r\n-- Building using CMake version: 3.24.1\r\n-- The C compiler identification is AppleClang 13.1.6.13160021\r\n-- The CXX compiler identification is AppleClang 13.1.6.13160021\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Check for working C compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc - skipped\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - failed\r\n-- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++\r\n-- Check for working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - broken\r\nCMake Error at /opt/homebrew/Cellar/cmake/3.24.1/share/cmake/Modules/CMakeTestCXXCompiler.cmake:62 (message):\r\n\u00a0 The C++ compiler\r\n\u00a0 \u00a0 \"/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++\"\r\n\u00a0 is not able to compile a simple test program.\r\n\u00a0 It fails with the following output:\r\n\u00a0 \u00a0 Change Dir: /Users/alenkafrim/repos/arrow/cpp/build/CMakeFiles/CMakeTmp\r\n\u00a0 \u00a0\u00a0\r\n\u00a0 \u00a0 Run Build Command(s):/opt/homebrew/bin/ninja cmTC_3527f && [1/2] Building CXX object CMakeFiles/cmTC_3527f.dir/testCXXCompiler.cxx.o\r\n\u00a0 \u00a0 FAILED: CMakeFiles/cmTC_3527f.dir/testCXXCompiler.cxx.o\u00a0\r\n\u00a0 \u00a0 /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ \u00a0 -Woverloaded-virtual ../dist/configure \u00a0-arch arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX12.3.sdk -MD -MT CMakeFiles/cmTC_3527f.dir/testCXXCompiler.cxx.o -MF CMakeFiles/cmTC_3527f.dir/testCXXCompiler.cxx.o.d -o CMakeFiles/cmTC_3527f.dir/testCXXCompiler.cxx.o -c /Users/alenkafrim/repos/arrow/cpp/build/CMakeFiles/CMakeTmp/testCXXCompiler.cxx\r\n\u00a0 \u00a0 clang: error: no such file or directory: '../dist/configure'\r\n\u00a0 \u00a0 ninja: build stopped: subcommand failed.\r\n```\r\nIf I change the value of `CXXFLAGS to -O0 it gets added to the CMAKE_CXX_FLAGS at the beginning of the list:`\r\n```java\n\r\n...\r\n-- ******************************************\r\n-- ARROW_CXXFLAGS: -ggdb\r\n-- PYARROW_CXXFLAGS:\u00a0\r\n-- CXXFLAGS:\u00a0\r\n-- CXX_COMMON_FLAGS: \u00a0-Wall -Wextra -Wdocumentation -Wshorten-64-to-32 -Wno-missing-braces -Wno-unused-parameter -Wno-constant-logical-operand -Wno-return-stack-address -Werror -Wno-unknown-warning-option -Wno-pass-failed -stdlib=libc++ -march=armv8-a\r\n-- CMAKE_CXX_FLAGS: \u00a0-O0 -Qunused-arguments -fcolor-diagnostics -ggdb -O0 \u00a0-Wall -Wextra -Wdocumentation -Wshorten-64-to-32 -Wno-missing-braces -Wno-unused-parameter -Wno-constant-logical-operand -Wno-return-stack-address -Werror -Wno-unknown-warning-option -Wno-pass-failed -stdlib=libc++ -march=armv8-a -ggdb\r\n-- ******************************************\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /Users/alenkafrim/repos/arrow/cpp/build\r\n~/repos/arrow\r\n(pyarrow-dev-9) (base) alenkafrim@Alenkas-MacBook-Pro arrow % printenv CXXFLAGS\r\n-O0\n```\r\n\u00a0"
        },
        {
            "created_at": "2022-09-08T08:35:17.564Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17580?focusedCommentId=17601714) by Antoine Pitrou (apitrou):*\nYes, it appears I had misinterpreted what I saw..."
        },
        {
            "created_at": "2022-09-08T08:57:29.057Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17580?focusedCommentId=17601724) by Alenka Frim (alenka):*\nHappy it works. I suggest we close this issue and I will do a PR with some corrections for the compilation flags for PyArrow in https://issues.apache.org/jira/browse/ARROW-17579."
        }
    ]
}