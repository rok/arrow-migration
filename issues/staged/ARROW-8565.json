{
    "issue": {
        "title": "[C++] Static build with AWS SDK",
        "body": "***Note**: This issue was originally created as [ARROW-8565](https://issues.apache.org/jira/browse/ARROW-8565). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI can't find my way around the build system when using the S3 client.\r\n\r\nIt seems that only shared target is allowed when the S3 feature is ON. In the thirdparty toolchain, when printing:\r\n\r\n<q>FATAL_ERROR \"FIXME: Building AWS C++ SDK from source will link with wrong libcrypto\"</q>\r\n\r\nWhat is actually meant is that static build will not work, correct ? If it is the case, should libarrow.a be generated at all when S3 feature is on ? \r\n\r\nWhat can be done to fix this ? What does it mean that the SDK links to the wrong libcrypto ? Is it fixable ? Or is their a way to have the static build but maintain a dynamic link to a shared version of the SDK ?\r\n\r\n\u00a0\r\n\r\n\u00a0",
        "created_at": "2020-04-23T10:01:56.000Z",
        "updated_at": "2020-05-10T16:23:27.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-05-10T16:23:27.000Z"
    },
    "comments": [
        {
            "created_at": "2020-04-23T10:07:59.853Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8565?focusedCommentId=17090463) by Antoine Pitrou (apitrou):*\nAs far as I remember, this means that the AWS SDK build procedure will by default compile its own version of OpenSSL.\r\nI would say it's probably fixable, but you will have to find out how and submit a PR for it :-)"
        },
        {
            "created_at": "2020-04-23T10:41:01.158Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8565?focusedCommentId=17090493) by R\u00e9mi Dettai (rdettai):*\nThanks ! With my mediocrity in understanding cmake, I'm definitively not the man for the job... ;) As a workaround, is it possible to build statically from arrow and only maintain a shared dependency on the SDK ?"
        },
        {
            "created_at": "2020-04-23T10:50:09.941Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8565?focusedCommentId=17090499) by Antoine Pitrou (apitrou):*\nThe solution is to build and install the AWS SDK separately, or to use pre-built binaries. Hopefully CMake will be able to pick them up, if they are installed in the right place.\r\n"
        },
        {
            "created_at": "2020-04-23T13:13:49.899Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8565?focusedCommentId=17090605) by R\u00e9mi Dettai (rdettai):*\nThat's what I am trying to do. I have a static build of the sdk that is correctly picked up (_${AWSSDK_LINK_LIBRARIES}_ seems defined) but when i try to link to it in an example with\r\n\r\n`target_link_libraries(example PRIVATE parquet_static ${AWSSDK_LINK_LIBRARIES})`\r\n\r\nI keep getting awefull _undefined reference to `Aws::XXX`_ errors :("
        },
        {
            "created_at": "2020-04-23T14:02:02.507Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8565?focusedCommentId=17090637) by Francois Saint-Jacques (fsaintjacques):*\nHave you tried with a shared build of aws sdk?"
        },
        {
            "created_at": "2020-04-23T14:47:23.152Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8565?focusedCommentId=17090664) by R\u00e9mi Dettai (rdettai):*\nYes, but I could not manage to make it work with the static build of arrow and I don't want to use the shared lib of arrow as it generates a set of binaries that is too large for my usecase (embeding into aws lambda with optimized coldstart)"
        },
        {
            "created_at": "2020-04-27T08:30:38.038Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8565?focusedCommentId=17093185) by R\u00e9mi Dettai (rdettai):*\nI finally managed to make a static build but it requires changing the root CMakeLists to append AWSSDK_LINK_LIBRARIES to ARROW_STATIC_LINK_LIBS. I'm not sure this is safe to do because I really don't understand how the Arrow and AWS SDK dependencies are competing.\r\n\r\nIn the end the static build is barely more compact than the shared one, because the C++ AWS SDK build is a whole adventure. I'm continuing my investigation to see if I can come up with something nicer, but I really lack some cmake expertise :)"
        },
        {
            "created_at": "2020-04-27T12:15:25.000Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8565?focusedCommentId=17093421) by Francois Saint-Jacques (fsaintjacques):*\nI'm not sure if you're aware, but the AWS SDK supports selectively building components in the bundled library. The following should make a smaller build that supports S3.\r\n```java\n\r\ncmake -GNinja -DCMAKE_BUILD_TYPE=Release -DBUILD_ONLY=\"s3;core;config;transfer\"\r\n```"
        },
        {
            "created_at": "2020-05-10T16:22:14.050Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8565?focusedCommentId=17103868) by R\u00e9mi Dettai (rdettai):*\nYes I know, BUILD_ONLY the SDK would take forever to build !\r\n\r\nNow I understand the build system a bit better, I believe this issue is a subset of ARROW-7605 that aims at fixing static build in general. I'm closing this issue in favor of the more generic one !"
        }
    ]
}