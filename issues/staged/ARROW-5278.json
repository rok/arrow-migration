{
    "issue": {
        "title": "[C#] ArrowBuffer should either implement IEquatable correctly or not at all",
        "body": "***Note**: This issue was originally created as [ARROW-5278](https://issues.apache.org/jira/browse/ARROW-5278). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSee the discussion\u00a0[here](https://github.com/apache/arrow/pull/3925/#discussion_r281378027).\r\n\r\nArrowBuffer currently implement IEquatable, but doesn't override `GetHashCode`.\r\n\r\nWe should either implement IEquatable correctly by overriding Equals and GetHashCode, or remove IEquatable all together.\r\n\r\nLooking at ArrowBuffer's [Equals implementation](https://github.com/apache/arrow/blob/08829248fd540b7e3bd96b980e357f8a4db7970e/csharp/src/Apache.Arrow/ArrowBuffer.cs#L66-L69), it compares each value in the buffer, which is not very efficient. Also, this implementation is not consistent with how `Memory<T>` implements IEquatable -\u00a0<https://source.dot.net/#System.Private.CoreLib/shared/System/Memory.cs,500>.\r\n\r\nIf we continue implementing IEquatable on ArrowBuffer, we should consider implementing it in the same fashion as Memory<T> does.",
        "created_at": "2019-05-07T16:10:06.000Z",
        "updated_at": "2019-06-03T12:14:24.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C#",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": []
}