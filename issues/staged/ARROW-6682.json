{
    "issue": {
        "title": "[C#] Arrow R/C++ hangs reading binary file generated by C#",
        "body": "***Note**: This issue was originally created as [ARROW-6682](https://issues.apache.org/jira/browse/ARROW-6682). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI get random hangs on arrow_read in R (windows) when using a very large file (10-12gb). (the file has 37 columns)\r\n\r\nI have memory dumps - All threads seem to be in wait handles.\r\n\r\nAre there debug symbols somewhere?\u00a0\r\n\r\nIs there a way to get the C++ code to produce diagnostic logging from R?\u00a0\r\n\r\n\u00a0\r\n\r\n**UPDATE:** it seems that the hangs are not related to file size, row counts, or # of record batches, but rather the number of **columns**",
        "created_at": "2019-09-25T03:42:12.000Z",
        "updated_at": "2019-10-01T16:37:44.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C#",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-09-29T18:37:41.000Z"
    },
    "comments": [
        {
            "created_at": "2019-09-25T15:08:18.602Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16937820) by Anthony Abate (abbot):*\nI have a 150 meg file that i generated (with the C# library) random data and it has 50 columns and it hangs on (almost) every load!"
        },
        {
            "created_at": "2019-09-25T15:09:27.254Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16937822) by Anthony Abate (abbot):*\nSee the attached file"
        },
        {
            "created_at": "2019-09-25T15:14:42.080Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16937827) by Neal Richardson (npr):*\nHi, would you mind sharing the code you're running that's hanging, as well as additional system information?\r\n\r\nAll source code is available at https://github.com/apache/arrow. "
        },
        {
            "created_at": "2019-09-25T15:20:48.354Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16937831) by Anthony Abate (abbot):*\nstart_time <- Sys.time()\r\n start_memory <- memory.size()\r\n\r\nlibrary(arrow)\r\n\r\ndfcs <- read_arrow(\"e:\r\nGenerated_4000Batch_50Columns_100Rows_PerBatch.arrow\")\r\n\r\nend_memory <- memory.size()\r\n end_time <- Sys.time()\r\n\r\nprint(end_memory)\r\n end_time - start_time\r\n end_memory - start_memory"
        },
        {
            "created_at": "2019-09-25T15:22:48.349Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16937833) by Anthony Abate (abbot):*\ncode above (its trivial)\r\n\r\nsystem 8 cores\u00a0 (virtual)\r\n64 gigs ram\r\nwindows 10"
        },
        {
            "created_at": "2019-09-25T15:23:53.440Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16937834) by Wes McKinney (wesm):*\nNote that the C# library isn't being integration tested with the other implementations. So it's possible there's a flaw in the C# implementation. The issues you are describing aren't present on data generated by the C++ library"
        },
        {
            "created_at": "2019-09-25T15:24:16.021Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16937835) by Wes McKinney (wesm):*\ncc `[~eerhardt]`"
        },
        {
            "created_at": "2019-09-25T15:28:17.111Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16937839) by Anthony Abate (abbot):*\nIt loads 'sometimes' - so sounds like threading issues?"
        },
        {
            "created_at": "2019-09-25T15:32:44.331Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16937844) by Wes McKinney (wesm):*\nIt would be best to try to reproduce the issue with data generated from R rather than C#. If the issue can't be reproduced endogenously (i.e. using binary files generated by R via the C++ library) then we know the issue lies with the C# library. \r\n\r\nWhat is the schema of the file?"
        },
        {
            "created_at": "2019-09-25T15:33:34.407Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16937846) by Eric Erhardt (eerhardt):*\n`[~abbot]` \u00a0- can you also share the C# code you used to create the .arrow file? I assume the issue is in the C# arrow writer, so having C# code to reproduce the problem would be best."
        },
        {
            "created_at": "2019-09-25T15:36:56.416Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16937852) by Neal Richardson (npr):*\nWorks on my (virtual) machine:\r\n\r\n```r\n\r\n> system.time(tab <- read_arrow(\"Generated_4000Batch_50Columns_100Rows_PerBatch.arrow\"))\r\n   user  system elapsed \r\n   1.10    3.96    8.69 \r\n> dim(tab)\r\n[1] 400000     50\r\n> sessionInfo()\r\nR version 3.6.0 (2019-04-26)\r\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\r\nRunning under: Windows 10 x64 (build 18362)\r\n\r\nMatrix products: default\r\n\r\nlocale:\r\n[1] LC_COLLATE=English_United States.1252  LC_CTYPE=English_United States.1252   \r\n[3] LC_MONETARY=English_United States.1252 LC_NUMERIC=C                          \r\n[5] LC_TIME=English_United States.1252    \r\n\r\nattached base packages:\r\n[1] stats     graphics  grDevices utils     datasets  methods   base     \r\n\r\nother attached packages:\r\n[1] arrow_0.14.1.9000\r\n\r\nloaded via a namespace (and not attached):\r\n [1] tidyselect_0.2.5 bit_1.1-14       compiler_3.6.0   magrittr_1.5     assertthat_0.2.1 R6_2.4.0        \r\n [7] tools_3.6.0      glue_1.3.1       Rcpp_1.0.1       bit64_0.9-7      rlang_0.3.4      purrr_0.3.2     \r\n> \r\n```\r\n\r\nWould you mind installing a nightly build of the R package and see if whatever you're seeing has been resolved in the master branch?\r\n\r\n```r\n\r\ninstall.packages(\"arrow\", repos=\"https://dl.bintray.com/ursalabs/arrow-r\")\r\n```"
        },
        {
            "created_at": "2019-09-25T15:36:57.089Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16937853) by Anthony Abate (abbot):*\n`[~wesm]` \u00a0 - Also, I can generate many other files from the C# libraries that no problems being loaded"
        },
        {
            "created_at": "2019-09-25T15:38:13.206Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16937855) by Anthony Abate (abbot):*\n`[~npr]` - how many times did you try to load it? - i get it to fail 4 out of every 5 times"
        },
        {
            "created_at": "2019-09-25T15:39:23.572Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16937856) by Neal Richardson (npr):*\nI'm 5 for 5 so far."
        },
        {
            "created_at": "2019-09-25T15:42:12.404Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16937859) by Anthony Abate (abbot):*\nif the file is 'bad' shouldn't that easily be determined by examining the attached file?\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0"
        },
        {
            "created_at": "2019-09-25T15:43:49.698Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16937860) by Anthony Abate (abbot):*\n`[~npr]`- ok sounds like you have no problems with the file - let me try that latest package and I'll let you know"
        },
        {
            "created_at": "2019-09-25T15:59:55.239Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16937873) by Anthony Abate (abbot):*\n`[~npr]` \u00a0 - seems like the same problem:\r\n\r\n other than \r\ninstall.packages(\"arrow\", repos=\"https://dl.bintray.com/ursalabs/arrow-r\")\r\ndo i need to do anything else to use the dev package?\r\n\r\nis there a version number I can print out via runtime to make sure im using the new code?"
        },
        {
            "created_at": "2019-09-25T16:24:06.068Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16937891) by Wes McKinney (wesm):*\nHow do I decompress the attached file (I'm on Linux)? "
        },
        {
            "created_at": "2019-09-25T17:14:54.431Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16937921) by Anthony Abate (abbot):*\n`[~wesm]` - I made a zip version of the file"
        },
        {
            "created_at": "2019-09-25T17:41:39.457Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16937939) by Neal Richardson (npr):*\n`sessionInfo()` will show the relevant versions. The nightly package build includes the date in the version string."
        },
        {
            "created_at": "2019-09-25T18:38:05.301Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16937984) by Wes McKinney (wesm):*\nThe file core dumps for me in Python in a debug build\r\n\r\n```Java\n\r\nIn [3]: pa.ipc.open_file('Generated_4000Batch_50Columns_100Rows_PerBatch.arrow').read_all()    \r\n../src/arrow/ipc/reader.cc:683:  Check failed: BitUtil::IsMultipleOf8(block.metadata_length) \r\n/home/wesm/local/lib/libarrow.so.15(_ZN5arrow4util7CerrLog14PrintBackTraceEv+0x35)[0x7f4a9cd494dd]\r\n/home/wesm/local/lib/libarrow.so.15(_ZN5arrow4util7CerrLogD1Ev+0x5b)[0x7f4a9cd4945f]\r\n/home/wesm/local/lib/libarrow.so.15(_ZN5arrow4util7CerrLogD0Ev+0x18)[0x7f4a9cd49480]\r\n/home/wesm/local/lib/libarrow.so.15(_ZN5arrow4util8ArrowLogD1Ev+0x57)[0x7f4a9cd492c1]\r\n/home/wesm/local/lib/libarrow.so.15(+0x18e9a60)[0x7f4a9d34fa60]\r\n/home/wesm/local/lib/libarrow.so.15(+0x18ea26b)[0x7f4a9d35026b]\r\n/home/wesm/local/lib/libarrow.so.15(_ZN5arrow3ipc21RecordBatchFileReader15ReadRecordBatchEiPSt10shared_ptrINS_11RecordBatchEE+0x48)[0x7f4a9d349f76]\r\n/home/wesm/code/arrow/python/pyarrow/lib.cpython-37m-x86_64-linux-gnu.so(+0x2a4115)[0x7f4a9e088115]\r\n/home/wesm/code/arrow/python/pyarrow/lib.cpython-37m-x86_64-linux-gnu.so(+0x2a21e4)[0x7f4a9e0861e4]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyMethodDef_RawFastCallKeywords+0x141)[0x56025cd81651]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyMethodDescr_FastCallKeywords+0x4f)[0x56025cd89cdf]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyEval_EvalFrameDefault+0x4cbc)[0x56025cdeedac]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyEval_EvalCodeWithName+0x2f9)[0x56025cd2f929]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(PyEval_EvalCodeEx+0x44)[0x56025cd307e4]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(PyEval_EvalCode+0x1c)[0x56025cd3080c]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(+0x1e0c70)[0x56025cdf9c70]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyMethodDef_RawFastCallKeywords+0xe9)[0x56025cd815f9]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyCFunction_FastCallKeywords+0x21)[0x56025cd81891]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyEval_EvalFrameDefault+0x47d4)[0x56025cdee8c4]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyGen_Send+0x2a2)[0x56025cd8aea2]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyEval_EvalFrameDefault+0x1acc)[0x56025cdebbbc]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyGen_Send+0x2a2)[0x56025cd8aea2]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyEval_EvalFrameDefault+0x1acc)[0x56025cdebbbc]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyGen_Send+0x2a2)[0x56025cd8aea2]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyMethodDef_RawFastCallKeywords+0x8c)[0x56025cd8159c]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyMethodDescr_FastCallKeywords+0x4f)[0x56025cd89cdf]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyEval_EvalFrameDefault+0x4cbc)[0x56025cdeedac]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyFunction_FastCallKeywords+0xfb)[0x56025cd80cfb]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyEval_EvalFrameDefault+0x416)[0x56025cdea506]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyFunction_FastCallKeywords+0xfb)[0x56025cd80cfb]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyEval_EvalFrameDefault+0x6f0)[0x56025cdea7e0]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyEval_EvalCodeWithName+0x2f9)[0x56025cd2f929]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyFunction_FastCallKeywords+0x387)[0x56025cd80f87]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyEval_EvalFrameDefault+0x14dc)[0x56025cdeb5cc]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyEval_EvalCodeWithName+0x2f9)[0x56025cd2f929]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyFunction_FastCallKeywords+0x325)[0x56025cd80f25]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyEval_EvalFrameDefault+0x6f0)[0x56025cdea7e0]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyEval_EvalCodeWithName+0x2f9)[0x56025cd2f929]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyFunction_FastCallKeywords+0x325)[0x56025cd80f25]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyEval_EvalFrameDefault+0x6f0)[0x56025cdea7e0]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyFunction_FastCallKeywords+0xfb)[0x56025cd80cfb]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyEval_EvalFrameDefault+0x6f0)[0x56025cdea7e0]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyEval_EvalCodeWithName+0x2f9)[0x56025cd2f929]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyFunction_FastCallDict+0x400)[0x56025cd30c20]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyObject_Call_Prepend+0x63)[0x56025cd4fe23]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(PyObject_Call+0x6e)[0x56025cd4251e]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyEval_EvalFrameDefault+0x1f4c)[0x56025cdec03c]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyEval_EvalCodeWithName+0x2f9)[0x56025cd2f929]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyFunction_FastCallKeywords+0x387)[0x56025cd80f87]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyEval_EvalFrameDefault+0x416)[0x56025cdea506]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_PyEval_EvalCodeWithName+0x2f9)[0x56025cd2f929]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(PyEval_EvalCodeEx+0x44)[0x56025cd307e4]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(PyEval_EvalCode+0x1c)[0x56025cd3080c]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(+0x22fac4)[0x56025ce48ac4]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(PyRun_FileExFlags+0xa1)[0x56025ce52db1]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(PyRun_SimpleFileExFlags+0x1c3)[0x56025ce52fa3]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(+0x23b0bf)[0x56025ce540bf]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(_Py_UnixMain+0x3c)[0x56025ce541dc]\r\n/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xe7)[0x7f4acfb0bb97]\r\n/home/wesm/miniconda/envs/arrow-3.7/bin/python(+0x1e0d3d)[0x56025cdf9d3d]\r\nAborted\r\n```\r\n\r\nThese issues would be caught in integration tests. All of this points to a problem in the C# library"
        },
        {
            "created_at": "2019-09-25T18:44:14.519Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16937991) by Eric Erhardt (eerhardt):*\n`[~wesm]`- can you tell which block isn't a multiple of 8? I did fix this in\u00a0https://issues.apache.org/jira/browse/ARROW-5908, which made it into 0.14.1. But obviously could have missed a spot.\r\n\r\n`[~abbot]` \u00a0- which version of the C# library were you using to produce the file? was it `0.14.1` or earlier?"
        },
        {
            "created_at": "2019-09-25T18:49:05.961Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16937994) by Anthony Abate (abbot):*\n`[~eerhardt]`- i used the current nuget version + some code i wrote to build null support\r\n\r\n\u00a0\r\n\r\n`[~wesm]` `[~npr]` \u00a0 - this looks/behaves like a threading issue - I don't get any hanging if i reduce the VM to 1 core (not ideal) \r\n\r\n(I can't explain the core dumps though)"
        },
        {
            "created_at": "2019-09-25T19:08:32.496Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16938002) by Anthony Abate (abbot):*\nIf the file is bad - Id expect the R library to fail the same as python if they both use the same underlying C++ code.\u00a0 However, I don't know the R / Python bindings / code.\r\n\r\nI would point out that I was able to validate a 30 million row x 37 column data set produced by C# in R including the null support I added.\u00a0\u00a0\r\n\r\nThe only indication of any issue was a very rare hang on first use of the library in R Studio - if it didn't hang the first time, i was able to do many file loads of 10gb without issue\r\n\r\nI was attempting to narrow down that rare hang when it seemed to be a column width issue"
        },
        {
            "created_at": "2019-09-25T19:11:23.348Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16938004) by Wes McKinney (wesm):*\nThe file is invalid. The check that fails above only occurs in debug builds, so release builds are probably failing in some other way due to a bad memory access that results in non-deterministic failure. I'll look at a release build now since we ideally should not crash on invalid files. Probably the invalid file is causing your VM to swap due to memory overallocation, and the swapping is more likely to occur with multiple threads\r\n\r\nOnce we have a valid file to look at we can begin to diagnose other issues that come up. "
        },
        {
            "created_at": "2019-09-25T19:42:34.915Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16938008) by Wes McKinney (wesm):*\nI don't see valgrind warnings on Linux when accessing the file from Python on the master branch in a release build.\r\n\r\nI tried reading the file 100 times in release builds in Python on both 0.14.1 and master on Linux and had no issues. With R I tested the master branch and also read the file more than 10 times. So definitely inconclusive...\r\n\r\nI'll look out to learn more if you're able to reproduce the issue and track down what might be going wrong"
        },
        {
            "created_at": "2019-09-25T20:16:41.216Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16938034) by Anthony Abate (abbot):*\nI can repro the problem fairly consistently - I can get more info if needed:\r\n\r\n\r\n<font color=\"#0000FF\">> </font><font color=\"#0000FF\">sessionInfo()</font>R version 3.6.1 (2019-07-05)\r\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\r\nRunning under: Windows 10 x64 (build 17763)\r\n\r\nMatrix products: default\r\n\r\nlocale:\r\n[1] LC_COLLATE=English_United States.1252  LC_CTYPE=English_United States.1252    LC_MONETARY=English_United States.1252\r\n[4] LC_NUMERIC=C                           LC_TIME=English_United States.1252    \r\n\r\nattached base packages:\r\n[1] stats     graphics  grDevices utils     datasets  methods   base     \r\n\r\nother attached packages:\r\n[1] arrow_0.14.1.20190925\r\n\r\nloaded via a namespace (and not attached):\r\n [1] tidyselect_0.2.5 bit_1.1-14       compiler_3.6.1   magrittr_1.5     assertthat_0.2.1 R6_2.4.0         tools_3.6.1     \r\n [8] glue_1.3.1       Rcpp_1.0.2       bit64_0.9-7      rlang_0.4.0      purrr_0.3.2"
        },
        {
            "created_at": "2019-09-25T20:19:54.054Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16938038) by Anthony Abate (abbot):*\n`[~npr]` how many cores was your test vm using?"
        },
        {
            "created_at": "2019-09-25T20:20:48.322Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16938040) by Neal Richardson (npr):*\nJust one"
        },
        {
            "created_at": "2019-09-25T20:24:14.497Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16938043) by Anthony Abate (abbot):*\nthe other thing I should point out:\u00a0 I am using a new rscript.exe process each time:\u00a0 That way I know for certain the dll is unloaded and reinitialized without any static init related code.\r\n\r\nthis is the script runner code I am using:\r\n\r\n\u00a0\r\n\r\n`(powershell script)`\r\n\r\n`$rpath = \"C:\\Program Files\r\\R-3.6.1\\bin\\Rscript.exe\"`\r\n `$rscript = \"arrow.benchmark.r\"`\r\n\r\n{\\{For ($i=0; $i -le 10000; $i++) }}\r\n`\u00a0 Write-Output \"run: $i\"`\r\n `\u00a0 $stopwatch = [system.diagnostics.stopwatch]::StartNew()`\r\n\r\n`\u00a0 & $rpath --no-save --no-restore --verbose $rscript > c:\temp\\outputFile.Rout 2>&1`\r\n\r\n`\u00a0 $stopwatch.Elapsed.TotalSeconds`\r\n }"
        },
        {
            "created_at": "2019-09-25T20:27:37.003Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16938047) by Anthony Abate (abbot):*\n`[~npr]` - I can't reproduce the issue on a single core, but I can on two cores - can you try a vm with two cores?"
        },
        {
            "created_at": "2019-09-25T20:30:54.917Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16938048) by Anthony Abate (abbot):*\nI also uploaded the exact script files / script loop runner\r\n\r\n\u00a0"
        },
        {
            "created_at": "2019-09-25T22:43:00.035Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16938113) by Eric Erhardt (eerhardt):*\nI see the issue, we are writing the File Footer's Block\u00a0metaDataLength and appending the length of the 4 or 8 byte size to `metaDataLength`.\r\n\r\n\u00a0\r\n\r\n[https://github.com/apache/arrow/blob/15fca3d0169479fc4d21619b22515d95cd264fc5/csharp/src/Apache.Arrow/Ipc/ArrowStreamWriter.cs#L361-L364](https://github.com/apache/arrow/blob/6dec1944235c99ae413812189631a763d0029439/csharp/src/Apache.Arrow/Ipc/ArrowStreamWriter.cs#L381-L384)\r\n\r\n\u00a0\r\n\r\n checked\r\n {\r\n return _\\*_options.SizeOfIpcLength\\*_ + messageData.Length + messagePaddingLength;\r\n }\r\n\r\n\u00a0\r\n\r\n`SizeOfIpcLength` can either be 4 or 8. In 0.14.1 it was always 4, which means the\u00a0metaDataLength won't be a multiple of 8, because`messageData.Length + messagePaddingLength` is a\u00a0 multiple of 8 and we are adding 4 to it.\r\n\r\n\u00a0\r\n\r\n The doc\u00a0<https://arrow.apache.org/docs/format/IPC.html#recordbatch-body-structure>\u00a0clearly states this should be a multiple of 8, and it includes the length prefix.\r\n\r\n\u00a0\r\n\r\nI am working on a fix."
        },
        {
            "created_at": "2019-09-26T00:36:12.762Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16938149) by Anthony Abate (abbot):*\nIt sounds like there might be more than 1 issue here:\r\n \\* that malformed file\r\n \\* the hanging on R \r\n\r\nIt would be troubling if a malformed file can take down / crash the library... (ie a DOS Exploit)\u00a0\r\n\r\nWhen trying to use an out of date C# Feather library in R I did get some indication that the file was invalid:\u00a0 (<https://github.com/kevin-montrose/FeatherDotNet/issues/7)>\r\n\r\nIs there a way to validate the integrity of the arrow file on open?\u00a0 (ie check offsets, padding, etc)\u00a0 - might be slower, but when opening a file from an unknown source, could be safer.\r\n\r\nRegarding the hanging - There does seem to be some threadpool options for the C++ code, but I don't know how to access them in R"
        },
        {
            "created_at": "2019-09-26T02:08:38.989Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16938182) by Neal Richardson (npr):*\nYou can try `options(arrow.use_threads=FALSE)`\r\n\r\ncf.\u00a0<https://github.com/apache/arrow/blob/a89c803ad86ad7e22890fe3b8314bb41eec7d5af/r/R/arrow-package.R#L42-L44>"
        },
        {
            "created_at": "2019-09-26T15:00:36.482Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16938699) by Anthony Abate (abbot):*\n`[~npr]` - setting that option may be a workaround for now\r\nI am not sure what the threads do since there seems to be no performance difference - at least in the read_arrow function"
        },
        {
            "created_at": "2019-09-26T16:26:54.168Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16938778) by Wes McKinney (wesm):*\nThe threads parallelize conversion from an Arrow table to an R data.frame / tibble. "
        },
        {
            "created_at": "2019-09-29T18:37:41.457Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16940513) by Wes McKinney (wesm):*\nIssue resolved by pull request 5520\n<https://github.com/apache/arrow/pull/5520>"
        },
        {
            "created_at": "2019-10-01T14:27:50.993Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16941893) by Anthony Abate (abbot):*\n`[~wesm]` - I understand that the file generation is fixed on the C# side, but isnt a malformed file taking down the library another problem?\r\n\r\n`[~eerhardt]` - Is there a pre-release nuget that I can test out?\u00a0"
        },
        {
            "created_at": "2019-10-01T16:27:14.577Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16942120) by Eric Erhardt (eerhardt):*\n>\u00a0Is there a pre-release nuget that I can test out?\u00a0\r\n\r\nNo, you would have to build one yourself. It looks like this change will be included in `0.15` according to the RC2 vote that was opened this morning."
        },
        {
            "created_at": "2019-10-01T16:37:44.280Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6682?focusedCommentId=16942126) by Wes McKinney (wesm):*\n`[~abbot]` it is a problem, but we haven't really figured out what the problem is. I haven't been able to reproduce the issue so I'm not sure how to proceed"
        }
    ]
}