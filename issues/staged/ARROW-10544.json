{
    "issue": {
        "title": "[C++] Provide per-processor Executors to support pinning workflows to a core",
        "body": "***Note**: This issue was originally created as [ARROW-10544](https://issues.apache.org/jira/browse/ARROW-10544). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nFor many workflows, there is a distinct performance advantage to avoiding transfer of a task between processors.  For example when iteratively processing a small dataset keeping everything local to a single CPU can avoid churn in split caches. Allowing each logical core to be accessible as an `Executor` would be one way to give developers the requisite control.",
        "created_at": "2020-11-10T13:57:08.000Z",
        "updated_at": "2020-11-10T14:43:23.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2020-11-10T13:57:18.335Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10544?focusedCommentId=17229232) by Ben Kietzman (bkietz):*\n`[~wesm]`"
        },
        {
            "created_at": "2020-11-10T14:43:23.922Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10544?focusedCommentId=17229265) by Wes McKinney (wesm):*\nThis should be coupled with a decision about how to implement a work-stealing scheduler (breadth-first scheduling). Note this contrasts with the depth-first scheduling that's used by Julia's thread scheduler.\u00a0"
        }
    ]
}