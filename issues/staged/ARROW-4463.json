{
    "issue": {
        "title": "[Rust] Support read:write of Feather files",
        "body": "***Note**: This issue was originally created as [ARROW-4463](https://issues.apache.org/jira/browse/ARROW-4463). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nAs an Arrow developer/user, I'd like to be able to read and write Feather files.\r\n\r\nThe current I/O story in Rust isn't great, we don't yet fully support reading and writing\u00a0between Parquet, we can only read CSV but not yet writing. This is an inconvenience (at least for me).\r\n\r\nI propose supporting the Feather format in Rust, initially with the following limitations:\r\n \\* No date/time support until ARROW-4386\u00a0(and potentially more work) lands\r\n \\* Reading categorical data (from other languages) but not writing them\r\n \\* Reading and writing from and to single record batches. We don't yet support slicing of arrays ARROW-3954\r\n\r\nIf the above are accept(ed|able), we can enhance the Feather support as the dependencies on the above limitations are lifted.\u00a0\r\n\r\nWe can also refactor the Feather code as we work on more IPC in Rust.",
        "created_at": "2019-02-03T16:10:32.000Z",
        "updated_at": "2019-02-04T04:57:11.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-02-04T04:57:11.000Z"
    },
    "comments": [
        {
            "created_at": "2019-02-03T17:03:14.604Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4463?focusedCommentId=16759477) by Andy Grove (andygrove):*\nHi [~nevi_me] .. I went down this same path a while back ... Feather is an old format and not really supported now. It would be better to implement the IPC file format instead which is defined in <https://github.com/apache/arrow/blob/master/format/File.fbs>\r\n\r\n\u00a0\r\n\r\nHere is a PR where I had started work on this:\r\n\r\nhttps://github.com/apache/arrow/pull/2986\r\n\r\n\u00a0"
        },
        {
            "created_at": "2019-02-03T20:44:13.223Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4463?focusedCommentId=16759531) by Neville Dipale (nevi_me):*\nThanks Andy, i nearly missed your reply.\r\n\r\nIt's a bit confusing because\u00a0when I looked at\u00a0wesm/feather, the position seems to be that once R bindings for Arrow are created, Feather-based IPC will live in Arrow, and perhaps be improved or superseded by Arrow File format. At the same time, from looking at pyarrow, it doesn't seem like Arrow File is used, because 'Tables' are saved as parquet files.\r\n\r\nI need(ed) a way to read my existing Feather files, and be able to write whatever changes I make, back. I think there's still quite a bit outstanding re Arrow + Parquet before one could use them together\u00a0in Rust. So I was stuck and decided to go down the Feather route in the interim.\r\n\r\nI'm also interested in Arrow IPC, and will contribute to making it happen once\u00a0we've added some currently blocking functionality. If Feather in Rust doesn't make sense, I can keep the code out of tree, and continue using it for my needs."
        },
        {
            "created_at": "2019-02-03T23:47:31.897Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4463?focusedCommentId=16759574) by Wes McKinney (wesm):*\nSee http://wesmckinney.com/blog/feather-arrow-future/\r\n\r\nI'm waiting for the R community to sort out the packaging issues so that users can install an Arrow-based Feather package instead of the current small prototype that we built in 2016. Once that is possible, then we can look at replacing the internal detail of Feather files with the Arrow IPC binary protocol.\r\n\r\nPlease note that Feather files should not be used for long term data storage. So once a transition to \"Feather v2\" happens (i.e. the \"feather\" name will live on but be based on the standard IPC protocol) then what you can do is:\r\n\r\n- Read Feather file with pyarrow X.Y.Z\n- Write data to Arrow IPC file\n- Read IPC file, write Feather v2 format (if that's what you want)\n  \n  I do not think it is a great use of time for Rust or any other language to support Feather until after first supporting the IPC protocol. The latter is more general than the former\n  \n  If you have any uncertainty or questions about Feather please don't hesitate to ask"
        }
    ]
}