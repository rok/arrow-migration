{
    "issue": {
        "title": "[C++] Better column name and header support in CSV reader",
        "body": "***Note**: This issue was originally created as [ARROW-5747](https://issues.apache.org/jira/browse/ARROW-5747). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhile working on\u00a0ARROW-5500, I found a number of issues around the CSV parse options `header_rows`:\r\n \\* If header_rows is 0, [the reader errors](https://github.com/apache/arrow/blob/8b0318a11bba2aa2cf39bff245ff916a3283d372/cpp/src/arrow/csv/reader.cc#L150)\r\n \\* It's not possible to supply your own column names, as [this TODO](https://github.com/apache/arrow/blob/8b0318a11bba2aa2cf39bff245ff916a3283d372/cpp/src/arrow/csv/reader.cc#L149)\u00a0notes.\u00a0ARROW-4912 allows renaming columns after reading in, which\u00a0_maybe_ is enough as long as header_rows == 0 doesn't error, but\u00a0then you can't naturally specify column types in the convert options because that takes a map of column name to type.\r\n \\* If header_rows is > 1, every cell gets turned into a column name, so if header_rows\u00a0== 2, you get twice the number of column names as columns. This doesn't error, but it leads to unexpected results.\r\n\r\nIMO a better interface would be to have a `skip_rows` argument to let you ignore a large header, and a `column_names` argument that, if provided, gives the column names. If not provided, the first row after `skip_rows` is taken to be the column names. If it were also possible for `column_names` to take a `false` or `null` argument, then we could support the case of autogenerating names when none are provided and there's no header row. Alternatively, we could use a boolean `header` argument to govern whether the first (non-skipped) row should be interpreted as column names. (For reference, R's [readr](https://github.com/tidyverse/readr/blob/master/R/read_delim.R#L14-L27)\u00a0takes TRUE/FALSE/array of strings in one arg; the base [read.csv](https://stat.ethz.ch/R-manual/R-devel/library/utils/html/read.table.html)\u00a0uses separate args for header and col.names. Both have a `skip` argument.)\r\n\r\nI don't think there's value in trying to be clever about multirow headers and converting those to column names; if there's meaningful information in a tall header, let the user parse it themselves.",
        "created_at": "2019-06-26T21:02:17.000Z",
        "updated_at": "2019-08-05T19:05:01.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-07-24T12:26:44.000Z"
    },
    "comments": [
        {
            "created_at": "2019-06-27T13:03:11.939Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5747?focusedCommentId=16874127) by Antoine Pitrou (apitrou):*\nThat sounds reasonable to me."
        },
        {
            "created_at": "2019-07-24T12:26:44.761Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5747?focusedCommentId=16891810) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 4898\n<https://github.com/apache/arrow/pull/4898>"
        }
    ]
}