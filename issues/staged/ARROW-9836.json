{
    "issue": {
        "title": "[Rust] [DataFusion] Improve API for usage of UDFs",
        "body": "***Note**: This issue was originally created as [ARROW-9836](https://issues.apache.org/jira/browse/ARROW-9836). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nTL;DR; currently, users call UDFs through\r\n \u00a0\r\n <font color=\"#000000\">df.select(scalar_functions(\u201csqrt\u201d, vec![col(\u201ca\u201d)], DataType::Float64))</font>\r\n \u00a0\r\n Proposal:\r\n \u00a0\r\n <font color=\"#000000\">let f = df.registry();</font>\r\n\r\n<font color=\"#000000\">df.select(f.udf(\u201csqrt\u201d, vec![col(\u201ca\u201d)])?)</font>\r\n \u00a0\r\n so that they do not have to remember the UDFs return type when using it.\r\n \u00a0\r\n This API will in the future allow to declare the UDF as part of the planning, like spark, instead of having to register it in the registry before using it (we just need to check if the UDF is registered or not before doing so).\r\n See complete proposal here: <https://docs.google.com/document/d/1Kzz642ScizeKXmVE1bBlbLvR663BKQaGqVIyy9cAscY/edit?usp=sharing>\r\n\r\n\u00a0",
        "created_at": "2020-08-23T15:11:13.000Z",
        "updated_at": "2020-09-27T18:51:47.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Component: Rust - DataFusion",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-09-07T20:33:09.000Z"
    },
    "comments": [
        {
            "created_at": "2020-09-07T20:33:10.026Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9836?focusedCommentId=17191855) by Andy Grove (andygrove):*\nIssue resolved by pull request 8032\n<https://github.com/apache/arrow/pull/8032>"
        }
    ]
}