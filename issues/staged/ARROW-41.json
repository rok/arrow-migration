{
    "issue": {
        "title": "C++: Convert RecordBatch to StructArray, and back",
        "body": "***Note**: This issue was originally created as [ARROW-41](https://issues.apache.org/jira/browse/ARROW-41). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWith `arrow::TableBatchReader`, we can turn a Table into a sequence of one or more RecordBatches. It would be useful to be able to easily convert between RecordBatch and a StructArray (which can be semantically equivalent in some contexts)",
        "created_at": "2016-03-05T00:40:17.000Z",
        "updated_at": "2019-03-30T20:09:42.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-03-30T20:09:42.000Z"
    },
    "comments": [
        {
            "created_at": "2016-03-27T01:19:03.384Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-41?focusedCommentId=15213281) by Kai Zheng (drankye):*\nThanks `[~wesmckinn]` for reporting this. I have some questions, would you help with? Thanks.\n> Convert table to std::vector of `Struct arrays`\nI don't find any real codes for `struct` type and `struct array`. Where am I lost?\n> While tables and struct type columns are semantically equivalent (and tables can be embedded in other tables using struct types), the memory layout of a table may not be strictly contiguous.\nGood to know the difference. The conversion sounds like, table => struct; table->column => struct->field with column name being the field name; the resultant struct will be strictly contiguous. Right?\n> For the purposes of putting data on the wire / in shared memory, it may be useful to offer a conversion function to \"structify\" an in-memory logical Arrow table. \nNot quite getting this. Do you mean arrow table isn't suitable for the wire or to be remained in shared memory? I looked at the codes, a table mainly consists of columns and columns are just chunked arrays, which looks like to me rather compact and not bad for the mentioned purpose."
        },
        {
            "created_at": "2016-03-27T02:21:25.379Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-41?focusedCommentId=15213288) by Wes McKinney (wesm):*\nStruct is awaiting an implementation in https://github.com/apache/arrow/blob/master/cpp/src/arrow/types/struct.h. See, for example, the implementation of `ListArray` (for repeated fields) in https://github.com/apache/arrow/blob/master/cpp/src/arrow/types/list.h\n\nRelated JIRAs: ARROW-40, ARROW-60"
        },
        {
            "created_at": "2016-03-27T02:23:22.214Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-41?focusedCommentId=15213291) by Wes McKinney (wesm):*\nNote that `arrow::Table` (as compared with `arrow::RowBatch`), as currently defined, is a chunked data structure: https://github.com/apache/arrow/blob/master/cpp/src/arrow/column.h#L71"
        },
        {
            "created_at": "2016-03-27T03:30:31.464Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-41?focusedCommentId=15213309) by Kai Zheng (drankye):*\nThanks for your pointers. If these are not needed in a hurry, I can get them done in 3 weeks or so."
        },
        {
            "created_at": "2016-03-27T03:33:46.442Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-41?focusedCommentId=15213311) by Kai Zheng (drankye):*\n> Note that arrow::Table (as compared with arrow::RowBatch), as currently defined, is a chunked data structure\nAh, yes I noticed the difference. Chunked arrays are not contiguous from each other."
        },
        {
            "created_at": "2016-03-27T03:41:37.797Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-41?focusedCommentId=15213314) by Wes McKinney (wesm):*\nNo problem. If you do start working on it please let me know and I'll do the same =) "
        },
        {
            "created_at": "2019-03-30T20:09:42.413Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-41?focusedCommentId=16805953) by Wes McKinney (wesm):*\nClosing also like ARROW-40 until there is a clearly articulated need"
        }
    ]
}