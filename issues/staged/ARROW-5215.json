{
    "issue": {
        "title": "[C++] Need a way to change integer size in DictBuilder and AdaptiveIntBuilder",
        "body": "***Note**: This issue was originally created as [ARROW-5215](https://issues.apache.org/jira/browse/ARROW-5215). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently, there's no way to choose the index type with DictionaryBuilder. Consequently, it's difficult to implement e.g. casts to a specific dictionary type (instead the DictionaryBuilder will select the smallest possible integer size for the index type).\r\n\r\nThis will allow implementing \"null to dict\" casting.",
        "created_at": "2019-04-25T15:09:12.000Z",
        "updated_at": "2021-11-23T18:32:41.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-11-23T18:32:41.000Z"
    },
    "comments": [
        {
            "created_at": "2019-05-07T14:57:05.359Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5215?focusedCommentId=16834836) by Antoine Pitrou (apitrou):*\nOr, rather than change DictionaryBuilder, add a separate FixedDictionaryBuilder class."
        },
        {
            "created_at": "2019-05-07T15:03:07.862Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5215?focusedCommentId=16834846) by Francois Saint-Jacques (fsaintjacques):*\nCan we hide this to the consumer with a DictionaryBuilder option struct? Is it useful?"
        },
        {
            "created_at": "2019-05-07T15:06:12.295Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5215?focusedCommentId=16834852) by Antoine Pitrou (apitrou):*\nI don't know. The implementation will probably use different builder classes. Note there's [ARROW-4725](https://github.com/apache/arrow/pull/4255) which proposes to change a lot of the DictBuilder implementation, so we'll have to wait to see the fate of that issue."
        },
        {
            "created_at": "2019-08-22T22:29:21.842Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5215?focusedCommentId=16913751) by Wes McKinney (wesm):*\nSince I added `Dictionary32Builder` we are already 1/4 of the way there. We could add index-type-specific builders for the other 3 index types?"
        },
        {
            "created_at": "2019-08-22T22:32:20.159Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5215?focusedCommentId=16913754) by Antoine Pitrou (apitrou):*\nWe can probably do that. I suppose it would be templated?"
        },
        {
            "created_at": "2021-11-23T18:32:33.153Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5215?focusedCommentId=17448196) by Antoine Pitrou (apitrou):*\nThis works now:\r\n```python\n\r\n>>> a = pa.array([None] * 3)\r\n>>> a.cast(pa.dictionary(pa.int16(), pa.utf8()))\r\n<pyarrow.lib.DictionaryArray object at 0x7f7bc6ddb3c0>\r\n\r\n-- dictionary:\r\n  []\r\n-- indices:\r\n  [\r\n    null,\r\n    null,\r\n    null\r\n  ]\r\n>>> a.cast(pa.dictionary(pa.int16(), pa.utf8())).type\r\nDictionaryType(dictionary<values=string, indices=int16, ordered=0>)\r\n```\r\n"
        }
    ]
}