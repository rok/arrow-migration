{
    "issue": {
        "title": "[Rust] IPC writers shouldn't unwrap in destructors",
        "body": "***Note**: This issue was originally created as [ARROW-11681](https://issues.apache.org/jira/browse/ARROW-11681). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nFileWriter and StreamWriter call `self.finish().unwrap()` in their `Drop` implementations if the write has not already been finished. However, a common reason for the write to not be finished is an earlier IO error on the underlying stream. In that case, the destructor will panic, which is not desired.",
        "created_at": "2021-02-18T00:38:37.000Z",
        "updated_at": "2021-03-11T16:21:37.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-02-20T13:55:10.000Z"
    },
    "comments": [
        {
            "created_at": "2021-02-20T13:55:10.149Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11681?focusedCommentId=17287690) by Andrew Lamb (alamb):*\nIssue resolved by pull request 9520\n<https://github.com/apache/arrow/pull/9520>"
        }
    ]
}