{
    "issue": {
        "title": "[C++][Compute] Support sharing KernelState between processes",
        "body": "***Note**: This issue was originally created as [ARROW-10630](https://issues.apache.org/jira/browse/ARROW-10630). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nFrom the mailing list discussion: https://lists.apache.org/thread.html/ra2a8f9fc5cf621bd79a6db4e578ad133dd921722f24e4c220e4ba07f%40%3Cdev.arrow.apache.org%3E\r\n\r\nIn a distributed context, it would be useful to send a KernelState from one process to another. For example when distributing computation of mean, the completed states of each process must be merged before finalization. This could be supported by adding to the KernelState interface (`KernelState::{Serialize, Deserialize`} or by adding functions to ScalarAggregateKernel.",
        "created_at": "2020-11-17T15:47:55.000Z",
        "updated_at": "2020-11-17T19:16:28.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2020-11-17T15:54:55.325Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10630?focusedCommentId=17233684) by Ben Kietzman (bkietz):*\n`[~wesm]`"
        },
        {
            "created_at": "2020-11-17T19:16:28.857Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10630?focusedCommentId=17233864) by Wes McKinney (wesm):*\nAPI design aside, this is a standard problem that must be solved to create distributed query engines. I suggest building either a Flatbuffers or Protocol Buffers-based serialization protocol that can be used to serialize different objects in the arrow::compute namespace.\u00a0"
        }
    ]
}