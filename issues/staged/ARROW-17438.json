{
    "issue": {
        "title": "[R] glimpse() errors if there is a UDF",
        "body": "***Note**: This issue was originally created as [ARROW-17438](https://issues.apache.org/jira/browse/ARROW-17438). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nUsing the example from ARROW-17437:\r\n\r\n```Java\n\r\nregister_scalar_function(\r\n  \"test\", \r\n  function(context, x) paste(x, collapse=\",\"), \r\n  utf8(), \r\n  utf8(), \r\n  auto_convert=TRUE\r\n)\r\n\r\nTable$create(x = c(\"a\", \"b\", \"c\")) |>\r\n  transmute(test(x)) |>\r\n  glimpse()\r\n\r\n# Table (query)\r\n# 3 rows x 1 columns\r\n# Error in `dplyr::collect()`:\r\n# ! NotImplemented: Call to R (resolve scalar user-defined function output data type) from a non-R thread from an unsupported context\r\n# Run `rlang::last_error()` to see where the error occurred.\r\n```\r\n\r\nA variety of things could fix this:\r\n\r\n- Supporting UDFs in any query (I think there's a draft PR open for this)\n- The limit operator (FetchNode?) so that `head()` is handled in the ExecPlan and we don't need to use the RecordBatchReader workaround to get it efficiently (also PR in the works)\n- Worse case, error more informatively  \n",
        "created_at": "2022-08-16T18:53:31.000Z",
        "updated_at": "2022-10-07T12:53:43.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-10-06T17:07:39.000Z"
    },
    "comments": [
        {
            "created_at": "2022-10-06T17:06:46.084Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17438?focusedCommentId=17613721) by Will Jones (willjones127):*\nI just tested, and this is now fixed. (I believe in ARROW-17178.) cc `[~paleolimbot]` \u00a0"
        },
        {
            "created_at": "2022-10-07T12:53:43.306Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17438?focusedCommentId=17614070) by Dewey Dunnington (paleolimbot):*\nThanks Will! I just tested on master too...I think the lazy 'head' implementation did the trick here.\r\n\r\n```R\n\r\nlibrary(arrow, warn.conflicts = FALSE)\r\n#> Some features are not enabled in this build of Arrow. Run `arrow_info()` for more information.\r\nlibrary(dplyr, warn.conflicts = FALSE)\r\n\r\nregister_scalar_function(\r\n  \"test\", \r\n  function(context, x) paste(x, collapse=\",\"), \r\n  utf8(), \r\n  utf8(), \r\n  auto_convert=TRUE\r\n)\r\n\r\nTable$create(x = c(\"a\", \"b\", \"c\")) |>\r\n  transmute(test(x)) |>\r\n  glimpse()\r\n#> Table (query)\r\n#> 3 rows x 1 columns\r\n#> $ `test(x)` <string> \"a,b,c\"\r\n#> Call `print()` for query details\r\n```\r\n"
        }
    ]
}