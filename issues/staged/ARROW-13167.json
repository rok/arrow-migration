{
    "issue": {
        "title": "[C++] Type determination kernels (\"type\", \"type_id\")",
        "body": "***Note**: This issue was originally created as [ARROW-13167](https://issues.apache.org/jira/browse/ARROW-13167). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe Arrow C++ library exposes an API for determining the data type of an expression, but it is exposed as a method of the expression class and it requires that the user pass a schema as an argument to the method. This is inconvenient; for example, we have had to write some inconsistent code in the R bindings to make expression objects carry schemas along with them and then pass the schemas to derivative expressions, unifying schemas as needed for derivative expressions that take 2+ expressions as arguments.\r\n\r\nThis would be much cleaner if we could use the kernel function calling interface to call a unary `type_id` function that would simply determine the type of its input datum and return a scalar integer value from the data type enum indicating the its data type. It would be convenient to also have a version of this that returned the string description of the data type; I think this could be named `type`.",
        "created_at": "2021-06-24T17:00:46.000Z",
        "updated_at": "2021-06-24T17:18:02.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-06-24T17:18:02.000Z"
    },
    "comments": [
        {
            "created_at": "2021-06-24T17:05:27.974Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13167?focusedCommentId=17368974) by Antoine Pitrou (apitrou):*\nI don't understand why this needs to be a kernel. This seems to be an abuse of the general idea of compute functions."
        },
        {
            "created_at": "2021-06-24T17:16:22.026Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13167?focusedCommentId=17368978) by Ian Cook (icook):*\nFrom the perspective of a user of a compute API, it is quite inconvenient to switch to using a completely different API in order to determine the data type of a datum. This is a notorious gripe that SQL developers have with many database systems, and it's the reason why some SQL engines like [Snowflake](https://docs.snowflake.com/en/sql-reference/functions/typeof.html) and [Impala](https://docs.cloudera.com/documentation/enterprise/6/6.3/topics/impala_conversion_functions.html#conversion_functions__typeof)\u00a0have added a `typeof()` function to their SQL dialects. I agree that it feels like an \"off-label\" use of compute functions, but I think the utility it affords warrants this."
        },
        {
            "created_at": "2021-06-24T17:17:50.970Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13167?focusedCommentId=17368979) by Antoine Pitrou (apitrou):*\nAn SQL frontend for Arrow could support that. But compute functions are for things that **compute**. Not for arbitrary inquiry."
        },
        {
            "created_at": "2021-06-24T17:18:02.706Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13167?focusedCommentId=17368980) by Antoine Pitrou (apitrou):*\nSorry, but rejecting this."
        }
    ]
}