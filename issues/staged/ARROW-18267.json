{
    "issue": {
        "title": "[R] Possible bug in Handling Blank Conversion to Missing Value",
        "body": "***Note**: This issue was originally created as [ARROW-18267](https://issues.apache.org/jira/browse/ARROW-18267). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n\u00a0\r\n\r\nI am not sure if this is a bug, but I would expect that if I convert a string vector to a numeric vector, then the blanks \"\" should automatically become NA. See the snippet below.\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n```java\n\r\nlibrary(tidyverse)\r\nlibrary(arrow)\r\n#> Some features are not enabled in this build of Arrow. Run `arrow_info()` for more information.\r\n#> \r\n#> Attaching package: 'arrow'\r\n#> The following object is masked from 'package:utils':\r\n#> \r\n#>     timestamp\r\n\r\n\r\ndf <- tibble(x=rep(c(\"4000 -\", \"6000 -\",  \"\", \"8000 - \"), 10),\r\n             y=seq(1,10, length=40))\r\n\r\nwrite_csv(df, \"test_string.csv\")\r\n\r\n\r\ndata <- open_dataset(\"test_string.csv\",\r\n                     format=\"csv\",\r\n                     skip=1,\r\n                     schema=schema(x=string(), y=double()))\r\n\r\n\r\ndata2 <- data |>\r\n    mutate(x= sub(\" -.*\", \"\", x)   ) |>\r\n    mutate(x2=as.numeric(x)) |>\r\n    collect() ## how to convert the blank to a numeric NA ?\r\n#> Error in `collect()`:\r\n#> ! Invalid: Failed to parse string: '' as a scalar of type double\r\n\r\n#> Backtrace:\r\n#>     \u2586\r\n#>  1. \u251c\u2500dplyr::collect(mutate(mutate(data, x = sub(\" -.*\", \"\", x)), x2 = as.numeric(x)))\r\n#>  2. \u2514\u2500arrow:::collect.arrow_dplyr_query(mutate(mutate(data, x = sub(\" -.*\", \"\", x)), x2 = as.numeric(x)))\r\n#>  3.   \u2514\u2500base::tryCatch(...)\r\n#>  4.     \u2514\u2500base (local) tryCatchList(expr, classes, parentenv, handlers)\r\n#>  5.       \u2514\u2500base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\r\n#>  6.         \u2514\u2500value[[3L]](cond)\r\n#>  7.           \u2514\u2500arrow:::augment_io_error_msg(e, call, schema = x$.data$schema)\r\n#>  8.             \u2514\u2500rlang::abort(msg, call = call)\r\n \r\n\r\n\r\nsessionInfo()\r\n#> R version 4.2.2 (2022-10-31)\r\n#> Platform: x86_64-pc-linux-gnu (64-bit)\r\n#> Running under: Debian GNU/Linux 11 (bullseye)\r\n#> \r\n#> Matrix products: default\r\n#> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3\r\n#> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.13.so\r\n#> \r\n#> locale:\r\n#>  [1] LC_CTYPE=en_GB.UTF-8       LC_NUMERIC=C              \r\n#>  [3] LC_TIME=en_GB.UTF-8        LC_COLLATE=en_GB.UTF-8    \r\n#>  [5] LC_MONETARY=en_GB.UTF-8    LC_MESSAGES=en_GB.UTF-8   \r\n#>  [7] LC_PAPER=en_GB.UTF-8       LC_NAME=C                 \r\n#>  [9] LC_ADDRESS=C               LC_TELEPHONE=C            \r\n#> [11] LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C       \r\n#> \r\n#> attached base packages:\r\n#> [1] stats     graphics  grDevices utils     datasets  methods   base     \r\n#> \r\n#> other attached packages:\r\n#>  [1] arrow_10.0.0    forcats_0.5.2   stringr_1.4.1   dplyr_1.0.10   \r\n#>  [5] purrr_0.3.5     readr_2.1.3     tidyr_1.2.1     tibble_3.1.8   \r\n#>  [9] ggplot2_3.4.0   tidyverse_1.3.2\r\n#> \r\n#> loaded via a namespace (and not attached):\r\n#>  [1] lubridate_1.9.0     assertthat_0.2.1    digest_0.6.30      \r\n#>  [4] utf8_1.2.2          R6_2.5.1            cellranger_1.1.0   \r\n#>  [7] backports_1.4.1     reprex_2.0.2        evaluate_0.17      \r\n#> [10] httr_1.4.4          highr_0.9           pillar_1.8.1       \r\n#> [13] rlang_1.0.6         googlesheets4_1.0.1 readxl_1.4.1       \r\n#> [16] R.utils_2.12.1      R.oo_1.25.0         rmarkdown_2.17     \r\n#> [19] styler_1.8.0        googledrive_2.0.0   bit_4.0.4          \r\n#> [22] munsell_0.5.0       broom_1.0.1         compiler_4.2.2     \r\n#> [25] modelr_0.1.9        xfun_0.34           pkgconfig_2.0.3    \r\n#> [28] htmltools_0.5.3     tidyselect_1.2.0    fansi_1.0.3        \r\n#> [31] crayon_1.5.2        tzdb_0.3.0          dbplyr_2.2.1       \r\n#> [34] withr_2.5.0         R.methodsS3_1.8.2   grid_4.2.2         \r\n#> [37] jsonlite_1.8.3      gtable_0.3.1        lifecycle_1.0.3    \r\n#> [40] DBI_1.1.3           magrittr_2.0.3      scales_1.2.1       \r\n#> [43] vroom_1.6.0         cli_3.4.1           stringi_1.7.8      \r\n#> [46] fs_1.5.2            xml2_1.3.3          ellipsis_0.3.2     \r\n#> [49] generics_0.1.3      vctrs_0.5.0         tools_4.2.2        \r\n#> [52] bit64_4.0.5         R.cache_0.16.0      glue_1.6.2         \r\n#> [55] hms_1.1.2           parallel_4.2.2      fastmap_1.1.0      \r\n#> [58] yaml_2.3.6          timechange_0.1.1    colorspace_2.0-3   \r\n#> [61] gargle_1.2.1        rvest_1.0.3         knitr_1.40         \r\n#> [64] haven_2.5.1\r\n\r\n\r\nCreated on 2022-11-07 with [reprex v2.0.2](https://reprex.tidyverse.org) \n```\r\n\u00a0\r\n\r\n\u00a0",
        "created_at": "2022-11-07T14:41:28.000Z",
        "updated_at": "2022-11-07T19:54:29.000Z",
        "labels": [
            "Migrated from Jira",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-11-07T15:19:21.000Z"
    },
    "comments": [
        {
            "created_at": "2022-11-07T15:19:07.892Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18267?focusedCommentId=17629867) by Neal Richardson (npr):*\nThanks for reporting. This sounds the same as ARROW-18241."
        },
        {
            "created_at": "2022-11-07T15:23:19.420Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18267?focusedCommentId=17629873) by Neal Richardson (npr):*\nWorkaround specifically for empty strings: \r\n\r\n```Java\n\r\narrow_table(x = c(\"1\", \"\", \"3\")) |> \r\n  mutate(x2 = as.numeric(ifelse(x == \"\", NA_character_, x))) |> \r\n  collect()\r\n\r\n# A tibble: 3 \u00d7 2\r\n  x        x2\r\n  <chr> <dbl>\r\n1 \"1\"       1\r\n2 \"\"       NA\r\n3 \"3\"       3\r\n```"
        },
        {
            "created_at": "2022-11-07T19:54:29.200Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18267?focusedCommentId=17629995) by Lorenzo Isella (larry77):*\nThanks for the workaround. Technically speaking, it is not a bug, but simply a counter-intuitive behavior for any seasoned R user. It should change if the long-term goal of the R arrow package is to become \"invisible\" while doing heavy computations. Keep up the good work!"
        }
    ]
}