{
    "issue": {
        "title": "[C++] Add fill_null kernel implementation for (array[string], scalar[string])",
        "body": "***Note**: This issue was originally created as [ARROW-9489](https://issues.apache.org/jira/browse/ARROW-9489). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n",
        "created_at": "2020-07-15T18:14:34.000Z",
        "updated_at": "2020-11-16T20:26:51.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-11-16T20:26:40.000Z"
    },
    "comments": [
        {
            "created_at": "2020-11-05T07:56:51.744Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9489?focusedCommentId=17226557) by Joris Van den Bossche (jorisvandenbossche):*\ncc `[~maartenbreddels]` depending on time, this would also be an interesting one\r\n\r\n```Java\n\r\nIn [1]: arr = pa.array(['a', 'b', None])\r\n\r\nIn [2]: import pyarrow.compute as pc\r\n\r\nIn [3]: pc.fill_null(arr, 'c')\r\n...\r\nArrowNotImplementedError: Function fill_null has no kernel matching input types (array[string], scalar[string])\r\n```\r\n"
        },
        {
            "created_at": "2020-11-05T08:19:56.748Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9489?focusedCommentId=17226572) by Maarten Breddels (maartenbreddels):*\nYes, happy to take this on, since it's an ugly code path in Vaex right now, and quite a performance hit."
        },
        {
            "created_at": "2020-11-11T14:04:11.184Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9489?focusedCommentId=17229986) by Joris Van den Bossche (jorisvandenbossche):*\nFor full coverage of pandas functionality, a `(array[string], array[string])`  signature would also be interesting: pandas allows to fill with an array, taking the corresponding value of the second array where the first array has a null.   \r\n(but certainly less of a priority)"
        },
        {
            "created_at": "2020-11-11T14:22:45.295Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9489?focusedCommentId=17229989) by Maarten Breddels (maartenbreddels):*\nYes, I thought about that too. Although I think a `np.where` equivalent would be more general. Sth like:\r\n```java\n\r\npc.where(pc.is_null(arr), arr2, arr)  # equivalent what you described\r\npc.where(pc.is_null(arr), 'c', arr)  # less performant version of fill_null\r\n```\r\nI could explore what you describe, and see if we can do some template programming so that we can generalize this to other kernels as well. But I think a 'where' kernel would make more sense at this point in time."
        },
        {
            "created_at": "2020-11-11T15:47:08.527Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9489?focusedCommentId=17230042) by Joris Van den Bossche (jorisvandenbossche):*\nAh, yes, a general \"where\" general seems more useful indeed, and can be used for this purpose as well (and could also be used for some \"setitem\" like calls in pandas, which would be useful to have)"
        },
        {
            "created_at": "2020-11-16T20:26:40.873Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9489?focusedCommentId=17233062) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 8628\n<https://github.com/apache/arrow/pull/8628>"
        }
    ]
}