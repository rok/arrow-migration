{
    "issue": {
        "title": "[Python][C++] Parquet reader not forward compatible for timestamps without timezone",
        "body": "***Note**: This issue was originally created as [ARROW-5878](https://issues.apache.org/jira/browse/ARROW-5878). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nTimestamps without timezone which are written by pyarrow 0.14.0 cannot be read anymore as timestamps by earlier versions.\u00a0The timestamp is read as an integer when reading in with pyarrow 0.13.0\r\n\r\nLooking at the parquet schemas, it seems that the logical type cannot be understood by the older versions, see below.\r\n#### File generation with pyarrow 0.14.0\r\n```java\n\r\nimport datetime\r\nimport pyarrow.parquet as pq\r\nimport pandas as pd\r\n\r\ndf = pd.DataFrame(\r\n    {\r\n        \"datetime64\": pd.Series([\"2018-01-01\"], dtype=\"datetime64[ns]\"),\r\n        \"datetime64_ts\": pd.Series(\r\n            [pd.Timestamp(datetime.datetime(2018, 1, 1), tz=\"Europe/Berlin\")],\r\n            dtype=\"datetime64[ns]\",\r\n        ),\r\n    }\r\n)\r\npq.write_table(pa.Table.from_pandas(df), \"timezones_pyarrow_14.paquet\")\r\n```\r\n#### Reading with pyarrow 0.13.0\r\n```java\n\r\nIn [1]: import pyarrow.parquet as pq\r\n\r\nIn [2]: import pyarrow as pa\r\n\r\nIn [3]: with open(\"timezones_pyarrow_14.paquet\", \"rb\") as fd:\r\n   ...:     table = pq.read_pandas(fd)\r\n   ...:\r\n\r\nIn [4]: table.to_pandas()\r\nOut[4]:\r\n         datetime64             datetime64_ts\r\n0  1514764800000000 2018-01-01 00:00:00+01:00\r\n\r\nIn [5]: table.to_pandas().dtypes\r\nOut[5]:\r\ndatetime64                               int64\r\ndatetime64_ts    datetime64[ns, Europe/Berlin]\r\ndtype: object\r\n```\r\n### Parquet schema as seen by pyarrow versions:\r\n\r\npyarrow 0.13.0 parquet schema\r\n```java\n\r\ndatetime64: INT64\r\ndatetime64_ts: INT64 TIMESTAMP_MICROS\r\n```\r\npyarrow 0.14.0 parquet schema\r\n```java\n\r\ndatetime64: INT64 Timestamp(isAdjustedToUTC=false, timeUnit=microseconds)\r\ndatetime64_ts: INT64 Timestamp(isAdjustedToUTC=true, timeUnit=microseconds)\r\n```",
        "created_at": "2019-07-08T15:17:11.000Z",
        "updated_at": "2019-08-01T22:33:50.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-07-12T17:47:45.000Z"
    },
    "comments": [
        {
            "created_at": "2019-07-08T16:26:29.526Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5878?focusedCommentId=16880520) by Wes McKinney (wesm):*\nThis is sort of a grey area because of comments in parquet.thrift\r\n\r\nhttps://github.com/apache/parquet-format/blob/master/src/main/thrift/parquet.thrift#L334\r\n\r\nI am OK with always setting TIMESTAMP_MICROS/TIMESTAMP_MILLIS ConvertedType for data that originates from Arrow.\r\n\r\nDo you want to submit a PR? We are probably doing a 0.14.1 release so this can get fixed fairly soon"
        },
        {
            "created_at": "2019-07-12T17:47:45.842Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5878?focusedCommentId=16884035) by Wes McKinney (wesm):*\nIssue resolved by pull request 4825\n<https://github.com/apache/arrow/pull/4825>"
        }
    ]
}