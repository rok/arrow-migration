{
    "issue": {
        "title": "[C++] improve the performance of bitmap operations",
        "body": "***Note**: This issue was originally created as [ARROW-3922](https://issues.apache.org/jira/browse/ARROW-3922). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nC++ bitmap code can be optimized further by using the unsigned integers than \"int64_t\" for bitmap checks, and eliminating the kBitmap. See here\u00a0<https://godbolt.org/z/deq0_q>\u00a0- compare the size of the assembly code. And the performance measurements in the blog show up to 50% performance gains.\u00a0\r\nAlternatively if signed to unsigned upgrade is not possible (perhaps in every language), then in the C++ code, we should use the bitmap operations directory ( `<<3` for division by 8, and ` & 0x7` for modulo by 8 operation), instead of `/` and `%`.\u00a0",
        "created_at": "2018-12-01T07:59:15.000Z",
        "updated_at": "2018-12-02T23:05:45.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2018-12-02T23:05:35.000Z"
    },
    "comments": [
        {
            "created_at": "2018-12-01T15:12:37.938Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3922?focusedCommentId=16705865) by Wes McKinney (wesm):*\nThis seems to produce smaller code on MSVC as well as gcc/clang\r\n\r\nhttps://godbolt.org/z/sFcSP6"
        },
        {
            "created_at": "2018-12-02T23:05:35.517Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3922?focusedCommentId=16706503) by Wes McKinney (wesm):*\nIssue resolved by pull request 3067\n<https://github.com/apache/arrow/pull/3067>"
        }
    ]
}