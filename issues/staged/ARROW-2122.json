{
    "issue": {
        "title": "[Python] Pyarrow fails to serialize dataframe with timestamp.",
        "body": "***Note**: This issue was originally created as [ARROW-2122](https://issues.apache.org/jira/browse/ARROW-2122). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe bug can be\u00a0reproduced as follows.\r\n```java\n\r\nimport pyarrow as pa\r\nimport pandas as pd\r\n\r\ndf = pd.DataFrame({'A': [pd.Timestamp('2012-11-11 00:00:00+01:00'), pd.NaT]}) \r\n\r\ns = pa.serialize(df).to_buffer()\r\nnew_df = pa.deserialize(s) # this fails\n```\r\nThe last line fails with\r\n```java\n\r\nTraceback (most recent call last):\r\n\u00a0 File \"<stdin>\", line 1, in <module>\r\n\u00a0 File \"serialization.pxi\", line 441, in pyarrow.lib.deserialize\r\n\u00a0 File \"serialization.pxi\", line 404, in pyarrow.lib.deserialize_from\r\n\u00a0 File \"serialization.pxi\", line 257, in pyarrow.lib.SerializedPyObject.deserialize\r\n\u00a0 File \"serialization.pxi\", line 174, in pyarrow.lib.SerializationContext._deserialize_callback\r\n\u00a0 File \"/home/ubuntu/arrow/python/pyarrow/serialization.py\", line 77, in _deserialize_pandas_dataframe\r\n\u00a0 \u00a0 return pdcompat.serialized_dict_to_dataframe(data)\r\n\u00a0 File \"/home/ubuntu/arrow/python/pyarrow/pandas_compat.py\", line 446, in serialized_dict_to_dataframe\r\n\u00a0 \u00a0 for block in data['blocks']]\r\n\u00a0 File \"/home/ubuntu/arrow/python/pyarrow/pandas_compat.py\", line 446, in <listcomp>\r\n\u00a0 \u00a0 for block in data['blocks']]\r\n\u00a0 File \"/home/ubuntu/arrow/python/pyarrow/pandas_compat.py\", line 466, in _reconstruct_block\r\n\u00a0 \u00a0 dtype = _make_datetimetz(item['timezone'])\r\n\u00a0 File \"/home/ubuntu/arrow/python/pyarrow/pandas_compat.py\", line 481, in _make_datetimetz\r\n\u00a0 \u00a0 return DatetimeTZDtype('ns', tz=tz)\r\n\u00a0 File \"/home/ubuntu/anaconda3/lib/python3.5/site-packages/pandas/core/dtypes/dtypes.py\", line 409, in __new__\r\n\u00a0 \u00a0 raise ValueError(\"DatetimeTZDtype constructor must have a tz \"\r\nValueError: DatetimeTZDtype constructor must have a tz supplied\n```\r\n\u00a0",
        "created_at": "2018-02-09T07:51:43.000Z",
        "updated_at": "2018-04-03T04:39:44.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2018-04-03T04:39:44.000Z"
    },
    "comments": [
        {
            "created_at": "2018-03-05T15:35:27.113Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2122?focusedCommentId=16386217) by Albert Shieh (adshieh):*\nThe issue is that the timestamp has a pytz.FixedOffset timezone, which has a zone attribute of None where arrow expects a string."
        },
        {
            "created_at": "2018-03-05T16:04:54.416Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2122?focusedCommentId=16386274) by Wes McKinney (wesm):*\nAh, sounds like we need a convention to handle FixedOffset in Arrow so that things can be properly coerced going in and out of Python"
        },
        {
            "created_at": "2018-03-05T19:31:04.271Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2122?focusedCommentId=16386615) by Albert Shieh (adshieh):*\nHow about \r\n```Java\n\r\n'+{:d}'.format(tz._minutes)\r\n```\r\nor some other prefix?"
        },
        {
            "created_at": "2018-04-03T04:39:44.358Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2122?focusedCommentId=16423462) by Uwe Korn (uwe):*\nIssue resolved by pull request 1707\n<https://github.com/apache/arrow/pull/1707>"
        }
    ]
}