{
    "issue": {
        "title": "[Python] Support for xarray.DataArray and xarray.Dataset",
        "body": "***Note**: This issue was originally created as [ARROW-1664](https://issues.apache.org/jira/browse/ARROW-1664). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nDataArray and Dataset are efficient in-memory representations for multi dimensional data. It would be great if one could share them between processes using Arrow.\r\n\r\nhttp://xarray.pydata.org/en/stable/generated/xarray.DataArray.html#xarray.DataArray\r\nhttp://xarray.pydata.org/en/stable/generated/xarray.Dataset.html#xarray.Dataset\r\n",
        "created_at": "2017-10-11T04:35:06.000Z",
        "updated_at": "2019-09-20T01:02:18.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-09-18T16:09:47.000Z"
    },
    "comments": [
        {
            "created_at": "2018-11-10T21:45:26.082Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1664?focusedCommentId=16682614) by Wes McKinney (wesm):*\nYou should be able to write serializers for use with `pa.serialize` that result in zero-copy reads. May require a bit of work to get various pandas Index types serializing properly"
        },
        {
            "created_at": "2019-09-18T16:09:12.437Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1664?focusedCommentId=16932601) by Antoine Pitrou (apitrou):*\nI'm not sure what the exact request is here. The way to integrate xarray and Arrow should be for xarray to use Arrow under the hood, IMHO. Arrow isn't meant as a general serialization layer - and besides, there's no reason it should be faster than anything else at serializing foreign binary data."
        },
        {
            "created_at": "2019-09-18T16:09:47.297Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1664?focusedCommentId=16932602) by Antoine Pitrou (apitrou):*\nFeel free to explain this in more detail, for now I'm closing."
        },
        {
            "created_at": "2019-09-18T16:12:54.350Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1664?focusedCommentId=16932606) by Mitar (mitar):*\nAs `[~wesmckinn]` \u00a0 wrote: the idea is to get zero-copy reads. So serializing might be slow, but deserializing would be fast.\r\n\r\nI think Pandas DataFrame also is not using \"arrow under the hood\" but arrow supports it. Why not then also work on supporting xarray?\r\n\r\nIt is maybe not a priority now, but it should/could be done, in my view. So I would ask to reopen this issue."
        },
        {
            "created_at": "2019-09-18T16:33:09.009Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1664?focusedCommentId=16932629) by Antoine Pitrou (apitrou):*\nIn ARROW-3829 we added a Python protocol to allow arbitrary objects to expose Arrow conversion capabilities. Does that solve the issue for you? Of course xarray would have to implement that protocol."
        },
        {
            "created_at": "2019-09-18T16:33:45.289Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1664?focusedCommentId=16932630) by Antoine Pitrou (apitrou):*\nSee example in the PR:\r\nhttps://github.com/apache/arrow/pull/5106/files#diff-8e181378bc711f4297fbe708ba95d3b8L1566\r\n"
        },
        {
            "created_at": "2019-09-18T16:58:41.983Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1664?focusedCommentId=16932670) by Mitar (mitar):*\nNice. And so Arrow support for Pandas DataFrame is only through:\r\n\r\n<https://github.com/pandas-dev/pandas/blob/34fff1f336d3b083dd09f5036c2bb9b80edfb619/pandas/core/arrays/integer.py#L370>\r\n\r\nThere is no special handling of Pandas DataFrame in arrow?"
        },
        {
            "created_at": "2019-09-18T17:18:25.095Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1664?focusedCommentId=16932688) by Antoine Pitrou (apitrou):*\n> There is no special handling of Pandas DataFrame in arrow?\r\n\r\nWhat do you mean? You can ingest a DataFrame using pa.Table.from_pandas(), for example."
        },
        {
            "created_at": "2019-09-18T20:20:30.933Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1664?focusedCommentId=16932788) by Mitar (mitar):*\nI see. So why not also have then `pa.Table.from_xarray`?"
        },
        {
            "created_at": "2019-09-18T20:23:22.372Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1664?focusedCommentId=16932790) by Antoine Pitrou (apitrou):*\nDoes xarray have a Table-like or DataFrame-like concept?"
        },
        {
            "created_at": "2019-09-18T20:31:45.850Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1664?focusedCommentId=16932797) by Mitar (mitar):*\nIt is like extension of DataFrame to multiple dimensions.\r\n> Xarray introduces labels in the form of dimensions, coordinates and attributes on top of raw [NumPy](http://www.numpy.org/)-like arrays, which allows for a more intuitive, more concise, and less error-prone developer experience. The package includes a large and growing library of domain-agnostic functions for advanced analytics and visualization with these data structures.\n> \n> Xarray was inspired by and borrows heavily from [pandas](http://pandas.pydata.org/), the popular data analysis package focused on labelled tabular data.\r\nSo internally it is ndarrays. This is why I think serialization could be possible, similar to how Pandas DataFrames internally use ndarrays."
        },
        {
            "created_at": "2019-09-18T20:40:20.413Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1664?focusedCommentId=16932813) by Antoine Pitrou (apitrou):*\nAh, perhaps at some point we want to define a PyArrow table protocol like we already have a PyArrow array protocol. `[~jorisvandenbossche]` what do you think?"
        },
        {
            "created_at": "2019-09-18T20:50:09.388Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1664?focusedCommentId=16932827) by Joris Van den Bossche (jorisvandenbossche):*\nIn general, xarray datasets/dataarrays do not necessarily match Arrow's data model (eg they can have multiple dimensions). Of course, you can have a subset of cases where your xarray object would map nicely to an Arrow table.  \r\nAlso, given that xarray uses contiguous numpy arrays and Arrow 1D arrays, I am not sure that Arrow is very suited for zero-copy serialization for such objects? (converting to arrow could be zero-copy, but not the other way around?)\r\n\r\nSo given that, I am not sure pyarrow should necessarily support xarray objects specifically. \r\nWe could indeed think about a \"table protocol\", but for that I think it would be nice to have some more practical use cases.\r\n"
        },
        {
            "created_at": "2019-09-20T01:02:18.418Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1664?focusedCommentId=16933897) by Wes McKinney (wesm):*\nI don't think that xarray is compatible with the Arrow columnar format. Let's move the discussion to the mailing list if there is something more actionable"
        }
    ]
}