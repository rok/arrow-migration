{
    "issue": {
        "title": "[Python] Inconsistent resulting type during casting in pa.array() when mask is present",
        "body": "***Note**: This issue was originally created as [ARROW-5208](https://issues.apache.org/jira/browse/ARROW-5208). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI would expect Int64Array type in all cases below :\r\n```java\n\r\n>>> pa.array([4, None, 4, None], mask=np.array([False, True, False, True]))\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\r\n<pyarrow.lib.Int64Array object at 0x91fad3a98> [4, null, 4,\u00a0 null ]\r\n\r\n>>> pa.array([4, None, 4, 'rer'], mask=np.array([False, True, False, True])) \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\r\n<pyarrow.lib.Int64Array object at 0x9201f23b8> [4, null, 4,\u00a0 null ]\r\n\r\n>>> pa.array([4, None, 4, 3.], mask=np.array([False, True, False, True]))\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <pyarrow.lib.DoubleArray object at 0x91fab7638> [ \u00a0 4, \u00a0 null, \u00a0 4, \u00a0 null ]\n```",
        "created_at": "2019-04-24T07:36:15.000Z",
        "updated_at": "2019-06-25T00:24:32.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-06-25T00:24:32.000Z"
    },
    "comments": [
        {
            "created_at": "2019-04-24T18:12:57.319Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5208?focusedCommentId=16825402) by Wes McKinney (wesm):*\nSeems reasonable. Would you like to submit a pull request?"
        },
        {
            "created_at": "2019-04-26T11:21:31.503Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5208?focusedCommentId=16826896) by Artem KOZHEVNIKOV (ArtemK):*\nyes, absolutely, it would be nice to get involved! Any doc that can be useful to start with ? CI best practices ?"
        },
        {
            "created_at": "2019-04-26T11:41:55.038Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5208?focusedCommentId=16826904) by Joris Van den Bossche (jorisvandenbossche):*\nTo get started, I think the developer docs are the place to look. Specifically the python docs have a good section on how to setup and build arrow and pyarrow: https://arrow.apache.org/docs/developers/python.html#building-on-linux-and-macos"
        },
        {
            "created_at": "2019-06-17T12:30:15.328Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5208?focusedCommentId=16865558) by Joris Van den Bossche (jorisvandenbossche):*\n`[~ArtemK]` still interested to take a look at this?"
        },
        {
            "created_at": "2019-06-18T22:42:28.420Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5208?focusedCommentId=16867102) by Wes McKinney (wesm):*\n`InferArrowType` does not accept a mask argument so that change will have to be made. You might find it helpful that I added bindings for this function in https://github.com/apache/arrow/pull/4609"
        },
        {
            "created_at": "2019-06-24T07:21:10.030Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5208?focusedCommentId=16870879) by Artem KOZHEVNIKOV (ArtemK):*\nJust curiosity question :\u00a0what was the reasons to\u00a0have `python_to_arrow.cc` module in pure c++ and not in cython let say ? (To be honest, I did not feel myself confortable enough to contribute in c++...)\r\n\r\nPassing mask argument into `InferArrowType`\u00a0will also solve the case `_is_array_like(obj) is True` (or in this case the inference is based on pandas ) ?"
        },
        {
            "created_at": "2019-06-24T17:34:35.700Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5208?focusedCommentId=16871541) by Wes McKinney (wesm):*\nCython is a very limited language. In C++ we are able to take advantage of many language features like C++11 lambdas and code generation using templates that are not possible in Cython, and would yield a lot of code duplication and most likely worse performance.\r\n\r\nBTW, I highly recommend learning C+11. I believe we are only going to see _more_ Python packages that are a hybrid of C 11 (or C+14/17) and Python, with thin bindings either in Cython or pybind11.\r\n\r\n(edits: not sure why JIRA doesn't want to allow you to write the C + + programming language name)"
        },
        {
            "created_at": "2019-06-24T18:25:27.651Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5208?focusedCommentId=16871655) by Artem KOZHEVNIKOV (ArtemK):*\nyes, I'm aware about cython limitations and modern c++ features (looking sometimes very pythonic :). So if I get it right, in \"arrow\" every non-trivial\u00a0computational part is c++ based and cython is used only to wrap c++ api. Do you consider in some future to\u00a0switch to automatic bindings generation in arrow (like in pytorch with pybind11) and get rid\u00a0completely of cython (current c++ modules look still far from being auto-generated) ?"
        },
        {
            "created_at": "2019-06-24T23:08:44.980Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5208?focusedCommentId=16871871) by Wes McKinney (wesm):*\nI think we would consider using some amount of pybind11 but it's complicated \u2013 AFAIK pybind11 doesn't allow for a public C API for generated extensions, something that Cython allows. We have other projects that use pyarrow's Cython and C API, something that would otherwise cause us to have to write plain C extensions. "
        },
        {
            "created_at": "2019-06-25T00:24:32.525Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5208?focusedCommentId=16871891) by Wes McKinney (wesm):*\nIssue resolved by pull request 4677\n<https://github.com/apache/arrow/pull/4677>"
        }
    ]
}