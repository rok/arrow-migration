{
    "issue": {
        "title": "[Python] test_debug_memory_pool_disabled segfaulting on MacOS CI",
        "body": "***Note**: This issue was originally created as [ARROW-16873](https://issues.apache.org/jira/browse/ARROW-16873). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nObserved on master and many PRs, example: https://github.com/apache/arrow/runs/6991997196?check_suite_focus=true\r\n\r\nFrom a quick read, it's likely just that the stderr isn't necessarily empty as the test expects.\r\n\r\n```\n\r\n\r\n=================================== FAILURES ===================================\r\n_____________ test_debug_memory_pool_disabled[system_memory_pool] ______________\r\npool_factory = <built-in function system_memory_pool>\r\n    @pytest.mark.parametrize('pool_factory', supported_factories())\r\n    def test_debug_memory_pool_disabled(pool_factory):\r\n        res = run_debug_memory_pool(pool_factory.__name__, \"\")\r\n# The subprocess either returned successfully or was killed by a signal\r\n# (due to writing out of bounds), depending on the underlying allocator.\r\n        if os.name == \"posix\":\r\n            assert res.returncode <= 0\r\n        else:\r\n            res.check_returncode()\r\n>       assert res.stderr == \"\"\r\nE       assert 'Fatal Python...in <module>\\n' == ''\r\nE         + Fatal Python error: Segmentation fault\r\nE         + \r\nE         + Current thread 0x0000000102009e00 (most recent call first):\r\nE         +   File \"<string>\", line 12 in <module>\r\n/usr/local/lib/python3.9/site-packages/pyarrow/tests/test_memory.py:245: AssertionError\r\n```",
        "created_at": "2022-06-21T22:31:07.000Z",
        "updated_at": "2022-06-29T20:55:37.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-06-29T20:55:37.000Z"
    },
    "comments": [
        {
            "created_at": "2022-06-22T02:06:20.806Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16873?focusedCommentId=17557182) by Kouhei Sutou (kou):*\nThis may be related to ARROW-16717.\r\nSystem memory pool wasn't system `malloc()` before ARROW-16717. jemalloc was used since ARROW-16717.\r\nIt might change the behavior.\r\n"
        },
        {
            "created_at": "2022-06-22T07:53:01.196Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16873?focusedCommentId=17557310) by Antoine Pitrou (apitrou):*\nAh, it seems the Python faulthandler is enabled when running those tests.\r\n\r\nPerhaps make sure https://docs.python.org/3/using/cmdline.html#envvar-PYTHONFAULTHANDLER is unset?"
        },
        {
            "created_at": "2022-06-29T10:20:14.421Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16873?focusedCommentId=17560186) by Ra\u00fal Cumplido (raulcd):*\n`[~apitrou]` do you mean adding to the test something like?\r\n```java\n\r\nif not faulthandler.is_enabled():\r\n \u00a0 \u00a0assert res.stderr == \"\"\n```"
        },
        {
            "created_at": "2022-06-29T10:21:45.541Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16873?focusedCommentId=17560187) by Antoine Pitrou (apitrou):*\nNo, I mean clearing that environment variable when spawning the child process."
        },
        {
            "created_at": "2022-06-29T11:54:09.720Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16873?focusedCommentId=17560217) by Ra\u00fal Cumplido (raulcd):*\nIf I ensure PYTHONFAULTHANDLER is cleared before spawning the process, the test does not seg fault anymore but fails raising the following:\r\n```java\n\r\n> \u00a0 \u00a0 \u00a0 assert res.stderr == \"\"\r\nE \u00a0 \u00a0 \u00a0 assert 'Fatal Python...in <module>\\n' == ''\r\nE \u00a0 \u00a0 \u00a0 \u00a0 + Fatal Python error: Aborted\r\nE \u00a0 \u00a0 \u00a0 \u00a0 +\u00a0\r\nE \u00a0 \u00a0 \u00a0 \u00a0 + Current thread 0x0000000100d90e00 (most recent call first):\r\nE \u00a0 \u00a0 \u00a0 \u00a0 + \u00a0 File \"<string>\", line 12 in <module>\r\n/usr/local/lib/python3.9/site-packages/pyarrow/tests/test_memory.py:247: AssertionError\r\n----------------------------- Captured stderr call -----------------------------\r\nFatal Python error: Aborted\r\nCurrent thread 0x0000000100d90e00 (most recent call first):\r\n\u00a0 File \"<string>\", line 12 in <module> \n```\r\nSee: <https://github.com/apache/arrow/pull/13461>\r\nand the associated failure: <https://github.com/apache/arrow/runs/7110462373?check_suite_focus=true>\r\n\r\n\u00a0"
        },
        {
            "created_at": "2022-06-29T20:55:37.192Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16873?focusedCommentId=17560663) by Kouhei Sutou (kou):*\nIssue resolved by pull request 13461\n<https://github.com/apache/arrow/pull/13461>"
        }
    ]
}