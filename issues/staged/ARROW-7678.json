{
    "issue": {
        "title": "[C++][Parquet] setting TZ= in environment on Linux causes broken parquet",
        "body": "***Note**: This issue was originally created as [ARROW-7678](https://issues.apache.org/jira/browse/ARROW-7678). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen I set TZ=CST-8, or other timezone on Linux time columns are corrupted in my resulting parquet file.\r\n\r\n\u00a0\r\n\r\nBelow are the calls I use to define my schema:\r\n\r\n\u00a0\r\n```java\n\r\nPrimitiveNode::Make( columnName, Repetition::REQUIRED,\r\n LogicalType::Timestamp( true, LogicalType::TimeUnit::MICROS, false, false ),\r\n ::parquet::Type::INT64 ) );\r\nPrimitiveNode::Make( columnName,\r\n repetition,\r\n LogicalType::Time( true, LogicalType::TimeUnit::MICROS ),\r\n ::parquet::Type::INT64 ) );\r\n```\r\nI use an Int64Writer for both types. When reading, in this case using pandas with pyarrow, but also in C++, I get the following exception:\r\n```java\n\r\n File \"pyarrow/_parquet.pyx\", line 1136, in pyarrow._parquet.ParquetReader.read_all\r\n File \"pyarrow/error.pxi\", line 80, in pyarrow.lib.check_status\r\npyarrow.lib.ArrowIOError: Couldn't deserialize thrift: TProtocolException: Invalid data\r\nDeserializing page header failed.\n```\r\nSeems as if the column header must be defining a timestamp+timezone even though I manually set is_adjusted_to_utc.\r\n\r\n\u00a0\r\n\r\n\u00a0",
        "created_at": "2020-01-24T20:41:11.000Z",
        "updated_at": "2020-01-25T01:27:00.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-01-25T01:27:00.000Z"
    },
    "comments": [
        {
            "created_at": "2020-01-25T01:27:00.940Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7678?focusedCommentId=17023373) by Joshua Pedrick (jpedrick):*\nManaged to recreate the bug without setting TZ."
        }
    ]
}