{
    "issue": {
        "title": "[Java] Optimize BaseValueVector#computeCombinedBufferSize logic",
        "body": "***Note**: This issue was originally created as [ARROW-5705](https://issues.apache.org/jira/browse/ARROW-5705). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nNow in\u00a0BaseValueVector#computeCombinedBufferSize, it computes validity buffer size as follow:\r\n\r\n_roundUp8(getValidityBufferSizeFromCount(valueCount))_\r\n\r\nwhich can be\u00a0be expanded to\u00a0\r\n\r\n_(((valueCount + 7) >> 3 + 7) / 8) \\* 8_\r\n\r\nSeems there's no need to compute bufferSize first and expression above could be replaced with:\r\n\r\n_(valueCount + 63) / 64 \\* 8_\r\n\r\nIn this way, performance of\u00a0_computeCombinedBufferSize_ would be improved. Performance test:\r\n\r\nBefore:\r\nBaseValueVectorBenchmarks.testC_omputeCombinedBufferSize_ avgt 5\u00a04083.180 \u00b1 180.363 ns/op\r\n\r\nAfter:\r\n\r\nBaseValueVectorBenchmarks.testC_omputeCombinedBufferSize_\u00a0avgt 5 3808.635\u00a0\u00b1 162.347 ns/op\r\n\r\n\u00a0",
        "created_at": "2019-06-24T08:47:04.000Z",
        "updated_at": "2019-06-27T07:21:23.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-06-27T07:21:23.000Z"
    },
    "comments": [
        {
            "created_at": "2019-06-27T07:21:23.684Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5705?focusedCommentId=16873876) by Micah Kornfield (emkornfield@gmail.com):*\nIssue resolved by pull request 4671\n<https://github.com/apache/arrow/pull/4671>"
        }
    ]
}