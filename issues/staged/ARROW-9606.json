{
    "issue": {
        "title": "[C++][Dataset] in expressions don't work with >1 partition levels",
        "body": "***Note**: This issue was originally created as [ARROW-9606](https://issues.apache.org/jira/browse/ARROW-9606). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen filtering nested partitions using %in%, no rows are returned, both for Hive and non-Hive partitioning. == and other comparison operators do work, and the problem also goes away when only one partition level is declared in the schema.\r\n\r\nThis is not caused by the dplyr wrappers, the lower-level functions have the same problem.\r\n\r\n```Java\n\r\nlibrary(arrow)\r\n#> \r\n#> Attaching package: 'arrow'\r\n#> The following object is masked from 'package:utils':\r\n#> \r\n#>     timestamp\r\nlibrary(dplyr)\r\n#> \r\n#> Attaching package: 'dplyr'\r\n#> The following objects are masked from 'package:stats':\r\n#> \r\n#>     filter, lag\r\n#> The following objects are masked from 'package:base':\r\n#> \r\n#>     intersect, setdiff, setequal, union\r\n\r\n## Write files\r\npqdir <- file.path(tempdir(), paste(sample(letters, 6), collapse = \"\"))\r\n\r\nfor (foo in 0:1) {\r\n  for (faa in 0:1) {\r\n    fdir <- file.path(pqdir, letters[foo + 1], letters[faa + 1])\r\n    dir.create(fdir, recursive = TRUE)\r\n    rng <- (foo * 5 + faa + 1):(foo * 5 + faa + 5)\r\n    write_parquet(data.frame(col = letters[rng]),\r\n                         file.path(fdir, \"file.parquet\"))\r\n  }\r\n}\r\n\r\n## What doesn't work: using %in% with both partitions defined\r\nds <- open_dataset(pqdir,\r\n                   partitioning = schema(foo = string(), faa = string()))\r\n\r\ncollect(filter(ds, foo %in% \"a\"))\r\n#> # A tibble: 0 x 3\r\n#> # ... with 3 variables: col <chr>, foo <chr>, faa <chr>\r\n\r\n## == does work\r\ncollect(filter(ds, foo == \"a\"))\r\n#> # A tibble: 10 x 3\r\n#>    col   foo   faa  \r\n#>    <chr> <chr> <chr>\r\n#>  1 a     a     a    \r\n#>  2 b     a     a    \r\n#>  3 c     a     a    \r\n#>  4 d     a     a    \r\n#>  5 e     a     a    \r\n#>  6 b     a     b    \r\n#>  7 c     a     b    \r\n#>  8 d     a     b    \r\n#>  9 e     a     b    \r\n#> 10 f     a     b\r\n\r\n## Declaring only one partition does work\r\nds <- open_dataset(pqdir, partitioning = schema(foo = string()))\r\ncollect(filter(ds, foo %in% \"a\"))\r\n#> # A tibble: 10 x 2\r\n#>    col   foo  \r\n#>    <chr> <chr>\r\n#>  1 a     a    \r\n#>  2 b     a    \r\n#>  3 c     a    \r\n#>  4 d     a    \r\n#>  5 e     a    \r\n#>  6 b     a    \r\n#>  7 c     a    \r\n#>  8 d     a    \r\n#>  9 e     a    \r\n#> 10 f     a\r\n\r\n## The lower-level API has the same problem\r\nds <- open_dataset(pqdir,\r\n                   partitioning = schema(foo = string(), faa = string()))\r\n\r\nflt <- Expression$in_(Expression$field_ref(\"foo\"), Array$create(\"a\"))\r\n\r\nsc <- Scanner$create(ds, filter = flt)\r\nsc$ToTable()\r\n#> Table\r\n#> 0 rows x 3 columns\r\n#> $col <string>\r\n#> $foo <string>\r\n#> $faa <string>\r\n```",
        "created_at": "2020-07-31T08:46:23.000Z",
        "updated_at": "2020-08-10T17:42:06.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: R",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-08-10T17:41:50.000Z"
    },
    "comments": [
        {
            "created_at": "2020-07-31T10:33:55.965Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9606?focusedCommentId=17168621) by Maarten Demeyer (mpjdem):*\nI should add that this doesn't happen when the partition column is also part of the table. Perhaps the file structure in this example is just incorrectly created then - but the behaviour is still inconsistent without any warning."
        },
        {
            "created_at": "2020-07-31T16:03:16.128Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9606?focusedCommentId=17168969) by Neal Richardson (npr):*\nThanks a lot for this detailed report. We'll take a look."
        },
        {
            "created_at": "2020-08-04T08:36:44.186Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9606?focusedCommentId=17170652) by Joris Van den Bossche (jorisvandenbossche):*\nI see this as well with a Python reproducer:\r\n```python\n\r\nimport pyarrow as pa\r\nimport pyarrow.parquet as pq\r\nimport pyarrow.dataset as ds\r\n\r\n# works OK with a single partition field\r\ntable = pa.table({'part': ['a', 'b']*10, 'col': np.arange(20)}) \r\npq.write_to_dataset(table, \"test_partitioned_filter_in\", partition_cols=[\"part\"])   \r\ndataset = ds.dataset(\"test_partitioned_filter_in/\", partitioning=\"hive\")                                                                                                                                  \r\n\r\nIn [41]: dataset.to_table(filter=ds.field(\"part\").isin([\"a\"])).to_pandas()                                                                                                                                         \r\nOut[41]: \r\n   col part\r\n0    0    a\r\n1    2    a\r\n2    4    a\r\n3    6    a\r\n4    8    a\r\n5   10    a\r\n6   12    a\r\n7   14    a\r\n8   16    a\r\n9   18    a\r\n\r\n# fails with multiple partition columns\r\ntable = pa.table({'part1': ['a', 'b']*10, 'part2': [1, 1, 2, 2]*5, 'col': np.arange(20)})  \r\npq.write_to_dataset(table, \"test_partitioned_filter_in2\", partition_cols=[\"part1\", \"part2\"])  \r\ndataset2 = ds.dataset(\"test_partitioned_filter_in2/\", partitioning=\"hive\")                                                                                                                                \r\n\r\nIn [45]: dataset2.to_table(filter=ds.field(\"part1\").isin([\"a\"])).to_pandas()                                                                                                                                       \r\nOut[45]: \r\nEmpty DataFrame\r\nColumns: [col, part1, part2]\r\nIndex: []\r\n\r\nIn [46]: dataset2.to_table(filter=ds.field(\"part1\") == \"a\").to_pandas()                                                                                                                                            \r\nOut[46]: \r\n   col part1  part2\r\n0    0     a      1\r\n1    4     a      1\r\n2    8     a      1\r\n3   12     a      1\r\n4   16     a      1\r\n5    2     a      2\r\n6    6     a      2\r\n7   10     a      2\r\n8   14     a      2\r\n9   18     a      2\r\n\r\n```"
        },
        {
            "created_at": "2020-08-10T17:41:50.304Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9606?focusedCommentId=17174950) by Neal Richardson (npr):*\nIssue resolved by pull request 7911\n<https://github.com/apache/arrow/pull/7911>"
        }
    ]
}