{
    "issue": {
        "title": "[Python] Add Array convenience method to create \"masked\" view with different validity bitmap",
        "body": "***Note**: This issue was originally created as [ARROW-7071](https://issues.apache.org/jira/browse/ARROW-7071). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nNB: I'm not sure what kind of pitfalls there might be if replacing an existing validity bitmap and exposing some previously-null values",
        "created_at": "2019-11-05T23:38:00.000Z",
        "updated_at": "2022-07-12T14:04:17.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2019-11-06T13:07:54.375Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7071?focusedCommentId=16968345) by Joris Van den Bossche (jorisvandenbossche):*\n> NB: I'm not sure what kind of pitfalls there might be if replacing an existing validity bitmap and exposing some previously-null values\r\n\r\nI would say this is the responsibility of the user then? \r\nWhat could happen? Are there potentially cases where interpreting the memory of a previously-null value as a value leads to segfaults? Like if you would do:\r\n\r\n```Java\n\r\nIn [62]: a = pa.array([1, None, 3])                                                                                                                                                                                \r\n\r\nIn [63]: np.frombuffer(a.buffers()[1], dtype=\"int64\")                                                                                                                                                              \r\nOut[63]: array([1, 0, 3])\r\n```"
        },
        {
            "created_at": "2019-11-06T13:20:18.567Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7071?focusedCommentId=16968354) by Joris Van den Bossche (jorisvandenbossche):*\nNow, I think the main question is: what API could we offer for this?\r\n\r\n- A method on Array? Something like `array.set_validity_bitmap(..)` or `array.set_null_bitmap(..)` (but not sure if it needs to be that clearly exposed)\n- A settable attribute like `array.null_bitmap`\n- A function to create a new array from a given array + bitmap? This could be similar to `Array.from_buffers`, but then a bit more convenient to use (as currently you can already use that to achieve this purpose)\n- Alternative could be to expand `pa.array(values, mask=[..])` to accept a pyarrow array as values, and then use the `mask` keyword to specify the nulls as a boolean mask (although the current behaviour here is to have the final bitmap be a combination of nulls in the values and the mask, so this is not a way to override the bitmap, but maybe that's actually good)\n  \n  A way to avoid the issue of \"previously-null values\" could also be to only allow setting the bitmap if there was not yet one before.\n  \n  That would be enough for my original use case for this, where I want to create a StructArray from two pyarrow arrays, but also give it a null bitmap:\n  \n  ```Java\n  \n  pa.StructArray.from_arrays([pa.array([1, 2, 3]), pa.array([2, 3, 4])], names=['a', 'b'])\n  ```\n  \n  For this very specific case, an option could also be to be able to pass a bitmap or mask keyword to `pa.StructArray.from_arrays`, but that's of course not a general solution for other types."
        },
        {
            "created_at": "2019-11-06T16:16:04.523Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7071?focusedCommentId=16968479) by Wes McKinney (wesm):*\nIt'd be best to not mutate any existing arrays, but instead to do something like\r\n\r\n```Java\n\r\nmasked_arr = arr.with_validity_bitmap(bits)\r\n```\r\n\r\nI'm a bit ambivalent on expanding the usage of `pyarrow.array` but that might not be too bad either. These need not be mutually exclusive"
        },
        {
            "created_at": "2019-11-12T07:34:05.135Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7071?focusedCommentId=16972142) by Uwe Korn (uwe):*\nAPI-wise I would prefer Wes' suggestion. I have had the use case before that I need to use a different validity bitmap but in my case I only added nulls and didn't expose undefined values."
        },
        {
            "created_at": "2019-11-12T07:50:13.065Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7071?focusedCommentId=16972151) by Joris Van den Bossche (jorisvandenbossche):*\nWould it then be OK to say that \"it is the responsibility of the user to not expose undefined values\" ? (so that you are only adding nulls) Or do we need to guard for this?\r\n\r\n"
        },
        {
            "created_at": "2019-11-12T10:52:10.050Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7071?focusedCommentId=16972270) by Uwe Korn (uwe):*\nI would put that to the user, replacing valid bitmaps is something that is probably only done by expert users."
        },
        {
            "created_at": "2022-07-12T14:04:17.622Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7071?focusedCommentId=17565511) by @toddfarmer:*\nThis issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned. Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon."
        }
    ]
}