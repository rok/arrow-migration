{
    "issue": {
        "title": "[C++] Possibly deprecate public APIs that use MutableBuffer",
        "body": "***Note**: This issue was originally created as [ARROW-1402](https://issues.apache.org/jira/browse/ARROW-1402). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI am not sure it is useful to expose `arrow::MutableBuffer` as the out argument in functions like `arrow::AllocateBuffer`. See e.g. http://arrow.apache.org/docs/cpp/namespacearrow.html#a4e4daf985e41d6879c9dbb0131157c51\n\nIn my experience this is more of a nuisance than anything, as mutability is a dynamic property of buffers (we have `buffer->is_mutable()` on base instances). If we were doing a lot of compile time reasoning about buffers, that would be a different story, but we are not. \n\nI don't think we should nix the MutableBuffer class, just return pointers to base from functions. We can still get it back with `std::dynamic_pointer_cast`. ",
        "created_at": "2017-08-23T02:42:27.000Z",
        "updated_at": "2017-08-29T08:27:04.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2017-08-29T08:27:03.000Z"
    },
    "comments": [
        {
            "created_at": "2017-08-28T20:17:44.971Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1402?focusedCommentId=16144284) by Wes McKinney (wesm):*\nPR: https://github.com/apache/arrow/pull/1001"
        },
        {
            "created_at": "2017-08-29T08:27:04.005Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1402?focusedCommentId=16144920) by Uwe Korn (uwe):*\nIssue resolved by pull request 1001\n<https://github.com/apache/arrow/pull/1001>"
        }
    ]
}