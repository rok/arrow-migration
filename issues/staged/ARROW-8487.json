{
    "issue": {
        "title": "[FlightRPC][C++] Make it possible to target a specific payload size",
        "body": "***Note**: This issue was originally created as [ARROW-8487](https://issues.apache.org/jira/browse/ARROW-8487). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\ngRPC by default limits message sizes on the wire. While Flight in turn disables these by default, they're still useful to be able to control memory consumption. A well-behaved client/server may wish to split up writes to respect these limits. However, right now, there's no way to measure the memory usage of what you're about to write without serializing it.\r\n\r\nWith ARROW-5377, we can in theory avoid this by having the writer take control of serialization, producing the IpcPayload, then measuring the size and writing the payload if the size is as desired. However, Flight doesn't provide such a low-level mechanism yet - we'd need to open that up as well.",
        "created_at": "2020-04-16T18:03:30.000Z",
        "updated_at": "2020-06-11T18:31:46.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: FlightRPC",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-06-11T18:31:35.000Z"
    },
    "comments": [
        {
            "created_at": "2020-06-09T14:49:30.374Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8487?focusedCommentId=17129358) by David Li (lidavidm):*\nWe can expose IpcPayload instead in ARROW-5377."
        },
        {
            "created_at": "2020-06-11T18:31:35.443Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8487?focusedCommentId=17133566) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 7398\n<https://github.com/apache/arrow/pull/7398>"
        }
    ]
}