{
    "issue": {
        "title": "[C++] Create work stealing implementation of generalized ThreadPool",
        "body": "***Note**: This issue was originally created as [ARROW-12902](https://issues.apache.org/jira/browse/ARROW-12902). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nGiven the chase-lev deque and the generalized thread pool we are now able to create a work stealing version.\u00a0 This issue forces us to address some thorny issues that don't concern academic thread pools.\r\n\r\nFor example, we need to allow tasks for the thread pool to be submitted from outside the thread pool itself.\u00a0 An academic work-stealing thread queue has one queue per thread and each thread adds incoming tasks to its own queue.\u00a0 If the task adding queue isn't in the thread pool then it doesn't have a queue.\u00a0 This is a tricky issue because it implies a queue with multiple producers and multiple consumers.\r\n\r\nThere's a couple of ways to tackle this but generally it means that the work stealing thread pool is going to have to rely on locking in a number of places.\u00a0 Ideally the hot path can be kept lock free.",
        "created_at": "2021-05-28T03:10:33.000Z",
        "updated_at": "2022-07-12T14:04:54.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: task"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-07-12T14:04:54.077Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12902?focusedCommentId=17565829) by @toddfarmer:*\nThis issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned. Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon."
        }
    ]
}