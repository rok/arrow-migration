{
    "issue": {
        "title": "[Python] Serializing sparse torch tensors",
        "body": "***Note**: This issue was originally created as [ARROW-4452](https://issues.apache.org/jira/browse/ARROW-4452). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nUsing the pytorch serialization handler on sparse Tensors:\r\n```java\n\r\nimport torch\r\ni = torch.LongTensor([[0, 2], [1, 0], [1, 2]])\r\nv = torch.FloatTensor([3,\u00a0 \u00a0 \u00a0 4,\u00a0 \u00a0 \u00a0 5\u00a0 \u00a0 ])\r\ntensor = torch.sparse.FloatTensor(i.t(), v, torch.Size([2,3]))\r\n\r\npyarrow.serialization.register_torch_serialization_handlers(pyarrow.serialization._default_serialization_context)\r\n\r\ns = pyarrow.serialize(tensor, context=pyarrow.serialization._default_serialization_context)\u00a0\n```\r\nProduces this result:\r\n```java\n\r\nTypeError: can't convert sparse tensor to numpy. Use Tensor.to_dense() to convert to a dense tensor first.\n```\r\nWe should provide a way to serialize sparse torch tensors, especially now that we are getting support for sparse Tensors.",
        "created_at": "2019-02-01T20:15:52.000Z",
        "updated_at": "2019-06-07T15:26:18.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-06-07T15:26:01.000Z"
    },
    "comments": [
        {
            "created_at": "2019-06-07T15:26:01.038Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4452?focusedCommentId=16858735) by Wes McKinney (wesm):*\nIssue resolved by pull request 3542\n<https://github.com/apache/arrow/pull/3542>"
        }
    ]
}