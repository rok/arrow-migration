{
    "issue": {
        "title": "[Rust] [DataFusion] Implement string literal expression",
        "body": "***Note**: This issue was originally created as [ARROW-6666](https://issues.apache.org/jira/browse/ARROW-6666). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nImplement string literal expression in the new physical query plan. It is already implemented in the code that executed directly from the logical plan so it should largely be a copy and paste exercise.",
        "created_at": "2019-09-23T14:10:02.000Z",
        "updated_at": "2020-02-24T14:30:31.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Component: Rust - DataFusion",
            "Type: task"
        ],
        "closed": true,
        "closed_at": "2020-02-24T14:30:11.000Z"
    },
    "comments": [
        {
            "created_at": "2019-10-06T00:39:32.862Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6666?focusedCommentId=16945194) by Davis Silverman (sinistersnare):*\nHi, I would like to take this. Ill take a look at the logical plan stuff and ask any questions if I have any. Where is the best place to do that, just the mailing list?"
        },
        {
            "created_at": "2019-10-06T18:12:22.440Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6666?focusedCommentId=16945419) by Andy Grove (andygrove):*\nProbably best to just ask here if the questions are specific to this JIRA, or the mailing list if they are more general."
        },
        {
            "created_at": "2019-10-09T03:39:55.022Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6666?focusedCommentId=16947336) by Davis Silverman (sinistersnare):*\nSorry, I have been a little slow on working on this. I have some questions on what is needed exactly.\r\n\r\nAre the expressions you are looking for like `SELECT c1 FROM test WHERE c1 = 'Hello';`\\``\r\n\r\nor is it something else? Which code whereabouts in the logical plan are you looking to crib from? Sorry, thanks :)\r\n\r\n\u00a0\r\n\r\n\u00a0"
        },
        {
            "created_at": "2019-10-09T03:56:30.544Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6666?focusedCommentId=16947343) by Andy Grove (andygrove):*\nYes, exactly that ... there are a few places where we can use string literals (and we can make separate stories) ...\r\n\r\nProjection: SELECT 'hello' FROM test ... not too useful, but valid\r\n\r\nSelection: SELECT c1 FROM test WHERE c1 = 'Hello' OR c1 < 'Goodbye'\r\n\r\nAggregate: SELECT COUNT(name), MIN(name), MAX(name) FROM test\r\n\r\n\u00a0\r\n\r\n\u00a0"
        },
        {
            "created_at": "2019-10-09T04:47:36.952Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6666?focusedCommentId=16947357) by Davis Silverman (sinistersnare):*\nLooking more into this, it seems like more difficulty than I am prepared to take on right now. It seems I would need to do a lot of plumbing to allow the Utf8 type to be allowed, so i tried to create an ArrowPrimitiveType for some Utf8Type, but there isnt any examples on how to do this for a variable-sized datatype. So maybe I wont take it after all! Sorry for wasting time here, I see this is the last task in 5227, so feel free to take it if you want."
        },
        {
            "created_at": "2019-10-09T04:57:06.491Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6666?focusedCommentId=16947362) by Davis Silverman (sinistersnare):*\nHah, I actually worked on this a teensy bit more, and got up to implementing `ArrowNativeType for String`, but `ArrowNativeType: Copy`, so it seems like String cannot be used. Anyways, still feel free to take this."
        },
        {
            "created_at": "2019-10-09T08:11:11.741Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6666?focusedCommentId=16947432) by Andy Grove (andygrove):*\nI realize now that we didn't ever support this .... this will basically involve a different code path than how we deal with primitive types ... I have moved this out of the ARROW-5227 story and can take a look at this soon and maybe just show you some sample code if you're still interested in taking this on."
        },
        {
            "created_at": "2019-10-14T20:43:40.197Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6666?focusedCommentId=16951347) by Kyle McCarthy (kylemccarthy):*\nDoes this require for rust's arrow to implement a [StringType\\|[https://arrow.apache.org/docs/cpp/api/datatype.html#classarrow_1_1_string_type]] similar to the one in the C++ implementation?\u00a0"
        },
        {
            "created_at": "2020-02-10T21:36:24.893Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6666?focusedCommentId=17033963) by Morgan Cassels (m_cassels):*\n`[~andygrove]` Has anyone had a chance to look further at this issue? String literal selection (SELECT c1 FROM test WHERE c1 = 'Hello' ) functionality would be very useful to me. If there is a plan/idea for how this should be implemented I would be happy to try working on it."
        },
        {
            "created_at": "2020-02-21T15:48:39.384Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6666?focusedCommentId=17041965) by Max Burke (m18e):*\nWe've put together a PR for implementing this functionality:\u00a0<https://github.com/apache/arrow/pull/6469>"
        },
        {
            "created_at": "2020-02-24T14:30:11.634Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6666?focusedCommentId=17043564) by Krisztian Szucs (kszucs):*\nIssue resolved by pull request 6469\n<https://github.com/apache/arrow/pull/6469>"
        }
    ]
}