{
    "issue": {
        "title": "[C++] Add cast to Null from any type?",
        "body": "***Note**: This issue was originally created as [ARROW-15237](https://issues.apache.org/jira/browse/ARROW-15237). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe \"cannot cast to null\" error came up during a dataset operation in this SO question: https://stackoverflow.com/questions/70566660/parquet-with-null-columns-on-pyarrow/70568419#70568419\r\n\r\nAlthough I suspect casting to null is generally a sign that the user is doing something wrong (why throw away data?) there may be some corner cases where it is desired and it may be nice just for consistency.\r\n\r\nSimple reproduction (admittedly, the best answer here would probably be to use the schema from tab2):\r\n\r\n```Java\n\r\nimport os\r\n\r\nimport pyarrow as pa\r\nimport pyarrow.dataset as ds\r\nimport pyarrow.parquet as pq\r\n\r\ntab = pa.Table.from_pydict({'x': [1, 2, 3], 'y': [None, None, None]})\r\ntab2 = pa.Table.from_pydict({'x': [4, 5, 6], 'y': ['x', 'y', 'z']})\r\n\r\nos.makedirs('/tmp/null_first_dataset', exist_ok=True)\r\npq.write_table(tab, '/tmp/null_first_dataset/0.parquet')\r\npq.write_table(tab2, '/tmp/null_first_dataset/1.parquet')\r\n\r\ndataset = ds.dataset('/tmp/null_first_dataset')\r\ntab = dataset.to_table()\r\nprint(tab)\r\n``` ",
        "created_at": "2022-01-03T16:47:22.000Z",
        "updated_at": "2022-01-03T17:27:35.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-01-03T17:27:35.000Z"
    },
    "comments": [
        {
            "created_at": "2022-01-03T16:48:37.258Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15237?focusedCommentId=17468091) by Weston Pace (westonpace):*\n`[~lidavidm]` any opinion?"
        },
        {
            "created_at": "2022-01-03T16:56:18.724Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15237?focusedCommentId=17468097) by David Li (lidavidm):*\nI think we can implement this, but I worry we'd just be shifting around the kinds of questions we get if we just add the cast and call it a day.\r\n\r\nWe could try to add a more explicit error for this case, too (\"Column 'foo' is type 'null' in dataset schema, but is type 'utf8' in fragment 'B.parquet'; set unify_schemas=True or provide an explicit schema to avoid the mismatch\") - that said, it might be rather hard to actually detect this and return a reasonable error (also, 1) should this scenario be in the cookbook or docs somewhere and 2) how do we feel about linking to such docs in error messages?)."
        },
        {
            "created_at": "2022-01-03T17:06:30.843Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15237?focusedCommentId=17468104) by Weston Pace (westonpace):*\nRight, I agree this doesn't help much with the SO question.  We would still get the question \"I read this dataset and my entire column is null\" and I wouldn't really bother trying to detect this type of situation to give a better error message.\r\n\r\nI suppose I was wondering if there would ever be a valid case for a cast to null in a query.\r\n\r\nAs for linking to docs in the error messages, my gut reaction is \"don't do that\" just to avoid introducing the coupling (e.g. in case we ever change URL schemes) but I probably wouldn't oppose it."
        },
        {
            "created_at": "2022-01-03T17:09:14.217Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15237?focusedCommentId=17468106) by David Li (lidavidm):*\nAgreed, the coupling would be annoying. (I think I've seen projects that include a link to a custom URL shortener or something in the error messages, but that's a lot of setup.)\r\n\r\nAs for whether there's a valid case: I can't quite imagine one where you would do that instead of just dropping the column entirely. Unless you really only need the length (and not even validity) for some reason?"
        },
        {
            "created_at": "2022-01-03T17:27:22.918Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15237?focusedCommentId=17468111) by Weston Pace (westonpace):*\nOk, I'll close this for now and we can reopen should a valid case pop up."
        }
    ]
}