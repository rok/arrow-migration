{
    "issue": {
        "title": "[C++] max_partitions < 0 is accepted with no error",
        "body": "***Note**: This issue was originally created as [ARROW-12373](https://issues.apache.org/jira/browse/ARROW-12373). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nfrom https://github.com/apache/arrow/blob/master/cpp/src/arrow/dataset/file_base.cc#L377:\r\n`if (groups.batches.size() > static_cast<size_t>(state.write_options.max_partitions)) {`}\r\n\r\nWe cast `state.write_options.max_partitions` to an unsigned integer without checking it. So if a negative number is supplied, there is no error.\r\n\r\nWe should either:\r\n  \\* check for negatives (and 0?) and error appropriately\r\n  \\* document that negative numbers will result in some large positive number of partitions being the max.\r\n\r\n\r\nThis came up in working on ARROW-12315, and from that branch, one would run the following to see the behavior:\r\n\r\n\r\n```java\n\r\nlibrary(dplyr)\r\nlibrary(arrow)\r\n\r\ndir.create(\"mydir\")\r\n\r\nmtcars %>%\r\n      group_by(cyl) %>%\r\n      write_dataset(\"mydir\", format = \"parquet\", max_partitions = -1)\r\n```\r\n\r\n",
        "created_at": "2021-04-13T21:51:16.000Z",
        "updated_at": "2021-05-21T23:45:41.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-05-21T23:45:41.000Z"
    },
    "comments": [
        {
            "created_at": "2021-05-21T23:45:32.859Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12373?focusedCommentId=17349563) by Mauricio 'Pach\u00e1' Vargas Sep\u00falveda (pachamaltese):*\nARROW-12315 added a verification step that warns about this. "
        }
    ]
}