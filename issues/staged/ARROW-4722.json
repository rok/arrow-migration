{
    "issue": {
        "title": "[C++] Implement Bitmap class to modularize handling of bitmaps",
        "body": "***Note**: This issue was originally created as [ARROW-4722](https://issues.apache.org/jira/browse/ARROW-4722). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThis could be a simple view or it could own a `shared_ptr<Buffer>`. In either case, it would greatly simplify situations where a `pointer, offset, length` are currently passed",
        "created_at": "2019-02-28T21:13:01.000Z",
        "updated_at": "2019-11-22T21:12:02.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-11-22T21:12:02.000Z"
    },
    "comments": [
        {
            "created_at": "2019-07-23T20:05:20.042Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4722?focusedCommentId=16891335) by Wes McKinney (wesm):*\nI have run into this issue in ARROW-3772 where Parquet decoders currently pass around bitmaps in pieces (see eg https://github.com/apache/arrow/blob/master/cpp/src/parquet/encoding.h#L56). Currently we allow passing null/not-null markers using a bytemap in the builder classes, but not a bitmap. I propose that we have a simple bitmap object with structure like:\r\n\r\n```Java\n\r\nclass Bitmap {\r\n  const uint8_t* data_;\r\n  int64_t length_;\r\n  int64_t offset_;\r\n};\r\n```\r\n\r\nI'm not sure how to best handle non-const bitmaps, though. We might have to have\r\n\r\n```Java\n\r\nclass MutableBitmap : public Bitmap {\r\n  ...\r\n};\r\n```\r\n\r\nA first place where this would be useful to have is as an alternative to any ArrayBuilder method that currently takes `valid_bytes`, like\r\n\r\nhttps://github.com/apache/arrow/blob/master/cpp/src/arrow/array/builder_primitive.h#L119\r\n\r\n`Bitmap` can have helper methods `GetReader` and `GetWriter` for constructing `BitmapReader` and `BitmapWriter` respectively"
        },
        {
            "created_at": "2019-11-20T14:53:34.343Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4722?focusedCommentId=16978487) by Antoine Pitrou (apitrou):*\nARROW-6396 added a `Bitmap` class to `bit_util.h` that more or less fits the bill, should we close this?"
        }
    ]
}