{
    "issue": {
        "title": "[JAVA] enhance AllocationListener with an onFailedAllocation() call",
        "body": "***Note**: This issue was originally created as [ARROW-2696](https://issues.apache.org/jira/browse/ARROW-2696). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIf an allocation fails, there might be an action taken by user code that will free up some memory before the allocation can be retried again. This action could include flushing some temporary buffers, getting rid of some temporarily cached data, or even spilling state to disk.\r\n\r\nToday's code is forced to catch out-of-memory exceptions, and then retry the operation at a high level. A more elegant way to do this is to have a callback whenever allocation failed. The callback would inform the allocator whether or not to retry the allocation.\r\n\r\nSince the allocator already has an AllocationListener, it makes sense to enhance the existing listener with a new method.\r\n\r\n`The proposed signature is:`\r\n\r\n`\u00a0 boolean onAllocationFailed(long allocationSize);`",
        "created_at": "2018-06-11T17:16:38.000Z",
        "updated_at": "2018-07-27T18:43:18.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2018-07-02T17:57:52.000Z"
    },
    "comments": [
        {
            "created_at": "2018-07-02T17:57:52.874Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2696?focusedCommentId=16530243) by Siddharth Teotia (siddteotia):*\nResolved with PR\u00a0https://github.com/apache/arrow/pull/2133"
        }
    ]
}