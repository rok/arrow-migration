{
    "issue": {
        "title": "[CI] Nightly turbodbc build is failing (C++ compilation error)",
        "body": "***Note**: This issue was originally created as [ARROW-15997](https://issues.apache.org/jira/browse/ARROW-15997). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSee eg https://github.com/ursacomputing/crossbow/runs/5637809188?check_suite_focus=true\r\n\r\nThe error seems related to boost (and not Arrow), and happens in the C++ code of turbodbc. But it is strange that it happens in both the latest and master turbodbc build (so it's not caused by a change on turbodbc's side). And I also didn't see a change in the boost version compared to the last successful build.\r\n\r\ncc `[~uwe]`\r\n\r\n```Java\n\r\n [102/156] Building CXX object cpp/turbodbc/Test/CMakeFiles/turbodbc_test.dir/tests/field_translator_test.cpp.o\r\nFAILED: cpp/turbodbc/Test/CMakeFiles/turbodbc_test.dir/tests/field_translator_test.cpp.o \r\n/opt/conda/envs/arrow/bin/x86_64-conda-linux-gnu-c++  -I/turbodbc/cpp/turbodbc/Library -I/turbodbc/cpp/turbodbc/../cpp_odbc/Library -I/turbodbc/cpp/turbodbc/Test -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /opt/conda/envs/arrow/include -Wall -Wextra -g -O0 -pedantic   -std=c++11 -MD -MT cpp/turbodbc/Test/CMakeFiles/turbodbc_test.dir/tests/field_translator_test.cpp.o -MF cpp/turbodbc/Test/CMakeFiles/turbodbc_test.dir/tests/field_translator_test.cpp.o.d -o cpp/turbodbc/Test/CMakeFiles/turbodbc_test.dir/tests/field_translator_test.cpp.o -c /turbodbc/cpp/turbodbc/Test/tests/field_translator_test.cpp\r\nIn file included from /opt/conda/envs/arrow/include/boost/type_index/stl_type_index.hpp:32,\r\n                 from /opt/conda/envs/arrow/include/boost/type_index.hpp:29,\r\n                 from /opt/conda/envs/arrow/include/boost/variant/variant.hpp:21,\r\n                 from /turbodbc/cpp/turbodbc/Library/turbodbc/field.h:3,\r\n                 from /turbodbc/cpp/turbodbc/Library/turbodbc/field_translator.h:3,\r\n                 from /turbodbc/cpp/turbodbc/Test/tests/field_translator_test.cpp:1:\r\n/opt/conda/envs/arrow/include/boost/optional/optional.hpp: In instantiation of 'std::basic_ostream<_CharT, _Traits>& boost::operator<<(std::basic_ostream<_CharT, _Traits>&, const boost::optional_detail::optional_tag&) [with CharType = char; CharTrait = std::char_traits<char>]':\r\n/opt/conda/envs/arrow/include/gtest/gtest-printers.h:215:9:   required from 'static void testing::internal::internal_stream_operator_without_lexical_name_lookup::StreamPrinter::PrintValue(const T&, std::ostream*) [with T = boost::optional<boost::variant<long int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, double, boost::gregorian::date, boost::posix_time::ptime> >; <template-parameter-1-2> = void; <template-parameter-1-3> = std::basic_ostream<char>&; std::ostream = std::basic_ostream<char>]'\r\n/opt/conda/envs/arrow/include/gtest/gtest-printers.h:312:22:   required from 'void testing::internal::PrintWithFallback(const T&, std::ostream*) [with T = boost::optional<boost::variant<long int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, double, boost::gregorian::date, boost::posix_time::ptime> >; std::ostream = std::basic_ostream<char>]'\r\n/opt/conda/envs/arrow/include/gtest/gtest-printers.h:441:30:   required from 'void testing::internal::PrintTo(const T&, std::ostream*) [with T = boost::optional<boost::variant<long int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, double, boost::gregorian::date, boost::posix_time::ptime> >; std::ostream = std::basic_ostream<char>]'\r\n/opt/conda/envs/arrow/include/gtest/gtest-printers.h:691:12:   required from 'static void testing::internal::UniversalPrinter<T>::Print(const T&, std::ostream*) [with T = boost::optional<boost::variant<long int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, double, boost::gregorian::date, boost::posix_time::ptime> >; std::ostream = std::basic_ostream<char>]'\r\n/opt/conda/envs/arrow/include/gtest/gtest-printers.h:980:30:   required from 'void testing::internal::UniversalPrint(const T&, std::ostream*) [with T = boost::optional<boost::variant<long int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, double, boost::gregorian::date, boost::posix_time::ptime> >; std::ostream = std::basic_ostream<char>]'\r\n/opt/conda/envs/arrow/include/gtest/gtest-printers.h:865:19:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]\r\n/opt/conda/envs/arrow/include/gtest/gtest-printers.h:334:36:   required from 'static std::string testing::internal::FormatForComparison<ToPrint, OtherOperand>::Format(const ToPrint&) [with ToPrint = boost::optional<boost::variant<long int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, double, boost::gregorian::date, boost::posix_time::ptime> >; OtherOperand = boost::optional<boost::variant<long int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, double, boost::gregorian::date, boost::posix_time::ptime> >; std::string = std::__cxx11::basic_string<char>]'\r\n/opt/conda/envs/arrow/include/gtest/gtest-printers.h:415:45:   required from 'std::string testing::internal::FormatForComparisonFailureMessage(const T1&, const T2&) [with T1 = boost::optional<boost::variant<long int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, double, boost::gregorian::date, boost::posix_time::ptime> >; T2 = boost::optional<boost::variant<long int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, double, boost::gregorian::date, boost::posix_time::ptime> >; std::string = std::__cxx11::basic_string<char>]'\r\n/opt/conda/envs/arrow/include/gtest/gtest.h:1527:53:   required from 'testing::AssertionResult testing::internal::CmpHelperEQFailure(const char*, const char*, const T1&, const T2&) [with T1 = boost::optional<boost::variant<long int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, double, boost::gregorian::date, boost::posix_time::ptime> >; T2 = boost::optional<boost::variant<long int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, double, boost::gregorian::date, boost::posix_time::ptime> >]'\r\n/opt/conda/envs/arrow/include/gtest/gtest.h:1549:28:   required from 'testing::AssertionResult testing::internal::CmpHelperEQ(const char*, const char*, const T1&, const T2&) [with T1 = boost::optional<boost::variant<long int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, double, boost::gregorian::date, boost::posix_time::ptime> >; T2 = boost::optional<boost::variant<long int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, double, boost::gregorian::date, boost::posix_time::ptime> >]'\r\n/opt/conda/envs/arrow/include/gtest/gtest.h:1564:23:   required from 'static testing::AssertionResult testing::internal::EqHelper::Compare(const char*, const char*, const T1&, const T2&) [with T1 = boost::optional<boost::variant<long int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, double, boost::gregorian::date, boost::posix_time::ptime> >; T2 = boost::optional<boost::variant<long int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, double, boost::gregorian::date, boost::posix_time::ptime> >; typename std::enable_if<((! std::is_integral<_Tp>::value) || (! std::is_pointer<_Dp>::value))>::type* <anonymous> = 0]'\r\n/turbodbc/cpp/turbodbc/Test/tests/field_translator_test.cpp:31:2:   required from here\r\n/opt/conda/envs/arrow/include/boost/optional/optional.hpp:1596:3: error: static assertion failed: If you want to output boost::optional, include header <boost/optional/optional_io.hpp>\r\n 1596 |   BOOST_STATIC_ASSERT_MSG(sizeof(CharType) == 0, \"If you want to output boost::optional, include header <boost/optional/optional_io.hpp>\");\r\n      |   ^~~~~~~~~~~~~~~~~~~~~~~\r\n[103/156] Building CXX object cpp/turbodbc/Test/CMakeFiles/turbodbc_test.dir/tests/field_translators/boolean_translator_test.cpp.o\r\n[104/156] Building CXX object cpp/turbodbc/Test/CMakeFiles/turbodbc_test.dir/tests/field_translators/date_translator_test.cpp.o\r\nninja: build stopped: subcommand failed.\r\n```",
        "created_at": "2022-03-22T09:31:53.000Z",
        "updated_at": "2022-04-19T10:36:07.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Continuous Integration",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-03-22T16:50:36.597Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15997?focusedCommentId=17510753) by Antoine Pitrou (apitrou):*\nPing `[~uwe]`"
        },
        {
            "created_at": "2022-04-19T09:31:55.566Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15997?focusedCommentId=17524200) by Ra\u00fal Cumplido (raulcd):*\nJust adding that this has been failing on the turbodbc scheduled nightly CI since the 14th of March without new commits on turbodbc side:\r\nhttps://github.com/blue-yonder/turbodbc/actions/runs/1979076318"
        },
        {
            "created_at": "2022-04-19T09:36:48.255Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15997?focusedCommentId=17524203) by Ra\u00fal Cumplido (raulcd):*\nAdded an issue on the turbodbc repo so they are aware of the build failures:\r\nhttps://github.com/blue-yonder/turbodbc/issues/350"
        },
        {
            "created_at": "2022-04-19T09:42:50.611Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15997?focusedCommentId=17524207) by Antoine Pitrou (apitrou):*\nGiven the error message, this is unlikely to be an issue in Arrow. We can still keep this issue open to track our CI issue."
        },
        {
            "created_at": "2022-04-19T10:13:52.579Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15997?focusedCommentId=17524224) by Joris Van den Bossche (jorisvandenbossche):*\nI mentioned it to Ra\u00fal offline, but I think we can disable this nightly test for now, to reduce the number of failing builds to keep an eye on (since this is failing for a while, and not something to be fixed on our side)"
        },
        {
            "created_at": "2022-04-19T10:36:07.410Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15997?focusedCommentId=17524231) by Ra\u00fal Cumplido (raulcd):*\nThanks `[~apitrou]` `[~jorisvandenbossche]` !\r\n\r\nI have opened the issue on the turbodcb repo as their nightly CI is failing with the error and have pushed a draft PR to temporary disable the jobs on our side:\r\nhttps://github.com/apache/arrow/pull/12920\r\nI have created a couple of subtasks for this original issue, one for temporary removing the jobs from CI (the PR I just shared) and one to re-enable the jobs once is solved so we don't lose track of it."
        }
    ]
}