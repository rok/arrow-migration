{
    "issue": {
        "title": "[C#] Decide and implement appropriate behaviour for Array builder resize to negative size",
        "body": "***Note**: This issue was originally created as [ARROW-8886](https://issues.apache.org/jira/browse/ARROW-8886). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n# Summary\r\n\r\nCurrently, the `ArrowBuffer.Builder` class accepts a negative value to the `Resize()` method, and treats it as though the caller passed zero.  This was implemented deliberately, as there is an explicit unit test to verify the behaviour.\r\n\r\nHowever, it is also unusual.  By way of comparison:\r\n\r\n- The `System.Array.Resize<T>()` method throws `ArgumentOutOfRangeException` if a negative value is passed: https://docs.microsoft.com/en-us/dotnet/api/system.array.resize?view=netcore-3.1\n- The Arrow C++ implementation will refuse to accept a negative length: https://github.com/apache/arrow/blob/master/cpp/src/arrow/array/builder_base.h#L194\n  \n  # Acceptance Criteria\n  \n- The behaviour when receiving a negative length to a `Resize()` method _must_ be agreed upon.\n- Appropriate changes _must_ be made to the codebase in accordance with the outcome of the above agreement.",
        "created_at": "2020-05-21T22:12:55.000Z",
        "updated_at": "2020-07-10T20:06:05.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C#",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-07-10T20:05:59.000Z"
    },
    "comments": [
        {
            "created_at": "2020-07-10T20:05:59.503Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8886?focusedCommentId=17155704) by Eric Erhardt (eerhardt):*\nIssue resolved by pull request 7657\n<https://github.com/apache/arrow/pull/7657>"
        }
    ]
}