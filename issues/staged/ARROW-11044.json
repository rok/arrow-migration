{
    "issue": {
        "title": "[C++] Add \"replace\" kernel",
        "body": "***Note**: This issue was originally created as [ARROW-11044](https://issues.apache.org/jira/browse/ARROW-11044). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nPurpose a \"replace\" compute kernel which could fulfil -ARROW-10641 - [C++] A \"replace\" or \"map\" kernel to replace values in array based on mapping (@jorisvandenbossche)- [ARROW-9430](https://issues.apache.org/jira/browse/ARROW-9430) - [C++/Python] Kernel for SetItem(BooleanArray, values) (@xhochy). The implementation started on the basis of \"fill_null\" kernel. But it takes an additional BooleanArray parameter which is used as a mask to trigger value replacement.\r\n\r\nWith following \"null handling\" logic:\r\n\r\n```\n\r\nValues\t\tMask\t\tReplacement\tOutput\r\n1 v\t\t1 false\t\t1 r\t\t1 v\r\n1 v\t\t1 true\t\t1 r\t\t1 r\r\n1 v\t\t0 null\t\t1 r\t\t1 v\r\n1 v\t\t1 false\t\t0 null\t\t1 v\r\n1 v\t\t1 true\t\t0 null\t\t1 v\r\n1 v\t\t0 null\t\t0 null\t\t1 v\r\n0 null\t\t1 false\t\t1 r\t\t0 null\r\n0 null\t\t1 true\t\t1 r\t\t1 r\r\n0 null\t\t0 null\t\t1 r\t\t0 null\r\n0 null\t\t1 false\t\t0 null\t\t0 null\r\n0 null\t\t1 true\t\t0 null\t\t0 null\r\n0 null\t\t0 null\t\t0 null\t\t0 null\r\n```\r\n\r\n(each column indicates the validity bit and the corresponding value. \"v\" for current value, \"r\" for replacement value).\r\n",
        "created_at": "2020-12-28T00:47:07.000Z",
        "updated_at": "2021-06-10T13:11:05.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-06-10T13:11:05.000Z"
    },
    "comments": [
        {
            "created_at": "2021-06-10T13:11:05.857Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11044?focusedCommentId=17360882) by Antoine Pitrou (apitrou):*\nThis was fixed by adding the \"if_else\" function in ARROW-10640."
        }
    ]
}