{
    "issue": {
        "title": "[CI][Dev] Make tasks.yml easier to maintain",
        "body": "***Note**: This issue was originally created as [ARROW-16589](https://issues.apache.org/jira/browse/ARROW-16589). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI think `dev/tasks/tasks.yml` has reached its limits by using jinja2 templated yml. \r\n\r\nWe should think about a better way to define crossbow jobs while:\r\n- keeping it readable\n- in a dialect which is natively supported by editors\n- while supporting tasks parametrization\n  \n  Just one idea is to use python files containing python objects, e.g.:\n  \n  ```Java\n  \n  Task(\n    name=\"wheel-macos-big-sur-cp38-arm64\",\n    ci=\"github\",\n    template=\"python-wheels/github.osx.arm64.yml\",\n    params=dict(\n      arch=\"arm64\",\n      arrow_simd_level=\"DEFAULT\",\n      python_version=\"3.8\",\n      macos_deployment_target=\"11.0\"\n    ),\n    artifacts=[\n      \"pyarrow-{no_rc_version}-cp38-cp38-macosx_11_0_arm64.whl\"\n    ]\n  )\n  ```\n  \n  where `Task` would be the crossbow task class (which could be refactored to use pydantic or another alternative for less boilerplate). Of course porting to the tasks definitions to plain python could make the situation even worse by accessing too many scripting utilities. We could try a dynamic config language which sits between yaml and python like HCL.\n  \n  `[~kou]` what syntax would you be comfortable to work with? Do you have any alternatives we could use?\n  \n  cc `[~amol-]` `[~raulcd]` `[~assignUser]`\n",
        "created_at": "2022-05-16T20:04:36.000Z",
        "updated_at": "2022-05-17T10:07:18.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Continuous Integration",
            "Component: Developer Tools",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-05-17T00:02:22.844Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16589?focusedCommentId=17537845) by Kouhei Sutou (kou):*\nI'm OK with Python. I prefer external DSL such as HCL to internal DSL such as Python because external DSL sometimes lacks dynamic functionalities.\r\n\r\nI want to add the following to requirements:\r\n\r\n- Easy to write syntax (e.g.: less code, less magic and so on)"
        },
        {
            "created_at": "2022-05-17T07:04:23.841Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16589?focusedCommentId=17537982) by Antoine Pitrou (apitrou):*\nMy experience writing configuration using Python (Buildbot configuration files) is that it encourages contributors to write more and more dynamic functionality that becomes hard to maintain.\r\n"
        },
        {
            "created_at": "2022-05-17T10:07:18.289Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16589?focusedCommentId=17538084) by Jacob Wujciak-Jens (assignUser):*\nOne aspect I would like to add as a requirement for any alternative is the ability to provide documentation, both in-line and outside of the code e.g. generated doc files or CLI help pages describing e.g. the purpose/use case of each task with examples, possible pre-requisites, caveats etc.\r\n\r\nBecause at the moment we only have docs describing the overall usage of archery/crossbow but it is not very apparent to contributors which builds they should run locally/trigger on PRs and there is no place this information can be found (docker-compse/tasks.yml only provide clues for the most part).   "
        }
    ]
}