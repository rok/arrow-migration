{
    "issue": {
        "title": "[C++] Cast between fixed size list type and variable size list ",
        "body": "***Note**: This issue was originally created as [ARROW-15455](https://issues.apache.org/jira/browse/ARROW-15455). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCasting from fixed size list to variable size list could be possible, I think, but currently doesn't work:\r\n\r\n```python\n\r\n>>> fixed_size = pa.array([[1, 2], [3, 4]], type=pa.list_(pa.int64(), 2))\r\n>>> fixed_size.cast(pa.list_(pa.int64()))\r\n...\r\nArrowNotImplementedError: Unsupported cast from fixed_size_list<item: int64>[2] to list using function cast_list\r\n```\r\n\r\nAnd in principle, a cast the other way around could also be possible if it is checked that each list has the correct length.",
        "created_at": "2022-01-25T19:20:15.000Z",
        "updated_at": "2022-10-14T17:51:27.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-03-02T20:38:54.861Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15455?focusedCommentId=17500378) by Eduardo Ponce (edponce):*\nAlso need to consider the scalar cases:\r\n```python\n\r\n>>> fixed_size = pa.scalar([1, 2], type=pa.list_(pa.int64(), 2))\r\n>>> fixed_size.cast(pa.list_(pa.int64()))\r\n...\r\npyarrow.lib.ArrowNotImplementedError: casting scalars of type fixed_size_list<item: int64>[2] to type list<item: int64>\r\n```"
        },
        {
            "created_at": "2022-03-02T21:00:11.240Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15455?focusedCommentId=17500385) by Eduardo Ponce (edponce):*\nInteresting to note that casting `FixedSizeList` to `FixedSizeList` works with `Array` but not with `Scalar`. The same behavior is observed for `ListType`.\r\n```python\n\r\n# Works with Array\r\n>>> fixed_size = pa.array([[1, 2]], type=pa.list_(pa.int64(), 2))\r\n>>> fixed_size.cast(pa.list_(pa.int64(), 2))\r\n<pyarrow.lib.FixedSizeListArray object at 0x1059e9f00>\r\n[[1, 2]]\r\n\r\n# Does not works with Scalar\r\n>>> fixed_size = pa.scalar([1, 2], type=pa.list_(pa.int64(), 2))\r\n>>> fixed_size.cast(pa.list_(pa.int64(), 2))\r\npyarrow.lib.ArrowNotImplementedError: casting scalars of type fixed_size_list<item: int64>[2] to type fixed_size_list<item: int64>[2]\r\n```"
        },
        {
            "created_at": "2022-03-08T08:08:19.085Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15455?focusedCommentId=17502788) by Jabari Booker (jabaribooker):*\nIt seem that you can't cast any lists with `Scalar`\r\n\r\n\u00a0\r\n```java\n\r\n#For Lists\r\n>>> arrow_list = pa.scalar([1, 2])\r\n>>> arrow_list.cast(pa.list_(pa.int64()))\r\npyarrow.lib.ArrowNotImplementedError: casting scalars of type list<item: int64> to type list<item: int64>\r\n\r\n#For LargeLists\r\n>>> arrow_list = pa.scalar([1, 2], pa.large_list(pa.int64()))\r\n>>> arrow_list.cast(pa.large_list(pa.int64()))\r\npyarrow.lib.ArrowNotImplementedError: casting scalars of type large_list<item: int64> to type large_list<item: int64>\n```\r\n\u00a0\r\n\r\n\u00a0"
        },
        {
            "created_at": "2022-07-12T14:04:45.010Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15455?focusedCommentId=17565727) by @toddfarmer:*\nThis issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned. Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon."
        },
        {
            "created_at": "2022-07-14T20:50:18.501Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15455?focusedCommentId=17566983) by Jabari Booker (jabaribooker):*\nBecause the compute component of Arrow is not apart of core, we cannot call make calls to `Cast()`\u00a0in\u00a0`Scalar::CastTo()`\u00a0. Therefore, we would need to reimplement casting to get\u00a0`Scalar::CastTo()` work between list-type scalars. This is only impacts `scalar.cast()` in PyArrow. I was wondering if this effort seems at all worth it considering you simply use\u00a0 `pc.cast()`\u00a0anyways."
        },
        {
            "created_at": "2022-07-15T19:52:53.072Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15455?focusedCommentId=17567377) by David Li (lidavidm):*\nIt could be #ifdef'd. It would always work in Python since PyArrow requires ARROW_COMPUTE."
        },
        {
            "created_at": "2022-10-14T17:51:26.939Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15455?focusedCommentId=17617895) by Apache Arrow JIRA Bot (arrowjira):*\nThis issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned per [project policy](https://arrow.apache.org/docs/dev/developers/bug_reports.html#issue-assignment). Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon."
        }
    ]
}