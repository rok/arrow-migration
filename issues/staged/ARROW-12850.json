{
    "issue": {
        "title": "[R] is.nan() evaluates to null on Arrow null values",
        "body": "***Note**: This issue was originally created as [ARROW-12850](https://issues.apache.org/jira/browse/ARROW-12850). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n```java\n\r\n> is.nan(NA_real_)\r\n[1] FALSE \r\n\r\n> as.vector(is.nan(Scalar$create(NA_real_)))\r\n[1] NA\r\n```\r\nThere is a discrepancy here between the `FALSE`\u00a0result in R and the\u00a0`null` result in Arrow (which results in\u00a0`NA_logical_`\u00a0when converted to an R vector).\r\n\r\nI don't think the `is_nan`\u00a0C++ kernel\u00a0should change here because this is just a quirk of R. For example, NumPy and pandas is consistent with the Arrow C++:\r\n```java\n\r\n> np.isnan(pd.NA)\r\n<NA>\r\n```\r\nWe could maybe consider adding a boolean option to the `is_nan` C++ kernel to control whether to consider nulls as `NaN`.",
        "created_at": "2021-05-21T20:34:06.000Z",
        "updated_at": "2021-07-17T18:25:27.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-07-17T18:25:27.000Z"
    },
    "comments": [
        {
            "created_at": "2021-07-16T20:25:20.152Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12850?focusedCommentId=17382324) by Ian Cook (icook):*\nThere is a fix for this in\u00a0https://github.com/apache/arrow/pull/10724."
        }
    ]
}