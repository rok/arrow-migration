{
    "issue": {
        "title": "[JS] Add more documentation about loading a local Arrow IPC in Node",
        "body": "***Note**: This issue was originally created as [ARROW-2686](https://issues.apache.org/jira/browse/ARROW-2686). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI'm trying to create load an arrow file in IPC format.\u00a0\r\n\r\nFirst, I load the library\r\n\r\nimport { Table } from \"@apache-arrow/es2015-esm\";\r\n\r\nThen, I fetch the file and convert it to the buffer (it would be nice if this wasn't necessary)\r\n\r\nfetch(require(\"../data/flights-10k.arrow\")).then(response => {\r\n  response.blob().then(blob => {\r\n    let arrayBuffer;\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = function() {\r\n      arrayBuffer = this.result;\r\n      const table = Table.from(arrayBuffer);\r\n\r\n      console.log(table.toString());\r\n    };\r\n    fileReader.readAsArrayBuffer(blob);\r\n  });\r\n});\r\n\r\nNow I get the error \"Uncaught TypeError: Cannot read property 'fields' of undefined\"",
        "created_at": "2018-06-08T20:18:14.000Z",
        "updated_at": "2018-08-13T14:37:10.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: JavaScript",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2018-08-13T14:37:10.000Z"
    },
    "comments": [
        {
            "created_at": "2018-06-08T20:22:30.446Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2686?focusedCommentId=16506532) by Dominik Moritz (domoritz):*\nVersion is 0.3.1"
        },
        {
            "created_at": "2018-06-08T21:42:02.532Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2686?focusedCommentId=16506600) by Dominik Moritz (domoritz):*\nimport { Table } from \"@apache-arrow/es2015-esm\";\r\n\r\nfetch(require(\"../data/flights-10k.arrow\")).then(response => {\r\n  response.arrayBuffer().then(buffer => {\r\n    const table = Table.from(new Uint8Array(buffer));\r\n    console.log(table.toString());\r\n  });\r\n});\r\n\r\nWorks. Feel free to close this or improve the documentation. "
        },
        {
            "created_at": "2018-06-11T19:25:46.672Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2686?focusedCommentId=16508599) by Wes McKinney (wesm):*\nI updated the JIRA title to make it about documentation. Where's the best place to write non-API JavaScript documentation?"
        },
        {
            "created_at": "2018-08-13T14:35:51.991Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2686?focusedCommentId=16578347) by Brian Hulette (bhulette):*\nClosed in [#2125](https://github.com/apache/arrow/pull/2125)"
        }
    ]
}