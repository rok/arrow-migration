{
    "issue": {
        "title": "[Rust] Logical equality for list arrays",
        "body": "***Note**: This issue was originally created as [ARROW-11060](https://issues.apache.org/jira/browse/ARROW-11060). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nApply logical equality to lists. This requires computing the merged nulls of a list and its child based on list offsets.\r\n\r\nFor example, a list having 3 slots, and 5 values (0, 1, 3, 5) needs to be expanded to 5 null masks. If the list is validity is [true, false, true], and the values are [t, f, t, f, t] we would get:\r\n\r\n[t, f, f, t, t] AND [t, f, t, f, t] = [t, f, f, f, t]",
        "created_at": "2020-12-29T06:59:26.000Z",
        "updated_at": "2021-12-16T17:01:42.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": []
}