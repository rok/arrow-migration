{
    "issue": {
        "title": "[C++] Add opaque device id identification to InputStream",
        "body": "***Note**: This issue was originally created as [ARROW-17917](https://issues.apache.org/jira/browse/ARROW-17917). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nFor the purpose of collecting input/output statistics, it is important to know to which \"device\" these stats pertain, so as not to mix e.g. stats for a local NVMe drive, a NFS-attached drive, a S3 filesystem, or a in-memory buffer reader.\r\n\r\nI suggest adding to InputStream this API:\r\n```c++\n\r\n/// \\brief An opaque unique id for the device underlying this stream.\r\n///\r\n/// Any implementation is free to fill those bytes as it sees fit,\r\n/// but it should be able to uniquely identify each \"device\"\r\n/// (for example, a specific local drive, or a specific remote network\r\n/// filesystem).\r\n///\r\n/// A suggested format is \"<kind>:<bytes>\" where \"<kind>\"\r\n/// is a short string representing the backend kind\r\n/// (for example \"local\", \"s3\"...) and \"<bytes>\" is a\r\n/// backend-dependent string of bytes (for example a\r\n/// `dev_t` for a POSIX local file).\r\n///\r\n/// This is not required to be printable nor human-readable,\r\n/// and may contain NUL characters.\r\nvirtual std::string device_id() const = 0;\r\n```\r\n",
        "created_at": "2022-10-03T16:57:52.000Z",
        "updated_at": "2022-10-20T18:28:26.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-10-03T16:58:21.924Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17917?focusedCommentId=17612370) by Antoine Pitrou (apitrou):*\ncc `[~marsupialtail]` `[~westonpace]` `[~lidavidm]` for opinions."
        },
        {
            "created_at": "2022-10-03T16:59:56.453Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17917?focusedCommentId=17612371) by David Li (lidavidm):*\nThis is in relation to ARROW-17913?\r\n\r\nDo we really want statistics for that case, or do we want some more structured, higher level I/O primitives? (e.g. reading a list of ranges, which can be translated to individual reads for nvme/memory-mapping, or coalesced reads on S3)"
        },
        {
            "created_at": "2022-10-03T17:04:30.605Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17917?focusedCommentId=17612374) by Antoine Pitrou (apitrou):*\nTo the former: yes.\r\n\r\nTo the latter: I don't know, those sound orthogonal or perhaps complementary.\r\n"
        },
        {
            "created_at": "2022-10-03T17:05:05.875Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17917?focusedCommentId=17612375) by Antoine Pitrou (apitrou):*\nThis might also be useful for OpenTelemetry instrumentation, though I don't know how deep it is advised to go in that matter."
        },
        {
            "created_at": "2022-10-03T17:11:19.802Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17917?focusedCommentId=17612378) by David Li (lidavidm):*\nTo me it sounds like having statistics on the input stream won't help you very much, compared to some API that would let readers express their intent in a way that I/O implementations can then service in an optimal way. But it's not clear to me at what level that kind of logic needs to live. (Statistics could let you make a decision about how to read, but then that logic needs to get replicated across a bunch of file formats, and you have to read a bunch of the file before you can make a decision\u2026and what if you're reading 20 files? How do you share the statistics between them, at the level of the file reader?)\r\n\r\nSo I think I'm missing something about why we want these statistics"
        },
        {
            "created_at": "2022-10-03T17:19:00.403Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17917?focusedCommentId=17612381) by Antoine Pitrou (apitrou):*\nI have no precise idea of how statistics would be exposed, but they would probably live at the global level, not at the input stream level. The input stream level would tell you what device it is servicing, and you would look up the collected stats for that device.\r\n\r\n"
        }
    ]
}