{
    "issue": {
        "title": "[Python]: Add tests for ARROW-1941 cases where pandas inferred type is 'empty'",
        "body": "***Note**: This issue was originally created as [ARROW-2037](https://issues.apache.org/jira/browse/ARROW-2037). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n",
        "created_at": "2018-01-25T22:17:53.000Z",
        "updated_at": "2019-06-07T14:23:19.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-06-07T14:23:19.000Z"
    },
    "comments": [
        {
            "created_at": "2019-05-31T00:38:06.940Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2037?focusedCommentId=16852497) by Wes McKinney (wesm):*\ncc `[~jorisvandenbossche]`"
        },
        {
            "created_at": "2019-06-07T14:11:42.621Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2037?focusedCommentId=16858688) by Joris Van den Bossche (jorisvandenbossche):*\nNot fully sure what is left to do here. The referenced issue ARROW-1941 was closed by https://github.com/apache/arrow/pull/1449, which included a test for roundtrip of columns with empty lists.\r\n\r\nUnless it is not related to that issue? Because the example of ARROW-1941 (column of empty lists) does not given an inferred type of 'empty' but 'mixed':\r\n\r\n```python\n\r\nIn [22]: empty_list_array = np.empty((3,), dtype=object) \r\n    ...: empty_list_array.fill([]) \r\n    ...:  \r\n    ...: df = pd.DataFrame({'a': np.array(['1', '2', '3']), \r\n    ...:                    'b': empty_list_array})                                                                                                                                                                 \r\n\r\nIn [23]: df                                                                                                                                                                                                         \r\nOut[23]: \r\n   a   b\r\n0  1  []\r\n1  2  []\r\n2  3  []\r\n\r\nIn [25]: pd.api.types.infer_dtype(df['b'], skipna=True)                                                                                                                                                             \r\nOut[25]: 'mixed'\r\n```"
        },
        {
            "created_at": "2019-06-07T14:18:25.176Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2037?focusedCommentId=16858692) by Joris Van den Bossche (jorisvandenbossche):*\nYou get an \"empty\" inferred type if you have an object dtype with no rows or only missing values:\r\n\r\n```python\n\r\nIn [43]: s = pd.Series([], dtype=object)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\r\n\r\nIn [44]: pd.api.types.infer_dtype(s, skipna=True)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\r\nOut[44]: 'empty'\r\n\r\nIn [45]: s = pd.Series([None, None], dtype=object)\u00a0\r\n\r\nIn [46]: pd.api.types.infer_dtype(s, skipna=True)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\r\nOut[46]: 'empty'\r\n```\r\n\r\nNot sure if that is what was meant, but the roundtrip for that is currently working, so can add a test for that.\r\n\r\n\u00a0"
        },
        {
            "created_at": "2019-06-07T14:21:51.271Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2037?focusedCommentId=16858694) by Joris Van den Bossche (jorisvandenbossche):*\nAnd that case is already tested here: https://github.com/apache/arrow/blob/997226a9263430bc0422189180bc2551aed1f63d/python/pyarrow/tests/test_pandas.py#L2093-L2095\r\n\r\nSo closing this issue."
        }
    ]
}