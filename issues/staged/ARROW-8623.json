{
    "issue": {
        "title": "[C++][Gandiva] Reduce use of Boost, remove Boost headers from header files",
        "body": "***Note**: This issue was originally created as [ARROW-8623](https://issues.apache.org/jira/browse/ARROW-8623). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nBoost is currently a transitive dependency of many of Gandiva's public header files. I suggest the following:\r\n\r\n- Do not include Boost transitively in any installed header file\n- Reduce usages of Boost altogether\n  \n  On the latter point, most usages of Boost can be trimmed by having a `hash_combine` function inside the Arrow codebase. See results of grepping the codebase\n  \n  https://gist.github.com/wesm/190006d91628e6bf7c04deb596a52cff\n  \n  It seems that Boost cannot be easily eliminated altogether at the present moment because of a use of Boost.Multiprecision (`int256_t`). At some point someone may want to implement sufficient 256-bit integer functions so that we don't have to depend on Boost.Multiprecision",
        "created_at": "2020-04-29T14:45:57.000Z",
        "updated_at": "2020-06-12T03:23:24.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: C++ - Gandiva",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-06-12T03:23:24.000Z"
    },
    "comments": [
        {
            "created_at": "2020-06-12T03:23:24.282Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8623?focusedCommentId=17133876) by Wes McKinney (wesm):*\nOnly a usage of boost/multiprecision remains and outside of header files"
        }
    ]
}