{
    "issue": {
        "title": "[Plasma]  enhance plasma client interfaces to work with multiple objects",
        "body": "***Note**: This issue was originally created as [ARROW-4711](https://issues.apache.org/jira/browse/ARROW-4711). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nRight now the Delete() interface in plasma client supports deleting multiple objects in a single shot, so that we can save IPCs (inter-processing communication) between plasma clients and plasma store. This reduces\u00a0latency for plasma clients, and also improve the actual throughput for plasma store.\r\n\r\nI made a simple prototype for changing Release() function as well, when batching release 10 objects in a single IPC, it only takes about 1/6 of the time compared with using 10 separate IPCs. Also from profiling, processing IPCs takes a lot of CPU cycles in plasma store currently, as UNIX domain socket processing needs to go through kernel, thus batching multiple IPCs into a single one should greatly\u00a0improve the plasma store performance as well.\r\n\r\n\u00a0\r\n\r\nThis change mostly applies to Release(), Seal(), and Create() interfaces.",
        "created_at": "2019-02-28T06:38:54.000Z",
        "updated_at": "2021-02-20T00:23:47.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++ - Plasma",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-02-20T00:23:47.000Z"
    },
    "comments": []
}