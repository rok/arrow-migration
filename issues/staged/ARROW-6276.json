{
    "issue": {
        "title": "[C++] Add operator[] to some concrete Array implementations?",
        "body": "***Note**: This issue was originally created as [ARROW-6276](https://issues.apache.org/jira/browse/ARROW-6276). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI have occasionally been in situations where I want to pass in e.g. `Int32Array` or `BooleanArray` into a template that also can accept STL sequence types like `std::vector<bool>` \u2013 in such cases the main API of interest is `[]`. Would there be interest in aliasing `operator[]` to return the result of `GetView` (or to deprecate `GetView` in favor of `operator[]`)?",
        "created_at": "2019-08-16T16:29:53.000Z",
        "updated_at": "2021-12-01T02:39:37.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-11-30T12:40:03.000Z"
    },
    "comments": [
        {
            "created_at": "2019-08-19T12:44:40.732Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6276?focusedCommentId=16910371) by Francois Saint-Jacques (fsaintjacques):*\nI wanted such interface. I think we have to come up with a way to return `option<T>` and `T` depending on the null count, we could achieve this with a shim Array wrapper. I'd also like if we could have c++ iterators."
        },
        {
            "created_at": "2021-08-05T14:57:00.195Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6276?focusedCommentId=17394092) by Antoine Pitrou (apitrou):*\nWe now have STL iterators in `arrow/stl_iterator.h` for a couple datatypes (primitive, binary).\r\nWe could add syntactic sugar for indexed access, e.g.:\r\n```c++\n\r\ntypename IteratorType::ValueType operator[](int64_t i) {\r\n  return *IteratorType(*this, i);\r\n}\r\n```\r\n"
        },
        {
            "created_at": "2021-11-12T16:00:24.820Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6276?focusedCommentId=17442819) by Pradeep Garigipati (pradeepgarigipati):*\n`[~wesm]` `[~apitrou]` Is the following kind of change that is intended ? or the operator overload should take a scalar of NumericType ?\r\n\r\n\r\n```java\n\r\nbool BooleanArray::operator[](int64_t i) const { return GetView(i); }\r\nvalue_type NumericArray::operator[](int64_t i) const { return GetView(i); }\r\nTypeClass::DayMilliseconds DayTimeIntervalArray::operator[](int64_t i) const { return GetView(i); }\r\nTypeClass::MonthDayNanos MonthDayNanoIntervalArray::operator[](int64_t i) const { return GetView(i); }\n```"
        },
        {
            "created_at": "2021-11-12T16:15:55.573Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6276?focusedCommentId=17442827) by Antoine Pitrou (apitrou):*\nSee my comment above. So, yes, it's this kind of change."
        },
        {
            "created_at": "2021-11-12T16:31:10.807Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6276?focusedCommentId=17442836) by Pradeep Garigipati (pradeepgarigipati):*\nThe first two sentences of the original description kind of confused me (as in the operator[] indexes one Array using another Int32Array or something like that) even though the last sentence does say the new operator overload should return GetView's result.\r\n\r\nThank you for the clarification. I have raised the PR, please have a look."
        },
        {
            "created_at": "2021-11-16T04:56:28.767Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6276?focusedCommentId=17444273) by Eduardo Ponce (edponce):*\nNow that Array types support {**}operator[]{**}, should it be used instead of **GetView()**? If so, then should we substitute all invocations to **GetView()** and make **GetView()** a private method which serves only as the implementation of **operator[]**?"
        },
        {
            "created_at": "2021-11-30T12:40:03.246Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6276?focusedCommentId=17451101) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 11694\n<https://github.com/apache/arrow/pull/11694>"
        }
    ]
}