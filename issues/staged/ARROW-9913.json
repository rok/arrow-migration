{
    "issue": {
        "title": "[C++] Outputs of Decimal128::FromString depend on presence of one another",
        "body": "***Note**: This issue was originally created as [ARROW-9913](https://issues.apache.org/jira/browse/ARROW-9913). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n<https://github.com/apache/arrow/blame/bfac60dd73bffa5f7bcefc890486268036182278/cpp/src/arrow/util/decimal.cc#L365-L373>\u00a0in\u00a0Decimal128::FromString makes \\*out depend on whether scale is null, and makes \\*scale depend on whether out is null. For example, given an input \"1e2\",\r\n1. if out is not null and scale is not null, then \\*out is 1\n1. if out is null and scale is not null, then \\*scale is -2\n1. if neither out nor scale is null, then \\*out is 100 and \\*scale is 0\n   \n   It is very counter-intuitive that when an additional output-only pointer is given for receiving extra info, it alters the value of another output.\n   \n   Similarly, \\*precision is also affected by presence of out and scale.\n   \n   The block of adjustment was added in <https://github.com/apache/arrow/commit/bfac60dd73bffa5f7bcefc890486268036182278>\u00a0for preventing negative scale output (https://issues.apache.org/jira/browse/ARROW-2177). While the motivation looks reasonable, the change is not sufficient (see case #2 above).\n   \n   I think we should make the outputs independent of one-another. For the input \"1e2\", \\*out should be 100 if out is not null, and \\*scale should be 0 if scale is not null.",
        "created_at": "2020-09-03T22:51:37.000Z",
        "updated_at": "2020-09-07T14:48:25.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-09-07T14:48:13.000Z"
    },
    "comments": [
        {
            "created_at": "2020-09-07T14:48:13.488Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9913?focusedCommentId=17191738) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 8109\n<https://github.com/apache/arrow/pull/8109>"
        }
    ]
}