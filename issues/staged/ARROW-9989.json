{
    "issue": {
        "title": "Arrow ",
        "body": "***Note**: This issue was originally created as [ARROW-9989](https://issues.apache.org/jira/browse/ARROW-9989). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIn scala, (Java of Arrow), following code work\r\n> object A {\n> \n> def write(): =\u00a0\n> \n> Unknown macro: { \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \n> val vectorSchemaRoot = VectorSchemaRoot.create(getSchema, allocator) \u00a0 \u00a0 \u00a0 val\u00a0 \u00a0writer = new ArrowStreamWriter(vectorSchemaRoot, null, out) \u00a0 }\n> }\r\nBut following does not work\r\n> object A {\n> \n> var vectorSchemaRoot: VectorSchemaRoot = null\n> \n> var writer: ArrowStreamWriter = null\n> \n> def write(): =\u00a0\n> Unknown macro: { \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \n> vectorSchemaRoot = VectorSchemaRoot.create(getSchema, allocator) \u00a0 \u00a0 writer = new ArrowStreamWriter(vectorSchemaRoot, null, out) \u00a0 }\n> }\r\nThe error is ,\r\n> java.lang.IllegalStateException: wrong buffer size: 601 ![= 4081java.lang.IllegalStateException: wrong buffer size: 601 ](= 4081java.lang.IllegalStateException: wrong buffer size: 601 )= 4081 at org.apache.arrow.vector.ipc.message.MessageSerializer.writeBatchBuffers(MessageSerializer.java:297) at org.apache.arrow.vector.ipc.message.MessageSerializer.serialize(MessageSerializer.java:267) at org.apache.arrow.vector.ipc.ArrowWriter.writeRecordBatch(ArrowWriter.java:132) at org.apache.arrow.vector.ipc.ArrowWriter.writeBatch(ArrowWriter.java:120)\n> \n> \n> \n> java.lang.IndexOutOfBoundsException: index: 0, length: 1 (expected: range(0, 0))java.lang.IndexOutOfBoundsException: index: 0, length: 1 (expected: range(0, 0)) at io.netty.buffer.ArrowBuf.checkIndexD(ArrowBuf.java:337) at io.netty.buffer.ArrowBuf.chk(ArrowBuf.java:324) at io.netty.buffer.ArrowBuf.getByte(ArrowBuf.java:526) at org.apache.arrow.vector.BitVectorHelper.setBit(BitVectorHelper.java:70) at org.apache.arrow.vector.Float4Vector.set(Float4Vector.java:168)\n> \n> \n> \n> java.lang.IllegalStateException: RefCnt has gone negativejava.lang.IllegalStateException: RefCnt has gone negative at org.apache.arrow.util.Preconditions.checkState(Preconditions.java:458) at org.apache.arrow.memory.BufferLedger.release(BufferLedger.java:134) at org.apache.arrow.memory.BufferLedger.release(BufferLedger.java:108) at org.apache.arrow.vector.BaseFixedWidthVector.reAlloc(BaseFixedWidthVector.java:441) at org.apache.arrow.vector.BaseFixedWidthVector.setValueCount(BaseFixedWidthVector.java:708) at org.apache.arrow.vector.VectorSchemaRoot.setRowCount(VectorSchemaRoot.java:226)\r\n\u00a0\r\n\r\nand it is raised every second time when I call the method. And seems both ArrowStreamWriter and VectorSchemaRoot could not be initialized in this way. Why?",
        "created_at": "2020-09-14T03:04:31.000Z",
        "updated_at": "2020-09-15T11:07:18.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-09-15T11:07:18.000Z"
    },
    "comments": [
        {
            "created_at": "2020-09-15T00:39:20.535Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9989?focusedCommentId=17195791) by Wes McKinney (wesm):*\nThis question might be more relevant for the dev@ or user@ mailing list. If you want to keep it as a JIRA, could you write an informative issue title?\r\n"
        },
        {
            "created_at": "2020-09-15T11:06:54.178Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9989?focusedCommentId=17196059) by Litchy Soong (Litchilitchy):*\n`[~wesm]` \u00a0Thanks, I would ask in mailing list"
        }
    ]
}