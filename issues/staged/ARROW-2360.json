{
    "issue": {
        "title": "[C++] Add set_chunksize for RecordBatchReader in arrow/record_batch.h",
        "body": "***Note**: This issue was originally created as [ARROW-2360](https://issues.apache.org/jira/browse/ARROW-2360). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nAs discussed in <https://github.com/apache/parquet-cpp/pull/445,>\u00a0\r\n\r\nMaybe it's better to expose chunksize related API in RecordBatchReader.\r\n\r\n\u00a0\r\n\r\nHowever RecordBatchStreamReader doesn't conforms to this requirement.\u00a0",
        "created_at": "2018-03-28T09:42:53.000Z",
        "updated_at": "2020-01-07T19:01:18.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2018-03-30T06:29:40.550Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2360?focusedCommentId=16420210) by Xianjin YE (advancedxy):*\nSome options:\r\n 1. add chunksize related API in the RecordBatchReader base class\r\n```Java\n\r\nclass ARROW_EXPORT RecordBatchReader {\r\n public:\r\n  virtual ~RecordBatchReader();\r\n  // other impls are omitted\r\n\r\n  /// Indicate whether RecordBatchReader supports chunking or not, if\r\n  /// not supported, set_chunksize should have no effect\r\n  virtual bool isChunkingSupported() const = 0;\r\n\r\n  /// Set the maximum chunksize for the following RecordBatch to be read\r\n  virtual void set_chunksize(int64_t chunksize) {}\r\n  \r\n  /// Not determined yet, maybe handy when user needs to know the current chunksize\r\n  virtual int64_t get_chunksize() { return -1; }\r\n\r\n};\r\n\r\n// RecordBatchStreamReader\r\nclass ARROW_EXPORT RecordBatchStreamReader: public RecordBatchReader {\r\n public:\r\n  // other impls are omitted\r\n\r\n  bool isChunkingSupported()  { return false;}\r\n}\r\n\r\n// TableBatchReader\r\nclass ARROW_EXPORT TableBatchReader : public RecordBatchReader {\r\n public:\r\n  ~TableBatchReader() override;\r\n  /// other impls are omitted\r\n  bool isChunkingSupported() { return true;}\r\n\r\n  void set_chunksize(int64_t chunksize);\r\n};\r\n\r\n```\r\n2. Add a new base class called `ChunkableRecordBatchReader`. And `TableBatchReader` should be subclass of `ChunkableRecordBatchReader`\r\n In parquet-reader, the `GetRecorBatchReader` would return a `shared_ptr<ChunkableRecordBatchReader>`\r\n\r\n`[~wesmckinn]` which one do you prefer or do you have other options?"
        },
        {
            "created_at": "2018-03-30T23:10:12.123Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2360?focusedCommentId=16421048) by Wes McKinney (wesm):*\n`[~advancedxy]` I am not sure adding chunking-related APIs to `RecordBatchReader` is a good idea. I believe this should be encapsulated in the details of each implementation. "
        },
        {
            "created_at": "2018-03-31T07:35:34.192Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2360?focusedCommentId=16421203) by Xianjin YE (advancedxy):*\nThen what do you think of `ChunkableRecordBatchReader`? `TableBatchReader` could be a subclass of `ChunkableRecordBatchReader`\r\n\r\n`[~wesmckinn]`"
        },
        {
            "created_at": "2018-04-09T06:04:10.231Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2360?focusedCommentId=16430118) by Xianjin YE (advancedxy):*\nPing `[~wesmckinn]`"
        },
        {
            "created_at": "2019-08-21T16:49:49.038Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2360?focusedCommentId=16912512) by Wes McKinney (wesm):*\nI think having a `ChunkingRecordBatchReader` that takes another reader as input sounds like a good idea"
        },
        {
            "created_at": "2019-08-21T16:50:16.111Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2360?focusedCommentId=16912513) by Wes McKinney (wesm):*\ncc `[~bkietz]` `[~fsaintjacques]` in case you run into this need on the datasets project"
        }
    ]
}