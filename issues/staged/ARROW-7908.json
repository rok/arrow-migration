{
    "issue": {
        "title": "[R] Can't install package without setting LIBARROW_DOWNLOAD=true",
        "body": "***Note**: This issue was originally created as [ARROW-7908](https://issues.apache.org/jira/browse/ARROW-7908). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nHi,\r\n\r\nInstalling arrow in R does not work intuitively on our server.\r\n```r\n\r\ninstall.packages(\"arrow\")`\r\n```\r\nresults in an error:\r\n```sh\n\r\nInstalling package into '/home/<user>/R/x86_64-redhat-linux-gnu-library/3.6'\r\n(as 'lib' is unspecified)\r\n\r\ntrying URL 'https://cloud.r-project.org/src/contrib/arrow_0.16.0.2.tar.gz'\r\nContent type 'application/x-gzip' length 216119 bytes (211 KB)\r\n==================================================\r\ndownloaded 211 KB\r\n\r\n* installing *source* package 'arrow' ...\r\n** package 'arrow' successfully unpacked and MD5 sums checked\r\n** using staged installation\r\nPKG_CFLAGS=-I/tmp/Rtmp3v1BDf/R.INSTALL4a5d5d9f8bc8/arrow/libarrow/arrow-0.16.0.2/include  -DARROW_R_WITH_ARROW\r\nPKG_LIBS=-L/tmp/Rtmp3v1BDf/R.INSTALL4a5d5d9f8bc8/arrow/libarrow/arrow-0.16.0.2/lib -larrow_dataset -lparquet -larrow -lthrift -lsnappy -lz -lzstd -llz4 -lbrotlidec-static -lbrotlienc-static -lbrotlicommon-static -lboost_filesystem -lboost_regex -lboost_system -ljemalloc_pic\r\n** libs\r\ng++ -m64 -std=gnu++11 -I\"/usr/include/R\" -DNDEBUG -I/tmp/Rtmp3v1BDf/R.INSTALL4a5d5d9f8bc8/arrow/libarrow/arrow-0.16.0.2/include  -DARROW_R_WITH_ARROW -I\"/usr/lib64/R/library/Rcpp/include\" -I/usr/local/include  -fpic  -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches   -m64 -mtune=generic  -c array.cpp -o array.o\r\nIn file included from array.cpp:18:0:\r\n./arrow_types.h:201:31: fatal error: arrow/dataset/api.h: No such file or directory\r\n```\r\nIt appears that the C++ code is not built. With arrow 0.16.0.1 things do work out, because it tries to build the C++ code from source. With arrow 0.16.0.2 such is no longer the case. I could finish the installation by setting the environment variable LIBARROW_DOWNLOAD to 'true':\r\n```java\n\r\nexport LIBARROW_DOWNLOAD=true\r\n```\r\nThat, apparently, triggers the build from source. I would have expected that I would not need to set this variable explicitly.\r\n\r\nI found that [between versions](https://github.com/apache/arrow/commit/660d0e7cbaa1cfb51498299d445636fdd6a58420), the default value of LIBARROW_DOWNLOAD has changed:\r\n```sh\n\r\n- download_ok <- locally_installing && !env_is(\"LIBARROW_DOWNLOAD\", \"false\")\r\n+ download_ok <- env_is(\"LIBARROW_DOWNLOAD\", \"true\")\r\n```\r\nIn our environment, that variable was _not_ set, resulting (accidentally?) in download_ok being false and therefore the libraries not being installed and finally the resulting error above.\r\n\r\n\u00a0\r\n\r\nI can't quite figure out the logic behind all this, but it would be nice if we'd be able to install the package without first having to set LIBARROW_DOWNLOAD.\r\n\r\n\u00a0\r\n\r\nThank you for looking into this!",
        "created_at": "2020-02-21T15:55:17.000Z",
        "updated_at": "2020-03-27T16:01:58.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-03-27T16:01:58.000Z"
    },
    "comments": [
        {
            "created_at": "2020-02-21T16:06:45.517Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7908?focusedCommentId=17041989) by Neal Richardson (npr):*\nIt would indeed be nice not to have to set an env var, but this was a concession made to CRAN policies. As you might guess from our rapidly going from 0.16.0 to 0.16.0.1 to 0.16.0.2 last week, this wasn't the first choice.\r\n\r\nI'm surprised however that the package doesn't at least build a limited version that contains the `install_arrow()` function. If you wanted to help debug that, could you try installing again without setting LIBARROW_DOWNLOAD and instead setting ARROW_R_DEV=true to make it print more verbosely?"
        },
        {
            "created_at": "2020-03-27T12:50:05.119Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7908?focusedCommentId=17068657) by Taeke (taeke):*\nHi,\r\n\r\nSorry for the long silence. With ARROW_R_DEV=TRUE I get:\r\n```sh\n\r\ntrying URL 'https://cloud.r-project.org/src/contrib/arrow_0.16.0.2.tar.gz'\r\nContent type 'application/x-gzip' length 216119 bytes (211 KB)\r\n==================================================\r\ndownloaded 211 KB\r\n\r\n* installing *source* package \u2018arrow\u2019 ...\r\n** package \u2018arrow\u2019 successfully unpacked and MD5 sums checked\r\n** using staged installation\r\n*** Generating code with data-raw/codegen.R\r\nFatal error: cannot open file 'data-raw/codegen.R': No such file or directory\r\nPKG_CFLAGS=-I/tmp/Rtmp7CrqGP/R.INSTALL1bebe61d5312e/arrow/libarrow/arrow-0.16.0.2/include -DARROW_R_WITH_ARROW\r\nPKG_LIBS=-L/tmp/Rtmp7CrqGP/R.INSTALL1bebe61d5312e/arrow/libarrow/arrow-0.16.0.2/lib -larrow_dataset -lparquet -larrow -lthrift -lsnappy -lz -lzstd -llz4 -lbrotlidec-static -lbrotlienc-static -lbrotlicommon-static -lboost_filesystem -lboost_regex -lboost_system -ljemalloc_pic\r\n** libs\r\ng++ -m64 -std=gnu++11 -I\"/usr/include/R\" -DNDEBUG -I/tmp/Rtmp7CrqGP/R.INSTALL1bebe61d5312e/arrow/libarrow/arrow-0.16.0.2/include -DARROW_R_WITH_ARROW -I\"/usr/lib64/R/library/Rcpp/include\" -I/usr/local/include -fpic -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -c array.cpp -o array.o\r\nIn file included from array.cpp:18:0:\r\n./arrow_types.h:201:31: fatal error: arrow/dataset/api.h: No such file or directory\r\n#include <arrow/dataset/api.h>\r\n^\r\ncompilation terminated.\r\nmake: *** [array.o] Error 1\r\nERROR: compilation failed for package \u2018arrow\u2019\r\n```\r\ndata-raw/codegen.R misses because it is specified in .Rbuildignore.\r\n\r\nRemoving that line from .Rbuildignore makes the installation run somewhat further, but data-raw/codegen.R than fails:\r\n```java\n\r\n*** Generating code with data-raw/codegen.R\r\nError in library(decor) : there is no package called \u2018decor\u2019\r\nCalls: suppressPackageStartupMessages -> withCallingHandlers -> library\r\nExecution halted\r\n```\r\nThat I could fix (manually, at least) by installing decor:\r\n```java\n\r\nremotes::install_github(\"romainfrancois/decor\")\r\n```\r\nThat line is, understandably, commented out in data-raw/codegen.R\r\n\r\nFinally configure tries to run tools/linuxlibs.R, which tries to download_source(), but that fails due to an invalid version:\r\n```java\n\r\ntrying URL 'https://dl.bintray.com/ursalabs/arrow-r/libarrow/src/arrow-0.16.0.9000.zip'\r\nError in download.file(source_url, tf1, quiet = quietly) :\r\n  (converted from warning) cannot open URL 'https://dl.bintray.com/ursalabs/arrow-r/libarrow/src/arrow-0.16.0.9000.zip': HTTP status was '404 Not Found'\r\n```\r\nThis I could fix by changing the version in the DESCRIPTION to 0.16.0.2\r\n\r\nAfter that the installation concludes as expected.\r\n\r\nIn summary, for this to work:\r\n \\* data_raw/codegen.R needs not be included in .Rbuildignore\r\n \\* decor needs to become a dependency (?)\r\n \\* version number needs to be updated in DESCRIPTION to correspond with an available download\r\n\r\n\u00a0"
        },
        {
            "created_at": "2020-03-27T15:24:49.036Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7908?focusedCommentId=17068806) by Neal Richardson (npr):*\ncodegen.R and decor are not required, despite the error messages they throw: they're allowed to fail.\r\n\r\nI'm not sure why you're seeing a version number of .9000 unless you're installing from git/github, not CRAN.\r\n\r\nIn any case, I believe installation should work now on the latest dev version. Could you try installing (no env vars required) from our nightly repository, `install.packages(\"arrow\", repos=\"https://dl.bintray.com/ursalabs/arrow-r\")`?"
        },
        {
            "created_at": "2020-03-27T16:01:17.032Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7908?focusedCommentId=17068827) by Taeke (taeke):*\nAh, I see. I did install from CRAN, but in order to work around the error of the missing codegen.R, i switched to github, which lead to the mismatch in version numbers. I could not find another way to get the installation starting (other than setting LIBARROW_DOWNLOAD, which I tried to avoid).\r\n\r\nIndeed, with the nightly build it does install properly.\u00a0Thanks a lot!"
        },
        {
            "created_at": "2020-03-27T16:01:47.308Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7908?focusedCommentId=17068828) by Neal Richardson (npr):*\nGlad to hear!"
        }
    ]
}