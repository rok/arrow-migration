{
    "issue": {
        "title": "[R] Pre-built binaries URLs not working",
        "body": "***Note**: This issue was originally created as [ARROW-12651](https://issues.apache.org/jira/browse/ARROW-12651). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nOn trying:\r\n```java\n\r\ninstall.packages(\"arrow\", configure.vars = c(\"LIBARROW_BINARY=ubuntu-18.04\", \"ARROW_R_DEV=true\"))\n```\r\nI eventually get:\r\n```java\n\r\ntrying URL 'https://arrow-r-nightly.s3.amazonaws.com/libarrow/bin/ubuntu-18.04/arrow-4.0.0.zip'\r\nError in download.file(from_url, to_file, quiet = quietly) :\u00a0\r\n\u00a0 cannot open URL 'https://arrow-r-nightly.s3.amazonaws.com/libarrow/bin/ubuntu-18.04/arrow-4.0.0.zip'\r\n```\r\n\r\nHaving pre-built binaries is nice because it allows one to skip an otherwise complex build process.\r\n\r\nAlso, would you be able to guide the last version of arrow-r that has pre-built binaries for Ubuntu 16.04?\r\n\r\nThanks.",
        "created_at": "2021-05-04T18:10:50.000Z",
        "updated_at": "2022-08-29T14:15:12.000Z",
        "labels": [
            "Migrated from Jira",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-08-29T14:14:01.000Z"
    },
    "comments": [
        {
            "created_at": "2021-05-04T20:12:15.379Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12651?focusedCommentId=17339279) by Eduardo Ponce (edponce):*\nNightly builds append the date to the zip file, for example,\r\nhttps://arrow-r-nightly.s3.amazonaws.com/libarrow/bin/ubuntu-18.04/arrow-4.0.0.20210503.zip\r\nIt seems the R installation is not adding the date to the download URL."
        },
        {
            "created_at": "2021-05-04T20:19:23.480Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12651?focusedCommentId=17339282) by Eduardo Ponce (edponce):*\nWell, I just found out that the file suffix shouldn't be a problem because installation should build from source."
        },
        {
            "created_at": "2021-05-04T20:22:40.265Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12651?focusedCommentId=17339284) by Neal Richardson (npr):*\nThe issue is that I haven't built the linux binaries for the 4.0.0 release yet. I can do that.\r\n\r\nCould you elaborate on the \"otherwise complex build process\" you're seeing? Building libarrow from source should just work with no extra complexity for you, it just is a bit slower.\r\n\r\nUbuntu 16.04 is end-of-life so we no longer test on it, but I would expect installation to still work. I don't think we have prebuilt R-specific binaries for Ubuntu 16.04 anymore, but if that's important to you, you could try installing the apache-arrow apt packages. I believe 3.0 was the last release those were built."
        },
        {
            "created_at": "2021-05-04T22:07:06.876Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12651?focusedCommentId=17339320) by Siddhartha Bagaria (siddharthab):*\nThank you both Eduardo and Neal.\r\n\r\nSo for 3.0.0, the pre-built binary downloads also fail:\r\n```bash\n\r\nr (maint-3.0.x)$ R CMD INSTALL --configure-vars='LIBARROW_DOWNLOAD=true ARROW_R_DEV=true' .\r\n...\r\ntrying URL 'https://dl.bintray.com/ursalabs/arrow-r/libarrow/bin/ubuntu-16.04/arrow-3.0.0.zip'\r\nError in download.file(from_url, to_file, quiet = quietly) :\u00a0\r\n\u00a0 cannot open URL 'https://dl.bintray.com/ursalabs/arrow-r/libarrow/bin/ubuntu-16.04/arrow-3.0.0.zip'\r\n*** No C++ binaries found for ubuntu-16.04\r\n```\r\nThe above message is with Ubuntu 16.04, but the corresponding URL for Ubuntu 18.04 and Ubuntu 20.04 also fail.\r\n\r\n\r\n\r\nOn the subject of compiling from source, I think downloading and compiling Boost and Thrift, etc. are the main problems. If we can somehow skip these dependencies, it might work better. Different versions and environments have yielded different errors for us, but the one error that I can consistently repro on my machine (Ubuntu 16.04) are:\r\n\r\nFor 3.0.0:\r\n```bash\n\r\nr (maint-3.0.x)$ R CMD INSTALL --configure-vars='LIBARROW_DOWNLOAD=true ARROW_R_DEV=true' .\r\n\r\n...\r\n\r\n-- thrift_ep build command succeeded.  See also /tmp/RtmpoPZOAF/file2e035915251a/thrift_ep-prefix/src/thrift_ep-stamp/thrift_ep-build-*.log\r\n[ 70%] Performing install step for 'thrift_ep'\r\nCMake Error at /tmp/RtmpoPZOAF/file2e035915251a/thrift_ep-prefix/src/thrift_ep-stamp/thrift_ep-install-RELEASE.cmake:37 (message):\r\n  Command failed: 2\r\n\r\n   'make' 'install'\r\n\r\n  See also\r\n\r\n    /tmp/RtmpoPZOAF/file2e035915251a/thrift_ep-prefix/src/thrift_ep-stamp/thrift_ep-install-*.log\r\n\r\n\r\n-- stdout output is:\r\n\r\n-- stderr output is:\r\nmake[3]: *** No rule to make target 'install'.  Stop.\r\n\r\nCMake Error at /tmp/RtmpoPZOAF/file2e035915251a/thrift_ep-prefix/src/thrift_ep-stamp/thrift_ep-install-RELEASE.cmake:47 (message):\r\n  Stopping after outputting logs.\r\n\r\n\r\nCMakeFiles/thrift_ep.dir/build.make:103: recipe for target 'thrift_ep-prefix/src/thrift_ep-stamp/thrift_ep-install' failed\r\nmake[2]: *** [thrift_ep-prefix/src/thrift_ep-stamp/thrift_ep-install] Error 1\r\nCMakeFiles/Makefile2:1024: recipe for target 'CMakeFiles/thrift_ep.dir/all' failed\r\nmake[1]: *** [CMakeFiles/thrift_ep.dir/all] Error 2\r\n```\r\nFor 4.0.0:\r\n (this error is more slightly straightforward to resolve, but still needs to locate the right apt repository for the latest versions of CMake for Ubuntu Xenial)\r\n```bash\n\r\nr (release-4.0.0)$ R CMD INSTALL --configure-vars='LIBARROW_DOWNLOAD=true ARROW_R_DEV=true' .\r\n\r\n...\r\n\r\nCMake Error at cmake_modules/ThirdpartyToolchain.cmake:1240 (message):\r\n  Building thrift using ExternalProject requires at least CMake 3.10\r\n```"
        },
        {
            "created_at": "2021-05-04T22:21:10.220Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12651?focusedCommentId=17339330) by Neal Richardson (npr):*\nFor what it's worth, RSPM hosts full binary R packages, if you can install from there. I don't know if they still support xenial though.\r\n\r\nIn arrow 4.0, you can set ARROW_PARQUET=OFF to turn off parquet support; parquet is what requires thrift."
        },
        {
            "created_at": "2021-05-04T23:46:10.189Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12651?focusedCommentId=17339354) by Siddhartha Bagaria (siddharthab):*\nThanks Neal.\r\n\r\nBased on your suggestion, I was able to remove a bulk of the deps by:\r\n```bash\n\r\nR CMD INSTALL --configure-vars='ARROW_R_DEV=true ARROW_PARQUET=OFF ARROW_DATASET=off' .\r\n```\r\n\r\nSoftware compilation is always hard, especially with third-party deps and uncontrolled environments. Thanks for bearing with me.\r\n\r\nAlso, thanks for providing multiple ways to fetch libarrow during the R package build.\r\n\r\nFor actual deployment within our organization, we decided to ask concerned people to install libarrow through the apt repository on artifactory, as that seems to be the most reliable method for most environments."
        },
        {
            "created_at": "2021-05-06T21:30:49.789Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12651?focusedCommentId=17340442) by Neal Richardson (npr):*\nI've generated the Linux binaries for the 4.0.0.1 patch release, which is on its way to CRAN now."
        }
    ]
}