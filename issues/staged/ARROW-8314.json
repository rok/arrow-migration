{
    "issue": {
        "title": "[Python] Provide a method to select a subset of columns of a Table",
        "body": "***Note**: This issue was originally created as [ARROW-8314](https://issues.apache.org/jira/browse/ARROW-8314). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI looked through the open issues and in our API, but didn't directly find something about selecting a subset of columns of a table.\r\n\r\nAssume you have a table like:\r\n\r\n```Java\n\r\ntable = pa.table({'a': [1, 2], 'b': [.1, .2], 'c': ['a', 'b']})\r\n```\r\n\r\nYou can select a single column with `table.column('a')` or `table['a']` to get a chunked array. You can add, append, remove and replace columns (with `add_column`, `append_column`, `remove_column`, `set_column`). \r\nBut an easy way to get a subset of the columns (without the manuall removing the ones you don't want one by one) doesn't seem possible. \r\n\r\nI would propose something like:\r\n\r\n```Java\n\r\ntable.select(['a', 'c'])\r\n```",
        "created_at": "2020-04-02T12:11:48.000Z",
        "updated_at": "2020-07-14T21:03:42.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-07-14T21:03:42.000Z"
    },
    "comments": [
        {
            "created_at": "2020-07-14T21:03:42.686Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8314?focusedCommentId=17157697) by Wes McKinney (wesm):*\nIssue resolved by pull request 7272\n<https://github.com/apache/arrow/pull/7272>"
        }
    ]
}