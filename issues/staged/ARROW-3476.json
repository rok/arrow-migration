{
    "issue": {
        "title": "[Java] mvn test in memory fails on a big-endian platform",
        "body": "***Note**: This issue was originally created as [ARROW-3476](https://issues.apache.org/jira/browse/ARROW-3476). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nApache Arrow is becoming commonplace to exchange data among important emerging analytics frameworks such as Pandas, Numpy, and Spark.\r\n\r\n[IBM Z](https://en.wikipedia.org/wiki/IBM_Z) is one of platforms to process critical transactions such as bank or credit card. Users of IBM Z want to extract insights from these transactions using the emerging analytics systems on IBM Z Linux. These analytics pipelines can be also fast and effective on IBM Z Linux by using Apache Arrow on memory.\r\n\r\nFrom the technical perspective, since IBM Z Linux uses big-endian data format, it is not possible to use Apache Arrow in this pipeline. If Apache Arrow could support big-endian, the use case would be expanded.\r\n\r\n\r\nWhen I ran test case of Apache arrow on a big-endian platform (ppc64be), `mvn test` in memory causes a failure due to an assertion.\r\nIn `TestEndianess.testLittleEndian` test suite, the assertion occurs during an allocation of a `RootAllocator` class.\r\n\r\n```Java\n\r\n$ uname -a\r\nLinux ppc64be.novalocal 4.5.7-300.fc24.ppc64 #1 SMP Fri Jun 10 20:29:32 UTC 2016 ppc64 ppc64 ppc64 GNU/Linux\r\n$ arch  \r\nppc64\r\n$ cd java/memory\r\n$ mvn test\r\n[INFO] Scanning for projects...\r\n[INFO]                                                                         \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building Arrow Memory 0.12.0-SNAPSHOT\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] \r\n...\r\n[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.082 s - in org.apache.arrow.memory.TestAccountant\r\n[INFO] Running org.apache.arrow.memory.TestLowCostIdentityHashMap\r\n[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 s - in org.apache.arrow.memory.TestLowCostIdentityHashMap\r\n[INFO] Running org.apache.arrow.memory.TestBaseAllocator\r\n[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.746 s <<< FAILURE! - in org.apache.arrow.memory.TestEndianess\r\n[ERROR] testLittleEndian(org.apache.arrow.memory.TestEndianess)  Time elapsed: 0.313 s  <<< ERROR!\r\njava.lang.ExceptionInInitializerError\r\n\tat org.apache.arrow.memory.TestEndianess.testLittleEndian(TestEndianess.java:31)\r\nCaused by: java.lang.IllegalStateException: Arrow only runs on LittleEndian systems.\r\n\tat org.apache.arrow.memory.TestEndianess.testLittleEndian(TestEndianess.java:31)\r\n\r\n[ERROR] Tests run: 22, Failures: 0, Errors: 21, Skipped: 1, Time elapsed: 0.055 s <<< FAILURE! - in org.apache.arrow.memory.TestBaseAllocator\r\n...\r\n```",
        "created_at": "2018-10-09T18:48:13.000Z",
        "updated_at": "2022-02-25T07:25:48.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-02-25T07:25:48.000Z"
    },
    "comments": [
        {
            "created_at": "2018-10-16T13:04:07.007Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3476?focusedCommentId=16651642) by Wes McKinney (wesm):*\n`[~kiszk]` there is nothing structurally preventing the Arrow columnar format from being used on big-endian platforms, it is an implementation and testing question. If IBM could make some hardware available for testing and development, it would be a benefit to the project. \r\n\r\nThe columnar memory format itself uses little endian integer representation, so byte swapping would be necessary in many places. I'm interested to hear how big endian support could be introduced in Java and C++ without introducing performance regressions on little endian systems (particular in Java)."
        },
        {
            "created_at": "2018-10-17T16:47:58.531Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3476?focusedCommentId=16653830) by Kazuaki Ishizaki (kiszk):*\n`[~wesmckinn]` Thank you for your kind response. Good to hear no preventing the Arrow columnar format from being used on big-endian platforms.\r\n\r\nRegarding platforms for testing and development, as far as I know, there are two options:\r\n1. IBM LinuxONE\u2122 Community Cloud (120-day complimentary trial per instance) at https://developer.ibm.com/linuxone/\r\n1. IBM Z CI via Jenkins at http://osuosl.org/services/ibm-z/\r\n\r\nRegarding technical aspect, let me look at the implementation. In particular, I am interested in Java implementation.\r\n"
        },
        {
            "created_at": "2018-11-01T14:08:52.390Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3476?focusedCommentId=16671654) by Kazuaki Ishizaki (kiszk):*\n`[~wesmckinn]` At first, I am planning to send a request for IBM Z CI via Jenkins. The request form at http://osuosl.org/services/ibm-z/request_ci/ askes me github id for Z CI as described\r\n```Java\n\r\nWe use Github OAuth to authenticate into the CI system. Please provide a comma separated list of Github username(s) to gain access.\r\n```\r\n\r\nWhich IDs should I write here?"
        },
        {
            "created_at": "2018-11-02T12:05:26.578Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3476?focusedCommentId=16673017) by Wes McKinney (wesm):*\nFor starters at least kou ( `[~kou]`), pitrou ( `[~pitrou]`), xhochy ( `[~xhochy]`), kszucs ( `[~kszucs]`), and cpcloud `[~cpcloud]`. You might want to write on the mailing list to see if there are others who wish to have access"
        },
        {
            "created_at": "2018-11-10T06:12:52.189Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3476?focusedCommentId=16682228) by Kazuaki Ishizaki (kiszk):*\n`[~wesmckinn]` Now, kou, pitrou, xhochy, kszucs, cploud, and I (@kiszk) can access https://ibmz-ci.osuosl.org/."
        },
        {
            "created_at": "2018-11-15T18:16:23.905Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3476?focusedCommentId=16688461) by Kazuaki Ishizaki (kiszk):*\n`[~wesmckinn]` As a next step,it would be good to create a new job in Jenkins. Can I create the new job? Or, will someone create the new job?"
        },
        {
            "created_at": "2018-11-15T22:00:27.885Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3476?focusedCommentId=16688706) by Wes McKinney (wesm):*\nI do not have the bandwidth to help with this right now. Possible one of the other I mentioned may be able to help, but they can chime in"
        },
        {
            "created_at": "2018-11-16T07:14:40.428Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3476?focusedCommentId=16689107) by Kazuaki Ishizaki (kiszk):*\n`[~wesmckinn]` thank you for sharing your status.\r\n\r\n`[~kou]` `[~Pitrou]` `[~xhochy]` `[~kszucs]` `[~cpcloud]` Would it be possible to help me for this jenkins job setting?"
        },
        {
            "created_at": "2018-11-16T07:53:39.130Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3476?focusedCommentId=16689132) by Kouhei Sutou (kou):*\nSure.\r\nYou can create a new job. We will improve the created job together."
        },
        {
            "created_at": "2018-11-16T12:47:07.702Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3476?focusedCommentId=16689376) by Krisztian Szucs (kszucs):*\n`[~kou]` It might be possible to utilize travis for this:\r\n- https://github.com/travis-ci/travis-ci/issues/8869\n- https://github.com/junaruga/ci-multi-arch-test/blob/master/.travis.yml"
        },
        {
            "created_at": "2018-11-19T06:28:35.858Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3476?focusedCommentId=16691292) by Kazuaki Ishizaki (kiszk):*\n`[~kou]` I see. I will prototype on my x86 environment before trying jenkins on s390x.\r\n`[~kszucs]` Thank you for sharing us the status of travis for big endian environment. I will investigate whether it can be used for travis or not at first."
        },
        {
            "created_at": "2018-11-19T07:21:32.136Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3476?focusedCommentId=16691333) by Kouhei Sutou (kou):*\nWow! Big-endian on Traivs CI is very interesting.\r\nAnd it's enough fast: https://travis-ci.org/junaruga/ci-multi-arch-test/jobs/454484221 is 1 min 42 sec.\r\n\r\nIt may be a reasonable option for us."
        },
        {
            "created_at": "2019-03-01T06:13:16.388Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3476?focusedCommentId=16781323) by ketan kunde (ketan22584):*\nIs there any new development done to convert this Arrow\\* based test cases to big endian?\r\n\r\n\u00a0"
        },
        {
            "created_at": "2019-03-04T02:46:37.219Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3476?focusedCommentId=16782925) by Kazuaki Ishizaki (kiszk):*\nNot yet done since I am busy recently.\r\nAt first, I will enable Jenkins on the big-endian environment."
        },
        {
            "created_at": "2019-04-09T08:32:37.734Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3476?focusedCommentId=16813123) by ketan kunde (ketan22584):*\nHi\u00a0 `[~kiszk]`,\u00a0\r\n\r\nI wanted some more information about this test case related to 'Arrow'\r\n\r\n1) Which feature of spark are this test targetting to?\r\n\r\n2) Are this test specific to little endian environment and yet to be ported for Big endian?\r\n\r\n\u00a0\r\n\r\nRegards\r\n\r\nKetan\u00a0"
        },
        {
            "created_at": "2022-02-24T15:05:13.810Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3476?focusedCommentId=17497455) by Antoine Pitrou (apitrou):*\n`[~kiszk]` Does this issue need to remain opened?"
        },
        {
            "created_at": "2022-02-25T07:24:48.176Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3476?focusedCommentId=17497953) by Kazuaki Ishizaki (kiszk):*\nSure, let me close this issue since this was already solved."
        },
        {
            "created_at": "2022-02-25T07:25:48.435Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3476?focusedCommentId=17497954) by Kazuaki Ishizaki (kiszk):*\nThis is already solved since Arrow 3.0 or later support big-endian in C++ binding.\u00a0"
        }
    ]
}