{
    "issue": {
        "title": "[C++] compile error due to incomplete type for unique_ptr",
        "body": "***Note**: This issue was originally created as [ARROW-7316](https://issues.apache.org/jira/browse/ARROW-7316). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nHi,\u00a0\r\nI am getting following compile error from Arrow c++\r\n```java\n\r\nWarning: Can't read registry to find the necessary compiler setting \r\nMake sure that Python modules winreg, win32api or win32con are installed.C compiler: /home/danny/miniconda3/envs/DEV/bin/x86_64-conda_cos6-linux-gnu-cc -Wno-unused-result -Wsign-compare -DNDEBUG -fwrapv -O2 -Wall -Wstrict-prototypes -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt \r\n-O2 -pipe -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -fPIC \r\ncompile options: '-DBUILTIN_PARQUET_READER -I. -I/home/danny/miniconda3/envs/DEV/include -I/home/danny/miniconda3/envs/DEV/include/python3.7m -c'\r\nextra options: '-std=c++11 -g0 -O3'\r\nx86_64-conda_cos6-linux-gnu-cc: bodo/io/_parquet.cpp\r\nx86_64-conda_cos6-linux-gnu-cc: bodo/io/_parquet_reader.cpp\r\ncc1plus: warning: command line option '-Wstrict-prototypes' is valid for C/ObjC but not for C++\r\ncc1plus: warning: command line option '-Wstrict-prototypes' is valid for C/ObjC but not for C++\r\nIn file included from /home/danny/miniconda3/envs/DEV/x86_64-conda_cos6-linux-gnu/include/c++/7.3.0/memory:80:0,\r\n from /home/danny/miniconda3/envs/DEV/include/parquet/arrow/reader.h:22,\r\n from bodo/io/_parquet.cpp:13:/home/danny/miniconda3/envs/DEV/x86_64-conda_cos6-linux-gnu/include/c++/7.3.0/bits/unique_ptr.h: In instantiation of 'void std::default_delete<_Tp>::operator()(_Tp*) const [with _Tp = arrow::RecordBatchReader]':\r\n/home/danny/miniconda3/envs/DEV/x86_64-conda_cos6-linux-gnu/include/c++/7.3.0/bits/unique_ptr.h:268:17: required from 'std::unique_ptr<_Tp, _Dp>::~unique_ptr() [with _Tp = arrow::RecordBatchReader; _Dp = std::default_delete<arrow::RecordBatchReader>]'/home/danny/miniconda3/envs/DEV/include/parquet/arrow/reader.h:161:49: required from here\r\n/home/danny/miniconda3/envs/DEV/x86_64-conda_cos6-linux-gnu/include/c++/7.3.0/bits/unique_ptr.h:76:22: error: invalid application of 'sizeof' to incomplete type 'arrow::RecordBatchReader'\r\n static_assert(sizeof(_Tp)>0, ^In file included from /home/danny/miniconda3/envs/DEV/x86_64-conda_cos6-linux-gnu/include/c++/7.3.0/bits/shared_ptr.h:52:0, from /home/danny/miniconda3/envs/DEV/x86_64-conda_cos6-linux-gnu/include/c++/7.3.0/memory:81, from /home/danny/miniconda3/envs/DEV/include/parquet/arrow/reader.h:22,\r\n from bodo/io/_parquet.cpp:13:\r\n/home/danny/miniconda3/envs/DEV/x86_64-conda_cos6-linux-gnu/include/c++/7.3.0/bits/shared_ptr_base.h: In instantiation of 'std::__shared_ptr<_Tp, _Lp>::__shared_ptr(_Yp*) \r\n[with _Yp = arrow::RecordBatchReader; <template-parameter-2-2> = void; _Tp = arrow::RecordBatchReader; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2]':\r\n/home/danny/miniconda3/envs/DEV/x86_64-conda_cos6-linux-gnu/include/c++/7.3.0/bits/shared_ptr_base.h:1243:4: required from 'std::__shared_ptr<_Tp, _Lp>::_SafeConv<_Yp> std::__shared_ptr<_Tp, _Lp>::reset(_Yp*) [with _Yp = arrow::RecordBatchReader; _Tp = arrow::RecordBatchReader; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2; std::__shared_ptr<_Tp, _Lp>::_SafeConv<_Yp> = void]'\r\n/home/danny/miniconda3/envs/DEV/include/parquet/arrow/reader.h:164:29: required from here\r\n/home/danny/miniconda3/envs/DEV/x86_64-conda_cos6-linux-gnu/include/c++/7.3.0/bits/shared_ptr_base.h:1082:25: error: invalid application of 'sizeof' to incomplete type 'arrow::RecordBatchReader'\r\n static_assert( sizeof(_Yp) > 0, \"incomplete type\" );\r\n ^\r\nerror: Command \"/home/danny/miniconda3/envs/DEV/bin/x86_64-conda_cos6-linux-gnu-cc -Wno-unused-result -Wsign-compare -DNDEBUG -fwrapv -O2 -Wall -Wstrict-prototypes -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -fPIC -DBUILTIN_PARQUET_READER -I. -I/home/danny/miniconda3/envs/DEV/include -I/home/danny/miniconda3/envs/DEV/include/python3.7m -c bodo/io/_parquet.cpp -o build/temp.linux-x86_64-3.7/bodo/io/_parquet.o -std=c++11 -g0 -O3\" failed with exit status 1\n```\r\n\u00a0\r\nThe actual error in above entire error message is\r\n```java\n\r\n/home/danny/miniconda3/envs/DEV/include/parquet/arrow/reader.h:161:49: required from here /home/danny/miniconda3/envs/DEV/x86_64-conda_cos6-linux-gnu/include/c++/7.3.0/bits/unique_ptr.h:76:22: error: invalid application of 'sizeof' to incomplete type 'arrow::RecordBatchReader' static_assert(sizeof(_Tp)>0,\r\n```\r\n\u00a0\r\nNew code(line 161 to 166 in parquet/arrow/reader.h) is introduced in version 0.15 and the new code is generating above compile errors.\u00a0\r\nAny remedy for this?",
        "created_at": "2019-12-04T19:35:20.000Z",
        "updated_at": "2020-05-25T20:05:54.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-05-25T20:05:54.000Z"
    },
    "comments": [
        {
            "created_at": "2020-01-30T18:17:21.902Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7316?focusedCommentId=17026896) by Antoine Pitrou (apitrou):*\n`[~daehee0104]` Have you tried to reproduce on git master? Which options are you using when compiling Arrow C++?"
        },
        {
            "created_at": "2020-01-30T18:21:19.460Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7316?focusedCommentId=17026899) by Antoine Pitrou (apitrou):*\nIf you are compiling your own code against Arrow you can simply add the following line:\r\n```c++\n\r\n#include <arrow/record_batch.h>\r\n```\r\n\r\nDoes it solve your issue?"
        },
        {
            "created_at": "2020-04-27T02:18:22.006Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7316?focusedCommentId=17092937) by Wes McKinney (wesm):*\n`[~daehee0104]` could you let us know? Otherwise we should close this"
        }
    ]
}