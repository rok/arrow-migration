{
    "issue": {
        "title": "[C++] Caching pre computed data based on FunctionOptions in the kernel state",
        "body": "***Note**: This issue was originally created as [ARROW-10556](https://issues.apache.org/jira/browse/ARROW-10556). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSee discussion here:\r\n\r\n<https://github.com/apache/arrow/pull/8621#issuecomment-724796243>\r\n\r\n\u00a0\r\n\r\nA kernel might need to pre-compute something based on the function options passed. Since the Kernel-FunctionOptions mapping is not 1-to-1, it does not make sense to store this in the function option object.\u00a0\r\n\r\nCurrently,\u00a0match_substring calculates a `prefix_table` on each Exec call. In trim (<https://github.com/apache/arrow/pull/8621)>\u00a0we compute a vector<bool> on each Exec call. This should be done only once and cached in the kernel state instead.\r\n\r\n\u00a0",
        "created_at": "2020-11-11T10:44:03.000Z",
        "updated_at": "2021-01-05T18:44:03.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2020-11-19T23:44:24.591Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10556?focusedCommentId=17235792) by Wes McKinney (wesm):*\nIsn't this what the init function is for?\r\n\r\nhttps://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/kernels/scalar_set_lookup.cc#L160"
        }
    ]
}