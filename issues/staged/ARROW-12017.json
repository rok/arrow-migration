{
    "issue": {
        "title": "[R] [Documentation] Make proper developing arrow docs",
        "body": "***Note**: This issue was originally created as [ARROW-12017](https://issues.apache.org/jira/browse/ARROW-12017). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nRight now we have discussions of installation in two places: the readme and a vignette that is (almost exclusively) focused on Linux. Both of these cover installation as a user and installation as a developer.\r\n\r\nWe want to change this to have a better split so that we can focus the topics to what people actually need:\r\n\r\n- The readme should have user-facing how-to-install from CRAN + how to get nightlies and a link to a developer docs vignette if one wants to build from source / develop\n- The developer docs vignette should include details about compilation, debugging, etc.\n  \n  The developer docs should:\n  [ ] Note how to install the R dependencies for the package. The audience here is not necessarily R developers, so we should be super explicit and not assume things like \"I have set a CRAN mirror, of course\"\n  [ ] Recommend building + installing libarrow to the same / a similar non-system directory as the python docs do. (Note: this might take some testing + work to ensure that when R builds it does not attempt to link against existing system installs \u2014 I've had this happen in the past and it can be incredibly confusing when it does)\n  [ ] Include debugging instructions for \"Can't load this symbol\" \"Can't find this function\" type errors (either the library isn't linking at runtime at all, or it's linking to a stale libarrow and libarrow needs to be rebuilt.\n  [ ] discuss nightly builds and how to get them / when one won't be able to get them depending on the method of install\n",
        "created_at": "2021-03-18T15:36:29.000Z",
        "updated_at": "2021-04-15T02:32:57.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Documentation",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-04-15T02:32:46.000Z"
    },
    "comments": [
        {
            "created_at": "2021-03-18T20:28:53.272Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12017?focusedCommentId=17304430) by Jonathan Keane (jonkeane):*\nA handful of errors I've seen reported:\r\n\r\n1. Errors that can come up\n   \n   ```\n   > library(arrow)\n   Error: package or namespace load failed for \u2018arrow\u2019 in dyn.load(file, DLLpath = DLLpath, ...):\n    unable to load shared object '/Library/Frameworks/R.framework/Versions/4.0/Resources/library/arrow/libs/arrow.so':\n     dlopen(/Library/Frameworks/R.framework/Versions/4.0/Resources/library/arrow/libs/arrow.so, 6): Library not loaded: /Users/jkeane/repos/arrow/dist/lib/libarrow_dataset.400.dylib\n     Referenced from: /Library/Frameworks/R.framework/Versions/4.0/Resources/library/arrow/libs/arrow.so\n     Reason: image not found\n   ```\n   \n   Possible causes:\n- move/removed the libarrow that you have linked the R library against. (e.g. you installed to `arrow/dist` and then removed that folder)\n  \n1. macOS + brew\n   I don\u2019t think this is directly related to the issue y\u2019all have been discussing, but heads up that on macOS, if you brew install something completely unrelated to Arrow, Homebrew can trigger updates that will cause the Arrow C++ library to stop working if you built it using ARROW_DEPENDENCY_USE_SHARED=ON (which is the default)\n"
        },
        {
            "created_at": "2021-04-15T02:32:46.283Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12017?focusedCommentId=17321860) by Neal Richardson (npr):*\nIssue resolved by pull request 9898\n<https://github.com/apache/arrow/pull/9898>"
        }
    ]
}