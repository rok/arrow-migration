{
    "issue": {
        "title": "[Rust] [DataFusion] Allow DataFusion to cast all type combinations supported by Arrow cast kernel",
        "body": "***Note**: This issue was originally created as [ARROW-10165](https://issues.apache.org/jira/browse/ARROW-10165). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen the  DataFusion planner inserts casts, today it relies on special logic to determine the valid coded casts. \r\n\r\nThe actual arrow cast kernels support a much wider range of data types, and thus DataFusion is artificially limiting the casts it supports for no particularly good reason I can see.\r\n\r\nThis ticket tracks the work to remove the extra casting checking in the datafusion planner and instead simply rely on runtime check of arrow cast compute kernel\r\n\r\nThe potential  downside of this approach is that the error may be generated later in the execution process (rather than the planner), and possibly have a less specific error message, the upside is there is less code and we get several conversions immediately (like timestamp predicate casting)\r\n\r\nI also plan to add DictionaryArray support to the casting kernels and I would like to avoid having to replicate some part of that logic in DataFusion\r\n\r\n",
        "created_at": "2020-10-02T18:10:09.000Z",
        "updated_at": "2020-10-08T11:15:12.000Z",
        "labels": [
            "Migrated from Jira",
            "Type: task"
        ],
        "closed": true,
        "closed_at": "2020-10-08T11:15:12.000Z"
    },
    "comments": [
        {
            "created_at": "2020-10-08T11:14:59.972Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10165?focusedCommentId=17210151) by Andrew Lamb (alamb):*\nPer comments on the PR, we have decided on a different approach here. I expect the code will be done under the aegis of https://issues.apache.org/jira/browse/ARROW-10163. \r\n\r\nClosing this one for now"
        }
    ]
}