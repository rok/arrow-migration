{
    "issue": {
        "title": "[C++] Fix segfault with std::to_string in -O3 builds on gcc 7.5.0",
        "body": "***Note**: This issue was originally created as [ARROW-9500](https://issues.apache.org/jira/browse/ARROW-9500). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThere seems to be a gcc bug related to `std::to_string` that only appears in `-O3` builds. It can be seen in something innocuous like\r\n\r\n```Java\n\r\n    return Status::Invalid(\"Float value \", std::to_string(val), \" was truncated converting to\",\r\n                           *output.type());\r\n```\r\n\r\nwhere val is NaN. I haven't found a canonical reference but using something other than to_string for the formatting (here just letting `std::ostringstream` take care of it) makes the problem go away\r\n\r\nI wasn't able to reproduce the issue with gcc-8\r\n\r\nEDIT: it's a known bug in gcc https://gcc.gnu.org/bugzilla/show_bug.cgi?id=86274",
        "created_at": "2020-07-16T03:04:14.000Z",
        "updated_at": "2020-07-16T04:58:40.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-07-16T04:58:40.000Z"
    },
    "comments": [
        {
            "created_at": "2020-07-16T04:58:40.091Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9500?focusedCommentId=17158889) by Kouhei Sutou (kou):*\nIssue resolved by pull request 7781\n<https://github.com/apache/arrow/pull/7781>"
        }
    ]
}