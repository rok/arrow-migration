{
    "issue": {
        "title": "[C++] Upgrade mimalloc",
        "body": "***Note**: This issue was originally created as [ARROW-11475](https://issues.apache.org/jira/browse/ARROW-11475). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI tried this in ARROW-11350 but ran into an issue (https://github.com/microsoft/mimalloc/issues/353). That has since been resolved and we could apply a patch to bring it in. Or we can wait for it to get into a proper release.\r\n\r\nThere is also now a 1.7 release, which claims to work on the Apple M1, as well as a 2.0 version, which claims better performance. ",
        "created_at": "2021-02-02T19:11:43.000Z",
        "updated_at": "2022-01-27T21:40:10.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-12-23T06:52:26.000Z"
    },
    "comments": [
        {
            "created_at": "2021-02-03T16:12:43.046Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11475?focusedCommentId=17278107) by Antoine Pitrou (apitrou):*\nIt may be interesting to also exercise ARROW-11433 with those new mimalloc versions. cc `[~jonkeane]`"
        },
        {
            "created_at": "2021-02-03T16:19:21.976Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11475?focusedCommentId=17278120) by Jonathan Keane (jonkeane):*\nAbsolutely \u2014 I'll watch this as it goes and exercise ARROW-11433 with whichever new version we go with. FWIW, I tested with version 1.6 and found good performance with that already."
        },
        {
            "created_at": "2021-03-10T18:53:13.287Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11475?focusedCommentId=17299073) by Antoine Pitrou (apitrou):*\n`[~npr]` `[~jonkeane]` did you have a chance to run benchmarks (especially on macOS)?"
        },
        {
            "created_at": "2021-04-07T08:53:02.608Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11475?focusedCommentId=17316136) by Krisztian Szucs (kszucs):*\nIssue resolved by pull request 9894\n<https://github.com/apache/arrow/pull/9894>"
        },
        {
            "created_at": "2021-04-14T20:00:02.602Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11475?focusedCommentId=17321289) by David Li (lidavidm):*\nReverted in <https://github.com/apache/arrow/pull/10024>\u00a0as we found performance regressions and a bug in mimalloc (<https://github.com/microsoft/mimalloc/issues/363>).\u00a0"
        },
        {
            "created_at": "2021-06-22T17:27:21.660Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11475?focusedCommentId=17367545) by Neal Richardson (npr):*\nThere were new releases of mimalloc last week:\r\n\r\nLatest release tag:\u00a0`v2.0.2`\u00a0(beta, 2021-06-17).\r\nLatest stable tag:\u00a0`v1.7.2`\u00a0(2021-06-17).\r\n\r\nThe issue #363 that David referenced appears to have been worked around at least. IDK about performance but we could try again."
        },
        {
            "created_at": "2021-11-10T16:35:41.948Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11475?focusedCommentId=17441832) by Antoine Pitrou (apitrou):*\nShould this be tried again?"
        },
        {
            "created_at": "2021-11-22T14:52:38.114Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11475?focusedCommentId=17447452) by Antoine Pitrou (apitrou):*\n`[~npr]` `[~jonkeane]` ping."
        },
        {
            "created_at": "2021-11-22T14:59:37.546Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11475?focusedCommentId=17447458) by Neal Richardson (npr):*\nSure, why not? Not sure if the issues have been addressed upstream but only one way to find out."
        },
        {
            "created_at": "2021-11-22T15:00:41.187Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11475?focusedCommentId=17447460) by Antoine Pitrou (apitrou):*\nAt least the 1.7.x release would be good to test. Even if the issues were not specifically addressed, it would bring us to a more recent release."
        },
        {
            "created_at": "2021-12-23T06:52:26.270Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11475?focusedCommentId=17464327) by Kouhei Sutou (kou):*\nIssue resolved by pull request 12020\n<https://github.com/apache/arrow/pull/12020>"
        },
        {
            "created_at": "2022-01-27T21:40:10.754Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11475?focusedCommentId=17483443) by Jeroen (jeroenooms):*\nFYI, we had to revert back to mimalloc 1.7.2 to build on MacOS 10.13 high-sierra, because 1.7.3 failed to build with xcode 10.1:\r\n\r\n\u00a0\r\n```java\n\r\n[ 60%] Building C object CMakeFiles/mimalloc-static.dir/src/alloc.c.o\r\n/usr/local/Homebrew/Library/Homebrew/shims/mac/super/clang -DMI_STATIC_LIB -I/tmp/apache-arrow-20220126-14221-1qo4vm7/apache-arrow-7.0.0/build/mimalloc_ep-prefix/src/mimalloc_ep/include -Qunused-arguments -O3 -DNDEBUG -DNDEBUG -fPIC \u00a0 -Qunused-arguments -O3 -DNDEBUG -DNDEBUG -fPIC -fPIC -Wall -Wextra -Wno-unknown-pragmas -fvisibility=hidden -Wstrict-prototypes -Wpedantic -Wno-static-in-inline -ftls-model=local-dynamic -MD -MT CMakeFiles/mimalloc-static.dir/src/alloc.c.o -MF CMakeFiles/mimalloc-static.dir/src/alloc.c.o.d -o CMakeFiles/mimalloc-static.dir/src/alloc.c.o -c /tmp/apache-arrow-20220126-14221-1qo4vm7/apache-arrow-7.0.0/build/mimalloc_ep-prefix/src/mimalloc_ep/src/alloc.c\r\n/tmp/apache-arrow-20220126-14221-1qo4vm7/apache-arrow-7.0.0/build/mimalloc_ep-prefix/src/mimalloc_ep/src/alloc.c:489:24: error: address argument to atomic operation must be a pointer to non-const _Atomic type ('const _Atomic(mi_threadid_t) *' invalid)\r\n\u00a0 if (mi_likely(tid == mi_atomic_load_relaxed(&segment->thread_id) && page->flags.full_aligned == 0)) { \u00a0// the thread id matches and it is not a full page, nor has aligned blocks\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0^ \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0~~~~~~~~~~~~~~~~~~~\r\n/tmp/apache-arrow-20220126-14221-1qo4vm7/apache-arrow-7.0.0/build/mimalloc_ep-prefix/src/mimalloc_ep/include/mimalloc-atomic.h:47:50: note: expanded from macro 'mi_atomic_load_relaxed'\r\n#define mi_atomic_load_relaxed(p) \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0mi_atomic(load_explicit)(p,mi_memory_order(relaxed))\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0^ \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0~\r\n/tmp/apache-arrow-20220126-14221-1qo4vm7/apache-arrow-7.0.0/build/mimalloc_ep-prefix/src/mimalloc_ep/include/mimalloc-atomic.h:35:33: note: expanded from macro 'mi_atomic'\r\n#define \u00a0mi_atomic(name) \u00a0 \u00a0 \u00a0 \u00a0atomic_##name\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ^\r\n<scratch space>:470:1: note: expanded from here\r\natomic_load_explicit\r\n^\r\n/Applications/Xcode-10.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/10.0.0/include/stdatomic.h:135:30: note: expanded from macro 'atomic_load_explicit'\r\n#define atomic_load_explicit __c11_atomic_load\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0^\r\n/tmp/apache-arrow-20220126-14221-1qo4vm7/apache-arrow-7.0.0/build/mimalloc_ep-prefix/src/mimalloc_ep/include/mimalloc-internal.h:153:46: note: expanded from macro 'mi_likely'\r\n#define mi_likely(x) \u00a0 \u00a0 \u00a0 __builtin_expect((x),1)\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0^\r\n1 error generated.\r\nmake[5]: *** [CMakeFiles/mimalloc-static.dir/src/alloc.c.o] Error 1\r\nmake[4]: *** [CMakeFiles/mimalloc-static.dir/all] Error 2\r\nmake[3]: *** [all] Error 2\r\nmake[2]: *** [mimalloc_ep-prefix/src/mimalloc_ep-stamp/mimalloc_ep-build] Error 2\r\nmake[1]: *** [CMakeFiles/mimalloc_ep.dir/all] Error 2\r\n \n```"
        }
    ]
}