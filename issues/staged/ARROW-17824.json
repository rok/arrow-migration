{
    "issue": {
        "title": "[C++][Gandiva] Implement preallocation for variable length output buffer",
        "body": "***Note**: This issue was originally created as [ARROW-17824](https://issues.apache.org/jira/browse/ARROW-17824). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen the output type of an expression is of variable length, e.g. string, Gandiva would realloc the output buffer to make space for new outputs for each row. When num of rows is high some memory allocators perform poorly.\r\n\r\nWe can use the std::vector like approach to amortize the allcation cost. First allocate some initial space depending on the input size. Each time we run out of space, double the buffer size. In the end shrink it to fit the actual size.\u00a0Arrow string builder also uses this approach.",
        "created_at": "2022-09-23T07:51:32.000Z",
        "updated_at": "2022-09-26T07:21:36.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++ - Gandiva",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-09-26T05:06:58.000Z"
    },
    "comments": [
        {
            "created_at": "2022-09-26T05:06:58.423Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17824?focusedCommentId=17609290) by Kouhei Sutou (kou):*\nIssue resolved by pull request 14230\n<https://github.com/apache/arrow/pull/14230>"
        }
    ]
}