{
    "issue": {
        "title": "json.read_json crashes due to possible race",
        "body": "***Note**: This issue was originally created as [ARROW-9547](https://issues.apache.org/jira/browse/ARROW-9547). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSimple calls to `read_json` will crash with an exception like below.  The crashing can be non-deterministic, depending on the input file.\r\n\r\n\u2014\r\n\r\nTraceback (most recent call last):\r\n File \"test_arrow.py\", line 11, in <module>\r\n data = json.read_json(f, json.ReadOptions(use_threads=True))\r\n File \"pyarrow/_json.pyx\", line 193, in pyarrow._json.read_json\r\n File \"pyarrow/error.pxi\", line 105, in pyarrow.lib.check_status\r\n\r\npyarrow.lib.ArrowNotImplementedError: JSON conversion to struct<continent: timestamp[s], subcontinent: timestamp[s], country: timestamp[s]> is not supported\r\n\r\n\u2014\r\n\r\nThe input file is several thousand lines of ndjson, where each record looks similar to:\r\n\r\n```\r\n\r\n{\r\n  \"title\": \"Black Friday 2019: Our Tips for Finding the Best Deals\",\r\n  \"text\": \".... <bunch of text with arbitrary length>\"\r\n  <bunch of other string and integer fields with arbitrary length>\r\n  \"geoLocations\": [\r\n    {\r\n      \"continent\": \"Americas\",\r\n      \"subcontinent\": \"Northern America\",\r\n      \"country\": \"United States\"\r\n    }\r\n  ]\r\n}\r\n```\r\nand any particular record may have an empty array for a geoLocation.\r\n\r\nWorkarounds include:\r\n- shuffling the input file (not guaranteed to work)\n- partitioning the input file into separate pieces (not guaranteed to work)\n- disabling threaded reading (always works)\n- changing block size (not guaranteed to work)\n  \n  Other things that stop the crash include:\n- deleting fields from the input records\n  \n  I'm guessing that anything that changes the data partitioning and/or multi-threading affects the auto-schema introspection, which is the source of conflict.   Supplying an explicit schema may also be a workaround.\n  \n  It's arguable that this is not a bug, but updating the API docs with a warning would be very helpful.\n  \n  \u00a0",
        "created_at": "2020-07-23T22:48:19.000Z",
        "updated_at": "2020-07-23T22:49:12.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": []
}