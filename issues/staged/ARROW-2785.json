{
    "issue": {
        "title": "[C++] Crash in json-integration-test",
        "body": "***Note**: This issue was originally created as [ARROW-2785](https://issues.apache.org/jira/browse/ARROW-2785). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThis is probably something I keep getting wrong when creating a new environment, but after creating a Python 3.7 conda environment and installing the tool chain, I get the following crash (apparently boost-related):\r\n\r\n```Java\n\r\n$ ./build-test/debug/json-integration-test \r\n[==========] Running 2 tests from 1 test case.\r\n[----------] Global test environment set-up.\r\n[----------] 2 tests from TestJSONIntegration\r\n[ RUN      ] TestJSONIntegration.ConvertAndValidate\r\n*** Error in `./build-test/debug/json-integration-test': munmap_chunk(): invalid pointer: 0x00007ffc22542578 ***\r\n======= Backtrace: =========\r\n/lib/x86_64-linux-gnu/libc.so.6(+0x777e5)[0x7f4762f257e5]\r\n/lib/x86_64-linux-gnu/libc.so.6(cfree+0x1a8)[0x7f4762f32698]\r\n/home/antoine/miniconda3/envs/pyarrow37/lib/libstdc++.so.6(_ZNSsD1Ev+0x15)[0x7f476384cca5]\r\n./build-test/debug/json-integration-test(_ZN5boost10filesystem4pathD1Ev+0x18)[0x694f4a]\r\n./build-test/debug/json-integration-test[0x69205a]\r\n./build-test/debug/json-integration-test(_ZN5arrow3ipc19TestJSONIntegration7mkstempEv+0x2c)[0x69599e]\r\n./build-test/debug/json-integration-test(_ZN5arrow3ipc43TestJSONIntegration_ConvertAndValidate_Test8TestBodyEv+0x3b)[0x69210f]\r\n./build-test/debug/json-integration-test(_ZN7testing8internal38HandleSehExceptionsInMethodIfSupportedINS_4TestEvEET0_PT_MS4_FS3_vEPKc+0x65)[0x8759da]\r\n./build-test/debug/json-integration-test(_ZN7testing8internal35HandleExceptionsInMethodIfSupportedINS_4TestEvEET0_PT_MS4_FS3_vEPKc+0x5a)[0x86f65d]\r\n./build-test/debug/json-integration-test(_ZN7testing4Test3RunEv+0xd5)[0x853697]\r\n./build-test/debug/json-integration-test(_ZN7testing8TestInfo3RunEv+0x105)[0x853fef]\r\n./build-test/debug/json-integration-test(_ZN7testing8TestCase3RunEv+0xf4)[0x8546f8]\r\n./build-test/debug/json-integration-test(_ZN7testing8internal12UnitTestImpl11RunAllTestsEv+0x2ac)[0x85b666]\r\n./build-test/debug/json-integration-test(_ZN7testing8internal38HandleSehExceptionsInMethodIfSupportedINS0_12UnitTestImplEbEET0_PT_MS4_FS3_vEPKc+0x65)[0x876eb7]\r\n./build-test/debug/json-integration-test(_ZN7testing8internal35HandleExceptionsInMethodIfSupportedINS0_12UnitTestImplEbEET0_PT_MS4_FS3_vEPKc+0x5a)[0x870327]\r\n./build-test/debug/json-integration-test(_ZN7testing8UnitTest3RunEv+0xc6)[0x85a128]\r\n./build-test/debug/json-integration-test(_Z13RUN_ALL_TESTSv+0x11)[0x6945e6]\r\n./build-test/debug/json-integration-test(main+0xfb)[0x693a2b]\r\n/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf0)[0x7f4762ece830]\r\n./build-test/debug/json-integration-test(_start+0x29)[0x68b4a9]\r\n```",
        "created_at": "2018-07-02T18:54:46.000Z",
        "updated_at": "2018-09-15T14:17:09.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2018-09-15T14:17:04.000Z"
    },
    "comments": [
        {
            "created_at": "2018-07-02T18:56:39.023Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2785?focusedCommentId=16530303) by Antoine Pitrou (apitrou):*\ngdb backtrace:\r\n```java\n\r\n#0\u00a0 0x00007ffff6baf428 in __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:54\r\n#1\u00a0 0x00007ffff6bb102a in __GI_abort () at abort.c:89\r\n#2\u00a0 0x00007ffff6bf17ea in __libc_message (do_abort=do_abort@entry=2,\r\n\u00a0\u00a0\u00a0 fmt=fmt@entry=0x7ffff6d0aed8 \"*** Error in `%s': %s: 0x%s ***\\n\") at ../sysdeps/posix/libc_fatal.c:175\r\n#3\u00a0 0x00007ffff6bfe698 in malloc_printerr (ar_ptr=0x0, ptr=<optimized out>, str=0x7ffff6d0af00 \"munmap_chunk(): invalid pointer\",\r\n\u00a0\u00a0\u00a0 action=<optimized out>) at malloc.c:5006\r\n#4\u00a0 munmap_chunk (p=<optimized out>) at malloc.c:2842\r\n#5\u00a0 __GI___libc_free (mem=<optimized out>) at malloc.c:2963\r\n#6\u00a0 0x00007ffff7518ca5 in std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string (\r\n\u00a0\u00a0\u00a0 this=<optimized out>, __in_chrg=<optimized out>)\r\n\u00a0\u00a0\u00a0 at /opt/conda/conda-bld/compilers_linux-64_1520532893746/work/.build/x86_64-conda_cos6-linux-gnu/build/build-cc-gcc-final/x86_64-conda_cos6-linux-gnu/libstdc++-v3/include/bits/basic_string.h:3498\r\n#7\u00a0 0x0000000000694f4a in boost::filesystem::path::~path (this=0x7fffffffd420, __in_chrg=<optimized out>)\r\n\u00a0\u00a0\u00a0 at /home/antoine/miniconda3/envs/pyarrow37/include/boost/filesystem/path.hpp:56\r\n#8\u00a0 0x000000000069205a in arrow::ipc::temp_path () at ../src/arrow/ipc/json-integration-test.cc:233\r\n#9\u00a0 0x000000000069599e in arrow::ipc::TestJSONIntegration::mkstemp (this=0xb95340) at ../src/arrow/ipc/json-integration-test.cc:241\r\n#10 0x000000000069210f in arrow::ipc::TestJSONIntegration_ConvertAndValidate_Test::TestBody (this=0xb95340)\r\n\u00a0\u00a0\u00a0 at ../src/arrow/ipc/json-integration-test.cc:366\r\n```"
        },
        {
            "created_at": "2018-07-02T19:01:14.283Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2785?focusedCommentId=16530308) by Wes McKinney (wesm):*\nCould be a toolchain conflict since conda-forge is in active flux in recent days"
        },
        {
            "created_at": "2018-07-02T19:03:10.124Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2785?focusedCommentId=16530312) by Antoine Pitrou (apitrou):*\nI installed the toolchain from Anaconda actually."
        },
        {
            "created_at": "2018-07-02T19:12:31.032Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2785?focusedCommentId=16530322) by Antoine Pitrou (apitrou):*\nOk, installing `boost-cpp` 1.67.0 from conda-forge (instead of 1.65.0 from Anaconda) fixes the crash."
        },
        {
            "created_at": "2018-07-02T19:15:52.391Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2785?focusedCommentId=16530325) by Antoine Pitrou (apitrou):*\nDo you think we should guard against this issue rather than let the user figure it out? I'm not sure what's mattering here: the boost version, or which repository it comes from."
        },
        {
            "created_at": "2018-07-02T22:10:00.902Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2785?focusedCommentId=16530492) by Dimitri Vorona (alendit):*\nH,\r\n \u00a0\r\n TestJSONIntegration.ConvertAndValidate also throws a valgrind-memcheck error in boost filesystem (boost 1.67). Might be related, but I'll look into it tomorrow."
        },
        {
            "created_at": "2018-07-02T22:21:57.115Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2785?focusedCommentId=16530504) by Wes McKinney (wesm):*\n`[~pitrou]` how odd. Presuming it's reproducible let's investigate further. "
        },
        {
            "created_at": "2018-07-03T09:01:57.207Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2785?focusedCommentId=16531051) by Dimitri Vorona (alendit):*\nThe (edit: first) valgrind warning seem unrelated: it is produced in fs::unique_path in string conversion. A lot of people seem to have valgrind complain about __wcsnlen_\\*, but I didn't find any real explanation about the problem. A gcc/libc++ or valgrind false positive seem probable. Anyways, this is unlikely the cause of Antoines crash."
        },
        {
            "created_at": "2018-07-03T11:12:24.074Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2785?focusedCommentId=16531209) by Dimitri Vorona (alendit):*\nI've written about the second valgrind warning to the mailing list, it doesn't have anything to do with this bug, either."
        }
    ]
}