{
    "issue": {
        "title": "[C++] Support building with full path install_name on macOS",
        "body": "***Note**: This issue was originally created as [ARROW-1537](https://issues.apache.org/jira/browse/ARROW-1537). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe current libarrow.dylib uses @rpath/libarrow.0.dylib for install_name. It works well when we can set DYLD_LIBRARY_PATH environment variable or libarrow.dylib is installed into the standard path such as /usr/local/lib/.\n\nThere are some cases that we can't set DYLD_LIBRARY_PATH. For example, we can't set DYLD_LIBRARY_PATH when we use libarrow.0.dylib via a shell script. Because the recent macOS doesn't inherit DYLD_LIBRARY_PATH for security reason. It's caused as System Integration Protection (SIP). We need to use libarrow.0.dylib via a shell script when we build Arrow GLib's \\*.gir files. It means that we need to install Arrow C++ into the standard path for building Arrow GLib on macOS. If we install Arrow C++ into the non-standard path such as ~/local/, we can't build Arrow GLib.\n\nIf we use full path for libarrow.dylib's install_name, we don't need to set DYLD_LIBRARY_PATH. It means that we can build Arrow GLib with Arrow C++ installed into the non-standard path such as ~/local/.",
        "created_at": "2017-09-14T00:03:52.000Z",
        "updated_at": "2017-09-25T12:34:44.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2017-09-15T14:47:13.000Z"
    },
    "comments": [
        {
            "created_at": "2017-09-15T14:47:13.305Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1537?focusedCommentId=16167958) by Wes McKinney (wesm):*\nIssue resolved by pull request 1100\n<https://github.com/apache/arrow/pull/1100>"
        }
    ]
}