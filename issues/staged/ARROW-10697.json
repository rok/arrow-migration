{
    "issue": {
        "title": "[C++] Consolidate bitmap word readers",
        "body": "***Note**: This issue was originally created as [ARROW-10697](https://issues.apache.org/jira/browse/ARROW-10697). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWe currently have `BitmapWordReader`, `BitmapUInt64Reader` and `Bitmap::VisitWords`.\r\n\r\nWe should try to consolidate those, assuming benchmarks don't regress.",
        "created_at": "2020-11-23T13:18:21.000Z",
        "updated_at": "2020-12-02T07:37:15.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: task"
        ],
        "closed": true,
        "closed_at": "2020-12-02T07:37:11.000Z"
    },
    "comments": [
        {
            "created_at": "2020-11-24T17:24:04.732Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10697?focusedCommentId=17238273) by Antoine Pitrou (apitrou):*\nOk, some observations:\r\n- `BitmapUInt64Reader` is better on small bitmaps, but `BitmapWordReader<uint64_t>` is better on large ones\n- a hypothetical `BitmapUInt64Writer` implemented similarly as `BitmapUInt64Reader` is worse on large bitmaps than `BitmapWordWriter<uint64_t>`\n- `Bitmap::VisitWords` (as used for Kleene logic kernels) is really strong when reading more than 2 bitmaps in lockstep\n"
        },
        {
            "created_at": "2020-12-02T07:37:11.438Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10697?focusedCommentId=17242116) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 8761\n<https://github.com/apache/arrow/pull/8761>"
        }
    ]
}