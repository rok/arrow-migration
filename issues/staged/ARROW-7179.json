{
    "issue": {
        "title": "[C++][Compute] Consolidate fill_null and coalesce",
        "body": "***Note**: This issue was originally created as [ARROW-7179](https://issues.apache.org/jira/browse/ARROW-7179). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nfill_null and coalesce are essentially the same kernel, except the former is binary and doesn't support an array fill value, and the latter is variadic and supports scalar and array fill values.\r\n\r\nWe should consolidate them into one kernel, picking the faster implementation.",
        "created_at": "2019-11-15T16:04:00.000Z",
        "updated_at": "2021-08-27T12:26:33.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-08-27T09:52:05.000Z"
    },
    "comments": [
        {
            "created_at": "2020-05-25T20:02:22.912Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7179?focusedCommentId=17116227) by Wes McKinney (wesm):*\nWe can implement this either as a Binary or VarArgs scalar kernel"
        },
        {
            "created_at": "2021-08-05T16:05:57.894Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7179?focusedCommentId=17394150) by Antoine Pitrou (apitrou):*\ncc `[~lidavidm]`"
        },
        {
            "created_at": "2021-08-05T16:06:49.146Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7179?focusedCommentId=17394152) by David Li (lidavidm):*\nI think this is exactly the same as Coalesce in ARROW-13136?"
        },
        {
            "created_at": "2021-08-05T16:29:40.182Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7179?focusedCommentId=17394162) by Antoine Pitrou (apitrou):*\nUh, perhaps :-) Those SQL names are so \"obvious\"..."
        },
        {
            "created_at": "2021-08-09T15:38:56.998Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7179?focusedCommentId=17396118) by David Li (lidavidm):*\nComparing the two issues, the kernels look identical, so I'm going to close as duplicate."
        },
        {
            "created_at": "2021-08-10T09:56:28.571Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7179?focusedCommentId=17396577) by Joris Van den Bossche (jorisvandenbossche):*\nWe actually already have a \"fill_null\" kernel for filling with a scalar (added in ), so this issue was about expanding that kernel to also support array fill values. That's indeed the same as coalesce. But, \"fill_null\" is currently a fully separate implementation (scalar_fill_null.cc), while I suppose \"coalesce\" might also have a specialized path for scalar fill values? That could potentially be consolidated?\r\n\r\n"
        },
        {
            "created_at": "2021-08-10T12:44:55.088Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7179?focusedCommentId=17396652) by David Li (lidavidm):*\nAh, I see, thanks Joris. It looks like coalesce has slightly more complete type support; it's also variadic instead of binary. Maybe the path here then should be to benchmark the common implementations and choose the faster one, then consolidate both into one kernel. (And maybe provide aliases from one to the other?)"
        },
        {
            "created_at": "2021-08-10T12:49:32.451Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7179?focusedCommentId=17396656) by Joris Van den Bossche (jorisvandenbossche):*\nYes, that sounds good"
        },
        {
            "created_at": "2021-08-11T16:09:06.741Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7179?focusedCommentId=17397448) by David Li (lidavidm):*\nSo fill_null is quite a bit faster than coalesce, as being able to assume there are only two arguments (one of which is an array) means it can just make one pass through the input and do block copies from one of the arguments. To get coalesce up to the same speed in the same cases, we'd essentially special-case this in coalesce anyways. Would it be preferable to implement that special case and drop fill_null, or keep fill_null as a convenient alias/optimized case much like we have if_else and case_when?"
        },
        {
            "created_at": "2021-08-27T09:52:05.632Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7179?focusedCommentId=17405723) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 10987\n<https://github.com/apache/arrow/pull/10987>"
        }
    ]
}