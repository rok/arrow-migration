{
    "issue": {
        "title": "[R] Add S3 generics to create main Arrow objects",
        "body": "***Note**: This issue was originally created as [ARROW-15168](https://issues.apache.org/jira/browse/ARROW-15168). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nRight now we create Tables, RecordBatches, ChunkedArrays, and Arrays using the corresponding `$create()` functions (or a few shortcut functions). This works well for converting other Arrow or base R types to Arow objects but doesn\u2019t work well for objects in other packages (e.g., sf). This is related to ARROW-14378 in that it provides a mechanism for other packages support writing objects to Arrow in a more Arrow-native form instead of serializing attributes that are unlikely to be readable in other packages. Many of these came up when experimenting with `carrow` when trying to provide seamless arrow package compatibility for S3 objects that wrap external pointers to C API data structures. S3 is a good way to do this because the other package doesn't have to put arrow in `Imports` since it's a heavy dependency.\r\n\r\nFor argument\u2019s sake I\u2019ll propose adding the following methods: \r\n\r\n-   `as_arrow_array(x, type = NULL)` -> `Array` \n-   `as_arrow_chunked_array(x, type = NULL)` -> `ChunkedArray` \n-   `as_arrow_record_batch(x, schema = NULL)` -> `RecordBatch` \n-   `as_arrow_table(x, schema = NULL)` -> `Table` \n-   `as_arrow_data_type(x)` -> `DataType` \n-   `as_arrow_record_batch_reader(x, schema = NULL)` -> `RecordBatchReader` \n  \n  I\u2019ll note that use `as_adq()` internally for similar reasons (to convert a few different object types into a arrow dplyr query when that\u2019s the data structure we need). \n  \n  As part of this ticket, if we choose to move forward, we should implement the default methods with some internal consistency (i.e., somebody wanting to provide Arrow support in a package probably only has to implement `as_arrow_array()` to get most support.\n",
        "created_at": "2021-12-20T17:58:45.000Z",
        "updated_at": "2022-04-28T17:11:49.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-04-23T13:07:05.000Z"
    },
    "comments": [
        {
            "created_at": "2022-03-10T23:26:05.061Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15168?focusedCommentId=17504651) by Jonathan Keane (jonkeane):*\nThis sounds good to me. We do have a few of these helpers (though they aren't generics...) like `arrow_table`. I'm fine with transitioning all of those to `as_...` versions of themselves, or we could drop the `as_` and repurpose them (AFAIK `arrow_table` is literally an alias for `Table$create` right now.)"
        },
        {
            "created_at": "2022-04-23T13:07:05.732Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15168?focusedCommentId=17526856) by Neal Richardson (npr):*\nIssue resolved by pull request 12817\n<https://github.com/apache/arrow/pull/12817>"
        }
    ]
}