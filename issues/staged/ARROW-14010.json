{
    "issue": {
        "title": "[C++][Python] No way to generate UUID filenames with new datasets API",
        "body": "***Note**: This issue was originally created as [ARROW-14010](https://issues.apache.org/jira/browse/ARROW-14010). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI had assumed this could be done using the \"partition_filename_cb\" in \"pyarrow.parquet.write_to_dataset\" but that doesn't work if \"use_legacy_dataset\" is False.  The \"basename_template\" only allows string substitution so it cannot inject UUID.  Given that this is the only support for any kind of \"append\" mode when writing to datasets I think this feature is important and can block migration from the old writer.",
        "created_at": "2021-09-15T23:08:43.000Z",
        "updated_at": "2021-09-16T16:26:52.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-09-16T16:26:52.000Z"
    },
    "comments": [
        {
            "created_at": "2021-09-15T23:09:43.356Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14010?focusedCommentId=17415794) by Weston Pace (westonpace):*\n`[~jorisvandenbossche]` `[~ldacey]` Am I missing anything?  I really had thought this was possible but now I can't figure it out."
        },
        {
            "created_at": "2021-09-16T08:32:13.052Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14010?focusedCommentId=17415977) by Joris Van den Bossche (jorisvandenbossche):*\nWe discussed this in ARROW-10695, and eventually decided that this could be relatively easily be done by the user by generating the uuid when passing the template (`basename_template=guuid() + \"-\\{i\\}.parquet\"`)\r\n\r\nI think for a case where you are appending data, you will typically be able to pass a unique basename_template? \r\nOne consequence of this, though, is that all files written from a single `write_dataset` call will have the same uuid, instead of each file having it's own uuid (although I think that's consistent with what spark does).\r\n\r\nPersonally, I was fine with the resolution of ARROW-10695 (leave it up to the user, instead of providing a `\\{uuid\\`} substitution option), unless someone comes up with a use case where it is impossible to provide this uuid in the template. But, I am also thinking whether we shouldn't actually include a UUID in the default template. \r\n\r\nSlightly related, I also ran into the issue of \"basename_template requires \\{i\\}\" in a case where I wanted to manually create unique file names with the template (and I knew I had only one file per partition), and had been meaning to open a JIRA about that. It seems a limitation we could relax. \r\n"
        },
        {
            "created_at": "2021-09-16T16:14:50.990Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14010?focusedCommentId=17416209) by Weston Pace (westonpace):*\nAh, I knew there was some discussion on the topic but I couldn't find it.  Putting the guid/uuid in the basename_template and using a different basename template each time should be sufficient."
        }
    ]
}