{
    "issue": {
        "title": "How to convert a float to a Parquet TIMESTAMP Logical Type?",
        "body": "***Note**: This issue was originally created as [ARROW-10061](https://issues.apache.org/jira/browse/ARROW-10061). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nHi,\r\n\r\nI am sorry, this is a simple usage question, that I raised on [SO](https://stackoverflow.com/questions/63991411/how-to-convert-a-float-to-a-parquet-timestamp-logical-type), but got no answer.\r\n\r\nI came across the [Parquet Logical Types documentation page](https://github.com/apache/parquet-format/blob/master/LogicalTypes.md) on Github, and more specifically the chapter regarding [Timestamp](https://github.com/apache/parquet-format/blob/master/LogicalTypes.md#timestamp).\r\n\r\nPlease, how can we convert a column of timestamps stored as float64 to a column with timestamps stored as `TIMESTAMP` parquet logical type?\r\n\r\nFor instance, starting with this code.\r\n```python\n\r\nimport pyarrow as pa\r\nmy_table = pa.table({'timestamp': pa.array([1600419000.477,1600419001.027])})\r\n```\r\n\r\n\r\nThanks for any help,\r\nHave a good day,\r\nBests,\r\nPierre\r\n",
        "created_at": "2020-09-22T06:36:31.000Z",
        "updated_at": "2020-09-23T14:44:24.000Z",
        "labels": [
            "Migrated from Jira",
            "Type: task"
        ],
        "closed": true,
        "closed_at": "2020-09-23T14:44:24.000Z"
    },
    "comments": [
        {
            "created_at": "2020-09-23T14:44:04.758Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10061?focusedCommentId=17200870) by Joris Van den Bossche (jorisvandenbossche):*\nIt is answered on StackOverflow now, so closing here. \r\n\r\nYou will indeed need to do this conversion yourself, to ensure you have a timestamp type in the arrow table. Doing it in pandas for now might be the easiest workaround. With the `pyarrow.compute` module it can also be done in pyarrow."
        }
    ]
}