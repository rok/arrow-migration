{
    "issue": {
        "title": "[C++] Improve clarity of MapBuilder API",
        "body": "***Note**: This issue was originally created as [ARROW-9510](https://issues.apache.org/jira/browse/ARROW-9510). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nMapBuilder API is too much confusing. Everybody know Map is consist of key & value pairs. However, the API value_builder is actually the pairs builder. Instead, the item_builder, whose name is usually means the pairs builder, is the value builder.\r\n\r\n```c++\n\r\n  /// \\brief Get builder to append items\r\n  ///\r\n  /// Appending an item with this builder should have been preceded\r\n  /// by appending a key with key_builder().\r\n  ArrayBuilder* item_builder() const { return item_builder_.get(); }\r\n\r\n  /// \\brief Get builder to add Map entries as struct values.\r\n  ///\r\n  /// This is used instead of key_builder()/item_builder() and allows\r\n  /// the Map to be built as a list of struct values.\r\n  ArrayBuilder* value_builder() const { return list_builder_->value_builder(); }\r\n```\r\n\r\nI know that we may want to keep align with the value_builder semantics with ListBuilder, but I don't think current naming is reasonable.",
        "created_at": "2020-07-17T10:39:09.000Z",
        "updated_at": "2021-12-16T17:10:10.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2020-07-17T10:42:15.172Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9510?focusedCommentId=17159859) by Antoine Pitrou (apitrou):*\nWell, the same terminology is used elsewhere. But I agree it's confusing. It's a side-effect of map being defined as a list of struct, rather than a type on its own."
        }
    ]
}