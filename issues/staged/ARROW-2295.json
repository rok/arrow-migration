{
    "issue": {
        "title": "[Python] Add Array.to_numpy functions",
        "body": "***Note**: This issue was originally created as [ARROW-2295](https://issues.apache.org/jira/browse/ARROW-2295). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThere are `to_pandas()` functions, but no `to_numpy()` functions. I'd like to propose that we include both.\r\n\r\nAlso, `pyarrow.lib.Array.to_pandas()` returns a `numpy.ndarray`, which imho is very confusing\u00a0:). I think it would be more intuitive for the `to_pandas()` functions to return `pandas.Series` and `pandas.DataFrame` objects, and the `to_numpy()` functions to return `numpy.ndarray` and either a ordered dict of `numpy.ndarray` or a structured `numpy.ndarray` depending on a flag, for example. The `to_pandas()` function is of course welcome to use the `to_numpy()` func to avoid the additional index and whatnot of the `pandas.Series`.\r\n\r\n\u00a0",
        "created_at": "2018-03-09T20:38:43.000Z",
        "updated_at": "2022-08-27T14:41:41.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-09-18T14:56:12.000Z"
    },
    "comments": [
        {
            "created_at": "2018-03-10T14:39:38.078Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2295?focusedCommentId=16394196) by Jim Pivarski (jpivarski):*\nI second this and would like to request that the Numpy interface has more low-level access to Arrow structures. For instance, ListArray is internally represented as two arrays: offsets and contents, and there are applications where we'd want to get a zero-copy view of these arrays. The to_pandas() function constructs a Numpy object array of subarrays, which is a performance bottleneck\u00a0if you really do want the original offsets and contents.\r\n\r\nThis function\u00a0could be an inverse of pyarrow.ListArray.from_arrays, something that returns\u00a0the offsets and contents as Numpy arrays for a List<Primitive> and something more complex for general cases (a dict from strings representing a place in the hierarchy to Numpy arrays?).\r\n\r\nA simpler interface that could be implemented immediately would be one that returns the raw bytes of the Arrow buffer, to let us identify its contents using [the Arrow spec\\|[https://github.com/apache/arrow/blob/master/format/Layout.md].]\u00a0But that doesn't make use of\u00a0the dtype (probably just set it to uint8) and would probably make more sense as a raw __buffer__. (Should that be a separate JIRA ticket?)\r\n\r\n\u00a0"
        },
        {
            "created_at": "2018-03-10T14:58:45.896Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2295?focusedCommentId=16394199) by Antoine Pitrou (apitrou):*\n> Also, `pyarrow.lib.Array.to_pandas()` returns a `numpy.ndarray`, which imho is very confusing\r\nAgreed, it also surprises me often.\r\n\r\n> either a ordered dict of `numpy.ndarray` or a structured `numpy.ndarray` depending on a flag, for example\r\n\r\nConverting to a struct array sounds like the reciprocal of ARROW-1886. That doesn't have to be part of a Numpy conversion function, though.\r\n\r\n> ListArray is internally represented as two arrays: offsets and contents, and there are applications where we'd want to get a zero-copy view of these arrays\r\n\r\nYou can use `Array.buffers()` to get zero-copy views of those buffers and call `np.frombuffer` on each of them.\r\n"
        },
        {
            "created_at": "2018-03-10T15:34:01.774Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2295?focusedCommentId=16394223) by Jim Pivarski (jpivarski):*\nArray.buffers() must be a new feature, after 0.8.0. I'll look for\u00a0it in the next release. Thanks!"
        },
        {
            "created_at": "2022-08-27T14:41:41.583Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2295?focusedCommentId=17585787) by @toddfarmer:*\nTransitioning issue from Resolved to Closed to based on resolution field value."
        }
    ]
}