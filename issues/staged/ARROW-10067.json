{
    "issue": {
        "title": "[Python] Manual dataset with timestamp partition type error",
        "body": "***Note**: This issue was originally created as [ARROW-10067](https://issues.apache.org/jira/browse/ARROW-10067). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nGoing off the docs\u00a0<https://arrow.apache.org/docs/python/dataset.html#manual-specification-of-the-dataset>\u00a0but instead using date partitioning. If you create the partitions using pandas Timestamps you get\u00a0timestamp[ns] vs\u00a0timestamp[us] type errors.\r\n\r\n\u00a0\r\n```java\n\r\nimport tempfile\r\nimport pathlib\r\n\r\nimport numpy as np\r\nimport pandas as pd\r\nimport pyarrow as pa\r\nimport pyarrow.dataset as ds\r\nimport pyarrow.parquet as pq\r\nfrom pyarrow import fs\r\n\r\n\r\nbase = pathlib.Path(tempfile.gettempdir())\r\ntable = pa.table({\"col1\": range(3), \"col2\": np.random.randn(3)})\r\n(base / \"parquet_dataset_manual\").mkdir(exist_ok=True)\r\npq.write_table(table, base / \"parquet_dataset_manual\" / \"data_20180101.parquet\")\r\npq.write_table(table, base / \"parquet_dataset_manual\" / \"data_20180102.parquet\")\r\nschema = pa.schema([(\"date\", pa.timestamp(\"ns\")), (\"col1\", pa.int64()), (\"col2\", pa.float64())])\r\ndataset = ds.FileSystemDataset.from_paths(\r\n    [\"data_20180101.parquet\", \"data_20180102.parquet\"],\r\n    schema=schema,\r\n    format=ds.ParquetFileFormat(),\r\n    filesystem=fs.SubTreeFileSystem(str(base / \"parquet_dataset_manual\"), fs.LocalFileSystem()),\r\n    partitions=[ds.field(\"date\") == pd.Timestamp(\"2018-01-01\"), ds.field(\"date\") == pd.Timestamp(\"2018-01-01\")],\r\n)\r\nprint(dataset.to_table().to_pandas())\r\n# pyarrow.lib.ArrowTypeError: field date: timestamp[ns] cannot be materialized from scalar of type timestamp[us]\r\nprint(dataset.to_table(filter=ds.field(\"date\") == pd.Timestamp(\"2018-01-01\")).to_pandas())\r\n# ../src/arrow/result.cc:28: ValueOrDie called on an error: Type error: Cannot compare scalars of differing type: timestamp[ns] vs timestamp[us]\r\n\r\ndataset = ds.FileSystemDataset.from_paths(\r\n    [\"data_20180101.parquet\", \"data_20180102.parquet\"],\r\n    schema=schema,\r\n    format=ds.ParquetFileFormat(),\r\n    filesystem=fs.SubTreeFileSystem(str(base / \"parquet_dataset_manual\"), fs.LocalFileSystem()),\r\n    partitions=[\r\n        ds.field(\"date\") == pa.scalar(pd.Timestamp(\"2018-01-01\"), pa.timestamp(\"ns\")),\r\n        ds.field(\"date\") == pa.scalar(pd.Timestamp(\"2018-01-02\"), pa.timestamp(\"ns\")),\r\n    ],\r\n)\r\nprint(dataset.to_table().to_pandas())\r\nprint(dataset.to_table(filter=ds.field(\"date\") == pd.Timestamp(\"2018-01-01\")).to_pandas())\n```",
        "created_at": "2020-09-22T21:00:17.000Z",
        "updated_at": "2021-02-08T12:49:30.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-02-08T12:49:18.702Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10067?focusedCommentId=17281015) by Joris Van den Bossche (jorisvandenbossche):*\n`[~josham]` sorry for the _very_ late response, but thanks for the report!\r\n\r\nIndeed, it seems that, currently, when creating a FileSystemDataset manually, you need to ensure that the type used in the partition expresssion matches the type in the schema. \r\nA workaround for now is to manually ensure that your partitions use microsecond type (`ds.field(\"date\") == pa.scalar(pd.Timestamp(\"2018-01-01\"), pa.timestamp(\"us\"))`). Since this is a lower level function, I am not sure how flexible we want to be here, or want to be more strict in matching input types.\r\n\r\nWe have work to do in general to be more flexible regarding schema evolution, see ARROW-11003 for the umbrella issue."
        }
    ]
}