{
    "issue": {
        "title": "kMaxParserNumRows Value Increase/Removal",
        "body": "***Note**: This issue was originally created as [ARROW-13318](https://issues.apache.org/jira/browse/ARROW-13318). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI'm a new pyArrow user and have been investigating occasional errors related to the Python exception: \"ArrowInvalid: Exceeded maximum rows\" when parsing JSON line files using pyarrow.json.read_json(). In digging in, it looks like the original source of this exception is in\u00a0cpp/src/arrow/json/parser.cc on line 703, which appears to throw the error when the number of lines processed exceeds\u00a0kMaxParserNumRows.\r\n```java\n\r\nfor (; num_rows_ < kMaxParserNumRows; ++num_rows_) {\r\n\u00a0 \u00a0 \u00a0 auto ok = reader.Parse<parse_flags>(json, handler);\r\n\u00a0 \u00a0 \u00a0 switch (ok.Code()) {\r\n\u00a0 \u00a0 \u00a0 \u00a0 case rj::kParseErrorNone:\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // parse the next object\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 continue;\r\n\u00a0 \u00a0 \u00a0 \u00a0 case rj::kParseErrorDocumentEmpty:\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // parsed all objects, finish\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return Status::OK();\r\n\u00a0 \u00a0 \u00a0 \u00a0 case rj::kParseErrorTermination:\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // handler emitted an error\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return handler.Error();\r\n\u00a0 \u00a0 \u00a0 \u00a0 default:\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // rj emitted an error\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return ParseError(rj::GetParseError_En(ok.Code()), \" in row \", num_rows_);\r\n\u00a0 \u00a0 \u00a0 }\r\n\u00a0 \u00a0 }\r\n\u00a0 \u00a0 return Status::Invalid(\"Exceeded maximum rows\");\r\n\u00a0 }\n```\r\n\u00a0\r\n\r\nThis constant appears to be set in arrow/json/parser.h on line 53, and has been set this way since that file's initial commit.\r\n```java\n\r\nconstexpr int32_t kMaxParserNumRows = 100000;\n```\r\n\u00a0\r\n\r\nThere does not appear to be a comment in the code or in the commit or PR explaining this maximum number of lines.\r\n\r\n\u00a0\r\n\r\nI'm wondering what the reason for this maximum might be, and if it might be removed, increased, or made overridable in the C++ and the upstream Python. It is common to need to process JSON files of arbitrary length (logs from applications, third-party vendors, etc) where the user of the data does not have control over the size of the file.",
        "created_at": "2021-07-12T20:44:56.000Z",
        "updated_at": "2021-07-12T20:45:36.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": []
}