{
    "issue": {
        "title": "[C++] alloc-dealloc-mismatch in s3fs.cc",
        "body": "***Note**: This issue was originally created as [ARROW-10651](https://issues.apache.org/jira/browse/ARROW-10651). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nChecking\r\n\r\n<https://github.com/apache/arrow/blob/256d0dc3f712154100aa6e0a610383b189008a83/cpp/src/arrow/filesystem/s3fs.cc#L611>\r\n\r\n```cpp\n\r\nAws::IOStreamFactory AwsWriteableStreamFactory(void* data, int64_t nbytes){\r\n \u00a0 return [=]() { return new StringViewStream(data, nbytes); };\r\n}\r\n```\r\n\r\nInstead, there is supposed to be using `Aws::New` rather than c++'s own `new`\r\n\r\n```cpp\n\r\nAws::IOStreamFactory AwsWriteableStreamFactory(void* data, int64_t nbytes) {\r\n \u00a0 return [=]() { return Aws::New<StringViewStream>(\"\", data, nbytes); };\r\n}\r\n```\r\n\r\nThis is easy to be checked out when compiled with clang memory sanitizer.\r\n```cpp\n\r\n=================================================================\r\n==148546==ERROR: AddressSanitizer: alloc-dealloc-mismatch (operator new vs free) on 0x6110001f1e80\r\n    #0 0xcac4e2 in free /local/mnt/workspace/bcain_0721/llvm/utils/release/final/llvm.src/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:124:3\r\n    #1 0x7ff039bb10f0 in Aws::Utils::Stream::ResponseStream::~ResponseStream() (/opt/dependency-clang-x86_64-Linux/package/lib/libaws-cpp-sdk-core.so+0xc20f0)\r\n    #2 0x7ff03fe05157 in Aws::S3::Model::GetObjectResult::~GetObjectResult() /opt/dependency-clang-x86_64-Linux/package/include/aws/s3/model/GetObjectResult.h:30:20\r\n    #3 0x7ff03fe038dd in Aws::Utils::Outcome<Aws::S3::Model::GetObjectResult, Aws::S3::S3Error>::~Outcome() /opt/dependency-clang-x86_64-Linux/package/include/aws/core/utils/Outcome.h:25:15\r\n\r\n0x6110001f1e80 is located 0 bytes inside of 256-byte region [0x6110001f1e80,0x6110001f1f80)\r\nallocated by thread T0 here:\r\n    #0 0xcdbd52 in operator new(unsigned long) /local/mnt/workspace/bcain_0721/llvm/utils/release/final/llvm.src/projects/compiler-rt/lib/asan/asan_new_delete.cc:106:3\r\n    #1 0x7ff03fdd9af0 in dbcommon::AwsWriteableStreamFactory(void*, long)::$_0::operator()() const /home/gpadmin/dev/hornet-opensource/dbcommon/src/dbcommon/filesystem/s3/s3-file-system.cc:157:25\r\n    #2 0x7ff03fdd9aac in decltype(std::__1::forward<dbcommon::AwsWriteableStreamFactory(void*, long)::$_0&>(fp)()) std::__1::__invoke<dbcommon::AwsWriteableStreamFactory(void*, long)::$_0&>(dbcommon::AwsWriteableStreamFactory(void*, long)::$_0&) /opt/clang/include/c++/v1/type_traits:4353:1\r\n    #3 0x7ff03fdd9a3c in std::__1::basic_iostream<char, std::__1::char_traits<char> >* std::__1::__invoke_void_return_wrapper<std::__1::basic_iostream<char, std::__1::char_traits<char> >*>::__call<dbcommon::AwsWriteableStreamFactory(void*, long)::$_0&>(dbcommon::AwsWriteableStreamFactory(void*, long)::$_0&) /opt/clang/include/c++/v1/__functional_base:318:16\r\n    #4 0x7ff03fdd9a0c in std::__1::__function::__alloc_func<dbcommon::AwsWriteableStreamFactory(void*, long)::$_0, std::__1::allocator<dbcommon::AwsWriteableStreamFactory(void*, long)::$_0>, std::__1::basic_iostream<char, std::__1::char_traits<char> >* ()>::operator()() /opt/clang/include/c++/v1/functional:1527:16\r\n    #5 0x7ff03fdd7248 in std::__1::__function::__func<dbcommon::AwsWriteableStreamFactory(void*, long)::$_0, std::__1::allocator<dbcommon::AwsWriteableStreamFactory(void*, long)::$_0>, std::__1::basic_iostream<char, std::__1::char_traits<char> >* ()>::operator()() /opt/clang/include/c++/v1/functional:1651:12\r\n    #6 0x7ff039bb0fa2 in Aws::Utils::Stream::ResponseStream::ResponseStream(std::__1::function<std::__1::basic_iostream<char, std::__1::char_traits<char> >* ()> const&) (/opt/dependency-clang-x86_64-Linux/package/lib/libaws-cpp-sdk-core.so+0xc1fa2)\r\n\r\nSUMMARY: AddressSanitizer: alloc-dealloc-mismatch /local/mnt/workspace/bcain_0721/llvm/utils/release/final/llvm.src/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:124:3 in free\r\n==148546==HINT: if you don't care about these errors you may set ASAN_OPTIONS=alloc_dealloc_mismatch=0\r\n==148546==ABORTING\r\n```",
        "created_at": "2020-11-19T05:15:54.000Z",
        "updated_at": "2020-12-04T02:02:53.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-11-19T12:55:24.000Z"
    },
    "comments": [
        {
            "created_at": "2020-11-19T12:55:24.633Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10651?focusedCommentId=17235433) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 8712\n<https://github.com/apache/arrow/pull/8712>"
        }
    ]
}