{
    "issue": {
        "title": "[Python] pyarrow wheel:  `DLL load failed` when importing on windows",
        "body": "***Note**: This issue was originally created as [ARROW-6015](https://issues.apache.org/jira/browse/ARROW-6015). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen installing pyarrow 0.14.1 on windows 10 x64 with python 3.7, you get:\r\n\r\n>>> import pyarrow\r\nTraceback (most recent call last):\r\n\u00a0 File \"<stdin>\", line 1, in <module>\r\n\u00a0 File \"C:\\Python37\\lib\\site-packages\\pyarrow\\__init__.py\", line 49, in <module>\r\n\u00a0 \u00a0 from pyarrow.lib import cpu_count, set_cpu_count\r\n\u00a0 ImportError: DLL load failed: The specified module could not be found.\r\n\r\n On 0.14.0 everything works fine.",
        "created_at": "2019-07-23T11:31:35.000Z",
        "updated_at": "2019-10-29T15:53:23.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Packaging",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-10-29T14:55:48.000Z"
    },
    "comments": [
        {
            "created_at": "2019-07-23T12:00:42.945Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16890927) by Krisztian Szucs (kszucs):*\n`[~efiop]` How did you install 0.14.1? Via conda or via pip? Seems like via pip."
        },
        {
            "created_at": "2019-07-23T12:04:37.077Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16890930) by Ruslan Kuprieiev (efiop):*\n`[~kszucs]` Pip that comes with vanilla official Python for windows."
        },
        {
            "created_at": "2019-07-23T12:07:27.817Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16890933) by Krisztian Szucs (kszucs):*\nI suggest you to use 0.14 or conda until it gets resolved."
        },
        {
            "created_at": "2019-07-23T12:08:32.682Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16890934) by Ruslan Kuprieiev (efiop):*\n`[~kszucs]` Yep, did that already :)\u00a0Thanks!"
        },
        {
            "created_at": "2019-07-23T12:13:13.604Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16890939) by Krisztian Szucs (kszucs):*\nI suspect that the missing dso is zlib which is not bundled anymore with the wheels https://github.com/apache/arrow/pull/4886/files#diff-8cf6167d58ce775a08acafcfe6f40966L388 and it is linked dynamically instead of the intended static linkage https://github.com/apache/arrow/pull/4886/files#diff-647dde013daa22cab04c2707a6f611e5R57."
        },
        {
            "created_at": "2019-07-23T12:15:24.879Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16890940) by Krisztian Szucs (kszucs):*\nWe can also rebuild the windows wheels, but don't know how to \\***force**\\* static zlib linkage. cc `[~pitrou]`"
        },
        {
            "created_at": "2019-07-23T12:22:27.273Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16890945) by Antoine Pitrou (apitrou):*\nI don't know either. On manylinux we hack around this by removing the zlib.so."
        },
        {
            "created_at": "2019-07-23T12:37:55.609Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16890954) by Krisztian Szucs (kszucs):*\nI'm trying to rebuild the windows wheels with bundled zlib.dll https://github.com/ursa-labs/crossbow/branches/all?query=build-669"
        },
        {
            "created_at": "2019-07-23T13:22:50.499Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16890990) by Krisztian Szucs (kszucs):*\nThe produced wheels are going to be available at the following links:\r\n- [pyarrow-0.14.1-cp35-cp35m-win_amd64.whl](https://github.com/ursa-labs/crossbow/releases/download/build-669-appveyor-wheel-win-cp35m/pyarrow-0.14.1-cp35-cp35m-win_amd64.whl)\n- [pyarrow-0.14.1-cp36-cp36m-win_amd64.whl](https://github.com/ursa-labs/crossbow/releases/download/build-669-appveyor-wheel-win-cp36m/pyarrow-0.14.1-cp36-cp36m-win_amd64.whl)\n- [pyarrow-0.14.1-cp37-cp37m-win_amd64.whl](https://github.com/ursa-labs/crossbow/releases/download/build-669-appveyor-wheel-win-cp37m/pyarrow-0.14.1-cp37-cp37m-win_amd64.whl)"
        },
        {
            "created_at": "2019-07-23T13:24:59.651Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16890993) by Wes McKinney (wesm):*\nThis is definitely sad. Do we need to remove the wheels from PyPI? I don't think we should do a 0.14.2 release to fix this"
        },
        {
            "created_at": "2019-07-23T13:29:41.988Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16890998) by Krisztian Szucs (kszucs):*\nAgree with the removal of 0.14.1 windows wheels. I don't have access to do that though."
        },
        {
            "created_at": "2019-07-23T13:35:15.156Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16891005) by Wes McKinney (wesm):*\nYou're listed as a maintainer on https://pypi.org/project/pyarrow/, you should be able to remove them in the web UI if you are logged in"
        },
        {
            "created_at": "2019-07-23T13:35:40.520Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16891006) by Wes McKinney (wesm):*\nPlease also remove the 0.14.0 Windows wheels"
        },
        {
            "created_at": "2019-07-23T13:39:22.232Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16891012) by Krisztian Szucs (kszucs):*\nWhy should we remove the 0.14.0 wheels?"
        },
        {
            "created_at": "2019-07-23T13:40:36.048Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16891013) by Wes McKinney (wesm):*\nSurely they have the exact same problem, unless a patch was cherry-picked that altered the behavior?"
        },
        {
            "created_at": "2019-07-23T13:43:16.926Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16891018) by Krisztian Szucs (kszucs):*\nThe patch was cherry picked, so this issue doesn't affect the 0.14 wheels."
        },
        {
            "created_at": "2019-07-23T13:45:41.834Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16891021) by Wes McKinney (wesm):*\nI see. I'm surprised that https://github.com/apache/arrow/commit/befd7dfe18ec8d362c0472092d48edbb8df9c3b8 caused the libraries to have a dependency on zlib.dll. In theory `-DZLIB_SOURCE=BUNDLED` should result in a statically-linked version"
        },
        {
            "created_at": "2019-07-23T13:48:03.885Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16891027) by Krisztian Szucs (kszucs):*\nThought the same. Apparently cmake picks up the dynamic library if it is locatable, no matter of `zlib_SOURCE`. We'd need a way to force static linkage."
        },
        {
            "created_at": "2019-07-23T13:52:15.545Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16891028) by Antoine Pitrou (apitrou):*\nRight. CMake does not have a way of saying \"prefer the static lib if present, but fall back on the dynamic lib otherwise\"."
        },
        {
            "created_at": "2019-07-23T14:04:00.933Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16891046) by Antoine Pitrou (apitrou):*\nI confirm that the 3.6 wheel seems to load zlib.dll from the PyArrow install."
        },
        {
            "created_at": "2019-07-23T14:04:01.463Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16891047) by Antoine Pitrou (apitrou):*\nI confirm that the 3.6 wheel seems to load zlib.dll from the PyArrow install."
        },
        {
            "created_at": "2019-07-23T14:13:10.415Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16891056) by Krisztian Szucs (kszucs):*\nBut we don't really have any way to publish is, right?"
        },
        {
            "created_at": "2019-07-23T14:14:26.780Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16891058) by Antoine Pitrou (apitrou):*\nI don't think so?"
        },
        {
            "created_at": "2019-07-23T14:29:05.799Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16891071) by Krisztian Szucs (kszucs):*\nI'm afraid the same issue affects the OSX wheels:\r\n```Java\n\r\nlibarrow.14.dylib:\r\n        @rpath/libarrow.14.dylib (compatibility version 14.0.0, current version 14.1.0)\r\n        /usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.8)\r\n        @rpath/libarrow_boost_system.dylib (compatibility version 0.0.0, current version 0.0.0)\r\n        @rpath/libarrow_boost_filesystem.dylib (compatibility version 0.0.0, current version 0.0.0)\r\n        @rpath/libarrow_boost_regex.dylib (compatibility version 0.0.0, current version 0.0.0)\r\n        /usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 307.5.0)\r\n        /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1238.50.2)\r\n```\r\n\r\nalthough they will work most of the cases because the same problem was present in the previous wheels, we linked the same way in 0.14.0:\r\n```Java\n\r\nlibarrow.14.dylib:\r\n        @rpath/libarrow.14.dylib (compatibility version 14.0.0, current version 14.0.0)\r\n        /usr/local/opt/openssl/lib/libcrypto.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)\r\n        /usr/local/opt/openssl/lib/libssl.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)\r\n        /usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.8)\r\n        @rpath/libarrow_boost_system.dylib (compatibility version 0.0.0, current version 0.0.0)\r\n        @rpath/libarrow_boost_filesystem.dylib (compatibility version 0.0.0, current version 0.0.0)\r\n        @rpath/libarrow_boost_regex.dylib (compatibility version 0.0.0, current version 0.0.0)\r\n        /usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 307.5.0)\r\n        /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1238.50.2)\r\n```\r\n\r\nThis problem should have been captured automatically by https://github.com/apache/arrow/blob/master/dev/tasks/python-wheels/travis.osx.yml#L77\r\nBut has travis swallowed the following errors: \r\n```Java\n\r\n\u001b[0K$ sudo find /usr -name libz.* -delete\r\n\r\nfind: -delete: unlink(/usr/lib/libz.1.1.3.dylib): Operation not permitted\r\n\r\nfind: -delete: unlink(/usr/lib/libz.1.2.5.dylib): Operation not permitted\r\n\r\nfind: -delete: unlink(/usr/lib/libz.1.2.8.dylib): Operation not permitted\r\n\r\nfind: -delete: unlink(/usr/lib/libz.1.dylib): Operation not permitted\r\n\r\nfind: -delete: unlink(/usr/lib/libz.dylib): Operation not permitted\r\n```\r\n\r\nWhich is only available after loading the whole raw log: https://api.travis-ci.org/v3/job/559681560/log.txt"
        },
        {
            "created_at": "2019-07-23T14:41:37.596Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16891082) by Krisztian Szucs (kszucs):*\nThis is extremely annoying, I can revert the windows and OSX parts of https://github.com/apache/arrow/pull/4886 to bundle zlib DSO."
        },
        {
            "created_at": "2019-07-23T15:07:28.542Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16891118) by Antoine Pitrou (apitrou):*\nYou mean the zlib isn't always available on macOS?"
        },
        {
            "created_at": "2019-07-23T15:23:27.454Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16891128) by Krisztian Szucs (kszucs):*\nSince OSX mojave it is not shipped by default, might just be the headers though."
        },
        {
            "created_at": "2019-08-30T19:42:56.707Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16919843) by Kazuaki Ishizaki (kiszk):*\nI cannot reproduce this issue on my Windows 10 environment by using two pythons (conda and python) with [this whl](https://github.com/ursa-labs/crossbow/releases/download/build-669-appveyor-wheel-win-cp37m/pyarrow-0.14.1-cp37-cp37m-win_amd64.whl)\r\nDo I miss something to reproduce this failure?\r\n\r\n```java\n\r\n$ wget https://www.python.org/ftp/python/3.7.4/python-3.7.4-embed-amd64.zip\r\n$ unzip python-3.7.4-embed-amd64.zip\r\n$ cd python-3.7.4-embed-amd64\r\n$ wget https://bootstrap.pypa.io/get-pip.py\r\n$ python get-pip.py\r\n$ wget pyarrow-0.14.1-cp37-cp37m-win_amd64.whl\r\n$ python -m pip install pyarrow-0.14.1-cp37-cp37m-win_amd64.whl\r\n...\r\nSuccessfully installed numpy-1.17.1 pyarrow-0.14.1 six-1.12.0\r\n$ python\r\nPython 3.7.4 (tags/v3.7.4:e09359112e, Jul  8 2019, 20:34:20) [MSC v.1916 64 bit (AMD64)] on win32\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import pyarrow\r\n>>> print (pyarrow.cpu_count())\r\n4\r\n>>>\r\n```\r\n```java\n\r\n$ activate arrow-dev\r\n$ wget pyarrow-0.14.1-cp37-cp37m-win_amd64.whl\r\n$ pip install pyarrow-0.14.1-cp37-cp37m-win_amd64.whl\r\n...\r\nInstalling collected packages: pyarrow\r\nSuccessfully installed pyarrow-0.14.1\r\n>python\r\nPython 3.7.3 | packaged by conda-forge | (default, Jul  1 2019, 22:01:29) [MSC v.1900 64 bit (AMD64)] :: Anaconda, Inc. on win32\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import pyarrow\r\n>>> print (pyarrow.cpu_count())\r\n4\r\n>>>\r\n```"
        },
        {
            "created_at": "2019-08-30T19:47:13.302Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16919847) by Antoine Pitrou (apitrou):*\nThis can of issue depends on which DLLs are already installed on your system. So if the wheel is missing e.g. some compression libraries (such as zstd or brotli) but you have them on your system already, the wheel will work fine for you. This is also what makes it more difficult to ensure that Windows wheels are correctly generated..."
        },
        {
            "created_at": "2019-08-30T20:45:28.743Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16919876) by Kazuaki Ishizaki (kiszk):*\nI see. Thank you for your quick response. It looks more complex.\r\n\r\nHave we already identified which libraries are missed when this failure occurs?  Or, haven't we identified yet?"
        },
        {
            "created_at": "2019-08-31T05:54:51.690Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16920036) by Kazuaki Ishizaki (kiszk):*\nI believe that I identified how to fix this issue.\r\n\r\nTo install `Microsoft Visual C++ Redistributable for Visual Studio 2015, 2017 and 2019.` from <https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads> avoids this error.\r\nI think that this problem does not occur with conda. This problem occurs with only pip.\r\n\r\nThe following is my validation step. If someone double-checks it, we would appreciate it.\r\n```java\n\r\n// Install Windows10 enterprise (no additional application is installed)\r\n> mkdir c:\\pyarrow\r\n> cd c:\\pyarrow\r\n> bitsadmin /TRANSFER htmlget https://www.python.org/ftp/python/3.7.4/python-3.7.4-embed-amd64.zip c:\\pyarrow\\python-3.7.4-embed-amd64.zip\r\nextract all python-3.7.4-embed-amd64.zip to c:\\pyarrow\\python-3.7.4-embed-amd64 from Explorer\r\n> cd python-3.7.4-embed-amd64\r\nnotepad python37._pth\r\n...\r\n#import site <=== remove # in this line\r\n> type python37._pth\r\npython37.zip\r\n.\r\n# Uncomment to run site.main() automatically\r\nimport site\r\n\r\n> bitsadmin /TRANSFER htmlget https://bootstrap.pypa.io/get-pip.py c:\\pyarrow\\python-3.7.4-embed-amd64\\get-pip.py\r\n> python get-pip.py\r\n...\r\nSuccessfully installed pip-19.2.3 setuptools-41.2.0 wheel-0.33.6\r\n> python -m pip install pyarrow\r\nCollecting pyarrow\r\nDownloading https://files.pythonhosted.org/packages/97/7c/0ea4554d64c6ed3d6d4f8da492df287d2496adbab2b35c01433cf1344521/pyarrow-0.14.0-cp37-cp37m-win_amd64.whl (17.4MB)\r\n...\r\nCollecting numpy>=1.14 (from pyarrow)\r\nDownloading https://files.pythonhosted.org/packages/cb/41/05fbf6944b098eb9d53e8a29a9dbfa20a7448f3254fb71499746a29a1b2d/numpy-1.17.1-cp37-cp37m-win_amd64.whl (12.8MB)|\r\n...\r\nCollecting six>=1.0.0 (from pyarrow)\r\nDownloading https://files.pythonhosted.org/packages/73/fb/00a976f728d0d1fecfe898238ce23f502a721c0ac0ecfedb80e0d88c64e9/six-1.12.0-py2.py3-none-any.whl\r\nInstalling collected packages: numpy, six, pyarrow\r\nWARNING: The script f2py.exe is installed in 'C:\\pyarrow\\python-3.7.4-embed-amd64\\Scripts' which is not on PATH.\r\nConsider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\r\nWARNING: The script plasma_store.exe is installed in 'C:\\pyarrow\\python-3.7.4-embed-amd64\\Scripts' which is not on PATH.\r\nConsider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\r\nSuccessfully installed numpy-1.17.1 pyarrow-0.14.0 six-1.12.0\r\n> python -c \"import pyarrow\"\r\nTraceback (most recent call last):\r\nFile \"<string>\", line 1, in <module>\r\nFile \"C:\\pyarrow\\python-3.7.4-embed-amd64\\lib\\site-packages\\pyarrow__init__.py\", line 49, in <module>\r\nfrom pyarrow.lib import cpu_count, set_cpu_count\r\nImportError: DLL load failed: The specified module could not be found.\r\n> python -m pip freeze\r\nnumpy==1.17.1\r\npyarrow==0.14.0\r\nsix==1.12.0\r\n> dir Lib\\site-packages\\pyarrow\r\nVolume in drive C is OS\r\nVolume Serial Number is 1234-5678|\r\n\r\nDirectory of C:\\pyarrow\\python-3.7.4-embed-amd64\\Lib\\site-packages\\pyarrow\r\n\r\n08/31/2019 05:42 AM <DIR> .\r\n08/31/2019 05:42 AM <DIR> ..\r\n08/31/2019 05:42 AM 47,658 array.pxi\r\n08/31/2019 05:42 AM 5,748,736 arrow.dll\r\n08/31/2019 05:42 AM 1,653,120 arrow.lib\r\n08/31/2019 05:42 AM 1,795,072 arrow_flight.dll\r\n08/31/2019 05:42 AM 121,062 arrow_flight.lib\r\n08/31/2019 05:42 AM 910,848 arrow_python.dll\r\n08/31/2019 05:42 AM 119,994 arrow_python.lib\r\n08/31/2019 05:42 AM 869 benchmark.pxi\r\n08/31/2019 05:42 AM 895 benchmark.py\r\n08/31/2019 05:42 AM 2,774 builder.pxi\r\n08/31/2019 05:42 AM 81,920 cares.dll\r\n08/31/2019 05:42 AM 3,691 compat.py\r\n08/31/2019 05:42 AM 911 csv.py\r\n08/31/2019 05:42 AM 1,126 cuda.py\r\n08/31/2019 05:42 AM 3,161 error.pxi\r\n08/31/2019 05:42 AM 4,026 feather.pxi\r\n08/31/2019 05:42 AM 7,291 feather.py\r\n08/31/2019 05:42 AM 12,472 filesystem.py\r\n08/31/2019 05:42 AM 1,286 flight.py\r\n08/31/2019 05:42 AM 186,880 gandiva.cp37-win_amd64.pyd\r\n08/31/2019 05:42 AM 791,664 gandiva.cpp\r\n08/31/2019 05:42 AM 22,094,848 gandiva.dll\r\n08/31/2019 05:42 AM 305,626 gandiva.lib\r\n08/31/2019 05:42 AM 16,553 gandiva.pyx\r\n08/31/2019 05:42 AM 7,032 hdfs.py\r\n08/31/2019 05:42 AM <DIR> include\r\n08/31/2019 05:42 AM <DIR> includes\r\n08/31/2019 05:42 AM 13,995 io-hdfs.pxi\r\n08/31/2019 05:42 AM 48,879 io.pxi\r\n08/31/2019 05:42 AM 15,981 ipc.pxi\r\n08/31/2019 05:42 AM 6,178 ipc.py\r\n08/31/2019 05:42 AM 897 json.py\r\n08/31/2019 05:42 AM 8,623 jvm.py\r\n08/31/2019 05:42 AM 1,553,408 lib.cp37-win_amd64.pyd\r\n08/31/2019 05:42 AM 6,756,155 lib.cpp\r\n08/31/2019 05:42 AM 10,652 lib.pxd\r\n08/31/2019 05:42 AM 3,570 lib.pyx\r\n08/31/2019 05:42 AM 3,243,008 libcrypto-1_1-x64.dll\r\n08/31/2019 05:42 AM 2,613,248 libprotobuf.dll\r\n08/31/2019 05:42 AM 650,240 libssl-1_1-x64.dll\r\n08/31/2019 05:42 AM 13,435 lib_api.h\r\n08/31/2019 05:42 AM 4,724 memory.pxi\r\n08/31/2019 05:42 AM 4,912 orc.py\r\n08/31/2019 05:42 AM 5,789 pandas-shim.pxi\r\n08/31/2019 05:42 AM 33,456 pandas_compat.py\r\n08/31/2019 05:42 AM 1,789,952 parquet.dll\r\n08/31/2019 05:42 AM 346,864 parquet.lib\r\n08/31/2019 05:42 AM 52,331 parquet.py\r\n08/31/2019 05:42 AM 5,780 plasma.py\r\n08/31/2019 05:42 AM 8,778 public-api.pxi\r\n08/31/2019 05:42 AM 23,060 scalar.pxi\r\n08/31/2019 05:42 AM 15,427 serialization.pxi\r\n08/31/2019 05:42 AM 12,588 serialization.py\r\n08/31/2019 05:42 AM 46,760 table.pxi\r\n08/31/2019 05:42 AM <DIR> tensorflow\r\n08/31/2019 05:42 AM <DIR> tests\r\n08/31/2019 05:42 AM 48,149 types.pxi\r\n08/31/2019 05:42 AM 6,609 types.py\r\n08/31/2019 05:42 AM 3,549 util.py\r\n08/31/2019 05:42 AM 89,600 zlib.dll\r\n08/31/2019 05:42 AM 106,496 _csv.cp37-win_amd64.pyd\r\n08/31/2019 05:42 AM 493,978 _csv.cpp\r\n08/31/2019 05:42 AM 14,861 _csv.pyx\r\n08/31/2019 05:42 AM 1,934 _cuda.pxd\r\n08/31/2019 05:42 AM 34,567 _cuda.pyx\r\n08/31/2019 05:42 AM 346,112 _flight.cp37-win_amd64.pyd\r\n08/31/2019 05:42 AM 1,518,124 _flight.cpp\r\n08/31/2019 05:42 AM 46,504 _flight.pyx\r\n08/31/2019 05:42 AM 121 _generated_version.py\r\n08/31/2019 05:42 AM 52,736 _json.cp37-win_amd64.pyd\r\n08/31/2019 05:42 AM 311,759 _json.cpp\r\n08/31/2019 05:42 AM 6,413 _json.pyx\r\n08/31/2019 05:42 AM 2,156 _orc.pxd\r\n08/31/2019 05:42 AM 3,670 _orc.pyx\r\n08/31/2019 05:42 AM 281,600 _parquet.cp37-win_amd64.pyd\r\n08/31/2019 05:42 AM 1,352,623 _parquet.cpp\r\n08/31/2019 05:42 AM 17,061 _parquet.pxd\r\n08/31/2019 05:42 AM 44,057 _parquet.pyx\r\n08/31/2019 05:42 AM 27,524 _plasma.pyx\r\n08/31/2019 05:42 AM 1,749 __init__.pxd\r\n08/31/2019 05:42 AM 10,564 __init__.py\r\n08/31/2019 05:42 AM <DIR> __pycache__\r\n77 File(s) 56,030,721 bytes\r\n7 Dir(s) 22,981,132,288 bytes free\r\n\r\n// The following two steps installs Microsoft Visual C++ Redistributable for Visual Studio 2015, 2017 and 2019\r\n> bitsadmin /TRANSFER htmlget https://aka.ms/vs/16/release/vc_redist.x64.exe c:\\pyarrow\\vc_redist.x64.exe\r\n> ..\\vc_redist.x64.exe\r\n\r\n> python -c \"import pyarrow\"\r\n> python -c \"import pyarrow ; print (pyarrow.cpu_count())\"\r\n4\r\n> python -m pip freeze\r\nnumpy==1.17.1\r\npyarrow==0.14.0\r\nsix==1.12.0\r\n> dir Lib\\site-packages\\pyarrow\r\nVolume in drive C is OS\r\nVolume Serial Number is 1234-5678\r\n\r\nDirectory of C:\\pyarrow\\python-3.7.4-embed-amd64\\Lib\\site-packages\\pyarrow\r\n\r\n08/31/2019 05:42 AM <DIR> .\r\n08/31/2019 05:42 AM <DIR> ..\r\n08/31/2019 05:42 AM 47,658 array.pxi\r\n08/31/2019 05:42 AM 5,748,736 arrow.dll\r\n08/31/2019 05:42 AM 1,653,120 arrow.lib\r\n08/31/2019 05:42 AM 1,795,072 arrow_flight.dll\r\n08/31/2019 05:42 AM 121,062 arrow_flight.lib\r\n08/31/2019 05:42 AM 910,848 arrow_python.dll\r\n08/31/2019 05:42 AM 119,994 arrow_python.lib\r\n08/31/2019 05:42 AM 869 benchmark.pxi\r\n08/31/2019 05:42 AM 895 benchmark.py\r\n08/31/2019 05:42 AM 2,774 builder.pxi\r\n08/31/2019 05:42 AM 81,920 cares.dll\r\n08/31/2019 05:42 AM 3,691 compat.py\r\n08/31/2019 05:42 AM 911 csv.py\r\n08/31/2019 05:42 AM 1,126 cuda.py\r\n08/31/2019 05:42 AM 3,161 error.pxi\r\n08/31/2019 05:42 AM 4,026 feather.pxi\r\n08/31/2019 05:42 AM 7,291 feather.py\r\n08/31/2019 05:42 AM 12,472 filesystem.py\r\n08/31/2019 05:42 AM 1,286 flight.py\r\n08/31/2019 05:42 AM 186,880 gandiva.cp37-win_amd64.pyd\r\n08/31/2019 05:42 AM 791,664 gandiva.cpp\r\n08/31/2019 05:42 AM 22,094,848 gandiva.dll\r\n08/31/2019 05:42 AM 305,626 gandiva.lib\r\n08/31/2019 05:42 AM 16,553 gandiva.pyx\r\n08/31/2019 05:42 AM 7,032 hdfs.py\r\n08/31/2019 05:42 AM <DIR> include\r\n08/31/2019 05:42 AM <DIR> includes\r\n08/31/2019 05:42 AM 13,995 io-hdfs.pxi\r\n08/31/2019 05:42 AM 48,879 io.pxi\r\n08/31/2019 05:42 AM 15,981 ipc.pxi\r\n08/31/2019 05:42 AM 6,178 ipc.py\r\n08/31/2019 05:42 AM 897 json.py\r\n08/31/2019 05:42 AM 8,623 jvm.py\r\n08/31/2019 05:42 AM 1,553,408 lib.cp37-win_amd64.pyd\r\n08/31/2019 05:42 AM 6,756,155 lib.cpp\r\n08/31/2019 05:42 AM 10,652 lib.pxd\r\n08/31/2019 05:42 AM 3,570 lib.pyx\r\n08/31/2019 05:42 AM 3,243,008 libcrypto-1_1-x64.dll\r\n08/31/2019 05:42 AM 2,613,248 libprotobuf.dll\r\n08/31/2019 05:42 AM 650,240 libssl-1_1-x64.dll\r\n08/31/2019 05:42 AM 13,435 lib_api.h\r\n08/31/2019 05:42 AM 4,724 memory.pxi\r\n08/31/2019 05:42 AM 4,912 orc.py\r\n08/31/2019 05:42 AM 5,789 pandas-shim.pxi\r\n08/31/2019 05:42 AM 33,456 pandas_compat.py\r\n08/31/2019 05:42 AM 1,789,952 parquet.dll\r\n08/31/2019 05:42 AM 346,864 parquet.lib\r\n08/31/2019 05:42 AM 52,331 parquet.py\r\n08/31/2019 05:42 AM 5,780 plasma.py\r\n08/31/2019 05:42 AM 8,778 public-api.pxi\r\n08/31/2019 05:42 AM 23,060 scalar.pxi\r\n08/31/2019 05:42 AM 15,427 serialization.pxi\r\n08/31/2019 05:42 AM 12,588 serialization.py\r\n08/31/2019 05:42 AM 46,760 table.pxi\r\n08/31/2019 05:42 AM <DIR> tensorflow\r\n08/31/2019 05:42 AM <DIR> tests\r\n08/31/2019 05:42 AM 48,149 types.pxi\r\n08/31/2019 05:42 AM 6,609 types.py\r\n08/31/2019 05:42 AM 3,549 util.py\r\n08/31/2019 05:42 AM 89,600 zlib.dll\r\n08/31/2019 05:42 AM 106,496 _csv.cp37-win_amd64.pyd\r\n08/31/2019 05:42 AM 493,978 _csv.cpp\r\n08/31/2019 05:42 AM 14,861 _csv.pyx\r\n08/31/2019 05:42 AM 1,934 _cuda.pxd\r\n08/31/2019 05:42 AM 34,567 _cuda.pyx\r\n08/31/2019 05:42 AM 346,112 _flight.cp37-win_amd64.pyd\r\n08/31/2019 05:42 AM 1,518,124 _flight.cpp\r\n08/31/2019 05:42 AM 46,504 _flight.pyx\r\n08/31/2019 05:42 AM 121 _generated_version.py\r\n08/31/2019 05:42 AM 52,736 _json.cp37-win_amd64.pyd\r\n08/31/2019 05:42 AM 311,759 _json.cpp\r\n08/31/2019 05:42 AM 6,413 _json.pyx\r\n08/31/2019 05:42 AM 2,156 _orc.pxd\r\n08/31/2019 05:42 AM 3,670 _orc.pyx\r\n08/31/2019 05:42 AM 281,600 _parquet.cp37-win_amd64.pyd\r\n08/31/2019 05:42 AM 1,352,623 _parquet.cpp\r\n08/31/2019 05:42 AM 17,061 _parquet.pxd\r\n08/31/2019 05:42 AM 44,057 _parquet.pyx\r\n08/31/2019 05:42 AM 27,524 _plasma.pyx\r\n08/31/2019 05:42 AM 1,749 __init__.pxd\r\n08/31/2019 05:42 AM 10,564 __init__.py\r\n08/31/2019 05:42 AM <DIR> __pycache__\r\n77 File(s) 56,030,721 bytes\r\n7 Dir(s) 22,936,629,248 bytes free\r\n>\r\n```"
        },
        {
            "created_at": "2019-08-31T07:28:52.521Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16920048) by Kazuaki Ishizaki (kiszk):*\nIf I need to test other configurations, I can test them."
        },
        {
            "created_at": "2019-08-31T11:45:16.306Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16920102) by Antoine Pitrou (apitrou):*\n`[~kiszk]` How do you know this would fix the issue, if you didn't manage to reproduce it before?"
        },
        {
            "created_at": "2019-08-31T14:36:41.322Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16920138) by Kazuaki Ishizaki (kiszk):*\nAt first, I cannot reproduce this issue on my Windows 10 notebook where I have installed multiple applications.\r\n\r\nThen, when I prepared a new fresh Windows 10 instance where I have not installed any software and ran `pyarrow` on it, I noticed that I can reproduce this issue.\r\nAfter I installed some pip modules and installed utility software to the instance, I realized that this issue does not occur.   \r\n\r\nNext, I created another Windows 10 instance to investigate what step can avoid this issue. I checked step by step again. As a result, I found that installing `Microsoft Visual C++ Redistributable for Visual Studio 2015, 2017 and 2019` can avoid this issue.\r\n\r\nIs this an answer to your question?\r\n"
        },
        {
            "created_at": "2019-08-31T16:52:15.609Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16920175) by Antoine Pitrou (apitrou):*\n> Is this an answer to your question?\r\n\r\nOf course, thank you. So it seems the fix (if someone wants to fix the issue and produce reliable Windows wheels for PyArrow) should be to bundle the CRT DLLs with the wheel. It used to be simple as there were just two such DLLs (`msvcrt` and `msvcp`). Nowadays, there are several of them.\r\n\r\nAlternatively, just mention that people have to install the redistributables separately. They're useful for a ton of other software anyway."
        },
        {
            "created_at": "2019-08-31T17:14:43.510Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16920181) by Kazuaki Ishizaki (kiszk):*\nI agree with you. There are two possible solutions:\r\n\r\n1. Bundle the CRT DLLs (probably `msv*dll`) \n1. Ask users to install the redistributables by writing it in the document\n   \n   I think that Miniconda3 takes the first solution. Since I can find `msvcp140*.dll` under multiple directories in the miniconda directory.\n   \n   If we will take the first solution, I will be able to identify which DLLs are required."
        },
        {
            "created_at": "2019-08-31T18:26:37.521Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16920195) by Wes McKinney (wesm):*\nI don't know that installing the redistributable runtime is an acceptable solution. Isn't the CRT distributed with Python 3.7 on Windows? I am curious how other Python wheels (e.g. PyTorch, TensorFlow) address this issue. It might be worth asking them. \r\n\r\nPotentially there is a problem with our build environment that is introducing a dependency on a version of the CRT newer than the one distributed with Python from python.org"
        },
        {
            "created_at": "2019-08-31T18:51:46.096Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16920197) by Antoine Pitrou (apitrou):*\n> Isn't the CRT distributed with Python 3.7 on Windows?\r\n\r\nI don't know. Since the issue popped up on Windows 10 I suppose something is missing. I see two possible explanations:\r\n\r\n1. Python bundles the libraries that it uses itself, but we need more of them. For example, Python may not bundle the C++ parts (the Windows equivalent of `libstdc++`).\r\n2. Python bundles the libraries, but privately, so they are not automatically visible by other software, even Python libraries.\r\n\r\n"
        },
        {
            "created_at": "2019-08-31T18:58:52.432Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16920198) by Wes McKinney (wesm):*\nI see, it's plausible then that something is missing then. I took a brief look at the TensorFlow wheels and it looks like they are statically linking everything (including probably the CRT) in a single pyd file"
        },
        {
            "created_at": "2019-08-31T19:04:26.276Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16920199) by Antoine Pitrou (apitrou):*\nI don't know. I thought we were bundling the CRT with Numba or llvmlite wheels but I see that's not the case and I cannot find the trace of it in past versions. So perhaps I was mistaken.\r\n\r\nThe most annoying problem here is probably the obscure error message. If only Microsoft invested a tiny bit of their revenue to improve quality of life for end users and third-party developers..."
        },
        {
            "created_at": "2019-08-31T19:06:37.590Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16920201) by Antoine Pitrou (apitrou):*\nHistorical note: apparently I originally encountered the issue with Conda packages, not Python wheels. That wouldn't happen today anymore :) . See https://github.com/ContinuumIO/anaconda-issues/issues/202"
        },
        {
            "created_at": "2019-08-31T23:12:58.165Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16920230) by Wes McKinney (wesm):*\nI see, it makes sense then to bundle the DLLs."
        },
        {
            "created_at": "2019-08-31T23:25:50.526Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16920231) by Kazuaki Ishizaki (kiszk):*\nAs far as I know,  the CRT is not distributed with Python 3.7 on Windows.\r\n\r\n```Java\n\r\n> cd \\python-3.7.4-embed-amd64\r\n> \\cygwin64\\bin\\find . -name \"msv*\"\r\n./Lib/site-packages/numpy/distutils/msvc9compiler.py\r\n./Lib/site-packages/numpy/distutils/msvccompiler.py\r\n./Lib/site-packages/numpy/distutils/__pycache__/msvc9compiler.cpython-37.pyc\r\n./Lib/site-packages/numpy/distutils/__pycache__/msvccompiler.cpython-37.pyc\r\n./Lib/site-packages/setuptools/msvc.py\r\n./Lib/site-packages/setuptools/__pycache__/msvc.cpython-37.pyc\r\n\r\n> cd \\ProgramData\\Miniconda3\r\n>\\cygwin64\\bin\\find . -name \"msv*\"\r\n./Lib/distutils/msvc9compiler.py\r\n./Lib/distutils/msvccompiler.py\r\n./Lib/distutils/__pycache__/msvc9compiler.cpython-37.pyc\r\n./Lib/distutils/__pycache__/msvccompiler.cpython-37.pyc\r\n./Lib/site-packages/setuptools/msvc.py\r\n./Lib/site-packages/setuptools/__pycache__/msvc.cpython-37.pyc\r\n./Library/bin/msvcp140.dll\r\n./Library/bin/msvcp140_1.dll\r\n./Library/bin/msvcp140_2.dll\r\n./msvcp140.dll\r\n./msvcp140_1.dll\r\n./msvcp140_2.dll\r\n./pkgs/python-3.7.3-h8c8aaf0_1/Lib/distutils/msvc9compiler.py\r\n./pkgs/python-3.7.3-h8c8aaf0_1/Lib/distutils/msvccompiler.py\r\n./pkgs/python-3.7.3-h8c8aaf0_1/Lib/distutils/__pycache__/msvc9compiler.cpython-37.pyc\r\n./pkgs/python-3.7.3-h8c8aaf0_1/Lib/distutils/__pycache__/msvccompiler.cpython-37.pyc\r\n./pkgs/setuptools-41.0.1-py37_0/Lib/site-packages/setuptools/msvc.py\r\n./pkgs/setuptools-41.0.1-py37_0/Lib/site-packages/setuptools/__pycache__/msvc.cpython-37.pyc\r\n./pkgs/vs2015_runtime-14.15.26706-h3a45250_4/Library/bin/msvcp140.dll\r\n./pkgs/vs2015_runtime-14.15.26706-h3a45250_4/Library/bin/msvcp140_1.dll\r\n./pkgs/vs2015_runtime-14.15.26706-h3a45250_4/Library/bin/msvcp140_2.dll\r\n./pkgs/vs2015_runtime-14.15.26706-h3a45250_4/msvcp140.dll\r\n./pkgs/vs2015_runtime-14.15.26706-h3a45250_4/msvcp140_1.dll\r\n./pkgs/vs2015_runtime-14.15.26706-h3a45250_4/msvcp140_2.dll\r\n```\r\n\r\nIn addition to that, I remember that conda automatically installs `vs2015_runtime` package, too although I am not sure which package has a dependency on `vs2015_runtime` package.\r\n\r\n```Java\n\r\n> conda install pyarrow -c conda-forge\r\n...\r\nThe following NEW packages will be INSTALLED:\r\n\r\n  arrow-cpp          conda-forge/win-64::arrow-cpp-0.14.1-py37h1b0c03e_0\r\n  boost-cpp          conda-forge/win-64::boost-cpp-1.70.0-h6a4c333_2\r\n  brotli             conda-forge/win-64::brotli-1.0.7-he025d50_1000\r\n  c-ares             conda-forge/win-64::c-ares-1.15.0-h2fa13f4_1001\r\n  ca-certificates    conda-forge/win-64::ca-certificates-2019.6.16-hecc5488_0\r\n  certifi            conda-forge/win-64::certifi-2019.6.16-py37_1\r\n  double-conversion  conda-forge/win-64::double-conversion-3.1.5-h6538335_1\r\n  gflags             conda-forge/win-64::gflags-2.2.2-he025d50_1001\r\n  glog               conda-forge/win-64::glog-0.4.0-he025d50_1\r\n  grpc-cpp           conda-forge/win-64::grpc-cpp-1.23.0-h4d7d3fa_0\r\n  intel-openmp       pkgs/main/win-64::intel-openmp-2019.4-245\r\n  libblas            conda-forge/win-64::libblas-3.8.0-12_mkl\r\n  libcblas           conda-forge/win-64::libcblas-3.8.0-12_mkl\r\n  liblapack          conda-forge/win-64::liblapack-3.8.0-12_mkl\r\n  libprotobuf        conda-forge/win-64::libprotobuf-3.8.0-h1a1b453_0\r\n  lz4-c              conda-forge/win-64::lz4-c-1.8.3-he025d50_1001\r\n  mkl                pkgs/main/win-64::mkl-2019.4-245\r\n  numpy              conda-forge/win-64::numpy-1.17.1-py37hc71023c_0\r\n  openssl            conda-forge/win-64::openssl-1.1.1c-hfa6e2cd_0\r\n  pandas             conda-forge/win-64::pandas-0.25.1-py37he350917_0\r\n  parquet-cpp        conda-forge/noarch::parquet-cpp-1.5.1-2\r\n  pip                conda-forge/win-64::pip-19.2.3-py37_0\r\n  pyarrow            conda-forge/win-64::pyarrow-0.14.1-py37h803c963_0\r\n  python             conda-forge/win-64::python-3.7.3-h510b542_1\r\n  python-dateutil    conda-forge/noarch::python-dateutil-2.8.0-py_0\r\n  pytz               conda-forge/noarch::pytz-2019.2-py_0\r\n  re2                conda-forge/win-64::re2-2019.08.01-vc14h6538335_0\r\n  setuptools         conda-forge/win-64::setuptools-41.2.0-py37_0\r\n  six                conda-forge/win-64::six-1.12.0-py37_1000\r\n  snappy             conda-forge/win-64::snappy-1.1.7-h6538335_1002\r\n  sqlite             conda-forge/win-64::sqlite-3.29.0-hfa6e2cd_1\r\n  thrift-cpp         conda-forge/win-64::thrift-cpp-0.12.0-hd042d19_1004\r\n  uriparser          conda-forge/win-64::uriparser-0.9.3-he025d50_1\r\n  vc                 pkgs/main/win-64::vc-14.1-h0510ff6_4\r\n  vs2015_runtime     pkgs/main/win-64::vs2015_runtime-14.15.26706-h3a45250_4\r\n  wheel              conda-forge/win-64::wheel-0.33.6-py37_0\r\n  wincertstore       conda-forge/win-64::wincertstore-0.2-py37_1002\r\n  xz                 conda-forge/win-64::xz-5.2.4-h2fa13f4_1001\r\n  zlib               conda-forge/win-64::zlib-1.2.11-h2fa13f4_1005\r\n  zstd               conda-forge/win-64::zstd-1.4.0-hd8a0e53_0\r\n...\r\n```\r\n\r\n"
        },
        {
            "created_at": "2019-09-01T00:10:29.127Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16920236) by Kazuaki Ishizaki (kiszk):*\nI think that `numba` (preciously `llvmlite`) has the same problem regarding the CRT DLLs. \r\nA DLL load error occurs before executing `vc_redist.x64.exe`. The error disappear after executing `vc_redist.x64.exe`.\r\n```java\n\r\n> cd \\numba\\python-3.7.4-embed-amd64\r\n> python -m pip install numba\r\nCollecting numba\r\n...\r\nInstalling collected packages: llvmlite, numba\r\nSuccessfully installed llvmlite-0.29.0 numba-0.45.1\r\n\r\n> \\cygwin64\\bin\\find . -name \"msv*\"\r\n./Lib/site-packages/numpy/distutils/msvc9compiler.py\r\n./Lib/site-packages/numpy/distutils/msvccompiler.py\r\n./Lib/site-packages/numpy/distutils/__pycache__/msvc9compiler.cpython-37.pyc\r\n./Lib/site-packages/numpy/distutils/__pycache__/msvccompiler.cpython-37.pyc\r\n./Lib/site-packages/setuptools/msvc.py\r\n./Lib/site-packages/setuptools/__pycache__/msvc.cpython-37.pyc\r\n\r\n> python -c \"import numpy\"\r\n>  \\cygwin64\\bin\\find . -name \"msv*\"\r\n./Lib/site-packages/numpy/distutils/msvc9compiler.py\r\n./Lib/site-packages/numpy/distutils/msvccompiler.py\r\n./Lib/site-packages/numpy/distutils/__pycache__/msvc9compiler.cpython-37.pyc\r\n./Lib/site-packages/numpy/distutils/__pycache__/msvccompiler.cpython-37.pyc\r\n./Lib/site-packages/setuptools/msvc.py\r\n./Lib/site-packages/setuptools/__pycache__/msvc.cpython-37.pyc\r\n> type Lib\\site-packages\\numpy\\LICENSE.txt\r\n...\r\nName: Microsoft Visual C++ Runtime Files\r\nFiles: extra-dll\\msvcp140.dll\r\nLicense: MSVC\r\n  https://www.visualstudio.com/license-terms/distributable-code-microsoft-visual-studio-2015-rc-microsoft-visual-studio-2015-sdk-rc-includes-utilities-buildserver-files/#visual-c-runtime\r\n\r\n  Subject to the License Terms for the software, you may copy and\r\n  distribute with your program any of the files within the followng\r\n  folder and its subfolders except as noted below. You may not modify\r\n  these files.\r\n\r\n    C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\redist\r\n\r\n  You may not distribute the contents of the following folders:\r\n\r\n    C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\redist\\debug_nonredist\r\n    C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\redist\\onecore\\debug_nonredist\r\n\r\n  Subject to the License Terms for the software, you may copy and\r\n  distribute the following files with your program in your program\u0393\u00c7\u00d6s\r\n  application local folder or by deploying them into the Global\r\n  Assembly Cache (GAC):\r\n\r\n  VC\\atlmfc\\lib\\mfcmifc80.dll\r\n  VC\\atlmfc\\lib\\amd64\\mfcmifc80.dll\r\n\r\n\r\nName: Microsoft Visual C++ Runtime Files\r\nFiles: extra-dll\\msvc*90.dll, extra-dll\\Microsoft.VC90.CRT.manifest\r\nLicense: MSVC\r\n  For your convenience, we have provided the following folders for\r\n  use when redistributing VC++ runtime files. Subject to the license\r\n  terms for the software, you may redistribute the folder\r\n  (unmodified) in the application local folder as a sub-folder with\r\n  no change to the folder name. You may also redistribute all the\r\n  files (*.dll and *.manifest) within a folder, listed below the\r\n  folder for your convenience, as an entire set.\r\n\r\n  \\VC\\redist\\x86\\Microsoft.VC90.ATL\\\r\n   atl90.dll\r\n   Microsoft.VC90.ATL.manifest\r\n  \\VC\\redist\\ia64\\Microsoft.VC90.ATL\\\r\n   atl90.dll\r\n   Microsoft.VC90.ATL.manifest\r\n  \\VC\\redist\\amd64\\Microsoft.VC90.ATL\\\r\n   atl90.dll\r\n   Microsoft.VC90.ATL.manifest\r\n  \\VC\\redist\\x86\\Microsoft.VC90.CRT\\\r\n   msvcm90.dll\r\n   msvcp90.dll\r\n   msvcr90.dll\r\n   Microsoft.VC90.CRT.manifest\r\n  \\VC\\redist\\ia64\\Microsoft.VC90.CRT\\\r\n   msvcm90.dll\r\n   msvcp90.dll\r\n   msvcr90.dll\r\n   Microsoft.VC90.CRT.manifest\r\n...\r\n\r\n> python -c \"import numba\"\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"C:\\numba\\python-3.7.4-embed-amd64\\lib\\site-packages\\numba\\__init__.py\", line 15, in <module>\r\n    from . import config, errors, _runtests as runtests, types\r\n  File \"C:\\numba\\python-3.7.4-embed-amd64\\lib\\site-packages\\numba\\config.py\", line 18, in <module>\r\n    import llvmlite.binding as ll\r\n  File \"C:\\numba\\python-3.7.4-embed-amd64\\lib\\site-packages\\llvmlite\\binding\\__init__.py\", line 6, in <module>\r\n    from .dylib import *\r\n  File \"C:\\numba\\python-3.7.4-embed-amd64\\lib\\site-packages\\llvmlite\\binding\\dylib.py\", line 4, in <module>\r\n    from . import ffi\r\n  File \"C:\\numba\\python-3.7.4-embed-amd64\\lib\\site-packages\\llvmlite\\binding\\ffi.py\", line 154, in <module>\r\n    raise OSError(\"Could not load shared object file: {}\".format(_lib_name))\r\nOSError: Could not load shared object file: llvmlite.dll\r\n> python -c \"llvmlite.binding as ll\"\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"C:\\numba\\python-3.7.4-embed-amd64\\lib\\site-packages\\llvmlite\\binding\\__init__.py\", line 6, in <module>\r\n    from .dylib import *\r\n  File \"C:\\numba\\python-3.7.4-embed-amd64\\lib\\site-packages\\llvmlite\\binding\\dylib.py\", line 4, in <module>\r\n    from . import ffi\r\n  File \"C:\\numba\\python-3.7.4-embed-amd64\\lib\\site-packages\\llvmlite\\binding\\ffi.py\", line 154, in <module>\r\n    raise OSError(\"Could not load shared object file: {}\".format(_lib_name))\r\nOSError: Could not load shared object file: llvmlite.dll\r\n> >bitsadmin /TRANSFER htmlget https://aka.ms/vs/16/release/vc_redist.x64.exe c:\\numba\\vc_redist.x64.exe\r\n> ../vc_redist.x64.exe\r\n> python -c \"import llvmlite.binding as ll\"\r\n> python -c \"import numba\"\r\n> \r\n```"
        },
        {
            "created_at": "2019-09-11T00:46:26.201Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16927148) by Wes McKinney (wesm):*\nOK, let's resolve this issue by adding documentation about installing Visual C++ Redistributable?"
        },
        {
            "created_at": "2019-09-11T01:31:27.961Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16927176) by Kazuaki Ishizaki (kiszk):*\nIIUC, there is already a paragraph to suggest installing Visual C++ Redistribute at [here](https://arrow.apache.org/docs/python/install.html#using-pip)? Do we need to update the link and add an example for a failure?\r\n\r\n```Java\n\r\nIf you encounter any importing issues of the pip wheels on Windows, you may need to install the Visual C++ Redistributable for Visual Studio 2015.\r\n```\r\n\r\n\r\nFinally (beyond 0.15?), is it the best solution to bundle the DLLs? Since I am studying how to package whl in windows for the release, it takes a time for me to find a way to bundle the DLLs. If there is a document, it helps me.\r\n\r\n"
        },
        {
            "created_at": "2019-09-11T14:04:41.534Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16927600) by Wes McKinney (wesm):*\nIn the short term we need to add documentation here\r\n\r\nhttps://github.com/apache/arrow/blob/master/python/README.md\r\n\r\nI'm submitting a PR"
        },
        {
            "created_at": "2019-09-11T14:10:20.654Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16927601) by Wes McKinney (wesm):*\nI submitted a documentation PR and removed this from the release milestone for now"
        },
        {
            "created_at": "2019-09-11T14:15:34.036Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16927606) by Kazuaki Ishizaki (kiszk):*\nI see. I will investigate how to bundle DLLs beyond 0.15."
        },
        {
            "created_at": "2019-10-01T15:30:53.306Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16942074) by Krisztian Szucs (kszucs):*\nThis should be resolved by https://github.com/apache/arrow/pull/5404\r\nWe can confirm that it works during the 0.15 release verification."
        },
        {
            "created_at": "2019-10-29T11:19:48.712Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16961908) by Sascha Hofmann (saschahofmann):*\nWe were observing the same error with a conda installation of pyarrow 0.15.0. Previously (on 0.14.1) we were running error-free.\u00a0 After updating the DLL loading failed error started popping up. We finally fixed it by installing the Visual C++ Redistributables **2019.**\u00a0Neither the 2015 or 2017 versions were fixing the issue!\r\n\r\n\u00a0\r\n\r\n_Edit:_ After restarting the machine, we are now seeing the error again. We are on Windows 10 and are using conda to install pyarrow."
        },
        {
            "created_at": "2019-10-29T14:55:48.628Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16962078) by Wes McKinney (wesm):*\nThis was resolved in 0.15.0.\r\n\r\nAny conda issues are something else and should be diagnosed separately, can you open an issue on the pyarrow-feedstock on conda-forge? \r\n\r\nI ran\r\n\r\n```Java\n\r\nconda create -n pyarrow-conda-test python=3.7 pyarrow -c conda-forge\r\n```\r\n\r\nand couldn't reproduce the issue locally"
        },
        {
            "created_at": "2019-10-29T15:53:23.824Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6015?focusedCommentId=16962144) by Sascha Hofmann (saschahofmann):*\nOk, great. I will do that. I just found an issue there which is probably related/ the same as ours. Thanks"
        }
    ]
}