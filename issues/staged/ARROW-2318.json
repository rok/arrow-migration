{
    "issue": {
        "title": "[C++] TestPlasmaStore.MultipleClientTest is flaky (hangs) in release builds",
        "body": "***Note**: This issue was originally created as [ARROW-2318](https://issues.apache.org/jira/browse/ARROW-2318). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nHere's my setup:\r\n\r\n- Ubuntu 16.04\n- clang 5.0 (gcc 5.4.0 base toolchain)\n  \n  I can reliably get `release/client_tests` to hang. I hit this while looking at a possible 0.9.0 release candidate",
        "created_at": "2018-03-15T20:26:49.000Z",
        "updated_at": "2018-03-16T16:27:32.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2018-03-16T16:27:21.000Z"
    },
    "comments": [
        {
            "created_at": "2018-03-15T20:46:59.316Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2318?focusedCommentId=16401097) by Wes McKinney (wesm):*\nHere's another failure:\r\n\r\n```Java\n\r\n$ ./release/client_tests \r\n[==========] Running 7 tests from 1 test case.\r\n[----------] Global test environment set-up.\r\n[----------] 7 tests from TestPlasmaStore\r\n[ RUN      ] TestPlasmaStore.DeleteTest\r\n[       OK ] TestPlasmaStore.DeleteTest (1 ms)\r\n[ RUN      ] TestPlasmaStore.ContainsTest\r\n[       OK ] TestPlasmaStore.ContainsTest (1 ms)\r\n[ RUN      ] TestPlasmaStore.GetTest\r\n[       OK ] TestPlasmaStore.GetTest (1 ms)\r\n[ RUN      ] TestPlasmaStore.MultipleGetTest\r\n[       OK ] TestPlasmaStore.MultipleGetTest (1 ms)\r\n[ RUN      ] TestPlasmaStore.AbortTest\r\n[       OK ] TestPlasmaStore.AbortTest (1 ms)\r\n[ RUN      ] TestPlasmaStore.MultipleClientTest\r\n[       OK ] TestPlasmaStore.MultipleClientTest (2 ms)\r\n[ RUN      ] TestPlasmaStore.ManyObjectTest\r\nConnection to IPC socket failed for pathname /tmp/store, retrying 50 more times\r\n../src/plasma/test/client_tests.cc:289: Failure\r\n      Expected: has_object\r\n      Which is: false\r\nTo be equal to: true\r\n[  FAILED  ] TestPlasmaStore.ManyObjectTest (118 ms)\r\n[----------] 7 tests from TestPlasmaStore (125 ms total)\r\n\r\n[----------] Global test environment tear-down\r\n[==========] 7 tests from 1 test case ran. (125 ms total)\r\n[  PASSED  ] 6 tests.\r\n[  FAILED  ] 1 test, listed below:\r\n[  FAILED  ] TestPlasmaStore.ManyObjectTest\r\n\r\n 1 FAILED TEST\r\n```"
        },
        {
            "created_at": "2018-03-15T23:45:32.580Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2318?focusedCommentId=16401275) by Philipp Moritz (pcmoritz):*\nWhat is the best way to reproduce your build? I've been trying for a while to get things compile with clang-5.0, but keep running into trouble."
        },
        {
            "created_at": "2018-03-16T00:00:39.374Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2318?focusedCommentId=16401288) by Wes McKinney (wesm):*\nCan you post the problem you're having compiling? I'm using the build procedure in `dev/release/verify-release-candidate.sh`. You can comment out all commands but `test_and_install_cpp` at the bottom and run `verify-release-candidate.sh 0.9.0 1`"
        },
        {
            "created_at": "2018-03-16T00:03:40.505Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2318?focusedCommentId=16401291) by Wes McKinney (wesm):*\nTo build with clang-5.0, set\r\n\r\n```Java\n\r\nexport CC=clang-5.0\r\nexport CXX=clang++-5.0\r\n```"
        },
        {
            "created_at": "2018-03-16T00:50:00.074Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2318?focusedCommentId=16401327) by Philipp Moritz (pcmoritz):*\nThe issue I'm having is in installing the clang/llvm toolchain itself (in\nparticular libcxx), any advice/pointer for that would be helpful (on Ubuntu\n16.04 on ec2).\n\nhttps://issues.apache.org/jira/browse/ARROW-2318?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&focusedCommentId=16401291#comment-16401291\n]\nbuilds\n---------------------------------------------------------------------------\nlooking at a possible 0.9.0 release candidate\n"
        },
        {
            "created_at": "2018-03-16T00:54:10.224Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2318?focusedCommentId=16401329) by Wes McKinney (wesm):*\nHm, we use the LLVM apt repos in Travis CI for this http://apt.llvm.org/. I can try creating a Dockerfile if that helps"
        },
        {
            "created_at": "2018-03-16T01:35:57.941Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2318?focusedCommentId=16401363) by Wes McKinney (wesm):*\nHere's a Dockerfile\r\n\r\n```Java\n\r\nFROM ubuntu:16.04\r\n\r\n# Basic OS dependencies\r\nRUN apt-get update && apt-get install -y \\\r\n        wget \\\r\n        rsync \\\r\n        git \\\r\n        build-essential \\\r\n        software-properties-common\r\n\r\nRUN wget -O - http://apt.llvm.org/llvm-snapshot.gpg.key| apt-key add - &&\\\r\n    apt-add-repository -y \"deb http://llvm.org/apt/xenial/ llvm-toolchain-xenial-5.0 main\" &&\\\r\n    apt-get update -qq &&\\\r\n    apt-get install -yq clang-5.0 clang-format-5.0 clang-tidy-5.0\r\n\r\n# Arrow build dependencies\r\nRUN apt-get install -y \\\r\n    libboost-filesystem-dev \\\r\n    libboost-system-dev \\\r\n    libboost-regex-dev \\\r\n    cmake\r\n```\r\n\r\nAnd a test script:\r\n\r\n```Java\n\r\n#!/usr/bin/env bash\r\n\r\nset -ex\r\n\r\ngit clone https://github.com/apache/arrow.git\r\nmkdir -p arrow/cpp/build\r\npushd arrow/cpp/build\r\n\r\nexport CC=clang-5.0\r\nexport CXX=clang++-5.0\r\n\r\ncmake -DARROW_PLASMA=on \\\r\n      -DARROW_BOOST_USE_SHARED=on \\\r\n      -DCMAKE_BUILD_TYPE=release \\\r\n      ..\r\nmake -j8\r\n\r\n./release/client_tests\r\n./release/client_tests\r\n./release/client_tests\r\n./release/client_tests\r\n./release/client_tests\r\n```\r\n\r\nThis is failing for me with linking issues, though:\r\n\r\n```Java\n\r\n[ 78%] Linking CXX executable ../../release/table-test\r\n../../release/libarrow.a(decimal.cc.o): In function `__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > boost::re_detail::re_is_set_member<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, char, boost::regex_traits<char, boost::cpp_regex_traits<char> >, unsigned int>(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, boost::re_detail::re_set_long<unsigned int> const*, boost::re_detail::regex_data<char, boost::regex_traits<char, boost::cpp_regex_traits<char> > > const&, bool)':\r\n/arrow/cpp/src/arrow/util/decimal.cc:(.text._ZN5boost9re_detail16re_is_set_memberIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEcNS_12regex_traitsIcNS_16cpp_regex_traitsIcEEEEjEET_SH_SH_PKNS0_11re_set_longIT2_EERKNS0_10regex_dataIT0_T1_EEb[_ZN5boost9re_detail16re_is_set_memberIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEcNS_12regex_traitsIcNS_16cpp_regex_traitsIcEEEEjEET_SH_SH_PKNS0_11re_set_longIT2_EERKNS0_10regex_dataIT0_T1_EEb]+0x284): undefined reference to `boost::re_detail::cpp_regex_traits_implementation<char>::transform[abi:cxx11](char const*, char const*) const'\r\n/arrow/cpp/src/arrow/util/decimal.cc:(.text._ZN5boost9re_detail16re_is_set_memberIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEcNS_12regex_traitsIcNS_16cpp_regex_traitsIcEEEEjEET_SH_SH_PKNS0_11re_set_longIT2_EERKNS0_10regex_dataIT0_T1_EEb[_ZN5boost9re_detail16re_is_set_memberIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEcNS_12regex_traitsIcNS_16cpp_regex_traitsIcEEEEjEET_SH_SH_PKNS0_11re_set_longIT2_EERKNS0_10regex_dataIT0_T1_EEb]+0x3c4): undefined reference to `boost::re_detail::cpp_regex_traits_implementation<char>::transform_primary[abi:cxx11](char const*, char const*) const'\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\nsrc/arrow/CMakeFiles/table-test.dir/build.make:108: recipe for target 'release/table-test' failed\r\nmake[2]: *** [release/table-test] Error 1\r\nCMakeFiles/Makefile2:1425: recipe for target 'src/arrow/CMakeFiles/table-test.dir/all' failed\r\nmake[1]: *** [src/arrow/CMakeFiles/table-test.dir/all] Error 2\r\n```\r\n\r\nI'm at a loss how to proceed here. `[~cpcloud]` any ideas?"
        },
        {
            "created_at": "2018-03-16T01:45:53.778Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2318?focusedCommentId=16401371) by Wes McKinney (wesm):*\nIt looks like the Boost libraries in the 16.04 apt repos can't be used with the clang-5.0 from apt, so that's awesome. I thought I would try the vendored Boost build, but that's broken: ARROW-2320. \r\n\r\n`[~pcmoritz]` it turns out that clang-5.0 is not necessary to reproduce this failure \u2013 it fails with gcc 5.4.0 too. Here's the modified build script:\r\n\r\n```Java\n\r\n#!/usr/bin/env bash\r\n\r\nset -ex\r\n\r\ngit clone https://github.com/apache/arrow.git\r\nmkdir -p arrow/cpp/build\r\npushd arrow/cpp/build\r\n\r\n# export CC=clang-5.0\r\n# export CXX=clang++-5.0\r\n\r\ncmake -DARROW_PLASMA=on \\\r\n      -DARROW_BOOST_USE_SHARED=on \\\r\n      -DCMAKE_BUILD_TYPE=release \\\r\n      ..\r\nmake -j8\r\n\r\n./release/client_tests\r\n./release/client_tests\r\n./release/client_tests\r\n./release/client_tests\r\n./release/client_tests\r\n```\r\n\r\nI'm running this with:\r\n\r\n```Java\n\r\ndocker build -t arrow-plasma-debug .\r\ndocker run --shm-size=2g --rm -t -i -v $PWD:/io arrow-plasma-debug /io/build_and_test.sh\r\n```\r\n\r\nand it fails with\r\n\r\n```Java\n\r\n[100%] Built target array-test\r\n+ ./release/client_tests\r\n[==========] Running 7 tests from 1 test case.\r\n[----------] Global test environment set-up.\r\n[----------] 7 tests from TestPlasmaStore\r\n[ RUN      ] TestPlasmaStore.DeleteTest\r\nConnection to IPC socket failed for pathname /tmp/store, retrying 50 more times\r\n[       OK ] TestPlasmaStore.DeleteTest (103 ms)\r\n[ RUN      ] TestPlasmaStore.ContainsTest\r\n[       OK ] TestPlasmaStore.ContainsTest (2 ms)\r\n[ RUN      ] TestPlasmaStore.GetTest\r\n[       OK ] TestPlasmaStore.GetTest (2 ms)\r\n[ RUN      ] TestPlasmaStore.MultipleGetTest\r\n[       OK ] TestPlasmaStore.MultipleGetTest (2 ms)\r\n[ RUN      ] TestPlasmaStore.AbortTest\r\n[       OK ] TestPlasmaStore.AbortTest (3 ms)\r\n[ RUN      ] TestPlasmaStore.MultipleClientTest\r\n[       OK ] TestPlasmaStore.MultipleClientTest (2 ms)\r\n[ RUN      ] TestPlasmaStore.ManyObjectTest\r\n/arrow/cpp/src/plasma/test/client_tests.cc:289: Failure\r\n      Expected: has_object\r\n      Which is: false\r\nTo be equal to: true\r\n[  FAILED  ] TestPlasmaStore.ManyObjectTest (10 ms)\r\n[----------] 7 tests from TestPlasmaStore (124 ms total)\r\n\r\n[----------] Global test environment tear-down\r\n[==========] 7 tests from 1 test case ran. (124 ms total)\r\n[  PASSED  ] 6 tests.\r\n[  FAILED  ] 1 test, listed below:\r\n[  FAILED  ] TestPlasmaStore.ManyObjectTest\r\n\r\n 1 FAILED TEST\r\n```"
        },
        {
            "created_at": "2018-03-16T07:23:37.172Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2318?focusedCommentId=16401534) by Philipp Moritz (pcmoritz):*\nThanks a lot Wes for making it reproducible \u2013 running in docker did the trick!\r\n\r\nI put up a PR that fixes it for me."
        },
        {
            "created_at": "2018-03-16T16:27:21.661Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2318?focusedCommentId=16402137) by Wes McKinney (wesm):*\nIssue resolved by pull request 1761\n<https://github.com/apache/arrow/pull/1761>"
        }
    ]
}