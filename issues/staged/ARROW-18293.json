{
    "issue": {
        "title": "[C++] Proxy memory pool crashes with Dataset scanning",
        "body": "***Note**: This issue was originally created as [ARROW-18293](https://issues.apache.org/jira/browse/ARROW-18293). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nDiscovered while trying to use the proxy memory pool for testing ARROW-18164\r\n\r\nSee https://github.com/apache/arrow/pull/14516#discussion_r1005433867\r\n\r\nThis test segfaults (using the fixture in `test_dataset.py`:\r\n\r\n```python\n\r\n@pytest.mark.parquet\r\ndef test_scanner_proxy_memory_pool(dataset):\r\n    proxy_pool = pa.proxy_memory_pool(pa.default_memory_pool())\r\n    _ = dataset.to_table(memory_pool=proxy_pool)\r\n```\r\n\r\nResponse of `[~westonpace]`:\r\n\r\n> My guess is that the problem is that the scanner erroneously returns before all work is completely finished. Changing the thread pool or the memory pool too quickly after a scan can lead to this kind of error. The new scanner was created specifically to avoid this problem but it isn't the default yet (still working through some follow-up PRs to make sure we have the same functionality).\r\n\r\nSo once that becomes the default new scanner, we can see if this is fixed.",
        "created_at": "2022-11-09T10:16:10.000Z",
        "updated_at": "2022-11-09T10:16:10.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": []
}