{
    "issue": {
        "title": "[C++] CMake warnings with Flight SQL",
        "body": "***Note**: This issue was originally created as [ARROW-15647](https://issues.apache.org/jira/browse/ARROW-15647). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI get the following warnings with Flight enabled when building from a Conda environment:\r\n```Java\n\r\nCMake Warning at cmake_modules/BuildUtils.cmake:692 (add_executable):\r\n  Cannot generate a safe runtime search path for target arrow-flight-sql-test\r\n  because files in some directories may conflict with libraries in implicit\r\n  directories:\r\n\r\n    runtime library [libsqlite3.so.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:\r\n      /home/antoine/miniconda3/envs/pyarrow/lib\r\n\r\n  Some of these libraries may not be found correctly.\r\nCall Stack (most recent call first):\r\n  src/arrow/CMakeLists.txt:62 (add_test_case)\r\n  src/arrow/flight/sql/CMakeLists.txt:80 (add_arrow_test)\r\n\r\n\r\nCMake Warning at src/arrow/flight/sql/CMakeLists.txt:91 (add_executable):\r\n  Cannot generate a safe runtime search path for target\r\n  flight_sql_test_server because files in some directories may conflict with\r\n  libraries in implicit directories:\r\n\r\n    runtime library [libsqlite3.so.0] in /usr/lib/x86_64-linux-gnu may be hidden by files in:\r\n      /home/antoine/miniconda3/envs/pyarrow/lib\r\n\r\n  Some of these libraries may not be found correctly.\r\n```\r\n",
        "created_at": "2022-02-10T14:36:32.000Z",
        "updated_at": "2022-02-14T00:26:14.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-02-10T14:37:28.053Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15647?focusedCommentId=17490296) by Antoine Pitrou (apitrou):*\ncc `[~lidavidm]` `[~kou]`"
        },
        {
            "created_at": "2022-02-14T00:26:14.413Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15647?focusedCommentId=17491732) by Kouhei Sutou (kou):*\n- Does `/home/antoine/miniconda3/envs/pyarrow/lib/libsqlite3.so.0` exist?\n- Could you show the output of `grep '^SQLite3' ${BUILD_DIR}/CMakeCache.txt`?\n  \n  It seems that we need to support `SQLite3_ROOT` something like:\n  \n  {noformat}\n  diff --git a/cpp/cmake_modules/FindSQLite3Alt.cmake b/cpp/cmake_modules/FindSQLite3Alt.cmake\n  index 73a45f098c..65fddcb3c3 100644\n\u2014 a/cpp/cmake_modules/FindSQLite3Alt.cmake\r\n+++ b/cpp/cmake_modules/FindSQLite3Alt.cmake\r\n@@ -26,8 +26,21 @@\r\n1. Usage of this module as follows:\n1. find_package(SQLite3Alt)\n    \n   -find_path(SQLite3_INCLUDE_DIR sqlite3.h)\n   -find_library(SQLite3_LIBRARY NAMES sqlite3)\n   +if(SQLite3_ROOT)\n   +  find_path(SQLite3_INCLUDE_DIR\n   +            NAMES sqlite3.h\n   +            NO_DEFAULT_PATH\n   +            PATHS ${SQLite3_ROOT}\n   +            PATH_SUFFIXES ${ARROW_INCLUDE_PATH_SUFFIXES})\n   +  find_library(SQLite3_LIBRARY\n   +               NAMES sqlite3\n   +               NO_DEFAULT_PATH\n   +               PATHS ${SQLite3_ROOT}\n   +               PATH_SUFFIXES ${ARROW_LIBRARY_PATH_SUFFIXES})\n   +else()\n   +  find_path(SQLite3_INCLUDE_DIR NAMES sqlite3.h)\n   +  find_library(SQLite3_LIBRARY NAMES sqlite3)\n   +endif()\n    \n1. handle the QUIETLY and REQUIRED arguments and set SQLite3_FOUND to TRUE if\n1. all listed variables are TRUE\n   diff --git a/cpp/cmake_modules/ThirdpartyToolchain.cmake b/cpp/cmake_modules/ThirdpartyToolchain.cmake\n   index b7e6f6e9e6..d5ab67f7d4 100644\n   \u2014 a/cpp/cmake_modules/ThirdpartyToolchain.cmake\n   +++ b/cpp/cmake_modules/ThirdpartyToolchain.cmake\n   @@ -69,6 +69,7 @@ set(ARROW_THIRDPARTY_DEPENDENCIES\n        Protobuf\n        RapidJSON\n        Snappy\n   +    SQLite3\n        Thrift\n        utf8proc\n        xsimd\n   {noformat}\n   \n   `[~rafaeltelles]` Could you work on this?"
        }
    ]
}