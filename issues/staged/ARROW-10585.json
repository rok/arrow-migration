{
    "issue": {
        "title": "[Rust] [DataFusion] Add join support to DataFrame and LogicalPlan",
        "body": "***Note**: This issue was originally created as [ARROW-10585](https://issues.apache.org/jira/browse/ARROW-10585). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nAdd join support to DataFrame and LogicalPlan.\r\n## Logical Plan\r\n\r\nMy initial thoughts on the design of the LogicalPlan struct would be:\r\n```java\n\r\nstruct InnerJoin {\r\n  left: Box<LogicalPlan>,\r\n  right: Box<LogicalPlan>,\r\n  left_keys: Vec<Expr>,\r\n  right_keys: Vec<Expr>\r\n} \n```\r\nThe left_keys and right_keys vectors must have the same length. Example pseudo-code:\r\n```java\n\r\nlet join = InnerJoin {\r\n\u00a0 left: read_parquet(\"customers\"),\r\n  right: read_parquer(\"orders\"),\r\n  left_keys: vec![col(\"id\")],\r\n  right_keys: vec![col(\"customer_id\")]\r\n};  \u00a0 \n```\r\n## DataFrame\r\n```java\n\r\nlet customer = ctx.read_parquet(\"customers\").alias(\"c\");\r\nlet orders = ctx.read_parquet(\"orders\").alias(\"o\");\r\n\r\n// generic join method that can support all types of join\r\nlet join = customer.join(orders, col(\"c.id\").eq(\"o.customer_id\"))\r\n\r\n// or we could start with a more specific equijoin method\r\nlet join = customer.inner_join(orders, vec![col(\"id\")], vec![col(\"customer_id\")]);\n```\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0",
        "created_at": "2020-11-14T16:14:15.000Z",
        "updated_at": "2020-11-21T19:45:00.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust - DataFusion",
            "Type: task"
        ],
        "closed": true,
        "closed_at": "2020-11-21T19:44:53.000Z"
    },
    "comments": [
        {
            "created_at": "2020-11-21T19:44:53.943Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10585?focusedCommentId=17236777) by Andy Grove (andygrove):*\nIssue resolved by pull request 8720\n<https://github.com/apache/arrow/pull/8720>"
        }
    ]
}