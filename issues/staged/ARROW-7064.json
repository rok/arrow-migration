{
    "issue": {
        "title": "[R] Implement null type",
        "body": "***Note**: This issue was originally created as [ARROW-7064](https://issues.apache.org/jira/browse/ARROW-7064). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI tried to read a Parquet file into an R data.frame, and there was a null column in it. \r\n\r\n```Java\n\r\nError in Table__to_dataframe(x, use_threads = option_use_threads()) : \r\n  cannot handle Array of type null\r\n```",
        "created_at": "2019-11-04T23:21:06.000Z",
        "updated_at": "2019-12-13T17:23:20.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-12-13T17:23:02.000Z"
    },
    "comments": [
        {
            "created_at": "2019-11-05T18:55:03.084Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7064?focusedCommentId=16967777) by Zachary Lawrence (zlawrence):*\nHi, we're also experiencing this same bug. We're unable to use R to read a parquet file with a column filled with null. The same parquet file can be read in fine using Python (pandas.read_parquet using 'pyarrow' as the engine).\r\n\r\n\u00a0\r\n\r\nAny thoughts on how to fix this issue or any workarounds?"
        },
        {
            "created_at": "2019-11-05T21:00:02.116Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7064?focusedCommentId=16967860) by Neal Richardson (npr):*\nYou can work around by de-selecting the null columns when you read into R. In `read_parquet` you can use the `col_select` argument to specify columns to keep, or using the tidyselect helpers, deselect columns with `-`. In my case, I was able to omit the null column called \"rate_code_id\" like this:\r\n\r\n```Java\n\r\ndf <- read_parquet(file, col_select = -rate_code_id)\r\n```"
        },
        {
            "created_at": "2019-11-06T14:23:59.631Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7064?focusedCommentId=16968394) by Zachary Lawrence (zlawrence):*\nGot it - thanks! Do you know if there's any way to tell which columns are null on the R side without iteratively checking each one?\r\n\r\n\u00a0\r\n\r\nAlso, do you know if this is a bug that is planned to be fixed?\r\n\r\n\u00a0\r\n\r\nThanks!"
        },
        {
            "created_at": "2019-11-06T21:06:29.796Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7064?focusedCommentId=16968711) by Wes McKinney (wesm):*\nI would guess that this will be fixed at some point"
        },
        {
            "created_at": "2019-11-06T21:40:02.309Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7064?focusedCommentId=16968743) by Neal Richardson (npr):*\nYou can read the file with as_data_frame=FALSE to keep it in Arrow memory, inspect the schema to see which columns are null, and then as.data.frame() without them. In my example:\r\n\r\n```Java\n\r\ntab <- read_parquet(file, as_data_frame=FALSE)\r\ntab$schema\r\ndf <- as.data.frame(tab[, setdiff(names(tab), \"rate_code_id\")])\r\n```\r\n"
        },
        {
            "created_at": "2019-12-13T17:23:02.367Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7064?focusedCommentId=16995773) by Neal Richardson (npr):*\nIssue resolved by pull request 6023\n<https://github.com/apache/arrow/pull/6023>"
        }
    ]
}