{
    "issue": {
        "title": "[C++] \"infer\" reports errors",
        "body": "***Note**: This issue was originally created as [ARROW-3599](https://issues.apache.org/jira/browse/ARROW-3599). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI pasted the errors generated by the [infer](https://fbinfer.com/) tool here:\r\nhttps://gist.github.com/pitrou/8512eec5f6ee31c02a58de7bdb2c3f7f\r\n\r\ncc `[~renesugar]`",
        "created_at": "2018-10-23T14:58:38.000Z",
        "updated_at": "2019-08-21T22:54:05.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-08-21T22:54:05.000Z"
    },
    "comments": [
        {
            "created_at": "2018-10-23T15:32:15.682Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3599?focusedCommentId=16660841) by Antoine Pitrou (apitrou):*\nI've explored the different error kinds.\r\n\r\nThe DEAD_STORE reports (value written to a given variable is never used) are basically uninteresting. We have various methods that take one or several \"out\" pointers, and we may not always used the resulting values. It's fine.\r\n\r\nThe NULL_DEREFERENCE reports are all bogus.\r\n\r\nThe USE_AFTER_LIFETIME reports are also bogus. It seems \"infer\" isn't very good on C++ and gets confused by certains constructs (perhaps it's mostly used for Java code).\r\n\r\nThe LOCK_CONSISTENCY_VIOLATION reports (\"non-private method reads something without synchronization\") are a mixed bag:\r\n- some of them are false positives (the methods are module-private even if they aren't class-private)\n- the `CudaBufferWriter` errors seem legit, though it's because the thread-safety aspect of `CudaBufferWriter` isn't well defined. In practice, only `CudaBufferWriter::WriteAt` is protected by a lock, so it cannot race with itself, but perhaps it's allowed to race with other methods. This seems reasonable (of course, `WriteAt` shouldn't take a lock and then seek, but simply copy to the given position without locking).\n- the `FixedSizeBufferWriter` error is similar to the `CudaBufferWriter` error and commands the same analysis.\n  \n  All in all, there's not much actionable there. I'm waiting for comments but recommend closing."
        },
        {
            "created_at": "2018-10-23T17:52:37.141Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3599?focusedCommentId=16661053) by Wes McKinney (wesm):*\nI recall a number of such spurious / non-interesting reports from the last time I ran the tool. I think it's still useful to be able to run it, as there are some cases where it may find bugs"
        }
    ]
}