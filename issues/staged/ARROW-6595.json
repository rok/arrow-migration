{
    "issue": {
        "title": "[Java] Avro - Experiment with \"compiled\" consumer delegates for performance.",
        "body": "***Note**: This issue was originally created as [ARROW-6595](https://issues.apache.org/jira/browse/ARROW-6595). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nAll consumers that rely on delegates (e.g. struct, composite, list, union, ...) require\u00a0 megamorphic lookups which can't be inlined well by JIT.\u00a0\u00a0\r\n\r\n\u00a0\r\n\r\nWe should verify the performance different of a hand-coded consumer vs an existing delegate consumer\r\n\r\n\u00a0\r\n\r\ni.e. something like:\r\n\r\n\u00a0\r\n\r\nvoid consume(Decoder d) {\r\n\r\n\u00a0 ((IntConsumer)delegate).consume(d);\r\n\r\n}\r\n\r\n\u00a0\r\n\r\ncompared to the existing implementation.\u00a0 It is expected we will see a decent amount of performance improvement from this approach.\u00a0 If we do, we should add an option to converter to generate new custom classes on the fly, that mimic the hand-coded option.\r\n\r\n\u00a0",
        "created_at": "2019-09-18T05:55:52.000Z",
        "updated_at": "2022-07-12T14:04:20.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: task"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-07-12T14:04:20.000Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6595?focusedCommentId=17565535) by @toddfarmer:*\nThis issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned. Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon."
        }
    ]
}