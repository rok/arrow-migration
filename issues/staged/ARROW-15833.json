{
    "issue": {
        "title": "[C++] Support casting from duration to string/utf8",
        "body": "***Note**: This issue was originally created as [ARROW-15833](https://issues.apache.org/jira/browse/ARROW-15833). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCast from `duration[s]` to `utf8`\u00a0is not supported. This surfaced in R as an error when\u00a0trying to write to CSV.\r\n```r\n\r\narrow::write_csv_arrow(data.frame(time = as.difftime(1, units=\"secs\")), \"test.csv\")\r\n#> Error: NotImplemented: Unsupported cast from duration[s] to utf8 using function cast_string\r\n```\r\n\u00a0\r\n```r\n\r\nlibrary(arrow, warn.conflicts = FALSE)\r\n#> See arrow_info() for available features\r\nc <- Array$create(as.difftime(32, units = \"secs\"))\r\nc\r\n#> Array\r\n#> <duration[s]>\r\n#> [\r\n#>   32\r\n#> ]\r\n\r\nc$cast(string())\r\n#> Error: NotImplemented: Unsupported cast from duration[s] to utf8 using function cast_string\r\n#> /Users/dragos/Documents/arrow/cpp/src/arrow/compute/function.cc:231  DispatchBest(&inputs)\r\n```\r\nI guess the desired output would be to cast to \"current\" units even if we lose the metadata. Casting to `int64()` works (in a similar, lossy way).\r\n```r\n\r\nc$cast(int64())$cast(string())\r\n#> Array\r\n#> <string>\r\n#> [\r\n#>   \"32\"\r\n#> ]\r\n\r\nc$cast(duration(unit = \"ms\"))$cast(int64())$cast(string())\r\n#> Array\r\n#> <string>\r\n#> [\r\n#>   \"32000\"\r\n#> ]\r\n```",
        "created_at": "2022-03-03T09:56:14.000Z",
        "updated_at": "2022-03-09T22:36:42.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-03-09T22:04:53.000Z"
    },
    "comments": []
}