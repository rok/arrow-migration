{
    "issue": {
        "title": "[Python] Creating ParquetDataset creates partitioned ParquetFiles with mismatched Parquet schemas",
        "body": "***Note**: This issue was originally created as [ARROW-3210](https://issues.apache.org/jira/browse/ARROW-3210). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSTEPS TO REPRODUCE:\r\n\r\n1. Create a conda environment reflecting [environment.yml](environment.yml)\r\n\r\n2. Execute script [repro.py](repro.py), replacing various config variables to create a ParquetDataset on S3 given\u00a0[repro.csv](repro.csv)\r\n\r\n3. Create reference of ParquetDataset using script [repro_2.py](repro_2.py), again replacing various config variables.\r\n\r\n\u00a0\r\n\r\nEXPECTED:\r\n\r\nReference is created correctly.\r\n\r\nGOT:\r\n\r\nMismatched Arrow schemas in validate_schemas() method:\r\n\r\n\u00a0\r\n\r\n```python\r\n\r\n\\*\\*\\* ValueError: Schema in partition[Draught=1, Name=1, VesselType=0, x=1, Heading=1] s3://kio-tests-files/_tmp/test_parquet_dataset/Draught=10.3/Name=MSC RAFAELA/VesselType=Cargo/x=130.43158/Heading=270.0/e9e3cea5a5c24c4da587c263ec817c98.parquet was different. \r\nRecord_ID: int64\r\ny: double\r\nTRACKID: string\r\nMMSI: int64\r\nIMO: int64\r\nAgeMinutes: double\r\nSoG: double\r\nWidth: int64\r\nLength: int64\r\nCallsign: string\r\nDestination: string\r\nETA: int64\r\nStatus: string\r\nExtraInfo: string\r\nTIMESTAMP: int64\r\n__index_level_0__: int64\r\nmetadata\r\n--------\r\n{b'pandas': b'{\"index_columns\": [\"__index_level_0__\"], \"column_indexes\": [{\"na'\r\n b'me\": null, \"field_name\": null, \"pandas_type\": \"unicode\", \"numpy_'\r\n b'type\": \"object\", \"metadata\": \\{\"encoding\": \"UTF-8\"}}], \"columns\":'\r\n b' [{\"name\": \"Record_ID\", \"field_name\": \"Record_ID\", \"pandas_type\"'\r\n b': \"int64\", \"numpy_type\": \"int64\", \"metadata\": null}, {\"name\": \"y'\r\n b'\", \"field_name\": \"y\", \"pandas_type\": \"float64\", \"numpy_type\": \"f'\r\n b'loat64\", \"metadata\": null}, {\"name\": \"TRACKID\", \"field_name\": \"T'\r\n b'RACKID\", \"pandas_type\": \"unicode\", \"numpy_type\": \"object\", \"meta'\r\n b'data\": null}, {\"name\": \"MMSI\", \"field_name\": \"MMSI\", \"pandas_typ'\r\n b'e\": \"int64\", \"numpy_type\": \"int64\", \"metadata\": null}, {\"name\": '\r\n b'\"IMO\", \"field_name\": \"IMO\", \"pandas_type\": \"int64\", \"numpy_type\"'\r\n b': \"int64\", \"metadata\": null}, {\"name\": \"AgeMinutes\", \"field_name'\r\n b'\": \"AgeMinutes\", \"pandas_type\": \"float64\", \"numpy_type\": \"float6'\r\n b'4\", \"metadata\": null}, {\"name\": \"SoG\", \"field_name\": \"SoG\", \"pan'\r\n b'das_type\": \"float64\", \"numpy_type\": \"float64\", \"metadata\": null}'\r\n b', {\"name\": \"Width\", \"field_name\": \"Width\", \"pandas_type\": \"int64'\r\n b'\", \"numpy_type\": \"int64\", \"metadata\": null}, {\"name\": \"Length\", '\r\n b'\"field_name\": \"Length\", \"pandas_type\": \"int64\", \"numpy_type\": \"i'\r\n b'nt64\", \"metadata\": null}, {\"name\": \"Callsign\", \"field_name\": \"Ca'\r\n b'llsign\", \"pandas_type\": \"unicode\", \"numpy_type\": \"object\", \"meta'\r\n b'data\": null}, {\"name\": \"Destination\", \"field_name\": \"Destination'\r\n b'\", \"pandas_type\": \"unicode\", \"numpy_type\": \"object\", \"metadata\":'\r\n b' null}, {\"name\": \"ETA\", \"field_name\": \"ETA\", \"pandas_type\": \"int'\r\n b'64\", \"numpy_type\": \"int64\", \"metadata\": null}, {\"name\": \"Status\"'\r\n b', \"field_name\": \"Status\", \"pandas_type\": \"unicode\", \"numpy_type\"'\r\n b': \"object\", \"metadata\": null}, {\"name\": \"ExtraInfo\", \"field_name'\r\n b'\": \"ExtraInfo\", \"pandas_type\": \"unicode\", \"numpy_type\": \"object\"'\r\n b', \"metadata\": null}, {\"name\": \"TIMESTAMP\", \"field_name\": \"TIMEST'\r\n b'AMP\", \"pandas_type\": \"int64\", \"numpy_type\": \"int64\", \"metadata\":'\r\n b' null}, {\"name\": null, \"field_name\": \"__index_level_0__\", \"panda'\r\n b's_type\": \"int64\", \"numpy_type\": \"int64\", \"metadata\": null}], \"pa'\r\n b'ndas_version\": \"0.21.0\"}'}\r\n\r\nvs\r\n\r\nRecord_ID: int64\r\ny: double\r\nTRACKID: string\r\nMMSI: int64\r\nIMO: int64\r\nAgeMinutes: double\r\nSoG: double\r\nWidth: int64\r\nLength: int64\r\nCallsign: string\r\nDestination: string\r\nETA: int64\r\nStatus: string\r\nExtraInfo: null\r\nTIMESTAMP: int64\r\n__index_level_0__: int64\r\nmetadata\r\n--------\r\n{b'pandas': b'{\"index_columns\": [\"__index_level_0__\"], \"column_indexes\": [{\"na'\r\n b'me\": null, \"field_name\": null, \"pandas_type\": \"unicode\", \"numpy_'\r\n b'type\": \"object\", \"metadata\": \\{\"encoding\": \"UTF-8\"}}], \"columns\":'\r\n b' [{\"name\": \"Record_ID\", \"field_name\": \"Record_ID\", \"pandas_type\"'\r\n b': \"int64\", \"numpy_type\": \"int64\", \"metadata\": null}, {\"name\": \"y'\r\n b'\", \"field_name\": \"y\", \"pandas_type\": \"float64\", \"numpy_type\": \"f'\r\n b'loat64\", \"metadata\": null}, {\"name\": \"TRACKID\", \"field_name\": \"T'\r\n b'RACKID\", \"pandas_type\": \"unicode\", \"numpy_type\": \"object\", \"meta'\r\n b'data\": null}, {\"name\": \"MMSI\", \"field_name\": \"MMSI\", \"pandas_typ'\r\n b'e\": \"int64\", \"numpy_type\": \"int64\", \"metadata\": null}, {\"name\": '\r\n b'\"IMO\", \"field_name\": \"IMO\", \"pandas_type\": \"int64\", \"numpy_type\"'\r\n b': \"int64\", \"metadata\": null}, {\"name\": \"AgeMinutes\", \"field_name'\r\n b'\": \"AgeMinutes\", \"pandas_type\": \"float64\", \"numpy_type\": \"float6'\r\n b'4\", \"metadata\": null}, {\"name\": \"SoG\", \"field_name\": \"SoG\", \"pan'\r\n b'das_type\": \"float64\", \"numpy_type\": \"float64\", \"metadata\": null}'\r\n b', {\"name\": \"Width\", \"field_name\": \"Width\", \"pandas_type\": \"int64'\r\n b'\", \"numpy_type\": \"int64\", \"metadata\": null}, {\"name\": \"Length\", '\r\n b'\"field_name\": \"Length\", \"pandas_type\": \"int64\", \"numpy_type\": \"i'\r\n b'nt64\", \"metadata\": null}, {\"name\": \"Callsign\", \"field_name\": \"Ca'\r\n b'llsign\", \"pandas_type\": \"unicode\", \"numpy_type\": \"object\", \"meta'\r\n b'data\": null}, {\"name\": \"Destination\", \"field_name\": \"Destination'\r\n b'\", \"pandas_type\": \"unicode\", \"numpy_type\": \"object\", \"metadata\":'\r\n b' null}, {\"name\": \"ETA\", \"field_name\": \"ETA\", \"pandas_type\": \"int'\r\n b'64\", \"numpy_type\": \"int64\", \"metadata\": null}, {\"name\": \"Status\"'\r\n b', \"field_name\": \"Status\", \"pandas_type\": \"unicode\", \"numpy_type\"'\r\n b': \"object\", \"metadata\": null}, {\"name\": \"ExtraInfo\", \"field_name'\r\n b'\": \"ExtraInfo\", \"pandas_type\": \"empty\", \"numpy_type\": \"object\", '\r\n b'\"metadata\": null}, {\"name\": \"TIMESTAMP\", \"field_name\": \"TIMESTAM'\r\n b'P\", \"pandas_type\": \"int64\", \"numpy_type\": \"int64\", \"metadata\": n'\r\n b'ull}, {\"name\": null, \"field_name\": \"__index_level_0__\", \"pandas_'\r\n b'type\": \"int64\", \"numpy_type\": \"int64\", \"metadata\": null}], \"pand'\r\n b'as_version\": \"0.21.0\"}'}\r\n\r\n```\r\n\r\nThe issue is with column **ExtraInfo**, where **pandas_type** is **unicode** in a partitioned ParquetDatasetPiece referencing the 2nd Parquet file created, while the ParquetDataset schema referencing the 1st Parquet file created has **pandas_type** **empty** for that same column.",
        "created_at": "2018-09-10T19:47:54.000Z",
        "updated_at": "2019-05-08T11:35:54.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-05-08T11:35:54.000Z"
    },
    "comments": [
        {
            "created_at": "2019-03-14T14:00:19.275Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3210?focusedCommentId=16792674) by Wes McKinney (wesm):*\nProbably not going to be able to fix this for 0.13 unless you can submit a patch"
        },
        {
            "created_at": "2019-05-08T11:34:30.480Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3210?focusedCommentId=16835519) by Joris Van den Bossche (jorisvandenbossche):*\nThis has been fixed in ARROW-2891 (ensuring that the schema from the full table is used for each partition)"
        }
    ]
}