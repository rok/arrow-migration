{
    "issue": {
        "title": "[C++] Provide API for IPC roundtrip of RecordBatches not using the encapsulated message format",
        "body": "***Note**: This issue was originally created as [ARROW-6783](https://issues.apache.org/jira/browse/ARROW-6783). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nMuch of our IPC code presumes the use of the encapsulated message format. At some point we should ensure that we can address reconstruction of record batches when the \"RecordBatch\" Flatbuffer metadata was constructed more generally to reference buffers that may be located in different locations of a memory map or some other virtual address space",
        "created_at": "2019-10-03T16:59:46.000Z",
        "updated_at": "2020-04-09T23:19:04.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2020-04-09T22:19:35.537Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6783?focusedCommentId=17080032) by Antoine Pitrou (apitrou):*\nWhat is the usefulness of this compared to the C data interface? Passing memory pointers in Flatbuffers wouldn't let you handle buffer lifetime, at least (unless you pass a release callback somewhere on the side)."
        },
        {
            "created_at": "2020-04-09T23:01:06.001Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6783?focusedCommentId=17080059) by Wes McKinney (wesm):*\nI removed it from the 1.0.0 milestone. I agree that the C interface is a better solution for in-memory handoffs. \r\n\r\nOne meaningful deficiency with the C++ IPC implementation is the 0 frame of reference (relative to the start of the encapsulated message body). So it's only usable in the context of encapsulated messages. I'll rewrite the JIRA a bit to reflect this issue (which is non-urgent, but may be interesting to do something about someday)"
        }
    ]
}