{
    "issue": {
        "title": "[C++] Temporal cast from timestamp to date rounds instead of extracting date component",
        "body": "***Note**: This issue was originally created as [ARROW-10213](https://issues.apache.org/jira/browse/ARROW-10213). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI'd expect this code to give 1950-01-01 twice (i.e. a timestamp -> date cast extracts the date component, ignoring the time component):\r\n```python\n\r\nimport datetime\r\nimport pyarrow as pa\r\narr = pa.array([\r\n    datetime.datetime(1950, 1, 1, 0, 0, 0),\r\n    datetime.datetime(1950, 1, 1, 12, 0, 0),\r\n], type=pa.timestamp(\"ns\"))\r\nprint(arr)\r\nprint(arr.cast(pa.date32(), safe=False)) \n```\r\nHowever it gives 1950-01-02 in the second case:\r\n```\n\r\n[\r\n  1950-01-01 00:00:00.000000000,\r\n  1950-01-01 12:00:00.000000000\r\n]\r\n[\r\n  1950-01-01,\r\n  1950-01-02\r\n]\r\n```\r\nThe reason is that the temporal cast simply divides, and C truncates towards 0 (note: Python truncates towards -Infinity, so it would give the right answer in this case!), resulting in -7304 days instead of -7305.\r\n\r\nDepending on the intended semantics of a temporal cast, either it should be fixed to extract the date component, or the rounding behavior should be noted and a separate kernel should be implemented for extracting the date component.",
        "created_at": "2020-10-07T12:56:53.000Z",
        "updated_at": "2021-09-09T13:54:47.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-09-09T13:54:47.000Z"
    },
    "comments": [
        {
            "created_at": "2021-09-09T13:54:47.228Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10213?focusedCommentId=17412593) by David Li (lidavidm):*\nIn ARROW-13549 we're implementing a timestamp->datea cast which extracts the components instead of truncating. Closing this as a duplicate."
        }
    ]
}