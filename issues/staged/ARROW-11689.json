{
    "issue": {
        "title": "[Rust][DataFusion] Reduce copies in DataFusion LogicalPlan and Expr creation",
        "body": "***Note**: This issue was originally created as [ARROW-11689](https://issues.apache.org/jira/browse/ARROW-11689). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe theme of this overall epic to make the plan and expression rewriting phases of DataFusion more efficient by avoiding copies by leveraging the Rust type system\r\n\r\nBenefits:\r\n- More standard / idomatic Rust usage\n- faster / more efficient (I don't have numbers to back this up)\n  \n  Downsides:\n- These will be  backwards incompatible changes\n  \n  \n  # Background\n  \n  Many things in DataFusion  look like\n  \n  Input -~~tranformation~~->output\n  \n  And the input is not used again. In rust, you can model this by giving ownership to the transformation\n  \n  At a high level the idea is to avoid so much cloning in DataFustion\n  \n  The basic principle is if the function needs to `clone` one of its arguments, the caller should be given the choice of when to do that. Often, the caller can give up ownership without issue\n  \n  I envision at least the following the following items:\n  1. Optimizer passes that take `&LogicalPlan` and produce a new `LogicalPlan` even though most callsites do not need the original\n  2. Expr builder calls that take `&expr` and return a new `Expr`\n  3. An expression rewriter (TODO) while running down optimizer passes\n  \n  \n  I think this style takes advantage of Rust's ownership model and will let us avoid a lot o copying and allocations and avoid the need for something like slab allocators\n",
        "created_at": "2021-02-18T15:05:18.000Z",
        "updated_at": "2022-07-12T14:04:54.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Component: Rust - DataFusion",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-07-12T14:04:54.890Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11689?focusedCommentId=17565840) by @toddfarmer:*\nThis issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned. Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon."
        }
    ]
}