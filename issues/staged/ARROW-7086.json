{
    "issue": {
        "title": "[C++] Provide a wrapper for invoking factories to produce a Result",
        "body": "***Note**: This issue was originally created as [ARROW-7086](https://issues.apache.org/jira/browse/ARROW-7086). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThere is a proliferation of code like:\r\n\r\n```Java\n\r\nResult<int> SafeAdd(int a, int b) {\r\n  int out;\r\n  RETURN_NOT_OK(SafeAdd(a, b, &out));\r\n  return out;\r\n}\r\n```\r\n\r\nIdeally, this should be resolved by moving the implementation of SafeAdd into the Result returning overload then using `Result::Value` in the Status returning function. In cases where this is inconvenient, it'd be helpful to have an adapter for doing this more efficiently:\r\n\r\n```Java\n\r\nResult<int> SafeAdd(int a, int b) {\r\n  return RESULT_INVOKE(SafeAdd, a, b);\r\n}\r\n```\r\n\r\nThis will probably have to be a macro; otherwise the return type can be inferred but only when the function is not overloaded",
        "created_at": "2019-11-07T14:16:05.000Z",
        "updated_at": "2019-12-09T15:39:03.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-12-09T15:39:03.000Z"
    },
    "comments": [
        {
            "created_at": "2019-11-07T14:17:41.475Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7086?focusedCommentId=16969288) by Ben Kietzman (bkietz):*\n`[~emkornfield]`"
        },
        {
            "created_at": "2019-11-17T04:34:20.542Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7086?focusedCommentId=16975912) by Micah Kornfield (emkornfield@gmail.com):*\nThis seems like potentially the wrong direction to encourage implementations.\u00a0\r\n\r\n\u00a0\r\n\r\nI think we should provide the real implementation in the Result<> function and if necessary provide a macro to replace the output value function. e.g. the boiler plate if we want to eliminate it should be:\r\n\r\n\u00a0\r\n\r\n`Status SafeAdd(a, b, int* out) {``\u00a0 `\r\n\r\n`\u00a0 ASSIGN_OR_RETURN(auto out, SafeAdd(a, b));`\r\n\r\n`\u00a0 return Status::OK();\u00a0`\r\n\r\nIt seems like this could be accomplished with template magic but might be OK just as is (or with a template).\r\n\r\n\u00a0\r\n"
        }
    ]
}