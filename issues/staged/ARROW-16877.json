{
    "issue": {
        "title": "[C++] Valgrind failure (unintialized value) in arrow-compute-internals-test",
        "body": "***Note**: This issue was originally created as [ARROW-16877](https://issues.apache.org/jira/browse/ARROW-16877). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nLooks like GTest is trying to print an uninitalized unique_ptr.\r\n\r\nhttps://dev.azure.com/ursacomputing/crossbow/_build/results?buildId=27986&view=logs&j=0da5d1d9-276d-5173-c4c4-9d4d4ed14fdb&t=d9b15392-e4ce-5e4c-0c8c-b69645229181\r\n\r\n```\n\r\n27/68 Test #28: arrow-compute-internals-test .............***Failed   15.30 sec\r\n==11317== Memcheck, a memory error detector\r\n==11317== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==11317== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info\r\n==11317==    by 0x1C31BF: void testing::internal::PrintTupleTo<std::tuple<std::function<std::unique_ptr<arrow::compute::FunctionRegistry, std::default_delete<arrow::compute::FunctionRegistry> > ()>, std::function<int ()>, std::function<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, 2ul>(std::tuple<std::function<std::unique_ptr<arrow::compute::FunctionRegistry, std::default_delete<arrow::compute::FunctionRegistry> > ()>, std::function<int ()>, std::function<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::integral_constant<unsigned long, 2ul>, std::ostream*) (gtest-printers.h:641)\r\n==11317==    by 0x1C31F8: void testing::internal::PrintTupleTo<std::tuple<std::function<std::unique_ptr<arrow::compute::FunctionRegistry, std::default_delete<arrow::compute::FunctionRegistry> > ()>, std::function<int ()>, std::function<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, 3ul>(std::tuple<std::function<std::unique_ptr<arrow::compute::FunctionRegistry, std::default_delete<arrow::compute::FunctionRegistry> > ()>, std::function<int ()>, std::function<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::integral_constant<unsigned long, 3ul>, std::ostream*) (gtest-printers.h:641)\r\n==11317==    by 0x1C3231: void testing::internal::PrintTupleTo<std::tuple<std::function<std::unique_ptr<arrow::compute::FunctionRegistry, std::default_delete<arrow::compute::FunctionRegistry> > ()>, std::function<int ()>, std::function<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, 4ul>(std::tuple<std::function<std::unique_ptr<arrow::compute::FunctionRegistry, std::default_delete<arrow::compute::FunctionRegistry> > ()>, std::function<int ()>, std::function<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::integral_constant<unsigned long, 4ul>, std::ostream*) (gtest-printers.h:641)\r\n==11317==    by 0x1C3285: void testing::internal::PrintTo<std::function<std::unique_ptr<arrow::compute::FunctionRegistry, std::default_delete<arrow::compute::FunctionRegistry> > ()>, std::function<int ()>, std::function<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::tuple<std::function<std::unique_ptr<arrow::compute::FunctionRegistry, std::default_delete<arrow::compute::FunctionRegistry> > ()>, std::function<int ()>, std::function<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::ostream*) (gtest-printers.h:654)\r\n==11317==    by 0x1C32AA: Print (gtest-printers.h:691)\r\n==11317==    by 0x1C32AA: void testing::internal::UniversalPrint<std::tuple<std::function<std::unique_ptr<arrow::compute::FunctionRegistry, std::default_delete<arrow::compute::FunctionRegistry> > ()>, std::function<int ()>, std::function<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::tuple<std::function<std::unique_ptr<arrow::compute::FunctionRegistry, std::default_delete<arrow::compute::FunctionRegistry> > ()>, std::function<int ()>, std::function<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::ostream*) (gtest-printers.h:980)\r\n==11317==    by 0x1C32E7: Print (gtest-printers.h:865)\r\n==11317==    by 0x1C32E7: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > testing::PrintToString<std::tuple<std::function<std::unique_ptr<arrow::compute::FunctionRegistry, std::default_delete<arrow::compute::FunctionRegistry> > ()>, std::function<int ()>, std::function<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::tuple<std::function<std::unique_ptr<arrow::compute::FunctionRegistry, std::default_delete<arrow::compute::FunctionRegistry> > ()>, std::function<int ()>, std::function<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > ()>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (gtest-printers.h:1018)\r\n==11317==    by 0x1C4033: testing::internal::ParameterizedTestSuiteInfo<arrow::compute::TestRegistry>::RegisterTests() (gtest-param-util.h:590)\r\n==11317==    by 0x6438DBC: testing::internal::ParameterizedTestSuiteRegistry::RegisterTests() (gtest-param-util.h:726)\r\n==11317==    by 0x6445597: testing::internal::UnitTestImpl::RegisterParameterizedTests() (gtest.cc:2823)\r\n==11317==    by 0x64558D3: testing::internal::UnitTestImpl::PostFlagParsingInit() (gtest.cc:5639)\r\n==11317==    by 0x646C550: void testing::internal::InitGoogleTestImpl<char>(int*, char**) (gtest.cc:6646)\r\n==11317==    by 0x64584C4: testing::InitGoogleTest(int*, char**) (gtest.cc:6664)\r\n==11317==    by 0x4205956: main (gtest_main.cc:51)\r\n==11317== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:vfprintf\r\n   fun:vsnprintf\r\n   fun:snprintf\r\n   fun:_ZN7testing12_GLOBAL__N_126PrintByteSegmentInObjectToEPKhmmPSo\r\n   fun:_ZN7testing12_GLOBAL__N_124PrintBytesInObjectToImplEPKhmPSo\r\n   fun:_ZN7testing8internal20PrintBytesInObjectToEPKhmPSo\r\n   fun:PrintValue<std::function<std::unique_ptr<arrow::compute::FunctionRegistry>()> >\r\n   fun:_ZN7testing8internal17PrintWithFallbackISt8functionIFSt10unique_ptrIN5arrow7compute16FunctionRegistryESt14default_deleteIS6_EEvEEEEvRKT_PSo\r\n   fun:_ZN7testing8internal7PrintToISt8functionIFSt10unique_ptrIN5arrow7compute16FunctionRegistryESt14default_deleteIS6_EEvEEEEvRKT_PSo\r\n   fun:Print\r\n   fun:_ZN7testing8internal12PrintTupleToISt5tupleIJSt8functionIFSt10unique_ptrIN5arrow7compute16FunctionRegistryESt14default_deleteIS7_EEvEES3_IFivEES3_IFSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISL_EEvEESL_EELm1EEEvRKT_St17integral_constantImXT0_EEPSo\r\n   fun:_ZN7testing8internal12PrintTupleToISt5tupleIJSt8functionIFSt10unique_ptrIN5arrow7compute16FunctionRegistryESt14default_deleteIS7_EEvEES3_IFivEES3_IFSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISL_EEvEESL_EELm2EEEvRKT_St17integral_constantImXT0_EEPSo\r\n   fun:_ZN7testing8internal12PrintTupleToISt5tupleIJSt8functionIFSt10unique_ptrIN5arrow7compute16FunctionRegistryESt14default_deleteIS7_EEvEES3_IFivEES3_IFSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISL_EEvEESL_EELm3EEEvRKT_St17integral_constantImXT0_EEPSo\r\n   fun:_ZN7testing8internal12PrintTupleToISt5tupleIJSt8functionIFSt10unique_ptrIN5arrow7compute16FunctionRegistryESt14default_deleteIS7_EEvEES3_IFivEES3_IFSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISL_EEvEESL_EELm4EEEvRKT_St17integral_constantImXT0_EEPSo\r\n   fun:_ZN7testing8internal7PrintToIJSt8functionIFSt10unique_ptrIN5arrow7compute16FunctionRegistryESt14default_deleteIS6_EEvEES2_IFivEES2_IFSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISK_EEvEESK_EEEvRKSt5tupleIJDpT_EEPSo\r\n   fun:Print\r\n   fun:_ZN7testing8internal14UniversalPrintISt5tupleIJSt8functionIFSt10unique_ptrIN5arrow7compute16FunctionRegistryESt14default_deleteIS7_EEvEES3_IFivEES3_IFSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISL_EEvEESL_EEEEvRKT_PSo\r\n   fun:Print\r\n   fun:_ZN7testing13PrintToStringISt5tupleIJSt8functionIFSt10unique_ptrIN5arrow7compute16FunctionRegistryESt14default_deleteIS6_EEvEES2_IFivEES2_IFSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISK_EEvEESK_EEEESK_RKT_\r\n   fun:_ZN7testing8internal26ParameterizedTestSuiteInfoIN5arrow7compute12TestRegistryEE13RegisterTestsEv\r\n   fun:_ZN7testing8internal30ParameterizedTestSuiteRegistry13RegisterTestsEv\r\n   fun:_ZN7testing8internal12UnitTestImpl26RegisterParameterizedTestsEv\r\n   fun:_ZN7testing8internal12UnitTestImpl19PostFlagParsingInitEv\r\n   fun:_ZN7testing8internal18InitGoogleTestImplIcEEvPiPPT_\r\n   fun:_ZN7testing14InitGoogleTestEPiPPc\r\n   fun:main\r\n}\r\nRunning main() from /build/cpp/googletest_ep-prefix/src/googletest_ep/googletest/src/gtest_main.cc\r\n```",
        "created_at": "2022-06-22T12:19:41.000Z",
        "updated_at": "2022-06-27T19:12:04.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-06-27T19:11:57.000Z"
    },
    "comments": [
        {
            "created_at": "2022-06-22T12:22:32.741Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16877?focusedCommentId=17557417) by David Li (lidavidm):*\nFrom that stack, I think we just need to add a custom printer here so that GTest doesn't try to print the std::tuple itself: https://github.com/apache/arrow/blob/461b3b9ac61df41e74b09a7c75b207e633eee81a/cpp/src/arrow/compute/registry_test.cc#L99-L110"
        },
        {
            "created_at": "2022-06-27T11:35:58.005Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16877?focusedCommentId=17559130) by Ra\u00fal Cumplido (raulcd):*\n`[~lidavidm]` Do we have other custom printers I could take inspiration from? I have been trying to investigate that one but I don't have enough knowledge on how to add a custom printer for that one so GTest does not use the `UniversalPrint` for the `std::tuple` even though it seems it is expected from Gtest, if I understand this issue correctly: https://github.com/google/googletest/issues/2987"
        },
        {
            "created_at": "2022-06-27T11:53:06.353Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16877?focusedCommentId=17559136) by David Li (lidavidm):*\nThe printer issue was my best-guess, but it matches other similar issues we've seen before. For an example, see https://github.com/apache/arrow/blob/3cacc859fe818e5d807cc2b7d81b10693d75a9a7/cpp/src/parquet/arrow/arrow_statistics_test.cc#L51-L59 or https://github.com/apache/arrow/blob/91e3ac53e2e21736ce6291d73fc37da6fa21259d/cpp/src/arrow/ipc/feather_test.cc#L55-L59"
        },
        {
            "created_at": "2022-06-27T19:11:57.709Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16877?focusedCommentId=17559340) by David Li (lidavidm):*\nIssue resolved by pull request 13438\n<https://github.com/apache/arrow/pull/13438>"
        }
    ]
}