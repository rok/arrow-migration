{
    "issue": {
        "title": "[Python] pyarrow large integer conversion",
        "body": "***Note**: This issue was originally created as [ARROW-17393](https://issues.apache.org/jira/browse/ARROW-17393). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI have a json document that looks like this.\u00a0\r\n\r\n{\"number\": 123451234512345123451234512}\r\n\r\nI then run the below code.\u00a0\r\n\r\n>>> from pyarrow.json import read_json\r\n>>> pyarrow_table = read_json('pyarrow_test.json')\r\n>>> pyarrow_table['number'][0].as_py().as_integer_ratio()\r\n(123451234512345125900779520, 1)\r\n\r\nnotice the float that I get looks like it has been rounded or modified in some way.\r\n\r\n\u00a0\r\n\r\nAm I reading this file incorrectly or is there an issue with the conversion of this number?",
        "created_at": "2022-08-12T01:35:03.000Z",
        "updated_at": "2022-08-16T08:55:15.000Z",
        "labels": [
            "Migrated from Jira",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-08-16T08:55:15.104Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17393?focusedCommentId=17580174) by Joris Van den Bossche (jorisvandenbossche):*\nThe integer number you have here is too large to fit in the int64 range:\r\n\r\n```python\n\r\n>>> np.iinfo(\"int64\").max  # same as 2**(64-1)\r\n9223372036854775807\r\n```\r\n\r\nSo that means that this cannot be parsed in a pyarrow column of type int64. Explicitly asking for this would also give an error:\r\n\r\n```python\n\r\n>>> pa.array([123451234512345123451234512], type=\"int64\")\r\n...\r\nOverflowError: Python int too large to convert to C long\r\n```\r\n\r\nAs a result, pyarrow falls back to parsing the number as float. But also here there are inherent limitations for what a float64 can represent, so it is expected that you cannot store such a number faithfully."
        }
    ]
}