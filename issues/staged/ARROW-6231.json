{
    "issue": {
        "title": "[C++][Python] Consider assigning default column names when reading CSV file and header_rows=0",
        "body": "***Note**: This issue was originally created as [ARROW-6231](https://issues.apache.org/jira/browse/ARROW-6231). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThis is a slight usability rough edge. Assigning default names (like \"f0, f1, ...\") would probably be better since then at least you can see how many columns there are and what is in them. \r\n\r\n```Java\n\r\nIn [10]: parse_options = csv.ParseOptions(delimiter='|', header_rows=0)                                                                                         \r\n\r\nIn [11]: %time table = csv.read_csv('Performance_2016Q4.txt', parse_options=parse_options)                                                                      \r\n---------------------------------------------------------------------------\r\nArrowInvalid                              Traceback (most recent call last)\r\n<timed exec> in <module>\r\n\r\n~/miniconda/envs/pyarrow-14-1/lib/python3.7/site-packages/pyarrow/_csv.pyx in pyarrow._csv.read_csv()\r\n\r\n~/miniconda/envs/pyarrow-14-1/lib/python3.7/site-packages/pyarrow/error.pxi in pyarrow.lib.check_status()\r\n\r\nArrowInvalid: header_rows == 0 needs explicit column names\r\n```\r\n\r\nIn pandas integers are used, so some kind of default string would have to be defined\r\n\r\n```Java\n\r\nIn [18]: df = pd.read_csv('Performance_2016Q4.txt', sep='|', header=None, low_memory=False)                                                                     \r\n\r\nIn [19]: df.columns                                                                                                                                             \r\nOut[19]: \r\nInt64Index([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,\r\n            17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30],\r\n           dtype='int64')\r\n```",
        "created_at": "2019-08-14T03:02:40.000Z",
        "updated_at": "2019-09-02T15:01:18.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-08-30T16:33:59.000Z"
    },
    "comments": [
        {
            "created_at": "2019-08-14T12:01:35.959Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6231?focusedCommentId=16907205) by Joris Van den Bossche (jorisvandenbossche):*\nThere have been some changes in the mean time related to column names / skipping rows etc. Eg the `header_rows` option no longer exists, and there is a `column_names` to manually assign names.\r\n\r\n```Java\n\r\nIn [21]: import pyarrow.csv as csv                                                                                                                                                                                 \r\n\r\nIn [22]: import io                                                                                                                                                                                                 \r\n\r\nIn [23]: s = b\"\"\"1,2 \r\n    ...: 3,4\"\"\"                                                                                                                                                                                                    \r\n\r\nIn [24]: csv.read_csv(io.BytesIO(s)).to_pandas()                                                                                                                                                                   \r\nOut[24]: \r\n   1  2\r\n0  3  4\r\n\r\nIn [25]: read_options = csv.ReadOptions(column_names=['a', 'b'])                                                                                                                                                   \r\n\r\nIn [26]: csv.read_csv(io.BytesIO(s), read_options=read_options).to_pandas()                                                                                                                                        \r\nOut[26]: \r\n   a  b\r\n0  1  2\r\n1  3  4\r\n```\r\n\r\nBut that interface currently doesn't allow to indicate that there is no header in the data, without actually passing names manually (so we might need another keyword for that ..)"
        },
        {
            "created_at": "2019-08-19T14:39:13.545Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6231?focusedCommentId=16910445) by Antoine Pitrou (apitrou):*\n`[~npr]` what's your take?"
        },
        {
            "created_at": "2019-08-24T19:57:32.412Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6231?focusedCommentId=16915080) by Wes McKinney (wesm):*\nThis popped up on StackOverflow\r\n\r\nhttps://stackoverflow.com/questions/57636214/how-to-use-pyarrows-read-csv-to-read-a-csv-with-cusomer-delimiter-and-no-head/57641130#57641130"
        },
        {
            "created_at": "2019-08-30T16:33:59.547Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6231?focusedCommentId=16919705) by Francois Saint-Jacques (fsaintjacques):*\nIssue resolved by pull request 5206\n<https://github.com/apache/arrow/pull/5206>"
        }
    ]
}