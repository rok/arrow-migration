{
    "issue": {
        "title": "[C++/Python]\u00a0pyarrow build incorrectly detects x86 as system process during cross-cimpile",
        "body": "***Note**: This issue was originally created as [ARROW-15445](https://issues.apache.org/jira/browse/ARROW-15445). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen cross-compiling `pyarrow` for aarch64 or ppc64le we run into the following issue:\r\n```java\n\r\n-- System processor: x86_64\r\n-- Performing Test CXX_SUPPORTS_SSE4_2\r\n-- Performing Test CXX_SUPPORTS_SSE4_2 - Failed\r\n-- Performing Test CXX_SUPPORTS_AVX2\r\n-- Performing Test CXX_SUPPORTS_AVX2 - Failed\r\n-- Performing Test CXX_SUPPORTS_AVX512\r\n-- Performing Test CXX_SUPPORTS_AVX512 - Failed\r\n-- Arrow build warning level: PRODUCTION\r\nCMake Error at cmake_modules/SetupCxxFlags.cmake:456 (message):\r\n  SSE4.2 required but compiler doesn't support it.\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:121 (include)\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\n \n```\r\nThe error is valid as we are building for a target system that doesn't support SSE at all.",
        "created_at": "2022-01-25T11:23:13.000Z",
        "updated_at": "2022-01-25T12:13:39.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-01-25T12:13:18.419Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15445?focusedCommentId=17481775) by Antoine Pitrou (apitrou):*\nWell, apparently CMAKE_SYSTEM_PROCESSOR is \"x86_64\". Are you sure you are cross-compiling correctly? According to the CMake docs:\r\n> When cross-compiling, a CMAKE_TOOLCHAIN_FILE should set the CMAKE_SYSTEM_PROCESSOR variable to match target architecture that it specifies (via CMAKE_<LANG>{_}COMPILER and perhaps CMAKE{_}<LANG>_COMPILER_TARGET).\r\n(in https://cmake.org/cmake/help/latest/variable/CMAKE_SYSTEM_PROCESSOR.html)"
        }
    ]
}