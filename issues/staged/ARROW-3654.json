{
    "issue": {
        "title": "[Python] Column with CategoricalIndex fails to be read back",
        "body": "***Note**: This issue was originally created as [ARROW-3654](https://issues.apache.org/jira/browse/ARROW-3654). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen a column with a \\{Categoricalndex} is written the data can never be read back.\r\n\r\n\u00a0```python\n\r\ndf = pd.DataFrame([['a', 'b'], ['c', 'd']], columns=['c1', 'c2'])\r\ndf['c1'] = df['c1'].astype('category')\r\ndf = df.set_index(['c1'])\r\n\r\ntable = pa.Table.from_pandas(df)\r\npq.write_table(table, 'test.parquet')\r\n\r\npq.read_pandas('test.parquet').to_pandas()\r\n```\r\n\r\nResults in\r\n\r\n```Java\n\r\nKeyError                                  Traceback (most recent call last)\r\n~/venv/mpptool/lib/python3.7/site-packages/pyarrow/pandas_compat.py in _pandas_type_to_numpy_type(pandas_type)\r\n    676     try:\r\n--> 677         return _pandas_logical_type_map[pandas_type]\r\n    678     except KeyError:\r\n\r\nKeyError: 'categorical'\r\n```\r\n\r\nThe schema looks good:\r\n```Java\n\r\ncolumn_indexes\": [{\"name\": \"c1\", \"field_name\": \"c1\", \"pandas_type\": \"categorical\", \"numpy_type\": \"int8\", \"metadata\": {\"num_categories\": 2, \"ordered\": false}}]\r\n```",
        "created_at": "2018-10-30T10:34:18.000Z",
        "updated_at": "2022-08-27T14:41:59.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-06-27T06:39:45.000Z"
    },
    "comments": [
        {
            "created_at": "2019-05-02T12:52:07.785Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3654?focusedCommentId=16831599) by Joris Van den Bossche (jorisvandenbossche):*\n`[~aberres]` I cannot reproduce this with pyarrow 0.13 and pandas 0.24.2:\r\n\r\n\u00a0\r\n```java\n\r\nIn [4]: df = pd.DataFrame([['a', 'b'], ['c', 'd']], columns=['c1', 'c2']) \r\n   ...: df['c1'] = df['c1'].astype('category') \r\n   ...: df = df.set_index(['c1']) \r\n   ...:  \r\n   ...: table = pa.Table.from_pandas(df) \r\n   ...: pq.write_table(table, 'test.parquet') \r\n   ...:  \r\n   ...: pq.read_pandas('test.parquet').to_pandas()                                                                                                            \r\nOut[4]: \r\n   c2\r\nc1   \r\na   b\r\nc   d\r\n\r\nIn [5]: pa.__version__                                                                                                                                        \r\nOut[5]: '0.13.0'\r\n\r\nIn [6]: pd.__version__                                                                                                                                        \r\nOut[6]: '0.25.0.dev0+452.g331516126'\r\n```\r\n\u00a0\r\n\r\nCan you still reproduce this? Or what version were you using?"
        },
        {
            "created_at": "2019-05-03T13:45:15.571Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3654?focusedCommentId=16832511) by Armin Berres (aberres):*\nConfirmed, work for me as well now."
        },
        {
            "created_at": "2022-08-27T14:41:59.743Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3654?focusedCommentId=17585976) by @toddfarmer:*\nTransitioning issue from Resolved to Closed to based on resolution field value."
        }
    ]
}