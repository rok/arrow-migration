{
    "issue": {
        "title": "[C++] Optimize IPC stream reading",
        "body": "***Note**: This issue was originally created as [ARROW-9441](https://issues.apache.org/jira/browse/ARROW-9441). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nBased on perf reports, more time is spent manipulating C++ data structures than reconstructing record batches from IPC messages, which strikes me as not what we want\r\n\r\nhere is from a perf report based on the Python code\r\n\r\n```Java\n\r\nfor i in range(100):\r\n    pa.ipc.open_stream('nyctaxi.arrow').read_all()\r\n```\r\n\r\n```Java\n\r\n-   50.40%     0.06%  python           libarrow.so.100.0.0                  [.] arrow::RecordBatchReader::ReadAll\r\n   - 50.34% arrow::RecordBatchReader::ReadAll     \r\n      - 25.86% arrow::Table::FromRecordBatches    \r\n         - 18.41% arrow::SimpleRecordBatch::column\r\n            - 16.00% arrow::MakeArray\r\n               - 10.49% arrow::VisitTypeInline<arrow::internal::ArrayDataWrapper>  \r\n                    7.71% arrow::PrimitiveArray::SetData           \r\n                    1.87% arrow::StringArray::StringArray          \r\n           1.54% __pthread_mutex_lock                              \r\n           0.88% __pthread_mutex_unlock                            \r\n           0.67% std::_Hash_bytes                                  \r\n           0.60% arrow::ChunkedArray::ChunkedArray                 \r\n      - 22.30% arrow::RecordBatchReader::ReadAll                   \r\n         - 22.12% arrow::ipc::RecordBatchStreamReaderImpl::ReadNext\r\n            - 15.91% arrow::ipc::ReadRecordBatchInternal\r\n               - 15.15% arrow::ipc::LoadRecordBatch\r\n                  - 14.45% arrow::ipc::ArrayLoader::Load\r\n                     + 13.15% arrow::VisitTypeInline<arrow::ipc::ArrayLoader>\r\n            + 5.53% arrow::ipc::InputStreamMessageReader::ReadNextMessage \r\n        1.84% arrow::SimpleRecordBatch::~SimpleRecordBatch\r\n```\r\n\r\nPerhaps `ChunkedArray` internally should be changed to contain a vector of `ArrayData` instead of boxed Arrays. ",
        "created_at": "2020-07-13T18:21:56.000Z",
        "updated_at": "2022-07-12T14:04:49.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2020-07-27T08:37:45.293Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9441?focusedCommentId=17165537) by Ji Liu (tianchen92):*\nI recently worked with a project using Arrow cpp code, i am interested in this issue, could I take this one? :)"
        },
        {
            "created_at": "2020-07-28T21:51:44.203Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9441?focusedCommentId=17166709) by Wes McKinney (wesm):*\nYou can work on it yes, but I'm concerned the changes involved may be quite invasive, so let me know what you find out when you look into it"
        },
        {
            "created_at": "2021-01-12T14:44:54.971Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9441?focusedCommentId=17263381) by Krisztian Szucs (kszucs):*\nPostponing it to 4.0"
        },
        {
            "created_at": "2022-07-12T14:04:49.215Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9441?focusedCommentId=17565768) by @toddfarmer:*\nThis issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned. Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon."
        }
    ]
}