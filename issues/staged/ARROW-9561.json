{
    "issue": {
        "title": "[C++] CSV parse fractional seconds in timestamps",
        "body": "***Note**: This issue was originally created as [ARROW-9561](https://issues.apache.org/jira/browse/ARROW-9561). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIt would be great to be able to parse fractional seconds from timestamps in CSV files, e.g.\u00a02017-06-26 16:58:20.651901\r\n\r\nstrptime does not have a format specifier for fractional seconds, and the built-in ISO8601 parser does not parse fractional seconds.",
        "created_at": "2020-07-26T22:25:30.000Z",
        "updated_at": "2020-08-27T12:39:30.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-08-27T12:39:30.000Z"
    },
    "comments": [
        {
            "created_at": "2020-08-26T17:21:16.110Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9561?focusedCommentId=17185365) by Antoine Pitrou (apitrou):*\nIt works, but you have to pass the right type explicitly, e.g.:\r\n```python\n\r\n>>> import pyarrow as pa\r\n>>> from pyarrow import csv\r\n>>> s = b\"\"\"t\\n2018-11-13T17:11:10.777000\"\"\"\r\n>>> convert_options = csv.ConvertOptions(column_types={'t': pa.timestamp('us')})\r\n>>> table = csv.read_csv(pa.py_buffer(s), convert_options=convert_options)\r\n>>> table\r\npyarrow.Table\r\nt: timestamp[us]\r\n>>> table.to_pydict()\r\n{'t': [datetime.datetime(2018, 11, 13, 17, 11, 10, 777000)]}\r\n```\r\n"
        },
        {
            "created_at": "2020-08-27T11:10:54.240Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9561?focusedCommentId=17185784) by Frank Smith (frank.smith):*\nOh, nice, that's great news. I see this functionality was added to the C++ source code, but it doesn't seem to be available in the python wheel I'm using.\r\n```java\n\r\n// code placeholder\r\n(venv) frank@frank-devel:~/arrow/data$ python3\r\nPython 3.6.9 (default, Jul 17 2020, 12:50:27)\r\n[GCC 8.4.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import pyarrow as pa\r\n>>> from pyarrow import csv\r\n>>> s = b\"\"\"t\\n2018-11-13T17:11:10.777000\"\"\"\r\n>>> convert_options = csv.ConvertOptions(column_types={'t': pa.timestamp('us')})\r\n>>> table = csv.read_csv(pa.py_buffer(s), convert_options=convert_options)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"pyarrow/_csv.pyx\", line 714, in pyarrow._csv.read_csv\r\n  File \"pyarrow/error.pxi\", line 122, in pyarrow.lib.pyarrow_internal_check_status\r\n  File \"pyarrow/error.pxi\", line 84, in pyarrow.lib.check_status\r\npyarrow.lib.ArrowInvalid: In CSV column #0: CSV conversion error to timestamp[us]: invalid value '2018-11-13T17:11:10.777000'\r\n>>>\r\n\r\n```\r\nThese are the wheels I'm using:\r\n\r\n\u00a0\r\n```java\n\r\n(venv) frank@frank-devel:~/arrow/data$ pip3 install pyarrow\r\nCollecting pyarrow\r\n  Using cached https://files.pythonhosted.org/packages/3a/9b/887d1d03d3d43706dee3a71cdad9f9bbb8fe74fc93d8db5d663f5bf34e48/pyarrow-1.0.1-cp36-cp36m-manylinux1_x86_64.whl\r\nCollecting numpy>=1.14 (from pyarrow)\r\n  Using cached https://files.pythonhosted.org/packages/22/e7/4b2bdddb99f5f631d8c1de259897c2b7d65dcfcc1e0a6fd17a7f62923500/numpy-1.19.1-cp36-cp36m-manylinux1_x86_64.whl\r\nInstalling collected packages: numpy, pyarrow\r\nSuccessfully installed numpy-1.19.1 pyarrow-1.0.1\r\n\r\n```\r\nAlso, these are the arrow libraries included in the wheel. I see the .100 suffix in the names... does that mean that the wheel is using the (older) 1.0.0 versions of the libs?\r\n```java\n\r\n(venv) frank@frank-devel:~/arrow/data$ find venv/ -name '*.so.*'\r\nvenv/lib/python3.6/site-packages/pyarrow/libplasma.so.100\r\nvenv/lib/python3.6/site-packages/pyarrow/libarrow_flight.so.100\r\nvenv/lib/python3.6/site-packages/pyarrow/libarrow_python.so.100\r\nvenv/lib/python3.6/site-packages/pyarrow/libarrow_python_flight.so.100\r\nvenv/lib/python3.6/site-packages/pyarrow/libarrow_boost_regex.so.1.73.0\r\nvenv/lib/python3.6/site-packages/pyarrow/libarrow.so.100\r\nvenv/lib/python3.6/site-packages/pyarrow/libparquet.so.100\r\nvenv/lib/python3.6/site-packages/pyarrow/libarrow_dataset.so.100\r\n```\r\n\u00a0\r\n\r\n\u00a0"
        },
        {
            "created_at": "2020-08-27T12:17:28.782Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9561?focusedCommentId=17185816) by Joris Van den Bossche (jorisvandenbossche):*\nIt seems parsing subseconds was only added in ARROW-9107 / https://github.com/apache/arrow/pull/7793, which was merged after 1.0. So it's not something wrong with your wheel, but this will only be available in the next release."
        },
        {
            "created_at": "2020-08-27T12:21:35.647Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9561?focusedCommentId=17185819) by Frank Smith (frank.smith):*\nThanks, that's what I figured.\u00a0 Apache Arrow is Awesome."
        }
    ]
}