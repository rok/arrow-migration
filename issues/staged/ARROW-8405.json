{
    "issue": {
        "title": "[Gandiva][UDF] Support complex datatype for UDF return type.",
        "body": "***Note**: This issue was originally created as [ARROW-8405](https://issues.apache.org/jira/browse/ARROW-8405). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIs it possible to return a complex datatype for a UDF, like vector or event dictionary? Checked\u00a0<https://github.com/apache/arrow/blob/master/cpp/src/gandiva/precompiled/types.h>\u00a0and found the types used there are all basic datatypes.\u00a0",
        "created_at": "2020-04-12T09:03:54.000Z",
        "updated_at": "2020-07-16T10:08:21.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++ - Gandiva",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2020-04-13T07:31:58.897Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8405?focusedCommentId=17082131) by Pindikura Ravindra (pravindra):*\ngandiva doesn't support complex types yet.\u00a0\r\n\r\n\u00a0\r\n1. For output, the following will need to be fixed\n    \\*\\* [Allocating](https://github.com/apache/arrow/blob/master/cpp/src/gandiva/projector.cc#L172) output vector for project\n    \\*\\* populating output vector in [codegen](https://github.com/apache/arrow/blob/master/cpp/src/gandiva/llvm_generator.cc#L368)\n1. For input, the following will need to be fixed\n    \\*\\* loading entry from input vector in codegen. This is currently implemented as a [visitor](https://github.com/apache/arrow/blob/master/cpp/src/gandiva/expr_decomposer.cc#L42)\u00a0but the visitor only supports primitive types.\n   \n   \u00a0\n   \n   It will be easier to add support for primitive fields inside complex types to begin with (eg. integer field inside a struct type)."
        },
        {
            "created_at": "2020-04-18T03:12:25.251Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8405?focusedCommentId=17086245) by ZMZ91 (ZMZ91):*\nThanks `[~pravindra]`."
        },
        {
            "created_at": "2020-07-16T10:08:21.856Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8405?focusedCommentId=17159086) by ZMZ91 (ZMZ91):*\nHi `[~pravindra]`, besides the codes you pointed out, I see almost all gandiva udfs are implemented inside extern C. So if I add a function returning a map<string, string>, it would be incompatible in extern C. Is it doable to write a udf outside extern C?"
        }
    ]
}