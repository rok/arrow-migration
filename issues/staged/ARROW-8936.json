{
    "issue": {
        "title": "[C++] Parallelize execution of arrow::compute::ScalarFunction",
        "body": "***Note**: This issue was originally created as [ARROW-8936](https://issues.apache.org/jira/browse/ARROW-8936). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n",
        "created_at": "2020-05-25T14:46:41.000Z",
        "updated_at": "2022-04-08T13:13:29.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-05-12T10:05:16.381Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8936?focusedCommentId=17343158) by Antoine Pitrou (apitrou):*\nIs it useful to keep this open? Parallelization would probably happen at a higher level, such as the execution engine. `[~bkietz]`"
        },
        {
            "created_at": "2021-06-21T23:45:25.437Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8936?focusedCommentId=17366902) by Wes McKinney (wesm):*\nYes, I think it's still useful. Multiple query engine operators will need to evaluate expressions, so if they want to e.g. break a large chunk (32K -> 1M rows or more) into smaller pieces (1K -> 32K rows) to parallelize execution, it would be useful to centralize this implementation. This would need to compose with the research work happening on work stealing that `[~westonpace]` has been working on"
        }
    ]
}