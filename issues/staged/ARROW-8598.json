{
    "issue": {
        "title": "[Rust] simd_compare_op creates buffer of incorrect length when item count is not a multiple of T::lanes()",
        "body": "***Note**: This issue was originally created as [ARROW-8598](https://issues.apache.org/jira/browse/ARROW-8598). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nthe\u00a0simd_compare_op function defined here\u00a0<https://github.com/apache/arrow/blob/master/rust/arrow/src/compute/kernels/comparison.rs#L229>\r\n\r\nappears to only work correctly when item count is a multiple of\u00a0T::lanes().\r\n\r\nOtherwise the resulting boolean array is created with a buffer of incorrect length and subsequent binary operations such as\u00a0compute::and return an error.\r\n\r\nThe\u00a0no_simd_compare_op function defined in the same module does not appear to have this problem.\r\n\r\nThis bug can be reproduced with the following code:\r\n\r\n\u00a0\r\n```java\n\r\nfn\u00a0main()\u00a0{\r\n\u00a0\u00a0\u00a0\u00a0let\u00a0lanes\u00a0=\u00a0Int8Type::lanes();\r\n\u00a0\u00a0\u00a0\u00a0println(\"i8\u00a0lanes:\u00a0{}\",\u00a0lanes);\u00a0//\u00a064\r\n\u00a0\u00a0\u00a0\u00a0//\u00a0let\u00a0item_count\u00a0=\u00a0128;\u00a0//\u00a0this\u00a0works\u00a0because\u00a0item_count\u00a0divides\u00a0by\u00a064\u00a0(lanes)\u00a0without\u00a0remainder\r\n\u00a0\u00a0\u00a0\u00a0let\u00a0item_count\u00a0=\u00a0130;\u00a0//\u00a0this\u00a0fails\u00a0because\u00a0item_count\u00a0divides\u00a0by\u00a064\u00a0(lanes)\u00a0with\u00a0remainder\r\n\u00a0\u00a0\u00a0\u00a0//\u00a0item_count\u00a0=\u00a0130\u00a0should\u00a0return\u00a0error:\r\n\u00a0\u00a0\u00a0\u00a0//\u00a0ComputeError(\"Buffers\u00a0must\u00a0be\u00a0the\u00a0same\u00a0size\u00a0to\u00a0apply\u00a0Bitwise\u00a0AND.\")\u00a0\u00a0\u00a0\u00a0\u00a0\r\n\u00a0\u00a0\u00a0\u00a0//\u00a0create\u00a0boolean\u00a0array\r\n\u00a0\u00a0\u00a0\u00a0let\u00a0mut\u00a0select_mask:\u00a0BooleanArray\u00a0=\u00a0vec![true;\u00a0item_count].into();\r\n\u00a0\u00a0\u00a0\u00a0//\u00a0create\u00a0arrays\u00a0with\u00a0i8\u00a0values\r\n\u00a0\u00a0\u00a0\u00a0let\u00a0value_array:\u00a0PrimitiveArray<Int8Type>\u00a0=\u00a0vec![1;\u00a0item_count].into();\r\n\u00a0\u00a0\u00a0\u00a0let\u00a0filter_array:\u00a0PrimitiveArray<Int8Type>\u00a0=\u00a0vec![2;\u00a0item_count].into();\r\n\u00a0\u00a0\u00a0\u00a0//\u00a0compare\u00a0i8\u00a0arrays\u00a0and\u00a0produce\u00a0a\u00a0boolean\u00a0array\r\n\u00a0\u00a0\u00a0\u00a0let\u00a0result_mask\u00a0=\u00a0compute::gt_eq(&value_array,\u00a0&filter_array).unwrap();\r\n\u00a0\u00a0\u00a0\u00a0//\u00a0compare\u00a0boolean\u00a0arrays\r\n\u00a0\u00a0\u00a0\u00a0\u00a0select_mask\u00a0=\u00a0compute::and(&select_mask,\u00a0&result_mask).unwrap();\r\n\u00a0\u00a0\u00a0\u00a0//\u00a0print\u00a0result,\u00a0should\u00a0be\u00a0all\u00a0false\r\n\u00a0\u00a0\u00a0\u00a0println!(\"select\u00a0mask:\u00a0{:?}\",\u00a0select_mask);\r\n}\r\n```\r\n\u00a0\r\n\r\n\u00a0",
        "created_at": "2020-04-26T21:42:08.000Z",
        "updated_at": "2020-04-28T15:44:33.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-04-28T15:44:33.000Z"
    },
    "comments": [
        {
            "created_at": "2020-04-28T15:44:33.240Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8598?focusedCommentId=17094620) by Paddy Horan (paddyhoran):*\nIssue resolved by pull request 7043\n<https://github.com/apache/arrow/pull/7043>"
        }
    ]
}