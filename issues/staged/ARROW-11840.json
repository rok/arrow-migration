{
    "issue": {
        "title": "[C++][Compute] Support merging GroupByState for multithreaded aggregation",
        "body": "***Note**: This issue was originally created as [ARROW-11840](https://issues.apache.org/jira/browse/ARROW-11840). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nARROW-11591 adds support for grouped aggregation, but defers merging (which is non-trivial and unnecessary for single threaded aggregation). Eventually it will be required to support merging, however: when aggregating in a multithreaded dataset scan, each thread's results will need to be combined after the scan is completed.\r\n\r\nNote that currently `ScalarAggExecutor::Consume` assumes that merging aggregations is not costly (true for small aggregation state as with \"mean\", but false for \"group_by\"), and invokes `ScalarAggregateKernel::merge` for each input batch. ARROW-11591 introduces \"group_by\" as a special case which will not be merged for each input batch but Ideally this assumption would not be made for any kernel. When removing it, be sure that merging other aggregates continues to be tested.",
        "created_at": "2021-03-02T16:50:05.000Z",
        "updated_at": "2021-07-26T14:38:33.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-07-26T14:38:33.000Z"
    },
    "comments": []
}