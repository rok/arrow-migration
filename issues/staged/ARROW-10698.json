{
    "issue": {
        "title": "[C++] Optimize union equality comparison",
        "body": "***Note**: This issue was originally created as [ARROW-10698](https://issues.apache.org/jira/browse/ARROW-10698). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently, union array comparison in `ArrayRangeEqual` computes child equality over single union elements. This adds a large per-element comparison overhead. At least for sparse unions, it may be beneficial to detect contiguous runs of child ids and run child comparisons on entire runs.",
        "created_at": "2020-11-23T13:20:53.000Z",
        "updated_at": "2021-11-23T18:40:11.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": []
}