{
    "issue": {
        "title": "[C++] Enable Arrow to share an application's jemalloc instance",
        "body": "***Note**: This issue was originally created as [ARROW-16717](https://issues.apache.org/jira/browse/ARROW-16717). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIs there any good way for an application that uses Arrow to tell Arrow to share its own jemalloc instance?\r\n\r\nNormally when Arrow uses jemalloc, it creates its own instance of it. The only method that I think would work to get Arrow to use the same jemalloc instance as the application would be to do something hacky like this:\r\n\r\n \\* Patch `cpp/src/arrow/memory_pool.cc` to use the application's jemalloc header\r\n \\* Configure the application's jemalloc instance to use the same configuration that Arrow uses, as shown in `je_arrow_malloc_conf`\r\n \\* Patch `ThirdpartyToolchain.cmake` to use the application's jemalloc instance\r\n\r\nIs there any non-hacky way to achieve this? If not, would it be possible to add a feature to Arrow to enable the user to tell it to use a specific jemalloc instance at runtime?\r\n\r\nThe benefit of this would be that a unified jemalloc instance could (at least hypothetically) allocate memory more efficiently than two separate ones running on the same machine.",
        "created_at": "2022-06-02T00:17:43.000Z",
        "updated_at": "2022-06-16T09:04:43.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-06-16T09:04:22.000Z"
    },
    "comments": [
        {
            "created_at": "2022-06-02T00:55:33.953Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16717?focusedCommentId=17545212) by Kouhei Sutou (kou):*\nDoes \"an application's jemalloc instance\" mean that system jemalloc?"
        },
        {
            "created_at": "2022-06-02T02:00:43.967Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16717?focusedCommentId=17545233) by Ian Cook (icook):*\nIn my case, yes it is the system jemalloc. I apologize, I am not very knowledgeable about memory allocators"
        },
        {
            "created_at": "2022-06-02T02:17:58.450Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16717?focusedCommentId=17545236) by Kouhei Sutou (kou):*\nNo problem. :-)\r\nI was willing to implement the feature for Conan package.\r\nI'll work on this."
        },
        {
            "created_at": "2022-06-02T07:32:57.649Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16717?focusedCommentId=17545307) by Antoine Pitrou (apitrou):*\nCan it happen at compile-time or does it have to be a runtime setting?"
        },
        {
            "created_at": "2022-06-02T08:12:20.886Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16717?focusedCommentId=17545340) by Kouhei Sutou (kou):*\nCompile-time.\r\nI'll add support for choosing system jemalloc in `ThirdpartyToolchain.cmake`."
        },
        {
            "created_at": "2022-06-02T10:16:53.195Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16717?focusedCommentId=17545399) by Ian Cook (icook):*\nCompile time is fine. Thanks Kou!"
        },
        {
            "created_at": "2022-06-16T09:04:22.669Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16717?focusedCommentId=17554971) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 13373\n<https://github.com/apache/arrow/pull/13373>"
        }
    ]
}