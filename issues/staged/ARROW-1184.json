{
    "issue": {
        "title": "[Java] Dictionary.equals is not working correctly",
        "body": "***Note**: This issue was originally created as [ARROW-1184](https://issues.apache.org/jira/browse/ARROW-1184). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe `Dictionary.equals` method does not return True when the dictionaries are equal.  This is because `equals` is not implemented for FieldVector and so that comparison defaults to comparing the two objects only and not the vector data.",
        "created_at": "2017-07-04T18:07:59.000Z",
        "updated_at": "2019-08-01T22:39:20.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-07-25T06:08:28.000Z"
    },
    "comments": [
        {
            "created_at": "2017-07-04T18:25:23.529Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1184?focusedCommentId=16073992) by Bryan Cutler (bryanc):*\nI think that comparing any 2 FieldVectors could get pretty complicated, especially with nested types, so maybe that's why FieldVector.equals() is not implemented.  Validator.java has a comparison but I think that would probably fail for some cases.  I'm not sure we can assume flat fields only for the dictionary vector to try to make it easier."
        },
        {
            "created_at": "2017-10-02T01:47:32.096Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1184?focusedCommentId=16187625) by Wes McKinney (wesm):*\nIs this easy to fix?"
        },
        {
            "created_at": "2017-10-03T00:31:08.357Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1184?focusedCommentId=16189114) by Bryan Cutler (bryanc):*\nIt's not difficult, just a good bit of work to add the ability to compare contents of vectors for all the types.  Some of that is done in integration tests, but not for complex types.  This would also need to add an API for `equals()` somewhere in the vector class hierarchy.  So I wouldn't call it an easy fix either."
        },
        {
            "created_at": "2019-07-10T04:47:57.445Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1184?focusedCommentId=16881725) by Ji Liu (tianchen92):*\n`[~bryanc]` Now for Struct and List type, getObject returns JsonStringHashMap and JsonStringArrayList which support hashCode & equals well, I think we could simply apply compare logic in Validator to Dicitionary#equals, and make some change to make it work (e.g. add a wrapper for byte[] get from BinaryVector, now Object.equals(byte[], byte[]) I think is not correct). In this way, we need not add API for equals. What do you think?\r\n\r\n\u00a0"
        },
        {
            "created_at": "2019-07-25T06:08:28.534Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1184?focusedCommentId=16892437) by Bryan Cutler (bryanc):*\nIssue resolved by pull request 4843\n<https://github.com/apache/arrow/pull/4843>"
        }
    ]
}