{
    "issue": {
        "title": "Security issue: ValidateOffsets() does not prevent buffer over-read",
        "body": "***Note**: This issue was originally created as [ARROW-7435](https://issues.apache.org/jira/browse/ARROW-7435). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSkimming through `Validate()` code in both 0.15 and master, I noticed an oversight in `BinaryArray` validation in C++ (and Python).\r\n\r\n`ValidateOffsets()` checks that the first offset is 0, but it doesn't check that the offsets all point within the data buffer. A nefarious Arrow file could write `offsets=[0,999999]` and `data=[]`. If a caller reads the first value in that array, that will produce a buffer over-read.\r\n\r\nValidation is cheap, since Arrow already validates that offsets are monotonically increasing. One need only test that the last offset is less than or equal to the size of the data buffer.\r\n\r\nWe at Workbench are letting untrusted programs write Arrow files that we then validate and read. We're keen to ensure Arrow files don't allow untrusted programs to plant data that leads to arbitrary code execution or arbitrary reads. We wrote a validation tool that checks this buffer over-read I describe here: https://github.com/CJWorkbench/arrow-tools/blob/005fe582b428c1ab6a9ed5f6dc968387d77e9a80/src/arrow-validate.cc#L27. But it feels to me like Arrow's `Validate()` should be checking this.\r\n",
        "created_at": "2019-12-18T18:52:30.000Z",
        "updated_at": "2020-01-06T23:09:24.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-01-06T23:09:24.000Z"
    },
    "comments": [
        {
            "created_at": "2020-01-06T23:09:24.924Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7435?focusedCommentId=17009222) by Ben Kietzman (bkietz):*\nIssue resolved by pull request 6128\n<https://github.com/apache/arrow/pull/6128>"
        }
    ]
}