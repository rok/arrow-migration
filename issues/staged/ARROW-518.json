{
    "issue": {
        "title": "C++: Make Status::OK method constexpr",
        "body": "***Note**: This issue was originally created as [ARROW-518](https://issues.apache.org/jira/browse/ARROW-518). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWe call this method very often and probably have a small overhead as it isn't `constexpr`. We also cannot simply declare it `constexpr` as `arrow::Status`\u00a0is not a literal type yet.",
        "created_at": "2017-01-28T17:55:37.000Z",
        "updated_at": "2022-08-27T14:42:01.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2017-02-27T17:37:32.000Z"
    },
    "comments": [
        {
            "created_at": "2017-01-29T14:19:47.095Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-518?focusedCommentId=15844431) by Wes McKinney (wesm):*\nhere's the implementation of OK in Kudu: https://github.com/apache/kudu/blob/master/src/kudu/util/status.h#L150\n\nand in Impala: https://github.com/apache/kudu/blob/master/src/kudu/util/status.h#L150\n\nhere's the definition of `ALWAYS_INLINE` https://github.com/apache/incubator-impala/blob/master/be/src/common/compiler-util.h#L44\n\nI recall the Impala folks doing some performance analysis of the overhead of `Status::OK()`, including comparisons with having a global OK instance versus inlining the default ctor"
        },
        {
            "created_at": "2017-02-27T17:37:32.316Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-518?focusedCommentId=15886187) by Wes McKinney (wesm):*\nBased on the performance analysis in https://issues.cloudera.org/browse/IMPALA-1916, the inline constructor will be faster than a constexpr that uses a global variable due to invoking the copy constructor. Leaving OK as is makes Arrow consistent with the current code in Impala and Kudu\n\nHere also is the implementation of OK() in TensorFlow: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/lib/core/status.h#L44"
        },
        {
            "created_at": "2022-08-27T14:42:01.503Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-518?focusedCommentId=17585995) by @toddfarmer:*\nTransitioning issue from Resolved to Closed to based on resolution field value."
        }
    ]
}