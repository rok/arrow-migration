{
    "issue": {
        "title": "[Rust] Refactor Rust API to use traits and generics",
        "body": "***Note**: This issue was originally created as [ARROW-2521](https://issues.apache.org/jira/browse/ARROW-2521). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nEarly on, `[~kszucs]` and I worked on two different designs for how to represent Arrow arrays in Rust, each with their pros and cons.\r\n\r\nKrisztian started out with a generics approach e.g. Array<T> which was great until we tried to implement structs, which can contain mixed types so we ended up using enum to represent arrays, which was great until I got to the list types ... I don't think I can implement nested lists with this approach.\r\n\r\nI am reviewing this again now that I am more familiar with Arrow and also my Rust skills have improved greatly since I started working on all of this.\r\n\r\nI will be prototyping in a separate repo, and will update this\u00a0Jira once I have something concrete to share, but I feel it is important to address this before the first official release of the Rust version. Also, if we are going to consider a refactor like this, it is better to do it now while the codebase is tiny.\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0",
        "created_at": "2018-04-28T16:43:27.000Z",
        "updated_at": "2018-05-17T16:16:04.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2018-05-17T16:16:02.000Z"
    },
    "comments": [
        {
            "created_at": "2018-04-28T18:31:26.248Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2521?focusedCommentId=16457742) by Krisztian Szucs (kszucs):*\nJust took a quick look, I guess the main problem is the List is generic whereas other arrays are enum variants. \r\nHave You considered to put the List variant in the ArrayData? Something like [this](https://github.com/kszucs/arrow/blob/enum/rust/src/e.rs#L66).\r\n\r\nI'll take a more detailed look after this weekend (national holiday).\r\n\r\n"
        },
        {
            "created_at": "2018-04-28T22:37:10.324Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2521?focusedCommentId=16457823) by Andy Grove (andygrove):*\nHere is the branch on my fork where I'm working now: https://github.com/andygrove/arrow/tree/refactor_rust_api"
        },
        {
            "created_at": "2018-04-30T23:41:40.076Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2521?focusedCommentId=16459280) by Andy Grove (andygrove):*\n~~OLD PR: <https://github.com/apache/arrow/pull/1969>~~\r\n\r\n\u00a0\r\n\r\nNew PR (fewer commits)\u00a0https://github.com/apache/arrow/pull/1971"
        },
        {
            "created_at": "2018-05-17T16:16:02.265Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2521?focusedCommentId=16479302) by Uwe Korn (uwe):*\nIssue resolved by pull request 1971\n<https://github.com/apache/arrow/pull/1971>"
        }
    ]
}