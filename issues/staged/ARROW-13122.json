{
    "issue": {
        "title": "[C++][Compute] Dispatch* should examine options as well as input types",
        "body": "***Note**: This issue was originally created as [ARROW-13122](https://issues.apache.org/jira/browse/ARROW-13122). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n`Function::Dispatch*` should have access to options as well as argument types.\r\n\r\nThis will allow kernel authors to write kernels which are specific to certain configurations of options. Otherwise we may be leaving performance on the table when for example a function's output **could** be contiguously preallocated, but only for the default FunctionOptions. Currently the author would have no choice but to choose the lowest-common-denominator flags for the kernel.\r\n\r\nIn another vein, \"cast\" is currently a MetaFunction instead of a ScalarFunction since it derives its output type from CastOptions. This requires a special case in Expressions since Expressions can only represent calls to scalar functions. Ideally a function which is semantically scalar like \"cast\" wouldn't need to resort to using a MetaFunction for dispatch\r\n\r\nSee also: https://github.com/apache/arrow/pull/10547#discussion_r654573800",
        "created_at": "2021-06-18T17:43:54.000Z",
        "updated_at": "2021-06-18T17:46:05.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": []
}