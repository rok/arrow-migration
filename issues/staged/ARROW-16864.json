{
    "issue": {
        "title": "[Python] external_id for S3 incorrectly set",
        "body": "***Note**: This issue was originally created as [ARROW-16864](https://issues.apache.org/jira/browse/ARROW-16864). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIt looks like any attempt to read from S3 via pyarrow fails if access is supposed to be done via Assume Role while not passing an `external_id` to S3FileSystem.\r\n\r\nIn my understanding, `external_id` is an optional string to be passed to AWS API, however by setting `external_id=None` by default in init and then apply `tobytes()` to it later, it fails if external_id is None.\r\nhttps://github.com/apache/arrow/blob/c72f84a48b4952796ab78a0c33b84a9fc8f893db/python/pyarrow/_s3fs.pyx#L230\r\n\r\nThis then leads to an exception like this:\r\n```Java\n\r\n(...)\r\n    df = cursor.execute(query+';').as_pandas()\r\n  File \"/opt/conda/lib/python3.9/site-packages/pyathena/util.py\", line 37, in _wrapper\r\n    return wrapped(*args, **kwargs)\r\n  File \"/opt/conda/lib/python3.9/site-packages/pyathena/pandas/cursor.py\", line 157, in execute\r\n    self.result_set = AthenaPandasResultSet(\r\n  File \"/opt/conda/lib/python3.9/site-packages/pyathena/pandas/result_set.py\", line 72, in __init__\r\n    self._fs = self.__s3_file_system()\r\n  File \"/opt/conda/lib/python3.9/site-packages/pyathena/pandas/result_set.py\", line 86, in __s3_file_system\r\n    fs = fs.S3FileSystem(\r\n  File \"pyarrow/_s3fs.pyx\", line 217, in pyarrow._s3fs.S3FileSystem.__init__\r\n  File \"stringsource\", line 15, in string.from_py.__pyx_convert_string_from_py_std__in_string\r\nTypeError: expected bytes, NoneType found\r\n```\r\n\r\nThis exception comes from using pyarrow with pyathena lib and their code [does not pass any external_id](https://github.com/laughingman7743/PyAthena/blob/e055742b4742e2efaa0f4b3ff1c5af1146e25b23/pyathena/pandas/result_set.py#L86).",
        "created_at": "2022-06-20T11:45:15.000Z",
        "updated_at": "2022-06-29T08:11:50.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-06-29T08:11:49.000Z"
    },
    "comments": [
        {
            "created_at": "2022-06-28T16:26:45.097Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16864?focusedCommentId=17559850) by Antoine Pitrou (apitrou):*\nThanks for spotting this. It looks indeed like a missing value should be turned into an empty string at the C++ level."
        },
        {
            "created_at": "2022-06-29T08:11:49.130Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16864?focusedCommentId=17560095) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 13455\n<https://github.com/apache/arrow/pull/13455>"
        }
    ]
}