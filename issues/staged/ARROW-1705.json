{
    "issue": {
        "title": "[Python] Create StructArray from sequence of dicts given a known data type",
        "body": "***Note**: This issue was originally created as [ARROW-1705](https://issues.apache.org/jira/browse/ARROW-1705). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSee https://github.com/apache/arrow/issues/1217",
        "created_at": "2017-10-21T16:31:16.000Z",
        "updated_at": "2018-01-31T15:48:24.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2018-01-30T20:06:03.000Z"
    },
    "comments": [
        {
            "created_at": "2018-01-23T17:14:04.119Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1705?focusedCommentId=16336094) by Antoine Pitrou (apitrou):*\nBefore this, do we need to first add struct type support to the `pa.array` factory function? Currently it doesn't seem supported:\r\n\r\n```Java\n\r\n>>> ty = pa.struct([pa.field('key', pa.int32()), pa.field('value', pa.float64())])\r\n>>> pa.array([[1, 2], [3, 4]], type=ty)\r\nTraceback (most recent call last):\r\n  File \"<ipython-input-29-f5e8f7daa504>\", line 1, in <module>\r\n    pa.array([[1, 2], [3, 4]], type=ty)\r\n  File \"array.pxi\", line 174, in pyarrow.lib.array\r\n  File \"array.pxi\", line 29, in pyarrow.lib._sequence_to_array\r\n  File \"error.pxi\", line 85, in pyarrow.lib.check_status\r\nArrowNotImplementedError: No type converter implemented for struct<key: int32, value: double>\r\n```\r\n"
        },
        {
            "created_at": "2018-01-23T22:54:03.223Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1705?focusedCommentId=16336505) by Wes McKinney (wesm):*\nThat's right. For a struct type `pyarrow.array` will need to be able to accept\r\n\r\n- tuples\n- lists\n- dicts\n  \n  but it's probably fair to disallow a mix of these. The dict case seems to be the one that comes up the most often so far"
        },
        {
            "created_at": "2018-01-29T17:19:41.350Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1705?focusedCommentId=16343654) by Antoine Pitrou (apitrou):*\nOk, another question. Is there a reason `Status AppendNull()` is defined on all ArrayBuilder subclasses but not ArrayBuilder itself?"
        },
        {
            "created_at": "2018-01-30T20:06:03.984Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1705?focusedCommentId=16345718) by Wes McKinney (wesm):*\nIssue resolved by pull request 1530\n<https://github.com/apache/arrow/pull/1530>"
        },
        {
            "created_at": "2018-01-31T13:09:30.303Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1705?focusedCommentId=16346785) by Antoine Pitrou (apitrou):*\nNow that this is done, what should be the followup be for struct types and `pa.array`?\r\n \\* accept a sequence of tuples?\r\n \\* accept a dict of sequences?\r\n \\* automatically infer a struct type when passed a sequence of dicts?"
        },
        {
            "created_at": "2018-01-31T15:48:10.979Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1705?focusedCommentId=16347041) by Wes McKinney (wesm):*\nDefinitely sequence of tuples/lists. For the 2nd bullet point, there is `StructArray.from_arrays` already, but we could make that accept a dict/OrderedDict also (I have a PR for ARROW-1706 pending). Having type inference would be an additional nice thing to have. Let's create some JIRAs for these so we don't forget. "
        }
    ]
}