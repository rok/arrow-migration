{
    "issue": {
        "title": "[C++][Dataset] Preserve order when writing dataset",
        "body": "***Note**: This issue was originally created as [ARROW-10883](https://issues.apache.org/jira/browse/ARROW-10883). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently, when writing a dataset, e.g. from a table consisting of a set of record batches, there is no guarantee that the row order is preserved when reading the dataset.\r\n\r\nSmall code example:\r\n\r\n```Java\n\r\nIn [1]: import pyarrow.dataset as ds\r\n\r\nIn [2]: table = pa.table({\"a\": range(10)})\r\n\r\nIn [3]: table.to_pandas()\r\nOut[3]: \r\n   a\r\n0  0\r\n1  1\r\n2  2\r\n3  3\r\n4  4\r\n5  5\r\n6  6\r\n7  7\r\n8  8\r\n9  9\r\n\r\nIn [4]: batches = table.to_batches(max_chunksize=2)\r\n\r\nIn [5]: ds.write_dataset(batches, \"test_dataset_order\", format=\"parquet\")\r\n\r\nIn [6]: ds.dataset(\"test_dataset_order\").to_table().to_pandas()\r\nOut[6]: \r\n   a\r\n0  4\r\n1  5\r\n2  8\r\n3  9\r\n4  6\r\n5  7\r\n6  2\r\n7  3\r\n8  0\r\n9  1\r\n```\r\n\r\nAlthough this might seem normal in SQL world, typical dataframe users (R, pandas/dask, etc) will expect a preserved row order. \r\nSome applications might also rely on this, eg with dask you can have a sorted index column (\"divisions\" between the partitions) that would get lost this way (note, the dask parquet writer itself doesn't use `pyarrow.dataset.write_dataset` so isn't impacted by this.)\r\n\r\nSome discussion about this started in https://github.com/apache/arrow/pull/8305 (ARROW-9782), which changed to write all fragments to a single file instead of a file per fragment.\r\n\r\nI am not fully sure what the best way to solve this, but IMO at least having the _option_ to preserve the order would be good.\r\n\r\ncc `[~bkietz]`\r\n\r\n",
        "created_at": "2020-12-11T12:49:01.000Z",
        "updated_at": "2022-10-25T07:09:57.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-05-10T17:17:23.023Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10883?focusedCommentId=17534485) by Weston Pace (westonpace):*\nI deleted the link to ARROW-12873 because I don't know that \"batch index\" needs to rely on that arbitrary metadata mechanism (and, given that many nodes will need to manipulate it, I don't think it is arbitrary metadata)"
        }
    ]
}