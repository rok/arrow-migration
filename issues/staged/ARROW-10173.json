{
    "issue": {
        "title": "[Rust][DataFusion] Improve performance of equality to a constant predicate support",
        "body": "***Note**: This issue was originally created as [ARROW-10173](https://issues.apache.org/jira/browse/ARROW-10173). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI noticed this behavior while working on support for DictionaryArrays and wanted to capture it in a ticket in case someone has time to work on it. \r\n\r\nIn order to implement an equality predicate to a constant such as `d1 = 'three'`, DataFusion effectively creates an array with the same value `'three'` repeated over and over again and uses the equality compute kernel. This is ... suboptimal.\r\n\r\nHere is what the predicate looks like:\r\n```Java\n\r\n        predicate: BinaryExpr {\r\n            left: CastExpr {\r\n                expr: Column {\r\n                    name: \"d1\",\r\n                },\r\n                cast_type: Utf8,\r\n            },\r\n            op: Eq,\r\n            right: Literal {\r\n                value: Utf8(\"three\"),\r\n            },\r\n        },\r\n```\r\n\r\n",
        "created_at": "2020-10-05T11:13:53.000Z",
        "updated_at": "2020-12-24T19:09:08.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Component: Rust - DataFusion",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-11-18T04:48:22.000Z"
    },
    "comments": [
        {
            "created_at": "2020-10-23T21:16:19.655Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10173?focusedCommentId=17219936) by Yordan Pavlov (yordan-pavlov):*\nthis issue is related to:\r\n\r\nhttps://issues.apache.org/jira/browse/ARROW-8908\u00a0\r\n\r\nwhich proposes an optimization to creating literal arrays;\u00a0\r\n\r\nthis, however, is still sub-optimal; ideally comparison to literal values should be performed directly as proposed here:\r\n\r\nhttps://issues.apache.org/jira/browse/ARROW-8907\r\n\r\n\u00a0"
        },
        {
            "created_at": "2020-10-24T09:53:31.656Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10173?focusedCommentId=17220041) by Andrew Lamb (alamb):*\nI agree that implementing direct comparison of array to scalar is the fastest way to make such predicates fast"
        },
        {
            "created_at": "2020-11-11T21:09:24.681Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10173?focusedCommentId=17230223) by Yordan Pavlov (yordan-pavlov):*\nI have an initial implementation of direct comparison operations to scalar values in datafusion which, for the simple query used in the benchmark (\"select f32, f64 from t where f32 >= 250 and f64 > 250\")\u00a0shows approximately 10x performance improvement:\r\n\r\nbefore:\r\nfilter_scalar time: [35.733 ms 36.613 ms 37.924 ms]\r\n\r\nafter:\r\nfilter_scalar time: [3.5938 ms 3.6450 ms 3.7035 ms]\r\n change: [-90.048% -89.846% -89.625%] (p = 0.00 < 0.05)\r\n\r\n\u00a0\r\n\r\nI have also added a benchmark to compare the change in performance when comparing two arrays (using query\u00a0\"select\u00a0f32,\u00a0f64\u00a0from\u00a0t\u00a0where\u00a0f32\u00a0>=\u00a0f64\")\u00a0and it is negligible:\r\n\r\nbefore:\r\nfilter_array time: [11.601 ms 11.656 ms 11.718 ms]\r\n\r\nafter:\r\nfilter_array time: [11.854 ms 11.957 ms 12.070 ms]\r\n change: [+1.8032% +3.6391% +5.5671%] (p = 0.00 < 0.05)\r\n\r\n\r\n\r\nI will be submitting a PR for this change soon."
        },
        {
            "created_at": "2020-11-12T14:41:44.345Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10173?focusedCommentId=17230671) by Andrew Lamb (alamb):*\n`[~yordan-pavlov]` this sounds like great news. I can't wait to see it"
        },
        {
            "created_at": "2020-11-18T04:48:22.218Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10173?focusedCommentId=17234233) by Jorge Leit\u00e3o (jorgecarleitao):*\nIssue resolved by pull request 8660\n<https://github.com/apache/arrow/pull/8660>"
        }
    ]
}