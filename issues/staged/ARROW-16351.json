{
    "issue": {
        "title": "[C++][Python] Implement seek() for BufferedInputStream",
        "body": "***Note**: This issue was originally created as [ARROW-16351](https://issues.apache.org/jira/browse/ARROW-16351). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI would like to use seek() in a buffered input stream for the following usage scenario:\r\n \\* Open a S3 file (e.g. 1GB)\r\n \\* Jump to an offset (e.g. skip 500MB)\r\n \\* Do a bunch of small (8 bytes) reads\r\n\r\nSo that I get the performance of buffered input by avoiding lots of small reads (which are expensive and slow if using S3) and also seek to a position.\r\n\r\nCurrently I need to hack it using a mix of RandomAccessFile and BufferedInputStream, like\r\n\r\n`with _fs.open_input_file(url) as f:`\r\n`\u00a0 \u00a0 f.seek(offset)`\r\n`\u00a0 \u00a0 f = fs._wrap_input_stream(f, url, None, self._buffer_size)`\r\n`\u00a0 \u00a0 x =\u00a0``{}f.read(8){`}`{}{`}\r\n\r\nI'm wondering if there is any fundamental reason why seek is not implemented for the buffered input stream? Looks like .NET implements it: <https://docs.microsoft.com/en-us/dotnet/api/system.io.bufferedstream.seek?view=net-6.0>\r\n\r\nOr, what I actually need is to open a S3 file with an offset. Would this be easier to do, or is it already supported in current API?",
        "created_at": "2022-04-27T00:32:22.000Z",
        "updated_at": "2022-04-27T07:05:00.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-04-27T02:30:28.734Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16351?focusedCommentId=17528489) by Yibo Cai (yibocai):*\nBufferedInputStream wraps a InputStream which implements only the Readable interface, not Seekable. In general, I think it's reasonable as BufferedInputStream is only suitable for sequetial read, not random access.\r\ncc `[~apitrou]`"
        },
        {
            "created_at": "2022-04-27T07:01:20.275Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16351?focusedCommentId=17528589) by Antoine Pitrou (apitrou):*\nWe could quite easily expose `RandomAccessFile::GetStream` in Python, I think, that would allow addressing the use case in a supported manner.\r\n"
        }
    ]
}