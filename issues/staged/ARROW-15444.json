{
    "issue": {
        "title": "[C++]\u00a0Compilation with GCC 7.5 fails in aggregate_basic.cc",
        "body": "***Note**: This issue was originally created as [ARROW-15444](https://issues.apache.org/jira/browse/ARROW-15444). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nBuilding with GCC 7.5 currently fails with the following internal error. We need to support this GCC version for CUDA-enabled and PPC64LE builds on conda-forge. See also the updated conda recipe in https://github.com/apache/arrow/pull/11916\r\n```java\n\r\n2022-01-24T14:18:48.2261185Z [182/405] Building CXX object src/arrow/CMakeFiles/arrow_objlib.dir/compute/kernels/aggregate_basic.cc.o\r\n2022-01-24T14:18:48.2261792Z FAILED: src/arrow/CMakeFiles/arrow_objlib.dir/compute/kernels/aggregate_basic.cc.o \r\n2022-01-24T14:18:48.2268608Z /build/arrow-cpp-ext_1643033227908/_build_env/bin/powerpc64le-conda-linux-gnu-c++ -DARROW_EXPORTING -DARROW_HDFS -DARROW_JEMALLOC -DARROW_JEMALLOC_INCLUDE_DIR=\"\" -DARROW_MIMALLOC -DARROW_WITH_BACKTRACE -DARROW_WITH_BROTLI -DARROW_WITH_BZ2 -DARROW_WITH_LZ4 -DARROW_WITH_RE2 -DARROW_WITH_SNAPPY -DARROW_WITH_TIMING_TESTS -DARROW_WITH_UTF8PROC -DARROW_WITH_ZLIB -DARROW_WITH_ZSTD -DURI_STATIC_BUILD -I/build/arrow-cpp-ext_1643033227908/work/cpp/build/src -I/build/arrow-cpp-ext_1643033227908/work/cpp/src -I/build/arrow-cpp-ext_1643033227908/work/cpp/src/generated -isystem /build/arrow-cpp-ext_1643033227908/work/cpp/thirdparty/flatbuffers/include -isystem /build/arrow-cpp-ext_1643033227908/work/cpp/build/jemalloc_ep-prefix/src -isystem /build/arrow-cpp-ext_1643033227908/work/cpp/build/mimalloc_ep/src/mimalloc_ep/include/mimalloc-1.7 -isystem /build/arrow-cpp-ext_1643033227908/work/cpp/build/xsimd_ep/src/xsimd_ep-install/include -isystem /build/arrow-cpp-ext_1643033227908/work/cpp/thirdparty/hadoop/include -Wno-noexcept-type -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -mcpu=power8 -mtune=power8 -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O3 -pipe -isystem /build/arrow-cpp-ext_1643033227908/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla/include -fdebug-prefix-map=/build/arrow-cpp-ext_1643033227908/work=/usr/local/src/conda/arrow-cpp-7.0.0.dev553 -fdebug-prefix-map=/build/arrow-cpp-ext_1643033227908/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla=/usr/local/src/conda-prefix -fdiagnostics-color=always -fuse-ld=gold -O3 -DNDEBUG  -Wall -fno-semantic-interposition  -O3 -DNDEBUG -fPIC -std=c++1z -MD -MT src/arrow/CMakeFiles/arrow_objlib.dir/compute/kernels/aggregate_basic.cc.o -MF src/arrow/CMakeFiles/arrow_objlib.dir/compute/kernels/aggregate_basic.cc.o.d -o src/arrow/CMakeFiles/arrow_objlib.dir/compute/kernels/aggregate_basic.cc.o -c /build/arrow-cpp-ext_1643033227908/work/cpp/src/arrow/compute/kernels/aggregate_basic.cc\r\n2022-01-24T14:18:48.2273037Z In file included from /build/arrow-cpp-ext_1643033227908/work/cpp/src/arrow/compute/kernels/codegen_internal.h:46:0,\r\n2022-01-24T14:18:48.2273811Z                  from /build/arrow-cpp-ext_1643033227908/work/cpp/src/arrow/compute/kernels/util_internal.h:26,\r\n2022-01-24T14:18:48.2274563Z                  from /build/arrow-cpp-ext_1643033227908/work/cpp/src/arrow/compute/kernels/aggregate_internal.h:20,\r\n2022-01-24T14:18:48.2275318Z                  from /build/arrow-cpp-ext_1643033227908/work/cpp/src/arrow/compute/kernels/aggregate_basic_internal.h:24,\r\n2022-01-24T14:18:48.2276088Z                  from /build/arrow-cpp-ext_1643033227908/work/cpp/src/arrow/compute/kernels/aggregate_basic.cc:19:\r\n2022-01-24T14:18:48.2277993Z /build/arrow-cpp-ext_1643033227908/work/cpp/src/arrow/compute/kernels/aggregate_internal.h: In instantiation of 'arrow::compute::internal::SumArray(const arrow::ArrayData&, ValueFunc&&)::<lambda(SumType)> [with ValueType = double; SumType = double; arrow::compute::SimdLevel::type SimdLevel = (arrow::compute::SimdLevel::type)0; ValueFunc = arrow::compute::internal::SumArray(const arrow::ArrayData&) [with ValueType = double; SumType = double; arrow::compute::SimdLevel::type SimdLevel = (arrow::compute::SimdLevel::type)0]::<lambda(double)>]':\r\n2022-01-24T14:18:48.2281061Z /build/arrow-cpp-ext_1643033227908/work/cpp/src/arrow/compute/kernels/aggregate_internal.h:181:5:   required from 'struct arrow::compute::internal::SumArray(const arrow::ArrayData&, ValueFunc&&) [with ValueType = double; SumType = double; arrow::compute::SimdLevel::type SimdLevel = (arrow::compute::SimdLevel::type)0; ValueFunc = arrow::compute::internal::SumArray(const arrow::ArrayData&) [with ValueType = double; SumType = double; arrow::compute::SimdLevel::type SimdLevel = (arrow::compute::SimdLevel::type)0]::<lambda(double)>; arrow::enable_if_t<std::is_floating_point<SumType>::value, SumType> = double]::<lambda(double)>'\r\n2022-01-24T14:18:48.2284258Z /build/arrow-cpp-ext_1643033227908/work/cpp/src/arrow/compute/kernels/aggregate_internal.h:167:8:   required from 'arrow::enable_if_t<std::is_floating_point<SumType>::value, SumType> arrow::compute::internal::SumArray(const arrow::ArrayData&, ValueFunc&&) [with ValueType = double; SumType = double; arrow::compute::SimdLevel::type SimdLevel = (arrow::compute::SimdLevel::type)0; ValueFunc = arrow::compute::internal::SumArray(const arrow::ArrayData&) [with ValueType = double; SumType = double; arrow::compute::SimdLevel::type SimdLevel = (arrow::compute::SimdLevel::type)0]::<lambda(double)>; arrow::enable_if_t<std::is_floating_point<SumType>::value, SumType> = double]'\r\n2022-01-24T14:18:48.2286576Z /build/arrow-cpp-ext_1643033227908/work/cpp/src/arrow/compute/kernels/aggregate_internal.h:238:49:   required from 'SumType arrow::compute::internal::SumArray(const arrow::ArrayData&) [with ValueType = double; SumType = double; arrow::compute::SimdLevel::type SimdLevel = (arrow::compute::SimdLevel::type)0]'\r\n2022-01-24T14:18:48.2288413Z /build/arrow-cpp-ext_1643033227908/work/cpp/src/arrow/compute/kernels/aggregate_basic_internal.h:86:58:   required from 'arrow::Status arrow::compute::internal::SumImpl<ArrowType, SimdLevel>::Consume(arrow::compute::KernelContext*, const arrow::compute::ExecBatch&) [with ArrowType = arrow::DoubleType; arrow::compute::SimdLevel::type SimdLevel = (arrow::compute::SimdLevel::type)0]'\r\n2022-01-24T14:18:48.2289666Z /build/arrow-cpp-ext_1643033227908/work/cpp/src/arrow/compute/kernels/aggregate_basic.cc:1050:1:   required from here\r\n2022-01-24T14:18:48.2290544Z /build/arrow-cpp-ext_1643033227908/work/cpp/src/arrow/util/logging.h:59:34: internal compiler error: in maybe_undo_parenthesized_ref, at cp/semantics.c:1740\r\n2022-01-24T14:18:48.2291155Z  #define ARROW_IGNORE_EXPR(expr) ((void)(expr))\r\n2022-01-24T14:18:48.2291478Z                                  ~^~~~~~~~~~~~~\r\n2022-01-24T14:18:48.2292153Z /build/arrow-cpp-ext_1643033227908/work/cpp/src/arrow/util/logging.h:117:17: note: in expansion of macro 'ARROW_IGNORE_EXPR'\r\n2022-01-24T14:18:48.2292615Z    while (false) ARROW_IGNORE_EXPR(val2); \\\r\n2022-01-24T14:18:48.2292926Z                  ^~~~~~~~~~~~~~~~~\r\n2022-01-24T14:18:48.2293564Z /build/arrow-cpp-ext_1643033227908/work/cpp/src/arrow/util/logging.h:147:19: note: in expansion of macro 'ARROW_DCHECK_LT'\r\n2022-01-24T14:18:48.2294002Z  #define DCHECK_LT ARROW_DCHECK_LT\r\n2022-01-24T14:18:48.2294305Z                    ^~~~~~~~~~~~~~~\r\n2022-01-24T14:18:48.2294988Z /build/arrow-cpp-ext_1643033227908/work/cpp/src/arrow/compute/kernels/aggregate_internal.h:176:7: note: in expansion of macro 'DCHECK_LT'\r\n2022-01-24T14:18:48.2295446Z        DCHECK_LT(cur_level, levels);\r\n2022-01-24T14:18:48.2295725Z        ^~~~~~~~~\r\n2022-01-24T14:18:48.2296022Z unrecognized DWARF version in .debug_info at 6\r\n2022-01-24T14:18:48.2296338Z unrecognized DWARF version in .debug_info at 6\r\n2022-01-24T14:18:48.2296678Z 0x678721 maybe_undo_parenthesized_ref(tree_node*)\r\n2022-01-24T14:18:48.2297399Z \t/home/conda/feedstock_root/build_artifacts/ctng-compilers_1618239179734/work/.build/powerpc64le-conda-linux-gnu/src/gcc/gcc/cp/semantics.c:1740\r\n2022-01-24T14:18:48.2297901Z 0x65f4a5 convert_to_void(tree_node*, impl_conv_void, int)\r\n2022-01-24T14:18:48.2298670Z \t/home/conda/feedstock_root/build_artifacts/ctng-compilers_1618239179734/work/.build/powerpc64le-conda-linux-gnu/src/gcc/gcc/cp/cvt.c:1056\r\n2022-01-24T14:18:48.2299150Z 0x653eb5 cp_build_c_cast(tree_node*, tree_node*, int)\r\n2022-01-24T14:18:48.2299856Z \t/home/conda/feedstock_root/build_artifacts/ctng-compilers_1618239179734/work/.build/powerpc64le-conda-linux-gnu/src/gcc/gcc/cp/typeck.c:7539\r\n2022-01-24T14:18:48.2300372Z 0x5ed0df build_functional_cast(tree_node*, tree_node*, int)\r\n2022-01-24T14:18:48.2301086Z \t/home/conda/feedstock_root/build_artifacts/ctng-compilers_1618239179734/work/.build/powerpc64le-conda-linux-gnu/src/gcc/gcc/cp/typeck2.c:2024\r\n2022-01-24T14:18:48.2301618Z 0x5cd575 tsubst_copy_and_build(tree_node*, tree_node*, int, tree_node*, bool, bool)\r\n2022-01-24T14:18:48.2302360Z \t/home/conda/feedstock_root/build_artifacts/ctng-compilers_1618239179734/work/.build/powerpc64le-conda-linux-gnu/src/gcc/gcc/cp/pt.c:16903\r\n2022-01-24T14:18:48.2302863Z 0x5c6b08 tsubst_expr(tree_node*, tree_node*, int, tree_node*, bool)\r\n2022-01-24T14:18:48.2303562Z \t/home/conda/feedstock_root/build_artifacts/ctng-compilers_1618239179734/work/.build/powerpc64le-conda-linux-gnu/src/gcc/gcc/cp/pt.c:16613\r\n2022-01-24T14:18:48.2304060Z 0x5c7a71 tsubst_expr(tree_node*, tree_node*, int, tree_node*, bool)\r\n2022-01-24T14:18:48.2304774Z \t/home/conda/feedstock_root/build_artifacts/ctng-compilers_1618239179734/work/.build/powerpc64le-conda-linux-gnu/src/gcc/gcc/cp/pt.c:15874\r\n2022-01-24T14:18:48.2305278Z 0x5c795f tsubst_expr(tree_node*, tree_node*, int, tree_node*, bool)\r\n2022-01-24T14:18:48.2305978Z \t/home/conda/feedstock_root/build_artifacts/ctng-compilers_1618239179734/work/.build/powerpc64le-conda-linux-gnu/src/gcc/gcc/cp/pt.c:16036\r\n2022-01-24T14:18:48.2306476Z 0x5c7d24 tsubst_expr(tree_node*, tree_node*, int, tree_node*, bool)\r\n2022-01-24T14:18:48.2307197Z \t/home/conda/feedstock_root/build_artifacts/ctng-compilers_1618239179734/work/.build/powerpc64le-conda-linux-gnu/src/gcc/gcc/cp/pt.c:15860\r\n2022-01-24T14:18:48.2307702Z 0x5c795f tsubst_expr(tree_node*, tree_node*, int, tree_node*, bool)\r\n2022-01-24T14:18:48.2308416Z \t/home/conda/feedstock_root/build_artifacts/ctng-compilers_1618239179734/work/.build/powerpc64le-conda-linux-gnu/src/gcc/gcc/cp/pt.c:16036\r\n2022-01-24T14:18:48.2308899Z 0x5c7d24 tsubst_expr(tree_node*, tree_node*, int, tree_node*, bool)\r\n2022-01-24T14:18:48.2309613Z \t/home/conda/feedstock_root/build_artifacts/ctng-compilers_1618239179734/work/.build/powerpc64le-conda-linux-gnu/src/gcc/gcc/cp/pt.c:15860\r\n2022-01-24T14:18:48.2394478Z 0x5c8042 tsubst_expr(tree_node*, tree_node*, int, tree_node*, bool)\r\n2022-01-24T14:18:48.2395724Z \t/home/conda/feedstock_root/build_artifacts/ctng-compilers_1618239179734/work/.build/powerpc64le-conda-linux-gnu/src/gcc/gcc/cp/pt.c:16090\r\n2022-01-24T14:18:48.2396328Z 0x5c7d24 tsubst_expr(tree_node*, tree_node*, int, tree_node*, bool)\r\n2022-01-24T14:18:48.2401658Z \t/home/conda/feedstock_root/build_artifacts/ctng-compilers_1618239179734/work/.build/powerpc64le-conda-linux-gnu/src/gcc/gcc/cp/pt.c:15860\r\n2022-01-24T14:18:48.2402686Z 0x5c8042 tsubst_expr(tree_node*, tree_node*, int, tree_node*, bool)\r\n2022-01-24T14:18:48.2403770Z \t/home/conda/feedstock_root/build_artifacts/ctng-compilers_1618239179734/work/.build/powerpc64le-conda-linux-gnu/src/gcc/gcc/cp/pt.c:16090\r\n2022-01-24T14:18:48.2404265Z 0x5dd5d7 instantiate_decl(tree_node*, bool, bool)\r\n2022-01-24T14:18:48.2404963Z \t/home/conda/feedstock_root/build_artifacts/ctng-compilers_1618239179734/work/.build/powerpc64le-conda-linux-gnu/src/gcc/gcc/cp/pt.c:23075\r\n2022-01-24T14:18:48.2405452Z 0x5dfd6e instantiate_class_template_1\r\n2022-01-24T14:18:48.2406139Z \t/home/conda/feedstock_root/build_artifacts/ctng-compilers_1618239179734/work/.build/powerpc64le-conda-linux-gnu/src/gcc/gcc/cp/pt.c:10848\r\n2022-01-24T14:18:48.2406614Z 0x5dfd6e instantiate_class_template(tree_node*)\r\n2022-01-24T14:18:48.2407291Z \t/home/conda/feedstock_root/build_artifacts/ctng-compilers_1618239179734/work/.build/powerpc64le-conda-linux-gnu/src/gcc/gcc/cp/pt.c:10918\r\n2022-01-24T14:18:48.2407985Z 0x651e9d complete_type(tree_node*)\r\n2022-01-24T14:18:48.2408686Z \t/home/conda/feedstock_root/build_artifacts/ctng-compilers_1618239179734/work/.build/powerpc64le-conda-linux-gnu/src/gcc/gcc/cp/typeck.c:134\r\n2022-01-24T14:18:48.2409216Z 0x5cc9ed tsubst_copy_and_build(tree_node*, tree_node*, int, tree_node*, bool, bool)\r\n2022-01-24T14:18:48.2409945Z \t/home/conda/feedstock_root/build_artifacts/ctng-compilers_1618239179734/work/.build/powerpc64le-conda-linux-gnu/src/gcc/gcc/cp/pt.c:18023\r\n2022-01-24T14:18:48.2410452Z 0x5c6b08 tsubst_expr(tree_node*, tree_node*, int, tree_node*, bool)\r\n2022-01-24T14:18:48.2411166Z \t/home/conda/feedstock_root/build_artifacts/ctng-compilers_1618239179734/work/.build/powerpc64le-conda-linux-gnu/src/gcc/gcc/cp/pt.c:16613\r\n2022-01-24T14:18:48.2411613Z Please submit a full bug report,\r\n2022-01-24T14:18:48.2411904Z with preprocessed source if appropriate.\r\n2022-01-24T14:18:48.2412277Z Please include the complete backtrace with any bug report.\r\n2022-01-24T14:18:48.2412645Z See <https://gcc.gnu.org/bugs/> for instructions. \n```",
        "created_at": "2022-01-25T11:18:25.000Z",
        "updated_at": "2022-08-27T14:42:01.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-02-18T15:46:04.000Z"
    },
    "comments": [
        {
            "created_at": "2022-01-25T12:04:42.328Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15444?focusedCommentId=17481769) by Antoine Pitrou (apitrou):*\nIs there an easy way to reproduce using Docker?"
        },
        {
            "created_at": "2022-01-25T12:07:42.662Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15444?focusedCommentId=17481771) by Antoine Pitrou (apitrou):*\nAlternatively, perhaps you can try this patch:\r\n```Java\n\r\ndiff --git a/cpp/src/arrow/compute/kernels/aggregate_internal.h b/cpp/src/arrow/compute/kernels/aggregate_internal.h\r\nindex 07378e3ce..0ae1136c9 100644\r\n--- a/cpp/src/arrow/compute/kernels/aggregate_internal.h\r\n+++ b/cpp/src/arrow/compute/kernels/aggregate_internal.h\r\n@@ -17,12 +17,13 @@\r\n \r\n #pragma once\r\n \r\n+#include <cassert>\r\n+\r\n #include \"arrow/compute/kernels/util_internal.h\"\r\n #include \"arrow/type.h\"\r\n #include \"arrow/type_traits.h\"\r\n #include \"arrow/util/bit_run_reader.h\"\r\n #include \"arrow/util/int128_internal.h\"\r\n-#include \"arrow/util/logging.h\"\r\n \r\n namespace arrow {\r\n namespace compute {\r\n@@ -173,7 +174,7 @@ enable_if_t<std::is_floating_point<SumType>::value, SumType> SumArray(\r\n       block_sum = sum[cur_level];\r\n       sum[cur_level] = 0;\r\n       ++cur_level;\r\n-      DCHECK_LT(cur_level, levels);\r\n+      assert(cur_level < levels);\r\n       cur_level_mask <<= 1;\r\n       sum[cur_level] += block_sum;\r\n       mask ^= cur_level_mask;\r\n```\r\n"
        },
        {
            "created_at": "2022-01-25T16:59:10.362Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15444?focusedCommentId=17481960) by Krisztian Szucs (kszucs):*\n`[~uwe]` how can we reproduce this in Arrow's CI? The ubuntu 18.04 builds compile with GCC 7.5 but this error doesn't occur there."
        },
        {
            "created_at": "2022-01-25T17:04:22.915Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15444?focusedCommentId=17481965) by Uwe Korn (uwe):*\nSomewhere in these CXXFLAGS must be a problem. These are the common ones in the ppc64le and CUDA builds.\r\n```java\n\r\n CXXFLAGS=-fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt\n```\r\n\u00a0"
        },
        {
            "created_at": "2022-01-25T19:54:00.370Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15444?focusedCommentId=17482075) by Uwe Korn (uwe):*\nThe following CXXFLAGS seems to work\r\n```java\n\r\n-Wno-noexcept-type  -fdiagnostics-color=always -O3 -DNDEBUG  -Wall -Wno-conversion -Wno-deprecated-declarations -Wno-sign-conversion -Wunused-result -fno-semantic-interposition -msse4.2  \n```"
        },
        {
            "created_at": "2022-01-25T20:31:27.248Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15444?focusedCommentId=17482091) by Uwe Korn (uwe):*\nDisabling CMAKE_CXX_STANDARD and GCS together fixes the issue. I'll try out now what the actual cause is but this is then not a release blocker anymore."
        },
        {
            "created_at": "2022-01-27T10:36:14.842Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15444?focusedCommentId=17483052) by Uwe Korn (uwe):*\nOngoing work on this is at <https://github.com/conda-forge/ctng-compilers-feedstock/pull/82>"
        },
        {
            "created_at": "2022-02-18T15:46:04.741Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15444?focusedCommentId=17494682) by Uwe Korn (uwe):*\nThis has been an internal issue in GCC and I have applied the same patch that Ubuntu has in conda-forge."
        },
        {
            "created_at": "2022-08-27T14:42:01.701Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15444?focusedCommentId=17585997) by @toddfarmer:*\nTransitioning issue from Resolved to Closed to based on resolution field value."
        }
    ]
}