{
    "issue": {
        "title": "[R] Avoid unnecessary projections",
        "body": "***Note**: This issue was originally created as [ARROW-17463](https://issues.apache.org/jira/browse/ARROW-17463). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIn ExecPlan$Build(), we call Project in a few places, and there is code to make sure that there is at least one ProjectNode in the query in order to remove augmented fields from a Dataset scan (unless the user has added them). As a result, it is possible to get multiple ProjectNodes in a row that are essentially no-op. One example is with grouped aggregation: there is a projection to get the order of the columns back to what R expects, and then a no-op projection after that:\r\n\r\n```Java\n\r\n> mtcars |> arrow_table() |> count(cyl) |> explain()\r\nExecPlan with 6 nodes:\r\n5:SinkNode{}\r\n  4:ProjectNode{projection=[cyl, n]}\r\n    3:ProjectNode{projection=[cyl, n]}\r\n      2:GroupByNode{keys=[\"cyl\"], aggregates=[\r\n      \thash_sum(n, {skip_nulls=true, min_count=1}),\r\n      ]}\r\n        1:ProjectNode{projection=[\"n\": 1, cyl]}\r\n          0:TableSourceNode{}\r\n```\r\n\r\nIDK how significant of a performance impact this would have, but it certainly looks wasteful and should be avoidable.",
        "created_at": "2022-08-18T18:56:19.000Z",
        "updated_at": "2022-08-28T00:21:42.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-08-27T21:44:58.000Z"
    },
    "comments": [
        {
            "created_at": "2022-08-27T21:44:58.294Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17463?focusedCommentId=17586118) by Neal Richardson (npr):*\nIssue resolved by pull request 13954\n<https://github.com/apache/arrow/pull/13954>"
        }
    ]
}