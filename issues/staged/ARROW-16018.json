{
    "issue": {
        "title": "[Doc][Python] Run doctests on Python docstring examples",
        "body": "***Note**: This issue was originally created as [ARROW-16018](https://issues.apache.org/jira/browse/ARROW-16018). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWe start to add more and more examples to the docstrings of Python methods (ARROW-15367), and so we could use the doctest functionality to ensure that those examples are actually correct (and keep being correct).\r\n\r\nPytest has integration for doctests (https://docs.pytest.org/en/6.2.x/doctest.html), and so you can do:\r\n\r\n```Java\n\r\npytest python/pyarrow --doctest-modules\r\n```\r\n\r\nThis currently fails for me because not having pyarrow.cuda, so we will need to find some ways to automatically skips those parts if not available. Normally, that should be possible with adding a `conftest.py` file in the main `pyarrow` directory, and then we can influence which files are found by defining `pytest_runtest_setup` or `pytest_collection_modifyitems`.",
        "created_at": "2022-03-24T08:59:45.000Z",
        "updated_at": "2022-05-26T17:51:48.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Documentation",
            "Component: Python",
            "Type: task"
        ],
        "closed": true,
        "closed_at": "2022-05-26T13:30:10.000Z"
    },
    "comments": [
        {
            "created_at": "2022-03-24T10:35:43.289Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16018?focusedCommentId=17511764) by Joris Van den Bossche (jorisvandenbossche):*\nPytest itself doesn't directly support running the doctests in cython files. There is a `pytest-cython` plugin that allows this. \r\n\r\nIts released version is however not very up to date, and only allows to run all doctests. With the master version (`pip install git+https://github.com/lgpage/pytest-cython.git`), you can run the doctests for a specific file with:\r\n\r\n```Java\n\r\npytest --doctest-cython python/pyarrow/_csv.pyx\r\n```"
        },
        {
            "created_at": "2022-03-24T10:46:29.815Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16018?focusedCommentId=17511772) by Joris Van den Bossche (jorisvandenbossche):*\nAnother option would be to run the doctests through sphinx with `make doctest` from the doc directory, which also allows running the doctests on embedded docstrings (and not only in the main .rst sphinx sources, xref ARROW-13159). See https://www.sphinx-doc.org/en/master/usage/extensions/doctest.html\r\n\r\nHowever, for developing, I think it is important that you can run the doctests for a specific subset (the part of the code you are working on), and that doesn't seem to be easily possible with sphinx.\r\n\r\nAnother option might be to use the builtin doctest runner, eg `python -m doctest -v python/pyarrow/_dataset.pyx`, but I don't know if that will be feature-full enough (eg pytest has features to setup certain imports, or automatically skip files based on available modules, etc).\r\n"
        },
        {
            "created_at": "2022-05-26T13:30:10.905Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16018?focusedCommentId=17542491) by Alessandro Molina (amol-):*\nIssue resolved by pull request 13204\n<https://github.com/apache/arrow/pull/13204>"
        }
    ]
}