{
    "issue": {
        "title": "[C++][R] Writing moderate-size parquet files of nested dataframes from R slows down/process hangs",
        "body": "***Note**: This issue was originally created as [ARROW-13865](https://issues.apache.org/jira/browse/ARROW-13865). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI observed a significant slowdown in parquet writes (and ultimately the process just hangs for minutes without completion) while writing moderate-size nested dataframes from R. I have replicated the issue on MacOS and Ubuntu so far.\r\n\r\n\u00a0\r\n\r\nAn example:\r\n\r\n```\r\n\r\ntestdf <- dplyr::tibble(\r\n id = uuid::UUIDgenerate(n = 5000),\r\n l1 = as.list(lapply(1:5000, (function( x )\u00a0runif(1000)))),\r\n l2 = as.list(lapply(1:5000, (function( x )\u00a0rnorm(1000))))\r\n )\r\n\r\ntestdf_long <- tidyr::unnest(testdf, cols = c(l1, l2))\r\n\r\n\u00a0\r\n1. This works\n   \n   arrow::write_parquet(testdf_long, \"testdf_long.parquet\")\n1. This write does not complete within a few minutes on my testing but throws no errors\n    arrow::write_parquet(testdf, \"testdf.parquet\")\n   \n   ```\n   \n   I can't guess at why this is true, but the slowdown is closely tied to row counts:\n   \n   ```\n1. screenshot attached; 12ms, 56ms, and 680ms respectively.\n   \n   microbenchmark::microbenchmark(\n    arrow::write_parquet(testdf[1, ], \"testdf.parquet\"),\n    arrow::write_parquet(testdf[1:10, ], \"testdf.parquet\"),\n    arrow::write_parquet(testdf[1:100, ], \"testdf.parquet\"),\n    times = 5\n    )\n   \n   ```\n   \n   I'm using the CRAN version 5.0.0 in both cases. The sessionInfo() for Ubuntu is\n    R version 4.0.5 (2021-03-31)\n    Platform: x86_64-pc-linux-gnu (64-bit)\n    Running under: Ubuntu 20.04.3 LTS\n   \n   Matrix products: default\n    BLAS/LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.8.so\n   \n   locale:\n    [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8 LC_MONETARY=en_US.UTF-8 LC_MESSAGES=C \n    [7] LC_PAPER=en_US.UTF-8 LC_NAME=C LC_ADDRESS=C LC_TELEPHONE=C LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C\n   \n   attached base packages:\n    [1] stats graphics grDevices utils datasets methods base\n   \n   other attached packages:\n    [1] arrow_5.0.0\n   \n   And sessionInfo for MacOS is:\n    R version 4.0.1 (2020-06-06) Platform: x86_64-apple-darwin17.0 (64-bit) Running under: macOS Catalina 10.15.7 Matrix products: default BLAS: /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib locale: [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 attached base packages: [1] stats graphics grDevices utils datasets methods base other attached packages: [1] arrow_5.0.0",
        "created_at": "2021-09-02T15:23:55.000Z",
        "updated_at": "2021-12-17T17:32:57.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: R",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-12-17T17:32:57.000Z"
    },
    "comments": [
        {
            "created_at": "2021-12-17T16:59:44.903Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13865?focusedCommentId=17461564) by Dewey Dunnington (paleolimbot):*\nI wonder if this has since been fixed...I don't see this with the arrow R package off the master branch:\r\n\r\n```R\n\r\nlibrary(arrow, warn.conflicts = FALSE)\r\n\r\ntestdf <- dplyr::tibble(\r\n  id = uuid::UUIDgenerate(n = 5000),\r\n  l1 = as.list(lapply(1:5000, (function( x ) runif(1000)))),\r\n  l2 = as.list(lapply(1:5000, (function( x ) rnorm(1000))))\r\n)\r\n\r\ntestdf_long <- tidyr::unnest(testdf, cols = c(l1, l2))\r\n\r\ntf <- tempfile()\r\nsystem.time(write_parquet(testdf_long, tf))\r\n#>    user  system elapsed \r\n#>   0.523   0.035   0.548\r\nsystem.time(write_parquet(testdf, tf))\r\n#>    user  system elapsed \r\n#>   0.208   0.025   0.234\r\n```\r\n"
        },
        {
            "created_at": "2021-12-17T17:19:57.617Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13865?focusedCommentId=17461574) by Jonathan Keane (jonkeane):*\nOh yes, I should have closed this. This should have been resolved in ARROW-14020 where we disabled saving row-level r-specific metadata like we had been."
        }
    ]
}