{
    "issue": {
        "title": "[C++] Implement hash kernels for dictionary data with constant dictionaries",
        "body": "***Note**: This issue was originally created as [ARROW-9132](https://issues.apache.org/jira/browse/ARROW-9132). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nEnabling [`strings_as_dictionary`](https://turbodbc.readthedocs.io/en/latest/pages/advanced_usage.html?highlight=strings_as_dictionary#obtaining-apache-arrow-result-sets) in `turbodbc` returns a `ChunkedArray` of `dictionary` type (IIUC).\r\n\r\nI'd like to enable this for better performance however it seems not all functionality is implemented for `dictionary` types? In particular, `unique` seems not to be implemented:\r\n\r\n```Java\n\r\nIn [40]: nmi.__class__.mro()\r\nOut[40]: [pyarrow.lib.ChunkedArray, pyarrow.lib._PandasConvertible, object]\r\n\r\nIn [41]: nmi.type\r\nOut[41]: DictionaryType(dictionary<values=string, indices=int32, ordered=0>)\r\n\r\nIn [42]: nmi.unique()\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-42-0fcb7893d5c4>\", line 1, in <module>\r\n    nmi.unique()\r\n\r\n  File \"pyarrow\\table.pxi\", line 307, in pyarrow.lib.ChunkedArray.unique\r\n\r\n  File \"pyarrow\\error.pxi\", line 106, in pyarrow.lib.check_status\r\n\r\nArrowNotImplementedError: unique not implemented for dictionary<values=string, indices=int32, ordered=0>\r\n```\r\n\r\nIt would be very useful if the `dictionary` type supported all the usual operations.\r\n",
        "created_at": "2020-06-15T12:02:07.000Z",
        "updated_at": "2020-06-27T16:12:26.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-06-27T16:12:16.000Z"
    },
    "comments": [
        {
            "created_at": "2020-06-26T02:54:16.621Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9132?focusedCommentId=17145984) by Wes McKinney (wesm):*\nThis is actually a good deal more complicated than it seems in order to support dictionaries that vary across chunked inputs. If the dictionary is constant across all inputs to the hash kernel, then you can hash the indices and then attach the singleton dictionary to the output. So if you had indices `[3, 0, 1, 3, 0, 1]`, then you output `[3, 0, 1]` with whatever dictionary was used.\r\n\r\nIf the dictionary varies then things are more complex now because either you have to do dictionary unification or convert the input to non-dictionary and then hash that.\r\n\r\nEither way I personally won't be able to do this for 1.0.0"
        },
        {
            "created_at": "2020-06-26T13:26:50.470Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9132?focusedCommentId=17146291) by Wes McKinney (wesm):*\nI'm going to put up a patch for the constant dictionary case"
        },
        {
            "created_at": "2020-06-27T16:12:17.055Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9132?focusedCommentId=17147024) by Wes McKinney (wesm):*\nIssue resolved by pull request 7551\n<https://github.com/apache/arrow/pull/7551>"
        }
    ]
}