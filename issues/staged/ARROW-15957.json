{
    "issue": {
        "title": "[C++] Add option to consolidate key columns in hash join",
        "body": "***Note**: This issue was originally created as [ARROW-15957](https://issues.apache.org/jira/browse/ARROW-15957). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently the hash join outputs key columns from both sides.  On an outer join this can help distinguish between a row that matched but had entirely null payloads on one side and a row that didn't match on one side.\r\n\r\nHowever, that distinction is sometimes not very important and many databases will simply coalesce the key columns into one.  For example, we might get an outer join result today that looks like:\r\n\r\n```\n\r\nL_KEY | R_KEY | L_PAY | R_PAY\r\n    0       0       x       Y\r\n NULL       1    NULL       Z\r\n    2    NULL       A    NULL\r\n```\r\n\r\nIdeally we could specify a \"combine key columns\" option to get a result that looks like:\r\n\r\n```\n\r\nKEY | L_PAY | R_PAY\r\n  0       x       Y\r\n  1    NULL       Z\r\n  2       A    NULL\r\n```\r\n\r\nThis can be done today with an extra project step, and it isn't likely to offer much performance benefit, but from a usability perspective it would be nice if users didn't have to do this extra project step.",
        "created_at": "2022-03-16T21:42:47.000Z",
        "updated_at": "2022-07-14T16:19:49.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-03-17T09:59:45.089Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15957?focusedCommentId=17508099) by Joris Van den Bossche (jorisvandenbossche):*\nI suppose this is essentially a duplicate of ARROW-15838, or we can maybe keep that one for the R side of things."
        },
        {
            "created_at": "2022-03-17T15:37:33.210Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15957?focusedCommentId=17508249) by Alessandro Molina (amol-):*\nFYI, In some cases I don't think using `project` is a viable workaround.\r\n\r\nFor joins if suffixes are provided, you will only know the name of the columns after the join operation and thus it's fairly hard to build the right projection (you would have to manually. compute column collisions yourself). Especially since there is no way to do a \"Project All\" to get _all_ the resulting columns from the join apart the duplicated keys"
        },
        {
            "created_at": "2022-03-17T16:56:22.921Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15957?focusedCommentId=17508293) by Weston Pace (westonpace):*\nYou should be able to reference the fields by index but I agree that is inconvenient."
        },
        {
            "created_at": "2022-07-12T14:04:47.874Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15957?focusedCommentId=17565753) by @toddfarmer:*\nThis issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned. Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon."
        }
    ]
}