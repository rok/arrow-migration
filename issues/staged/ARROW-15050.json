{
    "issue": {
        "title": "[Python] pyarrow.scalar doesn't accept nested pyarrow values",
        "body": "***Note**: This issue was originally created as [ARROW-15050](https://issues.apache.org/jira/browse/ARROW-15050). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nEasiest explained in code:\r\n\r\n```python\n\r\nimport pyarrow as pa\r\n\r\nt1 = pa.struct([('x', pa.int64())])\r\nt2 = pa.struct([('y', t1)])\r\n\r\nt1_py = {'x', 0}\r\nt1_pa = pa.scalar(t1_py, type=t1)\r\n\r\nt2_py = {'y': {'x': 0}}\r\nt2_pa = pa.scalar(t2_py, type=t2)  # works\r\n\r\nt2_mixed = {'y': t1_pa}\r\nt2_pa_mix = pa.scalar(t2_mixed, type=t2)  # fails\r\nassert t2_pa_mix == t2_pa\r\n```\r\n\r\nIs there some other way to construct the pyarrow struct value corresponding to `t2_pa` given `t1_pa` directly, without going through python first (i.e. constructing `t1_py`)?",
        "created_at": "2021-12-09T21:13:02.000Z",
        "updated_at": "2021-12-13T09:25:47.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-12-13T09:16:29.429Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15050?focusedCommentId=17458230) by Joris Van den Bossche (jorisvandenbossche):*\n`[~vladfi]` thanks for the report. I think this essentially comes back to ARROW-5295 (which is a similar issue but for arrays, but both arrays and scalar functions for the python->arrow conversion use the same code path I think). \r\n\r\nThe current generic python->arrow conversion layer cannot handle our own scalars, but only Python scalars (+ some numpy and pandas ones)"
        }
    ]
}