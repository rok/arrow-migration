{
    "issue": {
        "title": "[Java] Write 64-bit ints as strings in integration test JSON files",
        "body": "***Note**: This issue was originally created as [ARROW-1875](https://issues.apache.org/jira/browse/ARROW-1875). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nJavascript can't handle 64-bit integers natively, so writing them as strings in the JSON would make implementing the integration tests a lot simpler.",
        "created_at": "2017-12-01T20:13:16.000Z",
        "updated_at": "2019-09-10T15:23:01.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Integration",
            "Component: JavaScript",
            "Type: task"
        ],
        "closed": true,
        "closed_at": "2019-09-10T15:23:01.000Z"
    },
    "comments": [
        {
            "created_at": "2018-02-16T19:43:30.943Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1875?focusedCommentId=16367795) by Wes McKinney (wesm):*\nMoving to 0.10.0. Should try to do this in the course of completing the JS integration tests (reading and writing)"
        },
        {
            "created_at": "2018-06-29T20:33:28.310Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1875?focusedCommentId=16528200) by Wes McKinney (wesm):*\n[~paul.e.taylor] `[~bhulette]` how much work is this on the JS side? The C++ and Java side should be relatively straightforward"
        },
        {
            "created_at": "2018-06-30T15:57:07.740Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1875?focusedCommentId=16528790) by Brian Hulette (bhulette):*\nThis should be pretty straightforward on the Javascript side too. It's not a major priority since we were able to workaround the issue using [json-bignum](https://github.com/datalanche/json-bignum), but it would be nice to drop that dependency."
        },
        {
            "created_at": "2018-07-05T22:09:34.032Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1875?focusedCommentId=16534214) by Wes McKinney (wesm):*\nOK. Let's take care of it in the 0.11 release cycle"
        },
        {
            "created_at": "2018-09-15T14:24:14.210Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1875?focusedCommentId=16616319) by Wes McKinney (wesm):*\nNeed someone to commit to provide timely help on the Java side before we can do this. I'm ready to do the work in C++ whenever it is required"
        },
        {
            "created_at": "2019-02-06T04:15:32.936Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1875?focusedCommentId=16761450) by Wes McKinney (wesm):*\n`[~siddteotia]` could you or anyone help with this on the Java side? I don't think this should be a huge project"
        },
        {
            "created_at": "2019-02-11T19:01:28.404Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1875?focusedCommentId=16765282) by Wes McKinney (wesm):*\n`[~pravindra]` any chance someone on your end might be able to look at this? We'd also have to make changes in C++, so we probably would want to create a branch where we can collaborate on this change"
        },
        {
            "created_at": "2019-06-11T20:02:54.074Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1875?focusedCommentId=16861436) by Wes McKinney (wesm):*\n[~emkornfield@gmail.com] [~paul.e.taylor] any chance the three of us could collude to make this change? I can help with the C++ work if there is Java and JS work to happen at the same time"
        },
        {
            "created_at": "2019-06-12T05:30:55.622Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1875?focusedCommentId=16861764) by Micah Kornfield (emkornfield@gmail.com):*\n@wesm I should be able to fit this in for Java.  What timeframe were you thinking?"
        },
        {
            "created_at": "2019-06-12T13:51:25.493Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1875?focusedCommentId=16862118) by Wes McKinney (wesm):*\nAnytime, doesn't need to be for 0.14"
        },
        {
            "created_at": "2019-07-31T05:01:07.430Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1875?focusedCommentId=16896779) by Ji Liu (tianchen92):*\n[~emkornfield@gmail.com]\u00a0Not familiar with integration. Does this mean replace `JsonFileWriter#generator.writeNumber`\u00a0with `writeString`\u00a0for BigInt\uff1f"
        },
        {
            "created_at": "2019-07-31T21:25:28.346Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1875?focusedCommentId=16897538) by Micah Kornfield (emkornfield@gmail.com):*\nI would need to double check the code, but yes I believe it is in JsonFileWriter.\u00a0 The idea is that javascript can better parse the longs as JSON strings then as JSON numbers."
        },
        {
            "created_at": "2019-07-31T21:25:49.799Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1875?focusedCommentId=16897539) by Micah Kornfield (emkornfield@gmail.com):*\nWe would also need to update the read path, and coordinate with contributors from the other implementations."
        },
        {
            "created_at": "2019-08-01T02:44:50.323Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1875?focusedCommentId=16897714) by Ji Liu (tianchen92):*\n[~emkornfield@gmail.com] Thanks for clarify, what about I creating a new branch and invite people who are interested in other implementations to coordinate in Github (I can help with java side) ), once all implementations works done, we could get it merged."
        },
        {
            "created_at": "2019-08-01T03:07:17.445Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1875?focusedCommentId=16897719) by Micah Kornfield (emkornfield@gmail.com):*\nI created:\u00a0<https://github.com/apache/arrow/tree/integration_ints_as_strings>"
        },
        {
            "created_at": "2019-08-01T03:11:03.911Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1875?focusedCommentId=16897720) by Ji Liu (tianchen92):*\n(y)\u00a0Nice! I submitted a PR for java side."
        },
        {
            "created_at": "2019-08-16T06:22:03.418Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1875?focusedCommentId=16908774) by Micah Kornfield (emkornfield@gmail.com):*\nThe java side to handle this change has been checked in, and is backwards compatible with the existing integration tests.\u00a0 Thanks `[~tianchen92]`"
        },
        {
            "created_at": "2019-09-10T15:23:01.275Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1875?focusedCommentId=16926726) by Wes McKinney (wesm):*\nResolved by PR https://github.com/apache/arrow/commit/48594171ca827e6151093c4424d547fe26c7d755"
        }
    ]
}