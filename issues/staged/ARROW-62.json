{
    "issue": {
        "title": "Format: Are the nulls bits 0 or 1 for null values?",
        "body": "***Note**: This issue was originally created as [ARROW-62](https://issues.apache.org/jira/browse/ARROW-62). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nAs brought up by Dan Robinson on the mailing list (thank you for catching this!), there is an inconsistency in the format documents in the representation of nulls with the ValueVectors code import \u2013 since I drafted these format documents initially I'll take the blame for the inconsistency, but:\n\n- Drill / ValueVectors uses the value 0 for null data, and 1 for non-null data\n- The format document currently states the opposite (values are null if the bit is set)\n\nI can see arguments both ways, but one argument for the ValueVectors style is that values must be explicitly set to be non-null, versus uninitialized values being accidentally interpreted as being non-null. When initializing a bitmap, one can `memset` the bits to 0, then set then to 1 when non-null values are appended during construction.",
        "created_at": "2016-03-11T00:24:56.000Z",
        "updated_at": "2016-10-04T23:01:46.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Format",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2016-03-25T02:20:05.000Z",
        "milestone": 2
    },
    "comments": [
        {
            "created_at": "2016-03-13T20:34:10.243Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-62?focusedCommentId=15192525) by Jacques Nadeau (jnadeau):*\nI consider the bitmap to be a validity map as opposed to a null map. I've also seen a couple places where it is nice to zero out values that are null using the zero in the bitmap without a condition... although I can't remember where we took advantage of this previously."
        },
        {
            "created_at": "2016-03-14T01:22:55.438Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-62?focusedCommentId=15192596) by Dan Robinson (danrobinson010@gmail.com):*\nBeing able to bitwise-& against the null bitmask definitely seems nice, although (returning to my other idea from the e-mail list) if the spec required values in nulled slots to be zeroed out, you wouldn't even have to do this."
        },
        {
            "created_at": "2016-03-14T03:33:08.397Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-62?focusedCommentId=15192701) by Dan Robinson (danrobinson010@gmail.com):*\nFor whatever it's worth: it seems PostgreSQL uses 0 in a null bitmap to indicate null values (http://www.postgresql.org/docs/8.0/static/storage-page-layout.html) while MySQL and SQL Server use 1 (https://dev.mysql.com/doc/internals/en/null-bitmap.html, http://www.sqlpassion.at/archive/2011/06/29/the-mystery-of-the-null-bitmap-mask/). And of course Drill uses 0, while Numpy uses 1. So there does not seem to be an established convention yet. IMHO I guess I think the validity-map approach that uses 0 is a little more elegant.\n"
        },
        {
            "created_at": "2016-03-14T03:50:43.906Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-62?focusedCommentId=15192711) by Wes McKinney (wesm):*\nSince we already have production code (i.e. Drill) using 0 as null, and it's consistent with Postgres, I'm inclined to stick with that.\n\nI expect that the null bitmap will also be used in practice in conjunction with evaluated predicates, so in aggregations you will include values that are included and not null. If nulls are 1, then you need to use `included[i] & ~nulls[i]` versus `included[i] & valid[i]` "
        },
        {
            "created_at": "2016-03-23T02:17:12.071Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-62?focusedCommentId=15207747) by Wes McKinney (wesm):*\nsee patch https://github.com/apache/arrow/pull/34"
        },
        {
            "created_at": "2016-03-25T02:20:05.838Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-62?focusedCommentId=15211311) by Wes McKinney (wesm):*\nIssue resolved by pull request 34\n<https://github.com/apache/arrow/pull/34>"
        }
    ]
}