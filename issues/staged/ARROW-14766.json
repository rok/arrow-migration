{
    "issue": {
        "title": "[Python] compute function arguments cannot be passed by name, despite the exposed signature",
        "body": "***Note**: This issue was originally created as [ARROW-14766](https://issues.apache.org/jira/browse/ARROW-14766). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nExample:\r\n```python\n\r\n>>> pc.is_in_meta_binary?\r\nSignature: pc.is_in_meta_binary(values, value_set, *, memory_pool=None)\r\nDocstring:\r\nFind each element in a set of values.\r\n\r\nFor each element in `values`, return true if it is found in `value_set`,\r\nfalse otherwise.\r\n\r\nParameters\r\n----------\r\nvalues : Array-like or scalar-like\r\n    Argument to compute function\r\nvalue_set : Array-like or scalar-like\r\n    Argument to compute function\r\nmemory_pool : pyarrow.MemoryPool, optional\r\n    If not passed, will allocate memory from the default memory pool.\r\nFile:      ~/arrow/dev/python/pyarrow/compute.py\r\nType:      function\r\n```\r\n```python\n\r\n>>> pc.is_in_meta_binary([\"a\", \"b\", \"c\"], [\"a\", \"b\"])\r\n<pyarrow.lib.BooleanArray object at 0x7f63c5dfad00>\r\n[\r\n  true,\r\n  true,\r\n  false\r\n]\r\n>>> pc.is_in_meta_binary([\"a\", \"b\", \"c\"], value_set=[\"a\", \"b\"])\r\nTraceback (most recent call last):\r\n  File \"<ipython-input-5-ea763d55e2a9>\", line 1, in <module>\r\n    pc.is_in_meta_binary([\"a\", \"b\", \"c\"], value_set=[\"a\", \"b\"])\r\nTypeError: wrapper() got an unexpected keyword argument 'value_set'\r\n```\r\n\r\nTwo possible solutions:\r\n- mark the argument positional-only\n- (better) change the generated wrapper to accept said named arguments\n",
        "created_at": "2021-11-18T13:28:41.000Z",
        "updated_at": "2021-12-17T17:11:19.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-12-15T12:30:59.000Z"
    },
    "comments": [
        {
            "created_at": "2021-11-18T13:28:50.084Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14766?focusedCommentId=17445926) by Antoine Pitrou (apitrou):*\ncc `[~jorisvandenbossche]` \u00a0"
        },
        {
            "created_at": "2021-11-18T13:35:55.398Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14766?focusedCommentId=17445930) by Joris Van den Bossche (jorisvandenbossche):*\nYes, that is what I noticed in ARROW-14732 as well, and before that fix, you also got a very confusing error message of you tried to use it as a keyword argument.\r\n\r\nWith ARROW-14732, the error messaging now basically is as if it's positional only (your first bullet point, in which case it would indeed be nice to also reflect this in the signature).\r\n\r\nPersonally, I don't really see the need to also allow them as named arguments. The meta kernel you use above in your example is a bit of an exception, but in general there is not much use in being able to do something like `pc.add(x=[0, 1, 2], y=[1, 2, 3])` (moreover because we are not very consistent in the naming of those positional arguments, and allowing them to be used as keywords would bake in those names)"
        },
        {
            "created_at": "2021-12-14T16:56:13.122Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14766?focusedCommentId=17459314) by Antoine Pitrou (apitrou):*\nOk, I think we can just update the reflected signature to indicate that the parameters are positional-only."
        },
        {
            "created_at": "2021-12-15T12:30:59.670Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14766?focusedCommentId=17459903) by Joris Van den Bossche (jorisvandenbossche):*\nIssue resolved by pull request 11951\n<https://github.com/apache/arrow/pull/11951>"
        }
    ]
}