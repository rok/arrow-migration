{
    "issue": {
        "title": "[Rust] Soundness issues via `Buffer` methods",
        "body": "***Note**: This issue was originally created as [ARROW-7624](https://issues.apache.org/jira/browse/ARROW-7624). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThis is my first time creating an issue, so please let me know if I need to do anything differently.\r\n\r\nThere are a few soundness issues with the methods currently available on `Buffer`.\r\n1. Using a combination of `from_raw_parts` and `data`/`as_ref`, e.g. `Buffer::from_raw_parts(ptr, len).data()`, it's possible to dereference arbitrary memory locations, break pointer aliasing rules, etc. To fix this,\u00a0`from_raw_parts` needs to be `unsafe`, and the safety requirements on `ptr` and `len` should be specified. (For an example of a similar method in the standard library, see [`std::slice::from_raw_parts`](https://doc.rust-lang.org/std/slice/fn.from_raw_parts.html).)\n1. By implementing the `ArrowNativeType` trait on a struct, it's possible for a user to create invalid values of that struct using the `typed_data` method. To fix this, the `ArrowNativeType` trait needs to be `unsafe`, or users need to be prevented from implementing `ArrowNativeType` on arbitrary types. Alternatively, the `typed_data` method could be made unsafe.\n1. It's possible to create invalid values of the `bool` type using `typed_data`. ([Values of `bool` must be `0x00` or `0x01`](https://doc.rust-lang.org/nomicon/what-unsafe-does.html); arbitrary `u8` cannot safely be reinterpreted as `bool`.) To fix this, `typed_data::<bool>()` needs to iterate over all the data and check that all the elements are valid, or `typed_data` needs to be marked `unsafe`.",
        "created_at": "2020-01-20T23:30:16.000Z",
        "updated_at": "2020-02-14T20:52:39.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-02-12T03:15:46.000Z"
    },
    "comments": [
        {
            "created_at": "2020-01-21T01:22:39.493Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7624?focusedCommentId=17019793) by Paddy Horan (paddyhoran):*\nThanks for reporting this `[~jturner314]`.\r\n\r\nWe recently had a discussion about these kinds of issues on the [mailing list\\|[https://lists.apache.org/thread.html/r07f4ba469563a764d19fd08622adbcd0e3ac895a6e8165ae44b8dee8%40%3Cdev.arrow.apache.org%3E].]\u00a0 I'm going to start trying to clean them up soon."
        },
        {
            "created_at": "2020-02-12T03:15:46.079Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7624?focusedCommentId=17035016) by Paddy Horan (paddyhoran):*\nIssue resolved by pull request 6397\n<https://github.com/apache/arrow/pull/6397>"
        }
    ]
}