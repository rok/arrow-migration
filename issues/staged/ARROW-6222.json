{
    "issue": {
        "title": "[Python] Serialising numpy array yields `pyarrow.lib.ArrowNotImplementedError: list<item: float>`",
        "body": "***Note**: This issue was originally created as [ARROW-6222](https://issues.apache.org/jira/browse/ARROW-6222). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI want to serialize pytorch tensors, but as they are not implemented in arrow yet I convert them to a numpy array like this: `t.numpy()` (<https://pytorch.org/docs/stable/tensors.html?highlight=numpy#torch.Tensor.numpy)> which returns an {{ndarray{{. My tensors are 1-dimensional, the result is a 1-dimensional ndarray.\r\n\r\nCalling `df.to_feather(\"fname.feather\")` yields `pyarrow.lib.ArrowNotImplementedError: list<item: float>`.\r\n\r\nNext I tried `pyarrow.array(t.numpy())` which results in `pyarrow.lib.ArrowInvalid: ('Could not convert [\n  0.00500498,\n  -0.00732583,\n... with type pyarrow.lib.FloatArray: did not recognize Python value type when inferring an Arrow data type', 'Conversion failed for column 0 with type object')`.\r\n\r\nI would appreciate if this would work more out-of-the-box.\r\n\r\nUpon request a full example:\r\n```python\n\r\nimport torch\r\nimport pyarrow\r\nimport pandas as pd\r\npd.DataFrame([[torch.ones(2)]], columns=[\"0\"]).to_feather(\"fname.feather\")\r\npd.DataFrame([[torch.ones(2).numpy()]], columns=[\"0\"]).to_feather(\"fname.feather\")\r\npd.DataFrame([[pyarrow.array(torch.ones(2).numpy())]], columns=[\"0\"]).to_feather(\"fname.feather\")\r\n```\r\n\r\n\r\n```python\n\r\nArrowInvalid: ('Could not convert tensor([1., 1.]) with type Tensor: did not recognize Python value type when inferring an Arrow data type', 'Conversion failed for column 0 with type object')\r\nArrowNotImplementedError: list<item: float>\r\nArrowInvalid: ('Could not convert [\\n  1,\\n  1\\n] with type pyarrow.lib.FloatArray: did not recognize Python value type when inferring an Arrow data type', 'Conversion failed for column 0 with type object')\r\n```",
        "created_at": "2019-08-13T12:38:45.000Z",
        "updated_at": "2019-10-16T19:58:16.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2019-08-13T12:44:17.194Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6222?focusedCommentId=16906156) by Joris Van den Bossche (jorisvandenbossche):*\nCan you try to make a reproducible example? Can you show the shape, dtype and `type(..)` if `df` and `t.numpy()` ?\r\n"
        },
        {
            "created_at": "2019-08-13T13:03:57.635Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6222?focusedCommentId=16906167) by Marcel Ackermann (dreamflasher):*\nSure:\r\n\r\n```python\n\r\nimport torch\r\nimport pyarrow\r\nimport pandas as pd\r\npd.DataFrame([[torch.ones(2)]], columns=[\"0\"]).to_feather(\"fname.feather\")\r\npd.DataFrame([[torch.ones(2).numpy()]], columns=[\"0\"]).to_feather(\"fname.feather\")\r\npd.DataFrame([[pyarrow.array(torch.ones(2).numpy())]], columns=[\"0\"]).to_feather(\"fname.feather\")\r\n```\r\n\r\n\r\n```python\n\r\nArrowInvalid: ('Could not convert tensor([1., 1.]) with type Tensor: did not recognize Python value type when inferring an Arrow data type', 'Conversion failed for column 0 with type object')\r\nArrowNotImplementedError: list<item: float>\r\nArrowInvalid: ('Could not convert [\\n  1,\\n  1\\n] with type pyarrow.lib.FloatArray: did not recognize Python value type when inferring an Arrow data type', 'Conversion failed for column 0 with type object')\r\n```\r\n"
        },
        {
            "created_at": "2019-08-13T13:17:59.142Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6222?focusedCommentId=16906184) by Joris Van den Bossche (jorisvandenbossche):*\nFocusing on the cases independent of pytorch first:\r\n\r\n- Example 2: `pd.DataFrame([[np.array([1, 1])]], columns=[\"0\"]).to_feather('test.feather')` failing is because the feather format does not support the list type (you would get a similar error when starting from a DataFrame with lists as values in a column: `pd.DataFrame({'a': [[1, 1], [2, 2, 2]]\\}).to_feather('test.feather')`)\n- Example 3: `pa.array(np.ones(2))` itself is working, and is giving a FloatArray or DoubleArray. But you are then creating a DataFrame with such pyarrow FloatArray a scalar element in the column. And pyarrow does not yet recognize its own arrays as values (easy reproducer: `pa.array([pa.array(np.ones(2))])`). This is related to ARROW-5295.\n  \n  And then the first example boils down to `pyarrow` not recognizing pytorch Tensor objects in its inference. "
        },
        {
            "created_at": "2019-08-13T13:21:44.851Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6222?focusedCommentId=16906189) by Marcel Ackermann (dreamflasher):*\nThank you for the explanation `[~jorisvandenbossche]`. Is there currently any way to serialize a dataframe that contains vectors (1d tensors) with feather?"
        },
        {
            "created_at": "2019-08-13T13:27:14.776Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6222?focusedCommentId=16906196) by Joris Van den Bossche (jorisvandenbossche):*\n>  Is there currently any way to serialize a dataframe that contains vectors (1d tensors) with feather?\r\n\r\nI don't think so. At least not at the moment, as feather does not support a list type. But see ARROW-5510 for future plans to at some point be updated to the arrow IPC format (which will then support list types).\r\nAt the moment, I think parquet is the better alternative if you want (simple, non-nested) list support in file format supported by Arrow."
        },
        {
            "created_at": "2019-08-13T13:34:24.229Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6222?focusedCommentId=16906204) by Marcel Ackermann (dreamflasher):*\nThank you very much! Looking forward to list support then!"
        },
        {
            "created_at": "2019-08-13T13:55:56.166Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6222?focusedCommentId=16906229) by Wes McKinney (wesm):*\nSeems like the error messages could be improved in the short term"
        }
    ]
}