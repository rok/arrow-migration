{
    "issue": {
        "title": "[C++][Dataset] Also allow integer partition fields to be dictionary encoded",
        "body": "***Note**: This issue was originally created as [ARROW-10099](https://issues.apache.org/jira/browse/ARROW-10099). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIn ARROW-8647, we added the option to indicate that you partition field columns should be dictionary encoded, but it currently does only do this for string type, and not for integer type (wiht the reasoning that for integers, it is not giving any memory efficiency gains to use dictionary encoding). \r\n\r\nIn dask, they have been using categorical dtypes for _all_ partition fields, also if they are integers. They would like to keep doing this (apart from memory efficiency, using categorical/dictionary type also gives information about all uniques values of the column, without having to calculate this), so it would be nice to enable this use case. \r\n\r\nSo I think we could either simply always dictionary encode also integers when `max_partition_dictionary_size` indicates partition fields should be dictionary encoded, or either have an additional option to indicate also integer partition fields should be encoded (if the other option indicates dictionary encoding should be used).\r\n\r\nBased on feedback from the dask PR using the dataset API at https://github.com/dask/dask/pull/6534#issuecomment-698723009\r\n\r\ncc `[~rjzamora]` `[~bkietz]`",
        "created_at": "2020-09-25T19:40:45.000Z",
        "updated_at": "2020-10-07T20:39:53.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-10-07T20:39:38.000Z"
    },
    "comments": [
        {
            "created_at": "2020-10-07T20:39:38.112Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10099?focusedCommentId=17209852) by Ben Kietzman (bkietz):*\nIssue resolved by pull request 8367\n<https://github.com/apache/arrow/pull/8367>"
        }
    ]
}