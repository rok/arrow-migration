{
    "issue": {
        "title": "[C++][Dataset] Provide more robust handling of comparison guarantees in the presence of implicit casts",
        "body": "***Note**: This issue was originally created as [ARROW-11562](https://issues.apache.org/jira/browse/ARROW-11562). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nAfter ARROW-8919 it's possible that a field reference may be wrapped in an implicit cast, which complicates destructuring during expression simplification. In particular, some errors can arise as a result of assuming that casts will preserve numeric ordering:\r\n\r\n```c++\n\r\nint two_28 = 1 << 28;\r\n\r\nauto partition_expr = less_equal(field_ref(\"i32\"), literal(two_28 + 1));\r\n\r\nauto filter = greater(\r\n  cast(field_ref(\"i32\"), float32()),\r\n  literal(float(two_28)));\r\n```\r\n\r\nCurrently the RHS of the filter and the partition expression will be considered equal since casting `two_28+1` to float results in the same value as casting `two_28` to float (due to limited FP precision). Since `x <= y` and `x > y` are disjoint, the partition will skipped entirely including any rows where `i32 == two_28+1` (which **should** be selected by this filter).",
        "created_at": "2021-02-08T21:49:57.000Z",
        "updated_at": "2022-07-12T14:04:23.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-07-12T14:04:23.843Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11562?focusedCommentId=17565581) by @toddfarmer:*\nThis issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned. Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon."
        }
    ]
}