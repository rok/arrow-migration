{
    "issue": {
        "title": "[Dev] Automatically run merge script in venv",
        "body": "***Note**: This issue was originally created as [ARROW-11870](https://issues.apache.org/jira/browse/ARROW-11870). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nRunning the merge script needs some additional boilerplate for people who don't already use a Conda environment or similar.\r\n\r\nWe could provide a wrapper script `dev/merge_arrow_pr.sh` that:\r\n1) checks if a virtual env `dev/.venv` exists\r\n2) if not, creates it and installs the required dependencies\r\n3) runs the Python merge script in the virtual env\r\n",
        "created_at": "2021-03-05T11:14:09.000Z",
        "updated_at": "2021-03-09T12:17:23.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Developer Tools",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-03-09T12:17:16.000Z"
    },
    "comments": [
        {
            "created_at": "2021-03-05T16:41:05.248Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11870?focusedCommentId=17296167) by Antoine Pitrou (apitrou):*\n`[~jorgecarleitao]` Would that help?"
        },
        {
            "created_at": "2021-03-05T17:23:11.026Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11870?focusedCommentId=17296219) by Jorge Leit\u00e3o (jorgecarleitao):*\nMaybe I did not express the issue very well: the larger problem is not the number of steps, but the necessary context switching associated with them:\r\n \\* IDE with workspace on the implementation (working) -> github (e.g. for a final approval)\r\n \\* github -> terminal (merge script)\r\n \\* terminal -> Github (thank contributor)\r\n \\* Github -> IDE (resume work)\r\n\r\nI think that once the switch was made from X to the terminal (which often has to be opened and navigated to), what happens on it is a small task.\r\n\r\nThinking about this, imo the burden would be significantly reduced if we would support merging directly via a github comment. The process would go as: once we want to merge PR X, we comment on its thread:\r\n```java\n\r\n@botx please merge\n```\r\nThis triggers an action that runs the same process that we perform on the terminal, including a check on the JIRA components and all of that. The bot would reply back if checks fail. If not, it would merge as usual, update JIRA, etc. With this flow, we would end up with:\r\n \\* IDE with workspace on the implementation (working) -> github (e.g. for a final approval, merge comment and thank you)\r\n \\* Github -> IDE (resume work)\r\n\r\nThis would be as close as we can get from pressing \"merge\" on github, with the difference that we do all the sanity checks, prepare the commit message, update JIRA, etc, as we currently do from our terminals.\r\n\r\nIs there a concern with this?"
        },
        {
            "created_at": "2021-03-05T17:26:09.200Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11870?focusedCommentId=17296222) by Antoine Pitrou (apitrou):*\nI don't know, I just don't write github bots :-)\r\n\r\nBut since the script asks questions, it sounds a bit weird to turn it into a bot. How would the bot ask the necessary questions?"
        },
        {
            "created_at": "2021-03-05T17:39:15.696Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11870?focusedCommentId=17296228) by Jorge Leit\u00e3o (jorgecarleitao):*\n:)\u00a0 I would not mind writing one for this.\r\n\r\nI never gave a different answer than \"enter, enter, enter, enter\" when all looked good. If something would not look good for the bot, it should just fail and reply something on the PR.\r\n\r\nThe most likely scenario is a merge conflict that the contributor needs to fix. In this case, the bot pings the user directly on the PR, instead of us having to do it, which is great!\r\n\r\nless common cases are:\r\n \\* components missing. IMO we should just derive them from the PR's title when they do not exist. They must exist on the PR or the bot complaints like we already do.\r\n \\* assignee missing. This is manual as there is no SSO experience on Jira that we can use to derive a user <> github user relation\r\n \\* version. It happens during RCs and the like. Those cases fall into the \"manual\" merge (or we can also extend the bot to understand \"@bot please merge vX.Y.Z\" if we want to go crazy)\r\n\r\n\u00a0\r\n\r\n\u00a0"
        },
        {
            "created_at": "2021-03-05T17:41:17.301Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11870?focusedCommentId=17296230) by Antoine Pitrou (apitrou):*\ncc `[~npr]` `[~wesm]`"
        },
        {
            "created_at": "2021-03-05T18:09:41.486Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11870?focusedCommentId=17296248) by Neal Richardson (npr):*\nI doubt that ASF INFRA would allow us a GitHub Actions comment bot with sufficient permissions to make commits on apache/arrow master branch. Are you aware of any other Apache projects with this workflow?"
        },
        {
            "created_at": "2021-03-09T12:17:16.365Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11870?focusedCommentId=17298038) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 9637\n<https://github.com/apache/arrow/pull/9637>"
        }
    ]
}