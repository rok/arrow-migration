{
    "issue": {
        "title": "[Python] Expose compressed file readers as NativeFile",
        "body": "***Note**: This issue was originally created as [ARROW-3576](https://issues.apache.org/jira/browse/ARROW-3576). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n",
        "created_at": "2018-10-20T14:23:54.000Z",
        "updated_at": "2019-06-03T12:30:30.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2018-10-29T13:04:07.000Z"
    },
    "comments": [
        {
            "created_at": "2018-10-20T14:24:45.194Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3576?focusedCommentId=16657878) by Wes McKinney (wesm):*\ne.g. similar to `gzip.GzipFile` in Python"
        },
        {
            "created_at": "2018-10-23T16:21:04.060Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3576?focusedCommentId=16660915) by Antoine Pitrou (apitrou):*\n`NativeFile` currently requires a `RandomAccessFile`, but compressed files are mere `InputStream`. Fixing this will require rethinking `NativeFile` semantics."
        },
        {
            "created_at": "2018-10-23T17:46:58.332Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3576?focusedCommentId=16661039) by Wes McKinney (wesm):*\nIndeed, it would need to be modified to support file handles not supporting seek"
        },
        {
            "created_at": "2018-10-24T16:04:05.502Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3576?focusedCommentId=16662471) by Antoine Pitrou (apitrou):*\nWhat should the API be here? `CompressedReader` and `CompressedWriter` classes (or `CompressedInputStream` `CompressedOutputStream`) would mirror the C++ API and make the implementation easy."
        },
        {
            "created_at": "2018-10-24T16:09:27.929Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3576?focusedCommentId=16662475) by Wes McKinney (wesm):*\nI was thinking we could change NativeFile to have a single shared_ptr to the base FileInterface and then cast pointers depending on the capabilities of the file."
        },
        {
            "created_at": "2018-10-24T16:12:11.540Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3576?focusedCommentId=16662477) by Antoine Pitrou (apitrou):*\nThat's a possible implementation, but I was asking more about the Python-visible API. Do we add a compression argument to the OSFile constructor? Something else?"
        },
        {
            "created_at": "2018-10-24T19:38:47.710Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3576?focusedCommentId=16662739) by Wes McKinney (wesm):*\nOh I see. I think having `CompressedReader` that takes any readable `NativeFile` (and CompressedWriter + writable NativeFile) is a good strategy"
        },
        {
            "created_at": "2018-10-29T13:04:07.342Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3576?focusedCommentId=16667171) by Wes McKinney (wesm):*\nIssue resolved by pull request 2839\n<https://github.com/apache/arrow/pull/2839>"
        }
    ]
}