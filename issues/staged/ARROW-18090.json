{
    "issue": {
        "title": "Dictionary Style array for Keywords or Tags ",
        "body": "***Note**: This issue was originally created as [ARROW-18090](https://issues.apache.org/jira/browse/ARROW-18090). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI want to efficiently encode lists of tags for each element in my database. In my case I have 30 tags, and a few are assigned to each of my ~20m records. Here's a simplified example of 5 records:\r\n \\* pe, keylogger, cryptojack\r\n \\* pe, packed\r\n \\* pe, cryptojack, c2\r\n \\* pe, keylogger, c2\r\n \\* pe\r\n\r\nRight now I have to store these in a List<Utf8> and have huge amounts of duplicate data. The dictionary array looks almost perfect for this task. I just want to allow for a List<T> instead of just T for the allowed primitive index type in a dictionary.\r\n\r\n\u00a0",
        "created_at": "2022-10-18T22:01:46.000Z",
        "updated_at": "2022-10-24T14:53:47.000Z",
        "labels": [
            "Migrated from Jira",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-10-19T00:12:00.856Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18090?focusedCommentId=17619896) by David Li (lidavidm):*\nI might be missing something, but would `List<Dictionary<Int32, Utf8>>` work?"
        },
        {
            "created_at": "2022-10-24T14:34:38.884Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18090?focusedCommentId=17623219) by Sven Cattell (comath):*\n`[~lidavidm]` \u00a0 I'm not sure how to create that with the Rust API. Is it possible to build that nicely in other APIs?"
        },
        {
            "created_at": "2022-10-24T14:53:47.202Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18090?focusedCommentId=17623229) by David Li (lidavidm):*\nI'm not familiar with the Rust APIs, but in Python/C++ it's pretty straightforward:\r\n\r\n```python\n\r\n>>> import pyarrow as pa\r\n>>> ty = pa.list_(pa.dictionary(pa.int16(), pa.string()))\r\n>>> ty\r\nListType(list<item: dictionary<values=string, indices=int16, ordered=0>>)\r\n>>> pa.array([[\"tag1\", \"tag2\"], [\"tag1\", \"tag3\"]], ty)\r\n<pyarrow.lib.ListArray object at 0x7fc4d89ca940>\r\n[\r\n\r\n  -- dictionary:\r\n    [\r\n      \"tag1\",\r\n      \"tag2\",\r\n      \"tag3\"\r\n    ]\r\n  -- indices:\r\n    [\r\n      0,\r\n      1\r\n    ],\r\n\r\n  -- dictionary:\r\n    [\r\n      \"tag1\",\r\n      \"tag2\",\r\n      \"tag3\"\r\n    ]\r\n  -- indices:\r\n    [\r\n      0,\r\n      2\r\n    ]\r\n]\r\n```"
        }
    ]
}