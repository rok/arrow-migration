{
    "issue": {
        "title": "[C++][Dataset] Partitioning::Format on nulls",
        "body": "***Note**: This issue was originally created as [ARROW-10438](https://issues.apache.org/jira/browse/ARROW-10438). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWriting a dataset with null partition keys is currently untested. Ensure the behavior is documented and correct",
        "created_at": "2020-10-30T20:28:23.000Z",
        "updated_at": "2021-02-24T15:34:50.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-02-24T15:34:41.000Z"
    },
    "comments": [
        {
            "created_at": "2021-01-20T02:50:53.720Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10438?focusedCommentId=17268333) by Weston Pace (westonpace):*\nI've created a test for this.\u00a0 Currently the code bails (Grouping on a field with nulls).\u00a0 It appears the default behavior in Hive (<https://github.com/apache/hive/blob/1d5e6bdff99cd5aa7b885f001635d7231c3b9d44/common/src/java/org/apache/hadoop/hive/common/FileUtils.java#L271)> is to use the string \"__HIVE_DEFAULT_PARTITION__\" as the value.\u00a0 Googling around for this value confirms that seems to be how it is used in practice.\r\n\r\n\u00a0\r\n\r\nFurthermore, in Hive, empty strings also map to this value.\u00a0 So empty strings and null will map to the same partition.\u00a0 I'm assuming we want compatibility with Hive in this way?\u00a0 Impala did things slightly differently to avoid the ambiguity (https://issues.apache.org/jira/browse/IMPALA-252) by choosing to reject with an error data that had empty strings.\u00a0 However, this sort of strictness doesn't seem quite in keeping with Arrow."
        },
        {
            "created_at": "2021-01-20T02:58:42.186Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10438?focusedCommentId=17268335) by Weston Pace (westonpace):*\nAh, even worse, it appears to be configurable...\r\n> ##### hive.exec.default.partition.name\n> - Default Value: `__HIVE_DEFAULT_PARTITION__`\n> - Added In: Hive 0.6.0\n> \n> The default partition name in case the dynamic partition column value is null/empty string or any other values that cannot be escaped. This value must not contain any special character used in HDFS URI (e.g., ':', '%', '/' etc). The user has to be aware that the dynamic partition value should not contain this value to avoid confusions."
        },
        {
            "created_at": "2021-01-20T13:00:25.393Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10438?focusedCommentId=17268559) by Joris Van den Bossche (jorisvandenbossche):*\nI am not sure we should exactly follow the (potentially non-ideal) behaviour of Hive, here. Or at least have the option (or default, and have hive-behaviour as option) for different behaviour that can preserve the actual values would be nice? (there will also be many people that use arrow datasets to write hive-like datastores without ever actually interacting with hive)\r\n\r\nAnother source about the topic: https://kb.databricks.com/data/null-empty-strings.html, which concludes with \"This is the expected behavior. It is inherited from Apache Hive.\" and \"Solution: In general, you shouldn\u2019t use both null and empty strings as values in a partitioned column.\"\r\n\r\nSome random other first thoughts:\r\n\r\n- A default could also be to error? (so users will at least be aware of the problem, and of that it will loose empty strings)\n- We also need to think about how to do this for directory partitioning, not only for hive partitioning (and using a hive-specific name for a partitioning schema that is not compatible with Hive might make less sense?)\n- We currently already read empty string partition values from `/key=/` directory names just fine, although this is probably not tested and might only work accidentally (and might also not work for other readers like spark?)\n- This might also interact with the discussion whether to include the partition fields in the actual data files or not (because when not left out, the actual file could still hold the real value to distinguish empty vs null)\n  \n  As another observation: dask simply drops rows with missing values in the partition column (silently), but I think that is just inherited by the fact that pandas' groupby implementation by default drops missing values, and not necessarily intentional design."
        },
        {
            "created_at": "2021-01-20T16:09:47.444Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10438?focusedCommentId=17268666) by Weston Pace (westonpace):*\nPerhaps we can get away with two string options for each partitioning scheme,\u00a0**empty_fallback_value** and **null_fallback_value**.\u00a0 The default for both would be the empty string but the behavior would be slightly different.\r\n\r\nDefault behavior for hive partitioning:\r\n\r\n\"key=_HIVE_DEFAULT_PARTITION_\" would map to \"null\" on read and on write\r\n \"key=\" would map to an empty string on read, empty strings would result in error on write\r\n\r\nDefault behavior for directory partitioning:\r\n\r\nNothing would map to \"null\" on read, null strings would result in error on write\r\n Nothing would map to empty on read, empty strings would result in error on write.\r\n\r\nThis way hive datasets can be read by default.\u00a0 Datasets with null partitions will write in hive format by default.\u00a0 Datasets with empty strings will throw an error but this can be overridden if the customer desires the hive behavior (by setting \"empty_fallback_value\" to \"_HIVE_DEFAULT_PARTITION_\")\u00a0 By default no data will be lost (since empty strings will error).\r\n\r\n\u00a0\r\n\r\nFor directory partitioning we won't do anything surprising and will just error on missing data.\u00a0 Customers can choose to map values how they want."
        },
        {
            "created_at": "2021-01-20T16:59:48.379Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10438?focusedCommentId=17268695) by Weston Pace (westonpace):*\nAlthough, on further thought, that would prevent the ability to create `key=` style partitions.\u00a0 That would seem ok but in the unlucky event some other system expects the existence of `key=` style partitions it would be pretty frustrating.\u00a0 Also, one small change, I'm preferring \"empty_Fallback\" and \"null_fallback\" (without the _value) since these are labels and not values.\r\n\r\nAnother approach could be to introduce a third option \"hive_compatibility\" which defaults to True.\r\n\r\n\u00a0\r\n\n|empty_fallback|null_fallback|hive_compatibility|Read null|Write null|Read empty|Write empty|Allows Data Loss|\r|\n|-|-|-|-|-|-|-|-|-|\n|\"\" (default)|\"\\_HIVE\\_DEFAULT\\_PARTITION\\_\" (default)|True (default)|\\_HIVE\\_DEFAULT\\_PARITION\\_|\\_HIVE\\_DEFAULT\\_PARTITION\\_|Can't happen|Error|False|\r|\n|\\_HIVE\\_DEFAULT\\_PARTITION\\_|\"\\_HIVE\\_DEFAULT\\_PARTITION\\_\" (default)|True (default)|\\_HIVE\\_DEFAULT\\_PARITION\\_|\\_HIVE\\_DEFAULT\\_PARTITION\\_|Can't happen|\\_HIVE\\_DEFAULT\\_PARTITION\\_|True|\r|\n|\"\" (default)|\"\\_HIVE\\_DEFAULT\\_PARTITION\\_\" (default)|False|\\_HIVE\\_DEFAULT\\_PARITION\\_|\\_HIVE\\_DEFAULT\\_PARITION\\_|\"\"|\"\"|False|\r|\n|\"XYZ\"|\"XYZ\"|True|XYZ|XYZ|Can't happen|XYZ|True|\r|\n|\"XYZ\"|\"XYZ\"|False|Raise error on partition create|\u00a0|\u00a0|\u00a0|\u00a0|\r|\n|\"XYZ\"|\"ABC\"|True|Raise error on partition create|\u00a0|\u00a0|\u00a0|\u00a0|\r|\n|\"XYZ\"|\"ABC\"|False|XYZ|XYZ|ABC|ABC|False|\r|\n|\"XYZ\"|\"\"|False|\"\"|\"\"|XYZ|XYZ|False|\r|\n|\"\" (default)|\"XYZ\"|True|XYZ|XYZ|Can't happen|Error|False|\r<br>\r<br>Docstrings for the three options could look something like...\r<br>\r<br>\u00a0\r<br>\r<br>empty_fallback - Arrow will use this label when the value is empty.\u00a0 If hive_compatibility is True then the default behavior will raise an exception to prevent data loss.\u00a0 If you would like to maintain hive interoperability with empty strings set this to the same value as null_fallback.\r<br>\r<br>null_fallback - Arrow will use this label when the value is null.\u00a0 By default, for legacy reasons, this is \"\\_HIVE\\_DEFAULT\\_PARTITION\\_\"\r<br>\r<br>hive_compatibility - When this is True Arrow will not allow a separate fallback value for empty strings.\u00a0 Writing empty strings will produce an error.\u00a0 If you wish to silently map empty strings to null (normal hive behavior) then you should also set empty_fallback to match null_fallback.\u00a0 If False, then Arrow will require the empty fallback and null fallback to be separate values.\r<br>\r<br>\u00a0\r<br>\r<br>This all sounds complicated but it might \"just work\".\u00a0 The customer probably won't even be aware of the options until they attempt to write data with empty strings and then they will get an error.\u00a0 At that point they can agree to the data loss by changing \"empty_fallback\" or they can agree to breaking with Hive by disabling \"hive_compatibility\".\r|\n"
        },
        {
            "created_at": "2021-02-02T01:21:58.053Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10438?focusedCommentId=17276774) by Weston Pace (westonpace):*\n`[~jorisvandenbossche]` , I spoke with `[~bkietz]` a bit on this and, at the risk of putting words in his mouth, he also agreed with `I am not sure we should exactly follow the (potentially non-ideal) behaviour of Hive, here.`\r\n\r\nBen's assumption was that we would just omit the directory on null and, if `\\_HIVE\\_DEFAULT\\_PARTITION\\_` is present then just read in that string and allow the user to convert it to null at a later projection stage if that is what they desire.\r\n\r\nThat does make inference a little difficult in this case (right now HivePartitioning will attempt to infer int32 if possible).\r\n\r\nIt also puts the responsibility back on the user if they want to create a dataset compatible with other Hive tools.\r\n\r\nWe agreed it would be good to revisit the topic with you and see if you had any strong opinions."
        },
        {
            "created_at": "2021-02-24T15:34:41.666Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10438?focusedCommentId=17290020) by Ben Kietzman (bkietz):*\nIssue resolved by pull request 9323\n<https://github.com/apache/arrow/pull/9323>"
        }
    ]
}