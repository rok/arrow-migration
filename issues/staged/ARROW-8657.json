{
    "issue": {
        "title": "[Python][C++][Parquet] Forward compatibility issue from 0.16 to 0.17 when using version='2.0'",
        "body": "***Note**: This issue was originally created as [ARROW-8657](https://issues.apache.org/jira/browse/ARROW-8657). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWith the recent release of 0.17, the ParquetVersion is used to define the logical type interpretation of fields and the selection of the DataPage format.\r\n\r\nAs a result all parquet files that were created with ParquetVersion::V2 to get features such as unsigned int32s, timestamps with nanosecond resolution, etc are not forward compatible (cannot be read with 0.16.0). That's TBs of data in my case.\r\n\r\nThose two concerns should be separated. Given that that DataPageV2 pages were not written prior to 0.17 and in order to allow reading existing files, the existing version property should continue to operate as in 0.16 and inform the logical type mapping.\r\n\r\nSome consideration should be given to issue a release 0.17.1.\r\n\r\n\u00a0",
        "created_at": "2020-04-30T16:59:53.000Z",
        "updated_at": "2020-05-05T22:24:57.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-05-05T22:24:57.000Z"
    },
    "comments": [
        {
            "created_at": "2020-04-30T18:34:14.127Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8657?focusedCommentId=17096862) by Wes McKinney (wesm):*\n> As a result all parquet files that were created with ParquetVersion::V2 to get features such as unsigned int32s, timestamps with nanosecond resolution, etc are now unreadable. That's TBs of data in my case.\r\n\r\nTo clarify, they are _not_ unreadable, but rather they are not _forward compatible_ (files written by 0.17.0 with `version='2.0'` cannot be read with 0.16.0 at the moment). In general, forward compatibility should be approached carefully. \\***All**\\* files written by 0.16.0 are readable in 0.17.0"
        },
        {
            "created_at": "2020-04-30T18:37:15.326Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8657?focusedCommentId=17096866) by Wes McKinney (wesm):*\nFor the record, I think we need to introduce a new flag to toggle the use of newer logical types and associated casting/metadata behavior, and leave the 1.0/2.0 flag for its intended use, i.e. the DataPageV1 vs DataPageV2\r\n\r\nSo my suggested fix is:\r\n\r\n- Add the new flag that is separate from switching version 1.0/2.0\n- Revert the behavior in Python of version='2.0' to use DataPageV1, \\***but issue a FutureWarning to get people to use the new flag**\\*\n- In a future release (maybe 2 releases from now), `version='2.0'` will again write DataPageV2"
        },
        {
            "created_at": "2020-05-03T08:18:24.960Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8657?focusedCommentId=17098297) by Micah Kornfield (emkornfield@gmail.com):*\nA pointer on proper way of doing the future warning would be helpful (I put up a PR without one).\u00a0 We can add a follow-up Jira\u00a0 to the switch once the PR is merged."
        },
        {
            "created_at": "2020-05-05T22:24:57.700Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8657?focusedCommentId=17100294) by Wes McKinney (wesm):*\nIssue resolved by pull request 7089\n<https://github.com/apache/arrow/pull/7089>"
        }
    ]
}