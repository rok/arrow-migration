{
    "issue": {
        "title": "[C++] gcc6 warning re: arrow::internal::ArgSort",
        "body": "***Note**: This issue was originally created as [ARROW-8411](https://issues.apache.org/jira/browse/ARROW-8411). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nObserved on a Debian platform with gcc6 base\r\n\r\n```Java\n\r\nIn file included from /usr/include/c++/6/algorithm:62:0,\r\n                 from ../src/arrow/util/bit_util.h:55,\r\n                 from ../src/arrow/type_traits.h:26,\r\n                 from ../src/arrow/array.h:32,\r\n                 from ../src/arrow/compute/kernel.h:24,\r\n                 from ../src/arrow/dataset/filter.h:27,\r\n                 from ../src/arrow/dataset/partition.h:27,\r\n                 from /home/rock/code/arrow/cpp/src/arrow/dataset/partition.cc:18:\r\n/usr/include/c++/6/bits/stl_algo.h: In function 'void std::__insertion_sort(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<arrow::internal::ArgSort(const std::vector<T>&, Cmp&&) [with T = std::__cxx11::basic_string<int>; Cmp = std::less<std::__cxx11::basic_string<int> >]::<lambda(int64_t, int64_t)> >]':\r\n/usr/include/c++/6/bits/stl_algo.h:1837:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >' will change in GCC 7.1\r\n     __insertion_sort(_RandomAccessIterator __first,\r\n     ^~~~~~~~~~~~~~~~\r\n/usr/include/c++/6/bits/stl_algo.h:1837:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >' will change in GCC 7.1\r\nIn file included from /usr/include/c++/6/bits/stl_algo.h:61:0,\r\n                 from /usr/include/c++/6/algorithm:62,\r\n                 from ../src/arrow/util/bit_util.h:55,\r\n                 from ../src/arrow/type_traits.h:26,\r\n                 from ../src/arrow/array.h:32,\r\n                 from ../src/arrow/compute/kernel.h:24,\r\n                 from ../src/arrow/dataset/filter.h:27,\r\n                 from ../src/arrow/dataset/partition.h:27,\r\n                 from /home/rock/code/arrow/cpp/src/arrow/dataset/partition.cc:18:\r\n/usr/include/c++/6/bits/stl_heap.h: In function 'void std::__adjust_heap(_RandomAccessIterator, _Distance, _Distance, _Tp, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >; _Distance = int; _Tp = long long int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<arrow::internal::ArgSort(const std::vector<T>&, Cmp&&) [with T = std::__cxx11::basic_string<int>; Cmp = std::less<std::__cxx11::basic_string<int> >]::<lambda(int64_t, int64_t)> >]':\r\n/usr/include/c++/6/bits/stl_heap.h:209:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >' will change in GCC 7.1\r\n     __adjust_heap(_RandomAccessIterator __first, _Distance __holeIndex,\r\n     ^~~~~~~~~~~~~\r\nIn file included from /usr/include/c++/6/algorithm:62:0,\r\n                 from ../src/arrow/util/bit_util.h:55,\r\n                 from ../src/arrow/type_traits.h:26,\r\n                 from ../src/arrow/array.h:32,\r\n                 from ../src/arrow/compute/kernel.h:24,\r\n                 from ../src/arrow/dataset/filter.h:27,\r\n                 from ../src/arrow/dataset/partition.h:27,\r\n                 from /home/rock/code/arrow/cpp/src/arrow/dataset/partition.cc:18:\r\n/usr/include/c++/6/bits/stl_algo.h: In function 'void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >; _Size = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<arrow::internal::ArgSort(const std::vector<T>&, Cmp&&) [with T = std::__cxx11::basic_string<int>; Cmp = std::less<std::__cxx11::basic_string<int> >]::<lambda(int64_t, int64_t)> >]':\r\n/usr/include/c++/6/bits/stl_algo.h:1937:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >' will change in GCC 7.1\r\n     __introsort_loop(_RandomAccessIterator __first,\r\n     ^~~~~~~~~~~~~~~~\r\n/usr/include/c++/6/bits/stl_algo.h:1937:5: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >' will change in GCC 7.1\r\n/usr/include/c++/6/bits/stl_algo.h:1951:4: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >' will change in GCC 7.1\r\n    std::__introsort_loop(__cut, __last, __depth_limit, __comp);\r\n    ^~~\r\n/usr/include/c++/6/bits/stl_algo.h: In function 'std::vector<long long int> arrow::internal::ArgSort(const std::vector<T>&, Cmp&&) [with T = std::__cxx11::basic_string<int>; Cmp = std::less<std::__cxx11::basic_string<int> >]':\r\n/usr/include/c++/6/bits/stl_algo.h:1882:4: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >' will change in GCC 7.1\r\n    std::__insertion_sort(__first, __first + int(_S_threshold), __comp);\r\n    ^~~\r\n/usr/include/c++/6/bits/stl_algo.h:1887:2: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >' will change in GCC 7.1\r\n  std::__insertion_sort(__first, __last, __comp);\r\n  ^~~\r\n/usr/include/c++/6/bits/stl_algo.h:1965:4: note: parameter passing for argument of type '__gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >' will change in GCC 7.1\r\n    std::__introsort_loop(__first, __last,\r\n    ^~~\r\n```",
        "created_at": "2020-04-12T23:12:26.000Z",
        "updated_at": "2021-11-10T16:40:56.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-11-10T16:40:56.506Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8411?focusedCommentId=17441836) by Antoine Pitrou (apitrou):*\nThe diagnostic note makes the output a bit noisy but it is also entirely harmless, see <https://stackoverflow.com/questions/48149323/what-does-the-gcc-warning-project-parameter-passing-for-x-changed-in-gcc-7-1-m>\r\n\r\nAFAIU it only manifests on ARM targets. We may want to disable the warning, but we may also not bother. cc `[~yibocai]` \u00a0"
        }
    ]
}