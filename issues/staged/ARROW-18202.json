{
    "issue": {
        "title": "[R][C++] Different behaviour of R's base::gsub() binding aka libarrow's replace_string_regex kernel since 10.0.0",
        "body": "***Note**: This issue was originally created as [ARROW-18202](https://issues.apache.org/jira/browse/ARROW-18202). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nHello,\r\n\r\nI think there is a problem with arrow 10.0 and R. I did not have this issue with arrow 9.0.\r\n\r\nCould you please have a look?\r\n\r\nMany thanks\r\n\r\n\u00a0\r\n\r\n```r\n\r\nlibrary(tidyverse)\r\nlibrary(arrow)\r\n\r\nll <- c( \u00a0 \u00a0 \u00a0\"1000000\", \u00a0 \"10000000\", \u00a0\"2000000\" \u00a0, \"30000000\" , \"500000\" \u00a0 ,\r\n\u00a0 \u00a0 \u00a0 \u00a0 \"5000000\", \"\" \u00a0 , \u00a0 \"Not Range\")\r\n\r\ndf <- tibble(x=rep(ll, 1000), y=seq(8000))\r\n\r\nwrite_tsv(df, \"data.tsv\")\r\n\r\ndata <- open_dataset(\"data.tsv\", format=\"tsv\",\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0skip_rows=1,\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0schema=schema(x=string(),\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0y=double())\r\n)\r\n\r\ntest <- data |>\r\n\u00a0 \u00a0 collect()\r\n\r\n###I want to replace the \"\" with \"0\". I believe this worked with arrow 9.0\r\n\r\ndf2 <- data |>\r\n\u00a0 \u00a0 mutate(x=gsub(\"^$\",\"0\",x) ) |>\r\n\u00a0 \u00a0 collect()\r\n\r\ndf2 ### now I did not modify the \u00a0\"\" entries in x\r\n#> # A tibble: 8,000 \u00d7 2\r\n#> \u00a0 \u00a0x \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 y\r\n#> \u00a0 \u00a0<chr> \u00a0 \u00a0 \u00a0 <dbl>\r\n#> \u00a01 \"1000000\" \u00a0 \u00a0 \u00a0 1\r\n#> \u00a02 \"10000000\" \u00a0 \u00a0 \u00a02\r\n#> \u00a03 \"2000000\" \u00a0 \u00a0 \u00a0 3\r\n#> \u00a04 \"30000000\" \u00a0 \u00a0 \u00a04\r\n#> \u00a05 \"500000\" \u00a0 \u00a0 \u00a0 \u00a05\r\n#> \u00a06 \"5000000\" \u00a0 \u00a0 \u00a0 6\r\n#> \u00a07 \"\" \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a07\r\n#> \u00a08 \"Not Range\" \u00a0 \u00a0 8\r\n#> \u00a09 \"1000000\" \u00a0 \u00a0 \u00a0 9\r\n#> 10 \"10000000\" \u00a0 \u00a0 10\r\n#> # \u2026 with 7,990 more rows\r\n\r\n\u00a0\r\ndf3 <- df |>\r\n\u00a0 \u00a0 mutate(x=gsub(\"^$\",\"0\",x) )\r\n\r\ndf3 \u00a0## and this is fine\r\n#> # A tibble: 8,000 \u00d7 2\r\n#> \u00a0 \u00a0x \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 y\r\n#> \u00a0 \u00a0<chr> \u00a0 \u00a0 <int>\r\n#> \u00a01 1000000 \u00a0 \u00a0 \u00a0 1\r\n#> \u00a02 10000000 \u00a0 \u00a0 \u00a02\r\n#> \u00a03 2000000 \u00a0 \u00a0 \u00a0 3\r\n#> \u00a04 30000000 \u00a0 \u00a0 \u00a04\r\n#> \u00a05 500000 \u00a0 \u00a0 \u00a0 \u00a05\r\n#> \u00a06 5000000 \u00a0 \u00a0 \u00a0 6\r\n#> \u00a07 0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 7\r\n#> \u00a08 Not Range \u00a0 \u00a0 8\r\n#> \u00a09 1000000 \u00a0 \u00a0 \u00a0 9\r\n#> 10 10000000 \u00a0 \u00a0 10\r\n#> # \u2026 with 7,990 more rows\r\n\r\n## How to fix this...I believe this issue did not arise with arrow 9.0.\r\n\r\nsessionInfo()\r\n#> R version 4.2.1 (2022-06-23)\r\n#> Platform: x86_64-pc-linux-gnu (64-bit)\r\n#> Running under: Debian GNU/Linux 11 (bullseye)\r\n#>\u00a0\r\n#> Matrix products: default\r\n#> BLAS: \u00a0 /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.9.0\r\n#> LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.9.0\r\n#>\u00a0\r\n#> locale:\r\n#> \u00a0[1] LC_CTYPE=en_GB.UTF-8 \u00a0 \u00a0 \u00a0 LC_NUMERIC=C \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\r\n#> \u00a0[3] LC_TIME=en_GB.UTF-8 \u00a0 \u00a0 \u00a0 \u00a0LC_COLLATE=en_GB.UTF-8 \u00a0 \u00a0\r\n#> \u00a0[5] LC_MONETARY=en_GB.UTF-8 \u00a0 \u00a0LC_MESSAGES=en_GB.UTF-8 \u00a0\u00a0\r\n#> \u00a0[7] LC_PAPER=en_GB.UTF-8 \u00a0 \u00a0 \u00a0 LC_NAME=C \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\r\n#> \u00a0[9] LC_ADDRESS=C \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 LC_TELEPHONE=C \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\r\n#> [11] LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C \u00a0 \u00a0 \u00a0\u00a0\r\n#>\u00a0\r\n#> attached base packages:\r\n#> [1] stats \u00a0 \u00a0 graphics \u00a0grDevices utils \u00a0 \u00a0 datasets \u00a0methods \u00a0 base \u00a0 \u00a0\u00a0\r\n#>\u00a0\r\n#> other attached packages:\r\n#> \u00a0[1] arrow_10.0.0 \u00a0 \u00a0forcats_0.5.2 \u00a0 stringr_1.4.1 \u00a0 dplyr_1.0.10 \u00a0\u00a0\r\n#> \u00a0[5] purrr_0.3.5 \u00a0 \u00a0 readr_2.1.3 \u00a0 \u00a0 tidyr_1.2.1 \u00a0 \u00a0 tibble_3.1.8 \u00a0\u00a0\r\n#> \u00a0[9] ggplot2_3.3.6 \u00a0 tidyverse_1.3.2\r\n#>\u00a0\r\n#> loaded via a namespace (and not attached):\r\n#> \u00a0[1] lubridate_1.8.0 \u00a0 \u00a0 assertthat_0.2.1 \u00a0 \u00a0digest_0.6.30 \u00a0 \u00a0 \u00a0\r\n#> \u00a0[4] utf8_1.2.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0R6_2.5.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0cellranger_1.1.0 \u00a0\u00a0\r\n#> \u00a0[7] backports_1.4.1 \u00a0 \u00a0 reprex_2.0.2 \u00a0 \u00a0 \u00a0 \u00a0evaluate_0.17 \u00a0 \u00a0 \u00a0\r\n#> [10] httr_1.4.4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0highr_0.9 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 pillar_1.8.1 \u00a0 \u00a0 \u00a0\u00a0\r\n#> [13] rlang_1.0.6 \u00a0 \u00a0 \u00a0 \u00a0 googlesheets4_1.0.1 readxl_1.4.1 \u00a0 \u00a0 \u00a0\u00a0\r\n#> [16] R.utils_2.12.1 \u00a0 \u00a0 \u00a0R.oo_1.25.0 \u00a0 \u00a0 \u00a0 \u00a0 rmarkdown_2.17 \u00a0 \u00a0\u00a0\r\n#> [19] styler_1.8.0 \u00a0 \u00a0 \u00a0 \u00a0googledrive_2.0.0 \u00a0 bit_4.0.4 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\r\n#> [22] munsell_0.5.0 \u00a0 \u00a0 \u00a0 broom_1.0.1 \u00a0 \u00a0 \u00a0 \u00a0 compiler_4.2.1 \u00a0 \u00a0\u00a0\r\n#> [25] modelr_0.1.9 \u00a0 \u00a0 \u00a0 \u00a0xfun_0.34 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 pkgconfig_2.0.3 \u00a0 \u00a0\r\n#> [28] htmltools_0.5.3 \u00a0 \u00a0 tidyselect_1.2.0 \u00a0 \u00a0fansi_1.0.3 \u00a0 \u00a0 \u00a0 \u00a0\r\n#> [31] crayon_1.5.2 \u00a0 \u00a0 \u00a0 \u00a0tzdb_0.3.0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0dbplyr_2.2.1 \u00a0 \u00a0 \u00a0\u00a0\r\n#> [34] withr_2.5.0 \u00a0 \u00a0 \u00a0 \u00a0 R.methodsS3_1.8.2 \u00a0 grid_4.2.1 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\r\n#> [37] jsonlite_1.8.3 \u00a0 \u00a0 \u00a0gtable_0.3.1 \u00a0 \u00a0 \u00a0 \u00a0lifecycle_1.0.3 \u00a0 \u00a0\r\n#> [40] DBI_1.1.3 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 magrittr_2.0.3 \u00a0 \u00a0 \u00a0scales_1.2.1 \u00a0 \u00a0 \u00a0\u00a0\r\n#> [43] vroom_1.6.0 \u00a0 \u00a0 \u00a0 \u00a0 cli_3.4.1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 stringi_1.7.8 \u00a0 \u00a0 \u00a0\r\n#> [46] fs_1.5.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0xml2_1.3.3 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0ellipsis_0.3.2 \u00a0 \u00a0\u00a0\r\n#> [49] generics_0.1.3 \u00a0 \u00a0 \u00a0vctrs_0.5.0 \u00a0 \u00a0 \u00a0 \u00a0 tools_4.2.1 \u00a0 \u00a0 \u00a0 \u00a0\r\n#> [52] bit64_4.0.5 \u00a0 \u00a0 \u00a0 \u00a0 R.cache_0.16.0 \u00a0 \u00a0 \u00a0glue_1.6.2 \u00a0 \u00a0 \u00a0 \u00a0\u00a0\r\n#> [55] hms_1.1.2 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 parallel_4.2.1 \u00a0 \u00a0 \u00a0fastmap_1.1.0 \u00a0 \u00a0 \u00a0\r\n#> [58] yaml_2.3.6 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0colorspace_2.0-3 \u00a0 \u00a0gargle_1.2.1 \u00a0 \u00a0 \u00a0\u00a0\r\n#> [61] rvest_1.0.3 \u00a0 \u00a0 \u00a0 \u00a0 knitr_1.40 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0haven_2.5.1\r\n```\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n",
        "created_at": "2022-10-31T15:06:11.000Z",
        "updated_at": "2022-11-07T09:14:26.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: R",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-11-01T12:33:27.362Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18202?focusedCommentId=17627139) by Dewey Dunnington (paleolimbot):*\nThank you for reporting! This does sound like it is invalid behaviour. A slightly more minimal reprex with Arrow 10.0.0.\r\n\r\n```R\n\r\nlibrary(arrow, warn.conflicts = FALSE)\r\n#> Some features are not enabled in this build of Arrow. Run `arrow_info()` for more information.\r\nlibrary(dplyr, warn.conflicts = FALSE)\r\n\r\nvals <- c(\"1000000\",   \"10000000\",  \"2000000\"  , \"30000000\" , \"500000\",\r\n          \"5000000\", \"\", \"Not Range\")\r\n\r\nrecord_batch(vals = vals) |> \r\n  mutate(vals2 = gsub(\"^$\", \"0\", vals)) |> \r\n  collect()\r\n#> # A tibble: 8 \u00d7 2\r\n#>   vals        vals2      \r\n#>   <chr>       <chr>      \r\n#> 1 \"1000000\"   \"1000000\"  \r\n#> 2 \"10000000\"  \"10000000\" \r\n#> 3 \"2000000\"   \"2000000\"  \r\n#> 4 \"30000000\"  \"30000000\" \r\n#> 5 \"500000\"    \"500000\"   \r\n#> 6 \"5000000\"   \"5000000\"  \r\n#> 7 \"\"          \"\"         \r\n#> 8 \"Not Range\" \"Not Range\"\r\n\r\ntibble::tibble(vals = vals) |> \r\n  mutate(vals2 = gsub(\"^$\", \"0\", vals)) |> \r\n  collect()\r\n#> # A tibble: 8 \u00d7 2\r\n#>   vals        vals2    \r\n#>   <chr>       <chr>    \r\n#> 1 \"1000000\"   1000000  \r\n#> 2 \"10000000\"  10000000 \r\n#> 3 \"2000000\"   2000000  \r\n#> 4 \"30000000\"  30000000 \r\n#> 5 \"500000\"    500000   \r\n#> 6 \"5000000\"   5000000  \r\n#> 7 \"\"          0        \r\n#> 8 \"Not Range\" Not Range\r\n```\r\n"
        },
        {
            "created_at": "2022-11-02T10:08:56.061Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18202?focusedCommentId=17627586) by Lorenzo Isella (larry77):*\nHi there,\r\n\r\nApparently there are some issue with the manipulations of strings in arrow 10 (see also https://issues.apache.org/jira/browse/ARROW-18213 ).\r\n\r\nI rely a lot on arrow these days and this is a big problem for me. I would like to know if this will be addressed and fixed only in the next arrow 11 release or there are plans to address this earlier?\r\n\r\nThanks"
        },
        {
            "created_at": "2022-11-03T13:10:24.109Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18202?focusedCommentId=17628324) by Nicola Crane (thisisnic):*\nWe always welcome PRs if you're interested in submitting one?\r\n\r\nOtherwise, we tend to triage and work on bugs regularly, so depending on the complexity of the change need, and when someone looks at it, it could well end up being fixed in the dev version sooner than 11.0.0.  "
        },
        {
            "created_at": "2022-11-03T14:19:41.003Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18202?focusedCommentId=17628349) by Nicola Crane (thisisnic):*\nJust installed 9.0.0 and can confirm that this is a regression introduced since that release as I can't reproduce it there."
        },
        {
            "created_at": "2022-11-03T14:30:50.691Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18202?focusedCommentId=17628352) by Lorenzo Isella (larry77):*\nThanks. I am afraid that submitting a PR on this flies miles on top of my head...I am an R power user, but I would not know where to start from on something which combines R , C++ and I do not know what else. Keep up the good work!"
        },
        {
            "created_at": "2022-11-03T17:01:02.741Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18202?focusedCommentId=17628421) by Nicola Crane (thisisnic):*\nHmm, I've compared the ExecPlans for both which look identical, so looks like this is a C++ not an R issue.  CC `[~westonpace]`"
        }
    ]
}