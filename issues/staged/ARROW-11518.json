{
    "issue": {
        "title": "[C++] [Parquet] Parquet reader crashes when reading boolean columns",
        "body": "***Note**: This issue was originally created as [ARROW-11518](https://issues.apache.org/jira/browse/ARROW-11518). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nParquet file reader crashes while reading boolean columns in `TypedColumnReaderImpl<DType>::Skip`. \r\n\r\nThe calculation of the buffer size in the code below is not correct as `value_byte_size` is 1 for booleans, and the same buffer is used for definition and repetition levels data which requires 2 bytes per value.\r\n\r\n```Java\n\r\n     // This will be enough scratch space to accommodate 16-bit levels or any\r\n      // value type\r\n      std::shared_ptr<ResizableBuffer> scratch = AllocateBuffer(\r\n          this->pool_, batch_size * type_traits<DType::type_num>::value_byte_size);\r\n\r\n      do {\r\n        batch_size = std::min(batch_size, rows_to_skip);\r\n        values_read =\r\n            ReadBatch(static_cast<int>(batch_size),\r\n                      reinterpret_cast<int16_t*>(scratch->mutable_data()),\r\n                      reinterpret_cast<int16_t*>(scratch->mutable_data()),\r\n                      reinterpret_cast<T*>(scratch->mutable_data()), &values_read);\r\n        rows_to_skip -= values_read;\r\n      } while (values_read > 0 && rows_to_skip > 0);\r\n```",
        "created_at": "2021-02-06T07:28:06.000Z",
        "updated_at": "2021-07-27T14:37:16.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-07-27T14:36:01.000Z"
    },
    "comments": [
        {
            "created_at": "2021-07-27T14:36:01.937Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11518?focusedCommentId=17388103) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 9432\n<https://github.com/apache/arrow/pull/9432>"
        }
    ]
}