{
    "issue": {
        "title": "[C++] Add \"ON only if system dependencies available\" build mode for certain optional Arrow components",
        "body": "***Note**: This issue was originally created as [ARROW-8155](https://issues.apache.org/jira/browse/ARROW-8155). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nRelated to ARROW-8103, there is a need for a static build script to be able to build the C++ library in a system environment where some dependencies may not be available.\r\n\r\nCurrently we have toolchain options AUTO, SYSTEM, and BUNDLED:\r\n\r\n- AUTO: use system packages if possible, else BUNDLE\n- SYSTEM: use only system packages, failing otherwise\n- BUNDLED: build using the ExternalProject facility\n  \n  There is a case that may not be accounted for. Suppose we want to build with LZ4 support _only if_ LZ4 is available on the system. So then something like\n  \n  {code}\n-DARROW_WITH_LZ4=IF_AVAILABLE\r\n{code}\r\n\r\n(not sure what this should be called).\r\n\r\nThe idea is that this would use SYSTEM dependency resolution, and if LZ4 is not found then the component would be disabled.\r\n\r\nThe ROI on this feature might be low, but it would be useful to packagers who are building from source on an uncertain system (and where downloading a tarball and building an EP may not be an option)",
        "created_at": "2020-03-18T22:56:59.000Z",
        "updated_at": "2020-03-18T22:56:59.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": []
}