{
    "issue": {
        "title": "[C++] Spurious Flight test failures (port allocation failure)",
        "body": "***Note**: This issue was originally created as [ARROW-6528](https://issues.apache.org/jira/browse/ARROW-6528). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSeems like our port allocation scheme inside unit tests is still not very reliable :-/\r\nhttps://ci.ursalabs.org/#/builders/71/builds/4147/steps/8/logs/stdio\r\n\r\n```Java\n\r\n[----------] 3 tests from TestMetadata\r\n[ RUN      ] TestMetadata.DoGet\r\nE0905 12:45:40.322644527   10203 server_chttp2.cc:40]        {\"created\":\"@1567687540.322612245\",\"description\":\"No address added out of total 1 resolved\",\"file\":\"../src/core/ext/transport/chttp2/server/chttp2_server.cc\",\"file_line\":394,\"referenced_errors\":[{\"created\":\"@1567687540.322609844\",\"description\":\"Unable to configure socket\",\"fd\":7,\"file\":\"../src/core/lib/iomgr/tcp_server_utils_posix_common.cc\",\"file_line\":217,\"referenced_errors\":[{\"created\":\"@1567687540.322602634\",\"description\":\"Address already in use\",\"errno\":98,\"file\":\"../src/core/lib/iomgr/tcp_server_utils_posix_common.cc\",\"file_line\":190,\"os_error\":\"Address already in use\",\"syscall\":\"bind\"}]}]}\r\n../src/arrow/flight/flight_test.cc:429: Failure\r\nFailed\r\n'server->Init(options)' failed with Unknown error: Server did not start properly\r\n/buildbot/AMD64_Conda_Python_3_7/cpp/build-support/run-test.sh: line 97: 10203 Segmentation fault      (core dumped) $TEST_EXECUTABLE \"$@\" 2>&1\r\n     10204 Done                    | $ROOT/build-support/asan_symbolize.py\r\n     10205 Done                    | ${CXXFILT:-c++filt}\r\n     10206 Done                    | $ROOT/build-support/stacktrace_addr2line.pl $TEST_EXECUTABLE\r\n     10207 Done                    | $pipe_cmd 2>&1\r\n     10208 Done                    | tee $LOGFILE\r\n/buildbot/AMD64_Conda_Python_3_7/cpp/build/src/arrow/flight\r\n```\r\n",
        "created_at": "2019-09-11T13:27:18.000Z",
        "updated_at": "2020-03-27T20:49:39.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-03-27T20:49:39.000Z"
    },
    "comments": [
        {
            "created_at": "2019-09-11T13:27:28.076Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6528?focusedCommentId=16927564) by Antoine Pitrou (apitrou):*\n`[~lidavidm]`"
        },
        {
            "created_at": "2019-09-11T13:30:30.192Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6528?focusedCommentId=16927567) by David Li (lidavidm):*\n`[~pitrou]` as part of ARROW-6426 ([PR](https://github.com/apache/arrow/pull/5292)) I added FlightServerBase#port() getter in C++, so we could instead bind to port 0 instead of racing to find a free port. Want me to pull that out separately?"
        },
        {
            "created_at": "2019-09-11T13:30:59.313Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6528?focusedCommentId=16927569) by David Li (lidavidm):*\nOh, I see you just merged it."
        },
        {
            "created_at": "2019-09-11T13:36:05.720Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6528?focusedCommentId=16927573) by Antoine Pitrou (apitrou):*\n;-)"
        },
        {
            "created_at": "2020-03-23T18:56:16.812Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6528?focusedCommentId=17065020) by Ben Kietzman (bkietz):*\n`[~apitrou]` `[~lidavidm]` have there been reoccurrences of this issue? Should we mark this issue as fixed by ARROW-6426?"
        },
        {
            "created_at": "2020-03-27T20:49:39.974Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6528?focusedCommentId=17069038) by Wes McKinney (wesm):*\nI'm closing as Resolved, the binding to port 0 changes should help \u2013 if this occurs again we should reopen and then figure out where a port is failing to allocate"
        }
    ]
}