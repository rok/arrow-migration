{
    "issue": {
        "title": "[C++] Introduce MemoryManager::Memset method.",
        "body": "***Note**: This issue was originally created as [ARROW-4861](https://issues.apache.org/jira/browse/ARROW-4861). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nExposing such a method could be useful to initialize a buffer without going through a CPU-to-device memory copy.\r\n\r\nFor example CUDA expose several memset-like APIs to initialize GPU memory with different initializer widths:\r\nhttps://docs.nvidia.com/cuda/cuda-driver-api/group__CUDA__MEM.html#group__CUDA__MEM_1g6e582bf866e9e2fb014297bfaf354d7b\r\n",
        "created_at": "2019-03-13T19:31:02.000Z",
        "updated_at": "2020-09-07T19:48:14.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-09-07T19:48:14.000Z"
    },
    "comments": [
        {
            "created_at": "2019-03-14T05:24:11.051Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4861?focusedCommentId=16792351) by Micah Kornfield (emkornfield@gmail.com):*\nI'm not familiar with Cuda/GPUs but would this also need touch places that use std::fill and memcpy?\u00a0 What about raw memory address access?"
        },
        {
            "created_at": "2019-03-14T08:56:49.733Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4861?focusedCommentId=16792460) by Pearu Peterson (pearu):*\nYes, also places with fill and memcpy would need to be updated to use the corresponding functions provided by MemoryPool implementation.\r\n\r\nCurrently, memcpy, memset, std::copy, dereferencing are used in `Buffer` and `BufferBuilder` methods. These ought to be replaced with the respective methods from MemoryPool.\r\n\r\nOf course, these host specific memory functions are also used elsewhere but these are not relevant for\u00a0manipulating device memory buffers.\r\n\r\nBtw, this issue is a part of ARROW-2447\u00a0story that aims at extending Arrow buffer usages to accelerator device applications."
        },
        {
            "created_at": "2019-03-14T15:13:31.865Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4861?focusedCommentId=16792781) by Wes McKinney (wesm):*\nIt seems like this is a property of the device, not the MemoryPool. Should we implement a Device abstract interface with these methods?"
        },
        {
            "created_at": "2019-03-14T15:44:17.866Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4861?focusedCommentId=16792802) by Pearu Peterson (pearu):*\nNo. As discussed in ARROW-2447\u00a0, a Device would not be a good representative of a memory address origin. In certain cases (Managed Memory, Pinned/Host Memory), the memory address would be accessible from both CPU as well as from device.\r\n\r\nA virtual address space should be considered as a notation where only one set of memory management operations (allocation, deallocation, copy, memset, fill, etc) can be applied.\r\n\r\nMemoryPool would be a better representative (than Device) of a virtual address space that contains addresses pointing to memories of different devices. Although at hardware/driver level the addresses will be translated to the actual addresses of device memories, these translations are transparent to Arrow processes."
        },
        {
            "created_at": "2020-02-03T17:29:44.608Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4861?focusedCommentId=17029113) by Antoine Pitrou (apitrou):*\nThe PR for ARROW-2447 exposes a `MemoryManager` class, where we could add said `Memset` method."
        },
        {
            "created_at": "2020-09-07T17:11:04.120Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4861?focusedCommentId=17191811) by Antoine Pitrou (apitrou):*\n`[~pearu]` Do you still need this / want to work on this?"
        },
        {
            "created_at": "2020-09-07T19:40:01.078Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4861?focusedCommentId=17191846) by Pearu Peterson (pearu):*\n`[~apitrou]` Atm I don't have a need for this."
        }
    ]
}