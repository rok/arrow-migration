{
    "issue": {
        "title": "[C++][Python] IPC failure for dictionary with extension type with struct storage type",
        "body": "***Note**: This issue was originally created as [ARROW-16231](https://issues.apache.org/jira/browse/ARROW-16231). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nReport from <https://github.com/apache/arrow/issues/12899>\r\n\r\nRoundtripping through IPC/Feather using a dictionary type where the dictionary is an extension type with a nested storage type fails. Writing seems to work (but no idea if the written file is \"correct\", as trying to read the schema gives an error), but reading it back fails with {_}\"ArrowInvalid: Ran out of field metadata, likely malformed\"{_}.\r\n\r\nThe original use case was from a pandas extension type (the pandas interval dtype is mapped to an arrow extension type with a struct type as storage, and in this case this interval type was further wrapped in a categorical (dictionary) type). A pandas-based test that reproduces this (can be added like this in `{}test_feather.py{`}):\r\n```python\n\r\n@pytest.mark.pandas\r\ndef test_dictionary_interval():\r\n    df = pd.DataFrame({'a': pd.cut(range(1, 10, 3), [-1, 5, 10])})\r\n    _check_pandas_roundtrip(df, version=2)\r\n```\r\nthis gives:\r\n```java\n\r\n$ pytest python/pyarrow/tests/test_feather.py::test_dictionary_interval\r\n....\r\n========================= FAILURES =================\r\n____________ test_dictionary_interval _______________\r\n\r\npyarrow/_feather.pyx:88: in pyarrow._feather.FeatherReader.read\r\n\r\nE   pyarrow.lib.ArrowInvalid: Ran out of field metadata, likely malformed\r\nE   ../src/arrow/ipc/reader.cc:266  GetFieldMetadata(field_index_++, out_)\r\nE   ../src/arrow/ipc/reader.cc:283  LoadCommon(type_id)\r\nE   ../src/arrow/ipc/reader.cc:324  Load(child_fields[i].get(), parent->child_data[i].get())\r\nE   ../src/arrow/ipc/reader.cc:529  loader.Load(&field, column.get())\r\nE   ../src/arrow/ipc/reader.cc:1188  ReadRecordBatchInternal( *message->metadata(), schema_, field_inclusion_mask_, context, reader.get())\r\nE   ../src/arrow/ipc/feather.cc:730  reader->ReadRecordBatch(i)\r\n\r\npyarrow/error.pxi:100: ArrowInvalid\r\n```",
        "created_at": "2022-04-19T10:22:24.000Z",
        "updated_at": "2022-07-04T17:41:26.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-04-19T10:29:07.488Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16231?focusedCommentId=17524230) by Joris Van den Bossche (jorisvandenbossche):*\nIf I try to recreate this with a pure-pyarrow example, I get a different error:\r\n\r\n\u00a0\r\n\r\n```Java\n\r\nimport pyarrow as pa\r\nfrom pyarrow.tests.test_extension_type import MyStructType\r\n\r\nstruct_array = pa.StructArray.from_arrays(\r\n    [pa.array([0, 1], type=\"int64\"), pa.array([1, 2], type=\"int64\")],\r\n    names=[\"left\", \"right\"])\r\nmystruct_array = pa.ExtensionArray.from_storage(MyStructType(), struct_array)\r\ndict_array = pa.DictionaryArray.from_arrays(pa.array([0, 1, 0]), mystruct_array)\r\n\r\n# roundtrip through Feather\r\nfrom pyarrow import feather\r\nfeather.write_feather(pa.table({'a': dict_array}), \"test_dict_ext_nested.feather\")\r\nfeather.read_table(\"test_dict_ext_nested.feather\")\r\n```\r\n\r\ngives\r\n\r\n```Java\n\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-9-df8b416670f4> in <module>\r\n----> 1 feather.read_table(\"test_dict_ext_nested.feather\")\r\n\r\n~/scipy/repos/arrow/python/pyarrow/feather.py in read_table(source, columns, memory_map, use_threads)\r\n    242     table : pyarrow.Table\r\n    243     \"\"\"\r\n--> 244     reader = _feather.FeatherReader(\r\n    245         source, use_memory_map=memory_map, use_threads=use_threads)\r\n    246 \r\n\r\n~/scipy/repos/arrow/python/pyarrow/_feather.pyx in pyarrow._feather.FeatherReader.__cinit__()\r\n~/scipy/repos/arrow/python/pyarrow/error.pxi in pyarrow.lib.pyarrow_internal_check_status()\r\n~/scipy/repos/arrow/python/pyarrow/types.pxi in pyarrow.lib.PyExtensionType.__arrow_ext_deserialize__()\r\nTypeError: Expected storage type struct<left: int64, right: int64> but got dictionary<values=struct<left: int64, right: int64>, indices=int64, ordered=0>\r\n```\r\n"
        }
    ]
}