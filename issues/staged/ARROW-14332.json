{
    "issue": {
        "title": "[C++] Rename type traits utilities to improve semantic consistency",
        "body": "***Note**: This issue was originally created as [ARROW-14332](https://issues.apache.org/jira/browse/ARROW-14332). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThere are semantic differences between **enable_ifs-related** utils and **is_xxx** functions with the same name. For example, **is_binary_like** [here](https://github.com/apache/arrow/blob/master/cpp/src/arrow/type_traits.h#L596)\u00a0!= [here](https://github.com/apache/arrow/blob/master/cpp/src/arrow/type_traits.h#L924). The former includes binary only and the latter binary/string types.\r\n\r\nAlso, the **_like** suffix seems unwarranted as they always refer to binary or string.\r\n\r\nAlso, the **is_fixed_size_binary** includes both _FixedSizeBinaryType_ and {_}DecimalXXXType{_}. A better name is **is_base_fixed_size_binary** to match how binary/string utils are used.\r\n\r\n{_}Note{_}: There might be other inconsistencies.",
        "created_at": "2021-10-15T01:32:07.000Z",
        "updated_at": "2022-07-15T15:33:39.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-12-13T18:01:50.334Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14332?focusedCommentId=17458584) by Antoine Pitrou (apitrou):*\n`[~edponce]` Do you want to propose a PR here?"
        },
        {
            "created_at": "2021-12-22T19:49:15.110Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14332?focusedCommentId=17464021) by Eduardo Ponce (edponce):*\nYes, will do tomorrow."
        },
        {
            "created_at": "2021-12-27T03:07:28.809Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14332?focusedCommentId=17465515) by Eduardo Ponce (edponce):*\nThere is a more general issue at hand here: the naming convention used when referring to concepts (type trait functions, SFINAE conditions, GD, etc.) corresponding to base/derived types."
        },
        {
            "created_at": "2021-12-27T04:41:19.221Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14332?focusedCommentId=17465524) by Eduardo Ponce (edponce):*\nThis table shows Arrow datatypes and corresponding **is_xxx_type**\u00a0type traits.\r\n\n|Datatype|Current type trait|\r|||\n|-|-|-|-|-|\n|FixedWidthType|\u00a0|\r|\n|PrimitiveCType|is_primitive_ctype|\r|\n|NumberType|is_number_type|\r|\n|IntegerType|is_integer_type|\r|\n|\u00a0|is_signed_integer_type|\r|\n|\u00a0|is_unsigned_integer_type|\r|\n|[U]Int[8,16,32,64]Type|\u00a0|\r|\n|FloatingPointType|is_floating_type|\r|\n|HalfFloatType|is_half_float_type|\r|\n|FloatType|\u00a0|\r|\n|DoubleType|\u00a0|\r|\n|ParametricType|\u00a0|\r|\n|NestedType|is_nested_type|\r|\n|NullType|is_null_type|\r|\n|BooleanType|is_boolean_type|\r|\n|BaseBinaryType|is_base_binary_type|\r|\n|BinaryType|is_binary_type|\r|\n|LargeBinaryType|\u00a0|\r|\n|StringType|is_string_type|\r|\n|LargeStringType|\u00a0|\r|\n|FixedSizeBinaryType|is_fixed_size_binary_type|\r|\n|DecimalType|is_decimal_type|\r|\n|Decimal128Type|is_decimal128_type|\r|\n|Decimal256Type|is_decimal256_type|\r|\n|BaseListType|is_var_length_list_type|\r|\n|ListType|is_list_type|\r|\n|LargeListType|\u00a0|\r|\n|FixedSizeListType|is_fixed_size_list_type|\r|\n|MapType|\u00a0|\r|\n|StructType|is_struct_type|\r|\n|UnionType|is_union_type|\r|\n|SparseUnionType|\u00a0|\r|\n|DenseUnionType|\u00a0|\r|\n|TemporalType|is_temporal_type|\r|\n|DateType|is_date_type|\r|\n|Date64Type|\u00a0|\r|\n|TimeType|is_time_type|\r|\n|Time32Type|\u00a0|\r|\n|Time64Type|\u00a0|\r|\n|TimestampType|is_timestamp_type|\r|\n|IntervalType|is_interval_type|\r|\n|MonthIntervalType|\u00a0|\r|\n|DayTimeIntervalType|\u00a0|\r|\n|MonthDayNanoIntervalType|\u00a0|\r|\n|DurationType|is_duration_type|\r|\n|DictionaryType|is_dictionary_type|\r|\n|ExtensionType|is_extension_type|\r<br>\r<br>These are special type traits:\r<br> \\* `is_string_like_type = is_base_binary_type && T::is_utf8`\r<br>a. (Eduardo) Seems like a semantic duplicate of `is_string_type`\r<br> \\* {{is_binary_like_type = (is_base_binary_type && !is_string_like_type)|is_fixed_size_binary_type}}\r<br> \\* `is_base_list_type` deprecated for `is_var_length_list_type`\r<br> \\* {{is_list_like_type = is_base_list_type|is_fixed_size_list_type}}|\n"
        },
        {
            "created_at": "2021-12-27T05:34:52.009Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14332?focusedCommentId=17465527) by Eduardo Ponce (edponce):*\nThe inconsistency/non-symmetry between the **is_xxx_type** type traits and **is_xxx** functions arises due to how derived and specific-types are considered. This clearly shows in the `is_xxx_like` variants. Also, it is a bit difficult to express specific types versus derived classes using only the **is** predicate."
        },
        {
            "created_at": "2022-07-15T15:32:22.464Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14332?focusedCommentId=17567296) by Neal Richardson (npr):*\nThis issue has been inactive for 3 months, so it has been unassigned and marked as unstarted. If you are still working on this, feel free to reassign yourself and resume progress."
        }
    ]
}