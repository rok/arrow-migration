{
    "issue": {
        "title": "[C++] Installation Error stdlib.h no such file or directory",
        "body": "***Note**: This issue was originally created as [ARROW-17595](https://issues.apache.org/jira/browse/ARROW-17595). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nGetting error installing arrow.\u00a0\u00a0\r\n\r\n```\n\r\n/opt/rh/gcc-toolset-11/root/usr/include/c++/11/cstdlib:75:15: fatal error: stdlib.h: No such file or directory\r\n\u00a0 \u00a075 | #include_next <stdlib.h>\r\n```\r\n\r\nUsing the c\\+\\11 toolset.\u00a0 Tried with default c\\\\+ on the system and was getting the same type error.\u00a0 OS is OEL 8.5.\r\n\r\nHere is the detailed output:\r\n\r\n```\n\r\nInstalling package into \u2018/usr/lib64/R/library\u2019\r\n(as \u2018lib\u2019 is unspecified)\r\ntrying URL 'http://**************************/prod/cran/src/contrib/arrow_9.0.0.tar.gz'\r\nContent type 'application/octet-stream' length 4900968 bytes (4.7 MB)\r\n==================================================\r\ndownloaded 4.7 MB\r\n\r\n* installing *source* package \u2018arrow\u2019 ...\r\n** package \u2018arrow\u2019 successfully unpacked and MD5 sums checked\r\n** using staged installation\r\n*** Found local C++ source: 'tools/cpp'\r\n*** Building libarrow from source\r\n    For build options and troubleshooting, see the install vignette:\r\n    https://cran.r-project.org/web/packages/arrow/vignettes/install.html\r\n*** Building with MAKEFLAGS= -j2 \r\n**** cmake: /bin/cmake\r\n**** arrow with SOURCE_DIR='tools/cpp' BUILD_DIR='/tmp/rmt' DEST_DIR='libarrow/arrow-9.0.0' CMAKE='/bin/cmake' EXTRA_CMAKE_FLAGS='' CC='gcc -m64' CXX='g++ -m64 -std=gnu++11' LDFLAGS='-Wl,-z,relro -Wl,-z,now -specs=/usr/lib/rpm/redhat/redhat-hardened-ld' ARROW_S3='OFF' ARROW_GCS='OFF' ARROW_MIMALLOC='OFF' \r\n++ pwd\r\n+ : /tmp/Rtmp6bSuH3/R.INSTALL40fe61c13650d/arrow\r\n+ : tools/cpp\r\n+ : /tmp/rmt\r\n+ : libarrow/arrow-9.0.0\r\n+ : /bin/cmake\r\n++ cd tools/cpp\r\n++ pwd\r\n+ SOURCE_DIR=/tmp/Rtmp6bSuH3/R.INSTALL40fe61c13650d/arrow/tools/cpp\r\n++ mkdir -p libarrow/arrow-9.0.0\r\n++ cd libarrow/arrow-9.0.0\r\n++ pwd\r\n+ DEST_DIR=/tmp/Rtmp6bSuH3/R.INSTALL40fe61c13650d/arrow/libarrow/arrow-9.0.0\r\n+ '[' '' '!=' '' ']'\r\n+ '[' '' = false ']'\r\n+ ARROW_DEFAULT_PARAM=OFF\r\n+ mkdir -p /tmp/rmt\r\n+ pushd /tmp/rmt\r\n/tmp/rmt /tmp/Rtmp6bSuH3/R.INSTALL40fe61c13650d/arrow\r\n+ /bin/cmake -DARROW_BOOST_USE_SHARED=OFF -DARROW_BUILD_TESTS=OFF -DARROW_BUILD_SHARED=OFF -DARROW_BUILD_STATIC=ON -DARROW_COMPUTE=ON -DARROW_CSV=ON -DARROW_DATASET=ON -DARROW_DEPENDENCY_SOURCE=AUTO -DAWSSDK_SOURCE= -DARROW_FILESYSTEM=ON -DARROW_GCS=OFF -DARROW_JEMALLOC=OFF -DARROW_MIMALLOC=OFF -DARROW_JSON=ON -DARROW_PARQUET=ON -DARROW_S3=OFF -DARROW_WITH_BROTLI=OFF -DARROW_WITH_BZ2=OFF -DARROW_WITH_LZ4=ON -DARROW_WITH_RE2=ON -DARROW_WITH_SNAPPY=ON -DARROW_WITH_UTF8PROC=ON -DARROW_WITH_ZLIB=OFF -DARROW_WITH_ZSTD=OFF -DARROW_VERBOSE_THIRDPARTY_BUILD=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_INSTALL_PREFIX=/tmp/Rtmp6bSuH3/R.INSTALL40fe61c13650d/arrow/libarrow/arrow-9.0.0 -DCMAKE_EXPORT_NO_PACKAGE_REGISTRY=ON -DCMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY=ON -DCMAKE_UNITY_BUILD=OFF -Dxsimd_SOURCE= -G 'Unix Makefiles' /tmp/Rtmp6bSuH3/R.INSTALL40fe61c13650d/arrow/tools/cpp\r\n-- Building using CMake version: 3.20.2\r\n-- The C compiler identification is GNU 11.2.1\r\n-- The CXX compiler identification is GNU 11.2.1\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - failed\r\n-- Check for working C compiler: /opt/rh/gcc-toolset-11/root/usr/bin/gcc\r\n-- Check for working C compiler: /opt/rh/gcc-toolset-11/root/usr/bin/gcc - works\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - failed\r\n-- Check for working CXX compiler: /opt/rh/gcc-toolset-11/root/usr/bin/g++\r\n-- Check for working CXX compiler: /opt/rh/gcc-toolset-11/root/usr/bin/g++ - works\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\n-- Arrow version: 9.0.0 (full: '9.0.0')\r\n-- Arrow SO version: 900 (full: 900.0.0)\r\n-- clang-tidy 12 not found\r\n-- clang-format 12 not found\r\n-- Could NOT find ClangTools (missing: CLANG_FORMAT_BIN CLANG_TIDY_BIN) \r\n-- infer not found\r\nfatal: not a git repository (or any parent up to mount point /)\r\nStopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).\r\n-- Found Python3: /bin/python3.6 (found version \"3.6.8\") found components: Interpreter \r\n-- Found cpplint executable at /tmp/Rtmp6bSuH3/R.INSTALL40fe61c13650d/arrow/tools/cpp/build-support/cpplint.py\r\n-- System processor: x86_64\r\n-- Performing Test CXX_SUPPORTS_SSE4_2\r\n-- Performing Test CXX_SUPPORTS_SSE4_2 - Success\r\n-- Performing Test CXX_SUPPORTS_AVX2\r\n-- Performing Test CXX_SUPPORTS_AVX2 - Success\r\n-- Performing Test CXX_SUPPORTS_AVX512\r\n-- Performing Test CXX_SUPPORTS_AVX512 - Success\r\n-- Arrow build warning level: PRODUCTION\r\n-- Using ld linker\r\n-- Configured for RELEASE build (set with cmake -DCMAKE_BUILD_TYPE={release,debug,...})\r\n-- Build Type: RELEASE\r\n-- Performing Test CXX_LINKER_SUPPORTS_VERSION_SCRIPT\r\n-- Performing Test CXX_LINKER_SUPPORTS_VERSION_SCRIPT - Success\r\n-- Using AUTO approach to find dependencies\r\n-- ARROW_ABSL_BUILD_VERSION: 20211102.0\r\n-- ARROW_ABSL_BUILD_SHA256_CHECKSUM: dcf71b9cba8dc0ca9940c4b316a0c796be8fab42b070bb6b7cab62b48f0e66c4\r\n-- ARROW_AWSSDK_BUILD_VERSION: 1.8.133\r\n-- ARROW_AWSSDK_BUILD_SHA256_CHECKSUM: d6c495bc06be5e21dac716571305d77437e7cfd62a2226b8fe48d9ab5785a8d6\r\n-- ARROW_AWS_CHECKSUMS_BUILD_VERSION: v0.1.12\r\n-- ARROW_AWS_CHECKSUMS_BUILD_SHA256_CHECKSUM: 394723034b81cc7cd528401775bc7aca2b12c7471c92350c80a0e2fb9d2909fe\r\n-- ARROW_AWS_C_COMMON_BUILD_VERSION: v0.6.9\r\n-- ARROW_AWS_C_COMMON_BUILD_SHA256_CHECKSUM: 928a3e36f24d1ee46f9eec360ec5cebfe8b9b8994fe39d4fa74ff51aebb12717\r\n-- ARROW_AWS_C_EVENT_STREAM_BUILD_VERSION: v0.1.5\r\n-- ARROW_AWS_C_EVENT_STREAM_BUILD_SHA256_CHECKSUM: f1b423a487b5d6dca118bfc0d0c6cc596dc476b282258a3228e73a8f730422d4\r\n-- ARROW_BOOST_BUILD_VERSION: 1.75.0\r\n-- ARROW_BOOST_BUILD_SHA256_CHECKSUM: 267e04a7c0bfe85daf796dedc789c3a27a76707e1c968f0a2a87bb96331e2b61\r\n-- ARROW_BROTLI_BUILD_VERSION: v1.0.9\r\n-- ARROW_BROTLI_BUILD_SHA256_CHECKSUM: f9e8d81d0405ba66d181529af42a3354f838c939095ff99930da6aa9cdf6fe46\r\n-- ARROW_BZIP2_BUILD_VERSION: 1.0.8\r\n-- ARROW_BZIP2_BUILD_SHA256_CHECKSUM: ab5a03176ee106d3f0fa90e381da478ddae405918153cca248e682cd0c4a2269\r\n-- ARROW_CARES_BUILD_VERSION: 1.17.2\r\n-- ARROW_CARES_BUILD_SHA256_CHECKSUM: 4803c844ce20ce510ef0eb83f8ea41fa24ecaae9d280c468c582d2bb25b3913d\r\n-- ARROW_CRC32C_BUILD_VERSION: 1.1.2\r\n-- ARROW_CRC32C_BUILD_SHA256_CHECKSUM: ac07840513072b7fcebda6e821068aa04889018f24e10e46181068fb214d7e56\r\n-- ARROW_GBENCHMARK_BUILD_VERSION: v1.6.0\r\n-- ARROW_GBENCHMARK_BUILD_SHA256_CHECKSUM: 1f71c72ce08d2c1310011ea6436b31e39ccab8c2db94186d26657d41747c85d6\r\n-- ARROW_GFLAGS_BUILD_VERSION: v2.2.2\r\n-- ARROW_GFLAGS_BUILD_SHA256_CHECKSUM: 34af2f15cf7367513b352bdcd2493ab14ce43692d2dcd9dfc499492966c64dcf\r\n-- ARROW_GLOG_BUILD_VERSION: v0.5.0\r\n-- ARROW_GLOG_BUILD_SHA256_CHECKSUM: eede71f28371bf39aa69b45de23b329d37214016e2055269b3b5e7cfd40b59f5\r\n-- ARROW_GOOGLE_CLOUD_CPP_BUILD_VERSION: v1.42.0\r\n-- ARROW_GOOGLE_CLOUD_CPP_BUILD_SHA256_CHECKSUM: c06ae9aededbb8aa217a6d2453754daa40b815f9a4004bc4f2d2d215c79828aa\r\n-- ARROW_GRPC_BUILD_VERSION: v1.46.3\r\n-- ARROW_GRPC_BUILD_SHA256_CHECKSUM: d6cbf22cb5007af71b61c6be316a79397469c58c82a942552a62e708bce60964\r\n-- ARROW_GTEST_BUILD_VERSION: 1.11.0\r\n-- ARROW_GTEST_BUILD_SHA256_CHECKSUM: b4870bf121ff7795ba20d20bcdd8627b8e088f2d1dab299a031c1034eddc93d5\r\n-- ARROW_JEMALLOC_BUILD_VERSION: 5.3.0\r\n-- ARROW_JEMALLOC_BUILD_SHA256_CHECKSUM: 2db82d1e7119df3e71b7640219b6dfe84789bc0537983c3b7ac4f7189aecfeaa\r\n-- ARROW_LZ4_BUILD_VERSION: 8f61d8eb7c6979769a484cde8df61ff7c4c77765\r\n-- ARROW_LZ4_BUILD_SHA256_CHECKSUM: 5b072d848f2f93fddb97e1143e22c1bd7fa19fc8431ee69e21758190a88125b4\r\n-- ARROW_MIMALLOC_BUILD_VERSION: v2.0.6\r\n-- ARROW_MIMALLOC_BUILD_SHA256_CHECKSUM: 9f05c94cc2b017ed13698834ac2a3567b6339a8bde27640df5a1581d49d05ce5\r\n-- ARROW_NLOHMANN_JSON_BUILD_VERSION: v3.10.5\r\n-- ARROW_NLOHMANN_JSON_BUILD_SHA256_CHECKSUM: 5daca6ca216495edf89d167f808d1d03c4a4d929cef7da5e10f135ae1540c7e4\r\n-- ARROW_OPENTELEMETRY_BUILD_VERSION: v1.4.1\r\n-- ARROW_OPENTELEMETRY_BUILD_SHA256_CHECKSUM: 301b1ab74a664723560f46c29f228360aff1e2d63e930b963755ea077ae67524\r\n-- ARROW_OPENTELEMETRY_PROTO_BUILD_VERSION: v0.17.0\r\n-- ARROW_OPENTELEMETRY_PROTO_BUILD_SHA256_CHECKSUM: f269fbcb30e17b03caa1decd231ce826e59d7651c0f71c3b28eb5140b4bb5412\r\n-- ARROW_ORC_BUILD_VERSION: 1.7.5\r\n-- ARROW_ORC_BUILD_SHA256_CHECKSUM: b90cae5853e3ea0e5bf64e3883d09d871ec280536e0bb2cc52d08f79f0be0010\r\n-- ARROW_PROTOBUF_BUILD_VERSION: v21.3\r\n-- ARROW_PROTOBUF_BUILD_SHA256_CHECKSUM: 2f723218f6cb709ae4cdc4fb5ed56a5951fc5d466f0128ce4c946b8c78c8c49f\r\n-- ARROW_RAPIDJSON_BUILD_VERSION: 232389d4f1012dddec4ef84861face2d2ba85709\r\n-- ARROW_RAPIDJSON_BUILD_SHA256_CHECKSUM: b9290a9a6d444c8e049bd589ab804e0ccf2b05dc5984a19ed5ae75d090064806\r\n-- ARROW_RE2_BUILD_VERSION: 2022-06-01\r\n-- ARROW_RE2_BUILD_SHA256_CHECKSUM: f89c61410a072e5cbcf8c27e3a778da7d6fd2f2b5b1445cd4f4508bee946ab0f\r\n-- ARROW_SNAPPY_BUILD_VERSION: 1.1.9\r\n-- ARROW_SNAPPY_BUILD_SHA256_CHECKSUM: 75c1fbb3d618dd3a0483bff0e26d0a92b495bbe5059c8b4f1c962b478b6e06e7\r\n-- ARROW_SNAPPY_OLD_BUILD_VERSION: 1.1.8\r\n-- ARROW_SNAPPY_OLD_BUILD_SHA256_CHECKSUM: 16b677f07832a612b0836178db7f374e414f94657c138e6993cbfc5dcc58651f\r\n-- ARROW_SUBSTRAIT_BUILD_VERSION: v0.6.0\r\n-- ARROW_SUBSTRAIT_BUILD_SHA256_CHECKSUM: 7b8583b9684477e9027f417bbfb4febb8acfeb01923dcaa7cf0fd3f921d69c88\r\n-- ARROW_THRIFT_BUILD_VERSION: 0.16.0\r\n-- ARROW_THRIFT_BUILD_SHA256_CHECKSUM: f460b5c1ca30d8918ff95ea3eb6291b3951cf518553566088f3f2be8981f6209\r\n-- ARROW_UCX_BUILD_VERSION: 1.12.1\r\n-- ARROW_UCX_BUILD_SHA256_CHECKSUM: 9bef31aed0e28bf1973d28d74d9ac4f8926c43ca3b7010bd22a084e164e31b71\r\n-- ARROW_UTF8PROC_BUILD_VERSION: v2.7.0\r\n-- ARROW_UTF8PROC_BUILD_SHA256_CHECKSUM: 4bb121e297293c0fd55f08f83afab6d35d48f0af4ecc07523ad8ec99aa2b12a1\r\n-- ARROW_XSIMD_BUILD_VERSION: 8.1.0\r\n-- ARROW_XSIMD_BUILD_SHA256_CHECKSUM: d52551360d37709675237d2a0418e28f70995b5b7cdad7c674626bcfbbf48328\r\n-- ARROW_ZLIB_BUILD_VERSION: 1.2.12\r\n-- ARROW_ZLIB_BUILD_SHA256_CHECKSUM: 91844808532e5ce316b3c010929493c0244f3d37593afd6de04f71821d5136d9\r\n-- ARROW_ZSTD_BUILD_VERSION: v1.5.2\r\n-- ARROW_ZSTD_BUILD_SHA256_CHECKSUM: f7de13462f7a82c29ab865820149e778cbfe01087b3a55b5332707abf9db4a6e\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed\r\n-- Check if compiler accepts -pthread\r\n-- Check if compiler accepts -pthread - yes\r\n-- Found Threads: TRUE  \r\n-- Looking for _M_ARM64\r\n-- Looking for _M_ARM64 - not found\r\n-- Looking for __SIZEOF_INT128__\r\n-- Looking for __SIZEOF_INT128__ - found\r\n-- Found Boost: /usr/include (found suitable version \"1.66.0\", minimum required is \"1.58\")  \r\n-- Boost include dir: /usr/include\r\nCMake Warning at cmake_modules/FindSnappyAlt.cmake:25 (find_package):\r\n  By not providing \"FindSnappy.cmake\" in CMAKE_MODULE_PATH this project has\r\n  asked CMake to find a package configuration file provided by \"Snappy\", but\r\n  CMake did not find one.\r\n\r\n  Could not find a package configuration file provided by \"Snappy\" with any\r\n  of the following names:\r\n\r\n    SnappyConfig.cmake\r\n    snappy-config.cmake\r\n\r\n  Add the installation prefix of \"Snappy\" to CMAKE_PREFIX_PATH or set\r\n  \"Snappy_DIR\" to a directory containing one of the above files.  If \"Snappy\"\r\n  provides a separate development package or SDK, be sure it has been\r\n  installed.\r\nCall Stack (most recent call first):\r\n  cmake_modules/ThirdpartyToolchain.cmake:257 (find_package)\r\n  cmake_modules/ThirdpartyToolchain.cmake:1137 (resolve_dependency)\r\n  CMakeLists.txt:575 (include)\r\n\r\n\r\n-- Could NOT find SnappyAlt (missing: Snappy_LIB Snappy_INCLUDE_DIR) \r\n-- Building snappy from source\r\n-- Building without OpenSSL support. Minimum OpenSSL version 1.0.2 required.\r\n-- Checking for module 'thrift'\r\n--   Package 'thrift', required by 'virtual:world', not found\r\n-- Could NOT find Thrift: Found unsuitable version \"\", but required is at least \"0.11.0\" (found THRIFT_LIB-NOTFOUND)\r\n-- Building Apache Thrift from source\r\nCMake Warning at cmake_modules/FindRapidJSONAlt.cmake:25 (find_package):\r\n  By not providing \"FindRapidJSON.cmake\" in CMAKE_MODULE_PATH this project\r\n  has asked CMake to find a package configuration file provided by\r\n  \"RapidJSON\", but CMake did not find one.\r\n\r\n  Could not find a package configuration file provided by \"RapidJSON\"\r\n  (requested version 1.1.0) with any of the following names:\r\n\r\n    RapidJSONConfig.cmake\r\n    rapidjson-config.cmake\r\n\r\n  Add the installation prefix of \"RapidJSON\" to CMAKE_PREFIX_PATH or set\r\n  \"RapidJSON_DIR\" to a directory containing one of the above files.  If\r\n  \"RapidJSON\" provides a separate development package or SDK, be sure it has\r\n  been installed.\r\nCall Stack (most recent call first):\r\n  cmake_modules/ThirdpartyToolchain.cmake:257 (find_package)\r\n  cmake_modules/ThirdpartyToolchain.cmake:2189 (resolve_dependency)\r\n  CMakeLists.txt:575 (include)\r\n\r\n\r\n-- Could NOT find RapidJSONAlt (missing: RAPIDJSON_INCLUDE_DIR) (Required is at least version \"1.1.0\")\r\n-- Building RapidJSON from source\r\nCMake Warning at cmake_modules/ThirdpartyToolchain.cmake:257 (find_package):\r\n  By not providing \"Findxsimd.cmake\" in CMAKE_MODULE_PATH this project has\r\n  asked CMake to find a package configuration file provided by \"xsimd\", but\r\n  CMake did not find one.\r\n\r\n  Could not find a package configuration file provided by \"xsimd\" (requested\r\n  version 8.1.0) with any of the following names:\r\n\r\n    xsimdConfig.cmake\r\n    xsimd-config.cmake\r\n\r\n  Add the installation prefix of \"xsimd\" to CMAKE_PREFIX_PATH or set\r\n  \"xsimd_DIR\" to a directory containing one of the above files.  If \"xsimd\"\r\n  provides a separate development package or SDK, be sure it has been\r\n  installed.\r\nCall Stack (most recent call first):\r\n  cmake_modules/ThirdpartyToolchain.cmake:2246 (resolve_dependency)\r\n  CMakeLists.txt:575 (include)\r\n\r\n\r\n-- Building xsimd from source\r\nCMake Warning at cmake_modules/Findlz4Alt.cmake:25 (find_package):\r\n  By not providing \"Findlz4.cmake\" in CMAKE_MODULE_PATH this project has\r\n  asked CMake to find a package configuration file provided by \"lz4\", but\r\n  CMake did not find one.\r\n\r\n  Could not find a package configuration file provided by \"lz4\" with any of\r\n  the following names:\r\n\r\n    lz4Config.cmake\r\n    lz4-config.cmake\r\n\r\n  Add the installation prefix of \"lz4\" to CMAKE_PREFIX_PATH or set \"lz4_DIR\"\r\n  to a directory containing one of the above files.  If \"lz4\" provides a\r\n  separate development package or SDK, be sure it has been installed.\r\nCall Stack (most recent call first):\r\n  cmake_modules/ThirdpartyToolchain.cmake:257 (find_package)\r\n  cmake_modules/ThirdpartyToolchain.cmake:2354 (resolve_dependency)\r\n  CMakeLists.txt:575 (include)\r\n\r\n\r\n-- Checking for module 'liblz4'\r\n--   Package 'liblz4', required by 'virtual:world', not found\r\n-- Could NOT find lz4Alt (missing: LZ4_LIB LZ4_INCLUDE_DIR) \r\n-- Building lz4 from source\r\nCMake Warning at cmake_modules/Findre2Alt.cmake:25 (find_package):\r\n  By not providing \"Findre2.cmake\" in CMAKE_MODULE_PATH this project has\r\n  asked CMake to find a package configuration file provided by \"re2\", but\r\n  CMake did not find one.\r\n\r\n  Could not find a package configuration file provided by \"re2\" with any of\r\n  the following names:\r\n\r\n    re2Config.cmake\r\n    re2-config.cmake\r\n\r\n  Add the installation prefix of \"re2\" to CMAKE_PREFIX_PATH or set \"re2_DIR\"\r\n  to a directory containing one of the above files.  If \"re2\" provides a\r\n  separate development package or SDK, be sure it has been installed.\r\nCall Stack (most recent call first):\r\n  cmake_modules/ThirdpartyToolchain.cmake:257 (find_package)\r\n  cmake_modules/ThirdpartyToolchain.cmake:2483 (resolve_dependency)\r\n  CMakeLists.txt:575 (include)\r\n\r\n\r\n-- Checking for module 're2'\r\n--   Package 're2', required by 'virtual:world', not found\r\n-- Could NOT find re2Alt (missing: RE2_LIB RE2_INCLUDE_DIR) \r\n-- Building RE2 from source\r\n-- Could NOT find utf8proc: Found unsuitable version \"2.1.1\", but required is at least \"2.2.0\" (found /usr/lib64/libutf8proc.so)\r\n-- Building utf8proc from source\r\n-- Found hdfs.h at: /tmp/Rtmp6bSuH3/R.INSTALL40fe61c13650d/arrow/tools/cpp/thirdparty/hadoop/include/hdfs.h\r\n-- All bundled static libraries: Snappy::snappy-static;thrift::thrift;lz4::lz4;re2::re2;utf8proc::utf8proc\r\n-- CMAKE_C_FLAGS:  -O3 -DNDEBUG  -Wall -fno-semantic-interposition -msse4.2 \r\n-- CMAKE_CXX_FLAGS:  -Wno-noexcept-type  -fdiagnostics-color=always -O3 -DNDEBUG  -Wall -fno-semantic-interposition -msse4.2 \r\n-- Looking for backtrace\r\n-- Looking for backtrace - found\r\n-- backtrace facility detected in default set of libraries\r\n-- Found Backtrace: /usr/include  \r\n-- Creating bundled static library target arrow_bundled_dependencies at /tmp/rmt/release/libarrow_bundled_dependencies.a\r\n-- ---------------------------------------------------------------------\r\n-- Arrow version:                                 9.0.0\r\n-- \r\n-- Build configuration summary:\r\n--   Generator: Unix Makefiles\r\n--   Build type: RELEASE\r\n--   Source directory: /tmp/Rtmp6bSuH3/R.INSTALL40fe61c13650d/arrow/tools/cpp\r\n--   Install prefix: /tmp/Rtmp6bSuH3/R.INSTALL40fe61c13650d/arrow/libarrow/arrow-9.0.0\r\n-- \r\n-- Compile and link options:\r\n-- \r\n--   ARROW_CXXFLAGS=\"\" [default=\"\"]\r\n--       Compiler flags to append when compiling Arrow\r\n--   ARROW_BUILD_STATIC=ON [default=ON]\r\n--       Build static libraries\r\n--   ARROW_BUILD_SHARED=OFF [default=ON]\r\n--       Build shared libraries\r\n--   ARROW_PACKAGE_KIND=\"\" [default=\"\"]\r\n--       Arbitrary string that identifies the kind of package\r\n--       (for informational purposes)\r\n--   ARROW_GIT_ID=\"\" [default=\"\"]\r\n--       The Arrow git commit id (if any)\r\n--   ARROW_GIT_DESCRIPTION=\"\" [default=\"\"]\r\n--       The Arrow git commit description (if any)\r\n--   ARROW_NO_DEPRECATED_API=OFF [default=OFF]\r\n--       Exclude deprecated APIs from build\r\n--   ARROW_POSITION_INDEPENDENT_CODE=ON [default=ON]\r\n--       Whether to create position-independent target\r\n--   ARROW_USE_CCACHE=ON [default=ON]\r\n--       Use ccache when compiling (if available)\r\n--   ARROW_USE_LD_GOLD=OFF [default=OFF]\r\n--       Use ld.gold for linking on Linux (if available)\r\n--   ARROW_USE_PRECOMPILED_HEADERS=OFF [default=OFF]\r\n--       Use precompiled headers when compiling\r\n--   ARROW_SIMD_LEVEL=SSE4_2 [default=NONE|SSE4_2|AVX2|AVX512|NEON|DEFAULT]\r\n--       Compile-time SIMD optimization level\r\n--   ARROW_RUNTIME_SIMD_LEVEL=MAX [default=NONE|SSE4_2|AVX2|AVX512|MAX]\r\n--       Max runtime SIMD optimization level\r\n--   ARROW_ARMV8_ARCH=armv8-a [default=armv8-a|armv8-a+crc+crypto]\r\n--       Arm64 arch and extensions\r\n--   ARROW_ALTIVEC=ON [default=ON]\r\n--       Build with Altivec if compiler has support\r\n--   ARROW_RPATH_ORIGIN=OFF [default=OFF]\r\n--       Build Arrow libraries with RATH set to $ORIGIN\r\n--   ARROW_INSTALL_NAME_RPATH=ON [default=ON]\r\n--       Build Arrow libraries with install_name set to @rpath\r\n--   ARROW_GGDB_DEBUG=ON [default=ON]\r\n--       Pass -ggdb flag to debug builds\r\n-- \r\n-- Test and benchmark options:\r\n-- \r\n--   ARROW_BUILD_EXAMPLES=OFF [default=OFF]\r\n--       Build the Arrow examples\r\n--   ARROW_BUILD_TESTS=OFF [default=OFF]\r\n--       Build the Arrow googletest unit tests\r\n--   ARROW_ENABLE_TIMING_TESTS=ON [default=ON]\r\n--       Enable timing-sensitive tests\r\n--   ARROW_BUILD_INTEGRATION=OFF [default=OFF]\r\n--       Build the Arrow integration test executables\r\n--   ARROW_BUILD_BENCHMARKS=OFF [default=OFF]\r\n--       Build the Arrow micro benchmarks\r\n--   ARROW_BUILD_BENCHMARKS_REFERENCE=OFF [default=OFF]\r\n--       Build the Arrow micro reference benchmarks\r\n--   ARROW_BUILD_OPENMP_BENCHMARKS=OFF [default=OFF]\r\n--       Build the Arrow benchmarks that rely on OpenMP\r\n--   ARROW_BUILD_DETAILED_BENCHMARKS=OFF [default=OFF]\r\n--       Build benchmarks that do a longer exploration of performance\r\n--   ARROW_TEST_LINKAGE=static [default=shared|static]\r\n--       Linkage of Arrow libraries with unit tests executables.\r\n--   ARROW_FUZZING=OFF [default=OFF]\r\n--       Build Arrow Fuzzing executables\r\n--   ARROW_LARGE_MEMORY_TESTS=OFF [default=OFF]\r\n--       Enable unit tests which use large memory\r\n-- \r\n-- Lint options:\r\n-- \r\n--   ARROW_ONLY_LINT=OFF [default=OFF]\r\n--       Only define the lint and check-format targets\r\n--   ARROW_VERBOSE_LINT=OFF [default=OFF]\r\n--       If off, 'quiet' flags will be passed to linting tools\r\n--   ARROW_GENERATE_COVERAGE=OFF [default=OFF]\r\n--       Build with C++ code coverage enabled\r\n-- \r\n-- Checks options:\r\n-- \r\n--   ARROW_TEST_MEMCHECK=OFF [default=OFF]\r\n--       Run the test suite using valgrind --tool=memcheck\r\n--   ARROW_USE_ASAN=OFF [default=OFF]\r\n--       Enable Address Sanitizer checks\r\n--   ARROW_USE_TSAN=OFF [default=OFF]\r\n--       Enable Thread Sanitizer checks\r\n--   ARROW_USE_UBSAN=OFF [default=OFF]\r\n--       Enable Undefined Behavior sanitizer checks\r\n-- \r\n-- Project component options:\r\n-- \r\n--   ARROW_BUILD_UTILITIES=OFF [default=OFF]\r\n--       Build Arrow commandline utilities\r\n--   ARROW_COMPUTE=ON [default=OFF]\r\n--       Build the Arrow Compute Modules\r\n--   ARROW_CSV=ON [default=OFF]\r\n--       Build the Arrow CSV Parser Module\r\n--   ARROW_CUDA=OFF [default=OFF]\r\n--       Build the Arrow CUDA extensions (requires CUDA toolkit)\r\n--   ARROW_DATASET=ON [default=OFF]\r\n--       Build the Arrow Dataset Modules\r\n--   ARROW_SUBSTRAIT=OFF [default=OFF]\r\n--       Build the Arrow Substrait Consumer Module\r\n--   ARROW_FILESYSTEM=ON [default=OFF]\r\n--       Build the Arrow Filesystem Layer\r\n--   ARROW_FLIGHT=OFF [default=OFF]\r\n--       Build the Arrow Flight RPC System (requires GRPC, Protocol Buffers)\r\n--   ARROW_FLIGHT_SQL=OFF [default=OFF]\r\n--       Build the Arrow Flight SQL extension\r\n--   ARROW_GANDIVA=OFF [default=OFF]\r\n--       Build the Gandiva libraries\r\n--   ARROW_GCS=OFF [default=OFF]\r\n--       Build Arrow with GCS support (requires the GCloud SDK for C++)\r\n--   ARROW_HDFS=OFF [default=OFF]\r\n--       Build the Arrow HDFS bridge\r\n--   ARROW_IPC=ON [default=ON]\r\n--       Build the Arrow IPC extensions\r\n--   ARROW_JEMALLOC=OFF [default=ON]\r\n--       Build the Arrow jemalloc-based allocator\r\n--   ARROW_JNI=OFF [default=OFF]\r\n--       Build the Arrow JNI lib\r\n--   ARROW_JSON=ON [default=OFF]\r\n--       Build Arrow with JSON support (requires RapidJSON)\r\n--   ARROW_MIMALLOC=OFF [default=OFF]\r\n--       Build the Arrow mimalloc-based allocator\r\n--   ARROW_PARQUET=ON [default=OFF]\r\n--       Build the Parquet libraries\r\n--   ARROW_ORC=OFF [default=OFF]\r\n--       Build the Arrow ORC adapter\r\n--   ARROW_PLASMA=OFF [default=OFF]\r\n--       Build the plasma object store along with Arrow\r\n--   ARROW_PLASMA_JAVA_CLIENT=OFF [default=OFF]\r\n--       Build the plasma object store java client\r\n--   ARROW_PYTHON=OFF [default=OFF]\r\n--       Build the Arrow CPython extensions\r\n--   ARROW_S3=OFF [default=OFF]\r\n--       Build Arrow with S3 support (requires the AWS SDK for C++)\r\n--   ARROW_SKYHOOK=OFF [default=OFF]\r\n--       Build the Skyhook libraries\r\n--   ARROW_TENSORFLOW=OFF [default=OFF]\r\n--       Build Arrow with TensorFlow support enabled\r\n--   ARROW_TESTING=OFF [default=OFF]\r\n--       Build the Arrow testing libraries\r\n-- \r\n-- Thirdparty toolchain options:\r\n-- \r\n--   ARROW_DEPENDENCY_SOURCE=AUTO [default=AUTO|BUNDLED|SYSTEM|CONDA|VCPKG|BREW]\r\n--       Method to use for acquiring arrow's build dependencies\r\n--   ARROW_VERBOSE_THIRDPARTY_BUILD=OFF [default=OFF]\r\n--       Show output from ExternalProjects rather than just logging to files\r\n--   ARROW_DEPENDENCY_USE_SHARED=ON [default=ON]\r\n--       Link to shared libraries\r\n--   ARROW_BOOST_USE_SHARED=OFF [default=ON]\r\n--       Rely on Boost shared libraries where relevant\r\n--   ARROW_BROTLI_USE_SHARED=ON [default=ON]\r\n--       Rely on Brotli shared libraries where relevant\r\n--   ARROW_BZ2_USE_SHARED=ON [default=ON]\r\n--       Rely on Bz2 shared libraries where relevant\r\n--   ARROW_GFLAGS_USE_SHARED=ON [default=ON]\r\n--       Rely on GFlags shared libraries where relevant\r\n--   ARROW_GRPC_USE_SHARED=ON [default=ON]\r\n--       Rely on gRPC shared libraries where relevant\r\n--   ARROW_JEMALLOC_USE_SHARED=ON [default=ON]\r\n--       Rely on jemalloc shared libraries where relevant\r\n--   ARROW_LZ4_USE_SHARED=ON [default=ON]\r\n--       Rely on lz4 shared libraries where relevant\r\n--   ARROW_OPENSSL_USE_SHARED=ON [default=ON]\r\n--       Rely on OpenSSL shared libraries where relevant\r\n--   ARROW_PROTOBUF_USE_SHARED=ON [default=ON]\r\n--       Rely on Protocol Buffers shared libraries where relevant\r\n--   ARROW_SNAPPY_USE_SHARED=ON [default=ON]\r\n--       Rely on snappy shared libraries where relevant\r\n--   ARROW_THRIFT_USE_SHARED=ON [default=ON]\r\n--       Rely on thrift shared libraries where relevant\r\n--   ARROW_UTF8PROC_USE_SHARED=ON [default=ON]\r\n--       Rely on utf8proc shared libraries where relevant\r\n--   ARROW_ZSTD_USE_SHARED=ON [default=ON]\r\n--       Rely on zstd shared libraries where relevant\r\n--   ARROW_USE_GLOG=OFF [default=OFF]\r\n--       Build libraries with glog support for pluggable logging\r\n--   ARROW_WITH_BACKTRACE=ON [default=ON]\r\n--       Build with backtrace support\r\n--   ARROW_WITH_OPENTELEMETRY=OFF [default=OFF]\r\n--       Build libraries with OpenTelemetry support for distributed tracing\r\n--   ARROW_WITH_BROTLI=OFF [default=OFF]\r\n--       Build with Brotli compression\r\n--   ARROW_WITH_BZ2=OFF [default=OFF]\r\n--       Build with BZ2 compression\r\n--   ARROW_WITH_LZ4=ON [default=OFF]\r\n--       Build with lz4 compression\r\n--   ARROW_WITH_SNAPPY=ON [default=OFF]\r\n--       Build with Snappy compression\r\n--   ARROW_WITH_ZLIB=OFF [default=OFF]\r\n--       Build with zlib compression\r\n--   ARROW_WITH_ZSTD=OFF [default=OFF]\r\n--       Build with zstd compression\r\n--   ARROW_WITH_UCX=OFF [default=OFF]\r\n--       Build with UCX transport for Arrow Flight\r\n--       (only used if ARROW_FLIGHT is ON)\r\n--   ARROW_WITH_UTF8PROC=ON [default=ON]\r\n--       Build with support for Unicode properties using the utf8proc library\r\n--       (only used if ARROW_COMPUTE is ON or ARROW_GANDIVA is ON)\r\n--   ARROW_WITH_RE2=ON [default=ON]\r\n--       Build with support for regular expressions using the re2 library\r\n--       (only used if ARROW_COMPUTE or ARROW_GANDIVA is ON)\r\n-- \r\n-- Parquet options:\r\n-- \r\n--   PARQUET_MINIMAL_DEPENDENCY=OFF [default=OFF]\r\n--       Depend only on Thirdparty headers to build libparquet.\r\n--       Always OFF if building binaries\r\n--   PARQUET_BUILD_EXECUTABLES=OFF [default=OFF]\r\n--       Build the Parquet executable CLI tools. Requires static libraries to be built.\r\n--   PARQUET_BUILD_EXAMPLES=OFF [default=OFF]\r\n--       Build the Parquet examples. Requires static libraries to be built.\r\n--   PARQUET_REQUIRE_ENCRYPTION=OFF [default=OFF]\r\n--       Build support for encryption. Fail if OpenSSL is not found\r\n-- \r\n-- Gandiva options:\r\n-- \r\n--   ARROW_GANDIVA_JAVA=OFF [default=OFF]\r\n--       Build the Gandiva JNI wrappers\r\n--   ARROW_GANDIVA_STATIC_LIBSTDCPP=OFF [default=OFF]\r\n--       Include -static-libstdc++ -static-libgcc when linking with\r\n--       Gandiva static libraries\r\n--   ARROW_GANDIVA_PC_CXX_FLAGS=\"\" [default=\"\"]\r\n--       Compiler flags to append when pre-compiling Gandiva operations\r\n-- \r\n-- Advanced developer options:\r\n-- \r\n--   ARROW_EXTRA_ERROR_CONTEXT=OFF [default=OFF]\r\n--       Compile with extra error context (line numbers, code)\r\n--   ARROW_OPTIONAL_INSTALL=OFF [default=OFF]\r\n--       If enabled install ONLY targets that have already been built. Please be\r\n--       advised that if this is enabled 'install' will fail silently on components\r\n--       that have not been built\r\n--   Outputting build configuration summary to /tmp/rmt/cmake_summary.json\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /tmp/rmt\r\n+ /bin/cmake --build . --target install\r\n[  0%] Creating directories for 'snappy_ep'\r\n[  1%] Creating directories for 'utf8proc_ep'\r\n[  1%] Performing download step (download, verify and extract) for 'snappy_ep'\r\n[  1%] Performing download step (download, verify and extract) for 'utf8proc_ep'\r\n-- utf8proc_ep download command succeeded.  See also /tmp/rmt/utf8proc_ep-prefix/src/utf8proc_ep-stamp/utf8proc_ep-download-*.log\r\n[  1%] No update step for 'utf8proc_ep'\r\n-- snappy_ep download command succeeded.  See also /tmp/rmt/snappy_ep-prefix/src/snappy_ep-stamp/snappy_ep-download-*.log\r\n[  1%] No patch step for 'utf8proc_ep'\r\n[  1%] No update step for 'snappy_ep'\r\n[  2%] Performing configure step for 'utf8proc_ep'\r\n[  2%] No patch step for 'snappy_ep'\r\n[  2%] Performing configure step for 'snappy_ep'\r\n-- utf8proc_ep configure command succeeded.  See also /tmp/rmt/utf8proc_ep-prefix/src/utf8proc_ep-stamp/utf8proc_ep-configure-*.log\r\n[  2%] Performing build step for 'utf8proc_ep'\r\n-- utf8proc_ep build command succeeded.  See also /tmp/rmt/utf8proc_ep-prefix/src/utf8proc_ep-stamp/utf8proc_ep-build-*.log\r\n[  2%] Performing install step for 'utf8proc_ep'\r\n-- utf8proc_ep install command succeeded.  See also /tmp/rmt/utf8proc_ep-prefix/src/utf8proc_ep-stamp/utf8proc_ep-install-*.log\r\n[  2%] Completed 'utf8proc_ep'\r\n[  2%] Built target utf8proc_ep\r\n[  2%] Creating directories for 'thrift_ep'\r\n[  3%] Performing download step (download, verify and extract) for 'thrift_ep'\r\n-- thrift_ep download command succeeded.  See also /tmp/rmt/thrift_ep-prefix/src/thrift_ep-stamp/thrift_ep-download-*.log\r\n[  4%] No update step for 'thrift_ep'\r\n[  4%] No patch step for 'thrift_ep'\r\n[  4%] Performing configure step for 'thrift_ep'\r\n-- snappy_ep configure command succeeded.  See also /tmp/rmt/snappy_ep-prefix/src/snappy_ep-stamp/snappy_ep-configure-*.log\r\n[  5%] Performing build step for 'snappy_ep'\r\n-- snappy_ep build command succeeded.  See also /tmp/rmt/snappy_ep-prefix/src/snappy_ep-stamp/snappy_ep-build-*.log\r\n[  6%] Performing install step for 'snappy_ep'\r\n-- snappy_ep install command succeeded.  See also /tmp/rmt/snappy_ep-prefix/src/snappy_ep-stamp/snappy_ep-install-*.log\r\n[  6%] Completed 'snappy_ep'\r\n[  6%] Built target snappy_ep\r\n[  6%] Creating directories for 'rapidjson_ep'\r\n[  7%] Performing download step (download, verify and extract) for 'rapidjson_ep'\r\n-- rapidjson_ep download command succeeded.  See also /tmp/rmt/src/rapidjson_ep-stamp/rapidjson_ep-download-*.log\r\n[  8%] No update step for 'rapidjson_ep'\r\n[  8%] No patch step for 'rapidjson_ep'\r\n[  8%] Performing configure step for 'rapidjson_ep'\r\n-- rapidjson_ep configure command succeeded.  See also /tmp/rmt/src/rapidjson_ep-stamp/rapidjson_ep-configure-*.log\r\n[  8%] Performing build step for 'rapidjson_ep'\r\n-- rapidjson_ep build command succeeded.  See also /tmp/rmt/src/rapidjson_ep-stamp/rapidjson_ep-build-*.log\r\n[  8%] Performing install step for 'rapidjson_ep'\r\n-- rapidjson_ep install command succeeded.  See also /tmp/rmt/src/rapidjson_ep-stamp/rapidjson_ep-install-*.log\r\n[  9%] Completed 'rapidjson_ep'\r\n[  9%] Built target rapidjson_ep\r\n[  9%] Creating directories for 'lz4_ep'\r\n[  9%] Performing download step (download, verify and extract) for 'lz4_ep'\r\n-- lz4_ep download command succeeded.  See also /tmp/rmt/lz4_ep-prefix/src/lz4_ep-stamp/lz4_ep-download-*.log\r\n[  9%] Performing update step for 'lz4_ep'\r\n[ 10%] No patch step for 'lz4_ep'\r\n[ 11%] No configure step for 'lz4_ep'\r\n[ 11%] Performing build step for 'lz4_ep'\r\n-- thrift_ep configure command succeeded.  See also /tmp/rmt/thrift_ep-prefix/src/thrift_ep-stamp/thrift_ep-configure-*.log\r\n[ 11%] Performing build step for 'thrift_ep'\r\n-- lz4_ep build command succeeded.  See also /tmp/rmt/lz4_ep-prefix/src/lz4_ep-stamp/lz4_ep-build-*.log\r\n[ 11%] No install step for 'lz4_ep'\r\n[ 11%] Completed 'lz4_ep'\r\n[ 11%] Built target lz4_ep\r\n[ 11%] Creating directories for 'xsimd_ep'\r\n[ 11%] Performing download step (download, verify and extract) for 'xsimd_ep'\r\n-- xsimd_ep download command succeeded.  See also /tmp/rmt/src/xsimd_ep-stamp/xsimd_ep-download-*.log\r\n[ 12%] No update step for 'xsimd_ep'\r\n[ 12%] No patch step for 'xsimd_ep'\r\n[ 12%] Performing configure step for 'xsimd_ep'\r\n-- xsimd_ep configure command succeeded.  See also /tmp/rmt/src/xsimd_ep-stamp/xsimd_ep-configure-*.log\r\n[ 13%] Performing build step for 'xsimd_ep'\r\n-- xsimd_ep build command succeeded.  See also /tmp/rmt/src/xsimd_ep-stamp/xsimd_ep-build-*.log\r\n[ 14%] Performing install step for 'xsimd_ep'\r\n-- xsimd_ep install command succeeded.  See also /tmp/rmt/src/xsimd_ep-stamp/xsimd_ep-install-*.log\r\n[ 14%] Completed 'xsimd_ep'\r\n[ 14%] Built target xsimd_ep\r\n[ 14%] Creating directories for 're2_ep'\r\n[ 14%] Performing download step (download, verify and extract) for 're2_ep'\r\n-- re2_ep download command succeeded.  See also /tmp/rmt/re2_ep-prefix/src/re2_ep-stamp/re2_ep-download-*.log\r\n[ 14%] No update step for 're2_ep'\r\n[ 15%] No patch step for 're2_ep'\r\n[ 16%] Performing configure step for 're2_ep'\r\n-- re2_ep configure command succeeded.  See also /tmp/rmt/re2_ep-prefix/src/re2_ep-stamp/re2_ep-configure-*.log\r\n[ 16%] Performing build step for 're2_ep'\r\n-- thrift_ep build command succeeded.  See also /tmp/rmt/thrift_ep-prefix/src/thrift_ep-stamp/thrift_ep-build-*.log\r\n[ 16%] Performing install step for 'thrift_ep'\r\n-- thrift_ep install command succeeded.  See also /tmp/rmt/thrift_ep-prefix/src/thrift_ep-stamp/thrift_ep-install-*.log\r\n[ 17%] Completed 'thrift_ep'\r\n[ 17%] Built target thrift_ep\r\n-- re2_ep build command succeeded.  See also /tmp/rmt/re2_ep-prefix/src/re2_ep-stamp/re2_ep-build-*.log\r\n[ 17%] Performing install step for 're2_ep'\r\n-- re2_ep install command succeeded.  See also /tmp/rmt/re2_ep-prefix/src/re2_ep-stamp/re2_ep-install-*.log\r\n[ 17%] Completed 're2_ep'\r\n[ 17%] Built target re2_ep\r\n[ 17%] Built target toolchain\r\n[ 17%] Bundling /tmp/rmt/release/libarrow_bundled_dependencies.a\r\n[ 17%] Built target arrow_dependencies\r\n[ 18%] Building CXX object src/arrow/CMakeFiles/arrow_objlib.dir/array/array_base.cc.o\r\nIn file included from /opt/rh/gcc-toolset-11/root/usr/include/c++/11/ext/string_conversions.h:41,\r\n                 from /opt/rh/gcc-toolset-11/root/usr/include/c++/11/bits/basic_string.h:6608,\r\n                 from /opt/rh/gcc-toolset-11/root/usr/include/c++/11/string:55,\r\n                 from /tmp/Rtmp6bSuH3/R.INSTALL40fe61c13650d/arrow/tools/cpp/src/arrow/array/array_base.h:23,\r\n                 from /tmp/Rtmp6bSuH3/R.INSTALL40fe61c13650d/arrow/tools/cpp/src/arrow/array/array_base.cc:18:\r\n/opt/rh/gcc-toolset-11/root/usr/include/c++/11/cstdlib:75:15: fatal error: stdlib.h: No such file or directory\r\n   75 | #include_next <stdlib.h>\r\n      |               ^~~~~~~~~~\r\ncompilation terminated.\r\nmake[2]: *** [src/arrow/CMakeFiles/arrow_objlib.dir/build.make:76: src/arrow/CMakeFiles/arrow_objlib.dir/array/array_base.cc.o] Error 1\r\nmake[1]: *** [CMakeFiles/Makefile2:1361: src/arrow/CMakeFiles/arrow_objlib.dir/all] Error 2\r\nmake[1]: *** Waiting for unfinished jobs....\r\n[ 18%] Built target arrow_bundled_dependencies\r\ngmake: *** [Makefile:146: all] Error 2\r\n**** Error building Arrow C++.  \r\n------------------------- NOTE ---------------------------\r\nThere was an issue preparing the Arrow C++ libraries.\r\nSee https://arrow.apache.org/docs/r/articles/install.html\r\n---------------------------------------------------------\r\nERROR: configuration failed for package \u2018arrow\u2019\r\n* removing \u2018/usr/lib64/R/library/arrow\u2019\r\n```",
        "created_at": "2022-09-01T16:36:17.000Z",
        "updated_at": "2022-09-09T16:36:49.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-09-01T23:52:35.903Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17595?focusedCommentId=17599195) by Kouhei Sutou (kou):*\nCould you show how to install `devtoolset-11` on OLE (Oracle Enterprise Linux?) 8.5 to reproduce this case?"
        },
        {
            "created_at": "2022-09-02T14:15:03.470Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17595?focusedCommentId=17599511) by Robert Tidwell (cesartec):*\n```\n\r\ndnf install gcc-toolset-11\r\n```\r\n\r\nHere are the packages that I have installed:\r\n\r\n```\n\r\ngcc-toolset-11.x86_64                                    11.1-1.el8                               @acx-appstream \r\ngcc-toolset-11-annobin-docs.noarch                       10.23-1.el8                              @acx-appstream \r\ngcc-toolset-11-annobin-plugin-gcc.x86_64                 10.23-1.el8                              @acx-appstream \r\ngcc-toolset-11-binutils.x86_64                           2.36.1-2.0.1.el8                         @acx-appstream \r\ngcc-toolset-11-dwz.x86_64                                0.14-2.el8                               @acx-appstream \r\ngcc-toolset-11-dyninst.x86_64                            11.0.0-2.el8                             @acx-appstream \r\ngcc-toolset-11-elfutils.x86_64                           0.185-5.el8                              @acx-appstream \r\ngcc-toolset-11-elfutils-debuginfod-client.x86_64         0.185-5.el8                              @acx-appstream \r\ngcc-toolset-11-elfutils-libelf.x86_64                    0.185-5.el8                              @acx-appstream \r\ngcc-toolset-11-elfutils-libs.x86_64                      0.185-5.el8                              @acx-appstream \r\ngcc-toolset-11-gcc.x86_64                                11.2.1-9.1.0.2.el8                       @acx-appstream \r\ngcc-toolset-11-gcc-c++.x86_64                            11.2.1-9.1.0.2.el8                       @acx-appstream \r\ngcc-toolset-11-gcc-gdb-plugin.x86_64                     11.2.1-9.1.0.2.el8                       @acx-appstream \r\ngcc-toolset-11-gcc-gfortran.x86_64                       11.2.1-9.1.0.2.el8                       @acx-appstream \r\ngcc-toolset-11-gcc-plugin-devel.x86_64                   11.2.1-9.1.0.2.el8                       @acx-appstream \r\ngcc-toolset-11-gdb.x86_64                                10.2-5.0.1.el8                           @acx-appstream \r\ngcc-toolset-11-libquadmath-devel.x86_64                  11.2.1-9.1.0.2.el8                       @acx-appstream \r\ngcc-toolset-11-libstdc++-devel.x86_64                    11.2.1-9.1.0.2.el8                       @acx-appstream \r\ngcc-toolset-11-ltrace.x86_64                             0.7.91-1.el8                             @acx-appstream \r\ngcc-toolset-11-make.x86_64                               1:4.3-2.el8                              @acx-appstream \r\ngcc-toolset-11-make-devel.x86_64                         1:4.3-2.el8                              @acx-appstream \r\ngcc-toolset-11-perftools.x86_64                          11.1-1.el8                               @acx-appstream \r\ngcc-toolset-11-runtime.x86_64                            11.0-1.el8                               @acx-appstream \r\ngcc-toolset-11-strace.x86_64                             5.13-7.el8                               @acx-appstream \r\ngcc-toolset-11-systemtap.x86_64                          4.5-4.el8                                @acx-appstream \r\ngcc-toolset-11-systemtap-client.x86_64                   4.5-4.el8                                @acx-appstream \r\ngcc-toolset-11-systemtap-devel.x86_64                    4.5-4.el8                                @acx-appstream \r\ngcc-toolset-11-systemtap-runtime.x86_64                  4.5-4.el8                                @acx-appstream \r\ngcc-toolset-11-toolchain.x86_64                          11.1-1.el8                               @acx-appstream \r\ngcc-toolset-11-valgrind.x86_64                           1:3.17.0-6.el8                           @acx-appstream\r\n```"
        },
        {
            "created_at": "2022-09-02T21:31:55.331Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17595?focusedCommentId=17599720) by Kouhei Sutou (kou):*\nThanks. I could install `gcc-toolset-11`. But it's installed from the \"ol8_appstream\" repository. What is your \"acx-appstream\" repository?"
        },
        {
            "created_at": "2022-09-06T15:40:46.931Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17595?focusedCommentId=17600841) by Robert Tidwell (cesartec):*\nIt is a local repo of the OEL-appstream for 8.5"
        },
        {
            "created_at": "2022-09-06T23:41:19.920Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17595?focusedCommentId=17601056) by Kouhei Sutou (kou):*\nCould you try \"ol8_appstream\" instead of \"acx-appstream\"? I couldn't reproduce this with \"ol8_appstream\"."
        },
        {
            "created_at": "2022-09-09T16:36:49.540Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17595?focusedCommentId=17602463) by Robert Tidwell (cesartec):*\nInternal servers don't have access to the internet.  our appstream is a rsync of the external ol8_appstream."
        }
    ]
}