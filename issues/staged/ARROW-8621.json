{
    "issue": {
        "title": "[Release][Go] Add Module support by creating tags",
        "body": "***Note**: This issue was originally created as [ARROW-8621](https://issues.apache.org/jira/browse/ARROW-8621). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nArrow has a go.mod, but the go modules system expects a certain git tag for Go modules to work.\r\n\r\nBased on <https://github.com/golang/go/wiki/Modules#faqs--multi-module-repositories>\u00a0I believe the tag would be \r\n```Java\n\r\ngo/arrow/v0.17.0\r\n```\r\n\r\n\r\nCurrently:\r\n\r\n\r\n```Java\n\r\n$ go get github.com/apache/arrow/go/arrow@v0.17.0 \r\ngo get github.com/apache/arrow/go/arrow@v0.17.0: github.com/apache/arrow/go/arrow@v0.17.0: invalid version: unknown revision go/arrow/v0.17.0\r\n```\r\n\r\n",
        "created_at": "2020-04-29T13:22:27.000Z",
        "updated_at": "2021-10-27T15:14:24.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Go",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-10-05T21:11:57.000Z"
    },
    "comments": [
        {
            "created_at": "2021-04-18T18:25:21.186Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8621?focusedCommentId=17324577) by Matthew Topol (zeroshade):*\n`[~kszucs]` This is the JIRA issue I was referring to on the arrow-dev mailing list. If I knew more about how the tags are created in the release scripts I'd offer to make the change myself. This would significantly improve keeping the versioning the same across the different modules for languages.\r\n\r\nAlso with the addition of the go parquet library, this would involve both the tags:\r\n\r\n`go/arrow/v4.0.0` / `go/arrow/v4.0.0-rc0` for release candidates\r\n`go/parquet/v4.0.0`\r\n\r\nThanks"
        },
        {
            "created_at": "2021-07-26T01:24:14.005Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8621?focusedCommentId=17386978) by Kouhei Sutou (kou):*\nWe're using `apache-arrow-${VERSION`} format.\r\nDoes `go get github.com/apache/arrow/go/arrow@apache-arrow-4.0.1` work?"
        },
        {
            "created_at": "2021-07-26T14:38:26.959Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8621?focusedCommentId=17387392) by Matthew Topol (zeroshade):*\n`[~kou]` To my knowledge, because the go.mod is not at the root of the repo, we have to use the `go/arrow/v${VERSION}` format in order for it to get recognized by go.\r\n\r\nEven if pointing at the individual tags like that did work, it would prevent being able to use `go get -u github.com/apache/arrow/go/arrow` to upgrade/update the dependency and wouldn't show the versions on pkg.go.dev for the docs. All in all, we are going to want to create two tags:\r\n\r\ngo/arrow/v${VERSION}\r\ngo/parquet/v${VERSION} (now that i've been merging in the parquet implementation for Go)."
        },
        {
            "created_at": "2021-07-27T01:00:37.504Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8621?focusedCommentId=17387659) by Kouhei Sutou (kou):*\nAh, I understand. Thanks.\r\n\r\nI misunderstood that `v$\\{VERSION`} is only the tag name in `go/arrow/v${VERSION`}."
        },
        {
            "created_at": "2021-10-05T21:11:57.377Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8621?focusedCommentId=17424704) by Kouhei Sutou (kou):*\nIssue resolved by pull request 11312\n<https://github.com/apache/arrow/pull/11312>"
        },
        {
            "created_at": "2021-10-27T15:14:24.404Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8621?focusedCommentId=17434905) by Matthew Topol (zeroshade):*\nSo, it turns out that there's one more piece that needs to happen with the module tags. The go.mod and imports needs to updated to a corresponding major version sadly. Currently I get an error when i try to do `go get -u github.com/apache/arrow/go/arrow@v6.0.0` So i'll update the scripts accordingly. We'll probably need to either shift the go/arrow/v6.0.0 tags, or we'll need to release a version v6.0.1 after I make the update. \r\n\r\n`[~kou]` There exists a utility which can automate performing the update of the imports and go.mod files, but it requires having go installed to run. Is it okay to utilize that in the release scripts? Is there somewhere I should update to install Go or otherwise for the post-release tasks?"
        }
    ]
}