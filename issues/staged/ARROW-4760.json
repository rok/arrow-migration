{
    "issue": {
        "title": "[C++] protobuf 3.7 defines EXPECT_OK that clashes with Arrow's macro",
        "body": "***Note**: This issue was originally created as [ARROW-4760](https://issues.apache.org/jira/browse/ARROW-4760). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThis fails for me with the following error:\r\n```java\n\r\n/home/travis/build/xhochy/arrow/cpp/src/arrow/flight/test-util.cc\r\nIn file included from /home/travis/build/xhochy/arrow/cpp-toolchain/include/google/protobuf/util/type_resolver.h:39:0,\r\n                 from /home/travis/build/xhochy/arrow/cpp-toolchain/include/google/protobuf/util/json_util.h:37,\r\n                 from /home/travis/build/xhochy/arrow/cpp-toolchain/include/grpcpp/impl/codegen/config_protobuf.h:70,\r\n                 from /home/travis/build/xhochy/arrow/cpp/src/arrow/flight/customize_protobuf.h:23,\r\n                 from /home/travis/build/xhochy/arrow/cpp/src/arrow/flight/protocol-internal.h:20,\r\n                 from /home/travis/build/xhochy/arrow/cpp/src/arrow/flight/internal.h:23,\r\n                 from /home/travis/build/xhochy/arrow/cpp/src/arrow/flight/test-util.cc:35:\r\n/home/travis/build/xhochy/arrow/cpp-toolchain/include/google/protobuf/stubs/status.h:111:0: error: \"EXPECT_OK\" redefined [-Werror]\r\n #define EXPECT_OK(value) EXPECT_TRUE((value).ok())\r\n \r\nIn file included from /home/travis/build/xhochy/arrow/cpp/src/arrow/ipc/test-common.h:35:0,\r\n                 from /home/travis/build/xhochy/arrow/cpp/src/arrow/flight/test-util.cc:30:\r\n/home/travis/build/xhochy/arrow/cpp/src/arrow/testing/gtest_util.h:80:0: note: this is the location of the previous definition\r\n #define EXPECT_OK(expr)         \\\r\n \r\ncc1plus: all warnings being treated as errors\n```\r\nI would workaround this by renaming our `EXPECT_OK`\u00a0to `ARROW_EXPECT_OK`.",
        "created_at": "2019-03-04T16:58:33.000Z",
        "updated_at": "2019-03-14T15:13:08.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-03-14T15:13:08.000Z"
    },
    "comments": [
        {
            "created_at": "2019-03-06T03:53:22.371Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4760?focusedCommentId=16785192) by Wes McKinney (wesm):*\nIs there an upstream bug report? They shouldn't be exporting a macro named like that"
        },
        {
            "created_at": "2019-03-06T10:39:48.338Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4760?focusedCommentId=16785494) by Uwe Korn (uwe):*\nThis has been there for over 4 years now. This error simply popped up as I didn't include protobuf headers using `include(SYSTEM \u2026)`. Using `SYSTEM` will let the compiler ignore all warnings in third-party headers. We have been using this for now and I'll also switched to using this now in my CMake refactor as there is an awful lot of warnings in the thirdparty headers."
        },
        {
            "created_at": "2019-03-14T15:13:08.846Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4760?focusedCommentId=16792778) by Uwe Korn (uwe):*\nResolved by PR\u00a0https://github.com/apache/arrow/pull/3688"
        }
    ]
}