{
    "issue": {
        "title": "[JS] utf8 vector buffers don't work if allocated within Web Assembly memory of Node.js",
        "body": "***Note**: This issue was originally created as [ARROW-11326](https://issues.apache.org/jira/browse/ARROW-11326). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nAfter making int32array of offsets = [0, 1]\u00a0and uint8array of values =\u00a0[ascii_code('A')],\u00a0create a vector of strings:\r\n\r\nconst vec = arrow.Vector.new(arrow.Data.new(new Utf8(), 0, 1, 0, [offsets, values, null, null])\r\n\r\nthen access the first and only element:\r\n\r\nconsole.log(vec.get(0))\r\n\r\nWorks within browsers. Works in node.js with fixed size types, e.g. float or integer.\r\n\r\nFails in Node.js (v14.11.0.) with this callstack\u00a0\r\n\r\nat ../../node_modules/@apache-arrow/es2015-umd/buffer/index.js:311:1\r\n \u00a0\u00a0\u00a0at __proto__ (../../node_modules/@apache-arrow/es2015-umd/buffer/index.js:167:1)\r\n \u00a0\u00a0\u00a0at Function._Buffer [as from] (../../node_modules/@apache-arrow/es2015-umd/buffer/index.js:154:1)\r\n \u00a0\u00a0\u00a0at prototype (../../node_modules/@apache-arrow/es2015-umd/util/utf8.ts:43:31)\r\n \u00a0\u00a0\u00a0at partial2 (../../node_modules/@apache-arrow/es2015-umd/visitor/get.ts:293:12)\r\n \u00a0\u00a0\u00a0at go.isArray [as get] (../../node_modules/@apache-arrow/es2015-umd/vector/index.ts:175:43)\r\n \u00a0\u00a0\u00a0at Sr.get (../../node_modules/@apache-arrow/es2015-umd/util/args.ts:27:7)",
        "created_at": "2021-01-20T01:08:02.000Z",
        "updated_at": "2022-01-16T22:47:35.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: JavaScript",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-02-05T05:35:57.620Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11326?focusedCommentId=17279350) by Paul Taylor (paul.e.taylor):*\nThis sounds like a bug in node's Buffer class?\r\n\r\nWe use the Buffer to utf8 encode and decode in node, because it was (at the time of authorship) dramatically faster than TextEncoder/TextDecoder."
        },
        {
            "created_at": "2021-02-06T05:58:19.862Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11326?focusedCommentId=17280101) by Dmitri Bronnikov (dbronnik):*\nbuffer instanceof ArrayBuffer returns false for the web assembly instance memory buffer. Only in node.js though, returns true in the browser.\r\n\r\nI was certain that I ruled out it's web assembly buffer only... Thanks [~paul.e.taylor]"
        },
        {
            "created_at": "2021-02-09T04:29:24.322Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11326?focusedCommentId=17281520) by Dmitri Bronnikov (dbronnik):*\nIt's a Jest issue with globals, but wondering if src/util/utf8.ts could be changed to use _Buffer.fromArrayBuffer() instead of _Buffer.from() so arrow string vectors work under Jest? Thanks.\u00a0"
        },
        {
            "created_at": "2022-01-16T22:47:35.149Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11326?focusedCommentId=17476894) by Dominik Moritz (domoritz):*\nIs this still an issue with the latest Arrow in master? Can you provide a small example that reproduces the issue? \r\n\r\nI can make a new vector of strings with this\r\n\r\n\r\n```js\n\r\nconst v = Arrow.vectorFromArray('A', new Arrow.Utf8);\r\nconsole.log(v.get(0));\r\n```\r\n"
        }
    ]
}