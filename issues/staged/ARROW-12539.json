{
    "issue": {
        "title": "[C++] Unable to read date64 or date32 in specific format from CSV",
        "body": "***Note**: This issue was originally created as [ARROW-12539](https://issues.apache.org/jira/browse/ARROW-12539). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nwhen importing csv data with dates in the format `\"%d-%b-%y\"` or `\"%d-%b-%Y\"` an error is given in conversion:\r\n\r\nexample:\r\n```python\n\r\nimport pyarrow as pa\r\nfrom pyarrow import csv \r\n\r\ndata = b\"a,b\\n1,15-OCT-15\\n2,18-JUN-90\\n\"\r\ntp = [\"%d-%b-%y\"]\r\n\r\ntry:\r\n    schema_d64 = pa.schema([pa.field(\"a\", pa.int64()), pa.field(\"b\", pa.date64())])\r\n    co_d64 = csv.ConvertOptions(timestamp_parsers=tp, column_types=schema_d64)\r\n    a_d64 = csv.read_csv(pa.py_buffer(data), convert_options=co_d64)\r\nexcept Exception as e:\r\n    print(e)\r\ntry:\r\n    schema_d32 = pa.schema([pa.field(\"a\", pa.int64()), pa.field(\"b\", pa.date32())])\r\n    co_d32 = csv.ConvertOptions(timestamp_parsers=tp, column_types=schema_d32)\r\n    a_d32 = csv.read_csv(pa.py_buffer(data), convert_options=co_d32)\r\nexcept Exception as e:\r\n    print(e)\n```\r\n\u00a0",
        "created_at": "2021-04-26T10:41:30.000Z",
        "updated_at": "2021-04-28T13:58:56.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-04-28T13:55:35.694Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12539?focusedCommentId=17334749) by Joris Van den Bossche (jorisvandenbossche):*\nRelated, it would also be good (and probably a prerequisite for having it in CSV) to be able to cast strings to date (which works for timestamp, but not for date):\r\n\r\n```Java\n\r\nIn [3]: pa.array([\"2012-01-01\"]).cast(pa.timestamp('ms'))\r\nOut[3]: \r\n<pyarrow.lib.TimestampArray object at 0x7fae22d778e0>\r\n[\r\n  2012-01-01 00:00:00.000\r\n]\r\n\r\nIn [4]: pa.array([\"2012-01-01\"]).cast(pa.date32())\r\n...\r\nArrowNotImplementedError: Unsupported cast from string to date32 using function cast_date32\r\n```"
        }
    ]
}