{
    "issue": {
        "title": "[Python] Add StructType attribute to access all its fields",
        "body": "***Note**: This issue was originally created as [ARROW-14501](https://issues.apache.org/jira/browse/ARROW-14501). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently when having a StructType, you can check the number of fields or get a specific field by index:\r\n\r\n```Java\n\r\n>>> struct_type = pa.struct([('a', pa.int64()), ('b', pa.float64())])\r\n>>> struct_type.num_fields\r\n2\r\n>>> struct_type.get_field_index(\"a\")\r\n0\r\n>>> struct_type[0]\r\npyarrow.Field<a: int64>\r\n```\r\n\r\nand so that means you can actually get all fields by iterating:\r\n\r\n```Java\n\r\n>>> list(struct_type)\r\n[pyarrow.Field<a: int64>, pyarrow.Field<b: double>]\r\n```\r\n\r\nThat's straightfoward code once you know this, but personally I don't find this very discoverable. \r\n\r\nI think it would be nice to have some additional convenience attributes, such as `.fields` returning a list of all fields and `.names` returning a list of the field names (currently you need `[f.name for f in struct_type]` for this).",
        "created_at": "2021-10-28T11:19:45.000Z",
        "updated_at": "2021-10-28T11:19:45.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": []
}