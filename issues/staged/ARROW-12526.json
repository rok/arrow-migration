{
    "issue": {
        "title": "[Python] Pre-generate  pyarrow.compute members",
        "body": "***Note**: This issue was originally created as [ARROW-12526](https://issues.apache.org/jira/browse/ARROW-12526). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nStatic analysis tools (e.g. pylint) don't recognize simple members like pyarrow.compute.equal, they report is as _missing_. Generating file (well a file imported by this file I assume) <https://github.com/apache/arrow/blob/master/python/pyarrow/compute.py>\u00a0instead of runtime wrapping of the functions would improve the developer experience.",
        "created_at": "2021-04-24T10:30:15.000Z",
        "updated_at": "2022-09-04T15:33:40.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-04-24T10:31:54.905Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12526?focusedCommentId=17331193) by Adam Lippai (alippai):*\nA quick question regarding this topic: if we generate code do we push it to the GitHub repo or do we just create it on the fly upon a release?\u00a0"
        },
        {
            "created_at": "2021-04-26T15:39:00.117Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12526?focusedCommentId=17332510) by Joris Van den Bossche (jorisvandenbossche):*\nIn general, we commit generated code, I think.\r\n\r\nWondering, would something like ARROW-10316 also already help? Although I suppose not for static tools, that probably only makes the interactive use nicer."
        },
        {
            "created_at": "2021-04-26T15:39:14.252Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12526?focusedCommentId=17332511) by Joris Van den Bossche (jorisvandenbossche):*\ncc `[~apitrou]`"
        },
        {
            "created_at": "2021-04-26T16:20:07.827Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12526?focusedCommentId=17332560) by Antoine Pitrou (apitrou):*\nI would be fine with generating the file. We would need to commit it to the repository.\r\n\r\nGenerating the file would also allow generation to be more expensive without fear of growing import times."
        },
        {
            "created_at": "2021-05-12T11:13:48.223Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12526?focusedCommentId=17343185) by Antoine Pitrou (apitrou):*\ncc `[~amol-]`"
        },
        {
            "created_at": "2021-05-12T11:27:23.221Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12526?focusedCommentId=17343188) by Adam Lippai (alippai):*\nNote: using \\*.pyi files would help the typing info and autocomplete, but not the import times. I assume we'd prefer full code generation, right?"
        },
        {
            "created_at": "2021-05-12T11:29:09.336Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12526?focusedCommentId=17343189) by Antoine Pitrou (apitrou):*\nProbably, yes."
        },
        {
            "created_at": "2021-12-16T18:39:11.055Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12526?focusedCommentId=17460958) by Antoine Pitrou (apitrou):*\n`[~alippai]` Can you show an example invocation of pylint or another such utility?"
        },
        {
            "created_at": "2022-05-08T14:11:41.734Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12526?focusedCommentId=17533471) by Kevin Crouse (krcrouse):*\nI was pointed to this issue because I was similarly interested in allowing pythonic documentation to be written for functions in which docs are autogenerated from the Arrow C++ details. As a result, I've written out the code to do both of these things for the `pyarrow.compute` module: <https://github.com/krcrouse/arrow/compare/master...krcrouse:generate-pyarrow-compute-and-improve-docs>\u00a0\r\n\r\nMajor points:\r\n \\* creates `python/docs/additions` tree where the reStructrued text docs that include the sections to overwrite. Using raw reSt so that code block examples can be tested using doctest - see the README for more verbose details\r\n \\* `pyarrow.docutils` (or maybe should be _docutils) provides functions to processes `python/docs/additions` and return a data structure of the components per function.\r\n \\* `python/scripts/generate_sources.py` uses `pyarrow.docutils` and writes out the code for the compute functions in `pyarrow/generated/compute.py`. All of the logic from the release-branch `pyarrow.compute` module that dynamically generated the compute functions has been moved to this script.\r\n \\*\\* I didn't check the generated file into the repo because I generally do not include generated files that would be generated by the build process should be in source control, but I realize there are other perspectives on this\r\n \\* `pyarrow.compute` now imports from `pyarrow.generated.compute` for all of the autogenerated compute bindings. Override and custom functions are still defined here.\r\n \\* The old `pyarrow._compute_docstrings` is gone because its purpose is subsumed in the above.\r\n \\* I've updated the tests so that they work with the above changes.\r\n\r\n\u00a0\r\n\r\nBelow I've attached the `pyarrow/generated/compute.py` file that is currently created by `generate_source.py` as of commit [13c2b0e](https://github.com/krcrouse/arrow/commit/13c2b0e14fbfbc483bec559e610c2c222ae7d367)\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0"
        },
        {
            "created_at": "2022-05-10T10:19:18.211Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12526?focusedCommentId=17534277) by Antoine Pitrou (apitrou):*\n`[~krcrouse]` Thank you for doing this! This is really interesting. May you perhaps open a draft PR with you changes, to make it easier to add questions and comments?"
        },
        {
            "created_at": "2022-06-02T02:59:25.292Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12526?focusedCommentId=17545247) by Kevin Crouse (krcrouse):*\nI haven't seen any comments on the PR or here, so maybe they didn't get auto-linked? If so, sorry - I've used Jira in the past with Bitbucket but not Github.\r\n\r\nThe PR is here:\r\n\r\nhttps://github.com/apache/arrow/pull/13126"
        },
        {
            "created_at": "2022-06-02T07:22:48.037Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12526?focusedCommentId=17545305) by Antoine Pitrou (apitrou):*\nSorry Kevin. The PR was auto-linked above, it's just that noone got around to take a look yet."
        }
    ]
}