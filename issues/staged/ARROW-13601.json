{
    "issue": {
        "title": "[C++] Tests maybe uninitialized compiler warnings",
        "body": "***Note**: This issue was originally created as [ARROW-13601](https://issues.apache.org/jira/browse/ARROW-13601). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nUsing gcc9 I get the following:\r\n\r\n```Java\n\r\n/home/keith/git/arrow/cpp/src/arrow/testing/json_internal.cc: In function 'arrow::Status arrow::testing::json::{anonymous}::GetField(const Value&, arrow::ipc::internal::FieldPosition, arrow::ipc::DictionaryMemo*, std::shared_ptr<arrow::Field>*)':\r\n/home/keith/git/arrow/cpp/src/arrow/testing/json_internal.cc:1128:31: warning: 'is_ordered' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n 1128 |     type = ::arrow::dictionary(index_type, type, is_ordered);\r\n      |            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n```\r\n\r\n```Java\n\r\nIn file included from /home/keith/git/arrow/cpp/src/arrow/util/bit_run_reader.h:26,\r\n                 from /home/keith/git/arrow/cpp/src/arrow/util/bit_util_test.cc:45:\r\n/home/keith/git/arrow/cpp/src/arrow/util/bitmap_reader.h: In member function 'void arrow::TestBitmapUInt64Reader::AssertWords(const arrow::Buffer&, int64_t, int64_t, const std::vector<long unsigned int>&)':\r\n/home/keith/git/arrow/cpp/src/arrow/util/bitmap_reader.h:99:16: warning: 'reader.arrow::internal::BitmapUInt64Reader::carry_bits_' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n   99 |       uint64_t word = carry_bits_ | (next_word << num_carry_bits_);\r\n      |                ^~~~\r\n/home/keith/git/arrow/cpp/src/arrow/util/bit_util_test.cc:242:34: note: 'reader.arrow::internal::BitmapUInt64Reader::carry_bits_' was declared here\r\n  242 |     internal::BitmapUInt64Reader reader(buffer.data(), start_offset, length);\r\n```\r\n\r\n```Java\n\r\nIn file included from /home/keith/git/arrow/cpp/src/arrow/util/async_generator.h:30,\r\n                 from /home/keith/git/arrow/cpp/src/arrow/util/iterator_test.cc:30:\r\n/home/keith/git/arrow/cpp/src/arrow/util/iterator.h: In member function 'arrow::Result<Control> arrow::TransformIterator<T, V>::Next() [with T = std::shared_ptr<int>; V = std::shared_ptr<int>]':\r\n/home/keith/git/arrow/cpp/src/arrow/util/iterator.h:288:12: warning: '*((void*)(& next)+24).std::__shared_count<>::_M_pi' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n  288 |       auto next = *next_res;\r\n      |            ^~~~\r\n```\r\n\r\n```Java\n\r\n/home/keith/git/arrow/cpp/src/arrow/util/utf8_util_test.cc: In function 'arrow::util::UTF8FindIf_Basics_Test::TestBody()::<lambda(const string&, uint32_t, int64_t, int64_t)>':\r\n/home/keith/git/arrow/cpp/src/arrow/util/utf8_util_test.cc:463:35: warning: 'right' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n  463 |     EXPECT_EQ(offset_right, right - begin);\r\n      |                                   ^\r\n```\r\n\r\n```Java\n\r\n/home/keith/git/arrow/cpp/src/arrow/util/utf8_util_test.cc:462:33: warning: 'left' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n  462 |     EXPECT_EQ(offset_left, left - begin);\r\n      |                                 ^\r\n```\r\n\r\n```Java\n\r\n/home/keith/git/arrow/cpp/src/arrow/util/utf8_util_test.cc: In function 'arrow::util::UTF8FindIf_Basics_Test::TestBody()::<lambda(const string&, unsigned char, int64_t, int64_t)>':\r\n/home/keith/git/arrow/cpp/src/arrow/util/utf8_util_test.cc:447:35: warning: 'right' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n  447 |     EXPECT_EQ(offset_right, right - begin);\r\n      |                                   ^\r\n```\r\n\r\n```Java\n\r\n/home/keith/git/arrow/cpp/src/arrow/util/utf8_util_test.cc:446:33: warning: 'left' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n  446 |     EXPECT_EQ(offset_left, left - begin);\r\n      |                                 ^\r\n```\r\n\r\n```Java\n\r\n/home/keith/git/arrow/cpp/src/arrow/util/variant_test.cc: In member function 'virtual void arrow::util::{anonymous}::VariantTest_Visit_Test::TestBody()':\r\n/home/keith/git/arrow/cpp/src/arrow/util/variant_test.cc:260:3: warning: '*((void*)&<anonymous> +8)' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n  260 |   for (auto Assert :\r\n      |   ^~~\r\n```\r\n\r\n```Java\n\r\n/home/keith/git/arrow/cpp/src/arrow/util/variant_test.cc:230:8: warning: '<anonymous>.arrow::util::{anonymous}::AssertVisitOne<arrow::util::Variant<std::vector<int, std::allocator<int> >, const char*>, std::vector<int> >::expected_' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n  230 | struct AssertVisitOne {\r\n      |        ^~~~~~~~~~~~~~\r\n```\r\n\r\n```Java\n\r\n/home/keith/git/arrow/cpp/src/arrow/gpu/cuda_benchmark.cc: In function 'void arrow::cuda::CudaBufferWriterBenchmark(benchmark::State&, int64_t, int64_t, int64_t)':\r\n/home/keith/git/arrow/cpp/src/arrow/gpu/cuda_benchmark.cc:42:35: warning: 'manager' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n   42 |   ABORT_NOT_OK(manager->GetContext(kGpuNumber).Value(&context));\r\n      |                                   ^\r\n```\r\n\r\n```Java\n\r\n/home/keith/git/arrow/cpp/src/parquet/arrow/arrow_schema_test.cc: In function 'arrow::Result<std::deque<parquet::internal::LevelInfo> > parquet::arrow::RootToTreeLeafLevels(const parquet::arrow::SchemaManifest&, int)':\r\n/home/keith/git/arrow/cpp/src/parquet/arrow/arrow_schema_test.cc:1343:16: warning: 'field' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n 1343 |   while (field != nullptr) {\r\n      |          ~~~~~~^~~~~~~~~~\r\n```",
        "created_at": "2021-08-11T04:14:31.000Z",
        "updated_at": "2021-08-19T16:20:31.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": []
}