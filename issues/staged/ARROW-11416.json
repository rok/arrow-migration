{
    "issue": {
        "title": "[Python] table.to_pandas converts int32 to float64 if column is None",
        "body": "***Note**: This issue was originally created as [ARROW-11416](https://issues.apache.org/jira/browse/ARROW-11416). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\ntable.to_pandas converts int32 to float64 if column is None.\r\n\r\nTo recreate:\r\n\r\nimport pyarrow as pa\r\n\r\nschema = pa.schema([pa.field('a', pa.int32())])\r\n\r\na = [None, None, None]\r\n\r\narray = pa.array(a, type=pa.int32())\r\n\r\ntable = pa.Table.from_arrays([array], schema=schema)\r\n\r\ndf = table.to_pandas()\r\n\r\ndf.dtypes\r\n>> a float64",
        "created_at": "2021-01-28T15:59:00.000Z",
        "updated_at": "2021-02-08T12:29:26.000Z",
        "labels": [
            "Migrated from Jira",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-02-08T12:29:25.000Z"
    },
    "comments": [
        {
            "created_at": "2021-02-08T12:29:13.624Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11416?focusedCommentId=17280999) by Joris Van den Bossche (jorisvandenbossche):*\n`[~Jaxing]` this is expected behaviour, because by default pandas does not support missing values in integer columns (so once you have missing values, the integer column gets upcast to a float column). See https://pandas.pydata.org/docs/user_guide/gotchas.html#nan-integer-na-values-and-na-type-promotions for the docs about this, which also mentions the experimental nullable integer data types in pandas."
        }
    ]
}