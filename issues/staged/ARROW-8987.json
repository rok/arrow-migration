{
    "issue": {
        "title": "[C++][Python] Make reading functions to return consistent exceptions",
        "body": "***Note**: This issue was originally created as [ARROW-8987](https://issues.apache.org/jira/browse/ARROW-8987). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nReading functions like `dataset.dataset` and `read_table`\u00a0functions in feather, parquet, and csv modules return different exceptions when reading an \"empty file\" or \"missing file\", respectively. See table below.\r\n\r\nIt would be idea if all the reading functions return `FileNotFound` error when the file is missing and return `ArrowInvalid` when the file's empty.\r\n\r\nMost interesting is the case of `dataset.dataset` since the `format` parameter modifies the exception behaviour when reading an empty file.\r\n\r\n\u00a0\r\n\n|Function|Missing file|Empty File|\r|\n|-|-|-|-|\n|feather.read_table|FileNotFoundError|ArrowInvalid|\r|\n|parquet.read_table|OSError|ArrowInvalid|\r|\n|csv.read_csv|FileNotFoundError|ArrowInvalid|\r|\n|dataset.dataset \"feather\"|FileNotFoundError|ArrowInvalid|\r|\n|dataset.dataset \"parquet\"|FileNotFoundError|OSError|\r|\n|dataset.dataset \"csv\"|FileNotFoundError|ArrowInvalid|\r<br>\r<br>\u00a0\r<br>\r<br>Code to reproduce issue:\r<br>```python<br>\r<br>import pathlib\r<br>import sys\r<br>import tempfile\r<br>\r<br>import pyarrow as pa\r<br>\r<br>import pyarrow.csv as csv\r<br>import pyarrow.dataset as dataset\r<br>import pyarrow.feather as feather\r<br>import pyarrow.parquet as parquet\r<br>\r<br>tempdir = pathlib.Path(tempfile.mkdtemp())\r<br>\r<br>with open(str(tempdir / \"empty_feather.feather\"), 'wb') as f:\r<br>    pass\r<br>\r<br>with open(str(tempdir / \"empty_parquet.parquet\"), 'wb') as f:\r<br>    pass\r<br>\r<br>with open(str(tempdir / \"empty_csv.csv\"), 'wb') as f:\r<br>    pass\r<br>\r<br># Empty File\r<br>feather.read_table(str(tempdir / \"empty_feather.feather\"))\r<br>parquet.read_table(str(tempdir / \"empty_parquet.parquet\"))\r<br>csv.read_csv(str(tempdir / \"empty_csv.csv\"))\r<br>dataset.dataset(str(tempdir / \"empty_feather.feather\"), format=\"feather\")\r<br>dataset.dataset(str(tempdir / \"empty_parquet.parquet\"), format=\"parquet\")\r<br>dataset.dataset(str(tempdir / \"empty_csv.csv\"), format=\"csv\")\r<br>\r<br># Missing File\r<br>feather.read_table(str(tempdir / \"non_existent.feather\"))\r<br>parquet.read_table(str(tempdir / \"non_existent.parquet\"))\r<br>csv.read_csv(str(tempdir / \"non_existent.csv\"))\r<br>dataset.dataset(str(tempdir / \"non_existent.feather\"), format=\"feather\")\r<br>dataset.dataset(str(tempdir / \"non_existent.parquet\"), format=\"parquet\")\r<br>dataset.dataset(str(tempdir / \"non_existent.csv\"), format=\"csv\")\r<br>\r<br>```|\n",
        "created_at": "2020-05-31T11:22:31.000Z",
        "updated_at": "2020-06-03T13:31:08.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2020-06-02T07:30:23.146Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8987?focusedCommentId=17123438) by Joris Van den Bossche (jorisvandenbossche):*\n`[~gire]` thanks for this overview! \r\n\r\nThat's indeed something that ideally would be made consistent. But I think the difference between missing file (FileNotFoundError) and empty file (ArrowInvalid) is fine? (as long as it is consistent within each category across the different functions)"
        },
        {
            "created_at": "2020-06-03T13:26:18.205Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8987?focusedCommentId=17124951) by German I. Ramirez-Espinoza (gire):*\n`[~jorisvandenbossche]`: yes, correct: the difference between \"missing error\" and \"empty file\" must be kept. The table is meant to be read column-wise.\r\n\r\nI'll edit the issue description to make it more explicit wrt this point."
        }
    ]
}