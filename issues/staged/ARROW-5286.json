{
    "issue": {
        "title": "[Python] support Structs in Table.from_pandas given a known schema",
        "body": "***Note**: This issue was originally created as [ARROW-5286](https://issues.apache.org/jira/browse/ARROW-5286). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nARROW-2073 implemented creating a StructArray from an array of tuples (in addition to from dicts). \r\nThis works in `pyarrow.array` (specifying the proper type):\r\n\r\n```Java\n\r\nIn [2]: df = pd.DataFrame({'tuples': [(1, 2), (3, 4)]})                                                                                                       \r\n\r\nIn [3]: struct_type = pa.struct([('a', pa.int64()), ('b', pa.int64())])                                                                                       \r\n\r\nIn [4]: pa.array(df['tuples'], type=struct_type)                                                                                                              \r\nOut[4]: \r\n<pyarrow.lib.StructArray object at 0x7f1b02ff6818>\r\n-- is_valid: all not null\r\n-- child 0 type: int64\r\n  [\r\n    1,\r\n    3\r\n  ]\r\n-- child 1 type: int64\r\n  [\r\n    2,\r\n    4\r\n  ]\r\n```\r\n\r\nBut does not yet work when converting a DataFrame to Table while specifying the type in a schema:\r\n\r\n```Java\n\r\nIn [5]: pa.Table.from_pandas(df, schema=pa.schema([('tuples', struct_type)]))                                                                                 \r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n~/scipy/repos/arrow/python/pyarrow/pandas_compat.py in get_logical_type(arrow_type)\r\n     68     try:\r\n---> 69         return logical_type_map[arrow_type.id]\r\n     70     except KeyError:\r\n\r\nKeyError: 24\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nNotImplementedError                       Traceback (most recent call last)\r\n<ipython-input-5-c18748f9b954> in <module>\r\n----> 1 pa.Table.from_pandas(df, schema=pa.schema([('tuples', struct_type)]))\r\n\r\n~/scipy/repos/arrow/python/pyarrow/table.pxi in pyarrow.lib.Table.from_pandas()\r\n\r\n~/scipy/repos/arrow/python/pyarrow/pandas_compat.py in dataframe_to_arrays(df, schema, preserve_index, nthreads, columns, safe)\r\n    483     metadata = construct_metadata(df, column_names, index_columns,\r\n    484                                   index_descriptors, preserve_index,\r\n--> 485                                   types)\r\n    486     return all_names, arrays, metadata\r\n    487 \r\n\r\n~/scipy/repos/arrow/python/pyarrow/pandas_compat.py in construct_metadata(df, column_names, index_levels, index_descriptors, preserve_index, types)\r\n    207         metadata = get_column_metadata(df[col_name], name=sanitized_name,\r\n    208                                        arrow_type=arrow_type,\r\n--> 209                                        field_name=sanitized_name)\r\n    210         column_metadata.append(metadata)\r\n    211 \r\n\r\n~/scipy/repos/arrow/python/pyarrow/pandas_compat.py in get_column_metadata(column, name, arrow_type, field_name)\r\n    149     dict\r\n    150     \"\"\"\r\n--> 151     logical_type = get_logical_type(arrow_type)\r\n    152 \r\n    153     string_dtype, extra_metadata = get_extension_dtype_info(column)\r\n\r\n~/scipy/repos/arrow/python/pyarrow/pandas_compat.py in get_logical_type(arrow_type)\r\n     77         elif isinstance(arrow_type, pa.lib.Decimal128Type):\r\n     78             return 'decimal'\r\n---> 79         raise NotImplementedError(str(arrow_type))\r\n     80 \r\n     81 \r\n\r\nNotImplementedError: struct<a: int64, b: int64>\r\n\r\n```",
        "created_at": "2019-05-08T15:52:45.000Z",
        "updated_at": "2019-05-13T13:38:21.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-05-13T13:38:09.000Z"
    },
    "comments": [
        {
            "created_at": "2019-05-13T09:14:03.294Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5286?focusedCommentId=16838389) by Joris Van den Bossche (jorisvandenbossche):*\nActually, also converting from dicts (without the need to specify the schema) shows the same limitation: it works in `pa.array(..)` but not in `pa.Table.from_pandas(..)`:\r\n\r\n\u00a0\r\n```java\n\r\nIn [14]: df = pd.DataFrame({'dicts': [{'a': 1, 'b': 2}, {'a': 3, 'b': 4}]})\r\n\r\nIn [15]: pa.array(df['dicts'])\u00a0\r\nOut[15]:\r\n<pyarrow.lib.StructArray object at 0x7fb837d869a8>\r\n-- is_valid: all not null\r\n-- child 0 type: int64\r\n\u00a0 [\r\n\u00a0\u00a0\u00a0 1,\r\n\u00a0\u00a0\u00a0 3\r\n\u00a0 ]\r\n-- child 1 type: int64\r\n\u00a0 [\r\n\u00a0\u00a0\u00a0 2,\r\n\u00a0\u00a0\u00a0 4\r\n\u00a0 ]\r\n\r\nIn [16]: pa.Table.from_pandas(df)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\r\n...\r\nNotImplementedError: struct<a: int64, b: int64>\n```"
        },
        {
            "created_at": "2019-05-13T13:38:09.531Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5286?focusedCommentId=16838547) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 4297\n<https://github.com/apache/arrow/pull/4297>"
        }
    ]
}