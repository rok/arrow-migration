{
    "issue": {
        "title": "[R] Error collecting complex joins + aggregations",
        "body": "***Note**: This issue was originally created as [ARROW-14639](https://issues.apache.org/jira/browse/ARROW-14639). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI came across this when trying to implement [TCP-H benchmark 11](https://github.com/duckdb/duckdb/blob/master/extension/tpch/dbgen/queries/q11.sql) , which involves a few joins on tables created using a global and a local aggregation. The error that I get when collecting is `{}Arrays used to construct an ExecBatch must have equal length{`}.\r\n\r\nReprex:\r\n\r\n```R\n\r\nlibrary(arrow, warn.conflicts = FALSE)\r\nlibrary(dplyr, warn.conflicts = FALSE)\r\n\r\ntbl1 <- tibble(key1 = 1:100, key2 = 201:300, value1 = 1:100)\r\ntbl2 <- tibble(key2 = 201:220, key3 = rep(301:310, 2), value2 = 201:220)\r\ntbl3 <- tibble(key3 = 301:305, value3 = 301:305)\r\n\r\n# joined_filtered <- tbl1 %>%\u00a0\r\n# \u00a0 inner_join(tbl2, by = \"key2\") %>%\u00a0\r\n# \u00a0 inner_join(tbl3, by = \"key3\") %>%\u00a0\r\n# \u00a0 filter(value3 <= 304)\r\n\r\njoined_filtered <- arrow_table(tbl1) %>%\u00a0\r\n\u00a0 inner_join(arrow_table(tbl2), by = \"key2\") %>%\u00a0\r\n\u00a0 inner_join(arrow_table(tbl3), by = \"key3\") %>%\u00a0\r\n\u00a0 filter(value3 <= 304)\r\n\r\nglobal_agr <- joined_filtered %>%\r\n\u00a0 mutate(global_agr_key = 1L) %>%\r\n\u00a0 group_by(global_agr_key) %>%\r\n\u00a0 summarise(\r\n\u00a0 \u00a0 global_value = sum(value1 * value2) / 5\r\n\u00a0 )\r\n\r\nlocal_agr <- joined_filtered %>%\r\n\u00a0 group_by(key3) %>%\r\n\u00a0 summarise(value = sum(value1 * value2))\r\n\r\njoined_filtered %>%\r\n\u00a0 mutate(global_agr_key = 1L) %>%\r\n\u00a0 left_join(global_agr, by = \"global_agr_key\") %>%\r\n\u00a0 left_join(local_agr, by = \"key3\") %>%\r\n\u00a0 filter(value > global_value) %>%\r\n\u00a0 arrange(desc(value)) %>%\u00a0\r\n\u00a0 collect()\r\n#> Error: Invalid: Arrays used to construct an ExecBatch must have equal length\r\n#> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/compute/exec/aggregate_node.cc:387 \u00a0ExecBatch::Make(\\{batch.values[agg_src_field_ids_[i]], id_batch})\r\n#> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/compute/exec/exec_plan.cc:398 \u00a0iterator_.Next()\r\n#> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/record_batch.cc:318 \u00a0ReadNext(&batch)\r\n#> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/record_batch.cc:329 \u00a0ReadAll(&batches)\r\n```",
        "created_at": "2021-11-09T12:07:59.000Z",
        "updated_at": "2021-11-10T23:28:03.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-11-10T23:28:03.000Z"
    },
    "comments": [
        {
            "created_at": "2021-11-09T12:15:24.393Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14639?focusedCommentId=17441122) by Dewey Dunnington (paleolimbot):*\nMuch simpler reprex that triggers the same error message:\r\n\r\n```R\n\r\nlibrary(arrow, warn.conflicts = FALSE)\r\nlibrary(dplyr, warn.conflicts = FALSE)\r\n\r\ntbl1 <- tibble(key1 = 1:100, key2 = 201:300, value1 = 1:100)\r\n\r\nglobal_agr <- arrow_table(tbl1) %>%\r\n  mutate(global_agr_key = 1L) %>% \r\n  group_by(global_agr_key) %>% \r\n  summarise(\r\n    global_value = sum(value1) / 5\r\n  )\r\n\r\narrow_table(tbl1) %>%\r\n  mutate(global_agr_key = 1L) %>%\r\n  left_join(global_agr, by = \"global_agr_key\") %>%\r\n  collect()\r\n#> Error: Invalid: Arrays used to construct an ExecBatch must have equal length\r\n#> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/compute/exec/aggregate_node.cc:387  ExecBatch::Make({batch.values[agg_src_field_ids_[i]], id_batch})\r\n#> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/compute/exec/exec_plan.cc:398  iterator_.Next()\r\n#> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/record_batch.cc:318  ReadNext(&batch)\r\n#> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/record_batch.cc:329  ReadAll(&batches)\r\n```\r\n"
        },
        {
            "created_at": "2021-11-09T13:05:06.226Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14639?focusedCommentId=17441153) by David Li (lidavidm):*\nI think this is what was just fixed in ARROW-14630. The examples here don't error anymore:\r\n```java\n\r\n> library(arrow, warn.conflicts = FALSE)\r\nlibrary(dplyr, warn.conflicts = FALSE)tbl1 <- tibble(key1 = 1:100, key2 = 201:300, value1 = 1:100)global_agr <- arrow_table(tbl1) %>%\r\n\u00a0 mutate(global_agr_key = 1L) %>%\u00a0\r\n\u00a0 group_by(global_agr_key) %>%\u00a0\r\n\u00a0 summarise(\r\n\u00a0 \u00a0 global_value = sum(value1) / 5\r\n\u00a0 )arrow_table(tbl1) %>%\r\n\u00a0 mutate(global_agr_key = 1L) %>%\r\n\u00a0 left_join(global_agr, by = \"global_agr_key\") %>%\r\n\u00a0 collect()\r\nSee arrow_info() for available features\r\n# A tibble: 100 \u00d7 5\r\n\u00a0 \u00a0 key1 \u00a0key2 value1 global_agr_key global_value\r\n\u00a0 \u00a0<int> <int> \u00a0<int> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<int> \u00a0 \u00a0 \u00a0 \u00a0<dbl>\r\n\u00a01 \u00a0 \u00a0 1 \u00a0 201 \u00a0 \u00a0 \u00a01 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01 \u00a0 \u00a0 \u00a0 \u00a0 1010\r\n\u00a02 \u00a0 \u00a0 2 \u00a0 202 \u00a0 \u00a0 \u00a02 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01 \u00a0 \u00a0 \u00a0 \u00a0 1010\r\n\u00a03 \u00a0 \u00a0 3 \u00a0 203 \u00a0 \u00a0 \u00a03 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01 \u00a0 \u00a0 \u00a0 \u00a0 1010\r\n\u00a04 \u00a0 \u00a0 4 \u00a0 204 \u00a0 \u00a0 \u00a04 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01 \u00a0 \u00a0 \u00a0 \u00a0 1010\r\n\u00a05 \u00a0 \u00a0 5 \u00a0 205 \u00a0 \u00a0 \u00a05 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01 \u00a0 \u00a0 \u00a0 \u00a0 1010\r\n\u00a06 \u00a0 \u00a0 6 \u00a0 206 \u00a0 \u00a0 \u00a06 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01 \u00a0 \u00a0 \u00a0 \u00a0 1010\r\n\u00a07 \u00a0 \u00a0 7 \u00a0 207 \u00a0 \u00a0 \u00a07 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01 \u00a0 \u00a0 \u00a0 \u00a0 1010\r\n\u00a08 \u00a0 \u00a0 8 \u00a0 208 \u00a0 \u00a0 \u00a08 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01 \u00a0 \u00a0 \u00a0 \u00a0 1010\r\n\u00a09 \u00a0 \u00a0 9 \u00a0 209 \u00a0 \u00a0 \u00a09 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01 \u00a0 \u00a0 \u00a0 \u00a0 1010\r\n10 \u00a0 \u00a010 \u00a0 210 \u00a0 \u00a0 10 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a01 \u00a0 \u00a0 \u00a0 \u00a0 1010\r\n# \u2026 with 90 more rows \n```"
        },
        {
            "created_at": "2021-11-10T23:27:23.600Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14639?focusedCommentId=17442002) by Dewey Dunnington (paleolimbot):*\nThank you! Awesome! The fix also works with the scaled-up TCP-H 11 query."
        }
    ]
}