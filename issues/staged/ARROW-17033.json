{
    "issue": {
        "title": "[C++] Add GCS connection pool size option",
        "body": "***Note**: This issue was originally created as [ARROW-17033](https://issues.apache.org/jira/browse/ARROW-17033). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nMulti-threaded read performance in Arrow's GCS file system implementation currently is relatively low. Given the high latency of cloud blob systems like GCS, a common strategy is to use many concurrent readers (if the system has enough memory to support that), e.g. using 100 threads.\r\n\r\nThe GCS client library offers a [`ConnectionPoolSize` option](https://googleapis.dev/cpp/google-cloud-storage/latest/structgoogle_1_1cloud_1_1storage_1_1v1_1_1ConnectionPoolSizeOption.html). If this option is set to a value that's too low, concurrency is throttled. At the moment, this is not exposed in [`GcsOptions`](https://github.com/apache/arrow/blob/73cdd6a59b52781cc43e097ccd63ac36f705ee2e/cpp/src/arrow/filesystem/gcsfs.h#L59), consequently limiting multi-threaded throughput.\r\n\r\nInstead of exposing this option, an alternative implementation strategy could be to use the same value as set by `arrow::io::SetIOThreadPoolCapacity`.",
        "created_at": "2022-07-10T12:07:25.000Z",
        "updated_at": "2022-09-02T16:43:34.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-07-11T14:01:46.425Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17033?focusedCommentId=17565015) by Antoine Pitrou (apitrou):*\ncc `[~westonpace]` `[~willjones127]`"
        },
        {
            "created_at": "2022-07-11T14:19:27.519Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17033?focusedCommentId=17565027) by Weston Pace (westonpace):*\nThis probably deserves some testing and profiling.  At a first glance at the linked doc for `ConnectionPoolSizeOption` however I see:\r\n\r\n> The library may create more connections than this option configures, for example if your application requests many simultaneous downloads.\r\n\r\nIt seems like this option shouldn't prevent concurrency.  Also, we should see if we can find some concrete guidance on the number of threads.  For example, S3 [recommends](https://docs.aws.amazon.com/AmazonS3/latest/userguide/optimizing-performance-design-patterns.html) \"Make one concurrent request for each 85\u201390 MB/s of desired network throughput\"\r\n\r\nIf the ideal concurrency really is 100 threads we should, for now, document this somewhere visible to users so they know to bump the I/O thread pool capacity.  In the future we should find a way to adjust the I/O thread pool capacity automatically but this is a more considerable task."
        },
        {
            "created_at": "2022-09-02T16:43:34.404Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17033?focusedCommentId=17599612) by Antoine Pitrou (apitrou):*\ncc `[~benpharkins]` \u00a0"
        }
    ]
}