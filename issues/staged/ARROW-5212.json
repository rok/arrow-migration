{
    "issue": {
        "title": "[Go] Array BinaryBuilder in Go library has no access to resize the values buffer",
        "body": "***Note**: This issue was originally created as [ARROW-5212](https://issues.apache.org/jira/browse/ARROW-5212). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen you are dealing with a binary builder, there are three buffers: the null bitmap, the offset indexes, and the values buffer which contains the actual data.\r\n\r\nWhen `Reserve` or `Resize` are used, the null bitmap and the offsets are modified to allow for additional appends to function. This seems correct to me. There's no way to know how much the values buffer should be resized until the values are being appended with just the number of values alone.\r\n\r\nBut, when you are then appending a bunch of string values, there's no additional API to preallocate the size of that last buffer. That means that batch appending a large amount of strings will constantly allocate even if you know the size ahead of time.\r\n\r\nThere should be some additional API to modify this last buffer such as maybe `ReserveBytes` and `ResizeBytes` that would correspond with the `Reserve` and `Resize` methods, but would related to the values buffer.",
        "created_at": "2019-04-24T20:15:09.000Z",
        "updated_at": "2019-04-26T17:07:08.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Go",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-04-26T17:06:39.000Z"
    },
    "comments": [
        {
            "created_at": "2019-04-26T17:06:39.778Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5212?focusedCommentId=16827127) by Sebastien Binet (sbinet):*\nIssue resolved by pull request 4204\n<https://github.com/apache/arrow/pull/4204>"
        }
    ]
}