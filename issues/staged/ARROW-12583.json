{
    "issue": {
        "title": "[Python][C++] pa.total_allocated_bytes incorrect after switching the default allocator",
        "body": "***Note**: This issue was originally created as [ARROW-12583](https://issues.apache.org/jira/browse/ARROW-12583). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nFor testing I was using a system that had both jemalloc and mimalloc installed.\r\n\r\nGiven the following script\r\n```java\n\r\nimport pyarrow as pa\r\nimport pyarrow.parquet as pq\r\n\r\npa.set_memory_pool(pa.mimalloc_memory_pool())\r\nprint(pa.default_memory_pool().backend_name)\r\ntable = pq.read_table('/home/pace/dev/benchmarks/benchmarks/data/temp/fanniemae_2016Q4.uncompressed.parquet')\r\n\r\nprint(f'A:{table.num_rows}')\r\nprint(f'B:{pa.total_allocated_bytes()}')\r\n```\r\nThe output on Arrow 3.0.0 is:\r\n```java\n\r\nmimalloc\r\nA:22180168\r\nB:5060201344\r\n```\r\nThe output on Arrow 4.0.0 is:\r\n```java\n\r\nmimalloc\r\nA:22180168\r\nB:0\r\n```",
        "created_at": "2021-04-28T11:32:05.000Z",
        "updated_at": "2021-04-28T11:32:05.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": []
}