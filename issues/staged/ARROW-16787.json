{
    "issue": {
        "title": "Attaching R package arrow leads to error during import of Python Module pyarrow",
        "body": "***Note**: This issue was originally created as [ARROW-16787](https://issues.apache.org/jira/browse/ARROW-16787). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSorry, I am new here and prepared the issue report based on GitHub markdown syntax.\r\n\r\nAnd I am unsure about assigning priority as \"Major\", please change it to appropriate level.\r\n\r\nI have attached an RMD File (& its HTML output) which can be knitted in R and shows the problem.\r\n\r\n\u00a0\r\n\r\n- Details:\u00a0\n  \u00a0 - Within RStudio using Reticulate package, and without any virtual environment\n  \u00a0 - If R arrow Package is attached before import of Python pyarrow module, then import fails.\n  \u00a0 - If R arrow Package is either not attached or attached after the import of Python pyarrow module, then there seems to be no problem. Both R and Python are able to read feather files.\n  \n  \u00a0\n  \n  Please send a message if any information is missing or if more clarification is required.\n  \n  Thank You\n  \n  [Reticulate-Arrow-Pyarrow.Rmd](Reticulate-Arrow-Pyarrow.Rmd)[Reticulate-Arrow-Pyarrow.html](Reticulate-Arrow-Pyarrow.html)\n  \n  \u00a0\n  \n  \u00a0\n  \n  \u00a0",
        "created_at": "2022-06-08T09:45:34.000Z",
        "updated_at": "2022-06-13T12:57:50.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Component: R",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-06-08T11:36:55.905Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16787?focusedCommentId=17551569) by Neal Richardson (npr):*\nThis does not error for me on my machine (macOS aarch64). My guess is that this has something to do with how you have installed arrow/pyarrow, or how reticulate works on Windows (I seem to recall there were more challenges there, but maybe that's outdated), or something. You may want to report an issue to reticulate, or https://community.rstudio.com/ may be a good place to ask."
        },
        {
            "created_at": "2022-06-08T12:13:05.584Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16787?focusedCommentId=17551583) by shivam (shivam7898):*\nI have used following\r\n\r\nFor 'pyarrow' in Python: **pip install pyarrow**\r\n\r\nFor 'arrow' in R: **install.packages(\"arrow\", dependencies = TRUE)**\r\n\r\nOriginally, I was also working on the assumption that reticulate might be the problem. However, there are 2 points that made me post the issue here:\r\n1. Reticulate is able to handle all other packages without any issues. For example \"igraph\" also has R package and Python module but I am not facing any issue when both of them are loaded /attached.\n1. If I import the Python module before attaching the R package, there are no errors. So, (I am making a guess here) the arrow package in R is doing something which is in conflict with pyarrow module in python.\n   \n   You are correct that there were some windows specific issues earlier. I saw some posts online regarding those. I am also hoping those have been resolved by now.\n   \n   \u00a0\n   \n   I will wait for some time before cross-posting it anywhere else. In the mean time, I am hoping that someone using windows is able to reproduce and rectify it here :)\n   \n   \u00a0"
        },
        {
            "created_at": "2022-06-08T12:50:03.537Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16787?focusedCommentId=17551605) by Neal Richardson (npr):*\nFor what it's worth, it seems the arrow package tests with reticulate are skipped on Windows: https://github.com/apache/arrow/blob/master/r/tests/testthat/test-python.R#L22-L23"
        },
        {
            "created_at": "2022-06-13T12:03:55.120Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16787?focusedCommentId=17553542) by Dewey Dunnington (paleolimbot):*\nThe JIRA for the testing is ARROW-15242...I've never seen the \"procedure cannot be located\" import error but I do wonder if there's a symbol visibility issue (I vaguely remember we changed something about symbol visibility to appease the sanitizer checks; anecdotally Alessandro observed crashes depending on which order he loaded the R and Python libraries on Linux but the problem magically went away before we could diagnose it, which may or may not be related).\r\n\r\n"
        },
        {
            "created_at": "2022-06-13T12:57:50.507Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16787?focusedCommentId=17553569) by shivam (shivam7898):*\nMy current setup is as follows:\r\n1. Load all the relevant R Packages except \"arrow\"\n1. Import all the relevant Python Modules including \"pyarrow\"\n1. Load R package \"arrow\"\n   \n   \u00a0\n   \n   As I mentioned originally, importing python module before loading R package does not cause any observable problem.\u00a0\n   \n   \u00a0\n   \n   I have done some basic testing and even if I **attach and detach** R package \"arrow\" before import of python \"pyarrow\", the system throws error. I did try to cleanly detach all additional packages that were \"{**}loaded via a namespace (and not attached){**}\" in R sessionInfo() output. However, it looks like the R package, on detach, leave behind some namesapces /modified system state that is not same as what it was before the package was attached.\n   \n   \u00a0\n   \n   Sadly, that is the extent of my understanding of R internals /namespaces and I was unable to go forward.\n   \n   \u00a0"
        }
    ]
}