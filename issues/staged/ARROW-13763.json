{
    "issue": {
        "title": "[Python] Files opened for read with pyarrow.parquet are not explicitly closed",
        "body": "***Note**: This issue was originally created as [ARROW-13763](https://issues.apache.org/jira/browse/ARROW-13763). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIt appears that files opened for read using pyarrow.parquet.read_table (and therefore pyarrow.parquet.ParquetDataset) are not explicitly closed. \u00a0\r\n\r\nThis seems to be the case for both use_legacy_dataset=True and False. \u00a0The files don't remain open at the os level (verified using lsof). \u00a0They do however seem to rely on the python gc to close. \u00a0\r\n\r\nMy use case is that i'd like to use a custom fsspec filesystem that interfaces to an s3 like API. It handles the remote download of the parquet file and passes to pyarrow a handle of a temporary file downloaded locally. \u00a0It then is looking for an explicit close() or __exit__() to then clean up the temp file. \u00a0",
        "created_at": "2021-08-26T00:21:24.000Z",
        "updated_at": "2022-08-17T20:33:15.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Parquet",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-08-17T13:40:00.000Z"
    },
    "comments": [
        {
            "created_at": "2021-08-26T08:58:42.303Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13763?focusedCommentId=17405083) by Antoine Pitrou (apitrou):*\nThanks for the report. It seems that, when a file or directory path is given (as opposed to an open file object), Arrow should explicitly close all files it opens by itself.\r\n\r\nSome of this may be in the C++ dataset layer, some of this in the Python Parquet wrapper."
        },
        {
            "created_at": "2021-08-26T08:58:56.364Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13763?focusedCommentId=17405084) by Antoine Pitrou (apitrou):*\ncc `[~jorisvandenbossche]` `[~westonpace]`"
        },
        {
            "created_at": "2021-08-26T09:30:03.278Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13763?focusedCommentId=17405094) by Joris Van den Bossche (jorisvandenbossche):*\nFor reference, the github issue where I already answered a bit: https://github.com/apache/arrow/issues/10965\r\n\r\nIn `pyarrow.parquet.ParquetFile`, we indeed don't close the file or have a `close` method to do this. The parquet reader seems to get RandomAccessFile handle created with `ReadableFile` to open the file (through creating a OSFile). The C++ ReadableFile also doesn't seem to have a public method to close it (there is a private `DoClose`, should that be made public so layers higher up can ensure to close the ReadableFile after using it?)"
        },
        {
            "created_at": "2021-08-26T09:39:53.745Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13763?focusedCommentId=17405105) by Antoine Pitrou (apitrou):*\n`RandomAccessFile` has a `Close` method. Am I missing something?"
        },
        {
            "created_at": "2022-08-17T13:40:00.889Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13763?focusedCommentId=17580798) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 13821\n<https://github.com/apache/arrow/pull/13821>"
        }
    ]
}