{
    "issue": {
        "title": "[R] [CI] R sanitizer build failing",
        "body": "***Note**: This issue was originally created as [ARROW-14224](https://issues.apache.org/jira/browse/ARROW-14224). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nhttps://dev.azure.com/ursacomputing/crossbow/_build/results?buildId=12665&view=logs&j=0da5d1d9-276d-5173-c4c4-9d4d4ed14fdb&t=d9b15392-e4ce-5e4c-0c8c-b69645229181&l=3124 which might be another out-of-memory error \r\n\r\n```Java\n\r\nError: `docker-compose --file /home/vsts/work/1/s/arrow/docker-compose.yml run --rm -e SETUPTOOLS_SCM_PRETEND_VERSION=6.0.0.dev391 ubuntu-r-sanitizer` exited with a non-zero exit code -9, see the process log above.\r\n```\r\n\r\n",
        "created_at": "2021-10-05T13:59:29.000Z",
        "updated_at": "2021-10-07T23:20:14.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Continuous Integration",
            "Component: R",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-10-07T07:00:10.000Z"
    },
    "comments": [
        {
            "created_at": "2021-10-05T18:46:40.769Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14224?focusedCommentId=17424648) by David Li (lidavidm):*\nRunning it locally with the [documented 7GB memory limit](https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops&tabs=yaml#hardware) the build is just running out of memory as suspected, at least from watching `docker stats`. We could try to drop build parallelism, or perhaps split some of these kernel source files into hopefully smaller compilation units."
        },
        {
            "created_at": "2021-10-05T20:07:40.840Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14224?focusedCommentId=17424684) by David Li (lidavidm):*\nPoking at Docker, it looks like we have -j4 being set somewhere, which could be reduced. Interestingly it seems it's actually builder.cc that consumes most of the memory (~4.5GB in Docker), and additionally takes a long time to compile (it's one of the first jobs to start, yet is still chugging away once we reach the kernels). The kernel source files only need ~800MB of memory each, but this is just enough to trip the memory limit.\r\n\r\nBuilding outside of docker, we see the same thing: this one file eats ~60% of the available memory and additionally takes nearly 8 minutes to compile:\r\n```\n\r\n> /usr/bin/time -v ninja src/arrow/CMakeFiles/arrow_objlib.dir/builder.cc.o                                                                                                                                                                      (dev) \r\n[1/1] Building CXX object src/arrow/CMakeFiles/arrow_objlib.dir/builder.cc.o\r\n\tCommand being timed: \"ninja src/arrow/CMakeFiles/arrow_objlib.dir/builder.cc.o\"\r\n\tUser time (seconds): 462.61\r\n\tSystem time (seconds): 2.44\r\n\tPercent of CPU this job got: 99%\r\n\tElapsed (wall clock) time (h:mm:ss or m:ss): 7:45.68\r\n\tAverage shared text size (kbytes): 0\r\n\tAverage unshared data size (kbytes): 0\r\n\tAverage stack size (kbytes): 0\r\n\tAverage total size (kbytes): 0\r\n\tMaximum resident set size (kbytes): 4219328\r\n\tAverage resident set size (kbytes): 0\r\n\tMajor (requiring I/O) page faults: 0\r\n\tMinor (reclaiming a frame) page faults: 1476577\r\n\tVoluntary context switches: 46\r\n\tInvoluntary context switches: 8006\r\n\tSwaps: 0\r\n\tFile system inputs: 0\r\n\tFile system outputs: 688168\r\n\tSocket messages sent: 0\r\n\tSocket messages received: 0\r\n\tSignals delivered: 0\r\n\tPage size (bytes): 4096\r\n\tExit status: 0 \n```\r\nI did change this file a little while ago while doing kernel work and I suppose that's added up, so I'll try to reduce the memory usage again."
        },
        {
            "created_at": "2021-10-07T07:00:10.470Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14224?focusedCommentId=17425369) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 11330\n<https://github.com/apache/arrow/pull/11330>"
        }
    ]
}