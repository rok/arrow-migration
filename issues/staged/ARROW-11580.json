{
    "issue": {
        "title": "[C++] Add CMake option ARROW_DEPENDENCY_SOURCE=VCPKG",
        "body": "***Note**: This issue was originally created as [ARROW-11580](https://issues.apache.org/jira/browse/ARROW-11580). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nARROW-11340 enables the use of vcpkg to install Arrow C++ build dependencies, but we should consider making this more straightforward by adding a CMake option `ARROW_DEPENDENCY_SOURCE=VCPKG`.",
        "created_at": "2021-02-10T02:05:53.000Z",
        "updated_at": "2021-03-05T03:35:49.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-03-05T03:35:36.000Z"
    },
    "comments": [
        {
            "created_at": "2021-02-18T20:14:00.083Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11580?focusedCommentId=17286708) by Ian Cook (icook):*\nFinding where vcpkg is installed and where it has installed packages is not as straightforward as with conda or brew.\r\n\r\nIf you install vcpkg as per the docs, it does not add the vcpkg install directory to the path, and it does not set any environment variables that help you to find it. However when you run `vcpkg integrate install`, it creates a plain text file `vcpkg.path.txt` containing the path of the install directory.\u00a0On Mac and Linux, this file is placed in\u00a0`$HOME/.vcpkg`. On Windows, it's placed in `%LOCALAPPDATA%\\vcpkg`. We should read this path from the file, confirm that the vcpkg executable exists in that path, and if so then set the variable `VCPKG_ROOT` to that path.\u00a0Knowing this install path allows us to set the required CMake variable `CMAKE_TOOLCHAIN_FILE`.\r\n\r\nAnother way for CMake to find `VCPKG_ROOT` should be for the user to set it as an environment variable. This will allow it to find vcpkg in cases where the user does not want to run `vcpkg integrate install`.\r\n\r\nvcpkg also puts some other files in the directory at `$HOME/.vcpkg`\u00a0or `%LOCALAPPDATA%\\vcpkg`, but the details of those other files are poorly documented and it seems necessary to read the vcpkg source code in <https://github.com/microsoft/vcpkg-tool>\u00a0to figure out what they are for."
        },
        {
            "created_at": "2021-02-18T21:18:03.548Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11580?focusedCommentId=17286729) by Ian Cook (icook):*\nTo find where vcpkg has installed packages:\r\n \\* First look in\u00a0`$ARROW_SOURCE_DIR/vcpkg_installed`\u00a0\r\n \\* If not found there, look in `$VCPKG_ROOT/installed`\r\n\r\nWithin that `installed`\u00a0directory, there will be a triplet subdirectory. If the environment variable CMake option\u00a0`VCPKG_DEFAULT_TRIPLET` is set, then look for a subdirectory of the `installed`\u00a0directory with that name. If that exists, set that name to the triplet. If it does not exist, error. If that env var/CMake option is _not_ set, then assert that there is one and only one subdirectory within the `installed`\u00a0directory that is not named `vcpkg`, and if so, set the triplet to the name of that subdirectory. Set the value of the CMake variable `VCPKG_TARGET_TRIPLET` to this triplet, and set the value of the CMake variable `_VCPKG_INSTALLED_DIR` to the `installed` directory path.\r\n\r\nIf `VCPKG_MANIFEST_MODE` is `OFF`, then do not look for packages in `$ARROW_SOURCE_DIR/vcpkg_installed`\u00a0.\r\n\r\nSet the value of the CMake variable `ARROW_PACKAGE_PREFIX` to `_VCPKG_INSTALLED_DIR/``VCPKG_TARGET_TRIPLET`."
        },
        {
            "created_at": "2021-03-05T03:35:36.154Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11580?focusedCommentId=17295726) by Kouhei Sutou (kou):*\nIssue resolved by pull request 9553\n<https://github.com/apache/arrow/pull/9553>"
        }
    ]
}