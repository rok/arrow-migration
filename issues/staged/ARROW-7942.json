{
    "issue": {
        "title": "[C++][Parquet] Examine Arrow-decoding perf regressions introduced by PARQUET-1797",
        "body": "***Note**: This issue was originally created as [ARROW-7942](https://issues.apache.org/jira/browse/ARROW-7942). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSee discussion at https://github.com/apache/arrow/pull/6440#issuecomment-591053705",
        "created_at": "2020-02-25T22:11:11.000Z",
        "updated_at": "2020-03-02T18:24:59.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2020-03-02T18:16:52.206Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7942?focusedCommentId=17049519) by Antoine Pitrou (apitrou):*\nI tried different micro-optimizations (on gcc 7.4, clang 9.0) and came to the conclusion that there is no obvious way to improve performance. It's not easy to get the compiler to produce better code, even when unrolling loops by hand."
        },
        {
            "created_at": "2020-03-02T18:24:21.744Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7942?focusedCommentId=17049527) by Antoine Pitrou (apitrou):*\nIn any case, rather than \"try to undo this specific perf regression\", I think it would be more useful to rescope the issue more generally as \"find ways to improve Parquet decoding performance\" (assuming that goal is actually important)."
        },
        {
            "created_at": "2020-03-02T18:24:59.043Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7942?focusedCommentId=17049528) by Antoine Pitrou (apitrou):*\nI also don't know if our micro-benchmarks are actually representative of real-world file reading workloads."
        }
    ]
}