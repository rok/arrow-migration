{
    "issue": {
        "title": "[C++] CSV ISO-8601 date and timestamp short form",
        "body": "***Note**: This issue was originally created as [ARROW-10848](https://issues.apache.org/jira/browse/ARROW-10848). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nArrow supp<font color=\"#172b4d\">orts ISO-8601 for date and timestamp parsing but doesn't support short form of them. E.g.</font>\r\n```java\n\r\n19990108\r\nor\r\n19990108 040506\r\n```\r\nExamples taken from: <https://www.postgresql.org/docs/12/datatype-datetime.html>",
        "created_at": "2020-12-08T14:45:57.000Z",
        "updated_at": "2022-10-26T12:19:27.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-07-29T11:32:55.000Z"
    },
    "comments": [
        {
            "created_at": "2020-12-08T14:52:28.859Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10848?focusedCommentId=17245930) by Antoine Pitrou (apitrou):*\nIs it allowed by the ISO8601 spec?"
        },
        {
            "created_at": "2020-12-08T15:01:31.428Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10848?focusedCommentId=17245943) by Maciej (mskrzypkowski):*\nYes: https://en.wikipedia.org/wiki/ISO_8601"
        },
        {
            "created_at": "2021-03-22T16:26:53.106Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10848?focusedCommentId=17306343) by Antoine Pitrou (apitrou):*\nSorry for the delay. Is it something that you'd like to contribute?"
        },
        {
            "created_at": "2021-05-06T08:57:01.054Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10848?focusedCommentId=17340089) by Maciej (mskrzypkowski):*\nSorry, currently I have no time to contribute."
        },
        {
            "created_at": "2021-07-28T14:06:17.879Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10848?focusedCommentId=17388805) by Antoine Pitrou (apitrou):*\n`[~npr]` Do you know if such data is common in the wild?"
        },
        {
            "created_at": "2021-07-28T15:41:23.324Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10848?focusedCommentId=17388856) by Neal Richardson (npr):*\nWe now have strptime, couldn't that handle it with the appropriate tokens?"
        },
        {
            "created_at": "2021-07-28T15:50:33.161Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10848?focusedCommentId=17388860) by Antoine Pitrou (apitrou):*\nFor timestamps certainly. Not for dates."
        },
        {
            "created_at": "2021-07-28T15:56:33.651Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10848?focusedCommentId=17388862) by Rok Mihevc (rokm):*\nWhat would be the difference between date and timestamp here? Input is a string in both cases and output would be timestamp I suppose.\r\nIt shouldn't be too hard to support the standard, see [here](https://github.com/apache/arrow/blob/master/cpp/src/arrow/util/value_parsing.h#L568)."
        },
        {
            "created_at": "2021-07-28T16:00:27.708Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10848?focusedCommentId=17388864) by Neal Richardson (npr):*\nI see that it is possible to cast to date32 from timestamp. I would think that the `timestamp_parsers` or whatever it is that you can define now should also be applied for any column declared to be date or time type. I could envision having more involved column-level parsing instructions as a feature in the CSV reader too, but that's probably more than we want to tackle now."
        },
        {
            "created_at": "2021-07-28T16:02:08.410Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10848?focusedCommentId=17388865) by Antoine Pitrou (apitrou):*\nWe can close this issue if we think custom timestamps parsing is enough."
        },
        {
            "created_at": "2021-07-28T16:06:10.058Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10848?focusedCommentId=17388869) by Neal Richardson (npr):*\nIs custom timestamp parsing enough--will that give me a date32 type if that's what I declare in the types/schema?"
        },
        {
            "created_at": "2021-07-28T16:08:20.753Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10848?focusedCommentId=17388870) by Antoine Pitrou (apitrou):*\nCustom timestamp parsers are only for timestamps columns.\r\n\r\nAgain, the question is whether these formats are common in the real world. My intuition is \"no\", but I don't have any data."
        },
        {
            "created_at": "2021-07-28T16:16:03.326Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10848?focusedCommentId=17388874) by Rok Mihevc (rokm):*\nI think I've seen some in an old DB at an employer once. So not common in my experience.\r\n\r\nActual data though .."
        },
        {
            "created_at": "2021-07-28T20:26:18.568Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10848?focusedCommentId=17389041) by Weston Pace (westonpace):*\n> I see that it is possible to cast to date32 from timestamp. I would think that the\r\n> timestamp_parsers or whatever it is that you can define now should also be applied for any\r\n> column declared to be date or time type. I could envision having more involved column-level\r\n> parsing instructions as a feature in the CSV reader too, but that's probably more than we\r\n> want to tackle now.\r\n\r\nIf it can be handled losslessly by a scanner projection then I think it is not a candidate for a CSV option.  Otherwise you could use the same \"utility\" rationale to copy the entire scanner API into the CSV reader.  Since timestamp->date32 is lossless I agree with Antoine that this should be closed."
        },
        {
            "created_at": "2022-10-26T08:11:31.606Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10848?focusedCommentId=17624288) by Tim Loderhose (timlod):*\nTo add to this discussion, I am working with a (big, daily growing) dataset with dates (should be date32) that are in DD/MM/YYYY form (Europe).\r\nRight now, it's inconvenient to have to specify the timestamp type, and then cast to date after, so I think there'd definitely be a good use in allowing this to be specified outright."
        },
        {
            "created_at": "2022-10-26T09:33:28.728Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10848?focusedCommentId=17624319) by Antoine Pitrou (apitrou):*\n`[~timlod]` This is unrelated. This issue is about the YYYYMMDD short form."
        },
        {
            "created_at": "2022-10-26T09:41:31.217Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10848?focusedCommentId=17624323) by Rok Mihevc (rokm):*\n`[~timlod]` perhaps [strptime](https://arrow.apache.org/docs/cpp/compute.html?highlight=strptime#conversions) is what you're looking for?"
        },
        {
            "created_at": "2022-10-26T09:43:29.839Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10848?focusedCommentId=17624328) by Tim Loderhose (timlod):*\nI understand that the original issue isn't about this,  however, I thought that these comments in specific:\r\n> Neal Richardson added a comment - 28/Jul/21 16:06\n> \n> Is custom timestamp parsing enough--will that give me a date32 type if that's what I declare in the types/schema?\n> \n> Antoine Pitrou added a comment - 28/Jul/21 16:08\n> \n> Custom timestamp parsers are only for timestamps columns.\n> \n> Again, the question is whether these formats are common in the real world. My intuition is \"no\", but I don't have any data.\r\nwere discussing the potential use of applying the iso8601 parser also to date (not timestamp) types.\r\nThis issue is fitting: https://issues.apache.org/jira/browse/ARROW-10847, but didn't receive any attention."
        },
        {
            "created_at": "2022-10-26T10:02:44.454Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10848?focusedCommentId=17624336) by Rok Mihevc (rokm):*\nYou can make a custom parser now if that's what you're looking for, [see here](https://github.com/apache/arrow/blob/91e3ac53e2e21736ce6291d73fc37da6fa21259d/cpp/src/arrow/csv/column_builder_test.cc#L423-L439)."
        },
        {
            "created_at": "2022-10-26T10:06:52.938Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10848?focusedCommentId=17624339) by Tim Loderhose (timlod):*\nAh, sorry, I should've mentioned that I use the pyarrow interface - so no custom parser available unfortunately.\r\nI thought it may be that the python interface doesn't expose a parser for date fields because it's not implemented in C++, hence my comment on this issue and the link to the other one.\r\n\r\nDo you think it's worth it opening an issue about this on the python side of things?"
        },
        {
            "created_at": "2022-10-26T11:37:44.985Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10848?focusedCommentId=17624388) by Rok Mihevc (rokm):*\n`[~timlod]` as per [docs](https://arrow.apache.org/docs/python/generated/pyarrow.csv.ConvertOptions.html) and [tests](https://github.com/apache/arrow/blob/master/python/pyarrow/tests/test_csv.py#L971-L1003) pyarrow seems to expose custom parsers. Is this what you are looking for?\r\nIf so did you have issues searching documentation?\r\nIf not please open a new issue and provide description of your issue and a code example (can be meta programming) of what you are looking to accomplish."
        },
        {
            "created_at": "2022-10-26T12:19:27.535Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10848?focusedCommentId=17624418) by Tim Loderhose (timlod):*\nThanks for your help, I opened an issue here: https://issues.apache.org/jira/browse/ARROW-18166"
        }
    ]
}