{
    "issue": {
        "title": "[Rust][DataFusion]Use Timestamp(Nanosecond, None) for SQL TIMESTAMP Type",
        "body": "***Note**: This issue was originally created as [ARROW-12278](https://issues.apache.org/jira/browse/ARROW-12278). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n1. Rationale\n   Running the query `CREATE EXTERNAL TABLE .. (c TIMESTAMP)` today in DataFusion will result in a data type pf \"Date64\" which means that anything more specific than the date will be ignored.\n   \n   This leads to strange behavior such as\n   \n   ```Java\n   \n   echo \"Jorge,2018-12-13T12:12:10.011\" >> /tmp/foo.csv\n   echo \"Andrew,2018-11-13T17:11:10.011\" > /tmp/foo.csv\n   \n   cargo run -p datafusion --bin datafusion-cli\n       Finished dev [unoptimized + debuginfo] target(s) in 0.23s\n        Running `target/debug/datafusion-cli`\n   > CREATE EXTERNAL TABLE t(a varchar, b TIMESTAMP)\n   STORED AS CSV\n   LOCATION '/tmp/foo.csv';\n   \n   0 rows in set. Query took 0 seconds.\n   > select * from t;\n   +--------+------------+\n   | a      | b          |\n   +--------+------------+\n   | Andrew | 2018-11-13 |\n   | Jorge  | 2018-12-13 |\n   +--------+------------+\n   ```\n   \n   (note how it is only a date, not a timestamp)",
        "created_at": "2021-04-07T18:26:13.000Z",
        "updated_at": "2021-04-09T18:11:34.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust - DataFusion",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-04-09T18:11:34.000Z"
    },
    "comments": [
        {
            "created_at": "2021-04-09T18:11:34.371Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12278?focusedCommentId=17318185) by Andrew Lamb (alamb):*\nIssue resolved by pull request 9936\n<https://github.com/apache/arrow/pull/9936>"
        }
    ]
}