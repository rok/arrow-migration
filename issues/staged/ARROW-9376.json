{
    "issue": {
        "title": "[Python] RecordBatch.from_arrays:  PyCharm inspection problems with the types of parameters passed",
        "body": "***Note**: This issue was originally created as [ARROW-9376](https://issues.apache.org/jira/browse/ARROW-9376). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n### First try\r\n```python\n\r\n data = [pa.array([1, 2, 3, 4]), pa.array(['foo', 'bar', 'baz', None]), pa.array([True, None, False, True])]\r\n batch = pa.RecordBatch.from_arrays(data, ['f0', 'f1', 'f2'])\r\n```\r\nHi, I use PyCharm IDE for development and I am getting the following inspection description when I write this piece of code above in the editor.\r\n\r\n_Expected type 'RecordBatch', got 'List[Union[Union[ChunkedArray, Array], Any]]' instead_\r\n\r\n_Inspection info: This inspection detects type errors in function call expressions. Due to dynamic dispatch and duck typing, this is possible in a limited but useful number of cases. Types of function parameters can be specified in docstrings or in Python 3 function annotations._\r\n### Second try\r\n```python\n\r\nbatch = pa.RecordBatch.from_arrays(data, names=['f0', 'f1', 'f2'])\n```\r\nThen you get an insection descriptions\r\n\r\n_Parameter 'list_arrays' unfilled_\r\n\r\n_Passing list instead of pyarrow.lib.RecordBatch.RecordBatch. Is this intentional?_ \r\n### Third try\r\n```python\n\r\nbatch = pa.RecordBatch.from_arrays(list_arrays=data, names=['f0', 'f1', 'f2'])\r\n```\r\nThen you get an insection description and a type error\r\n\r\n\r\n _Parameter 'self' unfilled_ \r\n _TypeError: from_arrays() takes at least 1 positional argument (0 given)_\u00a0\r\n\r\n\u00a0\r\n\r\nSimilar response, behaviour happens with the pa.Table.from_arrays\r\n\r\n\u00a0",
        "created_at": "2020-07-08T17:59:16.000Z",
        "updated_at": "2020-07-09T06:26:47.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-07-08T20:52:52.000Z"
    },
    "comments": [
        {
            "created_at": "2020-07-08T18:08:04.302Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9376?focusedCommentId=17153825) by Wes McKinney (wesm):*\nI'm having a hard time understanding what the problem even is. It looks like PyCharm is using `\"arrays : list of pyarrow.Array or pyarrow.ChunkedArray\"` to construct a type hint. "
        },
        {
            "created_at": "2020-07-08T19:45:36.362Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9376?focusedCommentId=17153959) by Athanassios Hatzis (athanassios):*\n... calling pa.RecordBatch.from_arrays with keyword arguments list_arrays=, names= is causing a type error\r\n \u00a0"
        },
        {
            "created_at": "2020-07-08T20:52:39.371Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9376?focusedCommentId=17153998) by Wes McKinney (wesm):*\nThere is no such parameter \"list_arrays\"\r\n\r\nhttps://github.com/apache/arrow/blob/master/python/pyarrow/table.pxi#L856\r\n\r\nThis appears to be a bug in PyCharm parsing Cython-generated function signatures. Can you report the bug to JetBrains?"
        },
        {
            "created_at": "2020-07-09T06:26:47.328Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9376?focusedCommentId=17154213) by Athanassios Hatzis (athanassios):*\nI see, I was confused too because the function header in PyArrow documentation has (list arrays) which is the type of arrays and PyCharm was accepting list_arrays as the keyword argument. I think it is also better to include the name of the keyword argument in method defintion.\r\n\r\n\r\n[staticfrom_arrays(list arrays,\u00a0names=None,\u00a0schema=None,\u00a0metadata=None)](https://arrow.apache.org/docs/python/generated/pyarrow.RecordBatch.html#pyarrow.RecordBatch.from_arrays)\r\n\r\nConstruct a RecordBatch from multiple pyarrow.Arrays\r\n\r\nParameters\r\n \\* **arrays**\u00a0(_list of pyarrow.Array_) \u2013 One for each field in RecordBatch"
        }
    ]
}