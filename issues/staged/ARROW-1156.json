{
    "issue": {
        "title": "[Python] pyarrow.Array.from_pandas should take a type parameter",
        "body": "***Note**: This issue was originally created as [ARROW-1156](https://issues.apache.org/jira/browse/ARROW-1156). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIt's convenient to infer the data type so that users can just write `pyarrow.Array.from_pandas(arr)`, however, sometimes users want fine-grained control, e.g., if we have an object type numpy array, whose values are all null. When we convert it to an arrow column vector, we may need a specific type instead of NullType.",
        "created_at": "2017-06-26T17:38:01.000Z",
        "updated_at": "2019-06-03T13:00:39.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2017-09-08T14:09:47.000Z"
    },
    "comments": [
        {
            "created_at": "2017-06-26T17:59:53.226Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1156?focusedCommentId=16063518) by Wes McKinney (wesm):*\nNote that this functionality already exists in the {{pyarrow.array} function\n\n```Java\nIn [8]: arr\nOut[8]: array([None, None, None, None, None, None, None, None, None, None], dtype=object)\n\nIn [9]: pa.array(arr)\nOut[9]: \n<pyarrow.lib.NullArray object at 0x7f10bd026548>\n[\n  NA,\n  NA,\n  NA,\n  NA,\n  NA,\n  NA,\n  NA,\n  NA,\n  NA,\n  NA\n]\n\nIn [10]: pa.array(arr, type=pa.float64())\nOut[10]: \n<pyarrow.lib.DoubleArray object at 0x7f10bd026688>\n[\n  NA,\n  NA,\n  NA,\n  NA,\n  NA,\n  NA,\n  NA,\n  NA,\n  NA,\n  NA\n]\n```"
        },
        {
            "created_at": "2017-06-26T18:03:53.044Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1156?focusedCommentId=16063524) by Wenchen Fan (cloud_fan):*\nyea that's true, but its functionality is quite limited, a lot of data types are not supported, e.g.\n```Java\n>>> pa.array([None], type=pa.int32())\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"pyarrow/array.pxi\", line 1051, in pyarrow.lib.array (/Users/travis/build/xhochy/pyarrow-macos-wheels/arrow/python/build/temp.macosx-10.6-intel-2.7/lib.cxx:19136)\n  File \"pyarrow/error.pxi\", line 66, in pyarrow.lib.check_status (/Users/travis/build/xhochy/pyarrow-macos-wheels/arrow/python/build/temp.macosx-10.6-intel-2.7/lib.cxx:7124)\npyarrow.lib.ArrowNotImplementedError: NotImplemented: No type converter implemented for int32\n```\n\nBTW if I already have a numpy array, it's less efficient if I have to convert numpy array to python list and call `pyarrow.array`"
        },
        {
            "created_at": "2017-06-26T18:06:18.899Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1156?focusedCommentId=16063529) by Wes McKinney (wesm):*\nAgreed. We need some help here. Our intent is for `pyarrow.array` to be the main constructor for array data that did not originate from pandas \u2013 e.g. many NumPy arrays should be zero-copy constructable (unless they are object dtype, non-contiguous, etc.). Related: ARROW-838"
        },
        {
            "created_at": "2017-06-26T18:34:57.815Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1156?focusedCommentId=16063578) by Wenchen Fan (cloud_fan):*\nBTW, I also tried `pa.RecordBatch.from_pandas` with a schema parameter, however it fails with `ArrowNotImplementedError: NotImplemented: NumPy type casts not yet implemented`"
        },
        {
            "created_at": "2017-06-27T00:10:49.434Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1156?focusedCommentId=16064029) by Wenchen Fan (cloud_fan):*\nI just realized `pyarrow.Array.from_pandas` do have a type parameter by looking at source code, guys can you fix the official document https://arrow.apache.org/docs/python/generated/pyarrow.Array.html#pyarrow.Array ? It has style issues, and doesn't mention the type parameter, and has no explanation for the parameters."
        },
        {
            "created_at": "2017-07-17T17:35:52.969Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1156?focusedCommentId=16090145) by Wes McKinney (wesm):*\nMarking for 0.6.0 to make some improvements to this functionality (and documentation)"
        },
        {
            "created_at": "2017-07-29T19:25:43.159Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1156?focusedCommentId=16106224) by Wes McKinney (wesm):*\nThe generated documentation has been much improved in 0.5.0. This particular issue needs to be expanded into more specific JIRAs, since there are many possible features to implement for type casting and so forth. Moving this off 0.6.0 for now"
        },
        {
            "created_at": "2017-09-08T14:09:47.987Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1156?focusedCommentId=16158686) by Wes McKinney (wesm):*\nIssue resolved by pull request 1063\n<https://github.com/apache/arrow/pull/1063>"
        }
    ]
}