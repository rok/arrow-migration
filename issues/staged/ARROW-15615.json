{
    "issue": {
        "title": "[C++] STL allocator doesn't check for multiplication overflow",
        "body": "***Note**: This issue was originally created as [ARROW-15615](https://issues.apache.org/jira/browse/ARROW-15615). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe MemoryPool-backed STL allocator defined in `arrow/stl.h` has the following code:\r\n```c++\n\r\n    Status s = pool_->Allocate(n * sizeof(T), &data);\r\n```\r\n\r\nbut `n * sizeof(T)` might silently overflow and lead to an incorrect allocation size.",
        "created_at": "2022-02-08T17:46:20.000Z",
        "updated_at": "2022-02-08T17:46:20.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": []
}