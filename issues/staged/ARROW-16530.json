{
    "issue": {
        "title": "[Go] Serial read operations on columns, even when parallel = true",
        "body": "***Note**: This issue was originally created as [ARROW-16530](https://issues.apache.org/jira/browse/ARROW-16530). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI have submitted a pull request with the changes.\r\n\r\n\u00a0https://github.com/apache/arrow/pull/13120#issuecomment-1123982147\r\n\r\nIn pqarrow, when getting column readers for columns and struct members, the default behavior is a for loop that serially processes each column.\u00a0 The process of \"getting\" readers causes a read request, therefore causing these reads always to be issued serially.\u00a0 Additionally, the logic for getting next batch of records is executed in the same way, a for loop iterating through the columns.\u00a0 The performance impact is especially large on high-latency files such as cloud storage.\r\n\r\nAdditionally, the code to retrieve the next batch of records also issues reads serially.\u00a0\u00a0\r\n\r\nI'm working with complex parquet files with 500+ \"root\" columns where some fields are lists of structs.\u00a0 Some of these structs have 100's of columns.\u00a0 In my tests, 800+ read operations are being issued to GCS serially which makes the current state of pqarrow too slow to be usable.\r\n\r\nThe revision is to concurrently process the columns when retrieving child readers and column readers and to concurrently issue batch requests.",
        "created_at": "2022-05-11T16:30:19.000Z",
        "updated_at": "2022-05-17T18:22:31.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Go",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-05-17T14:57:13.000Z"
    },
    "comments": [
        {
            "created_at": "2022-05-17T14:57:13.686Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16530?focusedCommentId=17538250) by Matthew Topol (zeroshade):*\nIssue resolved by pull request 13120\n<https://github.com/apache/arrow/pull/13120>"
        }
    ]
}