{
    "issue": {
        "title": "[Python] Interface for converting pandas ExtensionArray / other custom array objects to pyarrow Array",
        "body": "***Note**: This issue was originally created as [ARROW-5271](https://issues.apache.org/jira/browse/ARROW-5271). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nRelated to ARROW-2428, which describes the issue to convert back to an ExtensionArray in `to_pandas`.\r\n\r\nTo start supporting to convert custom ExtensionArrays (eg the nullable Int64Dtype in pandas, or the arrow-backed fletcher arrays, ...) to arrow Arrays (eg in `pyarrow.array(..)`), I think it would be good to define an interface or hook that external projects can implement and that pyarrow will call if available. \r\nThis would allow external projects to define how they can be converted to arrow arrays, without the need that pyarrow itself starts to gather a lot of special cased code for certain types (like pandas' nullable Int64).\r\n\r\nThis could similar to how numpy looks for the `\\_\\_array\\_\\_` method, so we might call it `\\_\\_arrow_array\\_\\_`.\r\n\r\nSee also https://github.com/pandas-dev/pandas/issues/20612 for an issue discussing this on the pandas side.",
        "created_at": "2019-05-06T18:49:30.000Z",
        "updated_at": "2019-08-16T14:11:52.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-08-16T14:11:52.000Z"
    },
    "comments": [
        {
            "created_at": "2019-08-16T14:11:13.483Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5271?focusedCommentId=16909080) by Joris Van den Bossche (jorisvandenbossche):*\nI am going to close this issue in favor of the earlier identical issue ARROW-3829. And I also opened a PR for this: https://github.com/apache/arrow/pull/5106"
        }
    ]
}