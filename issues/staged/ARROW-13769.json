{
    "issue": {
        "title": "[C++] BitmapAnd, BitmapOr... could return the number of set bits",
        "body": "***Note**: This issue was originally created as [ARROW-13769](https://issues.apache.org/jira/browse/ARROW-13769). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen updating a validity bitmap using a bitwise operation such as AND or OR, it can be useful to also know the new validity count. It is probably costless to compute the new popcount inside BitmapAnd and friends. Micro-benchmarks will have to be run to validate that assumption.",
        "created_at": "2021-08-26T16:58:08.000Z",
        "updated_at": "2022-08-27T14:42:03.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-11-22T04:02:15.000Z"
    },
    "comments": [
        {
            "created_at": "2021-08-26T16:58:16.236Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13769?focusedCommentId=17405365) by Antoine Pitrou (apitrou):*\ncc `[~lidavidm]`"
        },
        {
            "created_at": "2021-08-26T17:25:28.744Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13769?focusedCommentId=17405387) by David Li (lidavidm):*\nThis would let us pre-compute the null count in if_else/case_when/coalesce and friends? That would be useful."
        },
        {
            "created_at": "2021-08-26T17:49:17.440Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13769?focusedCommentId=17405393) by Antoine Pitrou (apitrou):*\nYes, that was my thought. We could also shortcut coalesce or case-when when all values have been set."
        },
        {
            "created_at": "2021-11-10T08:45:51.182Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13769?focusedCommentId=17441574) by Eduardo Ponce (edponce):*\nI have been curious if it would be a better design to have a `Bitmap` class that tracks the null count. All other Arrow containers with state are implemented as classes instead of procedural functions. Obviously, this would be a major refactor and out-of-scope from this issue."
        },
        {
            "created_at": "2021-11-10T09:58:07.946Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13769?focusedCommentId=17441614) by Pradeep Garigipati (pradeepgarigipati):*\n`There are two versions of BitmapAnd and BitmapOr functions:`\r\n\r\n`1) Output is part of the function arguments`\r\n\r\n` 2) Output buffer is return value - this version also takes memory pool argument.`\r\n\r\n`I see the the following approaches.`\r\n\r\n`1) The version of function that returns void and takes output as function argument can return out popcount instead of void`\r\n`2) Alternative to (1) is to add an additional out argument to the function that is set of the output null count while the function retains the void return type. [~edponce] suggests this approach.`\r\n`{}3) The version of the function that returns Result<shared_ptr<Buffer>> can now return Result<pair<int64_t, shared_ptr<Buffer>>>{`}`{}{`}\r\n\r\n`Since, I wasn't sure which one is preferred over the other in arrow, I post here. Please advice.`\r\n\r\n`Thank you!`"
        },
        {
            "created_at": "2021-11-11T17:10:03.527Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13769?focusedCommentId=17442365) by Antoine Pitrou (apitrou):*\n`[~pradeepgarigipati]` I would favor 1) and 3). Hopefully we can make it so that performance doesn't suffer."
        },
        {
            "created_at": "2021-11-22T04:02:15.442Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13769?focusedCommentId=17447190) by Pradeep Garigipati (pradeepgarigipati):*\nIn light of discussion comments based on benchmark results posted on the GitHub PR <https://github.com/apache/arrow/pull/11674> , it has been decided that calculating pop count on the output isn't beneficial as originally anticipated it to be. Please go through the PR comments for a detailed information and the benchmark results. Marking this issue as resolved."
        },
        {
            "created_at": "2021-11-22T12:12:23.802Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13769?focusedCommentId=17447364) by Antoine Pitrou (apitrou):*\nThanks for doing the experiment `[~pradeepgarigipati]` !"
        },
        {
            "created_at": "2022-08-27T14:42:03.051Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13769?focusedCommentId=17586010) by @toddfarmer:*\nTransitioning issue from Resolved to Closed to based on resolution field value."
        }
    ]
}