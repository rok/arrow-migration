{
    "issue": {
        "title": "[Python] Create an Arrow-cpp-compatible interface for reading bytes from Python file-like objects ",
        "body": "***Note**: This issue was originally created as [ARROW-228](https://issues.apache.org/jira/browse/ARROW-228). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIn practice, IO interfaces in PyArrow will need to be bidirectional\n\n- Exposing internal IO interfaces written purely in C++ to Python users as file-like objects\n\n- Exposing Python file-like objects to the C++ IO subsystem\n\nTo do this efficiently, we may want to introduce an arrow::Buffer subclass that manages the lifetime of a PyBytes object in a GIL-safe way (i.e., on destruction, the GIL is acquired and the object's refcount is decremented). We can still implement a Read method that copies bytes into some other buffer, after which the PyBytes is immediately destroyed.\n\nOutside of these byte buffer management issues, wrapping a file-like object (having read() -> bytes, seek(), tell(), and other basic file methods) is fairly straightforward, and will allow any of the current or upcoming IO adapters to read either from native classes (file system, HDFS, etc.) or arbitrary Python streams.\n\nTo give a concrete example: consider the output of a GET http request \u2013 this can be put in a `io.BytesIO` object and then treated as a first class citizen alongside the native (C++) IO classes. ",
        "created_at": "2016-06-25T22:43:12.000Z",
        "updated_at": "2017-02-13T16:34:45.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2017-01-24T00:32:24.000Z"
    },
    "comments": [
        {
            "created_at": "2017-01-24T00:32:25.018Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-228?focusedCommentId=15835432) by Wes McKinney (wesm):*\nThis was resolved as part of ARROW-302 https://github.com/apache/arrow/commit/c7e6a0716308766766aaaf4faa2effc5445640c6#diff-cc328f934b174e9384e6c81cf4942046"
        }
    ]
}