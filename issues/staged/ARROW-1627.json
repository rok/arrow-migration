{
    "issue": {
        "title": "[JAVA] Reduce heap usage(Phase 2) - memory footprint in AllocationManager.BufferLedger",
        "body": "***Note**: This issue was originally created as [ARROW-1627](https://issues.apache.org/jira/browse/ARROW-1627). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently we instantiate IdentityHashMap while creating an instance of AllocationManager which is in turn is part of BufferLedger\n\nBy default IdentityHashMap allocates an array of 64 objects which is 272 bytes of heap from the start. In reality a lot of ArrowBuf(s) will not need that many entries in the map, since they want share BufferAllocators with many other BufferLedgers.\n\nSuggestion is to come up with different collection to save heap w/o sacrificing much of the performance (if any).\n\nI have a suggestion in mind that I will share via a doc. later today\n",
        "created_at": "2017-09-30T07:53:22.000Z",
        "updated_at": "2018-07-08T14:24:38.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2017-10-05T03:19:12.000Z"
    },
    "comments": [
        {
            "created_at": "2017-10-01T00:51:57.589Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1627?focusedCommentId=16187243) by Yuliya Feldman (yufeldman):*\nHere is the link to proposal on how to deal with the issue: https://docs.google.com/document/d/1pIrPgtwGxMBq-dRzhA-BKDB7KdS2crkTZI21gU-4KDQ/edit?usp=sharing\n\nWill submit PR shortly"
        },
        {
            "created_at": "2017-10-05T03:19:12.540Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1627?focusedCommentId=16192419) by Wes McKinney (wesm):*\nIssue resolved by pull request 1150\n<https://github.com/apache/arrow/pull/1150>"
        }
    ]
}