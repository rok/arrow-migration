{
    "issue": {
        "title": "[Rust] Extend memory alignments to include other architectures",
        "body": "***Note**: This issue was originally created as [ARROW-8399](https://issues.apache.org/jira/browse/ARROW-8399). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently, alignment of allocation is fixed with 64 and this enables most of the architectures, but not all L1D prefetching systems are the same and some of the architectures are using double prefetching like x86_64. Include a matrix of alignment values to extend the cache alignments.",
        "created_at": "2020-04-10T20:43:13.000Z",
        "updated_at": "2020-05-19T23:23:37.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-05-19T23:23:26.000Z"
    },
    "comments": [
        {
            "created_at": "2020-05-19T23:23:26.924Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8399?focusedCommentId=17111614) by Andy Grove (andygrove):*\nIssue resolved by pull request 6898\n<https://github.com/apache/arrow/pull/6898>"
        }
    ]
}