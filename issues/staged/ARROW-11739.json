{
    "issue": {
        "title": "[Java] Add API for getBufferSizeFor() with density to BaseVariableWidthVector",
        "body": "***Note**: This issue was originally created as [ARROW-11739](https://issues.apache.org/jira/browse/ARROW-11739). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nFollowing the discussion on https://github.com/apache/arrow/pull/9187.\r\n\r\nProposed API in BaseVariableWidthVector.java:\r\n\r\n```java\n\r\n/**\r\n   * Get the potential buffer size for a particular number of records and density.\r\n   * @param valueCount desired number of elements in the vector\r\n   * @param density average number of bytes per variable width element\r\n   * @return estimated size of underlying buffers if the vector holds\r\n   *         a given number of elements\r\n   */\r\npublic int getBufferSizeFor(final int valueCount, double density)\r\n```\r\n\r\nThe current `getBufferSizeFor(int valueCount)` for BaseVariableWidthVector requires that validity and offset vectors have already been allocated for at least the given `valueCount`. If the aim of this method is to estimate memory usage for a value count, it's not very useful because it can only give sizes for less than or equal value counts in the currently allocated vector.\r\n\r\nA better approach for approximating memory usage is to include a density argument, along with value count. Then the buffer estimate does not require the validity and offset vector to have any allocation. This also is inline with `setInitialCapacity(int valueCount, double density)`\r\n\r\nNOTE: this API should also be added to BaseLargeVariableWidthVector and possibly BaseRepeatedValueVector(Large) as well.",
        "created_at": "2021-02-22T23:06:45.000Z",
        "updated_at": "2021-02-22T23:22:09.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": []
}