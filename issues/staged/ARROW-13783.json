{
    "issue": {
        "title": "[Python] Improve Table.to_string (and maybe __repr__) to also preview data of the table",
        "body": "***Note**: This issue was originally created as [ARROW-13783](https://issues.apache.org/jira/browse/ARROW-13783). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n",
        "created_at": "2021-08-27T14:20:23.000Z",
        "updated_at": "2021-10-14T11:21:09.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-10-05T11:02:27.000Z"
    },
    "comments": [
        {
            "created_at": "2021-08-30T06:41:55.147Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13783?focusedCommentId=17406590) by Joris Van den Bossche (jorisvandenbossche):*\nWould it be worth doing this in C++ instead of in Python? (cc `[~npr]` who mentioned this would be nice to have in R as well)\r\n\r\nAlthough doing it in C++ might be more complicated. Are there \"tabulate\" like packages in C++ available we might be able to use/vendor? (EDIT: it seems this is exactly called like that in C++ as well ->  https://github.com/p-ranav/tabulate)"
        },
        {
            "created_at": "2021-08-30T14:36:38.629Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13783?focusedCommentId=17406758) by Alessandro Molina (amol-):*\n`[~jorisvandenbossche]` My solution was to mostly reuse the printing that is already available and existing, I didn't want to go into the direction of implementing any fully custom as my primary goals was mostly to have a way to show data in documentation and in the cookbook. In the end if you want a \"nice layouting\" that's something that I felt was ok to defer to higher layers like pandas.\r\n\r\nThe attached PR mostly reuses the schema printing and the array printing and combines them to preview the data\r\n\r\n```Java\n\r\npyarrow.Table\r\nc0: int16\r\nc1: int32\r\n----\r\nc0: [[1,2,3,4]]\r\nc1: [[10,20,30,40]]\r\n```\r\n\r\nI'm not sure we need something more complex than this at pyarrow layer, presenting data could easily be a concern we defer to higher layers and frontends."
        },
        {
            "created_at": "2021-10-05T11:02:27.190Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13783?focusedCommentId=17424415) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 11028\n<https://github.com/apache/arrow/pull/11028>"
        }
    ]
}