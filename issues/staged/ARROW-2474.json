{
    "issue": {
        "title": "[Rust] Add windows support for memory pool abstraction",
        "body": "***Note**: This issue was originally created as [ARROW-2474](https://issues.apache.org/jira/browse/ARROW-2474). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n",
        "created_at": "2018-04-19T01:30:53.000Z",
        "updated_at": "2018-05-01T09:47:47.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2018-05-01T09:47:44.000Z"
    },
    "comments": [
        {
            "created_at": "2018-04-19T01:44:17.509Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2474?focusedCommentId=16443450) by Paddy Horan (paddyhoran):*\n`[~andygrove73]` how do you think I should approach this?\u00a0 I have to wrap the windows functions again, which I don't want to do.\u00a0 Should we keep memory.rs and have memory_pool.rs use these functions or should we merge memory.rs into memory_pool.rs?"
        },
        {
            "created_at": "2018-04-19T02:03:56.659Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2474?focusedCommentId=16443463) by Andy Grove (andygrove):*\nWe should merge and just have memory_pool.rs, with an implementation of the MemoryPool trait for Windows, I think.\r\n\r\n`[~paddyhoran]` Want me to take a crack at this? I don't have Windows to test on but I can at least make sure it compiles."
        },
        {
            "created_at": "2018-04-19T12:26:38.998Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2474?focusedCommentId=16443982) by Paddy Horan (paddyhoran):*\n`[~andygrove]` thanks.\r\n\r\nI'll take a crack at it.\u00a0 I'm still learning and it's the best way for me to learn.\u00a0 I'll definitely appreciate your comments when a get a working PR though.\r\n\r\nBesides I can test windows locally and other OS's through CI."
        },
        {
            "created_at": "2018-04-20T00:56:56.344Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2474?focusedCommentId=16445062) by Andy Grove (andygrove):*\nSo this new memory_pool isn't actually called from anywhere else in the code base and there is no default memory pool that can be referenced.\r\n\r\nPerhaps we shouldn't have merged the PR after all. I like the direction but we now have two versions of memory allocation and one of them isn't used.\r\n\r\nI suppose, to integrate this, we need to have constructors on Builder and ListBuilder where we can pass in a reference to a memory pool to use.\r\n\r\n\u00a0"
        },
        {
            "created_at": "2018-05-01T09:47:44.895Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2474?focusedCommentId=16459568) by Uwe Korn (uwe):*\nIssue resolved by pull request 1955\n<https://github.com/apache/arrow/pull/1955>"
        }
    ]
}