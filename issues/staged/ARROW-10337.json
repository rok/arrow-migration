{
    "issue": {
        "title": "[C++] More liberal parsing of ISO8601 timestamps with fractional seconds",
        "body": "***Note**: This issue was originally created as [ARROW-10337](https://issues.apache.org/jira/browse/ARROW-10337). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe current ISO8601 timestamp parser assumes MILLI timestamps have 3 decimal places, MICRO have 6 and NANO have 9. From ParseTimestampISO8601 in cpp/src/arrow/util/value_parsing.h:\r\n\r\n` // We allow the following formats for all units:`\r\n` // - \"YYYY-MM-DD\"`\r\n` // - \"YYYY-MM-DD[ T]hh\"`\r\n` // - \"YYYY-MM-DD[ T]hhZ\"`\r\n` // - \"YYYY-MM-DD[ T]hh:mm\"`\r\n` // - \"YYYY-MM-DD[ T]hh:mmZ\"`\r\n` // - \"YYYY-MM-DD[ T]hh:mm:ss\"`\r\n` // - \"YYYY-MM-DD[ T]hh:mm:ssZ\"`\r\n` //`\r\n` // We allow the following formats for unit==MILLI:`\r\n` // - \"YYYY-MM-DD[ T]hh:mm:ss.mmm\"`\r\n` // - \"YYYY-MM-DD[ T]hh:mm:ss.mmmZ\"`\r\n` //`\r\n` // We allow the following formats for unit==MICRO:`\r\n` // - \"YYYY-MM-DD[ T]hh:mm:ss.uuuuuu\"`\r\n` // - \"YYYY-MM-DD[ T]hh:mm:ss.uuuuuuZ\"`\r\n` //`\r\n` // We allow the following formats for unit==NANO:`\r\n` // - \"YYYY-MM-DD[ T]hh:mm:ss.nnnnnnnnn\"`\r\n` // - \"YYYY-MM-DD[ T]hh:mm:ss.nnnnnnnnnZ\"`\r\n` //`\r\n\r\nI propose that we change the parser to accept 1 to 3 digits for MILLI, 1 to 6 digits for MICRO, and 1 to 9 digits for NANO, as follows:\r\n\r\n` // We allow the following formats for all units:`\r\n` // - \"YYYY-MM-DD\"`\r\n` // - \"YYYY-MM-DD[ T]hhZ?\"`\r\n` // - \"YYYY-MM-DD[ T]hh:mmZ?\"`\r\n` // - \"YYYY-MM-DD[ T]hh:mm:ssZ?\"`\r\n` //`\r\n` // We allow the following formats for unit == MILLI, MICRO, or NANO:`\r\n` // - \"YYYY-MM-DD[ T]hh:mm:ss.s\\{1,3}Z?\"`\r\n` //`\r\n` // We allow the following formats for unit == MICRO, or NANO:`\r\n` // - \"YYYY-MM-DD[ T]hh:mm:ss.s\\{4,6}Z?\"`\r\n` //`\r\n` // We allow the following formats for unit == NANO:`\r\n` // - \"YYYY-MM-DD[ T]hh:mm:ss.s\\{7,9}Z?\"`\r\n\r\nThis will allow for parsing of timestamps when e.g. a CSV file does not write timestamps with trailing zeroes.\r\n\r\nI am almost complete implementing this functionality, so a PR will be following soon.\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\u00a0\u00a0",
        "created_at": "2020-10-18T21:30:16.000Z",
        "updated_at": "2020-12-07T15:48:42.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-12-07T15:48:36.000Z"
    },
    "comments": [
        {
            "created_at": "2020-10-19T15:30:07.751Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10337?focusedCommentId=17216821) by Antoine Pitrou (apitrou):*\nThanks for the report. I agree a PR would be welcome :-)"
        },
        {
            "created_at": "2020-12-07T15:48:36.089Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10337?focusedCommentId=17245299) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 8692\n<https://github.com/apache/arrow/pull/8692>"
        }
    ]
}