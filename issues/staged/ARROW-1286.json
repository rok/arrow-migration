{
    "issue": {
        "title": "PYTHON: support Categorical serialization to/from parquet",
        "body": "***Note**: This issue was originally created as [ARROW-1286](https://issues.apache.org/jira/browse/ARROW-1286). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nrelated to https://issues.apache.org/jira/browse/ARROW-439\n\npandas Categorical types are not NotImplemented. minimal example.\n\npandas 0.20.3 & pyarrow 0.5.0\n\n```Java\nIn [1]: df = pd.DataFrame({'a': pd.Categorical(list('abc'))})\n\nIn [2]: df.dtypes\nOut[2]: \na    category\ndtype: object\n\nIn [4]: import pyarrow\n\nIn [5]: import pyarrow.parquet\n\nIn [6]: table = pyarrow.Table.from_pandas(df, timestamps_to_ms=True)\n   ...: pyarrow.parquet.write_table(\n   ...:             table, 'foo.pq')\n   ...:             \n   ...: \n---------------------------------------------------------------------------\nArrowNotImplementedError                  Traceback (most recent call last)\n<ipython-input-6-4512e9a2e15e> in <module>()\n      1 table = pyarrow.Table.from_pandas(df, timestamps_to_ms=True)\n      2 pyarrow.parquet.write_table(\n----> 3             table, 'foo.pq')\n      4 \n\n/Users/jreback/miniconda3/envs/pandas/lib/python3.6/site-packages/pyarrow/parquet.py in write_table(table, where, row_group_size, version, use_dictionary, compression, use_deprecated_int96_timestamps, **kwargs)\n    770         version=version,\n    771         use_deprecated_int96_timestamps=use_deprecated_int96_timestamps)\n--> 772     writer = ParquetWriter(where, table.schema, **options)\n    773     writer.write_table(table, row_group_size=row_group_size)\n    774     writer.close()\n\n_parquet.pyx in pyarrow._parquet.ParquetWriter.__cinit__()\n\nerror.pxi in pyarrow.lib.check_status()\n\nArrowNotImplementedError: NotImplemented: unhandled type\n```",
        "created_at": "2017-07-27T10:26:07.000Z",
        "updated_at": "2017-10-02T14:00:01.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2017-09-28T19:45:01.000Z"
    },
    "comments": [
        {
            "created_at": "2017-07-27T12:10:55.277Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1286?focusedCommentId=16103114) by Uwe Korn (uwe):*\nThe quickfix for this will be to add conversion to/from categoricals in Arrow. In the long term, we want to write DictionaryArrays directly in `parquet-cpp` (see the linked issue)."
        },
        {
            "created_at": "2017-07-27T13:08:34.674Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1286?focusedCommentId=16103186) by Wes McKinney (wesm):*\nNote that Parquet does not have a categorical type, and dictionary encoding cannot necessarily relied upon universally to write categoricals. We can look at the pandas schema in the metadata and make best efforts to reconstruct the original pandas.Categorical. "
        },
        {
            "created_at": "2017-08-02T03:15:59.244Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1286?focusedCommentId=16110203) by Wes McKinney (wesm):*\nMoved this off of 0.6.0. I agree that our energies are best invested for the moment in ARROW-439, and then we can deal with native handling inside parquet-cpp"
        },
        {
            "created_at": "2017-09-06T16:14:43.432Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1286?focusedCommentId=16155601) by Wes McKinney (wesm):*\nMoved this off 0.7.0. If you cannot get to this for 0.8.0 let me know and I will take a look"
        },
        {
            "created_at": "2017-09-28T16:38:02.802Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1286?focusedCommentId=16184422) by Wes McKinney (wesm):*\nWhat's the status of this?"
        },
        {
            "created_at": "2017-09-28T19:44:37.890Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1286?focusedCommentId=16184731) by Uwe Korn (uwe):*\nThis should actually work with 0.7.0"
        },
        {
            "created_at": "2017-09-28T21:42:33.758Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1286?focusedCommentId=16184941) by Wes McKinney (wesm):*\nCool, handling categoricals on the read path will be more work, we can open some more JIRAs for that"
        },
        {
            "created_at": "2017-09-29T04:49:57.687Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1286?focusedCommentId=16185354) by Uwe Korn (uwe):*\nAt the moment we have simple solutions in place that make it work for the enduser:\n\n \\* on the read path, he can specify in the Arrow->Pandas conversion that string columns should be categoricals\n \\* on the write path, we cast any DictionaryArray in `parquet-cpp` to its plain representation.\n\nPerformance-wise these can be optimized a lot but for now it at least gives the user some convenience in writing categoricals."
        },
        {
            "created_at": "2017-10-02T08:06:34.401Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1286?focusedCommentId=16187743) by Brecht Machiels (brechtm):*\nThe `strings_to_categorical` option to `Table.to_pandas()` is too limiting however. It should be possible to specify which of the string columns should be interpreted as categoricals."
        },
        {
            "created_at": "2017-10-02T14:00:01.753Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1286?focusedCommentId=16188070) by Wes McKinney (wesm):*\n`[~brechtm]` you bring up a good point, I created https://issues.apache.org/jira/browse/ARROW-1632 about this"
        }
    ]
}