{
    "issue": {
        "title": "[Developer][Archery] Fix exception causes in cli.py",
        "body": "***Note**: This issue was originally created as [ARROW-9113](https://issues.apache.org/jira/browse/ARROW-9113). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI recently went over [Matplotlib](https://github.com/matplotlib/matplotlib/pull/16706), [Pandas](https://github.com/pandas-dev/pandas/pull/32322) and [NumPy](https://github.com/numpy/numpy/pull/15731), fixing a small mistake in the way that Python 3's exception chaining is used. If you're interested, I can do it here too. I've done it on just one file right now. \r\n\r\nThe mistake is this: In some parts of the code, an exception is being caught and replaced with a more user-friendly error. In these cases the syntax `raise new_error from old_error` needs to be used.\r\n\r\nPython 3's exception chaining means it shows not only the traceback of the current exception, but that of the original exception (and possibly more.) This is regardless of `raise from`. The usage of `raise from` tells Python to put a more accurate message between the tracebacks. Instead of this: \r\n\r\n    During handling of the above exception, another exception occurred:\r\n\r\nYou'll get this: \r\n\r\n    The above exception was the direct cause of the following exception:\r\n\r\nThe first is inaccurate, because it signifies a bug in the exception-handling code itself, which is a separate situation than wrapping an exception.\r\n\r\nLet me know what you think! ",
        "created_at": "2020-06-12T10:36:26.000Z",
        "updated_at": "2021-08-04T09:18:06.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Archery",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-08-04T09:18:06.000Z"
    },
    "comments": []
}