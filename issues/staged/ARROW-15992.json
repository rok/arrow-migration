{
    "issue": {
        "title": "[R] Supper encoding options for CSVs in open_dataset",
        "body": "***Note**: This issue was originally created as [ARROW-15992](https://issues.apache.org/jira/browse/ARROW-15992). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe encoding options are passed when a single file is read with read_delim_arrow, but not when opening a folder with open_dataset.\r\n\r\nread_delim_arrow creates a reader using CsvTableReader$create (which is what is tested in the package's tests).\r\n\r\nopen_dataset creates a factory and I'm unable to follow what happens when $Finish() is called.\r\n\r\n\u00a0\r\n\r\nAlso, the documentation (\"CsvReadOptions\" page) lists the \"encoding\" option under \"CsvConvertOptions$create()\" instead of \"CsvReadOptions$create()\"\r\n\r\n\u00a0\r\n```r\n\r\nlibrary(dplyr)\r\nlibrary(arrow)\r\n# Opens one file just fine:\r\none_file <- arrow::read_delim_arrow(\r\n\u00a0 \"test/Test1.txt\",\u00a0\r\n\u00a0 as_data_frame = FALSE,\r\n\u00a0 delim = \";\",\r\n\u00a0 read_options = CsvReadOptions$create(encoding = \"ISO-8859-1\")\r\n)\r\ncollect(one_file)\r\n\u00a0\r\n# Can't open the folder that has \"Test1.txt\" properly, results in Column2 being typed as binary\r\none_folder <- arrow::open_dataset(\r\n\u00a0 \"test\",\u00a0\r\n\u00a0 delim = \";\",\r\n\u00a0 read_options = CsvReadOptions$create(encoding = \"ISO-8859-1\")\r\n)\r\ncollect(one_folder)\r\n\u00a0\r\n# Even when specify the schema\r\none_folder_w_schema <- arrow::open_dataset(\r\n\u00a0 \"test\",\u00a0\r\n\u00a0 schema = Schema$create(Column1 = string(), Column2 = string()),\r\n\u00a0 format = FileFormat$create(\"text\", skip_rows = 1L, delimiter = \";\", column_names = c(\"Column1\", \"Column2\"),\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0read_options = CsvReadOptions$create(encoding = \"ISO-8859-1\"))\r\n\u00a0\u00a0\r\n)\r\ncollect(one_folder_w_schema) \n```\r\n\u00a0",
        "created_at": "2022-03-21T22:54:25.000Z",
        "updated_at": "2022-11-17T19:50:30.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: task"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-03-22T11:03:39.077Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15992?focusedCommentId=17510410) by Nicola Crane (thisisnic):*\nThanks for reporting this `[~gregleleu]` . I don't think this is currently supported - I've opened ticket ARROW-16000 to ask for this to be implemented in the C++, so once it has been we should be able to expose this functionality in R."
        },
        {
            "created_at": "2022-03-22T13:44:26.017Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15992?focusedCommentId=17510497) by Nicola Crane (thisisnic):*\nI'm leaving this ticket as a bug for now as until there is functionality in C++ to allow this, we should provide users with better error messaging than there is at the moment."
        }
    ]
}