{
    "issue": {
        "title": "Instructions for building with conda",
        "body": "***Note**: This issue was originally created as [ARROW-344](https://issues.apache.org/jira/browse/ARROW-344). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nAccording to [this comment](https://issues.apache.org/jira/browse/ARROW-230?focusedCommentId=15588846&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-15588846), Arrow 0.1.0 for Python can be installed with Conda. `arrow-cpp` is a dependency of the Python version, and I can install `arrow-cpp` locally with\n\n```\nconda install --channel conda-forge parquet-cpp numpy pandas pytest\ncd apache-arrow-0.1.0/cpp\nconda-build conda.recipe --channel conda-forge\nconda install -c conda-forge --use-local arrow-cpp\ncd ../python\n```\n\nbut I can't build and locally install the `conda.recipe` in the Python directory because conda keeps trying to get the `arrow-cpp` on `conda-forge`, rather than the one in the 0.1.0 release. Those versions are incompatible due to a changed API:\n\n```\n[ 24%] Building CXX object CMakeFiles/pyarrow.dir/src/pyarrow/adapters/builtin.cc.o\n/usr/bin/c++   -Dpyarrow_EXPORTS -isystem /opt/miniconda2/conda-bld/conda.recipe_1476908391204/_b_env_placehold_placehold_/lib/python2.7/site-packages/numpy/core/include -isystem /opt/miniconda2/conda-bld/conda.recipe_1476908391204/_b_env_placehold_placehold_/include/python2.7 -isystem /opt/apache-arrow-0.1.0/python/src -isystem /opt/miniconda2/conda-bld/conda.recipe_1476908391204/_b_env_placehold_placehold_/include  -std=c++11 -Wall -ggdb -O0 -g -fPIC   -fPIC -o CMakeFiles/pyarrow.dir/src/pyarrow/adapters/builtin.cc.o -c /opt/apache-arrow-0.1.0/python/src/pyarrow/adapters/builtin.cc\n/opt/apache-arrow-0.1.0/python/src/pyarrow/adapters/builtin.cc: In function 'pyarrow::Status pyarrow::ConvertPySequence(PyObject*, std::shared_ptr<arrow::Array>*)':\n/opt/apache-arrow-0.1.0/python/src/pyarrow/adapters/builtin.cc:434:26: error: no matching function for call to 'arrow::ArrayBuilder::Finish()'\n   *out = builder->Finish();\n                          ^\n/opt/apache-arrow-0.1.0/python/src/pyarrow/adapters/builtin.cc:434:26: note: candidate is:\nIn file included from /opt/miniconda2/conda-bld/conda.recipe_1476908391204/_b_env_placehold_placehold_/include/arrow/api.h:24:0,\n                 from /opt/apache-arrow-0.1.0/python/src/pyarrow/adapters/builtin.cc:23:\n/opt/miniconda2/conda-bld/conda.recipe_1476908391204/_b_env_placehold_placehold_/include/arrow/builder.h:96:18: note: virtual arrow::Status arrow::ArrayBuilder::Finish(std::shared_ptr<arrow::Array>*)\n   virtual Status Finish(std::shared_ptr<Array>* out) = 0;\n                  ^\n/opt/miniconda2/conda-bld/conda.recipe_1476908391204/_b_env_placehold_placehold_/include/arrow/builder.h:96:18: note:   candidate expects 1 argument, 0 provided\nmake[2]: *** [CMakeFiles/pyarrow.dir/src/pyarrow/adapters/builtin.cc.o] Error 1\nmake[2]: Leaving directory `/opt/apache-arrow-0.1.0/python/build/temp.linux-x86_64-2.7'\nmake[1]: *** [CMakeFiles/pyarrow.dir/all] Error 2\nmake[1]: Leaving directory `/opt/apache-arrow-0.1.0/python/build/temp.linux-x86_64-2.7'\nmake: *** [all] Error 2\nerror: command 'make' failed with exit status 2\n```\n\nIf I do `conda-build --channel local --channel conda-forge --override-channels`, it can't find some of the packages I've installed. If I don't `--override-channels`, it tries to use `arrow-cpp 0.1.post-1` from `conda-forge` as the dependency and I get the compilation error above.\n\nNote: my `conda list` is\n\n```\n# packages in environment at /opt/miniconda2:\n#\nconda-build               2.0.6                    py27_0\nblas                      1.1                    openblas    conda-forge\nconda                     4.1.12                   py27_0    conda-forge\nconda-env                 2.5.2                    py27_0    conda-forge\nnumpy                     1.11.2          py27_blas_openblas_200  [blas_openblas]  conda-forge\nopenblas                  0.2.18                        5    conda-forge\npandas                    0.19.0              np111py27_0    conda-forge\nparquet-cpp               0.1.pre                       3    conda-forge\npytest                    3.0.3                    py27_0    conda-forge\nthrift-cpp                0.9.3                         3    conda-forge\nenum34                    1.1.6                    py27_0\nfilelock                  2.0.6                    py27_0\njinja2                    2.8                      py27_1\nlibgfortran               3.0.0                         1\narrow-cpp                 0.1                           0    local\nmarkupsafe                0.23                     py27_2\nmkl                       11.3.3                        0\nopenssl                   1.0.2h                        1\npatchelf                  0.9                           0\npip                       8.1.2                    py27_0\npkginfo                   1.3.2                    py27_0\npy                        1.4.31                   py27_0\npycosat                   0.6.1                    py27_1\npycrypto                  2.6.1                    py27_4\npython                    2.7.12                        1\npython-dateutil           2.5.3                    py27_0\npytz                      2016.7                   py27_0\npyyaml                    3.11                     py27_4\nreadline                  6.2                           2\nrequests                  2.10.0                   py27_0\nruamel_yaml               0.11.14                  py27_0\nsetuptools                23.0.0                   py27_0\nsix                       1.10.0                   py27_0\nsqlite                    3.13.0                        0\ntk                        8.5.18                        0\nwheel                     0.29.0                   py27_0\nyaml                      0.1.6                         0\nzlib                      1.2.8                         3\n```\n\nI'm pretty sure the problem here is something I don't know about conda (I started using it this morning), but I can't figure out how to install this package out-of-the-box.\n",
        "created_at": "2016-10-19T21:57:59.000Z",
        "updated_at": "2022-08-27T14:41:56.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2016-12-21T18:48:43.000Z"
    },
    "comments": [
        {
            "created_at": "2016-10-19T22:35:31.674Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-344?focusedCommentId=15590077) by Wes McKinney (wesm):*\nThe conda recipe in the git repo is not supported at the moment. Use the same build procedure that you were trying in ARROW-230 but use the Cython installed by \"conda install cython\" \u2013 the issue you have been having is that the way that setuptools sets up the bin/cython script to run is causing a conflict with pyarrow's build system (which we can fix, but I don't know when). \n\nNote that the pyarrow recipe was just merged to conda-forge, so hopefully in the next 24 hours you should be able to do `conda install pyarrow -c conda-forge` and it will work out of the box. "
        },
        {
            "created_at": "2016-10-20T12:50:25.211Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-344?focusedCommentId=15591735) by Wes McKinney (wesm):*\nVerified that this works for me now\n\n```Java\n$ conda install pyarrow -c conda-forge\nUsing Anaconda Cloud api site https://api.anaconda.org\nFetching package metadata ...........\nSolving package specifications: ..........\n\nPackage plan for installation in environment /home/wesm/miniconda:\n\nThe following packages will be downloaded:\n\n    package                    |            build\n    ---------------------------|-----------------\n    arrow-cpp-0.1.post         |                1         4.3 MB  conda-forge\n    parquet-cpp-0.1.pre        |                3        10.2 MB  conda-forge\n    pyarrow-0.1.post           |                0         2.2 MB  conda-forge\n    ------------------------------------------------------------\n                                           Total:        16.7 MB\n\nThe following NEW packages will be INSTALLED:\n\n    arrow-cpp:   0.1.post-1 conda-forge\n    parquet-cpp: 0.1.pre-3  conda-forge\n    pyarrow:     0.1.post-0 conda-forge\n\nProceed ([y]/n)? y\n\nFetching packages ...\narrow-cpp-0.1. 100% |#########################################| Time: 0:00:00   9.70 MB/s\nparquet-cpp-0. 100% |#########################################| Time: 0:00:00  10.72 MB/s\npyarrow-0.1.po 100% |#########################################| Time: 0:00:00   6.68 MB/s\nExtracting packages ...\n[      COMPLETE      ]|############################################################| 100%\nLinking packages ...\n[      COMPLETE      ]|############################################################| 100%\n$ ipython\nim^PPython 3.5.1 | packaged by conda-forge | (default, May 20 2016, 05:22:56) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 5.1.0 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: import pyarrow\n```"
        },
        {
            "created_at": "2016-10-20T14:03:35.114Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-344?focusedCommentId=15591900) by Jim Pivarski (jpivarski):*\nThanks, that worked in Miniconda 3.\n\nIt's a little different from what I was trying to do: I wanted to use conda as a build tool to work on arrow-cpp and test changes in pyarrow, but this is a static binary that conda installs from the web. Presumably, if I pull the Arrow git repository, I'd be able to build exactly this if I can figure out how to convince conda to use the locally compiled arrow-cpp, rather than the one on conda-forge (that was my problem above).\n\nBut the public binary is good enough for me at this stage (and I can cmake arrow-cpp from source for more in-depth testing in sample C++ programs). Also, it's a big step forward that a usable public version exists. Congratulations!\n"
        },
        {
            "created_at": "2016-10-20T14:21:02.068Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-344?focusedCommentId=15591942) by Wes McKinney (wesm):*\nRight, if you want to do development on the project, you will need to come up with a solution to the setuptools Cython conflict \u2014 I've been successful using the Cython from miniconda. You can look at our Travis CI setup to see a precise set of steps that yield a working development environment. It would be great if someone patched pyarrow's build system to circumvent setuptool's bin/cython issue"
        },
        {
            "created_at": "2016-12-21T18:48:43.655Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-344?focusedCommentId=15767834) by Wes McKinney (wesm):*\nSince we've moved all the conda packaging to conda-forge and removed the old recipes from the Apache git repo (see github.com/conda-forge/arrow-cpp-feedstock and github.com/conda-forge/pyarrow-feedstock), the official way to obtain these packages from conda is to use\n\n```Java\nconda install arrow-cpp -c conda-forge\nconda install pyarrow -c conda-forge\n```"
        },
        {
            "created_at": "2022-08-27T14:41:56.845Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-344?focusedCommentId=17585944) by @toddfarmer:*\nTransitioning issue from Resolved to Closed to based on resolution field value."
        }
    ]
}