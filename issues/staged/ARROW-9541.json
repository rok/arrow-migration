{
    "issue": {
        "title": "[C++] CMakeLists requires UTF8PROC_STATIC when building static library",
        "body": "***Note**: This issue was originally created as [ARROW-9541](https://issues.apache.org/jira/browse/ARROW-9541). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nArrow does not correctly link with utf8proc if UTF8PROC_STATIC is not specified when creating a static library, the library will contain unresolved symbols to a DLL import library.\r\n\r\nAFAIK this only happens on Windows (Visual Studio) but in theory the flag should probably be specified for all platform. I suspect that in practice only MSVC is impacted. There is already an existing section in `CMakeLists.txt` covering this problem for Arrow itself.\r\n\r\nSee <https://github.com/microsoft/vcpkg/pull/12537/files> for an example patch. In particular (line 149 of CMakeLists.txt):\r\n\r\n```Java\n\r\n if(ARROW_BUILD_STATIC AND WIN32)\r\n   target_compile_definitions(arrow_static PUBLIC ARROW_STATIC)\r\n+  if(ARROW_WITH_UTF8PROC)\r\n+    target_compile_definitions(arrow_static PUBLIC UTF8PROC_STATIC)\r\n+  endif()\r\n endif()\r\n```",
        "created_at": "2020-07-22T10:40:14.000Z",
        "updated_at": "2020-08-03T19:23:52.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-08-03T19:23:52.000Z"
    },
    "comments": [
        {
            "created_at": "2020-07-22T13:41:19.544Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9541?focusedCommentId=17162807) by Uwe Korn (uwe):*\n`[~GPSnoopy]` Can you submit the patch in the vcpkg PR to Arrow?\r\n\r\nI guess we should add the `UTF8PROC_STATIC` definition though when the library contains `utf8proc_static` in its name?"
        },
        {
            "created_at": "2020-07-22T14:42:48.479Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9541?focusedCommentId=17162854) by Tanguy Fautre (GPSnoopy):*\nYes, the current patch implies that Arrow and Utf8Proc are both built statically. This fits well with vcpkg (and I guess the majority of use cases?) but it's not perfect.\r\n\r\nNot sure what's the easiest way to get access to the utf8 library name at this stage in the `CMakeLists.txt`. I guess we can call `find_library(utf8proc)` in that code snippet and check the library name. But relying on the name has its own pitfalls as well. For example, I think that vcpkg convention is not to include `_static` but there is little consistency (e.g. utf8proc is suffixed by\u00a0`_static` but Arrow is not) .\r\n\r\nI've created a PR with the existing patch and the changes I had to make to `Findutf8proc.cmake`:\r\n <https://github.com/apache/arrow/pull/7818>\r\n\r\nSuggestions are welcome."
        },
        {
            "created_at": "2020-07-23T09:02:41.551Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9541?focusedCommentId=17163362) by Tanguy Fautre (GPSnoopy):*\nActually, maybe we don't have to be clever here and let the user decide. Arrow already has several config flags for its dependencies on whether they should be dynamically or statically linked. For example: `ARROW_BROTLI_USE_SHARED`.\r\n\r\nI'll see what I can do around that."
        },
        {
            "created_at": "2020-08-03T19:23:52.948Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9541?focusedCommentId=17170375) by Kouhei Sutou (kou):*\nIssue resolved by pull request 7818\n<https://github.com/apache/arrow/pull/7818>"
        }
    ]
}