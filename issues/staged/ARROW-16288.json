{
    "issue": {
        "title": "[C++] ValueDescr::SCALAR nearly unused and does not work for projection",
        "body": "***Note**: This issue was originally created as [ARROW-16288](https://issues.apache.org/jira/browse/ARROW-16288). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nFirst, there are almost no kernels that actually use this shape.  Only the functions \"all\", \"any\", \"list_element\", \"mean\", \"product\", \"struct_field\", and \"sum\" have kernels with this shape.  Most kernels that have special logic for scalars handle it by using `ValueDescr::ANY`\r\n\r\nSecond, when passing an expression to the project node, the expression must be bound based on the dataset schema.  Since the binding happens based on a schema (and not a batch) the function is bound to ValueDescr::ARRAY (https://github.com/apache/arrow/blob/a16be6b7b6c8271202ff766b99c199b2e29bdfa8/cpp/src/arrow/compute/exec/expression.cc#L461)\r\n\r\nThis results in an error if the function has only ValueDescr::SCALAR kernels and would likely be a problem even if the function had both types of kernels because it would get bound to the wrong kernel.\r\n\r\nThis simplest fix may be to just get rid of ValueDescr and change all kernels to ValueDescr::ANY behavior.  If we choose to keep it we will need to figure out how to handle this kind of binding.",
        "created_at": "2022-04-22T18:40:40.000Z",
        "updated_at": "2022-07-13T19:37:07.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-07-13T19:37:07.000Z"
    },
    "comments": [
        {
            "created_at": "2022-07-13T19:37:07.306Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16288?focusedCommentId=17566470) by David Li (lidavidm):*\nValueDescr was simply removed."
        }
    ]
}