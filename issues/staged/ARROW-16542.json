{
    "issue": {
        "title": "[C++] Expose tracing capability in arrow compute engine",
        "body": "***Note**: This issue was originally created as [ARROW-16542](https://issues.apache.org/jira/browse/ARROW-16542). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI am authoring a custom execution node for arrow compute engine, and currently the built-in execution nodes have the tracing capability integrated (https://issues.apache.org/jira/browse/ARROW-12671), but the tracing API is marked as internal `arrow/util/tracing_internal.h` and cannot be used externally,\u00a0I wonder if there is any chance this tracing API could be made public, so that custom execution nodes could use the same/consistent mechanism for tracing purpose. Because usually users would like to view the entire execution as a whole, if custom nodes and built-in nodes use two different tracing approaches, that will make analysis more difficult.",
        "created_at": "2022-05-12T08:50:24.000Z",
        "updated_at": "2022-05-12T13:35:39.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-05-12T12:04:56.192Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16542?focusedCommentId=17536072) by David Li (lidavidm):*\nI think you just need to link to OpenTelemetry from your application as well and use it. Assuming everything is linked properly, spans from different libraries can link to each other still and your application can configure where all spans (from Arrow and from your application) are recorded. I don't think we want to expose OpenTelemetry's API from Arrow."
        }
    ]
}