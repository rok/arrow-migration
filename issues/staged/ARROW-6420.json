{
    "issue": {
        "title": "[Java] Improve the performance of UnionVector when getting underlying vectors",
        "body": "***Note**: This issue was originally created as [ARROW-6420](https://issues.apache.org/jira/browse/ARROW-6420). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nGetting the underlying vector is a frequent opertation for UnionVector. It relies on this operation to get/set data at each index.\r\n\r\nThe current implementation is inefficient. In particular, it first gets the minor type at the given index, and then compares it against all possible minor types in a switch statment, until a match is found.\r\n\r\nWe improve the performance by storing the internal vectors in an array, whose index is the ordinal of the minor type. So given a minor type, its corresponding underlying vector can be obtained in O(1) time.\r\n\r\nIt should be noted that this technique is also applicable to UnionReader and UnionWriter, and support for UnionReader is already implemented.",
        "created_at": "2019-09-03T04:26:28.000Z",
        "updated_at": "2020-02-13T01:25:36.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-02-13T01:25:36.000Z"
    },
    "comments": []
}