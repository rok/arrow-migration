{
    "issue": {
        "title": "[R] Build and test on Solaris",
        "body": "***Note**: This issue was originally created as [ARROW-10734](https://issues.apache.org/jira/browse/ARROW-10734). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThere's no user demand for running Arrow on Solaris, but CRAN likes packages to build there and at some point we may be asked to support it. This is an umbrella issue for things found along the way.\r\n\r\nCI will be another big challenge. `rhub` does have a check_on_solaris (https://r-hub.github.io/rhub/reference/check_shortcuts.html) but it's unclear if we can call that from a github action. There's also https://github.com/vmactions/solaris-vm and related tools for running a VM on github actions; we can get R from https://files.r-hub.io/opencsw/.",
        "created_at": "2020-11-25T18:56:21.000Z",
        "updated_at": "2021-04-06T15:13:28.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-04-06T15:13:28.000Z"
    },
    "comments": [
        {
            "created_at": "2020-12-02T19:02:04.151Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10734?focusedCommentId=17242627) by Neal Richardson (npr):*\nIt turns out we are on the Solaris blocklist on CRAN: https://svn.r-project.org/R-dev-web/trunk/CRAN/QA/BDR/Solaris/x86/packages/stoplist.R\r\n\r\nIf we did want to try building Solaris on CI, r-hub has these VMs: https://files.r-hub.io/solaris/\r\n\r\nMore build instructions here: https://github.com/r-hub/solarischeck/tree/master/packer"
        },
        {
            "created_at": "2020-12-02T20:09:12.767Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10734?focusedCommentId=17242685) by Neal Richardson (npr):*\nI did some poking to see if it would \"just work\". It does not, but I don't know how much effort would be required to make it work. Notes for posterity:\r\n\r\n- Changed this uname check to just `else` so that we weren't prevented from trying to build on sunos: https://github.com/apache/arrow/blob/96067d0c639d32d7645b7168186bf5dbe525578b/r/configure#L119 Then uploaded to r-hub and built on the Oracle Developer Studio 12.6 Solaris flavor, which is CRAN's default. Rcpp packages apparently don't build on it and are instead tested on the other flavor, with gcc 5.5. We should try using that version instead.\n- The next place I expect that we'd need to change is cmake: we currently download a Linux cmake binary, but we'll probably have to download and build cmake from source. According to https://gitlab.kitware.com/cmake/cmake/-/blob/master/README.rst, Solaris is supported.\n- Next time one tries this, it would be good to hardcode the ARROW_R_DEV env var somewhere in configure/linuxlibs so we get verbosity. It's hard to see what failed. Might also be good to put `set -x` in configure to see which steps are failing. Configure messages are:\n  \n  {code}\n- installing **source** package \u00e2\u20ac\u02dcarrow\u00e2\u20ac\u2122 ...\n  - using staged installation\n    Bad string\n    Bad string\n    Bad string\n    ./configure: Version: not found\n    Usage: grep -hblcnsviw pattern file . . .\n    sh: gnome-config: not found\n    sh: gnome-config: not found\n    sh: gnome-config: not found\n    sh: gnome-config: not found\n    sh: gnome-config: not found\n    sh: gnome-config: not found\n    - Proceeding without C++ dependencies\n      ```Java\n      \n      \n      So it appears that it doesn't like this grep-then-sed command: https://github.com/apache/arrow/blob/96067d0c639d32d7645b7168186bf5dbe525578b/r/configure#L42 And it's unclear which other {{sh}} commands are failing or how to prevent them from failing.\n      \n      Compilation failed with errors like:\n      \n      ```\n      /opt/developerstudio12.6/bin/CC -std=c++11 -library=stdcpp,CrunG3  -I\"/opt/R/R-4.0.3/lib/R/include\" -DNDEBUG  -I'/export/home/X7LRGJx/R/cpp11/include' -I/opt/csw/include   -KPIC  -O -xlibmil -xtarget=native -xcache=generic -nofstore  -c array.cpp -o array.o\n      \"/export/home/X7LRGJx/R/cpp11/include/cpp11/as.hpp\", line 86: Error: enable_if_constructible_from_sexp<T, T> cpp11::as_cpp<T>(SEXPREC\\*) already had a body defined.\n      \"/export/home/X7LRGJx/R/cpp11/include/cpp11/as.hpp\", line 91: Error: enable_if_constructible_from_sexp<T, T> cpp11::as_cpp<T>(SEXPREC\\*) already had a body defined.\n      \"/export/home/X7LRGJx/R/cpp11/include/cpp11/as.hpp\", line 118: Error: enable_if_constructible_from_sexp<T, T> cpp11::as_cpp<T>(SEXPREC\\*) already had a body defined.\n      \"/export/home/X7LRGJx/R/cpp11/include/cpp11/as.hpp\", line 132: Error: enable_if_constructible_from_sexp<T, T> cpp11::as_cpp<T>(SEXPREC\\*) already had a body defined.\n      \"/export/home/X7LRGJx/R/cpp11/include/cpp11/as.hpp\", line 172: Error: enable_if_constructible_from_sexp<T, T> cpp11::as_cpp<T>(SEXPREC\\*) already had a body defined.\n      \"/export/home/X7LRGJx/R/cpp11/include/cpp11/as.hpp\", line 183: Error: enable_if_constructible_from_sexp<T, T> cpp11::as_cpp<T>(SEXPREC\\*) already had a body defined.\n      \"/export/home/X7LRGJx/R/cpp11/include/cpp11/as.hpp\", line 195: Error: enable_if_constructible_from_sexp<T, T> cpp11::as_cpp<T>(SEXPREC\\*) already had a body defined.\n      \"/export/home/X7LRGJx/R/cpp11/include/cpp11/as.hpp\", line 216: Error: enable_if_integral<T, SEXPREC\\*> cpp11::as_sexp<T>(T) already had a body defined.\n      \"/export/home/X7LRGJx/R/cpp11/include/cpp11/as.hpp\", line 221: Error: enable_if_integral<T, SEXPREC\\*> cpp11::as_sexp<T>(T) already had a body defined.\n      \"/export/home/X7LRGJx/R/cpp11/include/cpp11/as.hpp\", line 268: Error: enable_if_integral<T, SEXPREC\\*> cpp11::as_sexp<Container, T, struct>(const Container&) already had a body defined.\n      \"/export/home/X7LRGJx/R/cpp11/include/cpp11/as.hpp\", line 281: Error: Could not find a match for cpp11::as_sexp<T>(std::initializer_list<bool>) needed in cpp11::as_sexp(std::initializer_list<bool>).\n      ...\n      {code}\n      \n      which sound like fundamental issues with cpp11, so I think we need the other Solaris machine flavor. (According to BDR's runner script (https://svn.r-project.org/R-dev-web/trunk/CRAN/QA/BDR/Solaris/x86/packages/tests32/swift-parallel.R), anything linking to cpp11 gets the gcc version.)"
        },
        {
            "created_at": "2020-12-03T02:16:35.838Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10734?focusedCommentId=17242863) by Neal Richardson (npr):*\nAlright I played with this some more and made a few tweaks to work around some issues and get a build going on r-hub, with verbosity:\r\n\r\n```Java\n\r\ndiff --git a/r/configure b/r/configure\r\nindex 21bad6b1a..fd1711b52 100755\r\n--- a/r/configure\r\n+++ b/r/configure\r\n@@ -116,7 +116,7 @@ else\r\n         fi\r\n# autobrew sets `PKG_LIBS` and `PKG_CFLAGS`\r\n       fi\r\n-    elif [ \"$UNAME\" = \"Linux\" ]; then\r\n+    else\r\n# Set some default values/backwards compatibility\r\n       if [ \"${LIBARROW_DOWNLOAD}\" = \"\" ] && [ \"${NOT_CRAN}\" != \"\" ]; then\r\n         LIBARROW_DOWNLOAD=$NOT_CRAN; export LIBARROW_DOWNLOAD\r\ndiff --git a/r/inst/build_arrow_static.sh b/r/inst/build_arrow_static.sh\r\nindex a57aa70a0..032c5db93 100755\r\n--- a/r/inst/build_arrow_static.sh\r\n+++ b/r/inst/build_arrow_static.sh\r\n@@ -36,13 +36,6 @@ set -x\r\n SOURCE_DIR=\"$(cd \"${SOURCE_DIR}\" && pwd)\"\r\n DEST_DIR=\"$(mkdir -p \"${DEST_DIR}\" && cd \"${DEST_DIR}\" && pwd)\"\r\n \r\n-if [ \"$CMAKE_GENERATOR\" = \"\" ]; then\r\n-  # Look for ninja, prefer it\r\n-  if which ninja >/dev/null 2>&1; then\r\n-    CMAKE_GENERATOR=\"Ninja\"\r\n-  fi\r\n-fi\r\n-\r\n if [ \"$LIBARROW_MINIMAL\" = \"false\" ]; then\r\n   ARROW_DEFAULT_PARAM=\"ON\"\r\n else\r\ndiff --git a/r/tools/linuxlibs.R b/r/tools/linuxlibs.R\r\nindex d36192ee7..aa5b8dcbd 100644\r\n--- a/r/tools/linuxlibs.R\r\n+++ b/r/tools/linuxlibs.R\r\n@@ -16,7 +16,7 @@\r\n# under the License.\r\n \r\n args <- commandArgs(TRUE)\r\n-VERSION <- args[1]\r\n+VERSION <- stats::setNames(read.dcf(\"DESCRIPTION\")[,\"Version\"], NULL)\r\n dst_dir <- paste0(\"libarrow/arrow-\", VERSION)\r\n \r\n arrow_repo <- \"https://dl.bintray.com/ursalabs/arrow-r/libarrow/\"\r\n@@ -34,7 +34,7 @@ build_ok <- !env_is(\"LIBARROW_BUILD\", \"false\")\r\n# But binary defaults to not OK\r\n binary_ok <- !identical(tolower(Sys.getenv(\"LIBARROW_BINARY\", \"false\")), \"false\")\r\n# For local debugging, set ARROW_R_DEV=TRUE to make this script print more\r\n-quietly <- !env_is(\"ARROW_R_DEV\", \"true\")\r\n+quietly <- FALSE\r\n \r\n try_download <- function(from_url, to_file) {\r\n   status <- try(\r\n```\r\n\r\nThe build started (the Solaris system has cmake 3.14 on it, so we didn't need to provide it ourselves) but it failed on configuring boost_ep and jemalloc_ep also failed:\r\n\r\n```Java\n\r\n* installing *source* package \u00e2\u20ac\u02dcarrow\u00e2\u20ac\u2122 ...\r\n** using staged installation\r\nBad string\r\nBad string\r\nBad string\r\n./configure: Version: not found\r\nUsage: grep -hblcnsviw pattern file . . .\r\nsh: gnome-config: not found\r\nsh: gnome-config: not found\r\nsh: gnome-config: not found\r\nsh: gnome-config: not found\r\nsh: gnome-config: not found\r\nsh: gnome-config: not found\r\ntrying URL 'https://dl.bintray.com/ursalabs/arrow-r/libarrow/src/arrow-2.0.0.zip'\r\nError in download.file(from_url, to_file, quiet = quietly) : \r\n  cannot open URL 'https://dl.bintray.com/ursalabs/arrow-r/libarrow/src/arrow-2.0.0.zip'\r\ntrying URL 'https://www.apache.org/dyn/closer.lua?action=download&filename=arrow/arrow-2.0.0/apache-arrow-2.0.0.tar.gz'\r\nContent type 'application/octet-stream' length 7530266 bytes (7.2 MB)\r\n==================================================\r\ndownloaded 7.2 MB\r\n\r\n*** Successfully retrieved C++ source\r\n*** Building C++ libraries\r\n*** Building with MAKEFLAGS= -j2 \r\n**** arrow with SOURCE_DIR=\"/export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd2dc12920/apache-arrow-2.0.0/cpp\" BUILD_DIR=\"/export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786\" DEST_DIR=\"libarrow/arrow-2.0.0\" CMAKE=\"/opt/csw/bin/cmake\" CC=\"/opt/csw/bin/gcc-5.5\" CXX=\"/opt/csw/bin/g++-5.5 -std=gnu++11\" LDFLAGS=\"-m32 -march=pentiumpro -L/opt/csw/lib\" ARROW_S3=OFF \r\n++ pwd\r\n+ : /export/home/XFYLR57/arrow.Rcheck/00_pkg_src/arrow\r\n+ : /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd2dc12920/apache-arrow-2.0.0/cpp\r\n+ : /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786\r\n+ : libarrow/arrow-2.0.0\r\n+ : /opt/csw/bin/cmake\r\n++ cd /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd2dc12920/apache-arrow-2.0.0/cpp\r\n++ pwd\r\n+ SOURCE_DIR=/export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd2dc12920/apache-arrow-2.0.0/cpp\r\n++ mkdir -p libarrow/arrow-2.0.0\r\n++ cd libarrow/arrow-2.0.0\r\n++ pwd\r\n+ DEST_DIR=/export/home/XFYLR57/arrow.Rcheck/00_pkg_src/arrow/libarrow/arrow-2.0.0\r\n+ '[' '' = false ']'\r\n+ ARROW_DEFAULT_PARAM=OFF\r\n+ mkdir -p /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786\r\n+ pushd /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786\r\n~/Rtemp/RtmpXq9bnS/file15cd68095786 ~/arrow.Rcheck/00_pkg_src/arrow\r\n+ /opt/csw/bin/cmake -DARROW_BOOST_USE_SHARED=OFF -DARROW_BUILD_TESTS=OFF -DARROW_BUILD_SHARED=OFF -DARROW_BUILD_STATIC=ON -DARROW_COMPUTE=ON -DARROW_CSV=ON -DARROW_DATASET=ON -DARROW_DEPENDENCY_SOURCE=BUNDLED -DARROW_FILESYSTEM=ON -DARROW_JEMALLOC=ON -DARROW_JSON=ON -DARROW_PARQUET=ON -DARROW_S3=OFF -DARROW_WITH_BROTLI=OFF -DARROW_WITH_BZ2=OFF -DARROW_WITH_LZ4=OFF -DARROW_WITH_SNAPPY=OFF -DARROW_WITH_UTF8PROC=OFF -DARROW_WITH_ZLIB=OFF -DARROW_WITH_ZSTD=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_INSTALL_PREFIX=/export/home/XFYLR57/arrow.Rcheck/00_pkg_src/arrow/libarrow/arrow-2.0.0 -DCMAKE_EXPORT_NO_PACKAGE_REGISTRY=ON -DCMAKE_FIND_PACKAGE_NO_PACKAGE_REGISTRY=ON -DCMAKE_UNITY_BUILD=ON -G 'Unix Makefiles' /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd2dc12920/apache-arrow-2.0.0/cpp\r\n-- Building using CMake version: 3.14.3\r\n-- The C compiler identification is GNU 5.5.0\r\n-- The CXX compiler identification is GNU 5.5.0\r\n-- Check for working C compiler: /opt/csw/bin/gcc-5.5\r\n-- Check for working C compiler: /opt/csw/bin/gcc-5.5 -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Check for working CXX compiler: /opt/csw/bin/g++-5.5\r\n-- Check for working CXX compiler: /opt/csw/bin/g++-5.5 -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\n-- Arrow version: 2.0.0 (full: '2.0.0')\r\n-- Arrow SO version: 200 (full: 200.0.0)\r\n-- clang-tidy not found\r\n-- clang-format not found\r\n-- Could NOT find ClangTools (missing: CLANG_FORMAT_BIN CLANG_TIDY_BIN) \r\n-- infer not found\r\nfatal: Not a git repository (or any of the parent directories): .git\r\n-- Found Python3: /opt/csw/bin/python3.3 (found version \"3.3.6\") found components:  Interpreter \r\n-- Found cpplint executable at /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd2dc12920/apache-arrow-2.0.0/cpp/build-support/cpplint.py\r\n-- System processor: i386\r\n-- Performing Test CXX_SUPPORTS_SSE4_2\r\n-- Performing Test CXX_SUPPORTS_SSE4_2 - Success\r\n-- Performing Test CXX_SUPPORTS_AVX2\r\n-- Performing Test CXX_SUPPORTS_AVX2 - Success\r\n-- Performing Test CXX_SUPPORTS_AVX512\r\n-- Performing Test CXX_SUPPORTS_AVX512 - Failed\r\n-- Arrow build warning level: PRODUCTION\r\nUsing ld linker\r\nConfigured for RELEASE build (set with cmake -DCMAKE_BUILD_TYPE={release,debug,...})\r\n-- Build Type: RELEASE\r\n-- Using BUNDLED approach to find dependencies\r\n-- ARROW_ABSL_BUILD_VERSION: 2eba343b51e0923cd3fb919a6abd6120590fc059\r\n-- ARROW_AWSSDK_BUILD_VERSION: 1.8.57\r\n-- ARROW_AWS_CHECKSUMS_BUILD_VERSION: v0.1.5\r\n-- ARROW_AWS_C_COMMON_BUILD_VERSION: v0.4.59\r\n-- ARROW_AWS_C_EVENT_STREAM_BUILD_VERSION: v0.1.5\r\n-- ARROW_BOOST_BUILD_VERSION: 1.71.0\r\n-- ARROW_BROTLI_BUILD_VERSION: v1.0.7\r\n-- ARROW_BZIP2_BUILD_VERSION: 1.0.8\r\n-- ARROW_CARES_BUILD_VERSION: 1.16.1\r\n-- ARROW_GBENCHMARK_BUILD_VERSION: v1.5.1\r\n-- ARROW_GFLAGS_BUILD_VERSION: v2.2.2\r\n-- ARROW_GLOG_BUILD_VERSION: v0.4.0\r\n-- ARROW_GRPC_BUILD_VERSION: v1.29.1\r\n-- ARROW_GTEST_BUILD_VERSION: 1.8.1\r\n-- ARROW_JEMALLOC_BUILD_VERSION: 5.2.1\r\n-- ARROW_LZ4_BUILD_VERSION: v1.9.2\r\n-- ARROW_MIMALLOC_BUILD_VERSION: v1.6.4\r\n-- ARROW_ORC_BUILD_VERSION: 1.6.2\r\n-- ARROW_PROTOBUF_BUILD_VERSION: v3.12.1\r\n-- ARROW_RAPIDJSON_BUILD_VERSION: 1a803826f1197b5e30703afe4b9c0e7dd48074f5\r\n-- ARROW_RE2_BUILD_VERSION: 2019-08-01\r\n-- ARROW_SNAPPY_BUILD_VERSION: 1.1.8\r\n-- ARROW_THRIFT_BUILD_VERSION: 0.12.0\r\n-- ARROW_THRIFT_BUILD_MD5_CHECKSUM: 3deebbb4d1ca77dd9c9e009a1ea02183\r\n-- ARROW_UTF8PROC_BUILD_VERSION: v2.5.0\r\n-- ARROW_ZLIB_BUILD_VERSION: 1.2.11\r\n-- ARROW_ZSTD_BUILD_VERSION: v1.4.5\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Looking for pthread_create\r\n-- Looking for pthread_create - found\r\n-- Found Threads: TRUE  \r\n-- Added static library dependency boost_system_static: /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786/boost_ep-prefix/src/boost_ep/stage/lib/libboost_system.a\r\n-- Added static library dependency boost_filesystem_static: /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786/boost_ep-prefix/src/boost_ep/stage/lib/libboost_filesystem.a\r\n-- Added static library dependency boost_regex_static: /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786/boost_ep-prefix/src/boost_ep/stage/lib/libboost_regex.a\r\n-- Boost include dir: /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786/boost_ep-prefix/src/boost_ep\r\n-- Boost libraries: boost_system_static;boost_filesystem_static\r\n-- Building without OpenSSL support. Minimum OpenSSL version 1.0.2 required.\r\nBuilding Apache Thrift from source\r\n-- Building (vendored) jemalloc from source\r\n-- Building rapidjson from source\r\n-- Found hdfs.h at: /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd2dc12920/apache-arrow-2.0.0/cpp/thirdparty/hadoop/include/hdfs.h\r\n-- All bundled static libraries: boost_system_static;boost_filesystem_static;boost_regex_static;thrift::thrift;jemalloc::jemalloc\r\n-- CMAKE_C_FLAGS:  -O3 -DNDEBUG  -Wall -fno-semantic-interposition -Wno-attributes -msse4.2 \r\n-- CMAKE_CXX_FLAGS:  -Wno-subobject-linkage  -fdiagnostics-color=always -O3 -DNDEBUG  -Wall -fno-semantic-interposition -Wno-attributes -msse4.2 \r\n-- Looking for backtrace\r\n-- Looking for backtrace - not found\r\n-- Could NOT find Backtrace (missing: Backtrace_LIBRARY Backtrace_INCLUDE_DIR) \r\n-- Creating bundled static library target arrow_bundled_dependencies at /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786/release/libarrow_bundled_dependencies.a\r\n-- ---------------------------------------------------------------------\r\n-- Arrow version:                                 2.0.0\r\n-- \r\n-- Build configuration summary:\r\n--   Generator: Unix Makefiles\r\n--   Build type: RELEASE\r\n--   Source directory: /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd2dc12920/apache-arrow-2.0.0/cpp\r\n--   Install prefix: /export/home/XFYLR57/arrow.Rcheck/00_pkg_src/arrow/libarrow/arrow-2.0.0\r\n-- \r\n-- Compile and link options:\r\n-- \r\n--   ARROW_CXXFLAGS=\"\" [default=\"\"]\r\n--       Compiler flags to append when compiling Arrow\r\n--   ARROW_BUILD_STATIC=ON [default=ON]\r\n--       Build static libraries\r\n--   ARROW_BUILD_SHARED=OFF [default=ON]\r\n--       Build shared libraries\r\n--   ARROW_PACKAGE_KIND=\"\" [default=\"\"]\r\n--       Arbitrary string that identifies the kind of package\r\n--       (for informational purposes)\r\n--   ARROW_GIT_ID=\"\" [default=\"\"]\r\n--       The Arrow git commit id (if any)\r\n--   ARROW_GIT_DESCRIPTION=\"\" [default=\"\"]\r\n--       The Arrow git commit description (if any)\r\n--   ARROW_NO_DEPRECATED_API=OFF [default=OFF]\r\n--       Exclude deprecated APIs from build\r\n--   ARROW_USE_CCACHE=ON [default=ON]\r\n--       Use ccache when compiling (if available)\r\n--   ARROW_USE_LD_GOLD=OFF [default=OFF]\r\n--       Use ld.gold for linking on Linux (if available)\r\n--   ARROW_USE_PRECOMPILED_HEADERS=OFF [default=OFF]\r\n--       Use precompiled headers when compiling\r\n--   ARROW_SIMD_LEVEL=SSE4_2 [default=NONE|SSE4_2|AVX2|AVX512]\r\n--       Compile-time SIMD optimization level\r\n--   ARROW_RUNTIME_SIMD_LEVEL=MAX [default=NONE|SSE4_2|AVX2|AVX512|MAX]\r\n--       Max runtime SIMD optimization level\r\n--   ARROW_ARMV8_ARCH=armv8-a [default=armv8-a|armv8-a+crc+crypto]\r\n--       Arm64 arch and extensions\r\n--   ARROW_ALTIVEC=ON [default=ON]\r\n--       Build with Altivec if compiler has support\r\n--   ARROW_RPATH_ORIGIN=OFF [default=OFF]\r\n--       Build Arrow libraries with RATH set to $ORIGIN\r\n--   ARROW_INSTALL_NAME_RPATH=ON [default=ON]\r\n--       Build Arrow libraries with install_name set to @rpath\r\n--   ARROW_GGDB_DEBUG=ON [default=ON]\r\n--       Pass -ggdb flag to debug builds\r\n-- \r\n-- Test and benchmark options:\r\n-- \r\n--   ARROW_BUILD_EXAMPLES=OFF [default=OFF]\r\n--       Build the Arrow examples\r\n--   ARROW_BUILD_TESTS=OFF [default=OFF]\r\n--       Build the Arrow googletest unit tests\r\n--   ARROW_ENABLE_TIMING_TESTS=ON [default=ON]\r\n--       Enable timing-sensitive tests\r\n--   ARROW_BUILD_INTEGRATION=OFF [default=OFF]\r\n--       Build the Arrow integration test executables\r\n--   ARROW_BUILD_BENCHMARKS=OFF [default=OFF]\r\n--       Build the Arrow micro benchmarks\r\n--   ARROW_BUILD_BENCHMARKS_REFERENCE=OFF [default=OFF]\r\n--       Build the Arrow micro reference benchmarks\r\n--   ARROW_TEST_LINKAGE=static [default=shared|static]\r\n--       Linkage of Arrow libraries with unit tests executables.\r\n--   ARROW_FUZZING=OFF [default=OFF]\r\n--       Build Arrow Fuzzing executables\r\n--   ARROW_LARGE_MEMORY_TESTS=OFF [default=OFF]\r\n--       Enable unit tests which use large memory\r\n-- \r\n-- Lint options:\r\n-- \r\n--   ARROW_ONLY_LINT=OFF [default=OFF]\r\n--       Only define the lint and check-format targets\r\n--   ARROW_VERBOSE_LINT=OFF [default=OFF]\r\n--       If off, 'quiet' flags will be passed to linting tools\r\n--   ARROW_GENERATE_COVERAGE=OFF [default=OFF]\r\n--       Build with C++ code coverage enabled\r\n-- \r\n-- Checks options:\r\n-- \r\n--   ARROW_TEST_MEMCHECK=OFF [default=OFF]\r\n--       Run the test suite using valgrind --tool=memcheck\r\n--   ARROW_USE_ASAN=OFF [default=OFF]\r\n--       Enable Address Sanitizer checks\r\n--   ARROW_USE_TSAN=OFF [default=OFF]\r\n--       Enable Thread Sanitizer checks\r\n--   ARROW_USE_UBSAN=OFF [default=OFF]\r\n--       Enable Undefined Behavior sanitizer checks\r\n-- \r\n-- Project component options:\r\n-- \r\n--   ARROW_BUILD_UTILITIES=OFF [default=OFF]\r\n--       Build Arrow commandline utilities\r\n--   ARROW_COMPUTE=ON [default=OFF]\r\n--       Build the Arrow Compute Modules\r\n--   ARROW_CSV=ON [default=OFF]\r\n--       Build the Arrow CSV Parser Module\r\n--   ARROW_CUDA=OFF [default=OFF]\r\n--       Build the Arrow CUDA extensions (requires CUDA toolkit)\r\n--   ARROW_DATASET=ON [default=OFF]\r\n--       Build the Arrow Dataset Modules\r\n--   ARROW_FILESYSTEM=ON [default=OFF]\r\n--       Build the Arrow Filesystem Layer\r\n--   ARROW_FLIGHT=OFF [default=OFF]\r\n--       Build the Arrow Flight RPC System (requires GRPC, Protocol Buffers)\r\n--   ARROW_GANDIVA=OFF [default=OFF]\r\n--       Build the Gandiva libraries\r\n--   ARROW_HDFS=OFF [default=OFF]\r\n--       Build the Arrow HDFS bridge\r\n--   ARROW_HIVESERVER2=OFF [default=OFF]\r\n--       Build the HiveServer2 client and Arrow adapter\r\n--   ARROW_IPC=ON [default=ON]\r\n--       Build the Arrow IPC extensions\r\n--   ARROW_JEMALLOC=ON [default=ON]\r\n--       Build the Arrow jemalloc-based allocator\r\n--   ARROW_JNI=OFF [default=OFF]\r\n--       Build the Arrow JNI lib\r\n--   ARROW_JSON=ON [default=OFF]\r\n--       Build Arrow with JSON support (requires RapidJSON)\r\n--   ARROW_MIMALLOC=OFF [default=OFF]\r\n--       Build the Arrow mimalloc-based allocator\r\n--   ARROW_PARQUET=ON [default=OFF]\r\n--       Build the Parquet libraries\r\n--   ARROW_ORC=OFF [default=OFF]\r\n--       Build the Arrow ORC adapter\r\n--   ARROW_PLASMA=OFF [default=OFF]\r\n--       Build the plasma object store along with Arrow\r\n--   ARROW_PLASMA_JAVA_CLIENT=OFF [default=OFF]\r\n--       Build the plasma object store java client\r\n--   ARROW_PYTHON=OFF [default=OFF]\r\n--       Build the Arrow CPython extensions\r\n--   ARROW_S3=OFF [default=OFF]\r\n--       Build Arrow with S3 support (requires the AWS SDK for C++)\r\n--   ARROW_TENSORFLOW=OFF [default=OFF]\r\n--       Build Arrow with TensorFlow support enabled\r\n--   ARROW_TESTING=OFF [default=OFF]\r\n--       Build the Arrow testing libraries\r\n-- \r\n-- Thirdparty toolchain options:\r\n-- \r\n--   ARROW_DEPENDENCY_SOURCE=BUNDLED [default=AUTO|BUNDLED|SYSTEM|CONDA|BREW]\r\n--       Method to use for acquiring arrow's build dependencies\r\n--   ARROW_VERBOSE_THIRDPARTY_BUILD=OFF [default=OFF]\r\n--       Show output from ExternalProjects rather than just logging to files\r\n--   ARROW_DEPENDENCY_USE_SHARED=ON [default=ON]\r\n--       Link to shared libraries\r\n--   ARROW_BOOST_USE_SHARED=OFF [default=ON]\r\n--       Rely on boost shared libraries where relevant\r\n--   ARROW_BROTLI_USE_SHARED=ON [default=ON]\r\n--       Rely on Brotli shared libraries where relevant\r\n--   ARROW_BZ2_USE_SHARED=ON [default=ON]\r\n--       Rely on Bz2 shared libraries where relevant\r\n--   ARROW_GFLAGS_USE_SHARED=ON [default=ON]\r\n--       Rely on GFlags shared libraries where relevant\r\n--   ARROW_GRPC_USE_SHARED=ON [default=ON]\r\n--       Rely on gRPC shared libraries where relevant\r\n--   ARROW_LZ4_USE_SHARED=ON [default=ON]\r\n--       Rely on lz4 shared libraries where relevant\r\n--   ARROW_OPENSSL_USE_SHARED=ON [default=ON]\r\n--       Rely on OpenSSL shared libraries where relevant\r\n--   ARROW_PROTOBUF_USE_SHARED=ON [default=ON]\r\n--       Rely on Protocol Buffers shared libraries where relevant\r\n--   ARROW_THRIFT_USE_SHARED=ON [default=ON]\r\n--       Rely on thrift shared libraries where relevant\r\n--   ARROW_UTF8PROC_USE_SHARED=ON [default=ON]\r\n--       Rely on utf8proc shared libraries where relevant\r\n--   ARROW_SNAPPY_USE_SHARED=ON [default=ON]\r\n--       Rely on snappy shared libraries where relevant\r\n--   ARROW_UTF8PROC_USE_SHARED=ON [default=ON]\r\n--       Rely on utf8proc shared libraries where relevant\r\n--   ARROW_ZSTD_USE_SHARED=ON [default=ON]\r\n--       Rely on zstd shared libraries where relevant\r\n--   ARROW_USE_GLOG=OFF [default=OFF]\r\n--       Build libraries with glog support for pluggable logging\r\n--   ARROW_WITH_BACKTRACE=ON [default=ON]\r\n--       Build with backtrace support\r\n--   ARROW_WITH_BROTLI=OFF [default=OFF]\r\n--       Build with Brotli compression\r\n--   ARROW_WITH_BZ2=OFF [default=OFF]\r\n--       Build with BZ2 compression\r\n--   ARROW_WITH_LZ4=OFF [default=OFF]\r\n--       Build with lz4 compression\r\n--   ARROW_WITH_SNAPPY=OFF [default=OFF]\r\n--       Build with Snappy compression\r\n--   ARROW_WITH_ZLIB=OFF [default=OFF]\r\n--       Build with zlib compression\r\n--   ARROW_WITH_ZSTD=OFF [default=OFF]\r\n--       Build with zstd compression\r\n--   ARROW_WITH_UTF8PROC=OFF [default=ON]\r\n--       Build with support for Unicode properties using the utf8proc library\r\n-- \r\n-- Parquet options:\r\n-- \r\n--   PARQUET_MINIMAL_DEPENDENCY=OFF [default=OFF]\r\n--       Depend only on Thirdparty headers to build libparquet.\r\n--       Always OFF if building binaries\r\n--   PARQUET_BUILD_EXECUTABLES=OFF [default=OFF]\r\n--       Build the Parquet executable CLI tools. Requires static libraries to be built.\r\n--   PARQUET_BUILD_EXAMPLES=OFF [default=OFF]\r\n--       Build the Parquet examples. Requires static libraries to be built.\r\n--   PARQUET_REQUIRE_ENCRYPTION=OFF [default=OFF]\r\n--       Build support for encryption. Fail if OpenSSL is not found\r\n-- \r\n-- Gandiva options:\r\n-- \r\n--   ARROW_GANDIVA_JAVA=OFF [default=OFF]\r\n--       Build the Gandiva JNI wrappers\r\n--   ARROW_GANDIVA_STATIC_LIBSTDCPP=OFF [default=OFF]\r\n--       Include -static-libstdc++ -static-libgcc when linking with\r\n--       Gandiva static libraries\r\n--   ARROW_GANDIVA_PC_CXX_FLAGS=\"\" [default=\"\"]\r\n--       Compiler flags to append when pre-compiling Gandiva operations\r\n-- \r\n-- Advanced developer options:\r\n-- \r\n--   ARROW_EXTRA_ERROR_CONTEXT=OFF [default=OFF]\r\n--       Compile with extra error context (line numbers, code)\r\n--   ARROW_OPTIONAL_INSTALL=OFF [default=OFF]\r\n--       If enabled install ONLY targets that have already been built. Please be\r\n--       advised that if this is enabled 'install' will fail silently on components\r\n--       that have not been built\r\n--   Outputting build configuration summary to /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786/cmake_summary.json\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786\r\n+ /opt/csw/bin/cmake --build . --target install\r\ngmake[1]: Entering directory '/export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786'\r\ngmake[2]: Entering directory '/export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786'\r\ngmake[2]: Entering directory '/export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786'\r\nScanning dependencies of target boost_ep\r\nScanning dependencies of target rapidjson_ep\r\ngmake[2]: Leaving directory '/export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786'\r\ngmake[2]: Leaving directory '/export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786'\r\ngmake[2]: Entering directory '/export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786'\r\ngmake[2]: Entering directory '/export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786'\r\n[  1%] Creating directories for 'rapidjson_ep'\r\n[  1%] Creating directories for 'boost_ep'\r\n[  2%] Performing download step (download, verify and extract) for 'boost_ep'\r\n[  2%] Performing download step (download, verify and extract) for 'rapidjson_ep'\r\n-- rapidjson_ep download command succeeded.  See also /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786/src/rapidjson_ep-stamp/rapidjson_ep-download-*.log\r\n[  2%] No patch step for 'rapidjson_ep'\r\n[  2%] No update step for 'rapidjson_ep'\r\n[  3%] Performing configure step for 'rapidjson_ep'\r\n-- rapidjson_ep configure command succeeded.  See also /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786/src/rapidjson_ep-stamp/rapidjson_ep-configure-*.log\r\n[  3%] Performing build step for 'rapidjson_ep'\r\n-- rapidjson_ep build command succeeded.  See also /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786/src/rapidjson_ep-stamp/rapidjson_ep-build-*.log\r\n[  4%] Performing install step for 'rapidjson_ep'\r\n-- rapidjson_ep install command succeeded.  See also /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786/src/rapidjson_ep-stamp/rapidjson_ep-install-*.log\r\n[  4%] Completed 'rapidjson_ep'\r\ngmake[2]: Leaving directory '/export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786'\r\n[  4%] Built target rapidjson_ep\r\ngmake[2]: Entering directory '/export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786'\r\nScanning dependencies of target jemalloc_ep\r\ngmake[2]: Leaving directory '/export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786'\r\ngmake[2]: Entering directory '/export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786'\r\n[  4%] Creating directories for 'jemalloc_ep'\r\n[  4%] Performing download step (download, verify and extract) for 'jemalloc_ep'\r\n-- boost_ep download command succeeded.  See also /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786/boost_ep-prefix/src/boost_ep-stamp/boost_ep-download-*.log\r\n[  4%] No patch step for 'boost_ep'\r\n[  5%] No update step for 'boost_ep'\r\n[  5%] Performing configure step for 'boost_ep'\r\nCMake Error at /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786/boost_ep-prefix/src/boost_ep-stamp/boost_ep-configure-RELEASE.cmake:37 (message):\r\n  Command failed: 2\r\n\r\n   './bootstrap.sh' '--prefix=/export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786/boost_ep-prefix/src/boost_ep' '--with-libraries=filesystem,regex,system'\r\n\r\n  See also\r\n\r\n    /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786/boost_ep-prefix/src/boost_ep-stamp/boost_ep-configure-*.log\r\n\r\n\r\n-- stdout output is:\r\n\r\n-- stderr output is:\r\n./bootstrap.sh: syntax error at line 192: `my_dir=$' unexpected\r\n\r\nCMake Error at /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786/boost_ep-prefix/src/boost_ep-stamp/boost_ep-configure-RELEASE.cmake:47 (message):\r\n  Stopping after outputting logs.\r\n\r\n\r\ngmake[2]: *** [CMakeFiles/boost_ep.dir/build.make:108: boost_ep-prefix/src/boost_ep-stamp/boost_ep-configure] Error 1\r\ngmake[2]: Leaving directory '/export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786'\r\ngmake[1]: *** [CMakeFiles/Makefile2:667: CMakeFiles/boost_ep.dir/all] Error 2\r\ngmake[1]: *** Waiting for unfinished jobs....\r\n-- jemalloc_ep download command succeeded.  See also /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786/jemalloc_ep-prefix/src/jemalloc_ep-stamp/jemalloc_ep-download-*.log\r\n[  5%] Performing patch step for 'jemalloc_ep'\r\n[  6%] No update step for 'jemalloc_ep'\r\n[  7%] Performing configure step for 'jemalloc_ep'\r\n-- jemalloc_ep configure command succeeded.  See also /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786/jemalloc_ep-prefix/src/jemalloc_ep-stamp/jemalloc_ep-configure-*.log\r\n[  7%] Performing build step for 'jemalloc_ep'\r\nCMake Error at /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786/jemalloc_ep-prefix/src/jemalloc_ep-stamp/jemalloc_ep-build-RELEASE.cmake:37 (message):\r\n  Command failed: 1\r\n\r\n   '/usr/ccs/bin/make'\r\n\r\n  See also\r\n\r\n    /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786/jemalloc_ep-prefix/src/jemalloc_ep-stamp/jemalloc_ep-build-*.log\r\n\r\n\r\n-- stdout output is:\r\n\r\n-- stderr output is:\r\nmake: Warning: Ignoring DistributedMake -j option\r\nmake: Warning: Ignoring DistributedMake -j option\r\nmake: Fatal error in reader: Makefile, line 4: Unexpected end of line seen\r\nCurrent working directory /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786/jemalloc_ep-prefix/src/jemalloc_ep\r\n\r\nCMake Error at /export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786/jemalloc_ep-prefix/src/jemalloc_ep-stamp/jemalloc_ep-build-RELEASE.cmake:47 (message):\r\n  Stopping after outputting logs.\r\n\r\n\r\ngmake[2]: *** [CMakeFiles/jemalloc_ep.dir/build.make:113: jemalloc_ep-prefix/src/jemalloc_ep-stamp/jemalloc_ep-build] Error 1\r\ngmake[2]: Leaving directory '/export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786'\r\ngmake[1]: *** [CMakeFiles/Makefile2:533: CMakeFiles/jemalloc_ep.dir/all] Error 2\r\ngmake[1]: Leaving directory '/export/home/XFYLR57/Rtemp/RtmpXq9bnS/file15cd68095786'\r\ngmake: *** [Makefile:141: all] Error 2\r\n+ popd\r\n~/arrow.Rcheck/00_pkg_src/arrow\r\n------------------------- NOTE ---------------------------\r\nAfter installation, please run arrow::install_arrow()\r\nfor help installing required runtime libraries\r\n---------------------------------------------------------\r\n```\r\n\r\nThese may be solvable, or (1) we can turn off jemalloc and (2) boost is only required here to build thrift for parquet, but allegedly as of thrift 0.13 boost may not be required? However, these may only be the _first_ failures, not all failures, so solving these may not help. "
        },
        {
            "created_at": "2021-02-04T22:23:05.793Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10734?focusedCommentId=17279212) by Neal Richardson (npr):*\nUpdates:\r\n\r\n- BDR emailed me about the failing `grep`, which means he's trying to get arrow to run on Solaris again. So we may not be fully out of the woods.\n- The recent change to remove boost from parquet had the (I think unrelated) effect of meaning that the boost we require for building Thrift doesn't have to build the libraries, which were what failed before. Between that and turning off jemalloc on solaris (in ARROW-11500) we get a little farther than before (up to ARROW-11501).\n  \n  For future testing: From the diff above, just apply the `quietly <- FALSE` change, and then set the version number to match the most recent nightly build on arrow-r-nightly. Then R CMD build and upload to r-hub, using the non Oracle Developer Studio Solaris builder."
        },
        {
            "created_at": "2021-04-05T21:00:42.693Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10734?focusedCommentId=17315098) by Neal Richardson (npr):*\nThis is done except for CI. I'll make a new issue for that."
        }
    ]
}