{
    "issue": {
        "title": "[Python]\u00a0Support \\0 characters in binary Parquet predicate values",
        "body": "***Note**: This issue was originally created as [ARROW-3391](https://issues.apache.org/jira/browse/ARROW-3391). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nAs we convert the predicate values of a Parquet filter in some intermediate steps to C-style strings, we currently disallow the use of binary and string predicate values that contain `\\0` bytes as they would otherwise result in wrong results.",
        "created_at": "2018-10-01T16:22:47.000Z",
        "updated_at": "2021-02-19T23:28:15.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2020-03-12T10:12:56.406Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3391?focusedCommentId=17057780) by Joris Van den Bossche (jorisvandenbossche):*\n`[~uwe]` What kind of wrong results do you expect?\r\n\r\nI am testing this with the new Datasets API, where we do not have this check for `\\0`, but I also don't directly see wrong behaviour (eg when filtering on equality with `\"a\\0\"` correctly gives an empty table when the partition values are \"a\" and \"b\")"
        },
        {
            "created_at": "2020-03-24T14:09:38.098Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3391?focusedCommentId=17065798) by Uwe Korn (uwe):*\nHave a look at the failing tests in\u00a0<https://github.com/apache/arrow/blob/master/python/pyarrow/tests/test_parquet.py#L1646-L1654>\r\n\r\nMy problem is that I have a binary column with UUIDs (low entropy), there can be a zero-byte at any position inside the ID. When I now filter on this ID, e.g. \"a\\0dfsgjzdsaf\" there were some steps that converted the value to C-style strings and thus in turn to a simple \"a\" instead of the whole identifier."
        },
        {
            "created_at": "2020-03-24T14:59:55.122Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3391?focusedCommentId=17065864) by Joris Van den Bossche (jorisvandenbossche):*\nThanks for the clarification!\r\n\r\nSo for the tests you link to, the expected result is an empty table, right? (since the filter will not find any matching value) \r\n\r\nIf I change the test that way, the tests pass when using the Datasets API (see https://github.com/apache/arrow/pull/6303/commits/0f16f99a84b5f2ec85896d2c78db7eaae71b8b34).\r\n\r\nBut to properly test this, I should maybe also add a table that actually has such values with nulls in the table, to check we can also filter _with_ a match."
        },
        {
            "created_at": "2021-02-19T23:28:15.110Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3391?focusedCommentId=17287420) by Wes McKinney (wesm):*\nWhat is the status of this?"
        }
    ]
}