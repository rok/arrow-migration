{
    "issue": {
        "title": "[Python] Support partition columns when incrementally writing",
        "body": "***Note**: This issue was originally created as [ARROW-3915](https://issues.apache.org/jira/browse/ARROW-3915). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently `partition_cols` support in pyarrow is implemented in: <https://github.com/apache/arrow/blob/69d207ff446c76f78fe27b960e7ebe89a607d992/python/pyarrow/parquet.py#L1205-L1235.>\r\n\r\nHowever, there is no way to easily do column partitioning when writing datasets incrementally via `ParquetWriter`. It would be very helpful if the column partitioning logic was made more modular and re-used in `ParquetWriter`.\r\n\r\nOne option would be to support the `partition_cols` keyword argument in `ParquetWriter.write_table`. However, this would introduce the potential to have inconsistent\u00a0partition columns\u00a0in subsequent files. Perhaps the better approach would be to pass as a kwarg when constructing `ParquetWriter` and manage it as a property whose setter would throw an error if attempting to set while the writer is open.",
        "created_at": "2018-11-30T14:48:40.000Z",
        "updated_at": "2018-12-06T03:24:45.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2018-12-06T03:24:45.000Z"
    },
    "comments": [
        {
            "created_at": "2018-12-02T21:50:40.137Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3915?focusedCommentId=16706488) by Mackenzie (macksweeney):*\nScratch this. I just realized that\u00a0you can actually already do this by repeated calls to `pq.write_to_dataset`. Since the different files written with `partition_cols` option don't overlap in any way, there's no need to keep a file handle open via `ParquetWriter`. Apologies for the noise here \u2013 I'm just getting familiar with the Parquet format at a lower level."
        }
    ]
}