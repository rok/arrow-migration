{
    "issue": {
        "title": "[C++] Implement converter between Arrow record batches and Avro records",
        "body": "***Note**: This issue was originally created as [ARROW-1209](https://issues.apache.org/jira/browse/ARROW-1209). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThis would be useful for streaming systems that need to consume or produce Avro in C/C++",
        "created_at": "2017-07-12T16:05:02.000Z",
        "updated_at": "2021-08-04T08:32:49.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2017-08-29T03:54:04.878Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1209?focusedCommentId=16144701) by Marius van Niekerk (mariusvniekerk):*\nI can take a stab at this.  Most of the work is similar to what i've previously done for cyavro.\n\nIs the intention to make Arrow optionally depend on libavro?"
        },
        {
            "created_at": "2017-08-29T08:25:16.771Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1209?focusedCommentId=16144913) by Uwe Korn (uwe):*\nThis depends on where the code shall live. I guess for a first start, we should develop it inside of Arrow and in the long-term interact with the Avro project and see if we should move it there.\n\nFor a start: yes, the intention is to make Arrow optionally dependent on `libarrow`."
        },
        {
            "created_at": "2017-08-29T14:34:32.328Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1209?focusedCommentId=16145385) by Wes McKinney (wesm):*\nWe should create an `src/arrow/adapters` directory where we can add child libraries for adapting to external data sources. As far as the build system is concerned, we can make each adapter optional, similar to how `libarrow_python` and `libarrow_gpu` are optional. So we can have `libarrow_avro`. It'll probably be simplest to maintain this code in Arrow for the foreseeable future until it isn't changing very much (since Avro isn't releasing as often as Arrow). \n\nFWIW at some point in the next year I'm going to build a `libarrow_sqlite`, `libarrow_postgres`, and some other DB connector child libraries. "
        }
    ]
}