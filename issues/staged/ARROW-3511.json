{
    "issue": {
        "title": "[Gandiva] support input selection vectors for both projector and filter",
        "body": "***Note**: This issue was originally created as [ARROW-3511](https://issues.apache.org/jira/browse/ARROW-3511). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe Gandiva filter module returns a selection vector representing the indices of records (in the batch) that matched the filter. We can connect this to other modules, by passing along this selection vector as an input argument to the downstream projector/filter.\r\n\r\n\u00a0",
        "created_at": "2018-10-14T12:46:40.000Z",
        "updated_at": "2019-03-04T09:01:15.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++ - Gandiva",
            "Type: task"
        ],
        "closed": true,
        "closed_at": "2019-03-04T09:00:35.000Z"
    },
    "comments": [
        {
            "created_at": "2018-10-15T01:44:59.554Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3511?focusedCommentId=16649632) by Francois Saint-Jacques (fsaintjacques):*\nI'm curious to know why gandiva makes primary use of selction vector as opposed to bitmap as is used in arrow."
        },
        {
            "created_at": "2018-10-15T14:20:14.535Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3511?focusedCommentId=16650280) by Wes McKinney (wesm):*\nSelection integer vectors and boolean vectors are complementary; they are frequently used in pandas, and useful since you don't have to scan the boolean vector in order to determine the size of a filtered array. Others can comment further"
        },
        {
            "created_at": "2018-10-15T15:06:52.602Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3511?focusedCommentId=16650341) by Pindikura Ravindra (pravindra):*\nI picked the idea of using selection vectors from dremio. Iterating over a selection vector should be more efficient that iterating over bits in a bitmap, especially when the selectivity is low. but, I haven't benchmarked this.\r\n\r\n\u00a0\r\n\r\n\u00a0"
        },
        {
            "created_at": "2018-10-15T15:12:00.260Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3511?focusedCommentId=16650348) by Wes McKinney (wesm):*\nYes, for low selectivity selections it's also a lot more memory efficient.\r\n\r\nEither way, I see this as part of the \"algebra\" of the compiler. So at some point we can probably augment the algebra and code generation with boolean selections"
        },
        {
            "created_at": "2018-10-15T15:50:57.658Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3511?focusedCommentId=16650392) by Francois Saint-Jacques (fsaintjacques):*\nI understand the difference and tradeoffs, was just curious about the decision on the divergence."
        },
        {
            "created_at": "2019-03-04T09:00:35.249Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3511?focusedCommentId=16783133) by Pindikura Ravindra (pravindra):*\nIssue resolved by pull request 2789\n<https://github.com/apache/arrow/pull/2789>"
        }
    ]
}