{
    "issue": {
        "title": "[Python] Memory leak in pyarrow functions .ipc.serialize_pandas/deserialize_pandas",
        "body": "***Note**: This issue was originally created as [ARROW-7956](https://issues.apache.org/jira/browse/ARROW-7956). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nUsed python version is 3.7.4 (conda distribution)\r\n\r\nOS: Ubunty 18.04\r\n\r\npandas version is\u00a00.24.2\r\n\r\nnumpy version is\u00a01.16.4\r\n\r\n\u00a0\r\n\r\nTo reproduce the issue run the attached script pyarrow_mem_leak_test.py. Also put the attached file loans.parquet to the folder of working directory.\r\n\r\n\u00a0\r\n\r\nAlso the reading and writing to parquet in memory do has memory leaks. To reproduce this run function\u00a0test_parquet_leak() from the attached file\u00a0pyarrow_mem_leak_test.py\r\n\r\nThe memory leak is 100% reproducible.",
        "created_at": "2020-02-27T14:02:42.000Z",
        "updated_at": "2020-04-19T22:55:53.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-04-19T22:55:53.000Z"
    },
    "comments": [
        {
            "created_at": "2020-02-27T17:22:09.658Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7956?focusedCommentId=17046827) by Denis (Vlah):*\nNot reproduced with pyarrow==0.16.0.\r\n\r\nClosing this ticket"
        },
        {
            "created_at": "2020-02-27T17:22:45.915Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7956?focusedCommentId=17046828) by Denis (Vlah):*\nNot reproduced with latest version"
        },
        {
            "created_at": "2020-02-27T18:23:15.207Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7956?focusedCommentId=17046864) by Wes McKinney (wesm):*\nI reopened this as I want to make sure there is an appropriate unit test (or equivalent) for this"
        },
        {
            "created_at": "2020-03-03T15:27:59.387Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7956?focusedCommentId=17050307) by Joris Van den Bossche (jorisvandenbossche):*\nIt seems the object dtype is the trigger. I can reproduce this on 0.15 with the following simplified snippet (without involving a parquet file):\r\n\r\n```python\n\r\nimport pyarrow as pa\r\nimport pandas as pd\r\n\r\ndef test_pyarrow_leak():\r\n    df = pd.DataFrame({'a': np.arange(10000), 'b': [pd.util.testing.rands(5) for _ in range(10000)]})\r\n    for i in range(4000):\r\n        print(f'Iteration {i}')\r\n        df_bytes = pa.ipc.serialize_pandas(df).to_pybytes()\r\n        buf = pa.py_buffer(df_bytes)\r\n        df = pa.ipc.deserialize_pandas(buf)\r\n\r\n    print('End of script')\r\n```"
        },
        {
            "created_at": "2020-03-10T10:13:34.666Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7956?focusedCommentId=17055783) by Joris Van den Bossche (jorisvandenbossche):*\n`[~wesm]` I think this was closed by https://github.com/apache/arrow/pull/6551 ?"
        },
        {
            "created_at": "2020-03-10T13:57:31.001Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7956?focusedCommentId=17055975) by Wes McKinney (wesm):*\nYes, resolved as part of the patch for ARROW-4120"
        }
    ]
}