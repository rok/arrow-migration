{
    "issue": {
        "title": "[Java] TimeStampMilliVector cannot be cast to TimeStampMilliTZVector",
        "body": "***Note**: This issue was originally created as [ARROW-10748](https://issues.apache.org/jira/browse/ARROW-10748). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI tried to leverage `org.apache.arrow.adapter.jdbc.JdbcToArrow.sqlToArrow` to query a Hive table but got the following error message on Timestamp columns. Notice that Date columns works well.\u00a0\r\n\u00a0\r\n\u00a0`java.lang.ClassCastException: java.lang.ClassCastException: org.apache.arrow.vector.TimeStampMilliVector cannot be cast to org.apache.arrow.vector.TimeStampMilliTZVector`",
        "created_at": "2020-11-27T05:03:41.000Z",
        "updated_at": "2020-12-07T07:40:40.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-12-07T06:00:14.000Z"
    },
    "comments": [
        {
            "created_at": "2020-11-27T10:37:19.296Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10748?focusedCommentId=17239615) by Liya Fan (fan_li_ya):*\n`[~dclong]` Thanks for reporting the problem. How about directly using `TimeStampMilliVector`?"
        },
        {
            "created_at": "2020-11-27T20:23:01.795Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10748?focusedCommentId=17239834) by Benjamin Du (dclong):*\nBelow is the (Python) code that I used to query the Hive table. How can I use TimeStampMilliVector instead of TimeStampMilliTZVector?\u00a0\r\n```java\n\r\nconfig = org.apache.arrow.adapter.jdbc.JdbcToArrowConfigBuilder().setAllocator(            org.apache.arrow.memory.RootAllocator(sys.maxsize) \r\n).setTargetBatchSize(-1).build() \r\n\r\nconn = java.sql.DriverManager.getConnection(host, user, pwd) \r\n\r\nvector_schema_root = org.apache.arrow.adapter.jdbc.JdbcToArrow.sqlToArrow( \u00a0 \u00a0        conn.prepareStatement(query).executeQuery(), config \r\n) \r\n\r\npyarrow.jvm.record_batch(vector_schema_root).to_pandas()\n```\r\n\u00a0"
        },
        {
            "created_at": "2020-11-30T02:38:31.365Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10748?focusedCommentId=17240440) by Liya Fan (fan_li_ya):*\n`[~dclong]` Thanks for providing further details. I will try to provide a patch. "
        },
        {
            "created_at": "2020-11-30T04:16:38.145Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10748?focusedCommentId=17240472) by Liya Fan (fan_li_ya):*\nThe reason is that when the calendar/time zone information is present, Arrow type system creates a TimeStampTZMilliVector by default. When the calendar/time zone information is absent, Arrow type system creates a TimeStampMilliVector.\r\nThe JDBC adapter, on the other hand, always creates a consumer for TimeStampTZMilliVector, which causes the ClassCastException.\r\n\r\nI have prepared a PR that should be able to fix this problem. \r\n`[~dclong]` Maybe you can try it with your code. \r\n\r\nBTW, another effort is on-going to enable more flexible conversions between JDBC types and Arrow vector types. Please see http://github.com/apache/arrow/pull/8597/files"
        },
        {
            "created_at": "2020-11-30T22:40:19.773Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10748?focusedCommentId=17241116) by Benjamin Du (dclong):*\n[~fan_li_ya],\r\n\r\nThank you very much for the quick fix and the extra information! The customized mapping of types helps resolve other issues\u00a0https://issues.apache.org/jira/browse/ARROW-10762 that I encountered before.\r\n\r\nI will try your branch to see whether it fix the Timestamp issue.\u00a0"
        },
        {
            "created_at": "2020-12-07T06:00:14.321Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10748?focusedCommentId=17244971) by Micah Kornfield (emkornfield):*\nIssue resolved by pull request 8801\n<https://github.com/apache/arrow/pull/8801>"
        }
    ]
}