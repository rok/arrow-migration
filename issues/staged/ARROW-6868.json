{
    "issue": {
        "title": "[Go] slicing Struct array does not slice child fields",
        "body": "***Note**: This issue was originally created as [ARROW-6868](https://issues.apache.org/jira/browse/ARROW-6868). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCalls to `array.NewSlice()` slice the data for all the types implemented except for Struct type.\r\n\r\n\u00a0\r\n\r\nThe fields of the resulting array don't appear to respect the new length and offset.",
        "created_at": "2019-10-13T17:09:39.000Z",
        "updated_at": "2019-11-15T23:44:35.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Go",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-11-15T23:44:35.000Z"
    },
    "comments": [
        {
            "created_at": "2019-10-13T19:10:27.357Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6868?focusedCommentId=16950422) by Nick Poorman (nickpoorman):*\nI suspect this is why you also get the entire struct array repeatedly printed for each element of a list when you call `arr.String()`\u00a0when `arr` is an\u00a0`arrow.ListOf(arrow.StructOf(fields...)).`"
        },
        {
            "created_at": "2019-10-13T19:21:29.529Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6868?focusedCommentId=16950423) by Nick Poorman (nickpoorman):*\nI've added a failing test case here:\u00a0<https://github.com/nickpoorman/arrow/commit/bf42e02869b3cce18508eb0353d585c293d6e365#diff-21591177cfd97e46d7859d1efbe3bfedR307>"
        },
        {
            "created_at": "2019-11-15T23:44:35.708Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6868?focusedCommentId=16975479) by Neal Richardson (npr):*\nIssue resolved by pull request 5642\n<https://github.com/apache/arrow/pull/5642>"
        }
    ]
}