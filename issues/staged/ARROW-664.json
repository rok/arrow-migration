{
    "issue": {
        "title": "Make C++ Arrow serialization deterministic",
        "body": "***Note**: This issue was originally created as [ARROW-664](https://issues.apache.org/jira/browse/ARROW-664). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIn C++ arrow it can currently occur that uninitialized data created by the builders is written to IPC memory. The goal of this issue is to identify these cases and set the memory to zero.\n\nNote that most of these cases have already been identified by valgrind and fixed in the past.\n\nSome of the considerations and benefits are discussed in this github PR:\nhttps://github.com/apache/arrow/pull/397",
        "created_at": "2017-03-19T23:36:35.000Z",
        "updated_at": "2017-03-20T09:55:07.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2017-03-20T09:55:07.000Z"
    },
    "comments": [
        {
            "created_at": "2017-03-20T01:40:52.507Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-664?focusedCommentId=15932056) by Wes McKinney (wesm):*\n`[~pcmoritz]` independent of the discussion about the standard memory format in the linked PR, I agree that we have an option (perhaps the default and only option) to always zero out memory in the C++ implementation.\n\nFrom a quick scan of the array builders, it appears we are not zeroing the memory for the offsets in `ListBuilder::Resize`.  I don't see anything else at a glance. Seems like this should be reproducible in a test case that fails with some probability (deterministic failure might be difficult because it's UB). "
        },
        {
            "created_at": "2017-03-20T01:42:00.192Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-664?focusedCommentId=15932057) by Wes McKinney (wesm):*\nTo fix this, I recommend adding an option to `arrow::BufferBuilder` at https://github.com/apache/arrow/blob/master/cpp/src/arrow/buffer.h#L163. "
        },
        {
            "created_at": "2017-03-20T02:40:50.056Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-664?focusedCommentId=15932084) by Philipp Moritz (pcmoritz):*\nThanks `[~wesmckinn]`, I created a PR https://github.com/apache/arrow/pull/405\n\nI made zero-initialization the default (it also seems to be the default for the other builders), let me know if you prefer it to be optional. Is there a reason why it is not already done?"
        },
        {
            "created_at": "2017-03-20T02:42:52.889Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-664?focusedCommentId=15932086) by Wes McKinney (wesm):*\nNo, it is simply an oversight. Since we run the unit test suite with valgrind we would have seen this if we had any test cases which examine the padding region. "
        },
        {
            "created_at": "2017-03-20T02:44:13.302Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-664?focusedCommentId=15932087) by Philipp Moritz (pcmoritz):*\nThanks, that makes sense! As a result of the PR, the Ray determinism test pass on the latest Arrow version. So the subset of Arrow we are using seems to be deterministic now."
        },
        {
            "created_at": "2017-03-20T09:55:07.645Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-664?focusedCommentId=15932413) by Uwe Korn (uwe):*\nIssue resolved by pull request 405\n<https://github.com/apache/arrow/pull/405>"
        }
    ]
}