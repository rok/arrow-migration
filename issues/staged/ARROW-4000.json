{
    "issue": {
        "title": "[Python] Error running CSV test_read_options on Windows",
        "body": "***Note**: This issue was originally created as [ARROW-4000](https://issues.apache.org/jira/browse/ARROW-4000). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n`py.test pyarrow -v` crashed at `pyarrow/tests/test_csv.py::test_read_options`.\r\n\r\nerrorlevel was -1073741819, not sure what that means.",
        "created_at": "2018-12-11T20:23:37.000Z",
        "updated_at": "2019-02-08T04:35:48.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-02-08T04:35:48.000Z"
    },
    "comments": [
        {
            "created_at": "2018-12-11T21:39:07.152Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4000?focusedCommentId=16718043) by Antoine Pitrou (apitrou):*\nWhere did you see this? By running the code locally?"
        },
        {
            "created_at": "2018-12-11T22:02:52.584Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4000?focusedCommentId=16718078) by Ben Kietzman (bkietz):*\nYes, I was following the setup described in https://github.com/apache/arrow/blob/master/docs/source/python/development.rst"
        },
        {
            "created_at": "2018-12-11T22:04:17.544Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4000?focusedCommentId=16718081) by Antoine Pitrou (apitrou):*\nHave you Visual Studio installed? Normally, Windows would propose you to debug the crashed process with Visual Studio.\r\n\r\nYou could also install `pytest-faulthandler` (using pip) to get a Python stack trace of the crash."
        },
        {
            "created_at": "2018-12-11T22:05:44.331Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4000?focusedCommentId=16718084) by Antoine Pitrou (apitrou):*\n(PS : -1073741819 is error code 0xc0000005, a.k.a Access Violation)"
        },
        {
            "created_at": "2018-12-11T22:44:57.606Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4000?focusedCommentId=16718119) by Wes McKinney (wesm):*\nCan you post the version of Visual Studio you are using? I haven't run the test suite recently on Windows (I have Visual Studio Community 2017 installed) so can see if I can reproduce the issue"
        },
        {
            "created_at": "2018-12-11T23:32:48.330Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4000?focusedCommentId=16718186) by Ben Kietzman (bkietz):*\nI have Visual Studio installed:\r\n\r\n{\\{Microsoft Visual Studio Community 2017}}\r\n `Version 15.9.3`\r\n `VisualStudio.15.Release/15.9.3+28307.145`\r\n `Microsoft .NET Framework`\r\n `Version 4.7.03056`\r\n `Visual C++ 2017\u00a0\u00a0 00369-60000-00001-AA656`\r\n\r\n\u00a0\r\n\r\nThere was no prompt to debug the crashed process, unfortunately.\r\n\r\npytest-faulthandler yielded [this line](https://github.com/bkietz/arrow/blob/ARROW-694-json-reader/python/pyarrow/tests/test_csv.py#L64):\r\n\r\n`Current thread 0x00000104 (most recent call first):`\r\n `\u00a0 File \"C:\\Users\\Ben Kietzman\repos\\arrow\\python\\pyarrow\tests\test_csv.py\", line 64 in test_read_options`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages_pytest\\python.py\", line 166 in pytest_pyfunc_call`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages\\pluggy\\callers.py\", line 187 in _multicall`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages\\pluggy\\manager.py\", line 61 in <lambda>`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages\\pluggy\\manager.py\", line 67 in _hookexec`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages\\pluggy\\hooks.py\", line 284 in __call__`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages_pytest\\python.py\", line 1438 in runtest`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages_pytest\runner.py\", line 121 in pytest_runtest_call`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages\\pluggy\\callers.py\", line 187 in _multicall`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages\\pluggy\\manager.py\", line 61 in <lambda>`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages\\pluggy\\manager.py\", line 67 in _hookexec`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages\\pluggy\\hooks.py\", line 284 in __call__`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages_pytest\runner.py\", line 193 in <lambda>`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages_pytest\runner.py\", line 211 in __init__`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages_pytest\runner.py\", line 195 in call_runtest_hook`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages_pytest\runner.py\", line 171 in call_and_report`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages_pytest\runner.py\", line 91 in runtestprotocol`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages_pytest\runner.py\", line 76 in pytest_runtest_protocol`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages\\pluggy\\callers.py\", line 187 in _multicall`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages\\pluggy\\manager.py\", line 61 in <lambda>`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages\\pluggy\\manager.py\", line 67 in _hookexec`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages\\pluggy\\hooks.py\", line 284 in __call__`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages_pytest\\main.py\", line 246 in pytest_runtestloop`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages\\pluggy\\callers.py\", line 187 in _multicall`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages\\pluggy\\manager.py\", line 61 in <lambda>`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages\\pluggy\\manager.py\", line 67 in _hookexec`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages\\pluggy\\hooks.py\", line 284 in __call__`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages_pytest\\main.py\", line 225 in _main`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages_pytest\\main.py\", line 185 in wrap_session`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages_pytest\\main.py\", line 218 in pytest_cmdline_main`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages\\pluggy\\callers.py\", line 187 in _multicall`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages\\pluggy\\manager.py\", line 61 in <lambda>`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages\\pluggy\\manager.py\", line 67 in _hookexec`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages\\pluggy\\hooks.py\", line 284 in __call__`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\lib\\site-packages_pytest\\config__init__.py\", line 77 in main`\r\n `\u00a0 File \"C:\tools\\miniconda3\\envs\\pyarrow-dev-3.6\\Scripts\\py.test-script.py\", line 10 in <module>`\r\n\r\n\u00a0"
        },
        {
            "created_at": "2018-12-11T23:35:51.837Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4000?focusedCommentId=16718190) by Antoine Pitrou (apitrou):*\nI think you should still be able to debug the executable from Visual Studio (by pointing it at the Python executable). Example steps here:\r\nhttps://stackoverflow.com/questions/15097610/debugging-an-executable-in-visual-studio\r\n\r\nYou'll have to customize the execution to pass the right command-line arguments, e.g. `python -m pytest (etc.)`"
        },
        {
            "created_at": "2018-12-12T19:23:47.328Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4000?focusedCommentId=16719334) by Ben Kietzman (bkietz):*\nFor the next person who comes along, to attach to the test before it starts: (from the VS developer command prompt)\r\n\r\n`python -c \"import os; import subprocess; subprocess.call(['VsJITDebugger.exe', '-p', str(os.getpid())]); import pytest; pytest.main(['pyarrow/tests/test_csv.py', '-v'])\"`\r\n\r\nI had to rebuild _csv.pyd with debug symbols before this worked. This can be done without switching to a full debug build by rebuilding in RelWithDebInfo configuration (`cmake --build build\temp.win-amd64-3.6\\Release --config relwithdebinfo`), then copying the new pyd to `python\\pyarrow`.\r\n\r\nI got a closer look at the exception, which originates in `__pyx_pf_7pyarrow_4_csv_11ReadOptions___init__` (cython-generated c++ corresponding to [_csv.pyx:62](https://github.com/apache/arrow/blob/master/python/pyarrow/_csv.pyx#L62)):\r\n\r\n`Exception thrown: read access violation.**__imp_arrow::csv::ReadOptions::Defaults**(...) returned 0xFFFFFFFFFFFFFFFF. occurred`\r\n\r\n... I'm not a cython expert, but this doesn't make sense; ReadOptions is just a POD struct so I don't see how ReadOptions::Defaults() is generating a segfault."
        },
        {
            "created_at": "2018-12-12T19:28:10.804Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4000?focusedCommentId=16719339) by Antoine Pitrou (apitrou):*\nDoes Visual Studio give you a line number into the Cython-generated C++ file? (`_csv.cpp`)\r\nCan you paste the relevant C++ snippet somewhere?"
        },
        {
            "created_at": "2018-12-12T19:34:29.971Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4000?focusedCommentId=16719345) by Ben Kietzman (bkietz):*\nHere's the generated code, crash at call to ReadOptions::Defaults():\r\n\r\n```Java\n\r\nstatic int __pyx_pf_7pyarrow_4_csv_11ReadOptions___init__(struct __pyx_obj_7pyarrow_4_csv_ReadOptions *__pyx_v_self, PyObject *__pyx_v_use_threads, PyObject *__pyx_v_block_size) {\r\n  int __pyx_r;\r\n  __Pyx_RefNannyDeclarations\r\n  int __pyx_t_1;\r\n  int __pyx_t_2;\r\n  __Pyx_RefNannySetupContext(\"__init__\", 0);\r\n\r\n  /* \"pyarrow/_csv.pyx\":62\r\n * \r\n *     def __init__(self, use_threads=None, block_size=None):\r\n *         self.options = CCSVReadOptions.Defaults()             # <<<<<<<<<<<<<<\r\n *         if use_threads is not None:\r\n *             self.use_threads = use_threads\r\n */\r\n  __pyx_v_self->options =  arrow::csv::ReadOptions::Defaults();\r\n\r\n  /* \"pyarrow/_csv.pyx\":63\r\n *     def __init__(self, use_threads=None, block_size=None):\r\n *         self.options = CCSVReadOptions.Defaults()\r\n *         if use_threads is not None:             # <<<<<<<<<<<<<<\r\n *             self.use_threads = use_threads\r\n *         if block_size is not None:\r\n */\r\n```"
        },
        {
            "created_at": "2018-12-12T19:40:34.325Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4000?focusedCommentId=16719352) by Antoine Pitrou (apitrou):*\nPerhaps looking at the assembly code might give a hint, though it may be a mysterious issue..."
        },
        {
            "created_at": "2018-12-12T20:05:27.650Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4000?focusedCommentId=16719387) by Ben Kietzman (bkietz):*\nHere's the assembly corresponding to that line:\r\n```cpp\n\r\n\u00a0 __pyx_v_self->options =\u00a0 arrow::csv::ReadOptions::Defaults();\r\n00007FFB6A897F23\u00a0 lea\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 rcx,[rsp+3Ch] \u00a0\r\n00007FFB6A897F28\u00a0 call\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 qword ptr [__imp_arrow::csv::ReadOptions::Defaults (07FFB6A8B01A8h)] \u00a0\r\n00007FFB6A897F2E\u00a0 mov\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 rax,qword ptr [rax] \u00a0         ;crashes here\r\n00007FFB6A897F31\u00a0 mov\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 rcx,qword ptr [__pyx_v_self] \u00a0\r\n00007FFB6A897F36\u00a0 mov\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 qword ptr [rcx+10h],rax \u00a0\r\n```\r\n\r\nAnd the assembly corresponding to Defaults():\r\n```cpp\n\r\nReadOptions ReadOptions::Defaults() { return ReadOptions(); }\r\n00007FFB618A1AC0  mov         qword ptr [rsp+8],0  \r\n00007FFB618A1AC9  mov         byte ptr [rsp+8],1  \r\n00007FFB618A1ACE  mov         dword ptr [rsp+0Ch],100000h  \r\n00007FFB618A1AD6  mov         rax,qword ptr [rsp+8] \r\n```"
        },
        {
            "created_at": "2018-12-12T21:22:21.011Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4000?focusedCommentId=16719448) by Antoine Pitrou (apitrou):*\nI'm not an expert, but the `mov         rax,qword ptr [rax]` line looks incorrect. Are you using the same compiler version and flags for the C++ and Python builds?"
        },
        {
            "created_at": "2018-12-12T21:32:06.178Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4000?focusedCommentId=16719465) by Antoine Pitrou (apitrou):*\nOk, it might be something simpler. Can you make sure you install your currently built Arrow C++ so that Cython finds the up-to-date `csv/options.h`? I'm willing to bet that a change in that file changed the ABI, but you didn't install the newest version..."
        },
        {
            "created_at": "2018-12-13T02:08:42.583Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4000?focusedCommentId=16719661) by Wes McKinney (wesm):*\nI tried building from source following the instructions at https://github.com/apache/arrow/blob/master/docs/source/python/development.rst#developing-on-windows. The tests ran fine for me. My conda environment is a few months old but I doubt a thirdparty library would be causing this"
        },
        {
            "created_at": "2018-12-13T15:38:23.717Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4000?focusedCommentId=16720313) by Ben Kietzman (bkietz):*\nI'm using the same compiler version and flags for all builds, and both cpp and python modules were built/installed using the same git commit.\r\n\r\nI'll try merging up and see if I can still reproduce this"
        },
        {
            "created_at": "2018-12-13T15:50:49.075Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4000?focusedCommentId=16720329) by Wes McKinney (wesm):*\nLastly make sure you don't have the \"pyarrow\" or \"arrow-cpp\" packages installed if you are using the conda toolchain"
        },
        {
            "created_at": "2019-02-08T04:35:48.162Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4000?focusedCommentId=16763294) by Wes McKinney (wesm):*\nHaven't seen this issue on MSVC myself. Closing until we have a reproducible recipe"
        }
    ]
}