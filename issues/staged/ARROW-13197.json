{
    "issue": {
        "title": "[C++] Optimize ArrayBuilder::AppendScalar",
        "body": "***Note**: This issue was originally created as [ARROW-13197](https://issues.apache.org/jira/browse/ARROW-13197). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n> Hmm, it looks like the implementation could be more optimized. When appending multiple scalars (or multiple times the same scalars), the required space could be reserved. Also, at least for primitive types, I would expect appending multiple scalars to be much more streamlined than this.\n> \n> (it looks like such optimizations could be crafted more easily if `AppendScalar` was a bunch of virtual methods?)\r\n\r\nFrom https://github.com/apache/arrow/pull/10579#issuecomment-869731284\r\n\r\nAlso, dictionary scalars aren't supported. You could imagine both appending a dictionary scalar to a regular builder (decoding the value) and appending a dictionary or regular scalar to a dictionary builder (encoding the value as necessary).",
        "created_at": "2021-06-28T14:32:09.000Z",
        "updated_at": "2021-06-28T14:32:27.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": []
}