{
    "issue": {
        "title": "[C++] [R] Sanitizer nightly, on `as_datetime()` test",
        "body": "***Note**: This issue was originally created as [ARROW-16298](https://issues.apache.org/jira/browse/ARROW-16298). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWe're seeing a sanitizer error in the test for `as_datetime()`\r\n\r\n\r\nhttps://dev.azure.com/ursacomputing/crossbow/_build/results?buildId=23894&view=logs&j=0da5d1d9-276d-5173-c4c4-9d4d4ed14fdb&t=d9b15392-e4ce-5e4c-0c8c-b69645229181&l=10007\r\n```Java\n\r\nStart test: `as_datetime()`\r\n/usr/include/c++/10/ext/new_allocator.h:150:4: runtime error: load of value 2084644819, which is not a valid value for type 'Ambiguous'\r\n    #0 0x7fe940f2ee78 in void __gnu_cxx::new_allocator<arrow::compute::AssumeTimezoneOptions>::construct<arrow::compute::AssumeTimezoneOptions, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, arrow::compute::AssumeTimezoneOptions::Ambiguous&, arrow::compute::AssumeTimezoneOptions::Nonexistent&>(arrow::compute::AssumeTimezoneOptions*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, arrow::compute::AssumeTimezoneOptions::Ambiguous&, arrow::compute::AssumeTimezoneOptions::Nonexistent&) /usr/include/c++/10/ext/new_allocator.h:150\r\n    #1 0x7fe940f281be in void std::allocator_traits<std::allocator<arrow::compute::AssumeTimezoneOptions> >::construct<arrow::compute::AssumeTimezoneOptions, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, arrow::compute::AssumeTimezoneOptions::Ambiguous&, arrow::compute::AssumeTimezoneOptions::Nonexistent&>(std::allocator<arrow::compute::AssumeTimezoneOptions>&, arrow::compute::AssumeTimezoneOptions*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, arrow::compute::AssumeTimezoneOptions::Ambiguous&, arrow::compute::AssumeTimezoneOptions::Nonexistent&) /usr/include/c++/10/bits/alloc_traits.h:512\r\n    #2 0x7fe940f1a98f in std::_Sp_counted_ptr_inplace<arrow::compute::AssumeTimezoneOptions, std::allocator<arrow::compute::AssumeTimezoneOptions>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, arrow::compute::AssumeTimezoneOptions::Ambiguous&, arrow::compute::AssumeTimezoneOptions::Nonexistent&>(std::allocator<arrow::compute::AssumeTimezoneOptions>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, arrow::compute::AssumeTimezoneOptions::Ambiguous&, arrow::compute::AssumeTimezoneOptions::Nonexistent&) /usr/include/c++/10/bits/shared_ptr_base.h:551\r\n    #3 0x7fe940f07418 in std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<arrow::compute::AssumeTimezoneOptions, std::allocator<arrow::compute::AssumeTimezoneOptions>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, arrow::compute::AssumeTimezoneOptions::Ambiguous&, arrow::compute::AssumeTimezoneOptions::Nonexistent&>(arrow::compute::AssumeTimezoneOptions*&, std::_Sp_alloc_shared_tag<std::allocator<arrow::compute::AssumeTimezoneOptions> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, arrow::compute::AssumeTimezoneOptions::Ambiguous&, arrow::compute::AssumeTimezoneOptions::Nonexistent&) /usr/include/c++/10/bits/shared_ptr_base.h:682\r\n    #4 0x7fe940efb43d in std::__shared_ptr<arrow::compute::AssumeTimezoneOptions, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<arrow::compute::AssumeTimezoneOptions>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, arrow::compute::AssumeTimezoneOptions::Ambiguous&, arrow::compute::AssumeTimezoneOptions::Nonexistent&>(std::_Sp_alloc_shared_tag<std::allocator<arrow::compute::AssumeTimezoneOptions> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, arrow::compute::AssumeTimezoneOptions::Ambiguous&, arrow::compute::AssumeTimezoneOptions::Nonexistent&) /usr/include/c++/10/bits/shared_ptr_base.h:1371\r\n    #5 0x7fe940ef3259 in std::shared_ptr<arrow::compute::AssumeTimezoneOptions>::shared_ptr<std::allocator<arrow::compute::AssumeTimezoneOptions>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, arrow::compute::AssumeTimezoneOptions::Ambiguous&, arrow::compute::AssumeTimezoneOptions::Nonexistent&>(std::_Sp_alloc_shared_tag<std::allocator<arrow::compute::AssumeTimezoneOptions> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, arrow::compute::AssumeTimezoneOptions::Ambiguous&, arrow::compute::AssumeTimezoneOptions::Nonexistent&) /usr/include/c++/10/bits/shared_ptr.h:408\r\n    #6 0x7fe940eeb2e9 in std::shared_ptr<arrow::compute::AssumeTimezoneOptions> std::allocate_shared<arrow::compute::AssumeTimezoneOptions, std::allocator<arrow::compute::AssumeTimezoneOptions>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, arrow::compute::AssumeTimezoneOptions::Ambiguous&, arrow::compute::AssumeTimezoneOptions::Nonexistent&>(std::allocator<arrow::compute::AssumeTimezoneOptions> const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, arrow::compute::AssumeTimezoneOptions::Ambiguous&, arrow::compute::AssumeTimezoneOptions::Nonexistent&) (/usr/local/RDsan/lib/R/site-library/arrow/libs/arrow.so+0x1d5672e9)\r\n    #7 0x7fe940edfe79 in std::shared_ptr<arrow::compute::AssumeTimezoneOptions> std::make_shared<arrow::compute::AssumeTimezoneOptions, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, arrow::compute::AssumeTimezoneOptions::Ambiguous&, arrow::compute::AssumeTimezoneOptions::Nonexistent&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, arrow::compute::AssumeTimezoneOptions::Ambiguous&, arrow::compute::AssumeTimezoneOptions::Nonexistent&) /usr/include/c++/10/bits/shared_ptr.h:876\r\n    #8 0x7fe940ec76fc in make_compute_options(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, cpp11::r_vector<SEXPREC*>) /tmp/RtmpimXBIq/R.INSTALL14ad3d70aebb/arrow/src/compute.cpp:406\r\n    #9 0x7fe940ff80ba in compute___expr__call(std::__cxx11::bas\r\n```\r\n\r\nLikely this is in C++ and was there before this PR was merged, but this is the first thing to test it.",
        "created_at": "2022-04-23T20:33:40.000Z",
        "updated_at": "2022-04-25T12:37:24.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-04-25T12:37:24.000Z"
    },
    "comments": []
}