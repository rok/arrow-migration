{
    "issue": {
        "title": "[Rust] IPC writers shouldn't implicitly finish on drop",
        "body": "***Note**: This issue was originally created as [ARROW-11718](https://issues.apache.org/jira/browse/ARROW-11718). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe Rust IPC writer types have a destructor that automatically writes the footer if necessary. This is not ideal, though, since it can hide errors. For example, if a web server is streaming data to a client in the Arrow IPC format and it encounters an internal error trying to generate the next batch, the outbound stream will appear valid to the client as the footer will automatically be written out but some amount of data will actually be missing. If the footer was not automatically written, the client would properly detect the truncation.\r\n\r\nFor reference, the C++ implementation does not attempt to write the footer implicitly on drop.",
        "created_at": "2021-02-20T17:58:51.000Z",
        "updated_at": "2021-03-11T16:25:16.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-02-24T13:33:09.000Z"
    },
    "comments": [
        {
            "created_at": "2021-02-24T13:33:09.265Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11718?focusedCommentId=17289923) by Neville Dipale (nevi_me):*\nIssue resolved by pull request 9536\n<https://github.com/apache/arrow/pull/9536>"
        }
    ]
}