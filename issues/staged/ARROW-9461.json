{
    "issue": {
        "title": "[Rust] Reading Date32 and Date64 errors - they are incorrectly converted to RecordBatch",
        "body": "***Note**: This issue was originally created as [ARROW-9461](https://issues.apache.org/jira/browse/ARROW-9461). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSteps to reproduce:\r\n\r\n1. Create a file `a.parquet` using the following code:\r\n\r\n\r\n```python\n\r\nimport pyarrow.parquet\r\nimport numpy\r\n\r\n\r\ndef _data_datetime(f):\r\n    data = numpy.array([\r\n        numpy.datetime64('2018-08-18 23:25'),\r\n        numpy.datetime64('2019-08-18 23:25'),\r\n        numpy.datetime64(\"NaT\")\r\n    ])\r\n    data = numpy.array(data, dtype=f'datetime64[{f}]')\r\n    return data\r\n\r\ndef _write_parquet(path, data):\r\n    table = pyarrow.Table.from_arrays([pyarrow.array(data)], names=['a'])\r\n    pyarrow.parquet.write_table(table, path)\r\n    return path\r\n\r\n\r\n_write_parquet('a.parquet', _data_datetime('D'))\r\n```\r\n\r\n2. Write a small example to read it to RecordBatches\r\n\r\n3. observe the error `ArrowError(ParquetError(\"InvalidArgumentError(\\\"column types must match schema types, expected Date32(Day) but found UInt32 at column index 0\\\")\"))`\r\n\r\n\r\n\r\n",
        "created_at": "2020-07-14T11:56:11.000Z",
        "updated_at": "2020-07-18T21:05:04.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-07-18T21:04:58.000Z"
    },
    "comments": [
        {
            "created_at": "2020-07-18T21:04:58.779Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9461?focusedCommentId=17160544) by Chao Sun (csun):*\nIssue resolved by pull request 7751\n<https://github.com/apache/arrow/pull/7751>"
        }
    ]
}