{
    "issue": {
        "title": "[Python] pyarrow.NULL equals to itself",
        "body": "***Note**: This issue was originally created as [ARROW-6488](https://issues.apache.org/jira/browse/ARROW-6488). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSomewhat related to ARROW-6386 on the interpretation of nulls, we currently have the following behaviour:\r\n\r\n```Java\n\r\nIn [28]: pa.NULL == pa.NULL                                                                                                                                                                                        \r\nOut[28]: True\r\n```\r\n\r\nWhich I think is certainly unexpected for a null / missing value. I still need to check what the array-level compare kernel does (NULL or False? ideally NULL I think), but we should follow that.",
        "created_at": "2019-09-08T19:43:41.000Z",
        "updated_at": "2019-09-12T23:06:58.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-09-12T23:06:45.000Z"
    },
    "comments": [
        {
            "created_at": "2019-09-08T19:44:16.687Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6488?focusedCommentId=16925238) by Joris Van den Bossche (jorisvandenbossche):*\nThanks `[~jbrockmendel]` for noticing!"
        },
        {
            "created_at": "2019-09-09T12:21:31.012Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6488?focusedCommentId=16925636) by Joris Van den Bossche (jorisvandenbossche):*\nOn C++ this gives NULL, will do a PR to align the python scalar behaviour."
        },
        {
            "created_at": "2019-09-12T23:06:45.855Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6488?focusedCommentId=16928927) by Wes McKinney (wesm):*\nIssue resolved by pull request 5330\n<https://github.com/apache/arrow/pull/5330>"
        }
    ]
}