{
    "issue": {
        "title": "parquet link undefined reference to base64_encode(), unpack32(), etc",
        "body": "***Note**: This issue was originally created as [ARROW-15500](https://issues.apache.org/jira/browse/ARROW-15500). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI'm trying to build on ubuntu 20.04, using vcpkg master latest, both gcc-9 and gcc-10 latest, cmake 3.22.1. I can build and link Arrow in a small test program and write a csv. When I try to build with parquet I get several link-time errors. Here is the first full linker error:\r\n\r\n/usr/bin/ld: /home/ryans/src/vcpkg/installed/x64-linux/lib/libparquet.a(writer.cc.o): in function `parquet::arrow::GetSchemaMetadata(arrow::Schema const&, arrow::MemoryPool\\*, parquet::ArrowWriterProperties const&, std::shared_ptr<arrow::KeyValueMetadata const>\\*) [clone .localalias]':\r\nwriter.cc:(.text+0x179): undefined reference to `arrow::util::base64_encode[abi:cxx11](nonstd::sv_lite::basic_string_view<char, std::char_traits<char> >)'\r\n\r\nHere are snippets from the rest:\r\n\r\nundefined reference to `arrow::internal::unpack32(unsigned int const\\*, unsigned int\\*, int, int)'\r\n\r\nundefined reference to `arrow::internal::unpack64(unsigned char const\\*, unsigned long\\*, int, int)'\r\n\r\nundefined reference to `arrow::io::BufferedInputStream::Create(long, arrow::MemoryPool\\*, std::shared_ptr<arrow::io::InputStream>, long)'\r\n\r\nundefined reference to `arrow::util::base64_decode[abi:cxx11](nonstd::sv_lite::basic_string_view<char, std::char_traits<char> >)'\r\n\r\nI have tried vcpkg tag 2022.01.01 (I think it is Arrow 6.0.0) and looked like the same set of undefined symbols.",
        "created_at": "2022-01-29T00:59:43.000Z",
        "updated_at": "2022-02-06T20:48:36.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Parquet",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-02-06T20:48:36.000Z"
    },
    "comments": [
        {
            "created_at": "2022-01-29T17:51:39.862Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15500?focusedCommentId=17484206) by Ryan Seghers (ryans113):*\nI get a different set of link errors when I set _GLIBCXX_USE_CXX11_ABI=0, including:\r\n\r\n/usr/bin/ld: CMakeFiles/ryans_main.dir/main.cpp.o: in function `tryParquet()':\r\nmain.cpp:(.text+0x120f8): undefined reference to `arrow::field(std::string, std::shared_ptr<arrow::DataType>, bool, std::shared_ptr<arrow::KeyValueMetadata const>)'\r\n\r\n/usr/bin/ld: main.cpp:(.text+0x12597): undefined reference to `arrow::io::FileOutputStream::Open(std::string const&, bool)'\r\n\r\netc."
        },
        {
            "created_at": "2022-01-31T14:01:00.925Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15500?focusedCommentId=17484700) by Antoine Pitrou (apitrou):*\nThis looks a bit weird. How is your test program compiled and linked? Can you post your CMakeLists.txt?"
        },
        {
            "created_at": "2022-02-03T15:47:58.609Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15500?focusedCommentId=17486556) by Ryan Seghers (ryans113):*\nThe root cause was giving libarrow.a to the linker before libparquet.a. The dependent one must come first (because the linker drops unreferenced symbols and it hasn't seen the references to the symbols yet if not), and libparquet.a depends on libarrow.a.\r\n\r\nThe vcpkg usage for arrow lists the libraries in the wrong order. Here is the usage that vcpkg prints when you install arrow:\r\n\r\n\u00a0 \u00a0 find_package(Arrow CONFIG REQUIRED)\r\n\u00a0 \u00a0 target_link_libraries(main PRIVATE ${ARROW_LIBRARIES})\r\n\r\n\u00a0 \u00a0 find_package(Parquet CONFIG REQUIRED)\r\n\u00a0 \u00a0 target_link_libraries(main PRIVATE ${PARQUET_LIBRARIES})\r\n\r\nThe parquet lib needs to come before the arrow lib. So I believe this is basically a doc bug, where the order should be reversed in vcpkg repo in ports/arrow/usage."
        },
        {
            "created_at": "2022-02-03T17:47:06.983Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15500?focusedCommentId=17486629) by Antoine Pitrou (apitrou):*\nHmm... so this should be filed as an issue against vcpkg, right?"
        },
        {
            "created_at": "2022-02-06T20:48:36.903Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15500?focusedCommentId=17487762) by Ryan Seghers (ryans113):*\nThis is a vcpkg issue."
        }
    ]
}