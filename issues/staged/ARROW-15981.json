{
    "issue": {
        "title": "[C++][Doc] Better explain chunk_size in Parquet WriteTable api",
        "body": "***Note**: This issue was originally created as [ARROW-15981](https://issues.apache.org/jira/browse/ARROW-15981). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nFor the Parquet WriteTable api in C++, it has a parameter called \"chunk_size\" with no explanation in doc. I further dive into the code related to \"chunk_size\". It seems that it is indeed the size of parquet::arrow::WriteColumnChunk. But each time before calling WriteColumnChunk a new row group will also be created. \r\n\r\nSo in summary, the real written row group size = min(chunk_size, max_row_group_size). When chunk_size < max_row_group_size, the real row group size is equal to chunk_size. This is a little confusing from the user's perspective. In the Python binding, row_group_size actually directly passed to chunk_size. Perhaps add more descriptions to chunk_size in doc to describe the behavior above.",
        "created_at": "2022-03-19T14:31:34.000Z",
        "updated_at": "2022-03-21T16:30:29.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Parquet",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": []
}