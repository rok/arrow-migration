{
    "issue": {
        "title": "[C++] Support scripts / documentation for running clang-tidy on codebase",
        "body": "***Note**: This issue was originally created as [ARROW-2981](https://issues.apache.org/jira/browse/ARROW-2981). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nRelated to ARROW-2952, ARROW-2980",
        "created_at": "2018-08-04T15:44:53.000Z",
        "updated_at": "2019-06-14T15:14:40.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-06-14T15:14:40.000Z"
    },
    "comments": [
        {
            "created_at": "2018-08-10T11:36:24.018Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2981?focusedCommentId=16576144) by Francois Saint-Jacques (fsaintjacques):*\nThere's a lot of warning in the actual clang-tidy script, should we fix all of them?\r\n\r\n\r\n```Java\n\r\n      1 [google-global-names-in-headers]\r\n      1 [readability-redundant-member-init]\r\n      2 [google-readability-braces-around-statements]\r\n      2 [modernize-use-bool-literals]\r\n      3 [readability-non-const-parameter]\r\n      6 [modernize-redundant-void-arg]\r\n      7 [readability-inconsistent-declaration-parameter-name]\r\n      9 [modernize-deprecated-headers]\r\n     10 [modernize-use-auto]\r\n     11 [google-readability-namespace-comments]\r\n     13 [readability-simplify-boolean-expr]\r\n     41 [modernize-use-noexcept]\r\n     53 [readability-implicit-bool-conversion]\r\n     75 [google-default-arguments]\r\n     76 [clang-diagnostic-error]\r\n     76 [clang-diagnostic-unused-command-line-argument]\r\n     82 [readability-braces-around-statements]\r\n     97 [modernize-use-using]\r\n    100 [modernize-use-override]\r\n    107 [modernize-use-default-member-init]\r\n    110 [google-readability-todo]\r\n    159 [google-explicit-constructor]\r\n    167 [readability-else-after-return]\r\n    205 [modernize-use-nullptr]\r\n    296 [readability-named-parameter]\r\n    391 [modernize-use-equals-default]\r\n    442 [modernize-use-equals-delete]\r\n    617 [google-runtime-references]\r\n   1047 [readability-avoid-const-params-in-decls]\r\n```\r\n"
        },
        {
            "created_at": "2018-11-14T22:35:23.176Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2981?focusedCommentId=16687238) by Wes McKinney (wesm):*\nProbably not all of them, but many of them yes"
        },
        {
            "created_at": "2019-03-29T20:05:50.205Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2981?focusedCommentId=16805410) by Wes McKinney (wesm):*\nIt seems the first step on this would be to add a docker-compose endpoint, and then we can decide which warnings we want to disable"
        },
        {
            "created_at": "2019-05-13T15:14:03.932Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2981?focusedCommentId=16838613) by Ben Kietzman (bkietz):*\n`[~wesmckinn]` `[~fsaintjacques]` Currently, `docker-compose run format` modifies source in place. Is this the intended behavior for that service, and is that the behavior we want for the clang-tidy? Alternatively, do we just want to emit warnings/errors and leave the source unmodified?"
        },
        {
            "created_at": "2019-05-13T15:25:59.285Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2981?focusedCommentId=16838624) by Uwe Korn (uwe):*\n`[~bkietz]` This is the indented behaviour. We also have a check-format command in CMake but not yet exposed via docker-compose."
        },
        {
            "created_at": "2019-06-14T15:14:40.519Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2981?focusedCommentId=16864176) by Francois Saint-Jacques (fsaintjacques):*\nIssue resolved by pull request 4293\n<https://github.com/apache/arrow/pull/4293>"
        }
    ]
}