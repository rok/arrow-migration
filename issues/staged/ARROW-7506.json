{
    "issue": {
        "title": "[Java] JMH benchmarks should be called from main methods",
        "body": "***Note**: This issue was originally created as [ARROW-7506](https://issues.apache.org/jira/browse/ARROW-7506). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSome benchmarks are called as unit tests in our current code base. They should be called from main methods, because:\r\n\r\n1. This is the recommended way of writing JMH benchmarks. The automatically generated benchmarks are called from main, and sample benchmarks provided by JMH [1] are also called from main.\r\n\r\n2. Some compiler does not support calling JMH as unit test. For example, the \"javac with error prone\" reports the following error:\r\n\r\nError:(100, 15) java: [JUnit4TearDownNotRun] tearDown() method will not be run; please add JUnit's @After annotation\r\n    (see https://errorprone.info/bugpattern/JUnit4TearDownNotRun)\r\n  Did you mean '@After'?\r\n\r\n3. When run as a unit test, enable assert flag will be turned on by default, so some test/debug operations will be performed. This will distort the benchmark result data. For example, a related discussion can be found in [2].\r\n\r\n[1] https://hg.openjdk.java.net/code-tools/jmh/file/tip/jmh-samples/src/main/java/org/openjdk/jmh/samples/\r\n[2] https://github.com/apache/arrow/pull/5842#issuecomment-558082914",
        "created_at": "2020-01-07T07:16:10.000Z",
        "updated_at": "2020-01-10T08:44:05.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-01-10T08:44:05.000Z"
    },
    "comments": [
        {
            "created_at": "2020-01-10T08:44:05.301Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7506?focusedCommentId=17012576) by Micah Kornfield (emkornfield@gmail.com):*\nIssue resolved by pull request 6132\n<https://github.com/apache/arrow/pull/6132>"
        }
    ]
}