{
    "issue": {
        "title": "[Python] Parquet segfaults if coercing ns timestamps and writing 96-bit timestamps",
        "body": "***Note**: This issue was originally created as [ARROW-2020](https://issues.apache.org/jira/browse/ARROW-2020). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIf you try to write a PyArrow table containing nanosecond-resolution timestamps to Parquet using `coerce_timestamps` and `use_deprecated_int96_timestamps=True`, the Arrow library will segfault.\r\n\r\nThe crash doesn't happen if you don't coerce the timestamp resolution or if you don't use 96-bit timestamps.\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n**To Reproduce:**\r\n\r\n\u00a0\r\n```java\n\r\n\u00a0\r\nimport datetime\r\n\r\nimport pyarrow\r\nfrom pyarrow import parquet\r\n\r\nschema = pyarrow.schema([\r\n    pyarrow.field('last_updated', pyarrow.timestamp('ns')),\r\n])\r\n\r\ndata = [\r\n    pyarrow.array([datetime.datetime.now()], pyarrow.timestamp('ns')),\r\n]\r\n\r\ntable = pyarrow.Table.from_arrays(data, ['last_updated'])\r\n\r\nwith open('test_file.parquet', 'wb') as fdesc:\r\n    parquet.write_table(table, fdesc,\r\n                        coerce_timestamps='us',  # 'ms' works too\r\n                        use_deprecated_int96_timestamps=True)\n```\r\n\u00a0\r\n\r\nSee attached file for the crash report.\r\n\r\n\u00a0",
        "created_at": "2018-01-24T02:53:17.000Z",
        "updated_at": "2018-04-17T22:17:31.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2018-04-17T19:21:45.000Z"
    },
    "comments": [
        {
            "created_at": "2018-02-25T17:44:50.994Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2020?focusedCommentId=16376169) by Wes McKinney (wesm):*\n`[~cpcloud]` or `[~xhochy]` are you able to take a look at this?"
        },
        {
            "created_at": "2018-02-27T15:12:43.357Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2020?focusedCommentId=16378745) by Antoine Pitrou (apitrou):*\nThis seems to have been fixed by changeset [4a8a102d508fc31570584b3618291103a901e6b0](https://github.com/apache/arrow/commit/4a8a102d508fc31570584b3618291103a901e6b0) (ARROW-969)."
        },
        {
            "created_at": "2018-02-27T16:53:48.727Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2020?focusedCommentId=16378934) by Uwe Korn (uwe):*\n`[~pitrou]` The changeset looks unrelated. On master I still get the segementation fault."
        },
        {
            "created_at": "2018-03-01T15:02:53.274Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2020?focusedCommentId=16382116) by Antoine Pitrou (apitrou):*\nOk. Here the changeset does \"fix\" the crash somehow, but it still produces bogus results.\r\n\r\nThis issue might be related to ARROW-2026, in that when you pass `coerce_timestamps`, `write_table` seems to save the timestamps as int64 rather than int96."
        },
        {
            "created_at": "2018-03-12T03:47:42.237Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2020?focusedCommentId=16394786) by Wes McKinney (wesm):*\nMoving this off 0.9.0"
        },
        {
            "created_at": "2018-04-17T19:21:10.385Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2020?focusedCommentId=16441365) by Joshua Storck (joshuastorck):*\nThis is a duplicate of ARROW-2082, which is resolve with\u00a0[this PR](https://github.com/apache/parquet-cpp/pull/456). `[~wesmckinn]` or `[~cpcloud]`, could you please mark this as a duplicate? I don't seem to have permissions."
        },
        {
            "created_at": "2018-04-17T22:17:31.732Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2020?focusedCommentId=16441589) by Antoine Pitrou (apitrou):*\nWell apparently you do :-)"
        }
    ]
}