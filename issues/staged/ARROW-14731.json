{
    "issue": {
        "title": "[C++][Compute] Conversion to unsigned types can be problematic for negative numbers",
        "body": "***Note**: This issue was originally created as [ARROW-14731](https://issues.apache.org/jira/browse/ARROW-14731). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nOn line 248 of https://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/kernels/scalar_arithmetic.cc int16 type is converted to uint32 type because overflows are better handled in uint32 than in int32 This will be problematic if some of the numbers are negative. It may be better to use th default int32 and explicitly check for overflows if needed.",
        "created_at": "2021-11-17T08:10:54.000Z",
        "updated_at": "2021-12-23T05:38:44.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-12-23T05:38:44.000Z"
    },
    "comments": [
        {
            "created_at": "2021-12-01T01:48:22.393Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14731?focusedCommentId=17451464) by Weston Pace (westonpace):*\nCan this be closed?  `[~baksmj]`"
        },
        {
            "created_at": "2021-12-23T05:38:12.395Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14731?focusedCommentId=17464299) by Benson Muite (baksmj):*\nBehavior is consistent with rest of implementation. One can use functions that check for overflows."
        }
    ]
}