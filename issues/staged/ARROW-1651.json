{
    "issue": {
        "title": "[JS] Lazy row accessor in Table",
        "body": "***Note**: This issue was originally created as [ARROW-1651](https://issues.apache.org/jira/browse/ARROW-1651). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nRight now the `Table` class has a `*rows` function for grabbing a series of rows, but the only available formats for the returned data are an Array and an Object for each row, which contain the value from every column.\n\nIt would be useful to have the option to yield some kind of lazy accessor for each row, so that end users can only access the columns they are actually using. This would have caching benefits, and save us from doing dictionary lookups and/or string decodes on unused columns.\n\nI'm not sure exactly what form this accessor would take. Perhaps a function that accepts a column name/index? Or an array with a function for each column? Or maybe there's some other new JS pattern that could accomplish this.",
        "created_at": "2017-10-05T15:19:44.000Z",
        "updated_at": "2017-11-03T21:47:43.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: JavaScript",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2017-11-03T21:47:43.000Z"
    },
    "comments": [
        {
            "created_at": "2017-11-03T21:47:43.562Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1651?focusedCommentId=16238442) by Wes McKinney (wesm):*\nResolved by PR https://github.com/apache/arrow/commit/527af63cde4ac1df53e82d6f8ced064738f5c1a3"
        }
    ]
}