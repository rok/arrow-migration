{
    "issue": {
        "title": "[RUST] Avoid cloning ArrayData in several places",
        "body": "***Note**: This issue was originally created as [ARROW-9916](https://issues.apache.org/jira/browse/ARROW-9916). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI noticed this while benchmarking improvements in ARROW-9895. A flamegraph showed a significant amount of time spent in Arc::clone/atomic_add followed by Arc::drop/atomic_sub\r\n\r\n The Array trait has two methods for accessing ArrayData, `.data()` which clones an `Arc<ArrayData>` and `.data_ref()` which only borrows the data. In many places borrow can be used instead of clone.\r\n",
        "created_at": "2020-09-04T16:17:14.000Z",
        "updated_at": "2020-09-05T17:03:47.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-09-05T17:03:37.000Z"
    },
    "comments": [
        {
            "created_at": "2020-09-05T17:03:37.215Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9916?focusedCommentId=17191098) by Andy Grove (andygrove):*\nIssue resolved by pull request 8113\n<https://github.com/apache/arrow/pull/8113>"
        }
    ]
}