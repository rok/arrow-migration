{
    "issue": {
        "title": "[C++] Clarify what signatures are preferred for compute kernels",
        "body": "***Note**: This issue was originally created as [ARROW-6959](https://issues.apache.org/jira/browse/ARROW-6959). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nMany of the compute kernels feature functions which accept only array inputs in addition to functions which accept Datums. The former seems implicitly like a convenience wrapper around the latter but I don't think this is explicit anywhere. Is there a preferred overload for bindings to use? Is it preferred that C++ implementers provide convenience wrappers for different permutations of argument type? (for example, Filter now provides an overload for record batch input as well as array input)",
        "created_at": "2019-10-21T21:03:18.000Z",
        "updated_at": "2020-05-25T19:47:06.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-05-25T19:47:06.000Z"
    },
    "comments": [
        {
            "created_at": "2020-05-25T19:47:06.946Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6959?focusedCommentId=17116214) by Wes McKinney (wesm):*\nThis is addressed by the new `arrow::compute::CallFunction` API"
        }
    ]
}