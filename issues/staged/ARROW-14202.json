{
    "issue": {
        "title": "[C++] A more RAM-efficient top-k sink node",
        "body": "***Note**: This issue was originally created as [ARROW-14202](https://issues.apache.org/jira/browse/ARROW-14202). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nMentioned here:\r\n\r\nhttps://github.com/apache/arrow/pull/11274#pullrequestreview-768267959\r\n\r\nFor example, a top-k implementation could periodically (when batches_ has some configurable # of rows) run through and discard data. The way it is written now it would still require me to buffer the entire dataset in memory (and/or spillover).\r\n\r\n\u00a0\r\n\r\n\u00a0",
        "created_at": "2021-10-01T20:25:11.000Z",
        "updated_at": "2022-09-23T16:50:22.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-09-23T16:50:22.383Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14202?focusedCommentId=17608846) by @toddfarmer:*\nThis issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned per [project policy](https://arrow.apache.org/docs/dev/developers/bug_reports.html#issue-assignment). Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon."
        }
    ]
}