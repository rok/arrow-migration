{
    "issue": {
        "title": "[C++] ArrayBuilders with mutable type are not robustly supported",
        "body": "***Note**: This issue was originally created as [ARROW-5935](https://issues.apache.org/jira/browse/ARROW-5935). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n(Dense|Sparse)UnionBuilder, DictionaryBuilder, Addaptive(U)IntBuilders and any nested builder which contains one of those may Finish to an array whose type disagrees with what was passed to MakeBuilder. This is not well documented or supported; ListBuilder checks if its child has changed type but StructBuilder does not. Furthermore ListBuilder's check does not catch modifications to a DictionaryBuidler's type and results in an invalid array on Finish: https://github.com/apache/arrow/blob/1bcfbe1/cpp/src/arrow/array-dict-test.cc#L951-L994\r\n\r\nLet's add to the ArrayBuilder contract: the type property is null iff that builder's type is indeterminate until Finish() is called. Then all nested builders can check this on their children at construction and bubble type mutability correclty",
        "created_at": "2019-07-12T20:38:29.000Z",
        "updated_at": "2019-09-20T21:53:53.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-09-19T17:23:06.000Z"
    },
    "comments": [
        {
            "created_at": "2019-09-19T17:23:06.697Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5935?focusedCommentId=16933603) by Neal Richardson (npr):*\nIssue resolved by pull request 4930\n<https://github.com/apache/arrow/pull/4930>"
        }
    ]
}