{
    "issue": {
        "title": "[Rust] Debug implementation of Date32Array panics if array contains negative values",
        "body": "***Note**: This issue was originally created as [ARROW-11845](https://issues.apache.org/jira/browse/ARROW-11845). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nAttempting to print `Date32Array`s (and probably all Date/Time/Timestamp array types) using Rust's debug print format macro (`println!(\"\\{:?}\", date_32_array\")`) causes a panic, as shown in the minimum reproducible example below:\r\n\r\n\u00a0\r\n\r\n**Invocation:**\r\n\r\n\u00a0\r\n```java\n\r\nfn date32_print_panic() {        \r\n    let mut date_32_builder = Date32Builder::new(1);\r\n    date_32_builder.append_value(-50).unwrap();\r\n    let date_32_array = date_32_builder.finish();\r\n    println!(\"{:?}\", date_32_array);\r\n}\r\n```\r\n\u00a0\r\n\r\n**Result:**\r\n```\n\r\nPrimitiveArray<Date32>\r\n[\r\nthread 'demo::tests::date32_print_panic' panicked at 'called `Option::unwrap()` on a `None` value', /home/.../rust/arrow/src/array/array_primitive.rs:226:54\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n```",
        "created_at": "2021-03-02T22:16:30.000Z",
        "updated_at": "2021-03-10T16:40:00.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-03-05T21:55:54.000Z"
    },
    "comments": [
        {
            "created_at": "2021-03-05T21:55:54.064Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11845?focusedCommentId=17296354) by Andrew Lamb (alamb):*\nIssue resolved by pull request 9624\n<https://github.com/apache/arrow/pull/9624>"
        }
    ]
}