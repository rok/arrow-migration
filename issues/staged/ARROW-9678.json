{
    "issue": {
        "title": "[Rust] [DataFusion] Improve projection push down to remove unused columns",
        "body": "***Note**: This issue was originally created as [ARROW-9678](https://issues.apache.org/jira/browse/ARROW-9678). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently, the projection push down only removes columns that are never referenced in the plan. However, sometimes a projection declares columns that themselves are never used.\r\n\r\nThis issue is about improving the projection push-down to remove any column that is not logically required by the plan.\r\n\r\nFailing unit-test with the idea:\r\n\r\n```java\n\r\n    #[test]\r\n    fn table_unused_column() -> Result<()> {\r\n        let table_scan = test_table_scan()?;\r\n        assert_eq!(3, table_scan.schema().fields().len());\r\n        assert_fields_eq(&table_scan, vec![\"a\", \"b\", \"c\"]);\r\n\r\n        // we never use \"b\" in the first projection => remove it\r\n        let plan = LogicalPlanBuilder::from(&table_scan)\r\n            .project(vec![col(\"c\"), col(\"a\"), col(\"b\")])?\r\n            .filter(col(\"c\").gt(&lit(1)))?\r\n            .project(vec![col(\"c\"), col(\"a\")])?\r\n            .build()?;\r\n\r\n        assert_fields_eq(&plan, vec![\"c\", \"a\"]);\r\n\r\n        let expected = \"\\\r\n        Projection: #c, #a\\\r\n        \\n  Selection: #c Gt Int32(1)\\\r\n        \\n    Projection: #c, #a\\\r\n        \\n      TableScan: test projection=Some([0, 2])\";\r\n\r\n        assert_optimized_plan_eq(&plan, expected);\r\n\r\n        Ok(())\r\n    }\r\n```\r\n\r\nThis issue was firstly identified by `[~andygrove]` [here](https://github.com/ballista-compute/ballista/issues/320).\r\n",
        "created_at": "2020-08-09T16:45:33.000Z",
        "updated_at": "2020-08-22T17:01:16.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Component: Rust - DataFusion",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-08-22T16:41:50.000Z"
    },
    "comments": [
        {
            "created_at": "2020-08-22T16:41:50.464Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9678?focusedCommentId=17182425) by Andy Grove (andygrove):*\nIssue resolved by pull request 7919\n<https://github.com/apache/arrow/pull/7919>"
        }
    ]
}