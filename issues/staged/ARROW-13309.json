{
    "issue": {
        "title": "[C++] Implement hash_aggregate exact quantile kernel",
        "body": "***Note**: This issue was originally created as [ARROW-13309](https://issues.apache.org/jira/browse/ARROW-13309). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nRequires ARROW-12759.\r\n\r\nWe have a scalar aggregate kernel for this already and hopefully the implementation can be reused.\r\n\r\nAlso create a pair of kernels `median()` and `hash_median()` that wrap this for convenient use by bindings (like in ARROW-14052).",
        "created_at": "2021-07-12T14:30:56.000Z",
        "updated_at": "2022-07-04T17:41:30.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-07-12T15:31:31.548Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13309?focusedCommentId=17379230) by David Li (lidavidm):*\nThis is kind of tricky right now since we'll have to keep all the data materialized somewhere. The equivalent scalar aggregate kernel is actually a vector kernel and hence sidesteps this."
        },
        {
            "created_at": "2021-08-01T19:29:11.052Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13309?focusedCommentId=17391230) by Ian Cook (icook):*\nIt's common for distributed query engines to have _approximate_\u00a0quantile functions. I believe Spark and Impala\u00a0have _only_\u00a0approximate quantile functions, no exact versions. Some others like Hive have both, but with limitations on the exact version (for example in Hive I believe it only works on integer data.) I think it would be wise for us to implement an approximate version first:\u00a0ARROW-13520."
        },
        {
            "created_at": "2021-08-26T13:35:17.923Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13309?focusedCommentId=17405229) by Ian Cook (icook):*\n`[~lidavidm]` \u00a0does the exact hash_quantile kernel seem doable for 6.0.0? I'm asking not to apply pressure but because we need to know for the R bindings. Thanks!"
        },
        {
            "created_at": "2021-08-26T13:40:13.052Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13309?focusedCommentId=17405230) by David Li (lidavidm):*\n`[~icook]` I think if we want to have one, we certainly can, but we'd be accumulating all data in-memory until we figure out a design for spilling to disk. That may be fine? I would only worry about potentially wasting work if we come up with a drastically different design for spilling to disk.\r\n\r\nAnd we'd want to refactor the scalar aggregate to actually be a scalar aggregate kernel again (right now it is actually a vector function and hence not usable in an aggregation)."
        },
        {
            "created_at": "2021-08-26T13:56:32.469Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13309?focusedCommentId=17405240) by Ian Cook (icook):*\n`[~lidavidm]` \u00a0thanks, I think it's fine to wait for now, I do not think this needs to take precedence over other work"
        }
    ]
}