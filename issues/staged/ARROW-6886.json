{
    "issue": {
        "title": "[C++] arrow::io header nvcc compiler warnings",
        "body": "***Note**: This issue was originally created as [ARROW-6886](https://issues.apache.org/jira/browse/ARROW-6886). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSeeing the following compiler warnings statically linking the arrow::io headers with nvcc:\r\n\r\n```\n\r\narrow/install/include/arrow/io/file.h(189): warning: overloaded virtual function \"arrow::io::Writable::Write\" is only partially overridden in class \"arrow::io::MemoryMappedFile\"\r\n\r\narrow/install/include/arrow/io/memory.h(98): warning: overloaded virtual function \"arrow::io::Writable::Write\" is only partially overridden in class \"arrow::io::MockOutputStream\"\r\n\r\narrow/install/include/arrow/io/memory.h(116): warning: overloaded virtual function \"arrow::io::Writable::Write\" is only partially overridden in class \"arrow::io::FixedSizeBufferWriter\"\r\n\r\narrow/install/include/arrow/io/file.h(189): warning: overloaded virtual function \"arrow::io::Writable::Write\" is only partially overridden in class \"arrow::io::MemoryMappedFile\"\r\n\r\narrow/install/include/arrow/io/memory.h(98): warning: overloaded virtual function \"arrow::io::Writable::Write\" is only partially overridden in class \"arrow::io::MockOutputStream\"\r\n\r\narrow/install/include/arrow/io/memory.h(116): warning: overloaded virtual function \"arrow::io::Writable::Write\" is only partially overridden in class \"arrow::io::FixedSizeBufferWriter\"\r\n\r\narrow/install/include/arrow/io/file.h(189): warning: overloaded virtual function \"arrow::io::Writable::Write\" is only partially overridden in class \"arrow::io::MemoryMappedFile\"\r\n\r\narrow/install/include/arrow/io/memory.h(98): warning: overloaded virtual function \"arrow::io::Writable::Write\" is only partially overridden in class \"arrow::io::MockOutputStream\"\r\n\r\narrow/install/include/arrow/io/memory.h(116): warning: overloaded virtual function \"arrow::io::Writable::Write\" is only partially overridden in class \"arrow::io::FixedSizeBufferWriter\"\r\n```\r\n",
        "created_at": "2019-10-14T22:52:19.000Z",
        "updated_at": "2019-10-17T15:48:37.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-10-17T13:44:08.000Z"
    },
    "comments": [
        {
            "created_at": "2019-10-16T17:55:29.391Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6886?focusedCommentId=16953054) by Antoine Pitrou (apitrou):*\nAre you using your own compiler options?"
        },
        {
            "created_at": "2019-10-16T17:55:54.312Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6886?focusedCommentId=16953055) by Antoine Pitrou (apitrou):*\nNote this is a benign warning, still you can submit a PR if you want to fix it."
        },
        {
            "created_at": "2019-10-16T20:40:22.561Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6886?focusedCommentId=16953183) by Paul Taylor (paul.e.taylor):*\n`[~apitrou]` Yeah this warning is benign, but the team is moving towards a zero-tolerance policy for compilation warnings. I'm looking into a fix now, hopefully can have a PR ready in time for 0.15.1.\r\n\r\nThese headers are included by some of our cuda files, so here's the full command as generated by cmake:\r\n\r\n```\n\r\n/usr/local/cuda-10.0/bin/nvcc \r\n -DARROW_METADATA_V4\r\n -Dcudf_EXPORTS\r\n -Igoogletest/install/include\r\n -Iinclude\r\n -I../include\r\n -I../src\r\n -I../thirdparty/cub\r\n -I../thirdparty/jitify\r\n -I../thirdparty/libcudacxx/include\r\n -Iarrow/install/include\r\n -Iarrow/build/flatbuffers_ep-prefix/src/flatbuffers_ep-install/include\r\n -I/home/ptaylor/dev/rapids/compose/etc/conda/envs/rapids/include  \r\n -gencode arch=compute_75,code=sm_75\r\n -gencode arch=compute_75,code=compute_75\r\n --expt-extended-lambda\r\n --expt-relaxed-constexpr\r\n -Werror cross-execution-space-call\r\n -Xcompiler\r\n -Wall,-Werror\r\n --define-macro HT_LEGACY_ALLOCATOR\r\n -O3\r\n -DNDEBUG\r\n -Xcompiler=-fPIC  \r\n -DJITIFY_USE_CACHE\r\n -DCUDF_VERSION=0.11.0\r\n -std=c++14\r\n -x cu\r\n -x cuda\r\n -c /home/ptaylor/dev/rapids/cudf/cpp/src/io/avro/avro_reader_impl.cu\r\n -o CMakeFiles/cudf.dir/src/io/avro/avro_reader_impl.cu.o && /usr/local/cuda-10.0/bin/nvcc \r\n -DARROW_METADATA_V4\r\n -Dcudf_EXPORTS\r\n -Igoogletest/install/include\r\n -Iinclude\r\n -I../include\r\n -I../src\r\n -I../thirdparty/cub\r\n -I../thirdparty/jitify\r\n -I../thirdparty/libcudacxx/include\r\n -Iarrow/install/include\r\n -Iarrow/build/flatbuffers_ep-prefix/src/flatbuffers_ep-install/include\r\n -I/home/ptaylor/dev/rapids/compose/etc/conda/envs/rapids/include  \r\n -gencode arch=compute_75,code=sm_75\r\n -gencode arch=compute_75,code=compute_75\r\n --expt-extended-lambda\r\n --expt-relaxed-constexpr\r\n -Werror cross-execution-space-call\r\n -Xcompiler\r\n -Wall,-Werror\r\n --define-macro HT_LEGACY_ALLOCATOR\r\n -O3\r\n -DNDEBUG\r\n -Xcompiler=-fPIC  \r\n -DJITIFY_USE_CACHE\r\n -DCUDF_VERSION=0.11.0\r\n -std=c++14\r\n -x cu\r\n -x cuda\r\n -M /home/ptaylor/dev/rapids/cudf/cpp/src/io/avro/avro_reader_impl.cu\r\n -MT CMakeFiles/cudf.dir/src/io/avro/avro_reader_impl.cu.o\r\n -o $DEP_FILE\r\n```\r\n"
        },
        {
            "created_at": "2019-10-17T13:44:08.178Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6886?focusedCommentId=16953750) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 5677\n<https://github.com/apache/arrow/pull/5677>"
        },
        {
            "created_at": "2019-10-17T15:28:55.254Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6886?focusedCommentId=16953851) by Uwe Korn (uwe):*\n[~paul.e.taylor]\u00a0If you don't want warnings from third-party libs to annoy in your build, you should use `-isystem` instead of `-I` to reference the includes."
        },
        {
            "created_at": "2019-10-17T15:48:37.249Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6886?focusedCommentId=16953865) by Wes McKinney (wesm):*\nYes I also recommend using `-isystem`. You shouldn't have having to deal with compiler warnings coming from third party libraries"
        }
    ]
}