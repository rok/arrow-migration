{
    "issue": {
        "title": "0-row table can be written but not read",
        "body": "***Note**: This issue was originally created as [ARROW-5353](https://issues.apache.org/jira/browse/ARROW-5353). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI can serialize a table with 0 rows, but not read it. The following code\r\n```Java\n\r\nimport pandas as pd\r\nimport pyarrow as pa\r\n\r\ndf = pd.DataFrame({'x': [0,1,2]})[:0]\r\nfnm = \"tbl.arr\"\r\n\r\ntbl = pa.Table.from_pandas(df)\r\nprint(tbl.schema)\r\n\r\nwriter = pa.RecordBatchStreamWriter(fnm, tbl.schema)\r\nwriter.write_table(tbl)\r\n\r\nreader = pa.RecordBatchStreamReader(fnm)\r\ntbl2 = reader.read_all()\r\n```\r\n...results in the following output:\r\n```Java\n\r\nx: int64\r\nmetadata\r\n--------\r\nOrderedDict([(b'pandas',\r\n              b'{\"index_columns\": [{\"kind\": \"range\", \"name\": null, \"start\": '\r\n              b'0, \"stop\": 0, \"step\": 1}], \"column_indexes\": [{\"name\": null,'\r\n              b' \"field_name\": null, \"pandas_type\": \"unicode\", \"numpy_type\":'\r\n              b' \"object\", \"metadata\": {\"encoding\": \"UTF-8\"}}], \"columns\": ['\r\n              b'{\"name\": \"x\", \"field_name\": \"x\", \"pandas_type\": \"int64\", \"nu'\r\n              b'mpy_type\": \"int64\", \"metadata\": null}], \"creator\": {\"library'\r\n              b'\": \"pyarrow\", \"version\": \"0.13.0\"}, \"pandas_version\": null}')])\r\n---------------------------------------------------------------------------\r\nArrowInvalid                              Traceback (most recent call last)\r\n<ipython-input-3-8869ad9b37c6> in <module>\r\n     11 writer.write_table(tbl)\r\n     12 \r\n---> 13 reader = pa.RecordBatchStreamReader(fnm)\r\n     14 tbl2 = reader.read_all()\r\n\r\n~/anaconda/envs/grapy/lib/python3.6/site-packages/pyarrow/ipc.py in __init__(self, source)\r\n     56     \"\"\"\r\n     57     def __init__(self, source):\r\n---> 58         self._open(source)\r\n     59 \r\n     60 \r\n\r\n~/anaconda/envs/grapy/lib/python3.6/site-packages/pyarrow/ipc.pxi in pyarrow.lib._RecordBatchStreamReader._open()\r\n\r\n~/anaconda/envs/grapy/lib/python3.6/site-packages/pyarrow/error.pxi in pyarrow.lib.check_status()\r\n\r\nArrowInvalid: Expected schema message in stream, was null or length 0\r\n```\r\nSince the schema should be sufficient to build a table, even though it may not have any actual data, I wouldn't expect this to fail but return the same 0-row input table.\r\n\r\n\u00a0",
        "created_at": "2019-05-16T17:17:06.000Z",
        "updated_at": "2019-05-16T17:20:04.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-05-16T17:20:04.000Z"
    },
    "comments": [
        {
            "created_at": "2019-05-16T17:20:04.804Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5353?focusedCommentId=16841556) by Thomas Buhrmann (buhrmann):*\nOops, sorry! Not a bug. Forgot to close the writer in the example code!"
        }
    ]
}