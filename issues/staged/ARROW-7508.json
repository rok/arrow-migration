{
    "issue": {
        "title": "[C#] DateTime32 Reading is Broken",
        "body": "***Note**: This issue was originally created as [ARROW-7508](https://issues.apache.org/jira/browse/ARROW-7508). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nDateTime support for writing works - but reading is broken.\r\n\r\nThis is another arithmetic overflow bug (reported a few already) which is causing date to be misinterpreted\r\n\r\n\u00a0I extracted the current logic out to linqpad and to show the bug and fix:\r\n\r\n\u00a0\r\n```java\n\r\n\tvar dto = DateTimeOffset.Parse(\"2024-09-25\");\r\n\t(dto.ToUnixTimeMilliseconds() / 86400000).Dump();\r\n\t// YIELDS: 19991\r\n\t\r\n\tunchecked  (current code)\r\n\t{\r\n\t\tDateTimeOffset.FromUnixTimeMilliseconds(19991 * 86400000).Dump();\r\n\t\t// 1/8/1970 WRONG\r\n\t}\t\r\n\r\n        checked\r\n\t{\r\n\t\tDateTimeOffset.FromUnixTimeMilliseconds((long)19991 * 86400000).Dump();\r\n\t\t// 9/25/2024 CORRECT\r\n\t} \n```\r\n\u00a0\r\n\r\n\u00a0\r\n\r\nthis fix is trivial - a cast to long is missing where ever **FromUnixTimeMilliseconds** is used\r\n\r\n\u00a0\r\n\r\n\u00a0",
        "created_at": "2020-01-07T16:30:34.000Z",
        "updated_at": "2020-01-21T19:56:26.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C#",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-01-21T19:56:26.000Z"
    },
    "comments": [
        {
            "created_at": "2020-01-21T19:56:26.985Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7508?focusedCommentId=17020528) by Eric Erhardt (eerhardt):*\nIssue resolved by pull request 6136\n<https://github.com/apache/arrow/pull/6136>"
        }
    ]
}