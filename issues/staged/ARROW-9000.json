{
    "issue": {
        "title": "[Java] build crashes with JDK14",
        "body": "***Note**: This issue was originally created as [ARROW-9000](https://issues.apache.org/jira/browse/ARROW-9000). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrent master tree does not build with JDK14. The issue seems to be caused by error prone plugin:\r\n```\n\r\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.6.2:compile (default-compile) on project arrow-memory: Compilation failure\r\n[ERROR] /Users/laurent/devel/arrow/java/memory/src/main/java/org/apache/arrow/memory/BufferLedger.java:[545,15] error: An unhandled exception was thrown by the Error Prone static analysis plugin.\r\n[ERROR]      Please report this at https://github.com/google/error-prone/issues/new and include the following:\r\n[ERROR]   \r\n[ERROR]      error-prone version: 2.3.3\r\n[ERROR]      BugPattern: TypeParameterUnusedInFormals\r\n[ERROR]      Stack Trace:\r\n[ERROR]      java.lang.NoSuchFieldError: bound\r\n[ERROR]   \tat com.google.errorprone.bugpatterns.TypeParameterUnusedInFormals.matchMethod(TypeParameterUnusedInFormals.java:71)\r\n[ERROR]   \tat com.google.errorprone.scanner.ErrorProneScanner.processMatchers(ErrorProneScanner.java:433)\r\n[ERROR]   \tat com.google.errorprone.scanner.ErrorProneScanner.visitMethod(ErrorProneScanner.java:725)\r\n[ERROR]   \tat com.google.errorprone.scanner.ErrorProneScanner.visitMethod(ErrorProneScanner.java:150)\r\n[ERROR]   \tat jdk.compiler/com.sun.tools.javac.tree.JCTree$JCMethodDecl.accept(JCTree.java:916)\r\n[ERROR]   \tat jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)\r\n[ERROR]   \tat com.google.errorprone.scanner.Scanner.scan(Scanner.java:71)\r\n[ERROR]   \tat com.google.errorprone.scanner.Scanner.scan(Scanner.java:45)\r\n[ERROR]   \tat jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:90)\r\n[ERROR]   \tat jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)\r\n[ERROR]   \tat jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)\r\n[ERROR]   \tat jdk.compiler/com.sun.source.util.TreeScanner.visitClass(TreeScanner.java:187)\r\n[ERROR]   \tat com.google.errorprone.scanner.ErrorProneScanner.visitClass(ErrorProneScanner.java:535)\r\n[ERROR]   \tat com.google.errorprone.scanner.ErrorProneScanner.visitClass(ErrorProneScanner.java:150)\r\n[ERROR]   \tat jdk.compiler/com.sun.tools.javac.tree.JCTree$JCClassDecl.accept(JCTree.java:823)\r\n[ERROR]   \tat jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:82)\r\n[ERROR]   \tat com.google.errorprone.scanner.Scanner.scan(Scanner.java:71)\r\n[ERROR]   \tat com.google.errorprone.scanner.Scanner.scan(Scanner.java:45)\r\n[ERROR]   \tat jdk.compiler/com.sun.source.util.TreeScanner.scan(TreeScanner.java:105)\r\n[ERROR]   \tat jdk.compiler/com.sun.source.util.TreeScanner.scanAndReduce(TreeScanner.java:113)\r\n[ERROR]   \tat jdk.compiler/com.sun.source.util.TreeScanner.visitCompilationUnit(TreeScanner.java:144)\r\n[ERROR]   \tat com.google.errorprone.scanner.ErrorProneScanner.visitCompilationUnit(ErrorProneScanner.java:546)\r\n[ERROR]   \tat com.google.errorprone.scanner.ErrorProneScanner.visitCompilationUnit(ErrorProneScanner.java:150)\r\n[ERROR]   \tat jdk.compiler/com.sun.tools.javac.tree.JCTree$JCCompilationUnit.accept(JCTree.java:603)\r\n[ERROR]   \tat jdk.compiler/com.sun.source.util.TreePathScanner.scan(TreePathScanner.java:56)\r\n[ERROR]   \tat com.google.errorprone.scanner.Scanner.scan(Scanner.java:55)\r\n[ERROR]   \tat com.google.errorprone.scanner.ErrorProneScannerTransformer.apply(ErrorProneScannerTransformer.java:43)\r\n[ERROR]   \tat com.google.errorprone.ErrorProneAnalyzer.finished(ErrorProneAnalyzer.java:151)\r\n[ERROR]   \tat jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)\r\n[ERROR]   \tat jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1423)\r\n[ERROR]   \tat jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1370)\r\n[ERROR]   \tat jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:959)\r\n[ERROR]   \tat jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:316)\r\n[ERROR]   \tat jdk.compiler/com.sun.tools.javac.main.Main.compile(Main.java:176)\r\n[ERROR]   \tat jdk.compiler/com.sun.tools.javac.Main.compile(Main.java:57)\r\n[ERROR]   \tat jdk.compiler/com.sun.tools.javac.Main.main(Main.java:43)\r\n[ERROR] \r\n[ERROR] -> [Help 1]\r\n[ERROR] \r\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\r\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\r\n[ERROR] \r\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\r\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\r\n[ERROR] \r\n[ERROR] After correcting the problems, you can resume the build with the command\r\n[ERROR]   mvn <args> -rf :arrow-memory\r\n```\r\n\r\nLatest version of errorprone is compatible with JDK14 so it should be as simple as upgrading the plugin version",
        "created_at": "2020-06-01T17:53:32.000Z",
        "updated_at": "2020-07-14T12:11:39.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-06-02T06:13:53.000Z"
    },
    "comments": []
}