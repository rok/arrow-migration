{
    "issue": {
        "title": "[C#] ArrowStreamReader doesn't consume whole stream and doesn't implement sync read",
        "body": "***Note**: This issue was originally created as [ARROW-4997](https://issues.apache.org/jira/browse/ARROW-4997). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThere are 2 major issues with the ArrowStreamReader that are blocking me from using it.\r\n1. When it reads a batch from a .NET Stream that doesn't return the whole chunk of memory in one \"Read\" call (like a socket/network stream), it only calls Read once, and then continues on. This is an issue because it has \"garbage\" at the end of its buffer (which was never written to by the stream), and\u00a0when attempting to read the next batch, it is in the middle of the previous batch from the .NET Stream. This causes all sorts of issues because it assumes the next 4 bytes are the message length,\u00a0which it obviously isn't. See\u00a0[the reading code](https://github.com/apache/arrow/blob/13fd813445b4738cbebbd137490fe3c02071c04b/csharp/src/Apache.Arrow/Ipc/ArrowStreamReaderImplementation.cs#L90-L97) for where it only calls Read once - it should be in a loop.\n1. ArrowStreamReader has a synchronous ReadNextRecordBatch() method - but it throws NotImplementedException. This is necessary when a caller isn't in an async method, they can't/shouldn't call the async API.",
        "created_at": "2019-03-22T11:53:44.000Z",
        "updated_at": "2019-03-22T21:31:19.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C#",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-03-22T21:25:57.000Z"
    },
    "comments": [
        {
            "created_at": "2019-03-22T16:42:09.569Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4997?focusedCommentId=16799169) by Eric Erhardt (eerhardt):*\n`[~wesmckinn]`, `[~xhochy]`, `[~kou]` - this is a pretty major\u00a0issue in the C# library that is blocking usage of\u00a0the Arrow C# library over a network stream. I have a\u00a0[PR](https://github.com/apache/arrow/pull/4017) up to fix it that has been approved by Stephen Toub. I'm hoping this PR can be merged for the 0.13 release, as\u00a0it is super important for our usages."
        },
        {
            "created_at": "2019-03-22T21:25:58.025Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4997?focusedCommentId=16799368) by Kouhei Sutou (kou):*\nIssue resolved by pull request 4017\n<https://github.com/apache/arrow/pull/4017>"
        },
        {
            "created_at": "2019-03-22T21:31:19.032Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4997?focusedCommentId=16799370) by Kouhei Sutou (kou):*\nThanks! I've merged."
        }
    ]
}