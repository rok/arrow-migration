{
    "issue": {
        "title": "[Java] Make JniWrapper native method be public",
        "body": "***Note**: This issue was originally created as [ARROW-4819](https://issues.apache.org/jira/browse/ARROW-4819). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe goal is to integrate Gandiva into apache Drill project. Now drill and arrow has some differences at the column in memory representation. Drill has a 2.0 plan to integrate arrow. Now I want to do some prior work to integrate arrow lib into drill project. The first thing is to make JniWrapper's package level methods be public ones. Maybe we can rename this classes as UnsafeJniWrapper like java's Unsafe class to allow others to invoke these methods directly.\r\n\r\nSo what's your opinion about this advice ? If ok , I will submit a corresponding PR.",
        "created_at": "2019-03-11T06:17:07.000Z",
        "updated_at": "2019-03-12T09:31:58.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2019-03-11T08:04:42.388Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4819?focusedCommentId=16789265) by Praveen Kumar (praveenbingo):*\nHi,\r\n\r\nThanks for trying this out.\r\n\r\nCouple questions\r\n1. Is this a temporary solution until Drill moves to Arrow completely? If yes can this change reside in a private fork?\n1. If not - then another solution would be have another JNI layer probably living in Drill that invokes the Gandiva C++ library directly.\n1. I am a bit hesitant to make these methods public as it breaks the encapsulation we had for the java binding layer..\n   \n   If you are planning to pass in drill value vector buffers to the Gandiva execution layer, the runtime behavior might be unexpected since we assume arrow buffer format in a lot of places for e.g. decimal to be always 16 bytes in little endian format etc.\n   \n   [~jacques@dremio.com] [~Pindikura Ravindra] for more opinions.\n   \n   Thx."
        },
        {
            "created_at": "2019-03-11T12:56:53.160Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4819?focusedCommentId=16789522) by Weijie Tong (weijie):*\n`[~praveenbingo]` It's a temporary solution until Drill moves to Arrow completely. "
        },
        {
            "created_at": "2019-03-12T09:31:58.709Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4819?focusedCommentId=16790384) by Praveen Kumar (praveenbingo):*\nThen probably a private fork is the right solution in my opinion."
        }
    ]
}