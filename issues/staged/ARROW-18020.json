{
    "issue": {
        "title": "[Java][CI] Java Support Version Policy",
        "body": "***Note**: This issue was originally created as [ARROW-18020](https://issues.apache.org/jira/browse/ARROW-18020). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n**Current status**\r\n\r\n1. Apache Arrow Java is compiled and tested by JDK 8, 11, 17, 18 but packaged with source/target JDK8\r\n\r\n**Changes implemented by this PR** [https://github.com/apache/arrow/pull/13072](https://github.com/apache/arrow/pull/13072*)\r\n\r\n1. Apache Arrow Java project are continuing compiled and tested by JDK 8, 11, 17, 18 but packaged with source/target JDK8\r\n2. If Apache Arrow Java project is building with JDK11+ validate the project are tested against the module-info.java definitions\r\n3. There are not CI implementation to deliver Jar library with JDK8 & JDK11+ (we need to define what will be our next step for JDK versions)\r\n4. We probably are breaking APIs because we are changing package name to ensure unique package names on the project required by module-info.java\r\n5. We are added a new project that contains Apache Arrow Netty custom implementation needed for\r\n6. There are remaining modules pending to implement modules with module-info.java files. This PR contains modules-info.java for: Format / Memory / Vector\r\n\r\n**Next steps**\r\n\r\n1. Implement cross-compilation with JDK 11+ and packaging with release=8 (continue offering support for JDK8):\r\nThat is not posible, if we compile with --release=8 we will have problems to access sun.misc.Unsafe that is not as exposed/public/documented API for N >= 9: -source N -target N --system <documented-APIs-from-N>. \u00a0 \u00a0(<https://openjdk.org/jeps/247>)\r\n\u00a0\r\n2. We have these options for our next steps:\r\n - {**}Option 1{**}.- Maintain all as it is now, continue packaging with source/target JDK8\r\n\r\n - {**}Option 2{**}{**}.-{**} Change/Update/Modify use of sun.misc. classes dependencies to be able to support cross-compilation (-release 8) to packaging with JDK11+ and continue offering support for JDK8 also\r\n\r\n```java\n\r\njdeps --jdk-internals arrow-memory-unsafe-10.0.0-SNAPSHOT.jar\r\narrow-memory-unsafe-10.0.0-SNAPSHOT.jar -> jdk.unsupported\r\n\u00a0 \u00a0org.apache.arrow.memory.unsafe.UnsafeAllocationManager -> sun.misc.Unsafe \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0JDK internal API (jdk.unsupported)\r\nWarning: JDK internal APIs are unsupported and private to JDK implementation that are\r\nsubject to be removed or changed incompatibly and could break your application.\r\nPlease modify your code to eliminate dependence on any JDK internal APIs.\r\nFor the most recent update on JDK internal API replacements, please check:\r\nhttps://wiki.openjdk.java.net/display/JDK8/Java+Dependency+Analysis+Tool\r\nJDK Internal API \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Suggested Replacement\r\n---------------- \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ---------------------\r\nsun.misc.Unsafe \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0See http://openjdk.java.net/jeps/260 \n```\r\n - {**}Option 3{**}.- Drop support for JDK8 and starting offering support to packaging with JDK11+, this will be the right approach, but, this thread does not have an agreement about to drop JDK8 support ([JAVA] JDK Support Policy - <https://lists.apache.org/thread/phpgpydtt3yrgnncdyv4qdq1gf02s0yj>)\r\n\r\nIf you decided to push some of this options please use that [ML\\|[https://lists.apache.org/thread/phpgpydtt3yrgnncdyv4qdq1gf02s0yj]]\u00a0to move on next steps.",
        "created_at": "2022-10-13T04:25:28.000Z",
        "updated_at": "2022-10-13T13:53:07.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Documentation",
            "Component: Java",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-10-13T11:30:52.768Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18020?focusedCommentId=17616981) by David Li (lidavidm):*\nUnsafe is a hard requirement and I'm not aware of any way to replace it.\r\n\r\nI thought we've discussed this on the ML and we cannot drop Java 8."
        },
        {
            "created_at": "2022-10-13T13:53:07.762Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18020?focusedCommentId=17617074) by David Dali Susanibar Arce (dsusanibara):*\nOh, ok, well if that is the case to not drop JDK8, then we should continue using source/target 8 for our Java jar packaging\r\n\r\n\u00a0\r\n\r\nThere are not option to packaging with release JDK11+ for not support of cross-compilation with our current dependencies.\u00a0"
        }
    ]
}