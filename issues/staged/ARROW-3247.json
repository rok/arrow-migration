{
    "issue": {
        "title": "[Python] Support spark parquet array and map types",
        "body": "***Note**: This issue was originally created as [ARROW-3247](https://issues.apache.org/jira/browse/ARROW-3247). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nAs far I understand, there is already some support for nested array/dict/structs in arrow. However, spark Map and List types are structured one level deeper (I believe to allow for both NULL and empty entries). Surprisingly, fastparquet can load these.\u00a0I do not know the plan for arbitrary nested object support, but it should be made clear.\r\n\r\nSchema of spark-generated file from the fastparquet test suite:\r\n```java\n\r\n\u00a0- spark_schema:\r\n| - map_op_op: MAP, OPTIONAL\r\n|   - key_value: REPEATED\r\n|   | - key: BYTE_ARRAY, UTF8, REQUIRED\r\n|     - value: BYTE_ARRAY, UTF8, OPTIONAL\r\n| - map_op_req: MAP, OPTIONAL\r\n|   - key_value: REPEATED\r\n|   | - key: BYTE_ARRAY, UTF8, REQUIRED\r\n|     - value: BYTE_ARRAY, UTF8, REQUIRED\r\n| - map_req_op: MAP, REQUIRED\r\n|   - key_value: REPEATED\r\n|   | - key: BYTE_ARRAY, UTF8, REQUIRED\r\n|     - value: BYTE_ARRAY, UTF8, OPTIONAL\r\n| - map_req_req: MAP, REQUIRED\r\n|   - key_value: REPEATED\r\n|   | - key: BYTE_ARRAY, UTF8, REQUIRED\r\n|     - value: BYTE_ARRAY, UTF8, REQUIRED\r\n| - arr_op_op: LIST, OPTIONAL\r\n|   - list: REPEATED\r\n|     - element: BYTE_ARRAY, UTF8, OPTIONAL\r\n| - arr_op_req: LIST, OPTIONAL\r\n|   - list: REPEATED\r\n|     - element: BYTE_ARRAY, UTF8, REQUIRED\r\n| - arr_req_op: LIST, REQUIRED\r\n|   - list: REPEATED\r\n|     - element: BYTE_ARRAY, UTF8, OPTIONAL\r\n  - arr_req_req: LIST, REQUIRED\r\n    - list: REPEATED\r\n      - element: BYTE_ARRAY, UTF8, REQUIRED\r\n```\r\n(please forgive that some of this has already been mentioned elsewhere; this is one of the entries in the list at <https://github.com/dask/fastparquet/issues/374> as a feature that is useful in fastparquet)",
        "created_at": "2018-09-17T00:07:59.000Z",
        "updated_at": "2020-02-28T17:04:29.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2020-02-26T21:06:17.161Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3247?focusedCommentId=17045896) by Brian Hulette (bhulette):*\nI added a code block around the spec so we don't need to switch to text mode."
        },
        {
            "created_at": "2020-02-26T21:14:08.209Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3247?focusedCommentId=17045908) by Brian Hulette (bhulette):*\n`[~mdurant]` \u00a0are these types different from the spec defined at\u00a0<https://github.com/apache/parquet-format/blob/master/LogicalTypes.md#maps>?"
        },
        {
            "created_at": "2020-02-26T21:20:30.322Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3247?focusedCommentId=17045910) by Martin Durant (mdurant):*\nThey are allowed by the parquet spec, but not the simplest way to express arrays/maps. This is the structure that spark decided to go with, perhaps because the extra level of nesting allows both NULL and empty map for a given entry."
        },
        {
            "created_at": "2020-02-26T21:25:23.787Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3247?focusedCommentId=17045913) by Brian Hulette (bhulette):*\nI think the Arrow parquet reader just doesn't handle maps of any sort. There don't seem to be any tests for it. It looks like we will run into a list-of-structs and crash here:\u00a0<https://github.com/apache/arrow/blob/b557587f4f7c8b547fea45dc98b9182f3f5e9bf7/cpp/src/parquet/arrow/reader.cc#L717-L722>"
        },
        {
            "created_at": "2020-02-27T06:07:18.589Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3247?focusedCommentId=17046191) by Micah Kornfield (emkornfield@gmail.com):*\nThat is correct there are other open jiras on this and a discussion on the mailing list."
        },
        {
            "created_at": "2020-02-27T10:49:39.041Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3247?focusedCommentId=17046482) by Brian Hulette (bhulette):*\nThanks Micah, could you link those here? When searching for parquet and maps this is all I could find."
        },
        {
            "created_at": "2020-02-28T05:01:50.580Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3247?focusedCommentId=17047208) by Micah Kornfield (emkornfield@gmail.com):*\n\r\n> <map-repetition> group <name> (MAP) {\n> repeated group key_value {\n> required <key-type> key;\n> <value-repetition> <value-type> value;\n> }\n> }\r\nSorry I'm not seeing the different in Map schema from what is listed in the parquet spec (pasted above)?\r\n\r\nOther issues covering this:\r\nhttps://issues.apache.org/jira/browse/ARROW-1644 (this is the one I'm actively updating with subtasks)\r\nhttps://issues.apache.org/jira/browse/ARROW-2587?filter=-1\r\nhttps://issues.apache.org/jira/browse/ARROW-1599?filter=-1\r\n\r\nDiscussion on maiiling list: https://mail-archives.apache.org/mod_mbox/arrow-dev/202002.mbox/%3CCAJPUwMBP_CyfsVn0nCQx%3DP6AFuGaAcYRr-x9Y0GtJ7d2QTZRHA%40mail.gmail.com%3E\r\n\r\n\r\n"
        },
        {
            "created_at": "2020-02-28T14:33:48.352Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3247?focusedCommentId=17047692) by Martin Durant (mdurant):*\nThe spark-type maps:\r\n\r\n\u00a0\r\n```java\n\r\n- spark_schema:\r\n| - map_op_op: MAP, OPTIONAL\r\n|   - key_value: REPEATED\r\n|   | - key: BYTE_ARRAY, UTF8, REQUIRED\r\n|     - value: type, OPTIONAL\n```\r\nThe minimal required (because MAP implies repeated):\r\n```java\n\r\n- scheme\r\n| - map_op_op: MAP, OPTIONAL \r\n| | - key: BYTE_ARRAY, UTF8, REQUIRED \r\n|   - value: type, OPTIONAL\n```\r\n\r\nThe first allow for values: NULL, {}, \\{key: NULL}, \\{key: value}\r\n\r\nThe latter allows for: NULL, \\{key: NULL}, \\{key: value} but no empty map. Note that this may be more efficiently stored, since the number of available definition levels is smaller."
        },
        {
            "created_at": "2020-02-28T17:04:29.414Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3247?focusedCommentId=17047801) by Micah Kornfield (emkornfield@gmail.com):*\nThe parquet spec say \"`MAP`\u00a0must annotate a 3-level structure\".\u00a0 So the second schema does not\u00a0 seem to comply with the specification and unlike LISTs there is no note about backwards compatibility for the 2 level structure.\u00a0 Are there implementations that use the second one?\u00a0\r\n\r\n\u00a0\r\n\r\nI suppose when reading we might want to provide support for the second example, but I think the spark version should be our priority (since it seems to comply with the specification)."
        }
    ]
}