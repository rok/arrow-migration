{
    "issue": {
        "title": "[R] improve nightly build installation",
        "body": "***Note**: This issue was originally created as [ARROW-8734](https://issues.apache.org/jira/browse/ARROW-8734). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI've tried to install / build from source (with from a git checkout and using the built-in `install_arrow()`) and when compiling I'm getting the following error reliably during the auto brew process:\r\n\r\n```bash\n\r\n x System command 'R' failed, exit status: 1, stdout + stderr:\r\nE> * checking for file \u2018/Users/jkeane/Dropbox/arrow/r/DESCRIPTION\u2019 ... OK\r\nE> * preparing \u2018arrow\u2019:\r\nE> * checking DESCRIPTION meta-information ... OK\r\nE> * cleaning src\r\nE> * running \u2018cleanup\u2019\r\nE> * installing the package to build vignettes\r\nE>       -----------------------------------\r\nE> * installing *source* package \u2018arrow\u2019 ...\r\nE> ** using staged installation\r\nE> *** Generating code with data-raw/codegen.R\r\nE> There were 27 warnings (use warnings() to see them)\r\nE> *** > 375 functions decorated with [[arrow|s3::export]]\r\nE> *** > generated file `src/arrowExports.cpp`\r\nE> *** > generated file `R/arrowExports.R`\r\nE> *** Downloading apache-arrow\r\nE> **** Using local manifest for apache-arrow\r\nE> Thu May  7 13:13:42 CDT 2020: Auto-brewing apache-arrow in /var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T//build-apache-arrow...\r\nE> ==> Tapping autobrew/core from https://github.com/autobrew/homebrew-core\r\nE> Tapped 2 commands and 4639 formulae (4,888 files, 12.7MB).\r\nE> lz4\r\nE> openssl\r\nE> thrift\r\nE> snappy\r\nE> ==> Downloading https://homebrew.bintray.com/bottles/lz4-1.8.3.mojave.bottle.tar.gz\r\nE> Already downloaded: /var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T/downloads/b4158ef68d619dbf78935df6a42a70b8339a65bc8876cbb4446355ccd40fa5de--lz4-1.8.3.mojave.bottle.tar.gz\r\nE> ==> Pouring lz4-1.8.3.mojave.bottle.tar.gz\r\nE> ==> Skipping post_install step for autobrew...\r\nE> \ud83c\udf7a  /private/var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T/build-apache-arrow/Cellar/lz4/1.8.3: 22 files, 512.7KB\r\nE> ==> Downloading https://homebrew.bintray.com/bottles/openssl-1.0.2p.mojave.bottle.tar.gz\r\nE> Already downloaded: /var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T/downloads/fbb493745981c8b26c0fab115c76c2a70142bfde9e776c450277e9dfbbba0bb2--openssl-1.0.2p.mojave.bottle.tar.gz\r\nE> ==> Pouring openssl-1.0.2p.mojave.bottle.tar.gz\r\nE> ==> Skipping post_install step for autobrew...\r\nE> ==> Caveats\r\nE> openssl is keg-only, which means it was not symlinked into /private/var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T/build-apache-arrow,\r\nE> because Apple has deprecated use of OpenSSL in favor of its own TLS and crypto libraries.\r\nE> \r\nE> If you need to have openssl first in your PATH run:\r\nE>   echo 'export PATH=\"/private/var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T/build-apache-arrow/opt/openssl/bin:$PATH\"' >> ~/.zshrc\r\nE> \r\nE> For compilers to find openssl you may need to set:\r\nE>   export LDFLAGS=\"-L/private/var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T/build-apache-arrow/opt/openssl/lib\"\r\nE>   export CPPFLAGS=\"-I/private/var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T/build-apache-arrow/opt/openssl/include\"\r\nE> \r\nE> For pkg-config to find openssl you may need to set:\r\nE>   export PKG_CONFIG_PATH=\"/private/var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T/build-apache-arrow/opt/openssl/lib/pkgconfig\"\r\nE> \r\nE> ==> Summary\r\nE> \ud83c\udf7a  /private/var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T/build-apache-arrow/Cellar/openssl/1.0.2p: 1,793 files, 12MB\r\nE> ==> Downloading https://homebrew.bintray.com/bottles/thrift-0.11.0.mojave.bottle.tar.gz\r\nE> Already downloaded: /var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T/downloads/7e05ea11a9f7f924dd7f8f36252ec73a24958b7f214f71e3752a355e75e589bd--thrift-0.11.0.mojave.bottle.tar.gz\r\nE> ==> Pouring thrift-0.11.0.mojave.bottle.tar.gz\r\nE> ==> Skipping post_install step for autobrew...\r\nE> ==> Caveats\r\nE> To install Ruby binding:\r\nE>   gem install thrift\r\nE> ==> Summary\r\nE> \ud83c\udf7a  /private/var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T/build-apache-arrow/Cellar/thrift/0.11.0: 102 files, 7MB\r\nE> ==> Downloading https://homebrew.bintray.com/bottles/snappy-1.1.7_1.mojave.bottle.tar.gz\r\nE> Already downloaded: /var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T/downloads/1f09938804055499d1dd951b13b26d80c56eae359aa051284bf4f51d109a9f73--snappy-1.1.7_1.mojave.bottle.tar.gz\r\nE> ==> Pouring snappy-1.1.7_1.mojave.bottle.tar.gz\r\nE> ==> Skipping post_install step for autobrew...\r\nE> \ud83c\udf7a  /private/var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T/build-apache-arrow/Cellar/snappy/1.1.7_1: 18 files, 115.8KB\r\nE> ==> Downloading https://autobrew.github.io/bottles/apache-arrow-0.17.0.el_capitan.bottle.tar.gz\r\nE> Already downloaded: /var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T/downloads/7dcf2302ba174a5efb32eaa5b8fe0ae874f4a4671f575e126c79a524830054ae--apache-arrow-0.17.0.el_capitan.bottle.tar.gz\r\nE> ==> Pouring apache-arrow-0.17.0.el_capitan.bottle.tar.gz\r\nE> ==> Skipping post_install step for autobrew...\r\nE> \ud83c\udf7a  /private/var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T/build-apache-arrow/Cellar/apache-arrow/0.17.0: 294 files, 49.7MB\r\nE> ==> Caveats\r\nE> ==> openssl\r\nE> openssl is keg-only, which means it was not symlinked into /private/var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T/build-apache-arrow,\r\nE> because Apple has deprecated use of OpenSSL in favor of its own TLS and crypto libraries.\r\nE> \r\nE> If you need to have openssl first in your PATH run:\r\nE>   echo 'export PATH=\"/private/var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T/build-apache-arrow/opt/openssl/bin:$PATH\"' >> ~/.zshrc\r\nE> \r\nE> For compilers to find openssl you may need to set:\r\nE>   export LDFLAGS=\"-L/private/var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T/build-apache-arrow/opt/openssl/lib\"\r\nE>   export CPPFLAGS=\"-I/private/var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T/build-apache-arrow/opt/openssl/include\"\r\nE> \r\nE> For pkg-config to find openssl you may need to set:\r\nE>   export PKG_CONFIG_PATH=\"/private/var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T/build-apache-arrow/opt/openssl/lib/pkgconfig\"\r\nE> \r\nE> ==> thrift\r\nE> To install Ruby binding:\r\nE>   gem install thrift\r\nE> created /var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T//build-apache-arrow/lib/libbrewarrow.a\r\nE> created /var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T//build-apache-arrow/lib/libbrewarrow_dataset.a\r\nE> created /var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T//build-apache-arrow/lib/libbrewparquet.a\r\nE> created /var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T//build-apache-arrow/lib/libbrewlz4.a\r\nE> created /var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T//build-apache-arrow/lib/libbrewcrypto.a\r\nE> created /var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T//build-apache-arrow/lib/libbrewssl.a\r\nE> created /var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T//build-apache-arrow/lib/libbrewsnappy.a\r\nE> created /var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T//build-apache-arrow/lib/libbrewthrift.a\r\nE> created /var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T//build-apache-arrow/lib/libbrewthriftz.a\r\nE> PKG_CFLAGS=-I/var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T//build-apache-arrow/opt/apache-arrow/include -DARROW_R_WITH_ARROW\r\nE> PKG_LIBS=-L/var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T//build-apache-arrow/opt/apache-arrow/lib -L/var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T//build-apache-arrow/lib -lbrewparquet -lbrewarrow_dataset -lbrewarrow -lbrewthrift -lbrewlz4 -lbrewsnappy\r\nE> ** libs\r\nE> clang++ -mmacosx-version-min=10.13 -std=gnu++11 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T//build-apache-arrow/opt/apache-arrow/include -DARROW_R_WITH_ARROW -I'/Library/Frameworks/R.framework/Versions/4.0/Resources/library/Rcpp/include' -I/usr/local/include   -fPIC  -Wall -g -O2  -c array.cpp -o array.o\r\nE> clang++ -mmacosx-version-min=10.13 -std=gnu++11 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T//build-apache-arrow/opt/apache-arrow/include -DARROW_R_WITH_ARROW -I'/Library/Frameworks/R.framework/Versions/4.0/Resources/library/Rcpp/include' -I/usr/local/include   -fPIC  -Wall -g -O2  -c array_from_vector.cpp -o array_from_vector.o\r\nE> clang++ -mmacosx-version-min=10.13 -std=gnu++11 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T//build-apache-arrow/opt/apache-arrow/include -DARROW_R_WITH_ARROW -I'/Library/Frameworks/R.framework/Versions/4.0/Resources/library/Rcpp/include' -I/usr/local/include   -fPIC  -Wall -g -O2  -c array_to_vector.cpp -o array_to_vector.o\r\nE> clang++ -mmacosx-version-min=10.13 -std=gnu++11 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T//build-apache-arrow/opt/apache-arrow/include -DARROW_R_WITH_ARROW -I'/Library/Frameworks/R.framework/Versions/4.0/Resources/library/Rcpp/include' -I/usr/local/include   -fPIC  -Wall -g -O2  -c arraydata.cpp -o arraydata.o\r\nE> clang++ -mmacosx-version-min=10.13 -std=gnu++11 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T//build-apache-arrow/opt/apache-arrow/include -DARROW_R_WITH_ARROW -I'/Library/Frameworks/R.framework/Versions/4.0/Resources/library/Rcpp/include' -I/usr/local/include   -fPIC  -Wall -g -O2  -c arrowExports.cpp -o arrowExports.o\r\nE> arrowExports.cpp:1650:21: error: no member named 'CsvFileFormat' in namespace 'arrow::dataset'\r\nE> std::shared_ptr<ds::CsvFileFormat> dataset___CsvFileFormat__Make(const std::shared_ptr<arrow::csv::ParseOptions>& parse_options);\r\nE>                 ~~~~^\r\nE> 1 error generated.\r\nE> make: *** [arrowExports.o] Error 1\r\nE> ERROR: compilation failed for package \u2018arrow\u2019\r\nE> * removing \u2018/private/var/folders/45/n5gfjjtn05j877spnpbnhqqw0000gn/T/RtmpNwJEKk/Rinstd9644c71dcbf/arrow\u2019\r\nE>       -----------------------------------\r\nE> ERROR: package installation failed \r\n``` \r\n\r\nI'm sure I'm missing some setup step somewhere or I'm missing a necessary step to install from source. I've tried this both under R 3.6(.1) and 4.0 to see if upgrading helped and I get the same error",
        "created_at": "2020-05-07T18:29:34.000Z",
        "updated_at": "2020-05-15T15:04:56.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-05-15T15:04:44.000Z"
    },
    "comments": [
        {
            "created_at": "2020-05-07T18:33:08.360Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8734?focusedCommentId=17101953) by Neal Richardson (npr):*\n~~You need to be on the exact same version of C++ library and R package. Are you installing from a git checkout?~~ Ah yes, you said that. But if you're installing from a checkout, don't use `install_arrow`.\r\n\r\nIf you want a development version on macOS, why not use our nightly binaries and avoid the hassle of a source build? `arrow::install_arrow(nightly=TRUE)` should do it, or you could set the `repos` arg to install.packages yourself."
        },
        {
            "created_at": "2020-05-07T18:39:56.123Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8734?focusedCommentId=17101958) by Neal Richardson (npr):*\nAside: we don't yet have as simple tooling around setting up a full development build (C++ and R from source), and in particular on macOS because of the funky autobrew build system. It's on my wishlist but understandably it's been farther down the list given the effort to get release packaging smooth.\r\n\r\nI think the binary should work for you for your current need, but if you want to build from source the autobrew way, see what https://github.com/ursa-labs/arrow-r-nightly/blob/master/.travis.yml does--that's how the nightly binaries are made from a git checkout."
        },
        {
            "created_at": "2020-05-07T18:42:26.360Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8734?focusedCommentId=17101963) by Jonathan Keane (jonkeane):*\nI'll take a look at travis (I had been looking for the GH version, oops!)\r\n\r\narrow::install_arrow(nightly = TRUE) complains about not being able to find the PACKAGES file it's looking for (it looks like maybe with 4.0 cran no longer has the `el-capitan` level? c.f. https://cran.r-project.org/bin/macosx/contrib/4.0/)\r\n\r\n```r\n\r\nWarning: unable to access index for repository https://dl.bintray.com/ursalabs/arrow-r/bin/macosx/contrib/4.0:\r\n  cannot open URL 'https://dl.bintray.com/ursalabs/arrow-r/bin/macosx/contrib/4.0/PACKAGES'\r\n\r\n  There is a binary version available but the source version is later:\r\n      binary          source needs_compilation\r\narrow 0.17.0 0.17.0.20200505              TRUE\r\n```"
        },
        {
            "created_at": "2020-05-07T18:44:29.090Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8734?focusedCommentId=17101965) by Jonathan Keane (jonkeane):*\nWhen I tried arrow::install_arrow(nightly = TRUE) under 3.6 and chose the binary, I would get a dynloading complaint when trying to load the arrow library. Sorry I don't have the details of that message, I could downgrade to 3.6 and grab it if it's useful.\r\n"
        },
        {
            "created_at": "2020-05-07T18:49:05.363Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8734?focusedCommentId=17101968) by Neal Richardson (npr):*\nI think the load error is because you had the package already loaded, and I think it is fixed if you restart R. \r\n\r\nYou're right on the other point, we aren't building nightly binaries for 4.0 yet it seems."
        },
        {
            "created_at": "2020-05-07T20:25:20.939Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8734?focusedCommentId=17102014) by Jonathan Keane (jonkeane):*\nSuccess! I manually downloaded the 4.0 binaries from https://dl.bintray.com/ursalabs/arrow-r/bin/macosx/el-capitan/contrib/4.0/ and that worked, but I got the following (even after restarting R):\r\n\r\n```r\n\r\n> library(arrow)\r\nError: package or namespace load failed for \u2018arrow\u2019 in dyn.load(file, DLLpath = DLLpath, ...):\r\n unable to load shared object '/Library/Frameworks/R.framework/Versions/4.0/Resources/library/arrow/libs/arrow.so':\r\n  dlopen(/Library/Frameworks/R.framework/Versions/4.0/Resources/library/arrow/libs/arrow.so, 6): Library not loaded: /usr/local/opt/boost/lib/libboost_system.dylib\r\n  Referenced from: /Library/Frameworks/R.framework/Versions/4.0/Resources/library/arrow/libs/arrow.so\r\n  Reason: image not found\r\n```\r\n\r\nWhich was resolved by running `brew install boost` and then the nightly arrow loaded just fine."
        },
        {
            "created_at": "2020-05-15T15:04:44.546Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8734?focusedCommentId=17108377) by Neal Richardson (npr):*\nIssue resolved by pull request 7184\n<https://github.com/apache/arrow/pull/7184>"
        }
    ]
}