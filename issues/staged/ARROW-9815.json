{
    "issue": {
        "title": "[Rust] [DataFusion] Deadlock in creation of physical plan with two udfs",
        "body": "***Note**: This issue was originally created as [ARROW-9815](https://issues.apache.org/jira/browse/ARROW-9815). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThis one took me some time to understand, but I finally have a reproducible example: when two udfs are called, one after the other, we cause a deadlock when creating the physical plan.\r\n\r\nExample test\r\n\r\n```Java\n\r\n#[test]\r\nfn csv_query_sqrt_sqrt() -> Result<()> {\r\n    let mut ctx = create_ctx()?;\r\n    register_aggregate_csv(&mut ctx)?;\r\n    let sql = \"SELECT sqrt(sqrt(c12)) FROM aggregate_test_100 LIMIT 1\";\r\n    let actual = execute(&mut ctx, sql);\r\n    // sqrt(sqrt(c12=0.9294097332465232)) = 0.9818650561397431\r\n    let expected = \"0.9818650561397431\".to_string();\r\n    assert_eq!(actual.join(\"\\n\"), expected);\r\n    Ok(())\r\n}\r\n```\r\n\r\nI believe that this is due to the recursive nature of the physical planner, that locks scalar_functions within a match, which blocks the whole thing.",
        "created_at": "2020-08-20T19:46:40.000Z",
        "updated_at": "2020-09-01T12:50:32.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Component: Rust - DataFusion",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-08-22T17:05:52.000Z"
    },
    "comments": [
        {
            "created_at": "2020-08-22T17:05:52.984Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9815?focusedCommentId=17182436) by Andy Grove (andygrove):*\nIssue resolved by pull request 8018\n<https://github.com/apache/arrow/pull/8018>"
        }
    ]
}