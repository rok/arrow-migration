{
    "issue": {
        "title": "[C++] Make ExecPlan::ToString give some additional information",
        "body": "***Note**: This issue was originally created as [ARROW-15138](https://issues.apache.org/jira/browse/ARROW-15138). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently we have this task https://issues.apache.org/jira/browse/ARROW-14233 However, that task is very open about the scope. So this ticket will try to address some improvements for ExecPlan::ToString without the need to have additional sophistication nor to extend the scope of features for ExecPlan::ToString.\r\n\r\nThis means that we won't need to research about GraphViz (or other backends) here. We will just need to work to have these features for ExecPlan::ToString:\r\n \\* Print index/Id for each node\u00a0 in the physical tree\r\n \\* Make sure all the nodes have names and correct index/IDs\r\n \\* Apply indentation for the printing process (this may be an optional setting in the API)",
        "created_at": "2021-12-16T17:32:47.000Z",
        "updated_at": "2022-01-08T10:05:45.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: task"
        ],
        "closed": true,
        "closed_at": "2022-01-06T21:44:02.000Z"
    },
    "comments": [
        {
            "created_at": "2021-12-16T17:49:35.908Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15138?focusedCommentId=17460926) by David Li (lidavidm):*\nOne thing that's been requested is to have a way to rebuild an exec plan printed in one language (e.g. so that we can get an ExecPlan from R into C++ for debugging).\r\n\r\nDoing that fully automatically is out of scope here (though: do we want some way to serialize an ExecPlan to/from an internal format? Or is that redundant with Substrait support?) but we should ensure all necessary data is included.\r\n\r\nFor options like indentation, we could add an (optional) options struct for those things. (It may also be hard in the general case because plans are not necessarily trees.) Otherwise I agree with the suggested improvements. One more thing to consider might be to ensure we generate unique names in case there are duplicate nodes (I think we already do so since we number them?)"
        },
        {
            "created_at": "2021-12-16T18:02:21.293Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15138?focusedCommentId=17460932) by Weston Pace (westonpace):*\nSome of this stuff we may already do in the current ToString.  We have a \"label\" which is the \"id\" and, if the caller doesn't assign it, we already assign it based on a plan scoped counter (look for auto_label_counter_ in exec_plan.cc).  So that handles the first bullet.\r\n\r\nI'm pretty sure most of the nodes have the correct name.\r\n\r\nFor plans that aren't trees we should print the node the first time we come across it and then, on future times we will come across it, print some kind of reference to the node based on the id/label.  For example, we could just throw  a # in front of the label (#7)."
        },
        {
            "created_at": "2021-12-16T18:04:34.669Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15138?focusedCommentId=17460934) by Weston Pace (westonpace):*\nI guess for indentation you could do djikstra's shortest path from the sink (all costs are 1, there is always only one sink I'm pretty sure) and then base the indentation on that (highest cost is least indented) but I don't know how visually appealing that would be."
        },
        {
            "created_at": "2021-12-16T18:07:22.610Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15138?focusedCommentId=17460937) by David Li (lidavidm):*\nExecPlan already does a topological sort of the nodes so you could probably infer indentation there too.\r\n\r\n(I thought there was an issue about getting rid of multiple sinks? Though I am playing with a node that has two outputs so I can send data both to a Flight stream and a file writer.)"
        },
        {
            "created_at": "2022-01-06T21:44:02.853Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15138?focusedCommentId=17470199) by Weston Pace (westonpace):*\nIssue resolved by pull request 12031\n<https://github.com/apache/arrow/pull/12031>"
        }
    ]
}