{
    "issue": {
        "title": "[C++] Expose a `full` (array creation) capability to python/R",
        "body": "***Note**: This issue was originally created as [ARROW-12813](https://issues.apache.org/jira/browse/ARROW-12813). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nGiven a scalar value and a length return an array where all values are equal to the scalar value.\r\n\r\nThe name \"full\" is derived from <https://numpy.org/doc/stable/reference/generated/numpy.full.html> but if anyone has a more clever name please recommend it.\r\n\r\nThere are a number of utility functions in C++ that do this already.\u00a0 However, exposing this as a compute function would allow R/Python to easily generate arrays.",
        "created_at": "2021-05-17T17:56:16.000Z",
        "updated_at": "2021-06-04T04:03:49.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-06-04T04:03:49.000Z"
    },
    "comments": [
        {
            "created_at": "2021-05-17T17:59:39.681Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12813?focusedCommentId=17346318) by Weston Pace (westonpace):*\nI was going to close as duplicate but looking at ARROW-12789 more closely I think they are asking\u00a0 for similar but slightly different interfaces."
        },
        {
            "created_at": "2021-05-17T18:00:47.113Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12813?focusedCommentId=17346324) by Antoine Pitrou (apitrou):*\nIt could be exposed in Python/R without being a compute function.\r\nThat said, `np.full` is intrinsically more useful than an Arrow equivalent because Numpy arrays are mutable."
        },
        {
            "created_at": "2021-05-17T18:07:00.356Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12813?focusedCommentId=17346337) by Weston Pace (westonpace):*\nI think it comes up often enough in cases where there is a default value for a column.\u00a0 For example, if you are reading into datasets from two different sources that are similar but not quite the same and you want to unify them.\r\n\r\nI should also mention that, if you are reading in data as a dataset scan, you can achieve this with projection (project a name to a scalar and the scalar will be broadcast)."
        },
        {
            "created_at": "2021-05-17T19:00:20.066Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12813?focusedCommentId=17346391) by Antoine Pitrou (apitrou):*\nI don't dispute it's useful. I'm just not convinced we need to make a compute function out of it."
        },
        {
            "created_at": "2021-05-17T22:06:46.630Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12813?focusedCommentId=17346461) by Weston Pace (westonpace):*\nI'd be fine with exposing a utility function instead of a compute function.\u00a0 I still don't really understand how to make the distinction or what the impact of such a choice would be."
        },
        {
            "created_at": "2021-06-04T01:13:56.475Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12813?focusedCommentId=17356994) by Ben Kietzman (bkietz):*\nIsn't this just MakeArrayFromScalar?"
        },
        {
            "created_at": "2021-06-04T04:02:32.683Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12813?focusedCommentId=17357042) by Weston Pace (westonpace):*\nIndeed it is.\u00a0 I realized that a few days after I created this.\u00a0 Thanks for the reminder :)"
        },
        {
            "created_at": "2021-06-04T04:03:49.271Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12813?focusedCommentId=17357043) by Weston Pace (westonpace):*\nThis does already exist as arrow::MakeArrayFromScalar."
        }
    ]
}