{
    "issue": {
        "title": "[Archery] Default build should be minimal",
        "body": "***Note**: This issue was originally created as [ARROW-6826](https://issues.apache.org/jira/browse/ARROW-6826). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nFollow of\u00a0https://github.com/apache/arrow/pull/5600/files#r332655141",
        "created_at": "2019-10-09T11:43:43.000Z",
        "updated_at": "2019-10-09T19:51:39.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Archery",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2019-10-09T13:53:04.035Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6826?focusedCommentId=16947686) by Ben Kietzman (bkietz):*\nRelated: currently the flag `--with-parquet` wraps the cmake flag `ARROW_PARQUET`. This is much more ergonomic than setting the cmake flag using `--cmake-extras=\"-DARROW_PARQUET=ON\"`, but the mapping can only be discovered by reading archery's code or `$CMAKE_BUILD_DIR/cmake_options.json`. Additionally there are many arrow specific options in `DefineOptions.cmake` which aren't exposed through a convenience flag (for example `ARROW_USE_ASAN`). I think it would improve usability if all options present in `DefineOptions.cmake` were present as convenience flags for `archery build` and the mapping explained through `archery build --help-explain-cmake-options` or so."
        }
    ]
}