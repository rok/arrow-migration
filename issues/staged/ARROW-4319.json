{
    "issue": {
        "title": "plasma/store.h pulls ins flatbuffer dependency",
        "body": "***Note**: This issue was originally created as [ARROW-4319](https://issues.apache.org/jira/browse/ARROW-4319). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nFor our unit testing, we'd like to use the plasma store programmatically by including\u00a0**plasma/store.h**. However, this header pulls in flatbuffers via **src/plasma/common_generated.h**. Is this a necessary include or would a forward declaration suffice?\r\n\r\nInstalling just flatbuffers didn't solve the problem, though. It looks like a specific version is needed:\r\n```\n\r\n In file included from /Users/mavam/code/src/arrow/cpp/src/plasma/store.h:30:\r\n In file included from /Users/mavam/code/src/arrow/cpp/src/plasma/eviction_policy.h:27:\r\n In file included from /Users/mavam/code/src/arrow/cpp/src/plasma/plasma.h:41:\r\n /Users/mavam/code/src/arrow/cpp/src/plasma/common_generated.h:65:21: error: no matching member function for call to 'Verify'\r\n verifier.Verify(object_id()) &&\r\n ~~~~~~~~~^~~~~~\r\n /usr/local/include/flatbuffers/flatbuffers.h:1896:29: note: candidate template ignored: couldn't infer template argument 'T'\r\n template<typename T> bool Verify(size_t elem) const {\r\n ^\r\n /usr/local/include/flatbuffers/flatbuffers.h:1905:29: note: candidate function template not viable: requires 2 arguments, but 1 was provided\r\n template<typename T> bool Verify(const uint8_t *base, voffset_t elem_off)\r\n ^\r\n /usr/local/include/flatbuffers/flatbuffers.h:1880:8: note: candidate function not viable: requires 2 arguments, but 1 was provided\r\n bool Verify(size_t elem, size_t elem_len) const {\r\n ^\r\n /usr/local/include/flatbuffers/flatbuffers.h:1901:8: note: candidate function not viable: requires 3 arguments, but 1 was provided\r\n bool Verify(const uint8_t *base, voffset_t elem_off, size_t elem_len) const {\r\n```\r\n",
        "created_at": "2019-01-22T10:29:01.000Z",
        "updated_at": "2019-03-25T21:17:25.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-01-22T15:55:34.000Z"
    },
    "comments": [
        {
            "created_at": "2019-01-22T10:50:43.787Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4319?focusedCommentId=16748600) by Philipp Moritz (pcmoritz):*\nHey\u00a0Matthias,\r\n\r\nIt should be possible to remove this dependency by\u00a0shuffling around/forward declaring a few things. Do you want to submit a PR? Let me know if you run into any issues that require a deeper refactor.\r\n\r\n\u2013 Philipp."
        },
        {
            "created_at": "2019-01-22T11:19:34.069Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4319?focusedCommentId=16748631) by Matthias Vallentin (mavam):*\nI was able to move the dependency to the implementation. Here is the PR:\u00a0https://github.com/apache/arrow/pull/3454."
        },
        {
            "created_at": "2019-01-22T15:55:35.045Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4319?focusedCommentId=16748861) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 3454\n<https://github.com/apache/arrow/pull/3454>"
        }
    ]
}