{
    "issue": {
        "title": "[Java] Avoids the worst case for quick sort",
        "body": "***Note**: This issue was originally created as [ARROW-7400](https://issues.apache.org/jira/browse/ARROW-7400). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThis issue is in response of a discussion in: https://github.com/apache/arrow/pull/5540#discussion_r329487232.\r\n\r\nThe quick sort algorithm can degenerate to an O(n^2) algorithm, if the pivot is selected poorly. This is an important problem, as the worst case can happen, if the input vector is alrady sorted, which is frequently encountered in practice.\r\n\r\nAfter some investigation, we solve the problem with a simple but effective approach: take 3 samples and choose the median (with at most 3 comparisons) as the pivot. This sorts the vector which is already sorted in O(nlogn) time. ",
        "created_at": "2019-12-16T12:08:35.000Z",
        "updated_at": "2020-02-18T04:34:11.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-02-18T04:34:11.000Z"
    },
    "comments": [
        {
            "created_at": "2020-02-18T04:34:11.461Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7400?focusedCommentId=17038780) by Micah Kornfield (emkornfield@gmail.com):*\nIssue resolved by pull request 6039\n<https://github.com/apache/arrow/pull/6039>"
        }
    ]
}