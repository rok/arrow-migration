{
    "issue": {
        "title": "[Java] Enable configurable scale coercion of BigDecimal",
        "body": "***Note**: This issue was originally created as [ARROW-16600](https://issues.apache.org/jira/browse/ARROW-16600). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nPer ARROW-16427, JDBC drivers sometimes return ResultSets where the scale of BigDecimals in a single column differs by row.\u00a0 The existing mapping requires exact match of scale to the target Arrow vector that was created based on ResultSetMetaData (or configuration), and when any row does not match exactly, an Exception is thrown.\r\n\r\nTo support JDBC drivers where scale may be inconsistent by row, Arrow should allow a less-strict mode that coerces BigDecimals to target vectors with greater scale.\u00a0 The default strict behavior should be retained, but it may be useful to allow coercion to proper target scale.\u00a0",
        "created_at": "2022-05-17T19:39:53.000Z",
        "updated_at": "2022-06-27T15:27:20.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-06-27T15:27:20.000Z"
    },
    "comments": [
        {
            "created_at": "2022-06-24T16:09:42.929Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16600?focusedCommentId=17558559) by @toddfarmer:*\n`[~jswenson]` : I've put up a [PR adding configurable handling of BigDecimals](https://github.com/apache/arrow/pull/13433) with mismatched scale. If you have comments on how this solves (or fails to solve) your use case, please feel free to comment."
        },
        {
            "created_at": "2022-06-24T16:55:08.790Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16600?focusedCommentId=17558578) by Jonathan Swenson (jswenson):*\n@toddfarmer Thank you for your work here! With this and the other configuration options you've added, I believe this allows for a reasonable remedy of the Postgres unbounded decimal issue (with variable scale).\u00a0\r\n\r\nI think my best course of action will be to detect these columns (by inspecting the result set ahead of time) and using the tooling you've provided to map unbounded decimal values to a reasonable precision / scale.\u00a0"
        },
        {
            "created_at": "2022-06-27T15:27:20.693Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-16600?focusedCommentId=17559227) by David Li (lidavidm):*\nIssue resolved by pull request 13433\n<https://github.com/apache/arrow/pull/13433>"
        }
    ]
}