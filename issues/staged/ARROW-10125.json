{
    "issue": {
        "title": "[R] Int64 downcast check doesn't consider all chunks",
        "body": "***Note**: This issue was originally created as [ARROW-10125](https://issues.apache.org/jira/browse/ARROW-10125). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI've got a proprietary dataset where one of the columns is an integer64 but all of the values would fit within 32bits.\u00a0 As I understand it, arrow/feather will downcast that column when the data is read back into R (not ideal IMO, but not an issue generally).\u00a0 However, I'm having some trouble with a specific dataset.\u00a0\r\n\r\nWhen I read in the data, the column is set to the class \"integer64\", however the column type (typeof) is 'integer' and not 'double', which is the underlying type used by bit64.\u00a0 This mismatch causes R data.table to error out (<https://github.com/Rdatatable/data.table/blob/master/src/rbindlist.c#L325)>\r\n\r\nI do not have any issue with integer64 columns which have values > 2^32, and suspiciously I am also unable to recreate the issue by manually creating a data.table with an int64 column with small values (e.g data.table(col=as.integer64(c(1,2,3))) )\r\n\r\nI did look thru the arrow::r cpp source and couldnt find an obvious case where the underlying storage array would be an integer but also have the 'integer64' class attr assigned...\u00a0 A fix would either be to remove the integer64 class attr, or ensure that the underlying data store is a REALSXP instead of INTEGERSXP\r\n\r\nMy company's network policies wont let me upload the sample dataset, hoping to see if this triggers an immediate thoughts.\u00a0 If not, I can try to figure our how to upload the dataset or otherwise provide details from it as requested.\r\n\r\n\u00a0\r\n```java\n\r\n> arrow::write_feather(df[,list(testCol)][1], '~/test.feather')\r\n> test = arrow::read_feather('~/test.feather')\r\n> class(test$testCol)\r\n[1] \"integer64\" \"np.ulong\"\r\n> typeof(test$testCol)\r\n[1] \"integer\"\r\n\r\n> str(test)\r\nClasses \u2018tbl_df\u2019, \u2018tbl\u2019 and 'data.frame':       1 obs. of  1 variable: $ testCol:Error in as.character.integer64(object) :  REAL() can only be applied to a 'numeric', not a 'integer'\r\n\r\n\r\n#In the larger original dataset, it handles most columns properly, only the 'testCol' breaks things.  Note the difference:\r\n> typeof(df$goodCol)\r\n[1] \"double\"\r\n> class(df$goodCol)\r\n[1] \"integer64\" \"np.ulong\"\r\n\r\n> typeof(df$testCol)\r\n[1] \"integer\"\r\n> class(df$testCol)\r\n[1] \"integer64\" \"np.ulong\"\r\n\r\n> str(df)\r\nClasses \u2018data.table\u2019 and 'data.frame':  214781 obs. of  17 variables: \r\n$ goodCol        :integer64 1599777000000604025 ... \r\n$ testCol        :Error in as.character.integer64(object) :\r\n\r\n> sessionInfo()\r\nR version 3.6.1 (2019-07-05)Platform: x86_64-pc-linux-gnu (64-bit)Running under: Red Hat Enterprise Linux Server 7.7 (Maipo)\r\nMatrix products: defaultBLAS:   /usr/lib64/libblas.so.3.4.2LAPACK: /usr/lib64/liblapack.so.3.4.2locale: \r\n\r\n[1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C [9] LC_ADDRESS=C               LC_TELEPHONE=C[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C\r\n\r\nattached base packages:[1] stats     graphics  grDevices utils     datasets  methods   baseother attached packages:[1] data.table_1.13.0 bit64_4.0.5       bit_4.0.4loaded via a namespace (and not attached): [1] Rcpp_1.0.5           lattice_0.20-41      arrow_1.0.1 [4] assertthat_0.2.1     rappdirs_0.3.1       grid_3.6.1 [7] R6_2.4.1             jsonlite_1.7.1       magrittr_1.5[10] rlang_0.4.7          Matrix_1.2-18        vctrs_0.3.4[13] reticulate_1.14-9001 tools_3.6.1          glue_1.4.2[16] purrr_0.3.4          compiler_3.6.1       tidyselect_1.1.0\n```",
        "created_at": "2020-09-28T23:04:46.000Z",
        "updated_at": "2020-09-29T15:19:27.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-09-29T15:19:15.000Z"
    },
    "comments": [
        {
            "created_at": "2020-09-29T15:19:15.814Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10125?focusedCommentId=17204025) by Neal Richardson (npr):*\nIssue resolved by pull request 8292\n<https://github.com/apache/arrow/pull/8292>"
        }
    ]
}