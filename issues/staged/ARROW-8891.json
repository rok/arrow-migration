{
    "issue": {
        "title": "[C++] Split non-cast compute kernels into a separate shared library",
        "body": "***Note**: This issue was originally created as [ARROW-8891](https://issues.apache.org/jira/browse/ARROW-8891). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSince we are going to implement a lot more precompiled kernels, I am not sure it makes sense to require all of them to be compiled unconditionally just to get access to `compute::Cast`, which is needed in many different contexts.\r\n\r\nAfter ARROW-8792 is merged, I would suggest creating a plugin hook for adding a bundle of kernels from a shared library outside of libarrow.so, and then moving all the object code outside of Cast to something like libarrow_compute.so. Then we can change the CMake flags to compile Cast kernels always (?) and then opt in to building the additional kernels package separately",
        "created_at": "2020-05-22T14:44:49.000Z",
        "updated_at": "2022-10-04T08:26:18.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-06-08T14:28:48.127Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8891?focusedCommentId=17359395) by David Li (lidavidm):*\nI glanced at this, but since dictionary casts use Take, either we have to restore the non-Take implementation and duplicate code paths, include Take libarrow.so, or relegate dictionary casts to libarrow_compute.so."
        }
    ]
}