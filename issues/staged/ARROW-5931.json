{
    "issue": {
        "title": "[C++] Extend extension types facility to provide for serialization and deserialization in IPC roundtrips",
        "body": "***Note**: This issue was originally created as [ARROW-5931](https://issues.apache.org/jira/browse/ARROW-5931). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nA use case here is when an array needs to reference some external data. For example, suppose that we wanted to implement an array that references a sequence of Python objects as `PyObject*`. Obviously, a `PyObject*`\u00a0must be managed by the Python interpreter.\r\n\r\nFor a vector of some `T*` to be sent through the IPC machinery, it must be embedded in some Arrow type on the wire. For example, the memory resident version of `PyObject*`\u00a0might be 8-bytes per value (1 pointer per value) while being serialized to the binary IPC protocol, such `PyObject*` values must be serialized into an Arrow Binary type.",
        "created_at": "2019-07-12T17:55:30.000Z",
        "updated_at": "2021-08-05T14:38:12.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-08-05T14:37:39.319Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5931?focusedCommentId=17394070) by Antoine Pitrou (apitrou):*\nI think it would be rather weird to store a sequence of `PyObject*` as an extension array. The underlying storage data would have no well-defined meaning as far as Arrow is concerned. Extra care would also be needed when deallocating the array.\r\n\r\nI think we should reserve extension types for free-standing data, not handles or references to non-Arrow resources."
        }
    ]
}