{
    "issue": {
        "title": "[C++] StringBuilder::append(vector<string>...) not implemented",
        "body": "***Note**: This issue was originally created as [ARROW-2351](https://issues.apache.org/jira/browse/ARROW-2351). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nFor\u00a0`StringBuilder` an `append(vector<string>, uint8_t*)` function is\u00a0[declared](https://github.com/apache/arrow/blob/7b2c79765cf92760e1f8cca079159d9613b86412/cpp/src/arrow/builder.h#L721) and [documented](http://arrow.apache.org/docs/cpp/classarrow_1_1_string_builder.html#a59be34b5e11017a392b4ee019d90da3c) but it does not seem to be implemented.\r\n```java\n\r\nundefined reference to `arrow::StringBuilder::Append(std::vector<std::string, std::allocator<std::string> > const&, unsigned char*)'\r\ncollect2: error: ld returned 1 exit status\r\n```\r\nAlso worth noting is that the similar function in `NumericBuilder` uses `vector<bool>` for the null values instead of `uint8_t*`. It might be worth making them consistent.\r\n\r\n\u00a0",
        "created_at": "2018-03-25T02:19:56.000Z",
        "updated_at": "2018-04-04T12:33:33.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2018-04-03T08:59:01.000Z"
    },
    "comments": [
        {
            "created_at": "2018-04-03T08:59:01.321Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2351?focusedCommentId=16423694) by Uwe Korn (uwe):*\nIssue resolved by pull request 1803\n<https://github.com/apache/arrow/pull/1803>"
        },
        {
            "created_at": "2018-04-03T16:24:30.813Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2351?focusedCommentId=16424246) by Rares Vernica (rvernica):*\nThanks for addressing this. Shall I open a new JIRA issue for using `vector<bool> null_bytes` to make the API consistent as discussed earlier?"
        }
    ]
}