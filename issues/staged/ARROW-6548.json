{
    "issue": {
        "title": "[Python] consistently handle conversion of all-NaN arrays across types",
        "body": "***Note**: This issue was originally created as [ARROW-6548](https://issues.apache.org/jira/browse/ARROW-6548). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIn ARROW-5682 (https://github.com/apache/arrow/pull/5333), next to fixing actual conversion bugs, I added the ability to convert all-NaN float arrays when converting to string type (and only with `from_pandas=True`). So this now works:\r\n\r\n```Java\n\r\n>>> pa.array(np.array([np.nan, np.nan], dtype=float), type=pa.string(), from_pandas=True)\r\n<pyarrow.lib.StringArray object at 0x7f54dc9de830>\r\n[\r\n  null,\r\n  null\r\n]\r\n```\r\n\r\nHowever, I only added this for string type (and it already works for float and int types). If we are happy with this behaviour, we should also add it for other types.\r\n",
        "created_at": "2019-09-12T11:43:54.000Z",
        "updated_at": "2022-07-04T17:41:30.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": []
}