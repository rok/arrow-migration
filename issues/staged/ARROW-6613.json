{
    "issue": {
        "title": "[C++] Remove dependency on boost::filesystem",
        "body": "***Note**: This issue was originally created as [ARROW-6613](https://issues.apache.org/jira/browse/ARROW-6613). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSee ARROW-2196 for details.\r\nboost::filesystem should not be required for base functionality at least (including filesystems, probably).",
        "created_at": "2019-09-18T20:39:01.000Z",
        "updated_at": "2019-10-03T16:37:46.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-10-03T16:37:45.000Z"
    },
    "comments": [
        {
            "created_at": "2019-09-24T13:39:10.158Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6613?focusedCommentId=16936802) by Antoine Pitrou (apitrou):*\nboost::filesystem is used in conjuction with boost::process for testing Flight and S3FS. I don't think it's reasonable to reimplement boost::process.\r\n\r\nStill, we can try to make boost::filesystem unnecessary if tests are not built."
        },
        {
            "created_at": "2019-09-24T14:05:57.819Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6613?focusedCommentId=16936833) by Antoine Pitrou (apitrou):*\n`[~wesm]` We should perhaps discuss if it's really useful to have bare-bones no-boost build. We will probably end up copy-pasting some boost code along the way."
        },
        {
            "created_at": "2019-09-24T14:22:47.434Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6613?focusedCommentId=16936855) by Wes McKinney (wesm):*\nI think we should remove Boost as a dependency of the _core_ build. Which may mean not building certain modules (like the code in src/arrow/filesystem) by default. I think that should make things easier"
        },
        {
            "created_at": "2019-09-24T17:36:46.266Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6613?focusedCommentId=16937028) by Antoine Pitrou (apitrou):*\nI've started looking into this. There's some non-trivial Windows-specific code in boost::filesystem to handle reparse points and symlinks. It feels a bit counter-productive to copy/paste it without knowing exactly what it does."
        },
        {
            "created_at": "2019-09-25T05:00:37.306Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6613?focusedCommentId=16937407) by Wes McKinney (wesm):*\nI would suggest adding a `ARROW_FILESYSTEM` option, setting it to off by default, then handling the remaining usages of Boost in the core library-only build.\r\n\r\nI think it's fine to have boost::filesystem in src/arrow/filesystem. People who are making use of this functionality are probably more OK with accepting additional build dependencies. I would mainly like this stuff to be out of the way of people who are only using Array / ArrayBuilder / RecordBatch and IPC read/write tools"
        },
        {
            "created_at": "2019-09-25T07:28:13.881Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6613?focusedCommentId=16937478) by Antoine Pitrou (apitrou):*\nMuch of the functionality is in the core build (see `util/io_util.h`)."
        },
        {
            "created_at": "2019-10-03T16:37:46.140Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6613?focusedCommentId=16943725) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 5545\n<https://github.com/apache/arrow/pull/5545>"
        }
    ]
}