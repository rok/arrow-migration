{
    "issue": {
        "title": "[Rust][DataFusion] improve performance of building literal arrays",
        "body": "***Note**: This issue was originally created as [ARROW-8908](https://issues.apache.org/jira/browse/ARROW-8908). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n`[~andygrove]` \u00a0I was doing some profiling and noticed a potential performance improvement described below\r\n\r\n\r\nNOTE: The issue described below would be irrelevant if it was possible to use scalar comparison operations in DataFusion as described here:\r\nhttps://issues.apache.org/jira/browse/ARROW-8907\r\n\r\n\r\nthe `build_literal_array` function defined here https://github.com/apache/arrow/blob/master/rust/datafusion/src/execution/physical_plan/expressions.rs#L1204\r\ncreates an array of literal values using a loop, but from benchmarks it appears creating an array from vec is much faster \r\n(about 58 times faster when building an array with 100000 values).\r\nHere are the benchmark results:\r\n\r\narray builder/array from vec: time: [25.644 us 25.883 us 26.214 us]\r\narray builder/array from values: time: [1.4985 ms 1.5090 ms 1.5213 ms]\r\n\r\nhere is the benchmark code:\r\n```\r\nfn bench_array_builder(c: &mut Criterion) {\r\n let array_len = 100000;\r\n let mut count = 0;\r\n let mut group = c.benchmark_group(\"array builder\");\r\n\r\ngroup.bench_function(\"array from vec\", |b| b.iter(|| {\r\n let float_array: PrimitiveArray<Float32Type> = vec![1.0; array_len].into();\r\n count = float_array.len();\r\n }));\r\n println!(\"built array with {} values\", count);\r\n\r\ngroup.bench_function(\"array from values\", |b| b.iter(|| {\r\n // let float_array: PrimitiveArray<Float32Type> = build_literal_array(1.0, array_len);\r\n let mut builder = PrimitiveBuilder::<Float32Type>::new(array_len);\r\n for _ in 0..count {\r\n &builder.append_value(1.0);\r\n }\r\n let float_array = builder.finish();\r\n count = float_array.len();\r\n }));\r\n println!(\"built array with {} values\", count);\r\n}\r\n```",
        "created_at": "2020-05-23T11:05:49.000Z",
        "updated_at": "2021-04-26T13:18:08.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust - DataFusion",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-04-26T13:18:08.000Z"
    },
    "comments": [
        {
            "created_at": "2020-11-18T19:16:19.623Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8908?focusedCommentId=17234942) by Yordan Pavlov (yordan-pavlov):*\ndirect comparison to scalar values was implemented in <https://github.com/apache/arrow/pull/8660>\u00a0, making this issue obsolete"
        },
        {
            "created_at": "2021-04-26T13:18:07.170Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8908?focusedCommentId=17332284) by Andrew Lamb (alamb):*\nMigrated to github: https://github.com/apache/arrow-datafusion/issues/90"
        }
    ]
}