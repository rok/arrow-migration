{
    "issue": {
        "title": "[C++][Doc] Document that the strptime kernel ignores %Z",
        "body": "***Note**: This issue was originally created as [ARROW-15884](https://issues.apache.org/jira/browse/ARROW-15884). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nAfter ARROW-12820, the `strptime` kernel still ignores the `%Z` specifier (for timezone names), and when using it, it basically ignores any string.\r\n\r\nFor example:\r\n\r\n```python\n\r\n# the %z specifier now works (after ARROW-12820)\r\n>>> pc.strptime([\"2022-03-05 09:00:00+01\"], format=\"%Y-%m-%d %H:%M:%S%z\", unit=\"us\")\r\n<pyarrow.lib.TimestampArray object at 0x7f00c1dd21c0>\r\n[\r\n  2022-03-05 08:00:00.000000\r\n]\r\n\r\n# in theory this should give the same result, but %Z is still ignore\r\n>>> pc.strptime([\"2022-03-05 09:00:00 CET\"], format=\"%Y-%m-%d %H:%M:%S %Z\", unit=\"us\")\r\n<pyarrow.lib.TimestampArray object at 0x7f00c86d1ca0>\r\n[\r\n  2022-03-05 09:00:00.000000\r\n]\r\n\r\n# as a result any garbage in the string is also ignored\r\n>>> pc.strptime([\"2022-03-05 09:00:00 blabla\"], format=\"%Y-%m-%d %H:%M:%S %Z\", unit=\"us\")\r\n<pyarrow.lib.TimestampArray object at 0x7f00c1db1ca0>\r\n[\r\n  2022-03-05 09:00:00.000000\r\n]\r\n```\r\n\r\nI don't think it is easy to actually fix this (at least as long as we use the system strptime, see also https://github.com/apache/arrow/pull/11358#issue-1020404727). But at least we should document this limitation / gotcha.",
        "created_at": "2022-03-09T13:49:53.000Z",
        "updated_at": "2022-03-09T18:37:27.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Documentation",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": []
}