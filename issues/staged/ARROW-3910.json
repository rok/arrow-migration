{
    "issue": {
        "title": "[Python] Set date_as_object to True in *.to_pandas as default after deduplicating logic implemented",
        "body": "***Note**: This issue was originally created as [ARROW-3910](https://issues.apache.org/jira/browse/ARROW-3910). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSee discussion in ARROW-3899",
        "created_at": "2018-11-30T00:44:29.000Z",
        "updated_at": "2019-04-24T14:04:42.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-01-01T19:34:34.000Z"
    },
    "comments": [
        {
            "created_at": "2019-01-01T19:34:34.255Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3910?focusedCommentId=16731677) by Wes McKinney (wesm):*\nIssue resolved by pull request 3272\n<https://github.com/apache/arrow/pull/3272>"
        },
        {
            "created_at": "2019-01-15T15:07:06.824Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3910?focusedCommentId=16743126) by Krisztian Szucs (kszucs):*\n`[~wesmckinn]` `[~xhochy]` this change broke the dask(1.0.0) integration tests and the title is misleading too (it was setting date_as_object=None for 0.13 - changed it).\r\n\r\nWe're going to relase date_as_object=True with version 0.12. We need to either keep this change and create a dask issue to set date_as_objects=False in their ORC module: <https://github.com/dask/dask/blob/master/dask/dataframe/io/orc.py#L19> or just deprecate in this version and change the default value in 0.13."
        },
        {
            "created_at": "2019-01-15T16:20:43.248Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3910?focusedCommentId=16743194) by Wes McKinney (wesm):*\nDask should update \u2013 we decided not to go through a deprecation cycle"
        },
        {
            "created_at": "2019-01-15T21:31:12.162Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3910?focusedCommentId=16743412) by Jim Crist (jim.crist):*\nShould `to_pandas_dtype()` return object dtype for date types as well?\r\n\r\n```\r\nIn [1]: import pyarrow as pa\r\n\r\nIn [2]: pa.date32().to_pandas_dtype()\r\nOut[2]: dtype('<M8[ns]')\r\n```\r\n\r\nThis is what dask uses to infer pandas dtypes from an arrow schema."
        },
        {
            "created_at": "2019-01-16T15:18:57.619Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3910?focusedCommentId=16744139) by Wes McKinney (wesm):*\nYes, that should be changed (though depending on what argument is passed it still can be datetime64). Might consider a different code path to obtaining the pandas \"schema\" "
        },
        {
            "created_at": "2019-01-16T15:25:25.921Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3910?focusedCommentId=16744144) by Jim Crist (jim.crist):*\nI'm just trying to determine if we should also output objects for dates by default as well, and if so it'd be easiest if `pa.date32().to_pandas_dtype()` returned object, as that's our current code path. It's easy for us to explicitly set `date_as_object=False`, but it sounds like we should be using objects here instead of datetime64s."
        }
    ]
}