{
    "issue": {
        "title": "[R] Filter with regular expressions",
        "body": "***Note**: This issue was originally created as [ARROW-10305](https://issues.apache.org/jira/browse/ARROW-10305). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nHi,\r\n\r\nSome expressions, such as substr(), grepl(), str_detect() or others, are not supported while filtering a dataset (after open_datatset() ). Specifically, the code below :\r\n```java\n\r\nlibrary(dplyr)\r\nlibrary(arrow)\r\ndata = data.frame(a = c(\"a\", \"a2\", \"a3\"))\r\nwrite_parquet(data, \"Test_filter/data.parquet\")\r\nds <- open_dataset(\"Test_filter/\")\r\ndata_flt <- ds %>% \r\n filter(substr(a, 1, 1) == \"a\")\r\n```\r\ngives this error :\r\n```java\n\r\nError: Filter expression not supported for Arrow Datasets: substr(a, 1, 1) == \"a\"\r\n Call collect() first to pull data into R.\n```\r\nThese expressions may be very helpful, not to say necessary, to filter and collect a very large dataset. Is there anything it can be done to implement this new feature ?\r\n\r\nThank you.",
        "created_at": "2020-10-14T06:09:58.000Z",
        "updated_at": "2021-04-07T23:12:53.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-04-07T23:12:53.000Z"
    },
    "comments": [
        {
            "created_at": "2020-10-15T09:50:59.582Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10305?focusedCommentId=17214575) by Joris Van den Bossche (jorisvandenbossche):*\n`[~palgal]` Thanks for opening the issue. Such a substring matching filter is indeed not yet implemented. \r\n\r\nA first step to enable this, would be to have a \"compute kernel\" for substrings (from looking at the overview at https://github.com/apache/arrow/blob/master/docs/source/cpp/compute.rst, I don't think we currently have functionality to create such substrings). \r\nA related compute kernel is actually `match_substring` with which you could check that (using your example) \"a\" is present in the string. But, that doesn't easily guarantee anything about the position of the substring in the string (although with a regular expression pattern, you could achieve this in some ways).\r\n\r\nThen, a second step would be to be able to \"express\" such a compute kernel in an Expression that can be used to filter the dataset (although this might not be needed for the dplyr syntax? It could maybe also be done with an actual compute filter kernel? cc `[~npr]`?). "
        },
        {
            "created_at": "2020-10-15T14:59:32.328Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10305?focusedCommentId=17214762) by Neal Richardson (npr):*\nIn terms of compute kernels, I think at least some of the pattern matching and extraction is happening in\u00a0ARROW-10195.\r\n\r\nAnother missing piece, which `[~bkietz]` \u00a0was writing up a JIRA for, is being able to create dataset expressions that call any arbitrary compute function. "
        },
        {
            "created_at": "2021-04-07T23:12:53.508Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10305?focusedCommentId=17316779) by Neal Richardson (npr):*\nMarking this as resolved; many string operations will be included in the 4.0 release and any remaining ones have their own JIRAs."
        }
    ]
}