{
    "issue": {
        "title": "[JS] Arrow Tutorial: Common data types",
        "body": "***Note**: This issue was originally created as [ARROW-7513](https://issues.apache.org/jira/browse/ARROW-7513). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe JS client lacks basic introductory material around creating the common basic data types such as turning JS arrays into ints, dicts, etc. There is no equivalent of Python's\u00a0<https://arrow.apache.org/docs/python/data.html>\u00a0. This has made use for myself difficult, and I bet for others.\r\n\r\n\u00a0\r\n\r\nAs with prev tutorials, I started sketching on\u00a0<https://observablehq.com/@lmeyerov/rich-data-types-in-apache-arrow-js-efficient-data-tables-wit>\u00a0 . When we're happy can make sense to export as an html or something to the repo, or just link from the main readme.\r\n\r\nI believe the target topics worth covering are:\r\n \\* Common user data types: Ints, Dicts, Struct, Time\r\n \\* Common column types: Data, Vector, Column\r\n \\* Going from individual & arrays & buffers of JS values to Arrow-wrapped forms, and basic inspection of the result\r\n\r\nNot worth going into here is Tables vs. RecordBatches, which is the other tutorial.\r\n\r\n\u00a0\r\n\r\n1. Ideas of what to add/edit/remove?\r\n\r\n2. And anyone up for helping with discussion of Data vs. Vector, and ingest of Time & Struct?\r\n\r\n3. ... Should we be encouraging Struct or Map? I saw some PRs changing stuff here.\r\n\r\n\u00a0\r\n\r\ncc `[~wesm]` `[~bhulette]` [~paul.e.taylor]\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0",
        "created_at": "2020-01-08T02:55:18.000Z",
        "updated_at": "2020-09-16T04:43:31.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: JavaScript",
            "Type: task"
        ],
        "closed": true,
        "closed_at": "2020-01-24T16:19:58.000Z"
    },
    "comments": [
        {
            "created_at": "2020-01-08T15:13:28.823Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7513?focusedCommentId=17010761) by Brian Hulette (bhulette):*\nThanks for doing this Leo!\r\nI just have one suggestion after a brief look this morning. I think Data should be considered a low-level API (and maybe even a private one?), and we should direct users to create Vectors directly with the builders, or with the `from` static initializers (which defer to the builders)."
        },
        {
            "created_at": "2020-01-08T17:48:48.990Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7513?focusedCommentId=17010870) by Leo Meyerovich (lmeyerov):*\nAgreed, I'll see about forking this into Part I & Part II, where Part I is high-level api and move the Data stuff to Part II.\u00a0\r\n\r\n\u00a0\r\n\r\nI'm stumped on `structs` and `nested structs` though, any recs/examples?"
        },
        {
            "created_at": "2020-01-09T06:04:38.831Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7513?focusedCommentId=17011451) by Leo Meyerovich (lmeyerov):*\n- Good: Updated the numerics section to use `VectorT.from(Array | Buffer)`\n   \\*\\* Oddly,\u00a0arrow.Int64Vector.from((new Uint32Array([2,3, 555,0, 1,0])).buffer) returns length 6, not 3 (0.15.0)\n   \\* Bad:`VectorDictionary.from(['hello', 'hello', null, 'carrot'])` did not seem to work, so kept as lower-level for now\n   \\* Bad: Still not sure how to do structs"
        },
        {
            "created_at": "2020-01-10T18:30:55.787Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7513?focusedCommentId=17013120) by Paul Taylor (paul.e.taylor):*\n`[~lmeyerov]` Int64Vector and Uint64Vector.from methods either require you pass the JS BigInt types, or a second \"is64bit\" boolean argument: https://github.com/apache/arrow/blob/master/js/src/vector/int.ts#L63-L64. All the IntVectors share the same from implementation IIRC because of a limitation in the typescript compiler that may not exist anymore."
        },
        {
            "created_at": "2020-01-10T20:43:16.762Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7513?focusedCommentId=17013192) by Leo Meyerovich (lmeyerov):*\nGreat, thanks Paul, I cleaned up the int64vector stuff + initial struct stuff. Two last q's and we're done w/ Part I!\r\n\r\n\u00a0\r\n \\* Is there a clean way to create a utf8 dict? I could do VectorUtf8.from([\"str1\", ...]), but no VectorDictionary.from, even with opts.\u00a0\r\n \\* For a table col w/ a nested struct, any way to slice out a subcol, e.g., nick_col = tbl.get('richName').get('nick')\r\n\r\n\u00a0"
        },
        {
            "created_at": "2020-01-10T21:51:10.526Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7513?focusedCommentId=17013225) by Leo Meyerovich (lmeyerov):*\nWorked w/ paul a bit, and part 1 is done afaict. See updated live link.\r\n\r\n\u00a0\r\n\r\nNext step:\r\n\r\n\u2013 any review is good\r\n\r\n\u2013 I can update the main readme to point to it\r\n\r\n\u00a0\r\n\r\nLater:\r\n\r\n\u2013 bring back lower-level data.new and builders as part ii\r\n\r\n\u2013 paul points out the helper structVector.getChildByName (slice-by-name) should really be built-in, and can be a nice first pr for someone"
        },
        {
            "created_at": "2020-01-10T22:29:54.280Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7513?focusedCommentId=17013248) by Leo Meyerovich (lmeyerov):*\n... OK PR is up:\u00a0<https://github.com/apache/arrow/pull/6163>"
        },
        {
            "created_at": "2020-01-16T22:41:36.149Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7513?focusedCommentId=17017539) by Leo Meyerovich (lmeyerov):*\n_nudge:_\u00a0 [~paul.e.taylor]\u00a0 / `[~bhulette]` \u00a0 - need to do anything to get the PR link merged?\r\n\r\n\u00a0\r\n\r\nNeed to take care of some things, and then will see about extracting Part II out from the earlier versions on Data+Builders."
        },
        {
            "created_at": "2020-01-24T16:19:59.020Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7513?focusedCommentId=17023065) by Brian Hulette (bhulette):*\nIssue resolved by pull request 6163\n<https://github.com/apache/arrow/pull/6163>"
        },
        {
            "created_at": "2020-01-24T18:11:39.348Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7513?focusedCommentId=17023149) by Leo Meyerovich (lmeyerov):*\nThanks Brian! I'm slammed for another ~2w, and then will work on Part II.\r\n\r\n\u00a0\r\n\r\nThe other thing I realized that is missing here is charts showing [] vs Arrow perf (speed + mem use)."
        }
    ]
}