{
    "issue": {
        "title": "[C++] Implement min_max kernel for array[string]",
        "body": "***Note**: This issue was originally created as [ARROW-13410](https://issues.apache.org/jira/browse/ARROW-13410). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nAs noted in https://github.com/pandas-dev/pandas/issues/42597, `pyarrow.compute.min_max` on a string dtype array currently raises. Here's an example from Python\r\n\r\n{{\r\nIn [1]: import pyarrow, pyarrow.compute\r\n\r\nIn [2]: a = pyarrow.array(['c', 'a', 'b'])\r\n\r\nIn [4]: pyarrow.compute.min_max(a)\r\n---------------------------------------------------------------------------\r\nArrowNotImplementedError                  Traceback (most recent call last)\r\n<ipython-input-4-d557440fe5aa> in <module>\r\n----> 1 pyarrow.compute.min_max(a)\r\n\r\n~/miniconda3/envs/pandas=1.3.0/lib/python3.9/site-packages/pyarrow/compute.py in min_max(array, options, memory_pool, \\*\\*kwargs)\r\n\r\n~/miniconda3/envs/pandas=1.3.0/lib/python3.9/site-packages/pyarrow/_compute.pyx in pyarrow._compute.Function.call()\r\n\r\n~/miniconda3/envs/pandas=1.3.0/lib/python3.9/site-packages/pyarrow/error.pxi in pyarrow.lib.pyarrow_internal_check_status()\r\n\r\n~/miniconda3/envs/pandas=1.3.0/lib/python3.9/site-packages/pyarrow/error.pxi in pyarrow.lib.check_status()\r\n\r\nArrowNotImplementedError: Function min_max has no kernel matching input types (array[string])\r\n}}\r\n",
        "created_at": "2021-07-20T12:19:02.000Z",
        "updated_at": "2022-04-20T12:00:51.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-04-20T12:00:51.000Z"
    },
    "comments": [
        {
            "created_at": "2021-09-01T08:45:10.688Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13410?focusedCommentId=17407971) by Eduardo Ponce (edponce):*\nA simple algorithm for finding the min/max string between a pair of strings:\r\n```c++\n\r\nfor (int i = 0; i < std::min(s1.size(), s2.size()); ++i) {\r\n        // They are different, one is greater than the other\r\n        if (s1[i] > s2[i]) return s1;  // for min return s2\r\n        if (s1[i] < s2[i]) return s2;  // for min return s1\r\n    }\r\n    // At least one is empty string, longest string is max\r\n    return (s1.size() > s2.size()) ? s1 : s2;  // swap s1/s2 for min\r\n```\r\n\r\nThen use this function for a running min/max to get the result.\r\nFor UTF8 inputs, codepoints are decoded and compared instead."
        },
        {
            "created_at": "2021-09-09T02:37:02.500Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13410?focusedCommentId=17412289) by Eduardo Ponce (edponce):*\nActually the std::string library supports comparing strings in the same manner.\r\nAnd there is a [std::minmax](https://en.cppreference.com/w/cpp/algorithm/minmax) function as well."
        },
        {
            "created_at": "2022-01-27T16:52:26.009Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13410?focusedCommentId=17483268) by Antoine Pitrou (apitrou):*\n`[~edponce]` Are you still willing to work on this? Otherwise, can you please unassign?"
        },
        {
            "created_at": "2022-01-27T20:48:45.282Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13410?focusedCommentId=17483428) by Eduardo Ponce (edponce):*\nNot working on this at the moment."
        },
        {
            "created_at": "2022-04-20T12:00:51.665Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13410?focusedCommentId=17524921) by Antoine Pitrou (apitrou):*\nThis was actually fixed in ARROW-13882 and released in 6.0.0."
        }
    ]
}