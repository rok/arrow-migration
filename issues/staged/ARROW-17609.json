{
    "issue": {
        "title": "[R] Streamline some C++ calls",
        "body": "***Note**: This issue was originally created as [ARROW-17609](https://issues.apache.org/jira/browse/ARROW-17609). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen looking at profiling data of TPC-H queries on ARROW-17462, there was some added overhead (not a ton: tens of ms, but enough to trigger benchmark regressions on small data) from the extra expression type calculation. It's not a huge deal, but I saw a few places where we could avoid doing unnecessary work:\r\n\r\n- Memoize Expression$type calculation\n- Defer Expression$schema determination (calls UnifySchema on expression args' schemas)--most expressions don't ever need it (ARROW-13186)\n- Set Expression$scalar type at creation so we don't have to query it\n- Eliminate the .fields() R function and move logic into Schema constructor--it creates a bunch of Field R6 objects that immediately are dropped",
        "created_at": "2022-09-04T13:20:30.000Z",
        "updated_at": "2022-10-10T20:11:31.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-10-10T20:11:31.379Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17609?focusedCommentId=17615296) by Neal Richardson (npr):*\nTo clarify: it seems that the cost is in instantiating the R6 objects, not the calls to C++ themselves. But memoizing, deferring, etc. in these cases would save going to C++ to create a new R6 object."
        }
    ]
}