{
    "issue": {
        "title": "[Java] Minor types don't account for nullable FieldType flag",
        "body": "***Note**: This issue was originally created as [ARROW-999](https://issues.apache.org/jira/browse/ARROW-999). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCalling e.g. `FLOAT4.getNewVector(\"foo\", new FieldType(false, ...), ...)\" returns a NullableFloat4Vector instead of a Float4Vector.\nedit: Float4Vector doesn't implement FieldVector, so can't currently be a top-level vector. I'm confused as to what the nullable flag is supposed to represent then.",
        "created_at": "2017-05-10T14:16:14.000Z",
        "updated_at": "2019-04-17T15:35:57.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2017-05-10T14:33:35.967Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-999?focusedCommentId=16004773) by Emilio Lahr-Vivaz (elahrvivaz):*\nSo it seems from the layout (https://github.com/apache/arrow/blob/master/format/Layout.md) that all vectors have a null bitarray, however it doesn't have to be populated if there are no null values. So is the intention that the Field nullable flag should just control the creation of the null bitarray?"
        },
        {
            "created_at": "2017-05-10T18:12:43.708Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-999?focusedCommentId=16005137) by Jacques Nadeau (jnadeau):*\nYou probably need to update the vectors so that they set all the bits to null if they have \"no-nulls\". The goal was to only have nullable types in the java implementation as we found maintaining two parallel sets of vectors an extra level of complexity."
        },
        {
            "created_at": "2017-05-10T18:25:43.279Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-999?focusedCommentId=16005169) by Emilio Lahr-Vivaz (elahrvivaz):*\nThanks, maybe I should update this issue to be 'implement non-nullable FieldVectors'? Is that something that would be desirable to implement, or would it introduce too much complexity? It seems like it would provide a performance improvement in the non-nullable case."
        },
        {
            "created_at": "2017-05-11T05:30:55.243Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-999?focusedCommentId=16005908) by Jacques Nadeau (jnadeau):*\nI've previously found that it adds excessive complexity (earlier versions of Arrow maintained them more as alternatives to the nullable versions). We've generally found that once you do vectorized operations, word-wise or wider bitmap evals are rarely the performance bottleneck."
        }
    ]
}