{
    "issue": {
        "title": "[C++][Plasma] Memory not released until Plasma process is killed",
        "body": "***Note**: This issue was originally created as [ARROW-8861](https://issues.apache.org/jira/browse/ARROW-8861). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nInvoking the `Delete(const ObjectID& object_id)` method of a plasma client seems not really to free up the memory used by the object.\r\n\r\nTo reproduce:\r\n 1. use `htop` (or other similar tools) to monitor memory usage;\r\n 2. start up the Plasma Object Store by `plasma_store -m 1000000000 -s /tmp/plasma`;\r\n 3. use `put.py` to put an object into Plasma;\r\n 4. compile and run `delete.cc` (`g++ delete.cc `pkg-config --cflags --libs arrow plasma` --std=c++11 -o delete`);\r\n 5. kill the `plasma_store` process.\r\n\r\nMemory usage drops at Step 5, rather than Step 4.\r\n\r\nHow to free up the memory while keeping Plasma Object Store running?\r\n\r\n`put.py`:\r\n```java\n\r\nfrom pyarrow import plasma\r\n\r\nif __name__ == \"__main__\":\r\n    client = plasma.connect(\"/tmp/plasma\")\r\n    object_id = plasma.ObjectID(20 * b\"a\")\r\n    object_size = 500000000\r\n    buffer = memoryview(client.create(object_id, object_size))\r\n    for i in range(500000000):\r\n        buffer[i] = i % 128\r\n    client.seal(object_id)\r\n    client.disconnect()\r\n```\r\n`delete.cc`:\r\n```java\n\r\n#include \"arrow/util/logging.h\"\r\n#include <plasma/client.h>\r\n\r\nusing namespace plasma;\r\n\r\nint main(int argc, char **argv)\r\n{\r\n    PlasmaClient client;\r\n    ARROW_CHECK_OK(client.Connect(\"/tmp/plasma\"));\r\n    ObjectID object_id = ObjectID::from_binary(\"aaaaaaaaaaaaaaaaaaaa\");\r\n\r\n    client.Delete(object_id);\r\n\r\n    ARROW_CHECK_OK(client.Disconnect());\r\n}\r\n```\r\n\u00a0",
        "created_at": "2020-05-19T15:54:48.000Z",
        "updated_at": "2022-10-12T15:35:25.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++ - Plasma",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2020-05-21T02:57:54.549Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8861?focusedCommentId=17112747) by Abe Mammen (abemammen):*\nAny update on this issue? I see the same problem in 0.17.0. Is there a suggested workaround?"
        },
        {
            "created_at": "2022-10-12T15:35:25.493Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8861?focusedCommentId=17616525) by Joris Van den Bossche (jorisvandenbossche):*\nNot an answer to you actual issue, but note that Plasma is deprecated (see ARROW-17860 and the email thread that is linked there)\r\n"
        }
    ]
}