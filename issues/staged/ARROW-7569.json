{
    "issue": {
        "title": "[Python] Add API to map Arrow types to pandas ExtensionDtypes for to_pandas conversions",
        "body": "***Note**: This issue was originally created as [ARROW-7569](https://issues.apache.org/jira/browse/ARROW-7569). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nARROW-2428 was about adding such a mapping, and described three use cases (see this [comment](https://issues.apache.org/jira/browse/ARROW-2428?focusedCommentId=16914231&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16914231) for details):\r\n\r\n- Basic roundtrip based on the pandas_metadata (in `to_pandas`, we check if the pandas_metadata specify pandas extension dtypes, and if so, use this as the target dtype for that column)\n- Conversion for pyarrow extension types that can define their equivalent pandas extension dtype\n- A way to override default conversion (eg for the built-in types, or in absence of pandas_metadata in the schema). This would require the user to be able to specify some mapping of pyarrow type or column name to the pandas extension dtype to use.\n  \n  The PR that closed ARROW-2428 (https://github.com/apache/arrow/pull/5512) only covered the first two cases, and not the third case.\n  \n  I think it is still interesting to also cover the third case in some way.  \n  \n  An example use case are the new nullable dtypes that are introduced in pandas (eg the nullable integer dtype).  Assume I want to read a parquet file into a pandas DataFrame using this nullable integer dtype. The pyarrow Table has no pandas_metadata indicating to use this dtype (unless it was created from a pandas DataFrame that was already using this dtype, but that will often not be the case), and the pyarrow.int64() type is also not an extension type that can define its equivalent pandas extension dtype. \n  Currently, the only solution is first read it into pandas DataFrame (which will use floats for the integers if there are nulls), and then afterwards to convert those floats back to a nullable integer dtype. \n  \n  A possible API for this could look like:\n  \n  ```Java\n  \n  table.to_pandas(types_mapping={pa.int64(): pd.Int64Dtype()})\n  ```\n  \n  to indicate that you want to convert all columns of the pyarrow table with int64 type to a pandas column using the nullable Int64 dtype.\n   \n  \n  \n  \n  \n",
        "created_at": "2020-01-14T11:04:24.000Z",
        "updated_at": "2020-01-23T17:42:53.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-01-23T17:42:53.000Z"
    },
    "comments": [
        {
            "created_at": "2020-01-23T17:42:53.319Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7569?focusedCommentId=17022303) by Neal Richardson (npr):*\nIssue resolved by pull request 6189\n<https://github.com/apache/arrow/pull/6189>"
        }
    ]
}