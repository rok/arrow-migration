{
    "issue": {
        "title": "[CI][C++] march not passing correctly for docker-compose run",
        "body": "***Note**: This issue was originally created as [ARROW-8992](https://issues.apache.org/jira/browse/ARROW-8992). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n<https://github.com/apache/arrow/issues/7307>\r\n\r\nBuilding on the new ASUS Tinker Edge T, running Mendel Linux 4.0 (Day). docker-compose build commands work fine with no errors:\r\n DEBIAN=10 ARCH=arm64v8 docker-compose build debian-cpp && DEBIAN=10 ARCH=arm64v8 docker-compose build debian-python\r\n\r\nDEBIAN=10 ARCH=arm64v8 docker-compose run debian-python - fails with the following:\r\n\r\n\u2013 Running cmake for pyarrow\r\n cmake -DPYTHON_EXECUTABLE=/usr/local/bin/python -G Ninja -DPYARROW_BUILD_CUDA=off -DPYARROW_BUILD_FLIGHT=on -DPYARROW_BUILD_GANDIVA=on -DPYARROW_BUILD_DATASET=on -DPYARROW_BUILD_ORC=on -DPYARROW_BUILD_PARQUET=on -DPYARROW_BUILD_PLASMA=on -DPYARROW_BUILD_S3=off -DPYARROW_BUILD_HDFS=off -DPYARROW_USE_TENSORFLOW=off -DPYARROW_BUNDLE_ARROW_CPP=off -DPYARROW_BUNDLE_BOOST=off -DPYARROW_GENERATE_COVERAGE=off -DPYARROW_BOOST_USE_SHARED=on -DPYARROW_PARQUET_USE_SHARED=on -DCMAKE_BUILD_TYPE=debug /arrow/python\r\n \u2013 The C compiler identification is GNU 8.3.0\r\n \u2013 The CXX compiler identification is GNU 8.3.0\r\n \u2013 Check for working C compiler: /usr/lib/ccache/gcc\r\n \u2013 Check for working C compiler: /usr/lib/ccache/gcc \u2013 works\r\n \u2013 Detecting C compiler ABI info\r\n \u2013 Detecting C compiler ABI info - done\r\n \u2013 Detecting C compile features\r\n \u2013 Detecting C compile features - done\r\n \u2013 Check for working CXX compiler: /usr/lib/ccache/g++\r\n \u2013 Check for working CXX compiler: /usr/lib/ccache/g++ \u2013 works\r\n \u2013 Detecting CXX compiler ABI info\r\n \u2013 Detecting CXX compiler ABI info - done\r\n \u2013 Detecting CXX compile features\r\n \u2013 Detecting CXX compile features - done\r\n \u2013 System processor: aarch64\r\n \u2013 Performing Test CXX_SUPPORTS_ARMV8_ARCH\r\n \u2013 Performing Test CXX_SUPPORTS_ARMV8_ARCH - Failed\r\n \u2013 Arrow build warning level: PRODUCTION\r\n CMake Error at cmake_modules/SetupCxxFlags.cmake:338 (message):\r\n Unsupported arch flag: -march=.\r\n Call Stack (most recent call first):\r\n CMakeLists.txt:100 (include)\r\n\r\n\u2013 Configuring incomplete, errors occurred!\r\n See also \"/build/python/temp.linux-aarch64-3.7/CMakeFiles/CMakeOutput.log\".\r\n See also \"/build/python/temp.linux-aarch64-3.7/CMakeFiles/CMakeError.log\".\r\n error: command 'cmake' failed with exit status 1\r\n\r\nTried the tarball release for both 0.17.0 and 0.17.1, same result. Also tried compiling manually (following these instructions:\u00a0<https://dzone.com/articles/building-pyarrow-with-cuda-support>) with the same result.\r\n\r\nOnly modifications I made to source are editing the docker-compose volumes, as described here:\u00a0<https://github.com/apache/arrow/pull/6907>\r\n\r\nJira opened, per request at:\u00a0<https://github.com/apache/arrow/issues/7307>",
        "created_at": "2020-05-31T16:36:11.000Z",
        "updated_at": "2021-08-04T09:25:30.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Packaging",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-08-04T09:25:30.000Z"
    },
    "comments": [
        {
            "created_at": "2020-06-01T02:00:18.997Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8992?focusedCommentId=17120693) by Yibo Cai (yibocai):*\nHi `[~edk4971]`, you're building on aarch64 platform, from below log, no -march parameter is set.\r\n```c\n\r\nUnsupported arch flag: -march=.\r\n```\r\nThis should not happen as it defaults to \"armv8-a\" if\u00a0ARROW_ARMV8_ARCH is not set explicitly on command line.\r\n You mentioned you modified code per <https://github.com/apache/arrow/pull/6907>, will you double check that you apply that patch cleanly, especially below line in cpp/cmake_modules/DefineOptions.cmake?\r\n <https://github.com/apache/arrow/pull/6907/files#diff-b048bf4c1679dce1028fd897a7c43b93R113>"
        },
        {
            "created_at": "2020-06-02T02:23:58.902Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8992?focusedCommentId=17121506) by Elliott Kipp (edk4971):*\nI only modified the volumes section of the docker-compose, (per\u00a0<https://github.com/apache/arrow/pull/6907#issuecomment-612940401>) I didn't apply the rest of the patch. I believe I did a pull of the master at one point too, with the same result, but I'll double check tomorrow.\u00a0"
        },
        {
            "created_at": "2020-06-03T10:10:49.831Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8992?focusedCommentId=17124821) by Elliott Kipp (edk4971):*\nI pulled the master down last night and let it compile overnight - exact same result. I didn't change anything in the master, which should have the patches listed above."
        },
        {
            "created_at": "2020-06-04T06:25:47.745Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8992?focusedCommentId=17125577) by Yibo Cai (yibocai):*\nI don't know why the error, not familiar with these docker compose scripts.\r\nOne dirty workaround I can figure out is to hard code \"-march=armv8-a\" at line https://github.com/apache/arrow/blob/dc8cd4fd4d60018e3d195b784c562af04d30bf66/cpp/cmake_modules/SetupCxxFlags.cmake#L58"
        },
        {
            "created_at": "2020-06-04T14:20:36.131Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8992?focusedCommentId=17125954) by Wes McKinney (wesm):*\n`[~kszucs]` can you help with this?"
        },
        {
            "created_at": "2020-06-04T16:39:29.214Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8992?focusedCommentId=17126064) by Krisztian Szucs (kszucs):*\nYes, will take a look."
        },
        {
            "created_at": "2020-06-10T03:26:42.979Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8992?focusedCommentId=17130014) by Elliott Kipp (edk4971):*\nAbove \"dirty workaround\" worked, except I applied it to arrow/python/cmake_modules/SetupCxxFlags.cmake rather than the cpp folder.\r\n\r\nIt's still compiling, it takes a few hours on 1GB of RAM, but it made it past the point where it typically fails. If anything else fails, I'll let you know. Thanks!"
        },
        {
            "created_at": "2020-06-11T00:21:34.271Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8992?focusedCommentId=17132799) by Elliott Kipp (edk4971):*\nNo compilation failures but it failed 3 tests, all seem to be related to /arrow/testing/data/flight/root-ca.pem not being found."
        },
        {
            "created_at": "2020-07-24T17:04:42.585Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8992?focusedCommentId=17164539) by Tristan Shoemaker (tshoem):*\nI am encountering the same error while trying to build on an rpi4b with 64bit ARM, and hardcoding the flag does not work for me.\u00a0\r\n\r\n`check_cxx_compiler_flag` still returns false. `\"armv8-a\"` is listed as a valid flag (and the most broad) to be passed to `-march` in the gcc documentation for 64 bit arm chips, and I checked that the ARM cortex A-72 does in fact use that architecture.\u00a0\r\n\r\nAny help would be greatly appreciated!"
        },
        {
            "created_at": "2020-08-18T02:15:56.679Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8992?focusedCommentId=17179305) by Yibo Cai (yibocai):*\nGuess below PR may address this issue\r\n <https://github.com/apache/arrow/pull/7982>"
        },
        {
            "created_at": "2021-01-27T10:23:38.732Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8992?focusedCommentId=17272744) by Antoine Pitrou (apitrou):*\n`[~edk4971]` Can you try again with a recent Arrow version and report the result?"
        },
        {
            "created_at": "2021-08-04T09:25:30.548Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8992?focusedCommentId=17392910) by Antoine Pitrou (apitrou):*\nClosing due to lack of feedback. Feel free to open a new JIRA if you can reproduce with the latest released Arrow version."
        }
    ]
}