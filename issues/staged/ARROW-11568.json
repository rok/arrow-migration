{
    "issue": {
        "title": "[C++][Compute] Mode kernel performance is bad in some conditions",
        "body": "***Note**: This issue was originally created as [ARROW-11568](https://issues.apache.org/jira/browse/ARROW-11568). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nComparing with scipy.stats.mode, arrow mode kernel is much slower in some conditions. See below example.\r\n\r\n```\n\r\nIn [1]: import numpy as np\r\n\r\nIn [2]: import scipy.stats\r\n\r\nIn [3]: import pyarrow.compute as pc\r\n\r\nIn [4]: f = np.random.rand(12345678)\r\n\r\nIn [5]: time scipy.stats.mode(f)\r\nCPU times: user 1.14 s, sys: 111 ms, total: 1.25 s\r\nWall time: 1.25 s\r\nOut[5]: ModeResult(mode=array([2.25710692e-08]), count=array([1]))\r\n\r\nIn [6]: time pc.mode(f)[0]\r\nCPU times: user 8.44 s, sys: 338 ms, total: 8.77 s\r\nWall time: 8.77 s\r\nOut[6]: <pyarrow.StructScalar: {'mode': 2.2571069235866048e-08, 'count': 1}>\r\n\r\nIn [7]: i = np.random.randint(0, 1234567, 12345678)\r\n\r\nIn [8]: time scipy.stats.mode(i)\r\nCPU times: user 1.03 s, sys: 3.11 ms, total: 1.03 s\r\nWall time: 1.03 s\r\nOut[8]: ModeResult(mode=array([607002]), count=array([28]))\r\n\r\nIn [9]: time pc.mode(i)[0]\r\nCPU times: user 1.57 s, sys: 0 ns, total: 1.57 s\r\nWall time: 1.57 s\r\nOut[9]: <pyarrow.StructScalar: {'mode': 607002, 'count': 28}>\r\n```",
        "created_at": "2021-02-09T04:56:53.000Z",
        "updated_at": "2021-04-15T15:24:10.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-04-15T15:23:55.000Z"
    },
    "comments": [
        {
            "created_at": "2021-04-06T08:54:37.573Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11568?focusedCommentId=17315355) by yibocai#1 (yibocai#1):*\nscipy.stats.mode calls numpy.unique to do the jobs.\r\nnumpy.unique sorts the array and counts same values. It looks a better approach than arrow approach, which stores value counts to a map.\r\nBoth has O(n) space. Arrow's map approach only outperforms numpy when there are many duplicated values (> 100 for each value), which looks not useful.\r\nI think numpy's sort and count approach is better."
        },
        {
            "created_at": "2021-04-15T15:23:55.451Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11568?focusedCommentId=17322268) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 10009\n<https://github.com/apache/arrow/pull/10009>"
        }
    ]
}