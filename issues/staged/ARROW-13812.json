{
    "issue": {
        "title": "[C++] Valgrind failure in Grouper.BooleanKey (uninitialized values)",
        "body": "***Note**: This issue was originally created as [ARROW-13812](https://issues.apache.org/jira/browse/ARROW-13812). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nFrom the [nightlies](https://dev.azure.com/ursacomputing/crossbow/_build/results?buildId=10785&view=logs&j=0da5d1d9-276d-5173-c4c4-9d4d4ed14fdb&t=d9b15392-e4ce-5e4c-0c8c-b69645229181&l=4978).\r\n```\n\r\n[ RUN      ] Grouper.BooleanKey\r\n==11849== Conditional jump or move depends on uninitialised value(s)\r\n==11849==    at 0x4122555: arrow::TestInitialized(arrow::ArrayData const&) (gtest_util.cc:675)\r\n==11849==    by 0x431604: arrow::compute::(anonymous namespace)::ValidateOutput(arrow::ArrayData const&) (test_util.cc:202)\r\n==11849==    by 0x431F94: arrow::compute::ValidateOutput(arrow::Datum const&) (test_util.cc:235)\r\n==11849==    by 0x40010B: arrow::compute::TestGrouper::ValidateConsume(arrow::compute::ExecBatch const&, arrow::Datum const&) (hash_aggregate_test.cc:380)\r\n==11849==    by 0x400C03: arrow::compute::TestGrouper::ConsumeAndValidate(arrow::compute::ExecBatch const&, arrow::Datum*) (hash_aggregate_test.cc:364)\r\n==11849==    by 0x410BD5: ExpectConsume (hash_aggregate_test.cc:318)\r\n==11849==    by 0x410BD5: arrow::compute::TestGrouper::ExpectConsume(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (hash_aggregate_test.cc:307)\r\n==11849==    by 0x410F74: arrow::compute::Grouper_BooleanKey_Test::TestBody() (hash_aggregate_test.cc:415)\r\n==11849==    by 0x5D7398D: void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (in /opt/conda/envs/arrow/lib/libgtest.so)\r\n==11849==    by 0x5D73BE0: testing::Test::Run() (in /opt/conda/envs/arrow/lib/libgtest.so)\r\n==11849==    by 0x5D73F0E: testing::TestInfo::Run() (in /opt/conda/envs/arrow/lib/libgtest.so)\r\n==11849==    by 0x5D74035: testing::TestSuite::Run() (in /opt/conda/envs/arrow/lib/libgtest.so)\r\n==11849==    by 0x5D745EB: testing::internal::UnitTestImpl::RunAllTests() (in /opt/conda/envs/arrow/lib/libgtest.so)\r\n==11849==    by 0x5D74858: testing::UnitTest::Run() (in /opt/conda/envs/arrow/lib/libgtest.so)\r\n==11849==    by 0x421207E: main (in /opt/conda/envs/arrow/lib/libgtest_main.so)\r\n==11849== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:_ZN5arrow15TestInitializedERKNS_9ArrayDataE\r\n   fun:_ZN5arrow7compute12_GLOBAL__N_114ValidateOutputERKNS_9ArrayDataE\r\n   fun:_ZN5arrow7compute14ValidateOutputERKNS_5DatumE\r\n   fun:_ZN5arrow7compute11TestGrouper15ValidateConsumeERKNS0_9ExecBatchERKNS_5DatumE\r\n   fun:_ZN5arrow7compute11TestGrouper18ConsumeAndValidateERKNS0_9ExecBatchEPNS_5DatumE\r\n   fun:ExpectConsume\r\n   fun:_ZN5arrow7compute11TestGrouper13ExpectConsumeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\r\n   fun:_ZN5arrow7compute23Grouper_BooleanKey_Test8TestBodyEv\r\n   fun:_ZN7testing8internal35HandleExceptionsInMethodIfSupportedINS_4TestEvEET0_PT_MS4_FS3_vEPKc\r\n   fun:_ZN7testing4Test3RunEv\r\n   fun:_ZN7testing8TestInfo3RunEv\r\n   fun:_ZN7testing9TestSuite3RunEv\r\n   fun:_ZN7testing8internal12UnitTestImpl11RunAllTestsEv\r\n   fun:_ZN7testing8UnitTest3RunEv\r\n   fun:main\r\n} \n```",
        "created_at": "2021-08-31T11:28:08.000Z",
        "updated_at": "2021-09-02T07:14:32.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-09-02T07:14:24.000Z"
    },
    "comments": [
        {
            "created_at": "2021-08-31T20:02:52.043Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13812?focusedCommentId=17407629) by David Li (lidavidm):*\nSo what's going on here took me a while to unwind, but:\r\n \\* We're generating the array of unique values for a bool.\r\n \\* Ultimately this happens in BitUtil::bytes_to_bits. This reads 8 bytes and packs them into one byte.\r\n \\* The buffer it reads is generated by EncoderInteger::Decode. This writes data into a buffer given to it.\r\n \\* The buffer given to it ultimately stems from a TempVectorStack, whose memory is not initialized.\r\n\r\nAnd in this test case, we're generating an array of 3 bools. So from Valgrind's perspective, we're taking 3 bytes and 5 garbage bytes and packing it into one garbage byte. I think the solution should be to always round up to 8 bytes."
        },
        {
            "created_at": "2021-09-02T07:14:24.780Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13812?focusedCommentId=17408608) by Yibo Cai (yibocai):*\nIssue resolved by pull request 11041\n<https://github.com/apache/arrow/pull/11041>"
        }
    ]
}