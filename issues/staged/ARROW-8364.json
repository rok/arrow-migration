{
    "issue": {
        "title": "[Python] Get Access to the type_to_type_id dictionary",
        "body": "***Note**: This issue was originally created as [ARROW-8364](https://issues.apache.org/jira/browse/ARROW-8364). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nHi,\r\n### **The Problem:**\r\n\r\nCurrently, if I try to serialize and it can't be serialized by the default serialization context I get\u00a0\r\nSerializationCallbackError. So the problem is that I have to try to serialize the object in order to know if it is serializable by the package. That can be a very expensive operation for a simple check if the object contains a large amount of data.\r\n\u00a0\r\n### **The**\u00a0**Requested**\u00a0 **Improvement / Feature** **:**\r\n\u00a0\r\nA\u00a0function that checks if the type of the object I'm about to serialize is serializable by the package (meaning it is registered under the\u00a0type_to_type_id dictionary).\u00a0\u00a0\r\n\u00a0",
        "created_at": "2020-04-07T14:13:18.000Z",
        "updated_at": "2020-04-09T14:35:36.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2020-04-09T12:54:53.404Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8364?focusedCommentId=17079301) by Joris Van den Bossche (jorisvandenbossche):*\n`[~archybald]` can you give a concrete code example?"
        },
        {
            "created_at": "2020-04-09T14:21:12.309Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8364?focusedCommentId=17079392) by Or (archybald):*\nOf course,\r\n\r\n\u00a0\r\n\r\nThe code is [here](https://codeshare.io/G8d0Pe)\r\n\r\n\u00a0\r\n\r\n```Java\n\r\ndef is_serializable(obj_type: type) -> bool:\r\n    return obj_type in type_to_type_id.keys()\r\n```"
        }
    ]
}