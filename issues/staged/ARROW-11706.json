{
    "issue": {
        "title": "[JS] Better BigInt compatibility check",
        "body": "***Note**: This issue was originally created as [ARROW-11706](https://issues.apache.org/jira/browse/ARROW-11706). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSee: https://github.com/apache/arrow/pull/9110\r\n\r\nCheck for whether `BigInt64ArrayAvailable` and `BigUint64ArrayAvailable` are available, rather than just `BigIntAvailable`. Recent versions of JavaScriptCore/WebKit in Safari support `BigInt` but do not support `BigInt64Array`, and so anything that relies on `BigInt64Array` will fail despite `BigIntAvailable` being true.\r\n\r\nThe manifestation of this issue can be seen when trying to run the following within Safari on a table that contains bigints:\r\n```java\n\r\nRecordBatchJSONWriter.writeAll(table).toString(true)\r\n\r\nmessage: \"BigUint64Array is not available in this environment\"\r\n  BigUint64ArrayUnavailableError\r\n  BigUint64ArrayUnavailable\r\n  bignumToString\r\n  bigNumsToStrings\r\n  generatorResume@[native code]\r\n  performIteration@[native code]\r\n  visitInt\r\n  visit\r\n  map@[native code]\r\n  recordBatchToJSON\r\n  close\r\n  finish\r\n  global code\r\n```\r\n\r\nSee also: https://bugs.webkit.org/show_bug.cgi?id=190800",
        "created_at": "2021-02-20T03:07:32.000Z",
        "updated_at": "2022-04-19T01:21:20.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: JavaScript",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-04-19T01:21:20.371Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11706?focusedCommentId=17523972) by Dominik Moritz (domoritz):*\nI think this can be closed, no? "
        }
    ]
}