{
    "issue": {
        "title": "[C++][CSV] Support MM/DD/YYYY date format",
        "body": "***Note**: This issue was originally created as [ARROW-8111](https://issues.apache.org/jira/browse/ARROW-8111). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently, date parser supports only YYYY-MM-DD format. For our workload we need MM/DD/YYYY format. It is obvious that CSV parser should support different date formats, so we may start from implementing\u00a0MM/DD/YYYY format.\u00a0\r\n\r\nAlso, we may use some date parsing library, which would solve the problem for us.\r\n\r\nAlso, we may need to somehow specify a format for every column in CSV parser.\u00a0\r\n\r\nIf you have any implementation ideas in mind, please share, so that I can implement it.\u00a0",
        "created_at": "2020-03-13T11:48:41.000Z",
        "updated_at": "2022-02-23T13:17:16.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-05-05T18:13:06.000Z"
    },
    "comments": [
        {
            "created_at": "2020-03-13T12:52:00.079Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8111?focusedCommentId=17058702) by Antoine Pitrou (apitrou):*\nThat sounds like a good idea (though it might confuse our US users :-)).\r\nThe parsing code is in `arrow/util/parsing.h`."
        },
        {
            "created_at": "2020-03-13T14:21:04.654Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8111?focusedCommentId=17058769) by Artem Alekseev (fexolm):*\n`[~apitrou]`, yeah, I saw it, and I was able to patch it to support\u00a0DD/MM/YYYY, but I'm not sure that adding just this format would be good enough to merge it in upstream. If it is ok, then I could just publish my patch, if its not, then we need to think about the more general solution of supporting more standard formats, or even custom time format.\u00a0"
        },
        {
            "created_at": "2020-03-13T14:27:22.440Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8111?focusedCommentId=17058775) by Antoine Pitrou (apitrou):*\nI think it would be good start. Supporting more formats unambiguously is probably a bit delicate."
        },
        {
            "created_at": "2020-03-13T14:28:49.860Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8111?focusedCommentId=17058777) by Francois Saint-Jacques (fsaintjacques):*\nAnd if you do, ensure to write the equialent JSON parser test so we benefit from both!"
        },
        {
            "created_at": "2020-03-13T14:31:48.603Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8111?focusedCommentId=17058783) by Wes McKinney (wesm):*\nThis is related to ARROW-3739 which would provide support for strptime-compatible format strings. It doesn't sound sustainable for you to be maintaining patched versions of the code so it would be good to have a solution in the main project "
        },
        {
            "created_at": "2020-03-13T14:33:20.357Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8111?focusedCommentId=17058785) by Wes McKinney (wesm):*\nNote we could recognize certain common strptime patterns (e.g. `\"%m/%d/%Y\"`) and use a more optimized / specialized code path for parsing. "
        },
        {
            "created_at": "2020-03-13T14:34:53.423Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8111?focusedCommentId=17058788) by Antoine Pitrou (apitrou):*\nI'm not sure we should gold-plate it :-) For now recognizing an additional, widespread hard-coded format sounds good."
        },
        {
            "created_at": "2020-03-13T15:03:26.831Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8111?focusedCommentId=17058819) by Wes McKinney (wesm):*\nRight, but in terms of creating a public API to expose this functionality, I think it would be better to be explicit about what format is expected rather than unconditionally making an inference (in this particular case, the inference could be wrong if the data is of US origin \u2013 since we use MM/DD/YYYY). If the user indicates a format that is not supported yet we can say so"
        },
        {
            "created_at": "2020-03-16T08:57:20.447Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8111?focusedCommentId=17060042) by Artem Alekseev (fexolm):*\nOk, thanks, folks! I'll create a draft patch soon to discuss more in detail."
        },
        {
            "created_at": "2020-03-16T09:58:53.930Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8111?focusedCommentId=17060082) by Artem Alekseev (fexolm):*\nOh, I found that we actually needed US\u00a0MM/DD/YYYY format, so I will rename the issue :)\u00a0\r\nAlso, for disambiguate US and EU formats we can add explicit locale param to the parser."
        },
        {
            "created_at": "2020-05-05T18:13:06.332Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8111?focusedCommentId=17100158) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 7088\n<https://github.com/apache/arrow/pull/7088>"
        }
    ]
}