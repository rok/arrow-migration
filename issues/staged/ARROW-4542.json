{
    "issue": {
        "title": "[C++][Parquet] Denominate row group size in bytes (not in no of rows)",
        "body": "***Note**: This issue was originally created as [ARROW-4542](https://issues.apache.org/jira/browse/ARROW-4542). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nBoth the C++ [implementation of parquet writer for arrow](https://github.com/apache/arrow/blob/master/cpp/src/parquet/arrow/writer.cc#L1174) and the [Python code bound to it](https://github.com/apache/arrow/blob/master/python/pyarrow/_parquet.pyx#L911) appears denominated in the **number of rows** (without making it very explicit). Whereas:\r\n\r\n(1) [The Apache parquet documentation](https://parquet.apache.org/documentation/latest/) states:\u00a0\r\n\r\n\"_Row group size: Larger row groups allow for larger column chunks which makes it possible to do larger sequential IO. Larger groups also require more buffering in the write path (or a two pass write). **We recommend large row groups (512MB - 1GB)**. Since an entire row group might need to be read, we want it to completely fit on one HDFS block. Therefore, HDFS block sizes should also be set to be larger. An optimized read setup would be: 1GB row groups, 1GB HDFS block size, 1 HDFS block per HDFS file._\"\r\n\r\n(2) Reference Apache [parquet-mr implementation](https://github.com/apache/parquet-mr/blob/master/parquet-hadoop/src/main/java/org/apache/parquet/hadoop/InternalParquetRecordWriter.java#L146) for Java accepts the row size expressed in bytes.\r\n\r\n(3) The [low-level parquet read-write example](https://github.com/apache/arrow/blob/master/cpp/examples/parquet/low-level-api/reader-writer2.cc#L88) also considers row group be denominated in bytes.\r\n\r\nThese\u00a0insights make me conclude that:\r\n \\* Per parquet design and to take advantage of HDFS block level operations, it only makes sense to work with row group sizes as expressed in bytes - as that is the only consequential desire the caller can\u00a0utter and want to influence.\r\n \\* Arrow implementation of ParquetWriter would benefit from re-nominating its `row_group_size` into bytes. I will also note it is impossible to use pyarrow to shape equally byte-sized row groups as the size the row group takes is post-compression and the caller only know how much uncompressed data they have managed to put in.\r\n\r\nNow, my conclusions can be wrong and I may be blind to some alley of reasoning, so this ticket is more of a question than a bug. A question on whether the audience here agrees with my reasoning and if not - to explain what detail I have missed.\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0",
        "created_at": "2019-02-12T14:42:54.000Z",
        "updated_at": "2021-08-04T09:19:55.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2019-02-12T15:14:06.291Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4542?focusedCommentId=16766133) by Wes McKinney (wesm):*\nHaving the option to size based on number of bytes is reasonable, however it is not necessarily trivial to implement. If you would like to help with this, please be our guest"
        },
        {
            "created_at": "2019-02-12T16:04:40.217Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4542?focusedCommentId=16766188) by Remek Zajac (remek.zajac@gmail.com):*\nThanks for the prompt feedback\u00a0 `[~wesmckinn]` - glad you agree with my reasoning. Sure - i know it ain't trivial. I saw what parquet-mr does. I will wait for the ticket to cool off a bit and/or collect more feedback. And thanks for inviting my contribution. We may find time to help here depending how much it ends up hurting us compared to other places that hurt too."
        },
        {
            "created_at": "2020-01-30T17:39:07.036Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4542?focusedCommentId=17026870) by Antoine Pitrou (apitrou):*\n[~remek.zajac@gmail.com] Are you still willing to work on this?"
        }
    ]
}