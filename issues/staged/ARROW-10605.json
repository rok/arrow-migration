{
    "issue": {
        "title": "[C++][Gandiva] Support Decimal256 type in gandiva computation.",
        "body": "***Note**: This issue was originally created as [ARROW-10605](https://issues.apache.org/jira/browse/ARROW-10605). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThere might be a lot of work here, so sub-jiras might be added once scope is determined.",
        "created_at": "2020-11-16T04:18:14.000Z",
        "updated_at": "2021-01-23T04:22:25.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++ - Gandiva",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2020-12-18T14:42:07.476Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10605?focusedCommentId=17251792) by Kirill Lykov (klykov):*\nI might be interested in helping with it, but I need more details."
        },
        {
            "created_at": "2021-01-23T04:22:25.512Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10605?focusedCommentId=17270546) by Micah Kornfield (emkornfield):*\nsorry for the delayed reply.\u00a0 `[~klykov]` \u00a0this is mostly looking into what operations gandiva currently supports and replicating them for Decimal256 (there are still some basic math/logic operations that aren't supported).\u00a0 Probably a few sub-work items here."
        }
    ]
}