{
    "issue": {
        "title": "[C++] CSV add skip rows after column names",
        "body": "***Note**: This issue was originally created as [ARROW-12661](https://issues.apache.org/jira/browse/ARROW-12661). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSome programs generate csv files with additional descriptive information about the columns on a row after the names. For files like this it would be nice to have an option which reads the first row as column names and then can skip those rows after the names.\r\n\r\nThis could probably be implemented easily as either another option parallel ReadOptions::skip_rows or a boolean which indicates if skipping should occur before or after the column names are read.",
        "created_at": "2021-05-05T20:08:27.000Z",
        "updated_at": "2021-06-07T15:52:12.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-06-07T15:51:53.000Z"
    },
    "comments": [
        {
            "created_at": "2021-05-10T12:18:52.790Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12661?focusedCommentId=17341871) by Joris Van den Bossche (jorisvandenbossche):*\nSome general comments about potential ways to provide this functionality (using the pandas.read_csv API as reference):\r\n\r\n- Pandas by default skips empty lines (Arrow does the same, but is more strict: a single white space is already considered as non-empty) and also has a `comments` keyword with which you can define a character and if your row starts with this character, it is skipped. Both might already cover part of the use cases where one want to skip rows after the header.\n- In pandas.read_csv, the `skiprows` keyword can either take an integer (number of rows from start of the file) or a list of integers (exact list of 0-based indices of rows to skip). This way, you can skip rows after the header with a single, flexible keyword (and also with a single keyword skip rows both before and after the header, eg with `[0, 2]` if the header is on the second row)."
        },
        {
            "created_at": "2021-05-10T12:21:43.965Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12661?focusedCommentId=17341873) by Joris Van den Bossche (jorisvandenbossche):*\ncc `[~apitrou]`"
        },
        {
            "created_at": "2021-05-10T12:24:08.475Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12661?focusedCommentId=17341876) by Antoine Pitrou (apitrou):*\nI think an additional option `ReadOptions::skip_rows_after_header` (or similarly named) would be reasonable."
        },
        {
            "created_at": "2021-05-10T14:20:35.731Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12661?focusedCommentId=17341933) by Nate Clark (neworld):*\nSorry, I wrote this in the PR first, so repeating it here.\r\n\r\nIs the preferred solution the current implementation of `ReadOptions::skip_rows_after_header or the more flexible approach of turning skip_rows into a vector of indexes to skip. While the first does fulfill the original request of this ticket I do like the flexibility offered by the row ranges to skip. If the ranges is preferred I think it makes sense for me to work on ARROW-12675 so that the absolute row is known throughout the parser layers`"
        },
        {
            "created_at": "2021-06-07T15:51:53.715Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12661?focusedCommentId=17358679) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 10255\n<https://github.com/apache/arrow/pull/10255>"
        }
    ]
}