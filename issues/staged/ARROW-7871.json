{
    "issue": {
        "title": "[Python] Expose more compute kernels",
        "body": "***Note**: This issue was originally created as [ARROW-7871](https://issues.apache.org/jira/browse/ARROW-7871). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently only the sum kernel is exposed.\r\n\r\nOr consider to deprecate/remove the pyarrow.compute module, and bind the compute kernels as methods instead.",
        "created_at": "2020-02-17T20:59:45.000Z",
        "updated_at": "2020-10-01T21:12:29.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-10-01T21:12:26.000Z"
    },
    "comments": [
        {
            "created_at": "2020-02-18T07:45:53.992Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7871?focusedCommentId=17038858) by Joris Van den Bossche (jorisvandenbossche):*\nThe `arrow.compute` module was only just added (ARROW-7493, https://github.com/apache/arrow/pull/6123), so why would we remove it? cc `[~uwe]`\r\n\r\nNow, on that PR I asked a question that was not further discussed:  \r\nQuestion for longer term: do we want to use those compute functions in the Array methods? (to avoid a duplicated implementation (not that the implementation is very long though, since it is only calling the c++ method))"
        },
        {
            "created_at": "2020-03-24T14:17:31.218Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7871?focusedCommentId=17065811) by Uwe Korn (uwe):*\nI would vouch to expose more kernels there instead of removing them. The main intent of having this module is have all kernels in a clear defined namespace which is not the top-level `pyarrow` one.\r\n\r\nYou cannot use the `pyarrow.compute`\u00a0module in the Array methods as this would introduce a cyclic dependency but you can directly call the C++ methods there."
        },
        {
            "created_at": "2020-03-24T22:21:16.541Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7871?focusedCommentId=17066229) by Wes McKinney (wesm):*\n> You cannot use the pyarrow.compute module in the Array methods as this would introduce a cyclic dependency but you can directly call the C++ methods there.\r\n\r\nI don't think this would be an issue. Since we explicitly add symbols to `pyarrow.*` in pyarrow/__init__.py we could do the same thing in pyarrow/compute.py. This would spare code duplication by having a single point of contact with each C++ kernel"
        },
        {
            "created_at": "2020-04-27T02:59:30.486Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7871?focusedCommentId=17092958) by Wes McKinney (wesm):*\nI'm working on a plan (as discussed on the mailing list) that will make exposing kernels in Python (or bindings) substantially easier, so I assigned this to myself for now"
        },
        {
            "created_at": "2020-05-25T20:26:21.152Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7871?focusedCommentId=17116244) by Wes McKinney (wesm):*\nThis is extremely easy now since functions/kernels can now be exposed in pure Python using only their names. "
        },
        {
            "created_at": "2020-05-25T20:27:13.377Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7871?focusedCommentId=17116245) by Wes McKinney (wesm):*\nI unassigned the issue from myself. Perhaps some others can write a PR that adds simple wrappers to `pyarrow.compute.call_function` for the missing function types"
        },
        {
            "created_at": "2020-09-03T06:55:10.905Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7871?focusedCommentId=17189878) by Joris Van den Bossche (jorisvandenbossche):*\nIn the meantime, quite some more kernels are exposed in `pyarrow.compute`. Do we have an idea which ones are still missing?\r\n\r\n(@arw2019 you were maybe looking at this?)"
        },
        {
            "created_at": "2020-09-03T07:01:04.710Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7871?focusedCommentId=17189882) by Joris Van den Bossche (jorisvandenbossche):*\nSo still quite some not exposed:\r\n\r\n```python\n\r\n\r\nimport pyarrow.compute as pc                                                                                                                                                                              \r\nregistry = pc.function_registry()                                                                                                                                                                         \r\nregistered_functions = registry.list_functions()                                                                                                                                                          \r\nexposed_functions = [f for f in dir(pc) if not (f.startswith(\"_\") or f[0].isupper())]                                                                                                                     \r\n\r\nIn [32]: set(exposed_functions) - set(registered_functions)                                                                                                                                                        \r\nOut[32]: \r\n{'ascii_is_digit',\r\n 'ascii_is_numeric',\r\n 'call_function',\r\n 'function_registry',\r\n 'pa'}\r\n\r\nIn [33]: set(registered_functions) - set(exposed_functions)                                                                                                                                                        \r\nOut[33]: \r\n{'add_checked',\r\n 'and',\r\n 'and_kleene',\r\n 'array_filter',\r\n 'array_take',\r\n 'ascii_is_space',\r\n 'count',\r\n 'dictionary_encode',\r\n 'divide',\r\n 'divide_checked',\r\n 'index_in',\r\n 'index_in_meta_binary',\r\n 'invert',\r\n 'is_in',\r\n 'is_in_meta_binary',\r\n 'mean',\r\n 'min_max',\r\n 'mode',\r\n 'multiply_checked',\r\n 'or',\r\n 'or_kleene',\r\n 'partition_nth_indices',\r\n 'sort_indices',\r\n 'strptime',\r\n 'subtract_checked',\r\n 'unique',\r\n 'utf8_is_space',\r\n 'value_counts',\r\n 'xor'}\r\n```"
        },
        {
            "created_at": "2020-09-06T20:47:16.603Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7871?focusedCommentId=17191373) by Andrew Wieteska (arw2019):*\n`[~jorisvandenbossche]` thanks for posting this list! Working on a PR on this. \r\n\r\nA side question: do we want to add a compute functions page in the docs? I think we don't have one right now"
        },
        {
            "created_at": "2020-09-30T19:33:32.804Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7871?focusedCommentId=17204976) by Joris Van den Bossche (jorisvandenbossche):*\n I think this issue is actually solved with Antoine's recent PR to automatically add all kernels as functions to the pyarrow.compute namespace? (and Andrew's PR to have better docs)"
        }
    ]
}