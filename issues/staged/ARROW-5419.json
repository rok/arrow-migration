{
    "issue": {
        "title": "[C++] CSV strings_can_be_null option doesn't respect all null_values",
        "body": "***Note**: This issue was originally created as [ARROW-5419](https://issues.apache.org/jira/browse/ARROW-5419). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nRelates to\u00a0ARROW-5195\u00a0and\u00a0<https://github.com/apache/arrow/issues/4184>\r\n\r\nI was testing the new **strings_can_be_null** ConvertOption (built from git 184b8deb651c6f6308c0fa2a595f5a40f5da8ce8) in conjunction with the CSV reader and noted that when enabled and an empty string is parsed that it doesn't return NULL despite '' being in the default null_values list (<https://github.com/apache/arrow/blob/f7ef65e5fc367f1f5649dfcea0754e413fcca394/cpp/src/arrow/csv/options.cc#L28)>\r\n```java\n\r\noptions.null_values = {\"\", \"#N/A\", \"#N/A N/A\", \"#NA\", \"-1.#IND\", \"-1.#QNAN\",\r\n\"-NaN\", \"-nan\", \"1.#IND\", \"1.#QNAN\", \"N/A\", \"NA\",\r\n\"NULL\", \"NaN\", \"n/a\", \"nan\", \"null\"};\r\n```\r\nGiven that the **strings_can_be_null**\u00a0option was added to expose the same NULL processing functionality with respect to strings as\u00a0**pandas.read_csv,**\u00a0I believe that it should also be able to handle empty strings.\u00a0\\*\\*\u00a0\r\n\r\nIn Pandas:\r\n```java\n\r\ncontent = b\"a,b\\n1,null\\n2,\\n3,test\"\r\ndf = pd.read_csv(io.BytesIO(content))\r\nprint(df)\r\n\u00a0\u00a0 a \u00a0 \u00a0 b\r\n0\u00a0 1 \u00a0 NaN\r\n1\u00a0 2 \u00a0 NaN\r\n2\u00a0 3\u00a0 test\r\n```\r\nIn PyArrow:\r\n```java\n\r\nconvert_options = pc.ConvertOptions(strings_can_be_null=True)\r\ntable = pc.read_csv(io.BytesIO(content), convert_options=convert_options)\r\nprint(table.to_pydict())\r\nOrderedDict([('a', [1, 2, 3]), ('b', [None, '', 'test'])])\r\n```\r\n\u00a0\r\n\r\n\u00a0",
        "created_at": "2019-05-25T19:29:04.000Z",
        "updated_at": "2019-05-29T06:31:41.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-05-29T06:31:41.000Z"
    },
    "comments": [
        {
            "created_at": "2019-05-27T08:59:43.268Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5419?focusedCommentId=16848741) by Joris Van den Bossche (jorisvandenbossche):*\nAs a sidenote: an \"empty\" field is the default in pandas' `to_csv` to represent missing values. So it would indeed be good to support this when reading back in. \r\n\r\nRelated to this I was thinking whether we want to differentiate between empty field and actual quoted empty string, but I suppose this is not that easy (as once parsed, both are identical?). Also pandas' read_csv does not seem to differentiate."
        },
        {
            "created_at": "2019-05-27T11:44:20.702Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5419?focusedCommentId=16848864) by Antoine Pitrou (apitrou):*\nI thought it would be useful to differentiate between the empty string and explicit null values, but I can change it."
        },
        {
            "created_at": "2019-05-27T15:01:05.417Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5419?focusedCommentId=16849007) by Antoine Pitrou (apitrou):*\n`[~jorisvandenbossche]` It is possible to differentiate between quoted and non-quoted at the CSV conversion level (the information is kept around)."
        },
        {
            "created_at": "2019-05-27T20:20:21.348Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5419?focusedCommentId=16849185) by Wes McKinney (wesm):*\nWe probably need to have a discussion about the default null values \u2013 it might make sense to set the more extensive default list at the application level"
        },
        {
            "created_at": "2019-05-27T20:49:08.561Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5419?focusedCommentId=16849196) by Antoine Pitrou (apitrou):*\nThere's ARROW-4091 open for that ;-)"
        },
        {
            "created_at": "2019-05-29T06:31:41.286Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5419?focusedCommentId=16850539) by Micah Kornfield (emkornfield@gmail.com):*\nIssue resolved by pull request 4396\n<https://github.com/apache/arrow/pull/4396>"
        }
    ]
}