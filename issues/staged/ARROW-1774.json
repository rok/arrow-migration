{
    "issue": {
        "title": "[C++] Add \"view\" function to create zero-copy views for compatible types, if supported",
        "body": "***Note**: This issue was originally created as [ARROW-1774](https://issues.apache.org/jira/browse/ARROW-1774). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSimilar to NumPy's `ndarray.view`, but with the restriction that the input and output types have the same physical Arrow memory layout. This might be as simple as adding a \"zero copy only\" option to the existing `Cast` kernel",
        "created_at": "2017-11-06T21:54:18.000Z",
        "updated_at": "2019-06-11T19:38:41.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-06-11T19:38:26.000Z"
    },
    "comments": [
        {
            "created_at": "2019-06-03T14:50:46.942Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1774?focusedCommentId=16854672) by Antoine Pitrou (apitrou):*\nWhat is meant here by \"same physical memory layout\"? For example, should we allow a view of int32 as float32? If so, it's not the same thing as casting."
        },
        {
            "created_at": "2019-06-11T19:38:26.864Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1774?focusedCommentId=16861401) by Wes McKinney (wesm):*\nIssue resolved by pull request 4482\n<https://github.com/apache/arrow/pull/4482>"
        }
    ]
}