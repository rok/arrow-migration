{
    "issue": {
        "title": "[Python] datetime.timedelta to pyarrow.duration('us') silently overflows",
        "body": "***Note**: This issue was originally created as [ARROW-15026](https://issues.apache.org/jira/browse/ARROW-15026). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n\u00a0\r\n\r\nHi! This reproduces the issue:\r\n```java\n\r\n# python 3.9.9\r\n# pyarrow 6.0.1\r\nimport datetime\r\nimport pyarrow\r\nd = datetime.timedelta(days=-106751992, seconds=71945, microseconds=224192)\r\npyarrow.scalar(d)\r\n# <pyarrow.DurationScalar: datetime.timedelta(days=-106751992, seconds=71945, microseconds=224192)>\r\npyarrow.scalar(d).as_py() == d\r\n# True\r\nd2 = d - datetime.timedelta(microseconds=1)\r\npyarrow.scalar(d2)\r\n# <pyarrow.DurationScalar: datetime.timedelta(days=106751991, seconds=14454, microseconds=775807)>\r\npyarrow.scalar(d2).as_py() == d2\r\n# False\n```\r\nOther conversions (e.g. to int\\*) raise an exception instead. I didn't check if duration overflows for too large timedeltas. If its easy to fix, point me in the right direction and I try to create a PR. Thanks\r\n\r\n\u00a0",
        "created_at": "2021-12-08T13:51:08.000Z",
        "updated_at": "2022-11-16T05:03:16.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-11-15T18:19:42.000Z"
    },
    "comments": [
        {
            "created_at": "2021-12-09T10:59:46.051Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15026?focusedCommentId=17456348) by Joris Van den Bossche (jorisvandenbossche):*\nThanks for the report!\r\n\r\nThe conversion of a datetime.timedelta object to the underlying integer value (how it is stored in Arrow) happens here: https://github.com/apache/arrow/blob/53ab5a000431d97fe8b2afec40034b8287bd44be/cpp/src/arrow/python/datetime.h#L149-L153 \r\nThat indeed doesn't check for overflow. We do have some utilities to do additions / multiplications with checking for overflow, see eg `MultiplyWithOverflow`.\r\n\r\nIf you are interested, a PR is certainly welcome!"
        },
        {
            "created_at": "2021-12-09T19:21:50.549Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15026?focusedCommentId=17456691) by Andreas Rappold (!evil):*\nThanks, I tried but wasn't fully successful, see\r\n\r\n<https://github.com/notEvil/arrow/tree/ARROW-15026>\r\n\r\nWith 2 additional header files exposed to the python build (the internal and one dependency) it compiles and does prevent conversions. At this stage I thought someone more experienced should take over because it would take me ages to get all the details right."
        },
        {
            "created_at": "2022-11-15T18:19:42.483Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15026?focusedCommentId=17634472) by Will Jones (willjones127):*\nIssue resolved by pull request 13718\n<https://github.com/apache/arrow/pull/13718>"
        }
    ]
}