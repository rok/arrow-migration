{
    "issue": {
        "title": "[C++] More graceful solution for handling non-zero offsets on inputs and outputs in compute library",
        "body": "***Note**: This issue was originally created as [ARROW-1524](https://issues.apache.org/jira/browse/ARROW-1524). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently we must remember to shift by the offset. We should add some inline utility functions to centralize this logic.",
        "created_at": "2017-09-11T14:31:00.000Z",
        "updated_at": "2017-10-26T02:28:48.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2017-10-26T02:28:48.000Z"
    },
    "comments": [
        {
            "created_at": "2017-10-24T18:40:11.784Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1524?focusedCommentId=16217428) by Wes McKinney (wesm):*\nThis is quite urgent as many of the cast kernel implementations do not properly account for the offset, and so if used on sliced arrays at present will yield incorrect results"
        },
        {
            "created_at": "2017-10-26T02:28:48.987Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1524?focusedCommentId=16219870) by Wes McKinney (wesm):*\nResolved in https://github.com/apache/arrow/commit/54d5c81af0a9cbc6ea551922c795728cd43bd86c"
        }
    ]
}