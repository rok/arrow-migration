{
    "issue": {
        "title": "Segfault in ",
        "body": "***Note**: This issue was originally created as [ARROW-10691](https://issues.apache.org/jira/browse/ARROW-10691). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n> // src/buffer.rs:657\n> ///\u00a0Ensures\u00a0that\u00a0this\u00a0buffer\u00a0has\u00a0at\u00a0least\u00a0`capacity`\u00a0slots\u00a0in\u00a0this\u00a0buffer.\u00a0This\u00a0will\n> ///\u00a0also\u00a0ensure\u00a0the\u00a0new\u00a0capacity\u00a0will\u00a0be\u00a0a\u00a0multiple\u00a0of\u00a064\u00a0bytes.\n> ///\n> ///\u00a0Returns\u00a0the\u00a0new\u00a0capacity\u00a0for\u00a0this\u00a0buffer.\n> pub\u00a0fn\u00a0reserve(&mut\u00a0self,\u00a0capacity:\u00a0usize)\u00a0->\u00a0Result<usize>\u00a0{\n> if\u00a0capacity\u00a0>\u00a0self.capacity\u00a0{\n> let\u00a0new_capacity\u00a0=\u00a0bit_util::round_upto_multiple_of_64(capacity);\n> let\u00a0new_capacity\u00a0=\u00a0cmp::max(new_capacity,\u00a0self.capacity\u00a0\\*\u00a02);\n> let\u00a0new_data\u00a0=\n> unsafe\u00a0\\{\u00a0memory::reallocate(self.data,\u00a0self.capacity,\u00a0new_capacity)\u00a0};\n> self.data\u00a0=\u00a0new_data\u00a0as\u00a0\\*mut\u00a0u8;\n> self.capacity\u00a0=\u00a0new_capacity;\n> }\n> Ok(self.capacity)\n> }\r\n\u00a0\r\nAbove code is not checking if new_data is null, which is causing segfault on following memcpy when reallocate failed.",
        "created_at": "2020-11-23T04:52:09.000Z",
        "updated_at": "2020-11-23T04:57:11.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-11-23T04:57:11.000Z"
    },
    "comments": []
}