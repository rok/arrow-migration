{
    "issue": {
        "title": "[C++] Implement an \"inline visitor\" template that enables visitor-pattern-like code without virtual function dispatch",
        "body": "***Note**: This issue was originally created as [ARROW-621](https://issues.apache.org/jira/browse/ARROW-621). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nFor performance-sensitive dynamic dispatch, the current visitor pattern may be suboptimal due to having two virtual function dispatches per invocation. For example, we might have:\n\n```Java\nArrayVisitor* visitor = ...;\nRETURN_NOT_OK(array->Accept(visitor));\n```\n\nFor certain types of visitors, it may be possible to create a reusable pattern like:\n\n```Java\ntemplate <typename VISITOR>\nStatus VisitArrayInline(const Array& array, VISITOR* visitor) {\n  switch(array.type_id()) {\n    case UINT8:\n      return visitor->Visit(static_cast<const UInt8Array&>(array));\n    ...\n    default:\n      break;\n  }\n  return Status::NotImplemented(\"Array type not implemented\");\n}\n```\n\nIt would be useful to have an understanding of how this design pattern realistically impacts performance in canonical Arrow use cases (e.g. IPC record batch loading / unloading).",
        "created_at": "2017-03-12T18:52:39.000Z",
        "updated_at": "2017-03-26T16:21:45.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2017-03-23T16:38:56.000Z"
    },
    "comments": [
        {
            "created_at": "2017-03-12T18:56:37.201Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-621?focusedCommentId=15906646) by Wes McKinney (wesm):*\n`[~xhochy]` I think this is a solution to your comment about DRY in visitor pattern \u2013 since we could use `std::enable_if` when implementing certain Visit functions"
        },
        {
            "created_at": "2017-03-22T18:14:08.334Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-621?focusedCommentId=15936840) by Wes McKinney (wesm):*\nGoing to take a look at this. Also going to write some GBenchmarks so we have a precise picture of how long IPC reading and writing takes"
        },
        {
            "created_at": "2017-03-22T23:04:49.292Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-621?focusedCommentId=15937332) by Wes McKinney (wesm):*\nPR: https://github.com/apache/arrow/pull/427"
        },
        {
            "created_at": "2017-03-23T16:38:56.350Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-621?focusedCommentId=15938727) by Wes McKinney (wesm):*\nIssue resolved by pull request 427\n<https://github.com/apache/arrow/pull/427>"
        }
    ]
}