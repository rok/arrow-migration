{
    "issue": {
        "title": "[C++] Dataset scanning, in async mode, is running parquet reads on the CPU thread pool",
        "body": "***Note**: This issue was originally created as [ARROW-14974](https://issues.apache.org/jira/browse/ARROW-14974). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThis is something I picked up while doing some profiling a while back.  When running a scan of a large parquet dataset many of the read tasks (e.g. I/O reads) were running on the CPU thread pool.  This could lead to the CPU thread pool being underutilized.\r\n\r\nIt might not have a large effect on the parquet read itself (if the reads are slow we are probably I/O bound so one might not notice) but it can cause issues on a more complex query where reading is being interleaved with CPU work (like filtering and joining).",
        "created_at": "2021-12-03T02:45:18.000Z",
        "updated_at": "2021-12-03T02:47:01.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-12-03T02:47:01.461Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14974?focusedCommentId=17452704) by Weston Pace (westonpace):*\nNote: The inverse is often true.  We will sometimes do some compute work on the I/O thread pool to avoid a potential loss of cache coherency or creating too many thread tasks.  But this is more tolerable."
        }
    ]
}