{
    "issue": {
        "title": "[CI] Bogus Python install (includes PyPy) from conda-forge on AppVeyor",
        "body": "***Note**: This issue was originally created as [ARROW-13636](https://issues.apache.org/jira/browse/ARROW-13636). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIt looks like our conda-forge installs on AppVeyor builds have started installing PyPy in addition to CPython:\r\nhttps://ci.appveyor.com/project/ApacheSoftwareFoundation/arrow/builds/40397220/job/k7h0lli1jfbnpb3g#L182\r\n\r\nThis is turn fails the build because the PyPy C headers seem to take precedence over the regular CPython C header:\r\nhttps://ci.appveyor.com/project/ApacheSoftwareFoundation/arrow/builds/40397220/job/k7h0lli1jfbnpb3g#L1033\r\n\r\n```Java\n\r\n..\\src\\arrow/python/datetime.h(34): error C2220: warning treated as error - no 'object' file generated\r\n..\\src\\arrow/python/datetime.h(34): warning C4005: 'PyDateTimeAPI': macro redefinition\r\nc:\\miniconda37-x64\\envs\\arrow\\include\\pypy_decl.h(1134): note: see previous definition of 'PyDateTimeAPI'\r\nC:/projects/arrow/cpp/src/arrow/python/util/test_main.cc(29): error C3861: 'Py_Initialize': identifier not found\r\nC:/projects/arrow/cpp/src/arrow/python/util/test_main.cc(38): error C3861: 'Py_Finalize': identifier not found\r\n```\r\n",
        "created_at": "2021-08-16T15:03:00.000Z",
        "updated_at": "2022-09-08T07:51:14.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Continuous Integration",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-09-08T07:51:14.000Z"
    },
    "comments": [
        {
            "created_at": "2021-08-16T15:03:06.666Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13636?focusedCommentId=17399785) by Antoine Pitrou (apitrou):*\ncc `[~uwe]`"
        },
        {
            "created_at": "2021-08-16T16:49:45.466Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13636?focusedCommentId=17399836) by Antoine Pitrou (apitrou):*\nI merged a workaround PR, but I guess this remains to be fixed properly (on the conda-forge side perhaps)."
        },
        {
            "created_at": "2021-08-23T11:28:07.955Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13636?focusedCommentId=17403131) by Joris Van den Bossche (jorisvandenbossche):*\n`[~uwe]` in case that helps, I also encountered a seemingly similar pypy conflict issue without pyarrow included (at least, I still reproduce the issue after leaving out pyarrow from the list of packages to install):\r\n\r\n```Java\n\r\n$ mamba create -n test python=3.7 numpy=1.18 pandas=0.25 mapclassify=2.4.0\r\n...\r\nLooking for: ['python=3.7', 'numpy=1.18', 'pandas=0.25', 'mapclassify=2.4.0']\r\n\r\n...\r\nEncountered problems while solving:\r\n  - package python-3.7.9-4_73_pypy requires python_abi 3.7 *_pypy37_pp73, but none of the providers can be installed\r\n```\r\n\r\nI think the specific problem here is that there is a conflict between the recent mapclassify=2.4 and the old pandas=0.25, but still the fact that it looks at pypy versions in the dependency resolution seems wrong."
        },
        {
            "created_at": "2022-09-08T06:42:59.459Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13636?focusedCommentId=17601669) by Joris Van den Bossche (jorisvandenbossche):*\nI suppose this is fixed in the meantime? "
        },
        {
            "created_at": "2022-09-08T07:51:04.959Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13636?focusedCommentId=17601700) by Antoine Pitrou (apitrou):*\nI have no idea if it was fixed in conda-forge, but we can close this issue anyway."
        }
    ]
}