{
    "issue": {
        "title": "[C++] Build jemalloc_ep source code failed with Apache Arrow 2.0.0 on aarch64 CentOS 7",
        "body": "***Note**: This issue was originally created as [ARROW-17291](https://issues.apache.org/jira/browse/ARROW-17291). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI want to build pyarrow for arm platform.\u00a0 I follow the steps in <https://arrow.apache.org/docs/developers/python.html#build-and-test>. When I finished cmake step and performed make -j4 step there was an error occured:\r\n\r\n```\n\r\n(pyarrow-dev) [root@localhost build]# make -j4\r\n[ \u00a00%] Built target toolchain\r\n[ \u00a00%] Performing configure step for 'jemalloc_ep'\r\n[ \u00a04%] Built target arrow_dataset_objlib\r\nCMake Error at /root/build/arrow/cpp/build/jemalloc_ep-prefix/src/jemalloc_ep-stamp/jemalloc_ep-configure-DEBUG.cmake:37 (message):\r\n\u00a0 Command failed: 77\r\n\r\n\u00a0 \u00a0'./configure' 'AR=/opt/aarch64-kedacom-linux/bin/aarch64-kedacom-linux-gnu-ar' 'CC=/opt/aarch64-kedacom-linux/bin/aarch64-kedacom-linux-gnu-gcc' '{-}{{-}}prefix=/root/build/arrow/cpp/build/jemalloc_ep-prefix/src/jemalloc_ep/dist/' '{-}{{-}}with-jemalloc-prefix=je_arrow_' '{-}{{-}}with-private-namespace=je_arrow_private_' '{-}{{-}}without-export' '{-}{{-}}disable-shared' '{-}{{-}}disable-cxx' '{-}{{-}}disable-libdl' '\\{-}-disable-initial-exec-tls'\r\n\r\n\u00a0 See also\r\n\r\n\u00a0 \u00a0 /root/build/arrow/cpp/build/jemalloc_ep-prefix/src/jemalloc_ep-stamp/jemalloc_ep-configure-*.log\r\n```\r\n\r\n\u2013 stdout output is:\r\n```\n\r\nchecking for xsltproc... /usr/bin/xsltproc\r\n1\r\nchecking for x86_64-conda-linux-gnu-gcc... 2\r\n/opt/aarch64-kedacom-linux/bin/aarch64-kedacom-linux-gnu-gcc\r\nwrite conftest\r\nchecking whether the C compiler works... no\r\n```\r\n\r\n\u2013 stderr output is:\r\n```\n\r\nconfigure: error: in `/root/build/arrow/cpp/build/jemalloc_ep-prefix/src/jemalloc_ep':\r\nconfigure: error: C compiler cannot create executables\r\nSee `config.log' for more details\r\n\r\nCMake Error at /root/build/arrow/cpp/build/jemalloc_ep-prefix/src/jemalloc_ep-stamp/jemalloc_ep-configure-DEBUG.cmake:47 (message):\r\n\u00a0 Stopping after outputting logs.\r\n\r\nmake[2]: *** [CMakeFiles/jemalloc_ep.dir/build.make:92: jemalloc_ep-prefix/src/jemalloc_ep-stamp/jemalloc_ep-configure] Error 1\r\nmake[1]: *** [CMakeFiles/Makefile2:725: CMakeFiles/jemalloc_ep.dir/all] Error 2\r\nmake: *** [Makefile:146: all] Error 2\r\n```\r\n\u00a0\r\n\r\nI add \"echo $CFLAGS\" into the jemalloc_ep configure file. The printed CFLAS is wrong:\r\n\r\n`-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /root/anaconda3/envs/pyarrow-dev/include`\r\n\r\nNocona is not applicable for armv8 CPU. How to solve it?",
        "created_at": "2022-08-03T05:16:49.000Z",
        "updated_at": "2022-08-22T07:45:00.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-08-22T07:45:00.000Z"
    },
    "comments": [
        {
            "created_at": "2022-08-03T07:50:51.062Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17291?focusedCommentId=17574569) by Yibo Cai (yibocai):*\nWill you try newer version (e.g., 8.0)?\r\nI'm not sure if Arrow 2.0 supports aarch64 well."
        },
        {
            "created_at": "2022-08-03T09:21:04.584Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17291?focusedCommentId=17574624) by chendan (atptour2017):*\n`[~yibocai]` \r\n\r\nThe version 2.0.0 does support armv8. The following lines can be found in 2.0.0 SetupCxxFlags.cmake:\r\n\r\n```\n\r\nelseif(ARROW_CPU_FLAG STREQUAL \"armv8\")\r\n# Arm64 compiler flags, gcc/clang only\r\n\u00a0 set(ARROW_ARMV8_ARCH_FLAG \"-march=${ARROW_ARMV8_ARCH}\")\r\n\u00a0 check_cxx_compiler_flag(${ARROW_ARMV8_ARCH_FLAG} CXX_SUPPORTS_ARMV8_ARCH)\r\nendif()\r\n```\r\n\u00a0\r\n\r\nThe problem of using version 8.0.0 is that I must use python3.6 but 8.0.0 requires python3.7 at least:\r\n\r\n\u00a0\r\n```\n\r\n-- Could NOT find Backtrace (missing: Backtrace_LIBRARY)\u00a0\r\nCMake Error at /home/anaconda3/envs/pyarrow-dev/share/cmake-3.23/Modules/FindPackageHandleStandardArgs.cmake:230 (message):\r\n\u00a0 Could NOT find Python3: Found unsuitable version \"3.6.15\", but required is\r\n\u00a0 at least \"3.7\" (found /root/anaconda3/envs/pyarrow-dev/bin/python3.6, found\r\n\u00a0 components: Interpreter Development.Module NumPy)\r\nCall Stack (most recent call first):\r\n\u00a0 /home/anaconda3/envs/pyarrow-dev/share/cmake-3.23/Modules/FindPackageHandleStandardArgs.cmake:592 (_FPHSA_FAILURE_MESSAGE)\r\n\u00a0 /home/anaconda3/envs/pyarrow-dev/share/cmake-3.23/Modules/FindPython/Support.cmake:3192 (find_package_handle_standard_args)\r\n\u00a0 /home/anaconda3/envs/pyarrow-dev/share/cmake-3.23/Modules/FindPython3.cmake:490 (include)\r\n\u00a0 cmake_modules/FindPython3Alt.cmake:56 (find_package)\r\n\u00a0 src/arrow/python/CMakeLists.txt:22 (find_package)\r\n```\r\n\u00a0"
        },
        {
            "created_at": "2022-08-05T08:05:05.623Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17291?focusedCommentId=17575633) by Kouhei Sutou (kou):*\nHow about disabling jemalloc by `-DARROW_JEMALLOC=OFF`?\r\n"
        },
        {
            "created_at": "2022-08-19T01:11:36.956Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17291?focusedCommentId=17581588) by chendan (atptour2017):*\n`[~kou]` \u00a0\r\n\r\nIf I config `{}-DARROW_JEMALLOC=OFF{`}, will it affect building python lib?"
        },
        {
            "created_at": "2022-08-19T01:20:41.051Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17291?focusedCommentId=17581589) by Kouhei Sutou (kou):*\nDo you mean that \"do I need to rebuild PyArrow\"? If so, you don't need to rebuild PyArrow. You can reuse existing PyArrow binaries even when you rebuild your Apache Arrow C++ with `-DARROW_JEMALLOC=OFF`."
        },
        {
            "created_at": "2022-08-22T02:06:07.145Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17291?focusedCommentId=17582687) by chendan (atptour2017):*\n`[~kou]` \u00a0\r\n\r\nYou said:\r\n\r\n> Do you mean that \"do I need to rebuild PyArrow\"? If so, you don't need to rebuild PyArrow. You can reuse existing PyArrow binaries even when you rebuild your Apache Arrow C++ with `{}-DARROW_JEMALLOC=OFF{`}.\r\n\r\nI do not understand the meaning of \"rebuild\". So the answer of this question is no. I took long time to solve the JEMALLOC problem, now it passed. \r\n\r\nBut now other errors occured.\r\n\r\nI want to build pyarrow following by the two steps in <https://arrow.apache.org/docs/developers/python.html#build-and-test:>\r\n\r\nFirst, follow the \"Now build the Arrow C++ libraries and install them into the directory we created above (stored in `{}$ARROW_HOME{`}):\" in this web page, to build arrow C++ lib.\r\n\r\nIn this step,\u00a0 the \"make -4j\" command running in arrow/cpp/build folder did not complete due to some third party lib built failed in linking. But I found that some libs were built out in \u00a0arrow/cpp/build/debug:\r\n\r\n```\n\r\nlibarrow.a \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 libarrow_python.a \u00a0 \u00a0 \u00a0 libarrow_python.so.200.0.0 \u00a0libarrow.so.200.0.0\r\nlibarrow_bundled_dependencies.a \u00a0libarrow_python.so \u00a0 \u00a0 \u00a0libarrow.so \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 libparquet.a\r\nlibarrow_dataset.a \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 libarrow_python.so.200 \u00a0libarrow.so.200\r\n```\r\n\r\nAre these files enough to build pyarrow? This is the first question.\r\n\r\n\u00a0\r\n\r\nSecond, follow the \"Now, build pyarrow:\" in ths web page, to build pyarrow.\r\n\r\nIn conda python3.6 env, it was failed:\r\n\r\n```\n\r\n(pyarrow-dev) [root@localhost python]# python setup.py build_ext --inplace\r\nTraceback (most recent call last):\r\n\u00a0 File \"setup.py\", line 635, in <module>\r\n\u00a0 \u00a0 url='https://arrow.apache.org/'\r\n\u00a0 File \"/root/anaconda3/envs/pyarrow-dev/lib/python3.6/site-packages/setuptools/__init__.py\", line 153, in setup\r\n\u00a0 \u00a0 return distutils.core.setup(**attrs)\r\n\u00a0 File \"/root/anaconda3/envs/pyarrow-dev/lib/python3.6/distutils/core.py\", line 108, in setup\r\n\u00a0 \u00a0 _setup_distribution = dist = klass(attrs)\r\n\u00a0 File \"/root/anaconda3/envs/pyarrow-dev/lib/python3.6/site-packages/setuptools/dist.py\", line 457, in __init__\r\n\u00a0 \u00a0 for k, v in attrs.items()\r\n\u00a0 File \"/root/anaconda3/envs/pyarrow-dev/lib/python3.6/distutils/dist.py\", line 281, in __init__\r\n\u00a0 \u00a0 self.finalize_options()\r\n\u00a0 File \"/root/anaconda3/envs/pyarrow-dev/lib/python3.6/site-packages/setuptools/dist.py\", line 830, in finalize_options\r\n\u00a0 \u00a0 for ep in sorted(loaded, key=by_order):\r\n\u00a0 File \"/root/anaconda3/envs/pyarrow-dev/lib/python3.6/site-packages/setuptools/dist.py\", line 829, in <lambda>\r\n\u00a0 \u00a0 loaded = map(lambda e: e.load(), filtered)\r\n\u00a0 File \"/root/anaconda3/envs/pyarrow-dev/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 2450, in load\r\n\u00a0 \u00a0 return self.resolve()\r\n\u00a0 File \"/root/anaconda3/envs/pyarrow-dev/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 2456, in resolve\r\n\u00a0 \u00a0 module = __import__(self.module_name, fromlist=['__name__'], level=0)\r\n\u00a0 File \"/root/anaconda3/envs/pyarrow-dev/lib/python3.6/site-packages/setuptools_scm/__init__.py\", line 5\r\n\u00a0 \u00a0 from __future__ import annotations\r\n\u00a0 \u00a0 ^\r\nSyntaxError: future feature annotations is not defined\r\n```\r\n\u00a0\r\n\r\nIt seems that I must run it in python3.7. But requirements-build.txt shows that python3.6 is acceptable:\r\n\r\n```\n\r\ncython>=0.29\r\nnumpy>=1.14,<1.19; python_version < \"3.6\"\r\nnumpy>=1.14; python_version >= \"3.6\"\r\nsetuptools; python_version >= \"3.6\"\r\nsetuptools_scm\r\n```\r\n\r\nHow to solve this problem in python3.6?"
        },
        {
            "created_at": "2022-08-22T03:06:26.840Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17291?focusedCommentId=17582705) by Kouhei Sutou (kou):*\nDo you still  want to use Apache Arrow 2.0.0?\r\nIf so, we can't support it here because we don't maintain 2.0.0."
        }
    ]
}