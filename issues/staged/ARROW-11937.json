{
    "issue": {
        "title": "[C++] GZip codec hangs if flushed twice",
        "body": "***Note**: This issue was originally created as [ARROW-11937](https://issues.apache.org/jira/browse/ARROW-11937). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n```java\n\r\n    // \"If deflate returns with avail_out == 0, this function must be called\r\n    //  again with the same value of the flush parameter and more output space\r\n    //  (updated avail_out), until the flush is complete (deflate returns\r\n    //  with non-zero avail_out).\"\r\n    return FlushResult{bytes_written, (bytes_written == 0)}; \n```\r\nBut contrary to the comment, we're checking bytes_written. So if we flush twice, the second time, we won't write any bytes, but we'll erroneously interpret that as zlib asking for a larger buffer, rather than zlib telling us there's no data to decompress. Then we'll enter a loop where we keep doubling the buffer size forever, hanging the program.",
        "created_at": "2021-03-11T21:03:35.000Z",
        "updated_at": "2021-03-15T15:49:20.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-03-15T15:49:06.000Z"
    },
    "comments": [
        {
            "created_at": "2021-03-15T15:49:06.443Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11937?focusedCommentId=17301723) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 9680\n<https://github.com/apache/arrow/pull/9680>"
        }
    ]
}