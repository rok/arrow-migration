{
    "issue": {
        "title": "[Python] Allow concat_tables to null or default fill missing columns",
        "body": "***Note**: This issue was originally created as [ARROW-6625](https://issues.apache.org/jira/browse/ARROW-6625). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe concat_tables function currently requires schemas to be identical across all tables to be concat'ed together. However, tables occasionally are conforming on type where present, but a column will be absent.\r\n\r\nIn this case, allowing for null filling (or default filling) would be ideal.\r\n\r\nI imagine this feature would be an optional parameter on the concat_tables function. Presumably the argument could be either a boolean in the case of blanket null filling, or a mapping type for default filling. If a user wanted to default fill some columns, but null fill others, they could use a None as the value (defaultdict would make it simple to provide a blanket null fill if only a few default value columns were desired).\r\n\r\nIf a mapping wasn't present, the function should probably raise an error.\r\n\r\nThe default behavior would be the current and thus the default value of the parameter should be False or None.",
        "created_at": "2019-09-19T21:02:25.000Z",
        "updated_at": "2020-07-06T15:32:03.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-11-08T17:33:31.000Z"
    },
    "comments": [
        {
            "created_at": "2019-09-20T17:45:48.843Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6625?focusedCommentId=16934614) by Wes McKinney (wesm):*\nSeems like a good idea. We have all the machinery available to do this in a performant way"
        },
        {
            "created_at": "2019-09-26T20:42:54.352Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6625?focusedCommentId=16938956) by Zhuo Peng (brillsp):*\nDaniel / Wes, are you working on implementing this? I'm also interested in this feature and if you are not working on it I can take it.\r\n\r\nI have a small amendment to this FR though: does it make sense to allow concatenating a column of type Null (NullArray) with any other type of column? The result would be again a column of the other type, with null filled for the rows in the NullArray.\r\n\r\n\u00a0"
        },
        {
            "created_at": "2019-09-27T01:35:38.773Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6625?focusedCommentId=16939058) by Daniel Nugent (nugend):*\n`[~zhuopeng]` I am not working on it. I would have to leave the additional behavior question to `[~wesm]`"
        },
        {
            "created_at": "2019-09-27T13:11:11.462Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6625?focusedCommentId=16939433) by Wes McKinney (wesm):*\nYes I think that having null fields automatically-promoted to a non-null type seems reasonable to me. I am not working on this so please be our guest"
        },
        {
            "created_at": "2019-11-08T17:33:31.479Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6625?focusedCommentId=16970434) by Wes McKinney (wesm):*\nIssue resolved by pull request 5534\n<https://github.com/apache/arrow/pull/5534>"
        }
    ]
}