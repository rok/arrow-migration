{
    "issue": {
        "title": "[Packaging][RPM][Gandiva] centos-9-stream-amd64 nightly build failure",
        "body": "***Note**: This issue was originally created as [ARROW-17536](https://issues.apache.org/jira/browse/ARROW-17536). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIn the [Python refactoring PR](https://github.com/apache/arrow/pull/13311) there was a new failure in the nightly build (centos-9-stream-amd64) that doesn't look related to that specific PR:\r\n\r\n<https://github.com/ursacomputing/crossbow/runs/8027904112?check_suite_focus=true#step:6:4839>",
        "created_at": "2022-08-26T06:52:55.000Z",
        "updated_at": "2022-08-28T03:22:23.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++ - Gandiva",
            "Component: Packaging",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-08-28T00:47:14.000Z"
    },
    "comments": [
        {
            "created_at": "2022-08-27T13:47:49.640Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17536?focusedCommentId=17585770) by Kouhei Sutou (kou):*\nIt seems that this is a GCC bug fixed by https://gcc.gnu.org/git/?p=gcc.git;a=commit;h=4cb935cb69f12088975fa7f6907c6ace0580e2dd .\r\n\r\nSee also a Firefox case: https://bugzilla.mozilla.org/show_bug.cgi?id=1758005"
        },
        {
            "created_at": "2022-08-27T14:41:31.145Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17536?focusedCommentId=17585774) by Kouhei Sutou (kou):*\nThis is the problem:\r\n\r\n```\n\r\n/usr/bin/ld: /build/rpmbuild/BUILD/apache-arrow-9.0.0.dev783/c_glib/build/../../cpp/redhat-linux-build/release/libgandiva.so.1000: undefined reference to `std::__glibcxx_assert_fail(char const*, int, char const*, char const*)'\r\n```\r\n\r\nLLVM static libraries such as `/usr/lib64/libLLVMMCJIT.a` refers `std::__glibcxx_assert_fail`.\r\n\r\nBut why? The default `g++` on CentOS Stream 9 is `g++ (GCC) 11.3.1 20220421 (Red Hat 11.3.1-2)` and it doesn't provides `std::__glibcxx_assert_fail`:\r\n\r\n```\n\r\n$ strings /lib64/libstdc++.so.6  | grep assert_fail\r\n__assert_fail\r\n```\r\n\r\nBut `/usr/lib64/libLLVMMCJIT.a` refers `std::__glibcxx_assert_fail`:\r\n\r\n```\n\r\n$ nm --demangle /usr/lib64/libLLVMMCJIT.a | grep assert_fail\r\n                 U std::__glibcxx_assert_fail(char const*, int, char const*, char const*)\r\n```\r\n\r\n`libstdc++.so` in `gcc-toolset-12` provides `std::__glibcxx_assert_fail`:\r\n\r\n```\n\r\n$ cat /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/libstdc++.so \r\n/* GNU ld script\r\n   Use the shared library, but some functions are only in\r\n   the static library, so try that secondarily.  */\r\nOUTPUT_FORMAT(elf64-x86-64)\r\nINPUT ( /usr/lib64/libstdc++.so.6 -lstdc++_nonshared )\r\nnm --demangle /opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/libstdc++_nonshared.a | grep assert\r\n                 U std::__glibcxx_assert_fail(char const*, int, char const*, char const*)\r\n0000000000000000 T std::__glibcxx_assert_fail(char const*, int, char const*, char const*)\r\n```\r\n\r\nWas CentOS Stream 9's LLVM package built with `gcc-toolset-12`?\r\n\r\nCentOS Stream 9's LLVM package's repository: https://gitlab.com/redhat/centos-stream/rpms/llvm"
        },
        {
            "created_at": "2022-08-28T00:47:14.879Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17536?focusedCommentId=17586126) by Kouhei Sutou (kou):*\nIssue resolved by pull request 13984\n<https://github.com/apache/arrow/pull/13984>"
        }
    ]
}