{
    "issue": {
        "title": "array.String offsets int32 overflow",
        "body": "***Note**: This issue was originally created as [ARROW-15733](https://issues.apache.org/jira/browse/ARROW-15733). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n> panic: runtime error: slice bounds out of range [:-1352393031]\n> \n> goroutine 1 [running]:\n> github.com/apache/arrow/go/v7/arrow/array.(\\*String).ValueBytes(...)\n> C:/Users/astre/Documents/go/pkg/mod/github.com/apache/arrow/go/v7@v7.0.0/arrow/array/string.go:74\n> github.com/apache/arrow/go/v7/arrow/ipc.(\\*recordEncoder).visit(0xc193b85c80, 0xc193b9e060, \\{0x10b5490, 0xc000050820})\n> C:/Users/astre/Documents/go/pkg/mod/github.com/apache/arrow/go/v7@v7.0.0/arrow/ipc/writer.go:435 +0x2194\n> github.com/apache/arrow/go/v7/arrow/ipc.(\\*recordEncoder).visit(0xc193b85c80, 0xc193b9e060, \\{0x10b5288, 0xc000050730})\n> C:/Users/astre/Documents/go/pkg/mod/github.com/apache/arrow/go/v7@v7.0.0/arrow/ipc/writer.go:533 +0x1431\n> github.com/apache/arrow/go/v7/arrow/ipc.(\\*recordEncoder).Encode(0xc193b85c80, 0xc193b9e060, \\{0x10b5838, 0xc193b8bc80})\n> C:/Users/astre/Documents/go/pkg/mod/github.com/apache/arrow/go/v7@v7.0.0/arrow/ipc/writer.go:267 +0x98\n> github.com/apache/arrow/go/v7/arrow/ipc.(\\*FileWriter).Write(0xc00004e480, \\{0x10b5838, 0xc193b8bc80})\n> C:/Users/astre/Documents/go/pkg/mod/github.com/apache/arrow/go/v7@v7.0.0/arrow/ipc/file_writer.go:342 +0x20d\n> main.main()\r\nI have **a lot** of strings. The offsets should not only be unsigned but should also be larger than 4 bytes. Changing the offsets to a slice of uint32 was sufficient in my case but may not be for others.",
        "created_at": "2022-02-19T17:06:51.000Z",
        "updated_at": "2022-08-29T14:15:15.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Go",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-08-29T14:14:02.000Z"
    },
    "comments": [
        {
            "created_at": "2022-02-20T12:57:52.942Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15733?focusedCommentId=17495154) by Andrew Strelsky (astrelsky):*\nSo it turns out that this was due to my misuse of the API. I was putting all my strings into a list in a single record. Nonetheless it is still possible to overflow."
        },
        {
            "created_at": "2022-03-16T16:21:25.025Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15733?focusedCommentId=17507704) by Matthew Topol (zeroshade):*\n`[~astrelsky]` This is the use case for the Large String arrow type which is not yet implemented in the Go library (same for the Large List / Large Binary types. Those types explicitly use a 64-bit integer for their offsets while the non-Large types use a 32-bit integer for their offsets. This issue should be changed to be an enhancement to implement the Large String type rather than be a bug."
        },
        {
            "created_at": "2022-07-29T15:25:59.294Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15733?focusedCommentId=17573032) by Matthew Topol (zeroshade):*\nImplementation for LargeBinary also implemented LargeString allowing int64 offsets for String arrays"
        }
    ]
}