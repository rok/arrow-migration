{
    "issue": {
        "title": "[Java] Undeprecate sqlToArrow helpers",
        "body": "***Note**: This issue was originally created as [ARROW-10853](https://issues.apache.org/jira/browse/ARROW-10853). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThese helper functions are really useful when called from Python as they deal with a lot of \"internals\" of Java that we don't want to handle from the Python side. We rather would keep using these functions.\r\n\r\nNote that some of them are broken due to recent refactoring and only return 1024 rows (the default iterator size) without the ability to change that.",
        "created_at": "2020-12-08T21:13:54.000Z",
        "updated_at": "2022-08-27T14:41:45.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-01-10T20:43:22.000Z"
    },
    "comments": [
        {
            "created_at": "2020-12-08T21:14:48.799Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10853?focusedCommentId=17246152) by Uwe Korn (uwe):*\n`[~tianchen92]` `[~emkornfield]` \u00a0Any objections to this? You both worked on <https://github.com/apache/arrow/pull/5075>\u00a0that marked them as deprecated."
        },
        {
            "created_at": "2020-12-09T02:56:14.388Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10853?focusedCommentId=17246261) by Liya Fan (fan_li_ya):*\n`[~uwe]` Thanks for reporting the problem. \r\nThe ArrowVectorIterator should also be convenient to use (I think). Is there any special reason not to use it?\r\n\r\nIf there are too many Java internals, maybe we can consider simplify it to remove the internal stuffs?"
        },
        {
            "created_at": "2020-12-09T05:01:04.947Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10853?focusedCommentId=17246285) by Micah Kornfield (emkornfield):*\nThe reason for deprecation was the preference for small fixed size batches which aligns with Java allocator.\u00a0 I guess I'm OK with undeprecating them, but would like to understand why it is hard to use the iterator?"
        },
        {
            "created_at": "2020-12-13T20:36:57.334Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10853?focusedCommentId=17248666) by Uwe Korn (uwe):*\nOn the Python side, we tend to work with single tables with the least amount of chunking. This gives the best performance there. Iterating over a dataset is quite uncommon, rather you typically load the data (or the largest subset you get into RAM) into memory and then work quite a while on that. This an approach that iterates small chunks is quite undesirable and would also be very slow on the Python side.\r\n\r\nInterface-wise, it would be good to have the `(connection, query)` and `(connection, query, config)` interfaces that return a populated `VectorSchemaRoot)`. This requires the least amount of Java-side API knowledge and serves the typical use case."
        },
        {
            "created_at": "2020-12-14T04:45:06.693Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10853?focusedCommentId=17248739) by Liya Fan (fan_li_ya):*\n`[~uwe]` Thanks a lot for your feedback.\r\nBy setting JdbcToArrowConfig#targetBatchSize to NO_LIMIT_BATCH_SIZE (-1), we get everything in a single batch. So there is no need to iterate over the dataset. (However, the caller must make sure there is enough memory to avoid OOM).\r\n\r\nFor the interface issue, currently the process works in two steps:\r\n\r\n1. `(connection, query) -> result set`, and \r\n2. `(result set, config) -> VectorSchemaRoot`. \r\n\r\nThe above two steps are separate, primarily because they are independent processes. In particular, the functionality of step 2 is provided by Arrow, whereas step 1 does not have much to do with Arrow."
        },
        {
            "created_at": "2021-01-10T20:43:12.583Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10853?focusedCommentId=17262274) by Uwe Korn (uwe):*\nAfter using the non-deprecated interface for a bit, I think we can close this. It was a bit fiddly at first but having read thrice over the code I came up with a okish looking and not too complex Python/Java code to use it.\r\n\r\nCross-reference: I use this in https://uwekorn.com/2020/12/30/fast-jdbc-revisited.html "
        },
        {
            "created_at": "2022-08-27T14:41:45.439Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10853?focusedCommentId=17585827) by @toddfarmer:*\nTransitioning issue from Resolved to Closed to based on resolution field value."
        }
    ]
}