{
    "issue": {
        "title": "[Java] Resolve the ambiguous method overload in RangeEqualsVisitor",
        "body": "***Note**: This issue was originally created as [ARROW-6266](https://issues.apache.org/jira/browse/ARROW-6266). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIn\u00a0RangeEqualsVisitor, there are overload methods for both super class and sub class. This\u00a0will lead to unexpected behavior.\r\n\r\nFor example, if we call\u00a0RangeEqualsVisitor#visit(v), where v is a fixed width vector, the method actually called may be visit(ValueVector), which is unexpected.\r\n\r\nIn general, in the visitor pattern,\u00a0it is not a good idea to support method overload for both super class and sub-class as parameters.",
        "created_at": "2019-08-16T06:36:51.000Z",
        "updated_at": "2019-08-19T12:04:43.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-08-19T12:04:43.000Z"
    },
    "comments": [
        {
            "created_at": "2019-08-19T12:04:43.201Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6266?focusedCommentId=16910350) by Pindikura Ravindra (pravindra):*\nIssue resolved by pull request 5100\n<https://github.com/apache/arrow/pull/5100>"
        }
    ]
}