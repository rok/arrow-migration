{
    "issue": {
        "title": "[Rust] Array slice returns incorrect bitmask",
        "body": "***Note**: This issue was originally created as [ARROW-4914](https://issues.apache.org/jira/browse/ARROW-4914). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSlicing arrays changes the offset, length and null count of their array data, but the\u00a0bitmask is not changed.\r\n\r\nThis results in the correct null count, but the array values might be marked incorrectly as valid/invalid based on the old bitmask positions before the offset.\r\n\r\nTo reproduce, create an array with some null values, slice the array, and then dbg!()\u00a0it (after downcasting).",
        "created_at": "2019-03-16T07:16:59.000Z",
        "updated_at": "2019-09-15T05:31:15.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-09-15T05:31:15.000Z"
    },
    "comments": [
        {
            "created_at": "2019-03-19T04:34:14.957Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4914?focusedCommentId=16795667) by Chao Sun (csun):*\n[~nevi_me] looking at this - could you provide a simple test case to reproduce the issue? Thanks."
        },
        {
            "created_at": "2019-03-19T06:58:49.739Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4914?focusedCommentId=16795756) by Neville Dipale (nevi_me):*\nHi `[~csun]`, in the unit test:\u00a0<https://github.com/apache/arrow/blob/master/rust/arrow/src/array.rs#L1144>\u00a0we have array with bitmask 1010111. After we slice(offset: 2, len: 5), we should have 10111 but we have 10101.\r\n\r\nTo make the test fail, you can insert\u00a0**assert!(arr2.is_null(3));** to check the null value of the 4th element in the array. My apologies, I don't have enough time to make a gist now, but I can make one later if the above can't reproduce the issue."
        },
        {
            "created_at": "2019-03-19T07:07:49.742Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4914?focusedCommentId=16795763) by Neville Dipale (nevi_me):*\nHere's a repro for both this and ARROW-4853\u00a0:\u00a0<https://gist.github.com/nevi-me/3bc0885eb7d5f4da2e7c1bec48940e82>"
        },
        {
            "created_at": "2019-03-19T07:11:40.375Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4914?focusedCommentId=16795770) by Chao Sun (csun):*\nThanks [~nevi_me]! I think the failure for this JIRA is because `is_null` and `is_valid` in `Array` do not consider offset, the second failure is because the invariant check in `From<ArrayDataRef> for ListArray` is wrong. Both should be an easy fix. Will post a PR soon."
        },
        {
            "created_at": "2019-09-06T15:42:15.671Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4914?focusedCommentId=16924348) by David Li (lidavidm):*\nIt looks like this was fixed as part of ARROW-4853, can it be closed?"
        }
    ]
}