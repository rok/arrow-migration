{
    "issue": {
        "title": "[C++] RandomArrayGenerator::List size mismatch ",
        "body": "***Note**: This issue was originally created as [ARROW-11548](https://issues.apache.org/jira/browse/ARROW-11548). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nRandomArrayGenerator::List consistently produces ListArrays with their length 1 below what they should be according to their documentation. Moreover the bitmaps we have are weird.\r\n\u00a0\r\nHere is some simple test:\r\n\u00a0\r\n<font color=\"#dcdcaa\">TEST</font>(TestAdapterWriteNested, ListTest) {\r\n<font color=\"#569cd6\">int64_t</font> num_rows = <font color=\"#b5cea8\">2</font>;\r\n<font color=\"#569cd6\">static</font> <font color=\"#569cd6\">constexpr</font> <font color=\"#4ec9b0\">random</font>::SeedType kRandomSeed2 = <font color=\"#b5cea8\">0x0ff1ce</font>;\r\n<font color=\"#4ec9b0\">arrow</font>::<font color=\"#4ec9b0\">random</font>::RandomArrayGenerator <font color=\"#dcdcaa\">rand</font>(kRandomSeed2);\r\n<font color=\"#4ec9b0\">std</font>::shared_ptr<Array> value_array = <font color=\"#9cdcfe\">rand</font>.<font color=\"#dcdcaa\">ArrayOf</font>(<font color=\"#dcdcaa\">int32</font>(), <font color=\"#b5cea8\">2</font> \\* num_rows, <font color=\"#b5cea8\">0.2</font>);\r\n<font color=\"#4ec9b0\">std</font>::shared_ptr<Array> array = <font color=\"#9cdcfe\">rand</font>.<font color=\"#dcdcaa\">List</font>(\\*value_array, num_rows, <font color=\"#b5cea8\">1</font>);\r\n<font color=\"#dcdcaa\">RecordProperty</font>(<font color=\"#ce9178\">\"bitmap\"</font>,\\*(<font color=\"#9cdcfe\">array</font>-><font color=\"#dcdcaa\">null_bitmap_data</font>()));\r\n<font color=\"#dcdcaa\">RecordProperty</font>(<font color=\"#ce9178\">\"length\"</font>,<font color=\"#9cdcfe\">array</font>-><font color=\"#dcdcaa\">length</font>());\r\n<font color=\"#dcdcaa\">RecordProperty</font>(<font color=\"#ce9178\">\"array\"</font>,<font color=\"#9cdcfe\">array</font>-><font color=\"#dcdcaa\">ToString</font>());\r\n}\r\n\u00a0\r\nHere are the results:\r\n\u00a0\r\n<font color=\"#808080\"><</font><font color=\"#569cd6\">testcase</font> <font color=\"#9cdcfe\">name</font>=<font color=\"#ce9178\">\"ListTest\"</font> <font color=\"#9cdcfe\">status</font>=<font color=\"#ce9178\">\"run\"</font> <font color=\"#9cdcfe\">result</font>=<font color=\"#ce9178\">\"completed\"</font> <font color=\"#9cdcfe\">time</font>=<font color=\"#ce9178\">\"0\"</font> <font color=\"#9cdcfe\">timestamp</font>=<font color=\"#ce9178\">\"2021-02-07T15:23:16\"</font> <font color=\"#9cdcfe\">classname</font>=<font color=\"#ce9178\">\"TestAdapterWriteNested\"</font><font color=\"#808080\">></font>\r\n<font color=\"#808080\"><</font><font color=\"#569cd6\">properties</font><font color=\"#808080\">></font>\r\n<font color=\"#808080\"><</font><font color=\"#569cd6\">property</font> <font color=\"#9cdcfe\">name</font>=<font color=\"#ce9178\">\"bitmap\"</font> <font color=\"#9cdcfe\">value</font>=<font color=\"#ce9178\">\"3\"</font><font color=\"#808080\">/></font>\r\n<font color=\"#808080\"><</font><font color=\"#569cd6\">property</font> <font color=\"#9cdcfe\">name</font>=<font color=\"#ce9178\">\"length\"</font> <font color=\"#9cdcfe\">value</font>=<font color=\"#ce9178\">\"1\"</font><font color=\"#808080\">/></font>\r\n<font color=\"#808080\"><</font><font color=\"#569cd6\">property</font> <font color=\"#9cdcfe\">name</font>=<font color=\"#ce9178\">\"array\"</font> <font color=\"#9cdcfe\">value</font>=<font color=\"#ce9178\">\"[</font><font color=\"#569cd6\">&#x0A;</font><font color=\"#ce9178\"> [</font><font color=\"#569cd6\">&#x0A;</font><font color=\"#ce9178\"> null,</font><font color=\"#569cd6\">&#x0A;</font><font color=\"#ce9178\"> 1074834796,</font><font color=\"#569cd6\">&#x0A;</font><font color=\"#ce9178\"> 551076274,</font><font color=\"#569cd6\">&#x0A;</font><font color=\"#ce9178\"> 1184187771</font><font color=\"#569cd6\">&#x0A;</font><font color=\"#ce9178\"> ]</font><font color=\"#569cd6\">&#x0A;</font><font color=\"#ce9178\">]\"</font><font color=\"#808080\">/></font>\r\n<font color=\"#808080\"></</font><font color=\"#569cd6\">properties</font><font color=\"#808080\">></font>\r\n<font color=\"#808080\"></</font><font color=\"#569cd6\">testcase</font><font color=\"#808080\">></font>\r\n\u00a0\r\nHere is what RandomArrayGenerator::List should do:\r\n\u00a0\r\n<font color=\"#6a9955\"> /// </font><font color=\"#569cd6\">\\brief</font><font color=\"#6a9955\"> Generate a random ListArray</font>\r\n<font color=\"#6a9955\"> ///</font>\r\n<font color=\"#6a9955\"> /// </font><font color=\"#569cd6\">\\param</font><font color=\"#6a9955\">[</font><font color=\"#569cd6\">in</font><font color=\"#6a9955\">] </font><font color=\"#9cdcfe\">values</font><font color=\"#6a9955\"> The underlying values array</font>\r\n<font color=\"#6a9955\"> /// </font><font color=\"#569cd6\">\\param</font><font color=\"#6a9955\">[</font><font color=\"#569cd6\">in</font><font color=\"#6a9955\">] </font><font color=\"#9cdcfe\">size</font><font color=\"#6a9955\"> The size of the generated list array</font>\r\n<font color=\"#6a9955\"> /// </font><font color=\"#569cd6\">\\param</font><font color=\"#6a9955\">[</font><font color=\"#569cd6\">in</font><font color=\"#6a9955\">] </font><font color=\"#9cdcfe\">null_probability</font><font color=\"#6a9955\"> the probability of a list value being null</font>\r\n<font color=\"#6a9955\"> /// </font><font color=\"#569cd6\">\\param</font><font color=\"#6a9955\">[</font><font color=\"#569cd6\">in</font><font color=\"#6a9955\">] </font><font color=\"#9cdcfe\">force_empty_nulls</font><font color=\"#6a9955\"> if true, null list entries must have 0 length</font>\r\n<font color=\"#6a9955\"> ///</font>\r\n<font color=\"#6a9955\"> /// </font><font color=\"#569cd6\">\\return</font><font color=\"#6a9955\"> a generated Array</font>\r\n<font color=\"#4ec9b0\">std</font>::<font color=\"#4ec9b0\">shared_ptr</font><<font color=\"#4ec9b0\">Array</font>> <font color=\"#dcdcaa\">List</font>(<font color=\"#569cd6\">const</font> <font color=\"#4ec9b0\">Array</font><font color=\"#569cd6\">&</font> <font color=\"#9cdcfe\">values</font>, <font color=\"#4ec9b0\">int64_t</font> <font color=\"#9cdcfe\">size</font>, <font color=\"#569cd6\">double</font> <font color=\"#9cdcfe\">null_probability</font>,\r\n<font color=\"#569cd6\">bool</font> <font color=\"#9cdcfe\">force_empty_nulls</font> = <font color=\"#569cd6\">false</font>);\r\n\u00a0\r\nNote that the generator failed in at least two aspects:\r\n1. The length of the generated array is too low.\r\n2. Even when null_probability is set to 1 there are still 1s in the bitmap.\u00a0\r\n3. The size of the bitmap is larger than the size of the Array.",
        "created_at": "2021-02-07T22:41:27.000Z",
        "updated_at": "2021-04-06T23:20:41.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-04-06T23:20:32.000Z"
    },
    "comments": [
        {
            "created_at": "2021-02-08T10:08:46.280Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11548?focusedCommentId=17280916) by Antoine Pitrou (apitrou):*\nThanks for reporting this. Do you want to submit a PR?"
        },
        {
            "created_at": "2021-04-06T23:20:32.582Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11548?focusedCommentId=17315882) by David Li (lidavidm):*\nIssue resolved by pull request 9911\n<https://github.com/apache/arrow/pull/9911>"
        }
    ]
}