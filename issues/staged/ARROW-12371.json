{
    "issue": {
        "title": "[C++] Allow batch readahead to be processed in a \"first-available\" fashion instead of an \"in order\" fashion",
        "body": "***Note**: This issue was originally created as [ARROW-12371](https://issues.apache.org/jira/browse/ARROW-12371). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe combination of EnumeratingGenerator and ResequencingGenerator can be used to process items in a \"first available\" fashion.\u00a0 This is currently used in the scanner to compensate for intermittent fragment performance.\r\n\r\nA potential further improvement would be to use this same pattern for out-of-order readahead.\u00a0 For example, when reading a parquet file or an IPC file via S3 the reader may request multiple batches in parallel.\u00a0 If the next batch is slow but the later batches are fast we could start processing the later batches while we wait for the next batch.\r\n\r\nThis would be a pretty minor improvement to latency (probably won't affect throughput much) so I don't know that it is a very high priority fix.\u00a0 It may be best to wait until profiling shows this is an issue.\r\n\r\nThis will require the EnumeratingGenerator be made async-reentrant",
        "created_at": "2021-04-13T21:00:26.000Z",
        "updated_at": "2021-05-12T14:49:52.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": []
}