{
    "issue": {
        "title": "[R] Allow specifying CSV file encoding",
        "body": "***Note**: This issue was originally created as [ARROW-9186](https://issues.apache.org/jira/browse/ARROW-9186). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nARROW-9106 did this for Python and we should have the same in R",
        "created_at": "2020-06-19T15:36:23.000Z",
        "updated_at": "2022-01-12T06:19:03.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-01-10T20:31:21.000Z"
    },
    "comments": [
        {
            "created_at": "2021-06-23T15:17:54.988Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9186?focusedCommentId=17368269) by Antoine Pitrou (apitrou):*\ncc @thisisnic `[~jonkeane]`"
        },
        {
            "created_at": "2021-12-17T20:48:12.128Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9186?focusedCommentId=17461663) by Dewey Dunnington (paleolimbot):*\nDoesn't look like it's implemented as part of the [C++ ReadOptions](https://github.com/apache/arrow/blob/master/cpp/src/arrow/csv/options.h#L138-L171) but that Python uses the ReadOptions class to carry this information (with a Python-only `.encoding` attribute). We could/should do this, too.\r\n\r\nIt looks from the Python PR that we'd have to provide our own `iconv` and wrap a `TransformInputStream`. R provides an `iconv` at the C level, so we shouldn't need to call into R for this. I [wrote about this a while ago](https://fishandwhistle.net/post/2021/using-rs-cross-platform-iconv-wrapper-from-cpp11/) and I think there's another example in either readr or vroom where this bit of code is wrapped up in a helper class.\r\n\r\nWhere Python creates its wrapper around `TransformInputStream`: https://github.com/apache/arrow/blob/master/cpp/src/arrow/python/io.cc#L340-L371\r\n\r\nWhere R creates the `CsvReadOptions`: https://github.com/apache/arrow/blob/master/r/R/csv.R#L402-L416"
        },
        {
            "created_at": "2021-12-17T20:59:47.932Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9186?focusedCommentId=17461670) by Dewey Dunnington (paleolimbot):*\nReprex:\r\n\r\n```R\n\r\nlibrary(arrow, warn.conflicts = FALSE)\r\n\r\nstring <- \"province_name\\nQu\u00e9bec\"\r\nbytes_utf8 <- iconv(string, to = \"UTF-8\", toRaw = TRUE)[[1]]\r\nbytes_windows1252 <- iconv(string, to = \"windows-1252\", toRaw = TRUE)[[1]]\r\n\r\ntemp_utf8 <- tempfile()\r\ntemp_windows1252 <- tempfile()\r\n\r\ncon <- file(temp_utf8, open = \"wb\")\r\nwriteBin(bytes_utf8, con)\r\nclose(con)\r\n\r\ncon <- file(temp_windows1252, open = \"wb\")\r\nwriteBin(bytes_windows1252, con)\r\nclose(con)\r\n\r\nreadr::read_csv(\r\n  temp_utf8,\r\n  locale = readr::locale(encoding = \"UTF-8\"),\r\n  show_col_types = FALSE\r\n)\r\n#> # A tibble: 1 \u00d7 1\r\n#>   province_name\r\n#>   <chr>        \r\n#> 1 Qu\u00e9bec\r\n\r\nreadr::read_csv(\r\n  temp_windows1252,\r\n  locale = readr::locale(encoding = \"windows-1252\"),\r\n  show_col_types = FALSE\r\n)\r\n#> # A tibble: 1 \u00d7 1\r\n#>   province_name\r\n#>   <chr>        \r\n#> 1 Qu\u00e9bec\r\n\r\nread_csv_arrow(temp_utf8)\r\n#> # A tibble: 1 \u00d7 1\r\n#>   province_name\r\n#>   <chr>        \r\n#> 1 Qu\u00e9bec\r\nread_csv_arrow(temp_windows1252)\r\n#> # A tibble: 1 \u00d7 1\r\n#>            province_name\r\n#>               <arrw_bnr>\r\n#> 1 51, 75, e9, 62, 65, 63\r\n```\r\n"
        },
        {
            "created_at": "2022-01-10T20:31:21.989Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9186?focusedCommentId=17472285) by Jonathan Keane (jonkeane):*\nIssue resolved by pull request 12030\n<https://github.com/apache/arrow/pull/12030>"
        }
    ]
}