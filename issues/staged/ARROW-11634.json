{
    "issue": {
        "title": "[C++][Parquet] Parquet statistics (min/max) for dictionary columns are incorrect",
        "body": "***Note**: This issue was originally created as [ARROW-11634](https://issues.apache.org/jira/browse/ARROW-11634). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI would expect to see `('A','A')` for the first row group and `('B','B')` for the second rowgroup.\r\n\r\nI suspect this is a C++ issue, but I went looking for the way that the statistics are calculated and was unable to find them.\r\n\r\n```python\n\r\n>>> import pyarrow as pa\r\n>>> import pyarrow.parquet as papq\r\n>>> d = pa.DictionaryArray.from_arrays((100*[0]) + (100*[1]),[\"A\",\"B\"])\r\n>>> t = pa.table({\"col\":d})\r\n>>> papq.write_table(t,'sample.parquet',row_group_size=100)\r\n>>> f = papq.ParquetFile('sample.parquet')\r\n>>> (f.metadata.row_group(0).column(0).statistics.min, f.metadata.row_group(0).column(0).statistics.max)\r\n('A', 'B')\r\n>>> (f.metadata.row_group(1).column(0).statistics.min, f.metadata.row_group(1).column(0).statistics.max)\r\n('A', 'B')\r\n>>> f.read_row_groups([0]).column(0)\r\n<pyarrow.lib.ChunkedArray object at 0x7f37346abe90>\r\n[ \r\n  -- dictionary:\r\n    [\r\n      \"A\",\r\n      \"B\"\r\n    ]\r\n  -- indices:\r\n    [\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      ...\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      0,\r\n      0\r\n    ]\r\n]\r\n>>> f.read_row_groups([1]).column(0)\r\n<pyarrow.lib.ChunkedArray object at 0x7f37346abef0>\r\n[\r\n  -- dictionary:\r\n    [\r\n      \"A\",\r\n      \"B\"\r\n    ]\r\n  -- indices:\r\n    [\r\n      1,\r\n      1,\r\n      1,\r\n      1,\r\n      1,\r\n      1,\r\n      1,\r\n      1,\r\n      1,\r\n      1,\r\n      ...\r\n      1,\r\n      1,\r\n      1,\r\n      1,\r\n      1,\r\n      1,\r\n      1,\r\n      1,\r\n      1,\r\n      1\r\n    ]\r\n]\r\n```\r\n",
        "created_at": "2021-02-15T18:35:37.000Z",
        "updated_at": "2021-09-15T00:13:10.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Parquet",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-09-15T00:13:00.000Z"
    },
    "comments": [
        {
            "created_at": "2021-02-16T07:53:37.792Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11634?focusedCommentId=17285079) by Micah Kornfield (emkornfield):*\n<https://github.com/apache/arrow/blob/master/cpp/src/parquet/column_writer.cc#L1492>\u00a0is where I believe the problematic code.\u00a0 min/max statistics should calculated by doing dictionary lookup with the indices instead of simply using the entire dictionary."
        },
        {
            "created_at": "2021-09-14T03:32:01.185Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11634?focusedCommentId=17414688) by Micah Kornfield (emkornfield):*\n`[~westonpace]` \u00a0I think this was fixed with the other dictionary changes you made?"
        },
        {
            "created_at": "2021-09-14T08:32:07.283Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11634?focusedCommentId=17414809) by Joris Van den Bossche (jorisvandenbossche):*\nWith latest master, I can indeed confirm the above snippet now gives the correct output:\r\n\r\n```python\n\r\nIn [20]: (f.metadata.row_group(0).column(0).statistics.min, f.metadata.row_group(0).column(0).statistics.max)\r\nOut[20]: ('A', 'A')\r\n\r\nIn [21]: (f.metadata.row_group(1).column(0).statistics.min, f.metadata.row_group(1).column(0).statistics.max)\r\nOut[21]: ('B', 'B')\r\n```\r\n\r\nWas this sufficiently tested in the PR that fixed this?"
        },
        {
            "created_at": "2021-09-14T18:21:22.775Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11634?focusedCommentId=17415094) by Weston Pace (westonpace):*\nThe issue I fixed was ARROW-12513 and I did add some unit tests at the C++ level to regress this behavior.  I'd be good with closing this here."
        }
    ]
}