{
    "issue": {
        "title": "[Java] Finish support for 64 bit int allocations ",
        "body": "***Note**: This issue was originally created as [ARROW-7610](https://issues.apache.org/jira/browse/ARROW-7610). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n1.\u00a0 Add an allocator capable of allocating larger then 2GB of data.\r\n\r\n2.\u00a0 Do end-to-end round trip trip on a larger vector/record batch size.",
        "created_at": "2020-01-18T04:31:49.000Z",
        "updated_at": "2020-04-28T02:23:59.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-04-27T19:04:33.000Z"
    },
    "comments": [
        {
            "created_at": "2020-01-18T05:46:34.319Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7610?focusedCommentId=17018511) by Liya Fan (fan_li_ya):*\nmay i try to resolve this issue\uff1f"
        },
        {
            "created_at": "2020-01-18T05:47:28.296Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7610?focusedCommentId=17018512) by Micah Kornfield (emkornfield@gmail.com):*\n[~fan_li_ya]\u00a0that would be great, I started a thread on the mailing list about possible options for an allocator."
        },
        {
            "created_at": "2020-01-18T05:54:31.694Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7610?focusedCommentId=17018513) by Liya Fan (fan_li_ya):*\ni see. thanks.\nthis seems interesting, and i am working on another issue related to allocator"
        },
        {
            "created_at": "2020-01-19T23:08:16.734Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7610?focusedCommentId=17019056) by Jacques Nadeau (jnadeau):*\nPer comments on the mailing list, \r\n\r\nI think we should use the existing netty facades for this. \r\n\r\n[PlatformDependent.allocateMemory(long)](https://github.com/netty/netty/blob/4.1/common/src/main/java/io/netty/util/internal/PlatformDependent.java#L383)\r\n[PlatformDependent.freeMemory(long)](https://github.com/netty/netty/blob/4.1/common/src/main/java/io/netty/util/internal/PlatformDependent.java#L387)\r\n\r\nThese delegate to unsafe which also ensures that -XX:MaxDirectMemorySize is respected.\r\n\r\nI don't think we need a new allocator. We can simply check the size and use this path if beyond an int in size within the existing allocator."
        },
        {
            "created_at": "2020-04-27T19:04:33.675Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7610?focusedCommentId=17093851) by Bryan Cutler (bryanc):*\nIssue resolved by pull request 6323\n<https://github.com/apache/arrow/pull/6323>"
        }
    ]
}