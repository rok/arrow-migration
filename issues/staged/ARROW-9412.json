{
    "issue": {
        "title": "[C++] Add non-BUNDLED dependencies to exported INSTALL_INTERFACE_LIBS of arrow_static and test that it works",
        "body": "***Note**: This issue was originally created as [ARROW-9412](https://issues.apache.org/jira/browse/ARROW-9412). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nAs a companion project to ARROW-7605, we must document and test a workflow for statically linking with external static dependencies.\r\n\r\nWhen a dependency is not built as BUNDLED, it can be added to \"ARROW_STATIC_INSTALL_INTERFACE_LIBS\" so that it's included in ArrowTargets-\\*.cmake. The third party project of course must configure the dependent CMake targets\r\n\r\nPrior to the patch for ARROW-7605, toolchain libraries were added unconditionally to ARROW_STATIC_INSTALL_INTERFACE_LIBS whether BUNDLED or not (including our private jemalloc), creating a broken CMake \"arrow_static\" target. So this patch is to partially revert these changes to enable static linking with external toolchain libraries without breaking the BUNDLED static builds. Finally, this must be tested similar to cpp/examples/minimal_build/run_static.sh so that we can verify that each of the build/link scenarios are working correctly",
        "created_at": "2020-07-10T22:07:01.000Z",
        "updated_at": "2020-08-09T21:48:55.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-08-06T06:06:21.000Z"
    },
    "comments": [
        {
            "created_at": "2020-08-06T06:06:21.146Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9412?focusedCommentId=17172049) by Kouhei Sutou (kou):*\nIssue resolved by pull request 7842\n<https://github.com/apache/arrow/pull/7842>"
        }
    ]
}