{
    "issue": {
        "title": "[C++][Python] Restore non-UTC time zones when reading Parquet file that was previously Arrow",
        "body": "***Note**: This issue was originally created as [ARROW-9634](https://issues.apache.org/jira/browse/ARROW-9634). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThis was reported on the mailing list\r\n\r\n```Java\n\r\nIn [20]: df = pd.DataFrame({'a': pd.Series(np.arange(0, 10000, 1000)).astype(pd.DatetimeTZDtype('ns', 'America/Los_Angeles'\r\n    ...: ))})                                                                                                              \r\n\r\nIn [21]: t = pa.table(df)                                                                                                  \r\n\r\nIn [22]: t                                                                                                                 \r\nOut[22]: \r\npyarrow.Table\r\na: timestamp[ns, tz=America/Los_Angeles]\r\n\r\nIn [23]: pq.write_table(t, 'test.parquet')                                                                                 \r\n\r\nIn [24]: pq.read_table('test.parquet')                                                                                     \r\nOut[24]: \r\npyarrow.Table\r\na: timestamp[us, tz=UTC]\r\n\r\nIn [25]: pq.read_table('test.parquet')[0]                                                                                  \r\nOut[25]: \r\n<pyarrow.lib.ChunkedArray object at 0x7f72eb4b68f0>\r\n[\r\n  [\r\n    1970-01-01 00:00:00.000000,\r\n    1970-01-01 00:00:00.000001,\r\n    1970-01-01 00:00:00.000002,\r\n    1970-01-01 00:00:00.000003,\r\n    1970-01-01 00:00:00.000004,\r\n    1970-01-01 00:00:00.000005,\r\n    1970-01-01 00:00:00.000006,\r\n    1970-01-01 00:00:00.000007,\r\n    1970-01-01 00:00:00.000008,\r\n    1970-01-01 00:00:00.000009\r\n  ]\r\n]\r\n```",
        "created_at": "2020-08-03T16:37:33.000Z",
        "updated_at": "2021-01-27T17:38:51.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-01-27T17:38:39.000Z"
    },
    "comments": [
        {
            "created_at": "2020-08-03T16:40:10.507Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9634?focusedCommentId=17170174) by Wes McKinney (wesm):*\nThis seems likely related to the coercion from nanoseconds to microseconds, but I'm not sure"
        },
        {
            "created_at": "2020-08-04T07:44:54.516Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9634?focusedCommentId=17170622) by Joris Van den Bossche (jorisvandenbossche):*\nWhen explicitly constructing a table with microseconds, the timezone _is_ preserved, so indeed likely related to the nanosecond/microsecond conversions:\r\n\r\n```Java\n\r\nIn [5]: t = pa.table({'a': pa.array([0, 1, 2, 3], type=pa.timestamp(\"us\", tz=\"America/Los_Angeles\"))})                                                                                                             \r\n\r\nIn [6]: t                                                                                                                                                                                                          \r\nOut[6]: \r\npyarrow.Table\r\na: timestamp[us, tz=America/Los_Angeles]\r\n\r\nIn [7]: pq.write_table(t, 'test.parquet')                                                                                                                                                                          \r\n\r\nIn [8]: pq.read_table('test.parquet')                                                                                                                                                                              \r\nOut[8]: \r\npyarrow.Table\r\na: timestamp[us, tz=America/Los_Angeles]\r\n\r\n```"
        },
        {
            "created_at": "2020-08-04T07:48:07.663Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9634?focusedCommentId=17170628) by Joris Van den Bossche (jorisvandenbossche):*\n Note that the roundtrip pandas->parquet->pandas _works_, so I assume there this is corrected based on the pandas metadata:\r\n\r\n```Java\n\r\nIn [9]: df = pd.DataFrame({'a': pd.Series(np.arange(0, 10000, 1000)).astype(pd.DatetimeTZDtype('ns', 'America/Los_Angeles'))})                                                                                     \r\n\r\nIn [10]: df.dtypes                                                                                                                                                                                                 \r\nOut[10]: \r\na    datetime64[ns, America/Los_Angeles]\r\ndtype: object\r\n\r\nIn [11]: df.to_parquet(\"test2.parquet\", engine=\"pyarrow\")                                                                                                                                                          \r\n\r\nIn [13]: pd.read_parquet(\"test2.parquet\", engine=\"pyarrow\").dtypes                                                                                                                                                 \r\nOut[13]: \r\na    datetime64[ns, America/Los_Angeles]\r\ndtype: object\r\n\r\n```"
        },
        {
            "created_at": "2021-01-27T17:38:39.130Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9634?focusedCommentId=17273040) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 9336\n<https://github.com/apache/arrow/pull/9336>"
        }
    ]
}