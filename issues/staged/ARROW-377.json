{
    "issue": {
        "title": "Python: Add support for conversion of Pandas.Categorical",
        "body": "***Note**: This issue was originally created as [ARROW-377](https://issues.apache.org/jira/browse/ARROW-377). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nAt the moment conversion from `pandas.Categorical`\u00a0columns fails with `ArrowException: Invalid: only handle 1-dimensional arrays`. As a better alternative, we should provide one of the following solutions:\n\n \\* Convert the categorical column to a string (Pandas type `object`) column, then use the conversion routines for strings. Add some metadata to the Arrow column that it was initially a Pandas string column so that in the case of a roundtrip, it will be a categorical column again.\n \\* Implement the conversion of the column to a dictionary-encoded Arrow column. This is the preferred solution but may be more complicated to implement as certain requirements have not yet been implemented.",
        "created_at": "2016-11-15T21:01:56.000Z",
        "updated_at": "2017-02-13T16:34:34.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2017-01-24T00:28:41.000Z"
    },
    "comments": [
        {
            "created_at": "2017-01-24T00:28:41.953Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-377?focusedCommentId=15835427) by Wes McKinney (wesm):*\nthis was resolved in https://github.com/apache/arrow/commit/9b1b3979b499dc06b71a31b2696534550503d6e2. On HEAD I have:\n\n```Java\nIn [4]: s = pd.Series(pd.Categorical([1,2,3,4,1,2,3,4]))\n\nIn [5]: s\nOut[5]: \n0    1\n1    2\n2    3\n3    4\n4    1\n5    2\n6    3\n7    4\ndtype: category\nCategories (4, int64): [1, 2, 3, 4]\n\nIn [6]: cat_arr = pa.Array.from_pandas(s)\n\nIn [7]: cat_arr.type\nOut[7]: DataType(dictionary<values=int64, indices=int8>)\n\nIn [8]: cat_arr.to_pandas()\nOut[8]: \n[1, 2, 3, 4, 1, 2, 3, 4]\nCategories (4, int64): [1, 2, 3, 4]\n```"
        }
    ]
}