{
    "issue": {
        "title": "[C++][Go] Expose Dataset API to Go via C interface",
        "body": "***Note**: This issue was originally created as [ARROW-13742](https://issues.apache.org/jira/browse/ARROW-13742). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nRather than attempting to reimplement the Compute and Dataset APIs in Go, which would be fairly un-maintainable, we can expose the Compute and Dataset APIs from the libraries using a C interface and then have Go access them via cgo and the C Data Interface. \r\n\r\nThis requires both adding a C api to the Dataset library and a new module in the Go which would then rely on needing to link against it during build. As a result it also requires adding to the build scripts to properly test it. ",
        "created_at": "2021-08-25T01:49:20.000Z",
        "updated_at": "2022-08-30T15:09:09.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Continuous Integration",
            "Component: Go",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-08-30T15:09:09.000Z"
    },
    "comments": [
        {
            "created_at": "2022-07-12T14:04:21.777Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13742?focusedCommentId=17565556) by @toddfarmer:*\nThis issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned. Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon."
        },
        {
            "created_at": "2022-08-30T15:09:09.658Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13742?focusedCommentId=17597923) by Matthew Topol (zeroshade):*\nClosing this in favor of a Native Go approach rather than using CGO"
        }
    ]
}