{
    "issue": {
        "title": "[C++] Add a \"coalesce\" variadic scalar kernel",
        "body": "***Note**: This issue was originally created as [ARROW-13136](https://issues.apache.org/jira/browse/ARROW-13136). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nAdd a variadic scalar compute kernel that works like the SQL `coalesce` function. It should take arbitrarily many inputs of the same or compatible types and process them row-wise, returning the first non-null value in each row, or returning\u00a0`null` if there are no non-null values in the row.\u00a0\r\n\r\nFor example, in the case of 3 integer-type input arrays, this would take inputs:\r\n```java\n\r\nArray<int32>         Array<int32>         Array<int32>\r\n[                    [                    [\r\n  null,                2,                   3,\r\n  4,                   null,                6,\r\n  null,                null,                9,\r\n  null                 null                 null\r\n]                    ]                    ]\r\n```\r\nand return output:\r\n```java\n\r\nArray<int32>\r\n[ \r\n  2,\r\n  4,\r\n  9,\r\n  null\r\n] \r\n```\r\nThis should accept scalars and recycle their values.",
        "created_at": "2021-06-21T15:53:43.000Z",
        "updated_at": "2021-08-09T15:38:57.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-07-19T17:45:19.000Z"
    },
    "comments": [
        {
            "created_at": "2021-07-19T17:45:19.425Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13136?focusedCommentId=17383482) by Ben Kietzman (bkietz):*\nIssue resolved by pull request 10608\n<https://github.com/apache/arrow/pull/10608>"
        },
        {
            "created_at": "2021-07-19T21:18:40.627Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13136?focusedCommentId=17383603) by Ian Cook (icook):*\nThis kernel currently converts dictionaries to strings. Are there any other type limitations to note?"
        },
        {
            "created_at": "2021-07-19T21:21:16.591Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13136?focusedCommentId=17383605) by David Li (lidavidm):*\nIt'll unpack any dictionary, and it only supports binary-like variable width types. It should have fairly complete support for fixed-width types (except fixed-width list). Let me file a JIRA for complete type support."
        },
        {
            "created_at": "2021-07-19T21:22:32.175Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13136?focusedCommentId=17383606) by David Li (lidavidm):*\nFiled ARROW-13390."
        },
        {
            "created_at": "2021-07-19T21:39:09.287Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13136?focusedCommentId=17383617) by Ian Cook (icook):*\nThanks!"
        }
    ]
}