{
    "issue": {
        "title": "Fail to convert an integer list (arrow) to pandas",
        "body": "***Note**: This issue was originally created as [ARROW-8273](https://issues.apache.org/jira/browse/ARROW-8273). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nDear,\r\n\r\n\u00a0\r\n\r\nI have an arrow table and one of columns as an arrow list(size=2)\u00a0\r\n\r\nWhen I try to convert the table to pandas I got an\u00a0ArrowNotImplementedError error\r\n\r\n\u00a0below minimal case:\u00a0\r\n```java\n\r\nfrom pyarrow import Schema, Table, int64, list_, schema, array\r\nfields = [('foo', list_(int64(), 2),)]\r\nsc = schema(fields)\r\nfoo_column = [[1,2], [3,4]]\r\ncolumns = [foo_column]\r\na_table = Table.from_arrays(arrays=columns, schema=sc)\r\ndf = a_table.to_pandas()\r\n---------------------------------------------------------------------------\r\nArrowNotImplementedError Traceback (most recent call last)\r\n<ipython-input-13-87e390bb8b12> in <module>\r\n----> 1 df2 = a_table.to_pandas()\r\n~/somewhere/foo/venv/lib64/python3.7/site-packages/pyarrow/array.pxi in pyarrow.lib._PandasConvertible.to_pandas()\r\n~/somewhere/foo/venv/lib64/python3.7/site-packages/pyarrow/table.pxi in pyarrow.lib.Table._to_pandas()\r\n~/somewhere/foo/venv/lib64/python3.7/site-packages/pyarrow/pandas_compat.py in table_to_blockmanager(options, table, categories, ignore_metadata, types_mapper)\r\n764 _check_data_column_metadata_consistency(all_columns)\r\n765 columns = _deserialize_column_index(table, all_columns, column_indexes)\r\n--> 766 blocks = _table_to_blocks(options, table, categories, ext_columns_dtypes)\r\n767\r\n768 axes = [columns, index]\r\n~/somewhere/foo/venv/lib64/python3.7/site-packages/pyarrow/pandas_compat.py in _table_to_blocks(options, block_table, categories, extension_columns)\r\n1099 columns = block_table.column_names\r\n1100 result = pa.lib.table_to_blocks(options, block_table, categories,\r\n-> 1101 list(extension_columns.keys()))\r\n1102 return [_reconstruct_block(item, columns, extension_columns)\r\n1103 for item in result]\r\n~/somewhere/foo/venv/lib64/python3.7/site-packages/pyarrow/table.pxi in pyarrow.lib.table_to_blocks()\r\n~/somewhere/foo/venv/lib64/python3.7/site-packages/pyarrow/error.pxi in pyarrow.lib.check_status()\r\nArrowNotImplementedError: No known equivalent Pandas block for Arrow data of type fixed_size_list<item: int64>[2] is known\r\n```\r\n\u00a0\r\n\r\nIf I try\u00a0 to convert python list (column) to array that segfault\r\n```java\n\r\nfrom pyarrow import Schema, Table, int64, list_, schema, array\r\nfields = [('foo', list_(int64(), 2),)]\r\nsc = schema(fields)\r\nfoo_column = [[1,2], [3,4]]\r\ncolumns = [foo_column]\r\na_table = Table.from_arrays(arrays=columns, schema=sc)\r\ndf = a_table.to_pandas()\n```\r\n\u00a0\r\n\r\nIf I remove the fixed size that works:\r\n```java\n\r\nIn [1]: \r\nfrom pyarrow import Schema, Table, int64, list_, schema, array\r\nfields = [('foo', list_(int64()),)]\r\nsc = schema(fields)\r\nfoo_column = [[1,2], [3,4]]\r\ncolumns = [array(foo_column)]\r\na_table = Table.from_arrays(arrays=columns, schema=sc)\r\ndf = a_table.to_pandas()\r\ndf\r\n\r\nOut [1]:                                                                                                                                                                                                                                   \r\n      foo\r\n0  [1, 2]\r\n1  [3, 4]\n```\r\n\u00a0\r\n\r\nThanks for your help\r\n \u00a0",
        "created_at": "2020-03-30T14:30:58.000Z",
        "updated_at": "2020-03-30T16:42:57.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-03-30T16:42:57.000Z"
    },
    "comments": [
        {
            "created_at": "2020-03-30T16:42:57.184Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8273?focusedCommentId=17071131) by Wes McKinney (wesm):*\nDup of ARROW-7365"
        }
    ]
}