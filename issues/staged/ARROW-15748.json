{
    "issue": {
        "title": "[Python] Round temporal options default unit is `day` but documented as `second`.",
        "body": "***Note**: This issue was originally created as [ARROW-15748](https://issues.apache.org/jira/browse/ARROW-15748). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe [python documentation for round temporal options ](https://arrow.apache.org/docs/dev/python/generated/pyarrow.compute.RoundTemporalOptions.html) says the default unit is `second`, but the [actual behavior](https://arrow.apache.org/docs/dev/cpp/api/compute.html#classarrow_1_1compute_1_1_round_temporal_options) is a default of `day`.",
        "created_at": "2022-02-21T23:24:22.000Z",
        "updated_at": "2022-03-15T20:12:28.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-02-24T18:47:18.000Z"
    },
    "comments": [
        {
            "created_at": "2022-02-24T15:25:50.350Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15748?focusedCommentId=17497471) by Joris Van den Bossche (jorisvandenbossche):*\n`[~coady]` thanks for the report!\r\n\r\nThe link you provide for the actual behaviour points to the C++ docs, and while that indeed uses \"day\", the bindings in Python _do_ use \"second\": https://github.com/apache/arrow/blob/094c5ba186cddd69d4aa83de5ed2b62d4ed07081/python/pyarrow/_compute.pyx#L892\r\n\r\nNow, the confusing part is that this class is not instantiated (I assume) if no options are used at all, and in that case it uses the defaults from C++.  You can see this in the following example:\r\n\r\n```python\n\r\n>>> arr = pa.array([pd.Timestamp(\"2012-01-01 09:01:02.123456\")])\r\n>>> import pyarrow.compute as pc\r\n>>> pc.round_temporal(arr)    # <--- indeed uses \"day\" by default\r\n<pyarrow.lib.TimestampArray object at 0x7f5d7b56a040>\r\n[\r\n  2012-01-01 00:00:00.000000\r\n]\r\n>>> pc.round_temporal(arr, unit=\"second\")    # <--- manually specifying \"second\" still works\r\n<pyarrow.lib.TimestampArray object at 0x7f5d7a67fd00>\r\n[\r\n  2012-01-01 09:01:02.000000\r\n]\r\n>>> pc.round_temporal(arr, multiple=5)    # <--- but when specifying a different option, it now actually defaults to \"second\" ...\r\n<pyarrow.lib.TimestampArray object at 0x7f5d7b548b80>\r\n[\r\n  2012-01-01 09:01:00.000000\r\n]\r\n```\r\n\r\nNow, long story short, the simple conclusion is of course still that we should align the defaults in C++ and Python"
        },
        {
            "created_at": "2022-02-24T16:21:25.616Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15748?focusedCommentId=17497513) by Rok Mihevc (rokm):*\nThanks for the analysis and suggestion Joris! I'll do that and add a python test."
        },
        {
            "created_at": "2022-02-24T18:47:18.105Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15748?focusedCommentId=17497640) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 12507\n<https://github.com/apache/arrow/pull/12507>"
        }
    ]
}