{
    "issue": {
        "title": "[C++] Document required Boost version",
        "body": "***Note**: This issue was originally created as [ARROW-5474](https://issues.apache.org/jira/browse/ARROW-5474). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSee debugging on\u00a0https://issues.apache.org/jira/browse/ARROW-5470. One possible cause for that error is that the local filesystem patch increased the version of boost that we actually require. The boost version (1.54 vs 1.58) was one difference between failure and success.\u00a0\r\n\r\nAnother point of confusion was that CMake reported two different versions of boost at different times.\u00a0\r\n\r\nIf we require a minimum version of boost, can we document that better, check for it more accurately in the build scripts, and fail with a useful message if that minimum isn't met? Or something else helpful.\r\n\r\nIf the actual cause of the failure was something else (e.g. compiler version), we should figure that out too.",
        "created_at": "2019-05-31T22:28:20.000Z",
        "updated_at": "2019-06-19T13:26:19.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-06-19T13:26:07.000Z"
    },
    "comments": [
        {
            "created_at": "2019-05-31T23:36:34.349Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5474?focusedCommentId=16853481) by Wes McKinney (wesm):*\nWe don't have much regular feedback about older Boost versions, it mainly happens around releases, though it would not be a huge effort to set up a Docker job to test with the Boost versions coming from different Linux distributions. Gandiva doesn't build with Boost 1.54 on Ubuntu 14.04, for example, see ARROW-4868"
        },
        {
            "created_at": "2019-06-01T09:31:53.234Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5474?focusedCommentId=16853649) by Antoine Pitrou (apitrou):*\nAFAIU, Boost is a fast moving library (I'm not sure they guarantee API stability?), so IMO it makes sense to require a recent version."
        },
        {
            "created_at": "2019-06-01T11:44:05.622Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5474?focusedCommentId=16853674) by Antoine Pitrou (apitrou):*\nFrom the Boost FAQ (https://www.boost.org/users/faq.html):\r\n\r\n> The scheme is x.y.z, where x is incremented only for massive changes, such as a reorganization of many libraries, y is incremented whenever a new library is added, and z is incremented for maintenance releases.\r\n\r\nThe FAQ also does not mention API stability."
        },
        {
            "created_at": "2019-06-01T11:46:05.440Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5474?focusedCommentId=16853675) by Antoine Pitrou (apitrou):*\nAnd from this other FAQ (https://www.boost.org/doc/libs/1_70_0/doc/html/boost_dll/f_a_q_.html \u2013 there are several of them??):\r\n\r\n> Library only guarantees that alias names created using the BOOST_DLL_ALIAS macros will not change with the change of compiler or platform. You must take care of functions ABI and API stability by your own.\r\n"
        },
        {
            "created_at": "2019-06-03T02:03:36.325Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5474?focusedCommentId=16854159) by Wes McKinney (wesm):*\nI'm fine with requiring a recent version since we offer a vendored build option"
        },
        {
            "created_at": "2019-06-03T15:06:40.892Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5474?focusedCommentId=16854687) by Uwe Korn (uwe):*\nFor adoption reasons, it would be nice to use Ubuntu 16.04 as a baseline. This has Boost 1.58."
        },
        {
            "created_at": "2019-06-03T15:07:55.155Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5474?focusedCommentId=16854692) by Wes McKinney (wesm):*\nThat's also fine with me. We have https://github.com/apache/arrow/blob/master/cpp/Dockerfile.ubuntu-xenial to help maintain this support, is running that sufficient to check?"
        },
        {
            "created_at": "2019-06-03T16:58:14.350Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5474?focusedCommentId=16854820) by Neal Richardson (npr):*\nBoost 1.58 seemed to be sufficient in the build I was fighting last week. Fine by me if we declare that the minimum, so that still leaves two tasks: (1) fail with a useful message in CMake if boost is < 1.58, and (2) resolve why it later reported that boost 1.67 was present."
        },
        {
            "created_at": "2019-06-14T20:25:29.559Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5474?focusedCommentId=16864410) by Wes McKinney (wesm):*\nLooking at this. Our build is also broken on Xenial gcc 5.4.0"
        },
        {
            "created_at": "2019-06-14T20:30:27.875Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5474?focusedCommentId=16864416) by Wes McKinney (wesm):*\nThis is a new one on me... it seems gcc 5.4.0 is pickier about string literals\r\n\r\n```Java\n\r\n/arrow/cpp/src/arrow/ipc/json-simple-test.cc:543:9: error: missing terminating \" character [-Werror]\r\n   ASSERT_OK(ArrayFromJSON(type, R\"delim(\r\n         ^\r\n/arrow/cpp/src/arrow/ipc/json-simple-test.cc:543:2: error: missing terminating \" character\r\n   ASSERT_OK(ArrayFromJSON(type, R\"delim(\r\n  ^\r\n/arrow/cpp/src/arrow/ipc/json-simple-test.cc:550:1: error: stray '\\' in program\r\n )delim\",\r\n ^\r\n/arrow/cpp/src/arrow/ipc/json-simple-test.cc:617:9: error: missing terminating \" character [-Werror]\r\n   ASSERT_OK(ArrayFromJSON(type, R\"delim(\r\n         ^\r\n/arrow/cpp/src/arrow/ipc/json-simple-test.cc:617:2: error: missing terminating \" character\r\n   ASSERT_OK(ArrayFromJSON(type, R\"delim(\r\n  ^\r\n/arrow/cpp/src/arrow/ipc/json-simple-test.cc:622:9: error: stray '\\' in program\r\n         [null, \"empty\"]\r\n         ^\r\n/arrow/cpp/src/arrow/ipc/json-simple-test.cc:622:17: error: missing terminating \" character [-Werror]\r\n         [null, \"empty\"]\r\n                 ^\r\n/arrow/cpp/src/arrow/ipc/json-simple-test.cc:622:9: error: missing terminating \" character\r\n         [null, \"empty\"]\r\n         ^\r\n/arrow/cpp/src/arrow/ipc/json-simple-test.cc:630:9: error: stray '\\' in program\r\n         [\"bootstrapping tautology?\", \"lispy\", null, \"i can see eternity\"]\r\n         ^\r\n/arrow/cpp/src/arrow/ipc/json-simple-test.cc:630:11: error: missing terminating \" character [-Werror]\r\n         [\"bootstrapping tautology?\", \"lispy\", null, \"i can see eternity\"]\r\n           ^\r\n/arrow/cpp/src/arrow/ipc/json-simple-test.cc:630:9: error: missing terminating \" character\r\n         [\"bootstrapping tautology?\", \"lispy\", null, \"i can see eternity\"]\r\n         ^\r\n/arrow/cpp/src/arrow/ipc/json-simple-test.cc:635:1: error: stray '\\' in program\r\n )delim\",\r\n ^\r\n/arrow/cpp/src/arrow/ipc/json-simple-test.cc: In member function 'virtual void arrow::ipc::internal::json::TestMap_IntegerToInteger_Test::TestBody()':\r\n/arrow/cpp/src/arrow/ipc/json-simple-test.cc:544:1: error: two consecutive '[' shall only introduce an attribute before '[' token\r\n [\r\n ^\r\n/arrow/cpp/src/arrow/ipc/json-simple-test.cc:544:1: error: return-statement with a value, in function returning 'void' [-fpermissive]\r\n/arrow/cpp/src/arrow/ipc/json-simple-test.cc:544:1: error: expected ';' before '[' token\r\n/arrow/cpp/src/arrow/ipc/json-simple-test.cc:545:6: error: expected ']' before '[' token\r\n     [[0, 1], [1, 1], [2, 2], [3, 3], [4, 5], [5, 8]],\r\n      ^\r\n/arrow/cpp/src/arrow/ipc/json-simple-test.cc: In member function 'virtual void arrow::ipc::internal::json::TestMap_IntegerMapToStringList_Test::TestBody()':\r\n/arrow/cpp/src/arrow/ipc/json-simple-test.cc:618:1: error: two consecutive '[' shall only introduce an attribute before '[' token\r\n [\r\n ^\r\n/arrow/cpp/src/arrow/ipc/json-simple-test.cc:618:1: error: return-statement with a value, in function returning 'void' [-fpermissive]\r\n/arrow/cpp/src/arrow/ipc/json-simple-test.cc:618:1: error: expected ';' before '[' token\r\n/arrow/cpp/src/arrow/ipc/json-simple-test.cc:620:7: error: expected ']' before '[' token\r\n       [\r\n```"
        },
        {
            "created_at": "2019-06-14T20:47:56.439Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5474?focusedCommentId=16864440) by Wes McKinney (wesm):*\nHandling this separately in ARROW-5615"
        },
        {
            "created_at": "2019-06-16T19:14:02.077Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5474?focusedCommentId=16865124) by Wes McKinney (wesm):*\nSo supporting Boost 1.58 comes with a price \u2013 the Flight unit tests depend on Boost.Process which first shipped in Boost 1.64 (which is available in Ubuntu 18.04). I think that building the production libraries with Boost 1.58 is possible, we'll have to set up a Docker build to verify this. I'm working on getting a Xenial 16.04 build with Flight working in the meantime which means vendoring Boost (or installing from PPA)"
        },
        {
            "created_at": "2019-06-19T13:26:07.894Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5474?focusedCommentId=16867611) by Wes McKinney (wesm):*\nIssue resolved by pull request 4612\n<https://github.com/apache/arrow/pull/4612>"
        }
    ]
}