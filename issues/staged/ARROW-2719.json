{
    "issue": {
        "title": "[Python/C++] ArrowSchema not hashable",
        "body": "***Note**: This issue was originally created as [ARROW-2719](https://issues.apache.org/jira/browse/ARROW-2719). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe arrow schema is immutable and\u00a0should provide a way of hashing itself.\u00a0",
        "created_at": "2018-06-18T09:16:34.000Z",
        "updated_at": "2019-09-20T00:54:54.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-09-18T14:45:33.000Z"
    },
    "comments": [
        {
            "created_at": "2019-09-18T14:44:34.372Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2719?focusedCommentId=16932516) by Antoine Pitrou (apitrou):*\nThis has been fixed in the meantime:\r\n```python\n\r\n>>> sch = pa.schema([('ints', pa.int16()), ('strs', pa.string())])                                                                                                   \r\n>>> hash(sch)                                                                                                                                                        \r\n988864331374776575\r\n>>> s = {sch}                                                                                                                                                        \r\n>>> sch in s                                                                                                                                                         \r\nTrue\r\n>>> pa.schema([('ints', pa.int16()), ('strs', pa.string())]) in s                                                                                                    \r\nTrue\r\n>>> pa.schema([('ints', pa.int32()), ('strs', pa.string())]) in s                                                                                                    \r\nFalse\r\n```\r\n"
        }
    ]
}