{
    "issue": {
        "title": "[Rust] [Parquet] String-based path column projection",
        "body": "***Note**: This issue was originally created as [ARROW-11618](https://issues.apache.org/jira/browse/ARROW-11618). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThere is currently no way to select a column by its path, e.g. 'a.b.c'. We have to select the column by its index, which is not trivial for nested structures.\r\n\r\nFor example, if a record has the following schema, the column indices are shown in parentheses:\r\n\r\n```Java\n\r\nschema:\r\n  a [struct]         (\"a\")        \r\n    b [struct]       (\"a.b\")      \r\n      c [int32]      (\"a.b.c\")    [0]\r\n      d [struct]     (\"a.b.d\")    \r\n        e [int32]    (\"a.b.d.e\")  [1]\r\n        f [bool]     (\"a.b.d.f\")  [2]\r\n      g [int64]      (\"a.b.g\")    [3]\r\n```\r\n\r\nif one wants to select 'a.b', they need to know that 'a.b.d' spans 2 (1 to 2) columns. This is inconvenient, and potentially forces readers to read whole records to avoid this inconvenience.\r\n\r\nA string-based projection could allow one to select columns 1 and 2 via \"a.b.d\" or column 2 via \"a.b.g\"",
        "created_at": "2021-02-13T11:39:28.000Z",
        "updated_at": "2021-04-26T12:47:29.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-04-26T12:47:29.000Z"
    },
    "comments": [
        {
            "created_at": "2021-04-26T12:47:28.439Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11618?focusedCommentId=17332213) by Andrew Lamb (alamb):*\nMigrated to github: https://github.com/apache/arrow-rs/issues/182"
        }
    ]
}