{
    "issue": {
        "title": "[C++] Add Copy virtual method to arrow::Buffer",
        "body": "***Note**: This issue was originally created as [ARROW-1360](https://issues.apache.org/jira/browse/ARROW-1360). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSome kinds of buffers (like GPU buffers) may need to use something other than `memcpy` (or its parallel variant) to copy memory. It might be useful to provide an abstract API for copying between RAM and some buffer.",
        "created_at": "2017-08-16T16:20:29.000Z",
        "updated_at": "2017-08-28T13:37:42.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2017-08-21T19:00:53.000Z"
    },
    "comments": [
        {
            "created_at": "2017-08-21T17:49:59.190Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1360?focusedCommentId=16135496) by Ankit Aggarwal (ankit5012):*\nI think it can be a better implementation if we do something like this\n\n```c++\nclass DefaultMemcpy{\n    public:\n        static void Copy(/**Pass the parameters here **/){\n            std::cout <<\"Default Memcpy \" << std::endl;\n        }\n};\n\nclass CustomMemcpy {\n    public:\n        static void Copy(){\n            std::cout << \"Custom Memcpy \" << std::endl;\n        }\n};\nclass Buffer {\npublic:\n    template <typename T = DefaultMemcpy>\n    void Copy(){\n        T::Copy() ;\n    }\n};\n\nint main(){\n    Buffer obj; \n    obj.Copy<CustomMemcpy>();\n    return 0;\n}\n```\n\nJust let me know whether it is a feasible design\n"
        },
        {
            "created_at": "2017-08-21T17:52:43.870Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1360?focusedCommentId=16135501) by Wes McKinney (wesm):*\nAs I've dug into this, I believe it may be better to defer writing to implementations of OutputStream, ReadableFile, so it might be better to close this. For example, `FixedSizeBufferOutputStream` supports a parallel memcpy to CPU memory. We can keep thinking about it until we've hardened some of the issues around the JIRAs attached to ARROW-1055"
        },
        {
            "created_at": "2017-08-21T19:00:53.673Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-1360?focusedCommentId=16135611) by Wes McKinney (wesm):*\nI think we should implement a buffered `GpuBufferWriter` to assist with this, which is more consistent with other Arrow APIs that need an interface to write data to"
        }
    ]
}