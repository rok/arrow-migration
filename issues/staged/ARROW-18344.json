{
    "issue": {
        "title": "[C++] Use input pre-sortedness to create concatenated sorted table ",
        "body": "***Note**: This issue was originally created as [ARROW-18344](https://issues.apache.org/jira/browse/ARROW-18344). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIn case of concatenating large sorted tables (e.g. sorted timeseries data) the resulting table is no longer sorted. However the input sortedness can be used to significantly speed up post concatenation sorting. A potential API could be to add ConcatenateTablesOptions.inputs_sorted and implement the logic in ConcatenateTables.",
        "created_at": "2022-11-16T15:01:21.000Z",
        "updated_at": "2022-11-17T10:25:30.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-11-16T15:05:48.340Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18344?focusedCommentId=17634876) by David Li (lidavidm):*\nWouldn't this be more of a 'merge sort' compute function?"
        },
        {
            "created_at": "2022-11-16T15:10:32.677Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18344?focusedCommentId=17634877) by Antoine Pitrou (apitrou):*\nWe don't actually sort data in Arrow, we produce indices that would sort the (untouched, unsorted) data.\r\n\r\nHere we should follow the same approach, which means it can't be part of Concatenate.\r\n\r\nWe probably want something like a \"merge_indices\" compute function, similar to \"sort_indices\". The building blocks required for implementation are already there, since that's how \"sort_indices\" is implemented for chunked inputs.\r\n\r\nOne limitation is that this requires physical chunking to be aligned with logical sortedness? Unless we optionally allow the user to pass a vector of the boundaries between (logical) sorted chunks.\r\n\r\n"
        },
        {
            "created_at": "2022-11-16T19:28:53.795Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18344?focusedCommentId=17634987) by Rok Mihevc (rokm):*\nDo you think it would be ok to start by leaving the sortedness responsibility to the user?"
        },
        {
            "created_at": "2022-11-16T20:06:12.541Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18344?focusedCommentId=17634997) by Antoine Pitrou (apitrou):*\nThat's what we should do indeed. But do we want the user to be able to pass sort indices or not?"
        },
        {
            "created_at": "2022-11-16T20:15:12.871Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18344?focusedCommentId=17634999) by Rok Mihevc (rokm):*\nIt would be nice to have the more general case covered like that. Let me ask around and report back."
        },
        {
            "created_at": "2022-11-17T10:23:59.772Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18344?focusedCommentId=17635277) by Rok Mihevc (rokm):*\nI got some feedback that passing sort indices would indeed be valuable so I propose that is how we implement this."
        }
    ]
}