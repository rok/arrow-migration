{
    "issue": {
        "title": "[C++] Implement variant of FixedSizeBufferWriter that also supports reading (like MemoryMappedFile)",
        "body": "***Note**: This issue was originally created as [ARROW-2063](https://issues.apache.org/jira/browse/ARROW-2063). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThis would be helpful for testing, among other things",
        "created_at": "2018-01-30T21:59:31.000Z",
        "updated_at": "2021-03-22T16:57:17.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-03-22T16:57:16.000Z"
    },
    "comments": [
        {
            "created_at": "2018-07-23T12:06:15.451Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2063?focusedCommentId=16552724) by Antoine Pitrou (apitrou):*\nInstead of adding a whole new class for it, how about a new `FixedSizeBufferWriter` method that returns a `BufferReader` over the underlying buffer? Perhaps `FixedSizeBufferWriter::GetReader`."
        },
        {
            "created_at": "2018-07-23T19:30:38.949Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2063?focusedCommentId=16553298) by Wes McKinney (wesm):*\nSounds OK to me. We could also change `FixedSizeBufferWriter` to be `FixedSizeBufferIO` that supports both reading and writing and have a single class"
        },
        {
            "created_at": "2018-07-23T19:30:49.092Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2063?focusedCommentId=16553299) by Wes McKinney (wesm):*\n`[~pcmoritz]` do you have an opinion?"
        },
        {
            "created_at": "2021-03-22T16:57:17.039Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2063?focusedCommentId=17306379) by Antoine Pitrou (apitrou):*\nI'm going to close fix as there is no obvious need for it."
        }
    ]
}