{
    "issue": {
        "title": "[Python] array equality defaults to identity",
        "body": "***Note**: This issue was originally created as [ARROW-2150](https://issues.apache.org/jira/browse/ARROW-2150). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI'm not sure this is deliberate, but it doesn't look very desirable to me:\r\n```Java\n\r\n>>> pa.array([1,2,3], type=pa.int32()) == pa.array([1,2,3], type=pa.int32())\r\nFalse\r\n```",
        "created_at": "2018-02-13T13:48:36.000Z",
        "updated_at": "2018-03-09T15:17:43.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2018-03-09T15:17:38.000Z"
    },
    "comments": [
        {
            "created_at": "2018-02-13T14:19:57.673Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2150?focusedCommentId=16362384) by Uwe Korn (uwe):*\nNo, this at the moment only lack of implementation. We have function in C++ that actually can take care of the comparisons (they are as simple as calling Array::Equal()) but they are probably not yet invoked in Python."
        },
        {
            "created_at": "2018-02-13T14:36:13.246Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2150?focusedCommentId=16362407) by Antoine Pitrou (apitrou):*\nSo the intended behaviour is to return a bool value, not an array of bools as with Numpy arrays?"
        },
        {
            "created_at": "2018-02-13T16:25:26.944Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2150?focusedCommentId=16362587) by Wes McKinney (wesm):*\nI think we should make this raise for now, and later perform vector comparison like NumPy (once we have a kernel available to do this)"
        },
        {
            "created_at": "2018-02-14T13:01:57.503Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2150?focusedCommentId=16363908) by Antoine Pitrou (apitrou):*\nA more general question: what is the ultimate aim for the Array API? Do we want to reproduce the Numpy API, or just provide a thin storage layer?"
        },
        {
            "created_at": "2018-02-14T15:06:59.285Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2150?focusedCommentId=16364209) by Wes McKinney (wesm):*\nFor the time being, I believe it should be a thin storage layer, and that the user API for analytics and computations should evolve separately. \r\n\r\nOnce we have a more sizable collection of kernel functions to work with we should spend some time thinking about what the API should look like."
        },
        {
            "created_at": "2018-02-14T15:12:19.218Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2150?focusedCommentId=16364224) by Antoine Pitrou (apitrou):*\n> For the time being, I believe it should be a thin storage layer, and that the user API for analytics and computations should evolve separately.\r\n\r\nSuch as letting the user create a Dask array from pyarrow buffers?"
        },
        {
            "created_at": "2018-03-09T15:17:38.277Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2150?focusedCommentId=16392983) by Wes McKinney (wesm):*\nIssue resolved by pull request 1729\n<https://github.com/apache/arrow/pull/1729>"
        }
    ]
}