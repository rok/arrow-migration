{
    "issue": {
        "title": "[MapArray] The key-value structure is confusing in MapArray constructor.",
        "body": "***Note**: This issue was originally created as [ARROW-9558](https://issues.apache.org/jira/browse/ARROW-9558). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI'm trying to build a MapArray and found following constructor from array_nested.cc.\r\n```c++\n\r\nMapArray::MapArray(const std::shared_ptr<DataType>& type, int64_t length,\r\n const std::shared_ptr<Buffer>& offsets,\r\n const std::shared_ptr<Array>& keys,\r\n const std::shared_ptr<Array>& items,\r\n const std::shared_ptr<Buffer>& null_bitmap, int64_t null_count,\r\n int64_t offset) {\r\n auto pair_data = ArrayData::Make(type->fields()[0]->type(), keys->data()->length,\r\n {nullptr}, {keys->data(), items->data()}, 0, offset);\r\n auto map_data = ArrayData::Make(type, length, {null_bitmap, offsets}, {pair_data},\r\n null_count, offset);\r\n SetData(map_data);\r\n}\r\n\u00a0\n```\r\nBut I can't tell how to split keys/items into different maps. From the code, all keys and items data are attached to pair_data as children and the pair_data then as a child to map_data. Then how to determine each key/item go to which map? For example, how to determine which map array to output. Is that controlled by param `offsets`? If so, is key/item number the unit for offsets? Say following example, the offsets should be like \\{0, 2, 4, ...} and \\{0, 1, 4, ...}\r\n\r\n{\r\n\r\n{key1: item1, key2: item2},\r\n\r\n{key3: item3, key4: item4},\r\n\r\n...\r\n\r\n}\r\n\r\n{\r\n\r\n{key1: item1},\r\n\r\n{key2: item2, key3: item3, key4: item4}\r\n\r\n...\r\n\r\n}\r\n\r\n\u00a0",
        "created_at": "2020-07-26T03:29:13.000Z",
        "updated_at": "2020-07-28T01:54:36.000Z",
        "labels": [
            "Migrated from Jira",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-07-28T01:54:36.000Z"
    },
    "comments": []
}