{
    "issue": {
        "title": "[C++] Compiler warnings with CHECKIN warning level in ORC adapter",
        "body": "***Note**: This issue was originally created as [ARROW-2010](https://issues.apache.org/jira/browse/ARROW-2010). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI am encountering this locally with clang 4.0 and BUILD_WARNING_LEVEL=CHECKIN. We should investigate why these aren't showing up in our CI builds\r\n\r\n```Java\n\r\n../src/arrow/adapters/orc/adapter.cc:138:38: error: implicit conversion loses integer precision: 'uint64_t' (aka 'unsigned long') to 'int32_t' (aka 'int') [-Werror,-Wshorten-64-to-32]\r\n      *out = fixed_size_binary(type->getMaximumLength());\r\n             ~~~~~~~~~~~~~~~~~ ~~~~~~^~~~~~~~~~~~~~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:151:30: error: implicit conversion loses integer precision: 'uint64_t' (aka 'unsigned long') to 'int32_t' (aka 'int') [-Werror,-Wshorten-64-to-32]\r\n        *out = decimal(type->getPrecision(), type->getScale());\r\n               ~~~~~~~ ~~~~~~^~~~~~~~~~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:151:52: error: implicit conversion loses integer precision: 'uint64_t' (aka 'unsigned long') to 'int32_t' (aka 'int') [-Werror,-Wshorten-64-to-32]\r\n        *out = decimal(type->getPrecision(), type->getScale());\r\n               ~~~~~~~                       ~~~~~~^~~~~~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:176:24: error: implicit conversion loses integer precision: 'uint64_t' (aka 'unsigned long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n      int size = type->getSubtypeCount();\r\n          ~~~~   ~~~~~~^~~~~~~~~~~~~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:188:24: error: implicit conversion loses integer precision: 'uint64_t' (aka 'unsigned long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n      int size = type->getSubtypeCount();\r\n          ~~~~   ~~~~~~^~~~~~~~~~~~~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:262:21: error: implicit conversion loses integer precision: 'uint64_t' (aka 'unsigned long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n    int size = type.getSubtypeCount();\r\n        ~~~~   ~~~~~^~~~~~~~~~~~~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:452:18: error: implicit conversion loses integer precision: 'int64_t' (aka 'long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n    for (int i = offset; i < length + offset; i++) {\r\n             ~   ^~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:477:18: error: implicit conversion loses integer precision: 'int64_t' (aka 'long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n    for (int i = offset; i < length + offset; i++) {\r\n             ~   ^~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:543:26: error: implicit conversion loses integer precision: 'int64_t' (aka 'long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n    int start = builder->length();\r\n        ~~~~~   ~~~~~~~~~^~~~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:572:26: error: implicit conversion loses integer precision: 'int64_t' (aka 'long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n    int start = builder->length();\r\n        ~~~~~   ~~~~~~~~~^~~~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:599:18: error: implicit conversion loses integer precision: 'int64_t' (aka 'long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n    for (int i = offset; i < length + offset; i++) {\r\n             ~   ^~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:615:18: error: implicit conversion loses integer precision: 'int64_t' (aka 'long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n    for (int i = offset; i < length + offset; i++) {\r\n             ~   ^~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:632:20: error: implicit conversion loses integer precision: 'int64_t' (aka 'long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n      for (int i = offset; i < length + offset; i++) {\r\n               ~   ^~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:642:20: error: implicit conversion loses integer precision: 'int64_t' (aka 'long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n      for (int i = offset; i < length + offset; i++) {\r\n               ~   ^~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:519:26: error: implicit conversion loses integer precision: 'int64_t' (aka 'long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n    int start = builder->length();\r\n        ~~~~~   ~~~~~~~~~^~~~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:389:16: note: in instantiation of function template specialization 'arrow::adapters::orc::ORCFileReader::Impl::AppendNumericBatchCast<arrow::NumericBuilder<arrow::Int32Type>, int, orc::LongVectorBatch, long>' requested here\r\n        return AppendNumericBatchCast<Int32Builder, int32_t, liborc::LongVectorBatch,\r\n               ^\r\n../src/arrow/adapters/orc/adapter.cc:519:26: error: implicit conversion loses integer precision: 'int64_t' (aka 'long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n    int start = builder->length();\r\n        ~~~~~   ~~~~~~~~~^~~~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:392:16: note: in instantiation of function template specialization 'arrow::adapters::orc::ORCFileReader::Impl::AppendNumericBatchCast<arrow::NumericBuilder<arrow::Int16Type>, short, orc::LongVectorBatch, long>' requested here\r\n        return AppendNumericBatchCast<Int16Builder, int16_t, liborc::LongVectorBatch,\r\n               ^\r\n../src/arrow/adapters/orc/adapter.cc:519:26: error: implicit conversion loses integer precision: 'int64_t' (aka 'long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n    int start = builder->length();\r\n        ~~~~~   ~~~~~~~~~^~~~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:395:16: note: in instantiation of function template specialization 'arrow::adapters::orc::ORCFileReader::Impl::AppendNumericBatchCast<arrow::NumericBuilder<arrow::Int8Type>, signed char, orc::LongVectorBatch, long>' requested here\r\n        return AppendNumericBatchCast<Int8Builder, int8_t, liborc::LongVectorBatch,\r\n               ^\r\n../src/arrow/adapters/orc/adapter.cc:519:26: error: implicit conversion loses integer precision: 'int64_t' (aka 'long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n    int start = builder->length();\r\n        ~~~~~   ~~~~~~~~~^~~~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:401:16: note: in instantiation of function template specialization 'arrow::adapters::orc::ORCFileReader::Impl::AppendNumericBatchCast<arrow::NumericBuilder<arrow::FloatType>, float, orc::DoubleVectorBatch, double>' requested here\r\n        return AppendNumericBatchCast<FloatBuilder, float, liborc::DoubleVectorBatch,\r\n               ^\r\n../src/arrow/adapters/orc/adapter.cc:599:18: error: implicit conversion loses integer precision: 'int64_t' (aka 'long') to 'int' [-Werror,-Wshorten-64-to-32]\r\n    for (int i = offset; i < length + offset; i++) {\r\n             ~   ^~~~~~\r\n../src/arrow/adapters/orc/adapter.cc:407:16: note: in instantiation of function template specialization 'arrow::adapters::orc::ORCFileReader::Impl::AppendBinaryBatch<arrow::StringBuilder>' requested here\r\n        return AppendBinaryBatch<StringBuilder>(batch, offset, length, builder);\r\n               ^\r\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\r\n20 errors generated.\r\n```",
        "created_at": "2018-01-18T23:10:50.000Z",
        "updated_at": "2018-01-26T23:13:18.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2018-01-26T23:13:18.000Z"
    },
    "comments": [
        {
            "created_at": "2018-01-26T23:13:18.768Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2010?focusedCommentId=16341774) by Wes McKinney (wesm):*\nIssue resolved by pull request 1506\n<https://github.com/apache/arrow/pull/1506>"
        }
    ]
}