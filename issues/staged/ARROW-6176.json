{
    "issue": {
        "title": "[Python] Allow to subclass ExtensionArray to attach to custom extension type",
        "body": "***Note**: This issue was originally created as [ARROW-6176](https://issues.apache.org/jira/browse/ARROW-6176). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently, you can define a custom extension type in Python with \r\n\r\n```Java\n\r\nclass UuidType(pa.ExtensionType):\r\n\r\n    def __init__(self):\r\n        pa.ExtensionType.__init__(self, pa.binary(16))\r\n\r\n    def __reduce__(self):\r\n        return UuidType, ()\r\n```\r\n\r\nbut the array you can create with this is always ExtensionArray. We should provide a way to define a subclass (eg `UuidArray` in this case) that can hold custom logic.\r\n\r\nFor example, a user might want to define `UuidArray` such that `arr[i]` returns an instance of Python's `uuid.UUID`\r\n\r\nFrom https://github.com/apache/arrow/pull/4532#pullrequestreview-249396691",
        "created_at": "2019-08-08T15:11:04.000Z",
        "updated_at": "2020-04-08T20:32:40.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-04-08T18:14:13.000Z"
    },
    "comments": [
        {
            "created_at": "2019-08-08T15:15:26.896Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6176?focusedCommentId=16903064) by Joris Van den Bossche (jorisvandenbossche):*\nThis might be done by adding a `ExtenstionType.\\_\\_arrow_ext_class\\_\\_` that points to the subclass? In that way `pyarrow_wrap_array` can use that class instead of one of the predefined ones in `\\_array_classes`."
        },
        {
            "created_at": "2020-04-08T18:14:13.978Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6176?focusedCommentId=17078562) by Wes McKinney (wesm):*\nIssue resolved by pull request 6653\n<https://github.com/apache/arrow/pull/6653>"
        }
    ]
}