{
    "issue": {
        "title": "[R] Update the as.Date() binding",
        "body": "***Note**: This issue was originally created as [ARROW-15805](https://issues.apache.org/jira/browse/ARROW-15805). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n",
        "created_at": "2022-02-28T17:34:40.000Z",
        "updated_at": "2022-07-05T12:05:38.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-07-05T12:05:38.000Z"
    },
    "comments": [
        {
            "created_at": "2022-06-29T23:30:05.729Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15805?focusedCommentId=17560679) by Jonathan Keane (jonkeane):*\nThis is alluded to in the PR comments, but taking a step back and thinking about the behavior:\r\n\r\n```Java\n\r\ndates_dash_first <- c(\"2022-01-01\", \"2022/02/02\", \"2022/02/02\", \"2022/02/02\", \"2022-01-01\", \"2022-01-01\")\r\ndates_slash_first <- c(\"2022/02/02\", \"2022-01-01\", \"2022/02/02\", \"2022/02/02\", \"2022-01-01\", \"2022-01-01\")\r\n\r\nas.Date(dates_dash_first, tryFormats = c(\"%Y-%m-%d\", \"%Y/%m/%d\"))\r\n#> [1] \"2022-01-01\" NA           NA           NA           \"2022-01-01\"\r\n#> [6] \"2022-01-01\"\r\n\r\nas.Date(dates_slash_first, tryFormats = c(\"%Y-%m-%d\", \"%Y/%m/%d\"))\r\n#> [1] \"2022-02-02\" NA           \"2022-02-02\" \"2022-02-02\" NA          \r\n#> [6] NA\r\n```\r\n\r\nWhich format is chosen and used is dependent on the underlying data, and critically the order that data is in. Given that we can't always guaranty the order of the data we are processing[1] we should not attempt to implement this behavior right now. \r\n\r\nInstead, we should have an error message if someone tries to specify `tryFormats` suggesting that they might use `lubridate::as_date()` if they want to specify multiple formats (and can accept that you don't get NAs for all formats other than the first that matches), or they should pick which format they want to use and use that.\r\n\r\n\r\n[1] and even if we could, it would take some tricky expression writing to pick the right format"
        },
        {
            "created_at": "2022-06-30T10:47:41.182Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15805?focusedCommentId=17560978) by Drago\u0219 Moldovan-Gr\u00fcnfeld (dragosmg):*\nI totally agree.\u00a0"
        },
        {
            "created_at": "2022-07-04T09:54:58.701Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15805?focusedCommentId=17562111) by Drago\u0219 Moldovan-Gr\u00fcnfeld (dragosmg):*\nI think a message advising users to try the dedicated date/time parsing functionality might be better than pointing them to `{}lubridate::as_date(){`}. I have implemented that in <https://github.com/apache/arrow/pull/13070.>\u00a0Happy to change it.\r\n\r\n`lubridate::as_date()`\u00a0documentation and source code does not indicate it would accept multiple formats. If the user would like to try several formats, I believe the best course of action would be to use lubridate's date/time parsing functionality."
        }
    ]
}