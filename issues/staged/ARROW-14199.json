{
    "issue": {
        "title": "[R] bindings for format where possible",
        "body": "***Note**: This issue was originally created as [ARROW-14199](https://issues.apache.org/jira/browse/ARROW-14199). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nNow that we have `strftime`, we should also be able to make bindings for `format()` as well. This might be complicated / we might need to punt on a bunch of types that `format()` can take but arrow doesn't (yet) support formatting of them, that's ok. \r\n\r\nThough some of those might be wrappable with a handful of kernels stacked together: `format(float)` might be round + cast to character\r\n",
        "created_at": "2021-10-01T17:45:11.000Z",
        "updated_at": "2022-03-11T19:22:06.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-03-11T16:34:52.000Z"
    },
    "comments": [
        {
            "created_at": "2022-01-25T13:26:07.544Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14199?focusedCommentId=17481810) by Drago\u0219 Moldovan-Gr\u00fcnfeld (dragosmg):*\nHow to best go about implementing this, given that `format()` methods are so large in scope? Do we start with a date-time binding? (i.e. register a binding inside `register_bindings_datetime()`). If we start with date-time, then `format.POSIXct()` would be the first one and should be identical to `strftime()` since `base::strftime()` is a wrapper around `format()`."
        },
        {
            "created_at": "2022-03-11T16:34:52.750Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14199?focusedCommentId=17505000) by Jonathan Keane (jonkeane):*\nIssue resolved by pull request 12319\n<https://github.com/apache/arrow/pull/12319>"
        }
    ]
}