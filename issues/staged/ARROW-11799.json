{
    "issue": {
        "title": "[Rust] String and Binary arrays created with incorrect length from unbound iterator",
        "body": "***Note**: This issue was originally created as [ARROW-11799](https://issues.apache.org/jira/browse/ARROW-11799). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhile looking for a way to make loading array data from parquet files faster, I stumbled on an edge case where string and binary arrays are created with an incorrect length from an iterator with no upper bound.\r\n\r\nHere is a simple example:\r\n\r\n```\r\n\u00a0//\u00a0iterator\u00a0that\u00a0doesn't\u00a0declare\u00a0(upper)\u00a0size\u00a0bound\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0let\u00a0string_iter\u00a0=\u00a0(0..).scan(0usize,\u00a0|pos,\u00a0i|\u00a0{\u00a0\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if\u00a0\\*pos\u00a0<\u00a010\u00a0{\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\\*pos\u00a0+=\u00a01;\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Some(Some(format!(\"value\u00a0{}\",\u00a0i)))\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0else\u00a0{\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0actually\u00a0returns\u00a0up\u00a0to\u00a010\u00a0values\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0None\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0})\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0limited\u00a0using\u00a0take()\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.take(100);\r\n\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0let\u00a0(lower_size_bound,\u00a0upper_size_bound)\u00a0=\u00a0string_iter.size_hint();\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0assert_eq!(lower_size_bound,\u00a00);\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0the\u00a0upper\u00a0bound,\u00a0defined\u00a0by\u00a0take\u00a0above,\u00a0is\u00a0100\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0assert_eq!(upper_size_bound,\u00a0Some(100));\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0let\u00a0string_array:\u00a0StringArray\u00a0=\u00a0string_iter.collect();\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0but\u00a0the\u00a0actual\u00a0number\u00a0of\u00a0items\u00a0in\u00a0the\u00a0array\u00a0is\u00a010\r\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0assert_eq!(string_array.len(),\u00a010);\r\n```\r\n\r\nFortunately this is easy to fix by using the length of the child offset array and I will be creating a PR for this shortly.",
        "created_at": "2021-02-26T20:11:22.000Z",
        "updated_at": "2021-03-05T10:33:43.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-03-04T19:45:17.000Z"
    },
    "comments": [
        {
            "created_at": "2021-03-04T19:45:17.651Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11799?focusedCommentId=17295551) by Andrew Lamb (alamb):*\nIssue resolved by pull request 9588\n<https://github.com/apache/arrow/pull/9588>"
        }
    ]
}