{
    "issue": {
        "title": "[C++] DayTimeIntervalType::DayMilliseconds comparison function seems incorrect",
        "body": "***Note**: This issue was originally created as [ARROW-14123](https://issues.apache.org/jira/browse/ARROW-14123). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe less than operator (`operator<`) implemented on `DayTimeIntervalType::DayMilliseconds` seems incorrect:\r\n\r\n```cpp\n\r\n    bool operator<(DayMilliseconds other) const {\r\n      return this->days < other.days || this->milliseconds < other.milliseconds;\r\n    }\r\n\r\n```\r\n\r\nWith this implementation, an example (in pseudocode) such as \r\n\r\n```cpp\n\r\nDayMilliseconds { days = 10, milliseconds = 999 } < DayMilliseconds { days = 9, milliseconds = 1000 }\r\n```\r\n\r\nwould return `true` when it should return `false`.",
        "created_at": "2021-09-24T16:22:48.000Z",
        "updated_at": "2022-07-04T17:41:27.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-12-16T17:26:52.595Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14123?focusedCommentId=17460905) by Phillip Cloud (cpcloud):*\nThis is a rather hairy issue that would likely require help from someone who knows kernels and the pitfalls of temporal operations. Removing the good-first-issue label."
        },
        {
            "created_at": "2022-01-07T18:48:21.453Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14123?focusedCommentId=17470819) by Phillip Cloud (cpcloud):*\nTwo problems inherent to this comparison:\r\n\r\n1. How should these two intervals compare?\r\n\r\n```Java\n\r\nDayMilliseconds = { days = 1, milliseconds = -1 }\r\nDayMilliseconds = { days = 0, milliseconds = 86399999 }\r\n```\r\n\r\n2. Are intervals correctly comparable without a time zone? The specific start and end of an interval determines its length. Without that information there isn't any correct way to compare two interval types. For example, day 2 - day 1 might be 23 or 25 hours if there's a timezone change between day 2 and day 1."
        }
    ]
}