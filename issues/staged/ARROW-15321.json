{
    "issue": {
        "title": "[Dev][Archery] numpydoc validation doesn't check all class methods",
        "body": "***Note**: This issue was originally created as [ARROW-15321](https://issues.apache.org/jira/browse/ARROW-15321). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nFrom discussion at https://github.com/apache/arrow/pull/12076#discussion_r783810077\r\n\r\nIt seems that by default, it doesn't loop over all _methods_ of classes, but only module-level objects?\r\n\r\nFor example, I notice that explicitly asking for `pyarrow.Table.to_pandas` catches some issues:\r\n\r\n```Java\n\r\n$ archery numpydoc pyarrow.Table.to_pandas --allow-rule PR10\r\nINFO:archery:Running Python docstring linters\r\nPR10: Parameter \"categories\" requires a space before the colon separating the parameter name and type\r\nPR10: Parameter \"use_threads\" requires a space before the colon separating the parameter name and type\r\n```\r\n\r\nBut with the default (check all of pyarrow) with `archery numpydoc --allow-rule PR10` it doesn't list those errors.\r\n\r\ncc `[~kszucs]` `[~amol-]`\r\n",
        "created_at": "2022-01-13T10:46:06.000Z",
        "updated_at": "2022-04-05T13:44:34.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Developer Tools",
            "Component: Python",
            "Type: task"
        ],
        "closed": true,
        "closed_at": "2022-03-28T16:55:50.000Z"
    },
    "comments": [
        {
            "created_at": "2022-01-13T10:57:38.538Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15321?focusedCommentId=17475261) by Alessandro Molina (amol-):*\nI will gladly take a look at this one if no one else wants to jump on it ealier."
        },
        {
            "created_at": "2022-01-13T10:58:19.067Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15321?focusedCommentId=17475262) by Joris Van den Bossche (jorisvandenbossche):*\nMore specifically, I think it doesn't work for cython classes, because they don't define a `\\_\\_module\\_\\_`, which is used here: https://github.com/apache/arrow/blob/ab86daf3f7c8a67bee6a175a749575fd40417d27/dev/archery/archery/lang/python.py#L142-L144\r\n\r\n\r\nExample: `Table.to_pandas` is implemented in cython, but `ORCFile.read` is a python class method:\r\n\r\n```Java\n\r\nIn [14]: pa.Table.to_pandas.__module__\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-14-fd0a68c749ef> in <module>\r\n----> 1 pa.Table.to_pandas.__module__\r\n\r\nAttributeError: 'method_descriptor' object has no attribute '__module__'\r\n\r\nIn [17]: from pyarrow import orc\r\n\r\nIn [18]: orc.ORCFile.read.__module__\r\nOut[18]: 'pyarrow.orc'\r\n```"
        },
        {
            "created_at": "2022-01-13T11:22:44.807Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15321?focusedCommentId=17475278) by Krisztian Szucs (kszucs):*\nCorrect, the cython defined symbols are not supported by numpydoc so we need to have workarounds for them. \r\n\r\nWe may try to disable the module checks for classes to see how much noise it introduces."
        },
        {
            "created_at": "2022-01-13T11:38:53.617Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15321?focusedCommentId=17475297) by Joris Van den Bossche (jorisvandenbossche):*\nI think they are actually supported to be validated by numpydoc, but it is _our_ \"traverse\" logic that doesn't pass them to numpydoc (unless explicitly passing the fully qualified method name like `archery numpydoc pyarrow.Table.to_pandas`)."
        },
        {
            "created_at": "2022-03-28T16:55:50.318Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15321?focusedCommentId=17513497) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 12698\n<https://github.com/apache/arrow/pull/12698>"
        }
    ]
}