{
    "issue": {
        "title": "[C++] Implement generic filesystem tests for GCS",
        "body": "***Note**: This issue was originally created as [ARROW-14924](https://issues.apache.org/jira/browse/ARROW-14924). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nOnce the GCS filesystem implementation is functionally complete, generic tests should be enabled for it to catch corner cases. See for example the S3 filesystem tests:\r\nhttps://github.com/apache/arrow/blob/3e666f6691495a8bed86e519d71c2cc22cf0c03d/cpp/src/arrow/filesystem/s3fs_test.cc#L1039-L1081",
        "created_at": "2021-11-30T09:26:20.000Z",
        "updated_at": "2022-01-18T18:01:36.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-01-18T13:48:44.000Z"
    },
    "comments": [
        {
            "created_at": "2021-11-30T09:28:33.794Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14924?focusedCommentId=17450982) by Antoine Pitrou (apitrou):*\ncc `[~coryan]`"
        },
        {
            "created_at": "2021-12-14T21:41:46.380Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14924?focusedCommentId=17459509) by Carlos O'Ryan (coryan):*\nI am having problems getting these tests to pass.  For example, consider this section of the `TestCreateDir()` test:\r\n\r\nhttps://github.com/apache/arrow/blob/3e666f6691495a8bed86e519d71c2cc22cf0c03d/cpp/src/arrow/filesystem/test_util.cc#L223-L226\r\n\r\nRecall that GCS does not have directories, it has a flat namespace.  We have been using files with a trailing `/` character as sentinels to indicate that a directory exists.  Because GCS has a flat namespace an object called `foo` is distinct from an object called `foo/` (or `foo///` for that matter).  Therefore, it is possible to have a \"file\" called `AB/def` and a \"directory\" called `AB/def/` at the same time.  The test fails because creating the directory sentinel `AB/def/` succeeds, even though the file `AB/def` already exists.\r\n\r\nI think there are several options, but I am not sure which one is more desirable:\r\n\r\n1. We could try to use `AB/def` as the directory sentinel.  I think that would make this test pass, but has some downsides: other places in the code would need to determine if an object without a trailing `/` is really a directory.  That we could do using metadata attributes. However, using metadata attributes would fail when using directory hierarchies created by other tools (say the GCS UI at https://console.cloud.google.com). In my opinion, this is a minor downside because any set of files created externally may be missing the directory sentinels altogether.\r\n1. Alternatively, when recursively creating a directory we could verify that each component does not have a \"file\" with the same name as the directory marker.  This seems expensive, it requires checking two different paths, not to mention the race conditions.\r\n\r\nMaybe there are other alternatives that I do not see at this moment.  At the moment I am inclined to use the first alternative.\r\n\r\n"
        },
        {
            "created_at": "2021-12-15T09:26:14.380Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14924?focusedCommentId=17459777) by Antoine Pitrou (apitrou):*\nI agree the first alternative sounds much better than the second alternative.\r\n\r\nThere is a third alternative, though, which is to define an additional \"deviation\" in the generic tests, such as those that already exist:\r\nhttps://github.com/apache/arrow/blob/master/cpp/src/arrow/filesystem/test_util.h#L159-L178\r\n\r\nI'll let you choose which alternative is the most reasonable, you're the expert here :-)"
        },
        {
            "created_at": "2022-01-18T13:48:44.392Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14924?focusedCommentId=17477870) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 12127\n<https://github.com/apache/arrow/pull/12127>"
        }
    ]
}