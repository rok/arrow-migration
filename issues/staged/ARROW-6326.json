{
    "issue": {
        "title": "[C++] Nullable fields when converting std::tuple to Table",
        "body": "***Note**: This issue was originally created as [ARROW-6326](https://issues.apache.org/jira/browse/ARROW-6326). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n`std::optional` isn't used for representing nullable fields in Arrow's current STL conversion API since it requires C++17. Also there are other ways to represent an optional field other than `std::optional` such as using pointers or external implementations of optional (`boost::optional`, `type_safe::optional` and alike). \r\n\r\nSince it is hard to maintain so many different kinds of specializations, introducing an `Optional` concept covering these classes could solve this issue and allow implementing nullable fields consistently.\r\n\r\nSo, the gist of proposed change will be something along the lines of:\r\n\r\n```cpp\n\r\n\r\ntemplate<typename T>\r\nconstexpr bool is_optional_like_v = ...;\r\n\r\ntemplate<typename Optional>\r\nstruct CTypeTraits<Optional, enable_if_t<is_optional_like_v<Optional>>> {\r\n   //...\r\n}\r\n\r\ntemplate<typename Optional>\r\nstruct ConversionTraits<Optional, enable_if_t<is_optional_like_v<Optional>>> : public CTypeTraits<Optional> {\r\n   //...\r\n}\r\n```\r\n\r\nFor a type `T` to be considered as an `Optional`:\r\n1) It should be convertible (implicitly or explicitly)  to `bool`, i.e. it implements `[explicit] operator bool()`,\r\n2) It should be dereferencable, i.e. it implements `operator*()`.\r\n\r\nThese two requirements provide a generalized way of templating nullable fields based on pointers, `std::optional`, `boost::optional` etc. However, it would be better (necessary?) if this implementation should act as a default while not breaking existing specializations of users (e.g. an existing  implementation in which `std::optional` is specialized by user).\r\n\r\nIs there any issues this approach may cause that I may have missed?\r\n\r\nI will open a draft PR for working on that meanwhile.",
        "created_at": "2019-08-22T19:56:38.000Z",
        "updated_at": "2019-09-08T19:51:00.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-09-08T17:16:05.000Z"
    },
    "comments": [
        {
            "created_at": "2019-09-08T17:16:05.774Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6326?focusedCommentId=16925218) by Uwe Korn (uwe):*\nIssue resolved by pull request 5171\n<https://github.com/apache/arrow/pull/5171>"
        }
    ]
}