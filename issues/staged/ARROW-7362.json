{
    "issue": {
        "title": "[Python] ListArray.flatten() should take care of slicing offsets",
        "body": "***Note**: This issue was originally created as [ARROW-7362](https://issues.apache.org/jira/browse/ARROW-7362). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently ListArray.flatten() simply returns the child array. If a ListArray is a slice of another ListArray, they will share the same child array, however the expected behavior (I think) of flatten() should be returning an Array that's a concatenation of all the sub-lists in the ListArray, so the slicing offset should be taken into account.\r\n\r\n\u00a0\r\n\r\nFor example:\r\n\r\na = pa.array([[1], [2], [3]])\r\n\r\nassert a.flatten().equals(pa.array([1,2,3]))\r\n\r\n1. expected:\n   \n   a.slice(1).flatten().equals(pa.array([2, 3]))",
        "created_at": "2019-12-10T06:51:47.000Z",
        "updated_at": "2019-12-18T16:57:52.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-12-18T16:57:52.000Z"
    },
    "comments": [
        {
            "created_at": "2019-12-10T13:02:44.621Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7362?focusedCommentId=16992524) by Joris Van den Bossche (jorisvandenbossche):*\nThere was some discussion about this in ARROW-7031: https://github.com/apache/arrow/pull/5759, where it was said to not slice the values. \r\n\r\nPersonally, I think it would be nice to have easy python access to the sliced values as well, but I also find it somewhat confusing to have `.flatten()` and `.values` differ."
        },
        {
            "created_at": "2019-12-10T15:02:03.224Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7362?focusedCommentId=16992628) by Wes McKinney (wesm):*\nI can't remember what was the argument before (maybe I was making it, sorry), but I think it would be OK for `flatten()` to return the sliced values, while `.values` does need to return the unsliced values I think. As long as an appropriate caveat is added to the docstring to say that the offsets should not be used (for random access purposes) with the result of `flatten()`"
        },
        {
            "created_at": "2019-12-10T15:05:31.929Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7362?focusedCommentId=16992631) by Joris Van den Bossche (jorisvandenbossche):*\nYes, the main thing is that `offsets` and one of `values`/`flatten()` need to match. Currently I implemented `offsets` such that they are sliced themselves but point into the unsliced values."
        },
        {
            "created_at": "2019-12-10T15:08:46.821Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7362?focusedCommentId=16992636) by Joris Van den Bossche (jorisvandenbossche):*\nAnother option could be to adjust the offsets so they point into the sliced values. But, this would then not be a zero-copy access of the offsets, which probably makes it a bad idea."
        },
        {
            "created_at": "2019-12-18T16:57:52.097Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7362?focusedCommentId=16999348) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 6006\n<https://github.com/apache/arrow/pull/6006>"
        }
    ]
}