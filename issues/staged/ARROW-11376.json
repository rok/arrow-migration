{
    "issue": {
        "title": "[C++] ThreadedTaskGroup failure with Thread Sanitizer enabled",
        "body": "***Note**: This issue was originally created as [ARROW-11376](https://issues.apache.org/jira/browse/ARROW-11376). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWith `ARROW_USE_TSAN=on`, I get the following error:\r\n\r\n```Java\n\r\nWARNING: ThreadSanitizer: data race (pid=53750)\r\n  Write of size 1 at 0x7ffc241c5833 by thread T45:\r\n    #0 operator() ../src/arrow/util/task_group_test.cc:88 (arrow-threading-utility-test+0xec0cb)\r\n    #1 _M_invoke /usr/include/c++/9/bits/std_function.h:286 (arrow-threading-utility-test+0xf085b)\r\n    #2 std::function<arrow::Status ()>::operator()() const /usr/include/c++/9/bits/std_function.h:688 (libarrow.so.300+0x120842a)\r\n    #3 arrow::internal::ThreadedTaskGroup::AppendReal(std::function<arrow::Status ()>)::{lambda(std::shared_ptr<arrow::internal::ThreadedTaskGroup> const&, std::function<arrow::Status ()> const&)#1}::operator()(std::shared_ptr<arrow::internal::ThreadedTaskGroup> const&, std::function<arrow::Status ()> const&) const ../src/arrow/util/task_group.cc:90 (libarrow.so.300+0x12078b5)\r\n    #4 void std::__invoke_impl<void, arrow::internal::ThreadedTaskGroup::AppendReal(std::function<arrow::Status ()>)::{lambda(std::shared_ptr<arrow::internal::ThreadedTaskGroup> const&, std::function<arrow::Status ()> const&)#1}&, std::shared_ptr<arrow::internal::ThreadedTaskGroup>&, std::function<arrow::Status ()>&>(std::__invoke_other, arrow::internal::ThreadedTaskGroup::AppendReal(std::function<arrow::Status ()>)::{lambda(std::shared_ptr<arrow::internal::ThreadedTaskGroup> const&, std::function<arrow::Status ()> const&)#1}&, std::shared_ptr<arrow::internal::ThreadedTaskGroup>&, std::function<arrow::Status ()>&) /usr/include/c++/9/bits/invoke.h:60 (libarrow.so.300+0x120a57e)\r\n    #5 std::__invoke_result<arrow::internal::ThreadedTaskGroup::AppendReal(std::function<arrow::Status ()>)::{lambda(std::shared_ptr<arrow::internal::ThreadedTaskGroup> const&, std::function<arrow::Status ()> const&)#1}&, std::shared_ptr<arrow::internal::ThreadedTaskGroup>&, std::function<arrow::Status ()>&>::type std::__invoke<arrow::internal::ThreadedTaskGroup::AppendReal(std::function<arrow::Status ()>)::{lambda(std::shared_ptr<arrow::internal::ThreadedTaskGroup> const&, std::function<arrow::Status ()> const&)#1}&, std::shared_ptr<arrow::internal::ThreadedTaskGroup>&, std::function<arrow::Status ()>&>(std::__invoke_result&&, (arrow::internal::ThreadedTaskGroup::AppendReal(std::function<arrow::Status ()>)::{lambda(std::shared_ptr<arrow::internal::ThreadedTaskGroup> const&, std::function<arrow::Status ()> const&)#1}&)...) /usr/include/c++/9/bits/invoke.h:95 (libarrow.so.300+0x120a435)\r\n    #6 void std::_Bind<arrow::internal::ThreadedTaskGroup::AppendReal(std::function<arrow::Status ()>)::{lambda(std::shared_ptr<arrow::internal::ThreadedTaskGroup> const&, std::function<arrow::Status ()> const&)#1} (std::shared_ptr<arrow::internal::ThreadedTaskGroup>, std::function<arrow::Status ()>)>::__call<void, , 0ul, 1ul>(std::tuple<>&&, std::_Index_tuple<0ul, 1ul>) /usr/include/c++/9/functional:400 (libarrow.so.300+0x120a28d)\r\n    #7 void std::_Bind<arrow::internal::ThreadedTaskGroup::AppendReal(std::function<arrow::Status ()>)::{lambda(std::shared_ptr<arrow::internal::ThreadedTaskGroup> const&, std::function<arrow::Status ()> const&)#1} (std::shared_ptr<arrow::internal::ThreadedTaskGroup>, std::function<arrow::Status ()>)>::operator()<, void>() /usr/include/c++/9/functional:484 (libarrow.so.300+0x120a1bf)\r\n    #8 arrow::internal::FnOnce<void ()>::FnImpl<std::_Bind<arrow::internal::ThreadedTaskGroup::AppendReal(std::function<arrow::Status ()>)::{lambda(std::shared_ptr<arrow::internal::ThreadedTaskGroup> const&, std::function<arrow::Status ()> const&)#1} (std::shared_ptr<arrow::internal::ThreadedTaskGroup>, std::function<arrow::Status ()>)> >::invoke() ../src/arrow/util/functional.h:122 (libarrow.so.300+0x120a154)\r\n    #9 arrow::internal::FnOnce<void ()>::operator()() && ../src/arrow/util/functional.h:110 (libarrow.so.300+0x11ba0cf)\r\n    #10 WorkerLoop ../src/arrow/util/thread_pool.cc:90 (libarrow.so.300+0x120a8bf)\r\n    #11 operator() ../src/arrow/util/thread_pool.cc:227 (libarrow.so.300+0x120b7ef)\r\n    #12 __invoke_impl<void, arrow::internal::ThreadPool::LaunchWorkersUnlocked(int)::<lambda()> > /usr/include/c++/9/bits/invoke.h:60 (libarrow.so.300+0x120cf59)\r\n    #13 __invoke<arrow::internal::ThreadPool::LaunchWorkersUnlocked(int)::<lambda()> > /usr/include/c++/9/bits/invoke.h:95 (libarrow.so.300+0x120ceac)\r\n    #14 _M_invoke<0> /usr/include/c++/9/thread:244 (libarrow.so.300+0x120cdfc)\r\n    #15 operator() /usr/include/c++/9/thread:251 (libarrow.so.300+0x120cd8d)\r\n    #16 _M_run /usr/include/c++/9/thread:195 (libarrow.so.300+0x120cd34)\r\n    #17 execute_native_thread_routine /home/conda/feedstock_root/build_artifacts/ctng-compilers_1601682258120/work/.build/x86_64-conda-linux-gnu/src/gcc/libstdc++-v3/src/c++11/thread.cc:80 (libstdc++.so.6+0xc9066)\r\n\r\n  Previous read of size 1 at 0x7ffc241c5833 by main thread:\r\n    #0 testing::AssertionResult::AssertionResult<bool>(bool const&, std::enable_if<!std::is_convertible<bool, testing::AssertionResult>::value, void>::type*) /home/antoine/miniconda3/envs/pyarrow/include/gtest/gtest.h:299 (arrow-threading-utility-test+0x63bba)\r\n    #1 arrow::internal::TestTaskGroupErrors(std::shared_ptr<arrow::internal::TaskGroup>) ../src/arrow/util/task_group_test.cc:100 (arrow-threading-utility-test+0xec284)\r\n    #2 arrow::internal::ThreadedTaskGroup_Errors_Test::TestBody() ../src/arrow/util/task_group_test.cc:266 (arrow-threading-utility-test+0xee40d)\r\n    #3 void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) <null> (libgtest.so+0x4c98d)\r\n\r\n```\r\n\r\nIt looks like the test is faulty.",
        "created_at": "2021-01-25T15:39:06.000Z",
        "updated_at": "2021-01-26T18:23:16.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-01-26T18:23:16.000Z"
    },
    "comments": [
        {
            "created_at": "2021-01-26T18:23:16.701Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11376?focusedCommentId=17272310) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 9319\n<https://github.com/apache/arrow/pull/9319>"
        }
    ]
}