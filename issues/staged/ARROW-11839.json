{
    "issue": {
        "title": "[C++] Rewrite bit-unpacking optimizations using xsimd",
        "body": "***Note**: This issue was originally created as [ARROW-11839](https://issues.apache.org/jira/browse/ARROW-11839). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently, unpacking of fixed-size bit bundles uses custom generated code with SIMD intrinsics (the `bpacking` files in `src/arrow/util`).\r\n\r\nBy leveraging xsimd, we can make the SIMD generated code more generic (e.g. the 256-bit generated code would be able to compile with any 256-bit SIMD ISA supported by xsimd).",
        "created_at": "2021-03-02T16:26:19.000Z",
        "updated_at": "2021-04-13T16:14:55.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-04-13T16:14:39.000Z"
    },
    "comments": [
        {
            "created_at": "2021-04-13T16:14:40.033Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11839?focusedCommentId=17320287) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 9614\n<https://github.com/apache/arrow/pull/9614>"
        }
    ]
}