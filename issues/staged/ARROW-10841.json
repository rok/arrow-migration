{
    "issue": {
        "title": "[C++] Cannot build Gandiva locally",
        "body": "***Note**: This issue was originally created as [ARROW-10841](https://issues.apache.org/jira/browse/ARROW-10841). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI'm having trouble building Gandiva locally.\r\n The minimal build script I'm using is\r\n```java\n\r\nHOME=/Users/andrewwieteska/repos/arrow\r\nLIBRARY_INSTALL_DIR=$HOME/local-libs\r\nCPP_BUILD_DIR=$HOME/arrow-cpp-build-gandiva\r\nARROW_ROOT=$HOME/arrow\r\nPYTHON=3.7\r\n\r\n#----------------------------------------------------------------------\r\n# Activate conda in bash and activate conda environment\r\n\r\nsource /Users/andrewwieteska/anaconda3/etc/profile.d/conda.sh\r\nconda activate pyarrow-dev\r\nexport ARROW_HOME=/Users/andrewwieteska/anaconda3/envs/pyarrow-dev\r\nexport CONDA_BUILD_SYSROOT=/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk\r\n\r\n#----------------------------------------------------------------------\r\n# Build C++ library\r\n\r\nmkdir -p $CPP_BUILD_DIR\r\npushd $CPP_BUILD_DIR\r\n\r\ncmake -GNinja \\\r\n      -DCMAKE_BUILD_TYPE=DEBUG \\\r\n      -DCMAKE_INSTALL_PREFIX=$ARROW_HOME \\\r\n      -DCMAKE_INSTALL_LIBDIR=lib \\\r\n      -DARROW_BUILD_TESTS=ON \\\r\n      -DARROW_SIMD_LEVEL=NONE \\\r\n      -DARROW_GANDIVA=ON \\\r\n      $ARROW_ROOT/cpp\r\nninja -j4\r\nninja install\r\n\r\nctest\r\npopd\r\n```\r\nThe output is:\r\n\r\n\u00a0\r\n```java\n\r\n(pyarrow-dev) andrewwieteska@x86_64-apple-darwin13 arrow % sh build_gandiva.sh\r\n~/arrow ~\r\n~\r\n~/arrow-cpp-build-gandiva ~\r\n-- Building using CMake version: 3.18.4\r\n-- Arrow version: 3.0.0 (full: '3.0.0-SNAPSHOT')\r\n-- Arrow SO version: 300 (full: 300.0.0)\r\n-- clang-tidy not found\r\n-- clang-format not found\r\n-- Could NOT find ClangTools (missing: CLANG_FORMAT_BIN CLANG_TIDY_BIN) \r\n-- infer not found\r\n-- Found Python3: /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin/python3.7 (found version \"3.7.8\") found components: Interpreter \r\n-- Using ccache: /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin/ccache\r\n-- Found cpplint executable at /Users/andrewwieteska/repos/arrow/arrow/cpp/build-support/cpplint.py\r\n-- System processor: x86_64\r\n-- Arrow build warning level: CHECKIN\r\nConfigured for DEBUG build (set with cmake -DCMAKE_BUILD_TYPE={release,debug,...})\r\n-- Build Type: DEBUG\r\n-- Using CONDA approach to find dependencies\r\n-- Using CONDA_PREFIX for ARROW_PACKAGE_PREFIX: /Users/andrewwieteska/anaconda3/envs/pyarrow-dev\r\n-- Setting (unset) dependency *_ROOT variables: /Users/andrewwieteska/anaconda3/envs/pyarrow-dev\r\n-- ARROW_ABSL_BUILD_VERSION: 2eba343b51e0923cd3fb919a6abd6120590fc059\r\n-- ARROW_AWSSDK_BUILD_VERSION: 1.8.57\r\n-- ARROW_AWS_CHECKSUMS_BUILD_VERSION: v0.1.5\r\n-- ARROW_AWS_C_COMMON_BUILD_VERSION: v0.4.59\r\n-- ARROW_AWS_C_EVENT_STREAM_BUILD_VERSION: v0.1.5\r\n-- ARROW_BOOST_BUILD_VERSION: 1.71.0\r\n-- ARROW_BROTLI_BUILD_VERSION: v1.0.7\r\n-- ARROW_BZIP2_BUILD_VERSION: 1.0.8\r\n-- ARROW_CARES_BUILD_VERSION: 1.16.1\r\n-- ARROW_GBENCHMARK_BUILD_VERSION: v1.5.2\r\n-- ARROW_GFLAGS_BUILD_VERSION: v2.2.2\r\n-- ARROW_GLOG_BUILD_VERSION: v0.4.0\r\n-- ARROW_GRPC_BUILD_VERSION: v1.29.1\r\n-- ARROW_GTEST_BUILD_VERSION: 1.10.0\r\n-- ARROW_JEMALLOC_BUILD_VERSION: 5.2.1\r\n-- ARROW_LZ4_BUILD_VERSION: v1.9.2\r\n-- ARROW_MIMALLOC_BUILD_VERSION: v1.6.4\r\n-- ARROW_ORC_BUILD_VERSION: 1.6.2\r\n-- ARROW_PROTOBUF_BUILD_VERSION: v3.12.1\r\n-- ARROW_RAPIDJSON_BUILD_VERSION: 1a803826f1197b5e30703afe4b9c0e7dd48074f5\r\n-- ARROW_RE2_BUILD_VERSION: 2019-08-01\r\n-- ARROW_SNAPPY_BUILD_VERSION: 1.1.8\r\n-- ARROW_THRIFT_BUILD_VERSION: 0.12.0\r\n-- ARROW_THRIFT_BUILD_MD5_CHECKSUM: 3deebbb4d1ca77dd9c9e009a1ea02183\r\n-- ARROW_UTF8PROC_BUILD_VERSION: v2.5.0\r\n-- ARROW_ZLIB_BUILD_VERSION: 1.2.11\r\n-- ARROW_ZSTD_BUILD_VERSION: v1.4.5\r\n-- Boost include dir: /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/include\r\n-- Boost libraries: Boost::system;Boost::filesystem\r\n-- Building without OpenSSL support. Minimum OpenSSL version 1.0.2 required.\r\n-- Found protoc: /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin/protoc\r\n-- Found libprotoc: /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/lib/libprotoc.dylib\r\n-- Found libprotobuf: /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/lib/libprotobuf.dylib\r\n-- Found protobuf headers: /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/include\r\n-- Building (vendored) jemalloc from source\r\n-- Providing cmake module for GTest\r\n-- RapidJSON found. Headers: /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/include\r\n-- Providing cmake module for RE2\r\n-- Providing cmake module for utf8proc\r\n-- Found hdfs.h at: /Users/andrewwieteska/repos/arrow/arrow/cpp/thirdparty/hadoop/include/hdfs.h\r\n-- All bundled static libraries: jemalloc::jemalloc\r\n-- CMAKE_C_FLAGS: -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -isystem /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/include -Qunused-arguments -ggdb -O0 -Wall -Wextra -Wdocumentation -Wno-missing-braces -Wno-unused-parameter -Wno-unknown-warning-option -Wno-constant-logical-operand -Werror -Wno-unknown-warning-option -Wno-pass-failed \r\n-- CMAKE_CXX_FLAGS: -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -std=c++14 -fmessage-length=0 -isystem /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/include -Qunused-arguments -fcolor-diagnostics -ggdb -O0 -Wall -Wextra -Wdocumentation -Wno-missing-braces -Wno-unused-parameter -Wno-unknown-warning-option -Wno-constant-logical-operand -Werror -Wno-unknown-warning-option -Wno-pass-failed \r\n-- Creating bundled static library target arrow_bundled_dependencies at /Users/andrewwieteska/repos/arrow/arrow-cpp-build-gandiva/debug/libarrow_bundled_dependencies.a\r\n-- Found Python3: /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin/python3.7 (found version \"3.7.8\") found components: Interpreter Development NumPy Development.Module Development.Embed \r\n-- Using LLVMConfig.cmake in: /usr/local/opt/llvm/lib/cmake/llvm\r\n-- Found llvm-link /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin/llvm-link\r\n-- Found clang /usr/local/opt/llvm/bin/clang-11\r\n-- ---------------------------------------------------------------------\r\n-- Arrow version: 3.0.0-SNAPSHOT\r\n-- \r\n-- Build configuration summary:\r\n-- Generator: Ninja\r\n-- Build type: DEBUG\r\n-- Source directory: /Users/andrewwieteska/repos/arrow/arrow/cpp\r\n-- Install prefix: /Users/andrewwieteska/anaconda3/envs/pyarrow-dev\r\n-- \r\n-- Compile and link options:\r\n-- \r\n-- ARROW_CXXFLAGS=\"\" [default=\"\"]\r\n-- Compiler flags to append when compiling Arrow\r\n-- ARROW_BUILD_STATIC=ON [default=ON]\r\n-- Build static libraries\r\n-- ARROW_BUILD_SHARED=ON [default=ON]\r\n-- Build shared libraries\r\n-- ARROW_PACKAGE_KIND=\"\" [default=\"\"]\r\n-- Arbitrary string that identifies the kind of package\r\n-- (for informational purposes)\r\n-- ARROW_GIT_ID=c2cff611bf247c1d48c5d00778cd89f174da5ed5 [default=\"\"]\r\n-- The Arrow git commit id (if any)\r\n-- ARROW_GIT_DESCRIPTION=apache-arrow-0.17.0-1623-gc2cff611b [default=\"\"]\r\n-- The Arrow git commit description (if any)\r\n-- ARROW_NO_DEPRECATED_API=OFF [default=OFF]\r\n-- Exclude deprecated APIs from build\r\n-- ARROW_USE_CCACHE=ON [default=ON]\r\n-- Use ccache when compiling (if available)\r\n-- ARROW_USE_LD_GOLD=OFF [default=OFF]\r\n-- Use ld.gold for linking on Linux (if available)\r\n-- ARROW_USE_PRECOMPILED_HEADERS=OFF [default=OFF]\r\n-- Use precompiled headers when compiling\r\n-- ARROW_SIMD_LEVEL=NONE [default=NONE|SSE4_2|AVX2|AVX512]\r\n-- Compile-time SIMD optimization level\r\n-- ARROW_RUNTIME_SIMD_LEVEL=MAX [default=NONE|SSE4_2|AVX2|AVX512|MAX]\r\n-- Max runtime SIMD optimization level\r\n-- ARROW_ARMV8_ARCH=armv8-a [default=armv8-a|armv8-a+crc+crypto]\r\n-- Arm64 arch and extensions\r\n-- ARROW_ALTIVEC=ON [default=ON]\r\n-- Build with Altivec if compiler has support\r\n-- ARROW_RPATH_ORIGIN=OFF [default=OFF]\r\n-- Build Arrow libraries with RATH set to $ORIGIN\r\n-- ARROW_INSTALL_NAME_RPATH=ON [default=ON]\r\n-- Build Arrow libraries with install_name set to @rpath\r\n-- ARROW_GGDB_DEBUG=ON [default=ON]\r\n-- Pass -ggdb flag to debug builds\r\n-- \r\n-- Test and benchmark options:\r\n-- \r\n-- ARROW_BUILD_EXAMPLES=OFF [default=OFF]\r\n-- Build the Arrow examples\r\n-- ARROW_BUILD_TESTS=ON [default=OFF]\r\n-- Build the Arrow googletest unit tests\r\n-- ARROW_ENABLE_TIMING_TESTS=ON [default=ON]\r\n-- Enable timing-sensitive tests\r\n-- ARROW_BUILD_INTEGRATION=OFF [default=OFF]\r\n-- Build the Arrow integration test executables\r\n-- ARROW_BUILD_BENCHMARKS=OFF [default=OFF]\r\n-- Build the Arrow micro benchmarks\r\n-- ARROW_BUILD_BENCHMARKS_REFERENCE=OFF [default=OFF]\r\n-- Build the Arrow micro reference benchmarks\r\n-- ARROW_TEST_LINKAGE=shared [default=shared|static]\r\n-- Linkage of Arrow libraries with unit tests executables.\r\n-- ARROW_FUZZING=OFF [default=OFF]\r\n-- Build Arrow Fuzzing executables\r\n-- ARROW_LARGE_MEMORY_TESTS=OFF [default=OFF]\r\n-- Enable unit tests which use large memory\r\n-- \r\n-- Lint options:\r\n-- \r\n-- ARROW_ONLY_LINT=OFF [default=OFF]\r\n-- Only define the lint and check-format targets\r\n-- ARROW_VERBOSE_LINT=OFF [default=OFF]\r\n-- If off, 'quiet' flags will be passed to linting tools\r\n-- ARROW_GENERATE_COVERAGE=OFF [default=OFF]\r\n-- Build with C++ code coverage enabled\r\n-- \r\n-- Checks options:\r\n-- \r\n-- ARROW_TEST_MEMCHECK=OFF [default=OFF]\r\n-- Run the test suite using valgrind --tool=memcheck\r\n-- ARROW_USE_ASAN=OFF [default=OFF]\r\n-- Enable Address Sanitizer checks\r\n-- ARROW_USE_TSAN=OFF [default=OFF]\r\n-- Enable Thread Sanitizer checks\r\n-- ARROW_USE_UBSAN=OFF [default=OFF]\r\n-- Enable Undefined Behavior sanitizer checks\r\n-- \r\n-- Project component options:\r\n-- \r\n-- ARROW_BUILD_UTILITIES=OFF [default=OFF]\r\n-- Build Arrow commandline utilities\r\n-- ARROW_COMPUTE=ON [default=OFF]\r\n-- Build the Arrow Compute Modules\r\n-- ARROW_CSV=ON [default=OFF]\r\n-- Build the Arrow CSV Parser Module\r\n-- ARROW_CUDA=OFF [default=OFF]\r\n-- Build the Arrow CUDA extensions (requires CUDA toolkit)\r\n-- ARROW_DATASET=ON [default=OFF]\r\n-- Build the Arrow Dataset Modules\r\n-- ARROW_FILESYSTEM=ON [default=OFF]\r\n-- Build the Arrow Filesystem Layer\r\n-- ARROW_FLIGHT=OFF [default=OFF]\r\n-- Build the Arrow Flight RPC System (requires GRPC, Protocol Buffers)\r\n-- ARROW_GANDIVA=ON [default=OFF]\r\n-- Build the Gandiva libraries\r\n-- ARROW_HDFS=ON [default=OFF]\r\n-- Build the Arrow HDFS bridge\r\n-- ARROW_HIVESERVER2=OFF [default=OFF]\r\n-- Build the HiveServer2 client and Arrow adapter\r\n-- ARROW_IPC=ON [default=ON]\r\n-- Build the Arrow IPC extensions\r\n-- ARROW_JEMALLOC=ON [default=ON]\r\n-- Build the Arrow jemalloc-based allocator\r\n-- ARROW_JNI=OFF [default=OFF]\r\n-- Build the Arrow JNI lib\r\n-- ARROW_JSON=ON [default=OFF]\r\n-- Build Arrow with JSON support (requires RapidJSON)\r\n-- ARROW_MIMALLOC=OFF [default=OFF]\r\n-- Build the Arrow mimalloc-based allocator\r\n-- ARROW_PARQUET=OFF [default=OFF]\r\n-- Build the Parquet libraries\r\n-- ARROW_ORC=OFF [default=OFF]\r\n-- Build the Arrow ORC adapter\r\n-- ARROW_PLASMA=OFF [default=OFF]\r\n-- Build the plasma object store along with Arrow\r\n-- ARROW_PLASMA_JAVA_CLIENT=OFF [default=OFF]\r\n-- Build the plasma object store java client\r\n-- ARROW_PYTHON=ON [default=OFF]\r\n-- Build the Arrow CPython extensions\r\n-- ARROW_S3=OFF [default=OFF]\r\n-- Build Arrow with S3 support (requires the AWS SDK for C++)\r\n-- ARROW_TENSORFLOW=OFF [default=OFF]\r\n-- Build Arrow with TensorFlow support enabled\r\n-- ARROW_TESTING=ON [default=OFF]\r\n-- Build the Arrow testing libraries\r\n-- \r\n-- Thirdparty toolchain options:\r\n-- \r\n-- ARROW_DEPENDENCY_SOURCE=CONDA [default=AUTO|BUNDLED|SYSTEM|CONDA|BREW]\r\n-- Method to use for acquiring arrow's build dependencies\r\n-- ARROW_VERBOSE_THIRDPARTY_BUILD=OFF [default=OFF]\r\n-- Show output from ExternalProjects rather than just logging to files\r\n-- ARROW_DEPENDENCY_USE_SHARED=ON [default=ON]\r\n-- Link to shared libraries\r\n-- ARROW_BOOST_USE_SHARED=ON [default=ON]\r\n-- Rely on boost shared libraries where relevant\r\n-- ARROW_BROTLI_USE_SHARED=ON [default=ON]\r\n-- Rely on Brotli shared libraries where relevant\r\n-- ARROW_BZ2_USE_SHARED=ON [default=ON]\r\n-- Rely on Bz2 shared libraries where relevant\r\n-- ARROW_GFLAGS_USE_SHARED=ON [default=ON]\r\n-- Rely on GFlags shared libraries where relevant\r\n-- ARROW_GRPC_USE_SHARED=ON [default=ON]\r\n-- Rely on gRPC shared libraries where relevant\r\n-- ARROW_LZ4_USE_SHARED=ON [default=ON]\r\n-- Rely on lz4 shared libraries where relevant\r\n-- ARROW_OPENSSL_USE_SHARED=ON [default=ON]\r\n-- Rely on OpenSSL shared libraries where relevant\r\n-- ARROW_PROTOBUF_USE_SHARED=ON [default=ON]\r\n-- Rely on Protocol Buffers shared libraries where relevant\r\n-- ARROW_THRIFT_USE_SHARED=ON [default=ON]\r\n-- Rely on thrift shared libraries where relevant\r\n-- ARROW_UTF8PROC_USE_SHARED=ON [default=ON]\r\n-- Rely on utf8proc shared libraries where relevant\r\n-- ARROW_SNAPPY_USE_SHARED=ON [default=ON]\r\n-- Rely on snappy shared libraries where relevant\r\n-- ARROW_UTF8PROC_USE_SHARED=ON [default=ON]\r\n-- Rely on utf8proc shared libraries where relevant\r\n-- ARROW_ZSTD_USE_SHARED=ON [default=ON]\r\n-- Rely on zstd shared libraries where relevant\r\n-- ARROW_USE_GLOG=OFF [default=OFF]\r\n-- Build libraries with glog support for pluggable logging\r\n-- ARROW_WITH_BACKTRACE=ON [default=ON]\r\n-- Build with backtrace support\r\n-- ARROW_WITH_BROTLI=OFF [default=OFF]\r\n-- Build with Brotli compression\r\n-- ARROW_WITH_BZ2=OFF [default=OFF]\r\n-- Build with BZ2 compression\r\n-- ARROW_WITH_LZ4=OFF [default=OFF]\r\n-- Build with lz4 compression\r\n-- ARROW_WITH_SNAPPY=OFF [default=OFF]\r\n-- Build with Snappy compression\r\n-- ARROW_WITH_ZLIB=OFF [default=OFF]\r\n-- Build with zlib compression\r\n-- ARROW_WITH_ZSTD=OFF [default=OFF]\r\n-- Build with zstd compression\r\n-- ARROW_WITH_UTF8PROC=ON [default=ON]\r\n-- Build with support for Unicode properties using the utf8proc library\r\n-- (only used if ARROW_COMPUTE is ON)\r\n-- ARROW_WITH_RE2=ON [default=ON]\r\n-- Build with support for regular expressions using the re2 library\r\n-- (only used if ARROW_COMPUTE or ARROW_GANDIVA is ON)\r\n-- \r\n-- Parquet options:\r\n-- \r\n-- PARQUET_MINIMAL_DEPENDENCY=OFF [default=OFF]\r\n-- Depend only on Thirdparty headers to build libparquet.\r\n-- Always OFF if building binaries\r\n-- PARQUET_BUILD_EXECUTABLES=OFF [default=OFF]\r\n-- Build the Parquet executable CLI tools. Requires static libraries to be built.\r\n-- PARQUET_BUILD_EXAMPLES=OFF [default=OFF]\r\n-- Build the Parquet examples. Requires static libraries to be built.\r\n-- PARQUET_REQUIRE_ENCRYPTION=OFF [default=OFF]\r\n-- Build support for encryption. Fail if OpenSSL is not found\r\n-- \r\n-- Gandiva options:\r\n-- \r\n-- ARROW_GANDIVA_JAVA=OFF [default=OFF]\r\n-- Build the Gandiva JNI wrappers\r\n-- ARROW_GANDIVA_STATIC_LIBSTDCPP=OFF [default=OFF]\r\n-- Include -static-libstdc++ -static-libgcc when linking with\r\n-- Gandiva static libraries\r\n-- ARROW_GANDIVA_PC_CXX_FLAGS=\"\" [default=\"\"]\r\n-- Compiler flags to append when pre-compiling Gandiva operations\r\n-- \r\n-- Advanced developer options:\r\n-- \r\n-- ARROW_EXTRA_ERROR_CONTEXT=OFF [default=OFF]\r\n-- Compile with extra error context (line numbers, code)\r\n-- ARROW_OPTIONAL_INSTALL=OFF [default=OFF]\r\n-- If enabled install ONLY targets that have already been built. Please be\r\n-- advised that if this is enabled 'install' will fail silently on components\r\n-- that have not been built\r\n-- Outputting build configuration summary to /Users/andrewwieteska/repos/arrow/arrow-cpp-build-gandiva/cmake_summary.json\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /Users/andrewwieteska/repos/arrow/arrow-cpp-build-gandiva\r\n[33/315] Performing configure step for 'jemalloc_ep'\r\nFAILED: jemalloc_ep-prefix/src/jemalloc_ep-stamp/jemalloc_ep-configure \r\ncd /Users/andrewwieteska/repos/arrow/arrow-cpp-build-gandiva/jemalloc_ep-prefix/src/jemalloc_ep && /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin/cmake -P /Users/andrewwieteska/repos/arrow/arrow-cpp-build-gandiva/jemalloc_ep-prefix/src/jemalloc_ep-stamp/jemalloc_ep-configure-DEBUG.cmake && /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin/cmake -E touch /Users/andrewwieteska/repos/arrow/arrow-cpp-build-gandiva/jemalloc_ep-prefix/src/jemalloc_ep-stamp/jemalloc_ep-configure\r\nCMake Error at /Users/andrewwieteska/repos/arrow/arrow-cpp-build-gandiva/jemalloc_ep-prefix/src/jemalloc_ep-stamp/jemalloc_ep-configure-DEBUG.cmake:37 (message):\r\n Command failed: 77\r\n'./configure' 'AR=/Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin/x86_64-apple-darwin13.4.0-ar' 'CC=/Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin/x86_64-apple-darwin13.4.0-clang' 'SDKROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.0.sdk' '--prefix=/Users/andrewwieteska/repos/arrow/arrow-cpp-build-gandiva/jemalloc_ep-prefix/src/jemalloc_ep/dist/' '--with-jemalloc-prefix=je_arrow_' '--with-private-namespace=je_arrow_private_' '--without-export' '--disable-shared' '--disable-cxx' '--disable-libdl' '--disable-initial-exec-tls'\r\nSee also\r\n/Users/andrewwieteska/repos/arrow/arrow-cpp-build-gandiva/jemalloc_ep-prefix/src/jemalloc_ep-stamp/jemalloc_ep-configure-*.log\r\n\r\n-- stdout output is:\r\nchecking for xsltproc... /usr/bin/xsltproc\r\nchecking for gcc... /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin/x86_64-apple-darwin13.4.0-clang\r\nchecking whether the C compiler works... no\r\n-- stderr output is:\r\nconfigure: error: in `/Users/andrewwieteska/repos/arrow/arrow-cpp-build-gandiva/jemalloc_ep-prefix/src/jemalloc_ep':\r\nconfigure: error: C compiler cannot create executables\r\nSee `config.log' for more details\r\nCMake Error at /Users/andrewwieteska/repos/arrow/arrow-cpp-build-gandiva/jemalloc_ep-prefix/src/jemalloc_ep-stamp/jemalloc_ep-configure-DEBUG.cmake:47 (message):\r\n Stopping after outputting logs.\r\n\r\n[34/315] Generating ../irhelpers.bc\r\nninja: build stopped: subcommand failed.\r\n(pyarrow-dev) andrewwieteska@x86_64-apple-darwin13 arrow %\r\n```\r\n\u00a0",
        "created_at": "2020-12-08T01:43:37.000Z",
        "updated_at": "2020-12-16T20:09:03.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++ - Gandiva",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-12-16T20:08:50.000Z"
    },
    "comments": [
        {
            "created_at": "2020-12-08T01:44:13.734Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10841?focusedCommentId=17245611) by Andrew Wieteska (arw2019):*\nPossibly\u00a0ARROW-4935 is related but I haven't been able to fix the problem with the suggestions there"
        },
        {
            "created_at": "2020-12-08T01:56:20.789Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10841?focusedCommentId=17245614) by Kouhei Sutou (kou):*\nCould you try `export SDKROOT=\"$(xcrun --show-sdk-path)\"`?"
        },
        {
            "created_at": "2020-12-08T02:53:39.410Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10841?focusedCommentId=17245630) by Andrew Wieteska (arw2019):*\nTried that, still getting the error (same message)"
        },
        {
            "created_at": "2020-12-08T04:43:42.553Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10841?focusedCommentId=17245668) by Kouhei Sutou (kou):*\nCould you show `/Users/andrewwieteska/repos/arrow/arrow-cpp-build-gandiva/jemalloc_ep-prefix/src/jemalloc_ep/config.log`?"
        },
        {
            "created_at": "2020-12-08T04:48:53.660Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10841?focusedCommentId=17245670) by Andrew Wieteska (arw2019):*\n\u00a0\r\n\r\n\u00a0\r\n```java\n\r\n(base) andrewwieteska@Andrews-MacBook-Pro arrow % cat /Users/andrewwieteska/repos/arrow/arrow-cpp-build-gandiva/jemalloc_ep-prefix/src/jemalloc_ep/config.log\r\nThis file contains any messages produced by compilers while\r\nrunning configure, to aid debugging if configure makes a mistake.\r\nIt was created by configure, which was\r\ngenerated by GNU Autoconf 2.69. Invocation command line was\r\n$ ./configure AR=/Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin/x86_64-apple-darwin13.4.0-ar CC=/Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin/x86_64-apple-darwin13.4.0-clang SDKROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.0.sdk --prefix=/Users/andrewwieteska/repos/arrow/arrow-cpp-build-gandiva/jemalloc_ep-prefix/src/jemalloc_ep/dist/ --with-jemalloc-prefix=je_arrow_ --with-private-namespace=je_arrow_private_ --without-export --disable-shared --disable-cxx --disable-libdl --disable-initial-exec-tls\r\n## --------- ##\r\n## Platform. ##\r\n## --------- ##\r\nhostname = Andrews-MacBook-Pro.local\r\nuname -m = x86_64\r\nuname -r = 19.6.0\r\nuname -s = Darwin\r\nuname -v = Darwin Kernel Version 19.6.0: Thu Oct 29 22:56:45 PDT 2020; root:xnu-6153.141.2.2~1/RELEASE_X86_64\r\n/usr/bin/uname -p = i386\r\n/bin/uname -X = unknown\r\n/bin/arch = unknown\r\n/usr/bin/arch -k = unknown\r\n/usr/convex/getsysinfo = unknown\r\n/usr/bin/hostinfo = Mach kernel version:\r\n Darwin Kernel Version 19.6.0: Thu Oct 29 22:56:45 PDT 2020; root:xnu-6153.141.2.2~1/RELEASE_X86_64\r\nKernel configured for up to 4 processors.\r\n2 processors are physically available.\r\n4 processors are logically available.\r\nProcessor type: x86_64h (Intel x86-64h Haswell)\r\nProcessors active: 0 1 2 3\r\nPrimary memory available: 8.00 gigabytes\r\nDefault processor set: 396 tasks, 1959 threads, 4 processors\r\nLoad average: 3.71, Mach factor: 0.97\r\n/bin/machine = unknown\r\n/usr/bin/oslevel = unknown\r\n/bin/universe = unknown\r\nPATH: /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin\r\nPATH: /Users/andrewwieteska/anaconda3/condabin\r\nPATH: /usr/local/bin\r\nPATH: /usr/bin\r\nPATH: /bin\r\nPATH: /usr/sbin\r\nPATH: /sbin\r\nPATH: /Library/Apple/usr/bin\r\n\r\n## ----------- ##\r\n## Core tests. ##\r\n## ----------- ##\r\nconfigure:2662: checking for xsltproc\r\nconfigure:2680: found /usr/bin/xsltproc\r\nconfigure:2693: result: /usr/bin/xsltproc\r\nconfigure:2777: checking for gcc\r\nconfigure:2804: result: /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin/x86_64-apple-darwin13.4.0-clang\r\nconfigure:3033: checking for C compiler version\r\nconfigure:3042: /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin/x86_64-apple-darwin13.4.0-clang --version >&5\r\nclang version 10.0.0 \r\nTarget: x86_64-apple-darwin13.4.0\r\nThread model: posix\r\nInstalledDir: /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin\r\nconfigure:3053: $? = 0\r\nconfigure:3042: /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin/x86_64-apple-darwin13.4.0-clang -v >&5\r\nclang version 10.0.0 \r\nTarget: x86_64-apple-darwin13.4.0\r\nThread model: posix\r\nInstalledDir: /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin\r\nconfigure:3053: $? = 0\r\nconfigure:3042: /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin/x86_64-apple-darwin13.4.0-clang -V >&5\r\nclang-10: error: argument to '-V' is missing (expected 1 value)\r\nclang-10: error: no input files\r\nconfigure:3053: $? = 1\r\nconfigure:3042: /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin/x86_64-apple-darwin13.4.0-clang -qversion >&5\r\nclang-10: error: unknown argument '-qversion'; did you mean '--version'?\r\nclang-10: error: no input files\r\nconfigure:3053: $? = 1\r\nconfigure:3073: checking whether the C compiler works\r\nconfigure:3095: /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin/x86_64-apple-darwin13.4.0-clang -march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -isystem /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/include -D_FORTIFY_SOURCE=2 -mmacosx-version-min=10.9 -isystem /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/include -Wl,-pie -Wl,-headerpad_max_install_names -Wl,-dead_strip_dylibs -Wl,-rpath,/Users/andrewwieteska/anaconda3/envs/pyarrow-dev/lib -L/Users/andrewwieteska/anaconda3/envs/pyarrow-dev/lib conftest.c >&5\r\nld: unsupported tapi file type '!tapi-tbd' in YAML file '/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/lib/libSystem.tbd' for architecture x86_64\r\nclang-10: error: linker command failed with exit code 1 (use -v to see invocation)\r\nconfigure:3099: $? = 1\r\nconfigure:3137: result: no\r\nconfigure: failed program was:\r\n| /* confdefs.h */\r\n| #define PACKAGE_NAME \"\"\r\n| #define PACKAGE_TARNAME \"\"\r\n| #define PACKAGE_VERSION \"\"\r\n| #define PACKAGE_STRING \"\"\r\n| #define PACKAGE_BUGREPORT \"\"\r\n| #define PACKAGE_URL \"\"\r\n| /* end confdefs.h. */\r\n| \r\n| int\r\n| main ()\r\n| {\r\n| \r\n| ;\r\n| return 0;\r\n| }\r\nconfigure:3142: error: in `/Users/andrewwieteska/repos/arrow/arrow-cpp-build-gandiva/jemalloc_ep-prefix/src/jemalloc_ep':\r\nconfigure:3144: error: C compiler cannot create executables\r\nSee `config.log' for more details\r\n## ---------------- ##\r\n## Cache variables. ##\r\n## ---------------- ##\r\nac_cv_env_CCC_set=\r\nac_cv_env_CCC_value=\r\nac_cv_env_CC_set=set\r\nac_cv_env_CC_value=/Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin/x86_64-apple-darwin13.4.0-clang\r\nac_cv_env_CFLAGS_set=set\r\nac_cv_env_CFLAGS_value='-march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -isystem /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/include'\r\nac_cv_env_CPPFLAGS_set=set\r\nac_cv_env_CPPFLAGS_value='-D_FORTIFY_SOURCE=2 -mmacosx-version-min=10.9 -isystem /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/include'\r\nac_cv_env_CPP_set=\r\nac_cv_env_CPP_value=\r\nac_cv_env_CXXFLAGS_set=set\r\nac_cv_env_CXXFLAGS_value='-march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -std=c++14 -fmessage-length=0 -isystem /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/include'\r\nac_cv_env_CXX_set=set\r\nac_cv_env_CXX_value=x86_64-apple-darwin13.4.0-clang++\r\nac_cv_env_LDFLAGS_set=set\r\nac_cv_env_LDFLAGS_value='-Wl,-pie -Wl,-headerpad_max_install_names -Wl,-dead_strip_dylibs -Wl,-rpath,/Users/andrewwieteska/anaconda3/envs/pyarrow-dev/lib -L/Users/andrewwieteska/anaconda3/envs/pyarrow-dev/lib'\r\nac_cv_env_LIBS_set=\r\nac_cv_env_LIBS_value=\r\nac_cv_env_build_alias_set=\r\nac_cv_env_build_alias_value=\r\nac_cv_env_host_alias_set=\r\nac_cv_env_host_alias_value=\r\nac_cv_env_target_alias_set=\r\nac_cv_env_target_alias_value=\r\nac_cv_path_XSLTPROC=/usr/bin/xsltproc\r\nac_cv_prog_ac_ct_CC=/Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin/x86_64-apple-darwin13.4.0-clang\r\n## ----------------- ##\r\n## Output variables. ##\r\n## ----------------- ##\r\nAR='/Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin/x86_64-apple-darwin13.4.0-ar'\r\nARFLAGS=''\r\nAROUT=''\r\nAUTOCONF=''\r\nAWK=''\r\nBINDIR='/Users/andrewwieteska/repos/arrow/arrow-cpp-build-gandiva/jemalloc_ep-prefix/src/jemalloc_ep/dist/bin'\r\nCC='/Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin/x86_64-apple-darwin13.4.0-clang'\r\nCC_MM=''\r\nCFLAGS='-march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -isystem /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/include'\r\nCONFIG='AR=/Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin/x86_64-apple-darwin13.4.0-ar CC=/Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin/x86_64-apple-darwin13.4.0-clang SDKROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.0.sdk --prefix=/Users/andrewwieteska/repos/arrow/arrow-cpp-build-gandiva/jemalloc_ep-prefix/src/jemalloc_ep/dist/ --with-jemalloc-prefix=je_arrow_ --with-private-namespace=je_arrow_private_ --without-export --disable-shared --disable-cxx --disable-libdl --disable-initial-exec-tls '\\''CFLAGS=-march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -isystem /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/include'\\'' '\\''LDFLAGS=-Wl,-pie -Wl,-headerpad_max_install_names -Wl,-dead_strip_dylibs -Wl,-rpath,/Users/andrewwieteska/anaconda3/envs/pyarrow-dev/lib -L/Users/andrewwieteska/anaconda3/envs/pyarrow-dev/lib'\\'' '\\''CPPFLAGS=-D_FORTIFY_SOURCE=2 -mmacosx-version-min=10.9 -isystem /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/include'\\'' CXX=x86_64-apple-darwin13.4.0-clang++ '\\''CXXFLAGS=-march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -std=c++14 -fmessage-length=0 -isystem /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/include'\\'''\r\nCONFIGURE_CFLAGS=''\r\nCONFIGURE_CXXFLAGS=''\r\nCPP=''\r\nCPPFLAGS='-D_FORTIFY_SOURCE=2 -mmacosx-version-min=10.9 -isystem /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/include'\r\nCTARGET=''\r\nCXX='x86_64-apple-darwin13.4.0-clang++'\r\nCXXFLAGS='-march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -std=c++14 -fmessage-length=0 -isystem /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/include'\r\nDATADIR='/Users/andrewwieteska/repos/arrow/arrow-cpp-build-gandiva/jemalloc_ep-prefix/src/jemalloc_ep/dist/share'\r\nDEFS=''\r\nDSO_LDFLAGS=''\r\nDUMP_SYMS=''\r\nECHO_C='\\c'\r\nECHO_N=''\r\nECHO_T=''\r\nEGREP=''\r\nEXEEXT=''\r\nEXTRA_CFLAGS=''\r\nEXTRA_CXXFLAGS=''\r\nEXTRA_LDFLAGS=''\r\nGREP=''\r\nHAVE_CXX14=''\r\nINCLUDEDIR='/Users/andrewwieteska/repos/arrow/arrow-cpp-build-gandiva/jemalloc_ep-prefix/src/jemalloc_ep/dist/include'\r\nINSTALL_DATA=''\r\nINSTALL_PROGRAM=''\r\nINSTALL_SCRIPT=''\r\nJEMALLOC_CPREFIX=''\r\nJEMALLOC_PREFIX=''\r\nLD='/Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin/x86_64-apple-darwin13.4.0-ld'\r\nLDFLAGS='-Wl,-pie -Wl,-headerpad_max_install_names -Wl,-dead_strip_dylibs -Wl,-rpath,/Users/andrewwieteska/anaconda3/envs/pyarrow-dev/lib -L/Users/andrewwieteska/anaconda3/envs/pyarrow-dev/lib'\r\nLDTARGET=''\r\nLD_PRELOAD_VAR=''\r\nLIBDIR='/Users/andrewwieteska/repos/arrow/arrow-cpp-build-gandiva/jemalloc_ep-prefix/src/jemalloc_ep/dist/lib'\r\nLIBOBJS=''\r\nLIBS=''\r\nLM=''\r\nLTLIBOBJS=''\r\nMANDIR='/Users/andrewwieteska/repos/arrow/arrow-cpp-build-gandiva/jemalloc_ep-prefix/src/jemalloc_ep/dist/share/man'\r\nMKLIB=''\r\nNM='/Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin/x86_64-apple-darwin13.4.0-nm'\r\nOBJEXT=''\r\nPACKAGE_BUGREPORT=''\r\nPACKAGE_NAME=''\r\nPACKAGE_STRING=''\r\nPACKAGE_TARNAME=''\r\nPACKAGE_URL=''\r\nPACKAGE_VERSION=''\r\nPATH_SEPARATOR=':'\r\nPIC_CFLAGS=''\r\nPREFIX='/Users/andrewwieteska/repos/arrow/arrow-cpp-build-gandiva/jemalloc_ep-prefix/src/jemalloc_ep/dist'\r\nRANLIB='/Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin/x86_64-apple-darwin13.4.0-ranlib'\r\nRPATH=''\r\nRPATH_EXTRA=''\r\nSHELL='/bin/sh'\r\nSOREV=''\r\nSPECIFIED_CFLAGS='-march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -isystem /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/include'\r\nSPECIFIED_CXXFLAGS='-march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -std=c++14 -fmessage-length=0 -isystem /Users/andrewwieteska/anaconda3/envs/pyarrow-dev/include'\r\nTEST_LD_MODE=''\r\nXSLROOT=''\r\nXSLTPROC='/usr/bin/xsltproc'\r\na=''\r\nabi=''\r\nabs_objroot='/Users/andrewwieteska/repos/arrow/arrow-cpp-build-gandiva/jemalloc_ep-prefix/src/jemalloc_ep/'\r\nabs_srcroot='/Users/andrewwieteska/repos/arrow/arrow-cpp-build-gandiva/jemalloc_ep-prefix/src/jemalloc_ep/'\r\nac_ct_CC='/Users/andrewwieteska/anaconda3/envs/pyarrow-dev/bin/x86_64-apple-darwin13.4.0-clang'\r\nac_ct_CXX=''\r\nbindir='${exec_prefix}/bin'\r\nbuild=''\r\nbuild_alias=''\r\nbuild_cpu=''\r\nbuild_os=''\r\nbuild_vendor=''\r\ncfghdrs_in=''\r\ncfghdrs_out=''\r\ncfgoutputs_in=''\r\ncfgoutputs_out=''\r\ndatadir='${datarootdir}'\r\ndatarootdir='${prefix}/share'\r\ndocdir='${datarootdir}/doc/${PACKAGE}'\r\ndvidir='${docdir}'\r\nenable_autogen=''\r\nenable_cache_oblivious=''\r\nenable_cxx='no'\r\nenable_debug=''\r\nenable_doc=''\r\nenable_experimental_smallocx=''\r\nenable_fill=''\r\nenable_initial_exec_tls='no'\r\nenable_lazy_lock=''\r\nenable_log=''\r\nenable_opt_safety_checks=''\r\nenable_prof=''\r\nenable_readlinkat=''\r\nenable_shared='no'\r\nenable_static=''\r\nenable_stats=''\r\nenable_tls=''\r\nenable_utrace=''\r\nenable_xmalloc=''\r\nenable_zone_allocator=''\r\nexe=''\r\nexec_prefix='/Users/andrewwieteska/repos/arrow/arrow-cpp-build-gandiva/jemalloc_ep-prefix/src/jemalloc_ep/dist'\r\nhost=''\r\nhost_alias=''\r\nhost_cpu=''\r\nhost_os=''\r\nhost_vendor=''\r\nhtmldir='${docdir}'\r\nimportlib=''\r\nincludedir='${prefix}/include'\r\ninfodir='${datarootdir}/info'\r\ninstall_suffix=''\r\nje_=''\r\njemalloc_version=''\r\njemalloc_version_bugfix=''\r\njemalloc_version_gid=''\r\njemalloc_version_major=''\r\njemalloc_version_minor=''\r\njemalloc_version_nrev=''\r\nlibdir='${exec_prefix}/lib'\r\nlibdl=''\r\nlibexecdir='${exec_prefix}/libexec'\r\nlibprefix=''\r\nlink_whole_archive=''\r\nlocaledir='${datarootdir}/locale'\r\nlocalstatedir='${prefix}/var'\r\nmandir='${datarootdir}/man'\r\no=''\r\nobjroot=''\r\noldincludedir='/usr/include'\r\npdfdir='${docdir}'\r\nprefix='/Users/andrewwieteska/repos/arrow/arrow-cpp-build-gandiva/jemalloc_ep-prefix/src/jemalloc_ep/dist'\r\nprivate_namespace=''\r\nprogram_transform_name='s,x,x,'\r\npsdir='${docdir}'\r\nrev='2'\r\nsbindir='${exec_prefix}/sbin'\r\nsharedstatedir='${prefix}/com'\r\nso=''\r\nsrcroot=''\r\nsysconfdir='${prefix}/etc'\r\ntarget_alias=''\r\n## ----------- ##\r\n## confdefs.h. ##\r\n## ----------- ##\r\n/* confdefs.h */\r\n#define PACKAGE_NAME \"\"\r\n#define PACKAGE_TARNAME \"\"\r\n#define PACKAGE_VERSION \"\"\r\n#define PACKAGE_STRING \"\"\r\n#define PACKAGE_BUGREPORT \"\"\r\n#define PACKAGE_URL \"\"\r\nconfigure: exit 77\r\n```"
        },
        {
            "created_at": "2020-12-08T08:59:02.418Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10841?focusedCommentId=17245753) by Uwe Korn (uwe):*\nThe issue is that the version of `tapi` / `d64_osx-64` conda packages is too old to deal with the new MacOS SDK. Either use an older MacOS SDK (you can get them from https://github.com/phracker/MacOSX-SDKs)  and  set `CONDA_BUILD_SYSROOT` accordingly or update the `clang clangxx tapi ldid ld64_osx-64` set of packages. "
        },
        {
            "created_at": "2020-12-09T06:56:11.993Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10841?focusedCommentId=17246320) by Andrew Wieteska (arw2019):*\nThanks for this!!! Indeed the problem was the MacOS SDK version"
        }
    ]
}