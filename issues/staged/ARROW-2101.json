{
    "issue": {
        "title": "[Python] from_pandas reads 'str' type as binary Arrow data with Python 2",
        "body": "***Note**: This issue was originally created as [ARROW-2101](https://issues.apache.org/jira/browse/ARROW-2101). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nUsing Python 2, converting Pandas with 'str' data to Arrow results in Arrow data of binary type, even if the user supplies type information.  conversion of 'unicode' type works to create Arrow data of string types.  For example\r\n\r\n```Java\n\r\nIn [25]: pa.Array.from_pandas(pd.Series(['a'])).type\r\nOut[25]: DataType(binary)\r\n\r\nIn [26]: pa.Array.from_pandas(pd.Series(['a']), type=pa.string()).type\r\nOut[26]: DataType(binary)\r\n\r\nIn [27]: pa.Array.from_pandas(pd.Series([u'a'])).type\r\nOut[27]: DataType(string)\r\n```",
        "created_at": "2018-02-06T19:24:48.000Z",
        "updated_at": "2018-04-17T15:06:34.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2018-04-16T10:12:00.000Z"
    },
    "comments": [
        {
            "created_at": "2018-04-05T19:11:41.932Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2101?focusedCommentId=16427462) by Krisztian Szucs (kszucs):*\nI thins here https://github.com/apache/arrow/blob/master/cpp/src/arrow/python/numpy_to_arrow.cc#L839\r\nis the relevant code, the comments nicely explain what happens. \r\n\r\nThe example with explicit string datatype presumes the opposite direction.\r\n Of course a high level decode('utf-8') would work. What is the preferred way to do this kind of conversions?"
        },
        {
            "created_at": "2018-04-05T21:41:42.253Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2101?focusedCommentId=16427643) by Bryan Cutler (bryanc):*\nI'm not exactly sure what the right behavior for this is.  If you are just staying in a Python 2 env, then it makes sense that `str` would correspond to a binary type column and it doesn't cause a problem going to/from Pandas.  In PySpark, we are sending Arrow data to Java and it seems like specifying `pa.string()` should lead to a string column in Java (a VarCharVector).  Currently, we do a check and \"decode('utf-8')\" before calling `from_pandas` which works fine, but I thought maybe that pyarrow should perform a conversion to UTF-8 automatically if the user specifies the type. However, it's also possible that casting to UTF-8 wouldn't be wanted, e.g. if you are only in a Python 2 env and don't mind treating it as a binary column.\r\n\r\nI guess to sum this issue up, is `pa.string()` meant to correspond to an Arrow UTF-8 type or is it special in this case as it depends on if your `str` came from Python 2 or 3?  cc `[~wesmckinn]` `[~xhochy]` `[~pitrou]` for thoughts"
        },
        {
            "created_at": "2018-04-05T21:46:26.210Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2101?focusedCommentId=16427646) by Antoine Pitrou (apitrou):*\n`pa.string()` should definitely return a string array IMHO.\r\n\r\nNote the following discrepancy (Python 3):\r\n```python\n\r\n>>> pa.array([b'x'], type=pa.string())\r\n<pyarrow.lib.StringArray object at 0x7fdffc7de458>\r\n[\r\n  'x'\r\n]\r\n>>> pa.array(np.array([b'x'], dtype=object), type=pa.string())\r\n<pyarrow.lib.BinaryArray object at 0x7fdffc7dedb8>\r\n[\r\n  b'x'\r\n]\r\n```"
        },
        {
            "created_at": "2018-04-16T10:12:00.179Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2101?focusedCommentId=16439225) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 1886\n<https://github.com/apache/arrow/pull/1886>"
        }
    ]
}