{
    "issue": {
        "title": "[Rust]: From<ArrayDataRef> implementations should validate data type",
        "body": "***Note**: This issue was originally created as [ARROW-10078](https://issues.apache.org/jira/browse/ARROW-10078). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSee <https://github.com/apache/arrow/blob/ac86123a3f013ba1eeac2b66c2ccd00810c67871/rust/arrow/src/array/array.rs#L870>\r\n\r\nThe implementation currently does not validate that the datatype of the ArrayData argument matches. This can lead to inconsistencies, for example it is possible to create a TimestampMillisecondArray whose datatype reports Float64.\r\n\r\nA similar onconsistentcy could arise when trying to convert between types like\r\n```java\n\r\nlet keys: Int32Array = dict_array.data().into() \n```\r\nHere `keys.data_type()` would still return `Dictionary`",
        "created_at": "2020-09-24T08:50:45.000Z",
        "updated_at": "2021-04-26T12:36:30.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-04-26T12:36:30.000Z"
    },
    "comments": [
        {
            "created_at": "2021-04-26T12:34:14.453Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10078?focusedCommentId=17332127) by Andrew Lamb (alamb):*\nMigrated to github: https://github.com/apache/arrow-rs/issues/103"
        },
        {
            "created_at": "2021-04-26T12:36:29.189Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10078?focusedCommentId=17332129) by Andrew Lamb (alamb):*\nMigrated to github: https://github.com/apache/arrow-rs/issues/104"
        }
    ]
}