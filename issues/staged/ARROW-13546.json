{
    "issue": {
        "title": "[Python] Breaking API change in FSSpecHandler, requires metadata argument",
        "body": "***Note**: This issue was originally created as [ARROW-13546](https://issues.apache.org/jira/browse/ARROW-13546). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n<https://github.com/apache/arrow/pull/10295>\u00a0introduced the required metadata argument to FSSpecHandler.open_output_stream\u00a0\r\nNoticed this in our CI/testsuite at <https://github.com/vaexio/vaex/pull/1490>\u00a0\r\n```java\n\r\n    def create():\r\n261>       return fs.open_output_stream(path)\r\n262E       TypeError: open_output_stream() missing 1 required positional argument: 'metadata'\r\n```",
        "created_at": "2021-08-04T10:41:49.000Z",
        "updated_at": "2021-10-15T08:17:26.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-08-04T10:59:32.432Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13546?focusedCommentId=17393032) by Maarten Breddels (maartenbreddels):*\nMy current workaround, to make it backward compatible, if anyone hits the same issue\r\n```java\n\r\ndef _make_argument_optional(f, **defaults):\r\n# workaround for https://issues.apache.org/jira/browse/ARROW-13546\r\n# makes f act as if arguments have default values (or ignore when the argument does not exist)\r\n\u00a0 \u00a0 import inspect\r\n\u00a0 \u00a0 import functools\r\n\u00a0 \u00a0 sig = inspect.signature(f)\r\n\u00a0 \u00a0 params = sig.parameters\r\n\u00a0 \u00a0 @functools.wraps(f)\r\n\u00a0 \u00a0 def wrapper(*args, **kwargs):\r\n\u00a0 \u00a0 \u00a0 \u00a0 kwargs = kwargs.copy()\r\n\u00a0 \u00a0 \u00a0 \u00a0 for name, value in defaults.items():\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if name in params and name not in kwargs:\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 kwargs[name] = value\r\n\u00a0 \u00a0 \u00a0 \u00a0 return f(*args, **kwargs)\r\n\u00a0 \u00a0 return wrapper\r\n_make_argument_optional(fs.open_output_stream, metadata=None)(path)\r\n```"
        },
        {
            "created_at": "2021-08-26T14:25:55.428Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13546?focusedCommentId=17405258) by Joris Van den Bossche (jorisvandenbossche):*\n`[~maartenbreddels]` sorry, missed this report. Do you still have a reference to the full traceback? (I don't see it in CI on the PR you mention ..)\r\n\r\nI don't fully understand how we didn't catch this or how it's failing. A quick try to reproduce it:\r\n\r\n```Java\n\r\nIn [1]: import fsspec\r\n\r\nIn [2]: localfs = fsspec.filesystem(\"file\")\r\n\r\nIn [3]: from pyarrow.fs import PyFileSystem, FSSpecHandler\r\n\r\nIn [4]: fs = PyFileSystem(FSSpecHandler(localfs))\r\n\r\nIn [5]: with fs.open_output_stream(\"test\"):\r\n   ...:     pass\r\n   ...: \r\n```\r\n\r\nthat seems to work fine."
        },
        {
            "created_at": "2021-08-26T14:30:35.902Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13546?focusedCommentId=17405265) by Joris Van den Bossche (jorisvandenbossche):*\nAh, it might be possible that you are directly using the handler, instead of the handler wrapped in a PyFileSystem ? \r\nI don't think we considered that use case (or want to support it; although what you report is also a change for people implementing their own handler of course)\r\n\r\nLooking at https://github.com/vaexio/vaex/blob/94c08b8337bc946a3c9b97f277ab23c5a931ed7d/packages/vaex-core/vaex/file/__init__.py#L200-L210, you have `for_arrow=False` keyword, and in that case don't wrap it in a PyFileSystem. What's the use for that keyword exactly? (and for using the handler directly?)"
        },
        {
            "created_at": "2021-10-15T08:17:26.399Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13546?focusedCommentId=17429172) by Joris Van den Bossche (jorisvandenbossche):*\n`[~maartenbreddels]` just to check here again if you have been able to solve this in vaex with my suggestion above"
        }
    ]
}