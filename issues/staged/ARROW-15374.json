{
    "issue": {
        "title": "[C++][FlightRPC] Add support for alternative MemoryManagers",
        "body": "***Note**: This issue was originally created as [ARROW-15374](https://issues.apache.org/jira/browse/ARROW-15374). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWe should add support for sending/receiving data using a non-standard allocator, given that:\r\n \\* the plan is to support UCX as a backend to Flight,\r\n \\* UCX can manage non-CPU memory,\r\n \\* the existing Device/MemoryManager API handles this case,\r\n\r\nWe should find some way to ensure we fully reflect UCX's capabilities to Flight users. Furthermore, we should integrate the MemoryManager and Flight APIs so that Flight user code should not _have_ to worry about whether their backend supports this or not. (That means that for gRPC, we should do the copy for the user.)\r\n\r\nAs part of this, we should extend the Flight benchmark to test this case so we also have a baseline.",
        "created_at": "2022-01-19T19:38:05.000Z",
        "updated_at": "2022-04-24T18:38:50.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: FlightRPC",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-01-31T10:16:48.000Z"
    },
    "comments": [
        {
            "created_at": "2022-01-31T10:16:48.450Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15374?focusedCommentId=17484595) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 12239\n<https://github.com/apache/arrow/pull/12239>"
        }
    ]
}