{
    "issue": {
        "title": "[C++] Allow Bazel to pass custom __DATE__, __TIME__, and __TIMESTAMP__ flags to Arrow's toolchain",
        "body": "***Note**: This issue was originally created as [ARROW-17763](https://issues.apache.org/jira/browse/ARROW-17763). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nHello!\r\n\r\nI've been looking into incorporating Arrow into a Bazel build build project and have been having some challenges getting it to work.\r\n\r\nI've been using Bazel's [rules_foreign_cc](https://bazelbuild.github.io/rules_foreign_cc/main/index.html) to call CMake, however the build process is erroring out as [described by another community member](https://github.com/bazelbuild/rules_foreign_cc/issues/879).\r\n\r\nOne thing that I've learned: Bazel's C++ integration will specify `\\_\\_DATE\\_\\_`, `\\_\\_TIME\\_\\_`, and `\\_\\_TIMESTAMP\\_\\_`\u00a0flags to ensure reproducible builds.\r\n\r\nThese values are expected to be quoted strings. However, when Arrow's toolchain [translates](https://github.com/bazelbuild/bazel/blob/5.3.0/tools/cpp/unix_cc_configure.bzl#L622-L624) `CMAKE_CXX_FLAGS` to `ARROW_CXX_COMPILER_FLAGS`, CMake is [calling](https://github.com/apache/arrow/blob/apache-arrow-9.0.0/cpp/cmake_modules/ThirdpartyToolchain.cmake#L4874) `configure_file(...)` with the `ESCAPE_QUOTES` option which is mucking up the parsing.\r\n\r\nDoes anyone happen to have any recommendations for a workaround or a fix?\r\n\r\nThank you! I appreciate everyone's efforts in continuing to develop Arrow.\r\n\r\nCheers,\r\nStefan",
        "created_at": "2022-09-17T10:10:44.000Z",
        "updated_at": "2022-09-17T21:35:16.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-09-17T11:43:55.280Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17763?focusedCommentId=17606105) by Jin Shang (jinshang):*\nHi Stefan,\r\nTensorflow has a native BUILD rule for arrow: <https://github.com/tensorflow/io/blob/master/third_party/arrow.BUILD>. We have been using it on our Bazel toolchain and it works well enough.\r\nYou may need to add some defines and copts such as ARROW_SIMD_LEVEL and -O2 etc depending on your need."
        },
        {
            "created_at": "2022-09-17T17:15:00.460Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17763?focusedCommentId=17606153) by Stefan Novak (stefan-brt):*\nThank you, `[~jinshang]`. That's an excellent reference!\r\n\r\nI was able to get Arrow building in Bazel with Bazel's rules_foreign_cc by introducing a small patch to remove the `ESCAPE_QUOTES` option when `src/arrow/util/config.h` is generated:\r\n> `\u2014 cpp/cmake_modules/ThirdpartyToolchain.cmake`\n> `+++ cpp/cmake_modules/ThirdpartyToolchain.cmake`\n> `@@ -4871,6 +4871,6 @@ message(STATUS \"All bundled static libraries: ${ARROW_BUNDLED_STATIC_LIBS}\")`\n> 1. `Write out the package configurations.`\n> \n> `-configure_file(\"src/arrow/util/config.h.cmake\" \"src/arrow/util/config.h\" ESCAPE_QUOTES)`\n> `+configure_file(\"src/arrow/util/config.h.cmake\" \"src/arrow/util/config.h\")`\n> `install(FILES \"${ARROW_BINARY_DIR}/src/arrow/util/config.h\"`\n> `DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/arrow/util\")`\r\nThis patch can be applied when the HTTP archive is downloaded and extracted:\r\n> `http_archive(`\n> `\u00a0 \u00a0 name = \"arrow\",`\n> `\u00a0 \u00a0 build_file = \"//third_party/github.com/apache/arrow:BUILD.bazel\",`\n> `\u00a0 \u00a0 strip_prefix = \"apache-arrow-9.0.0\",`\n> `\u00a0 \u00a0 patches = [\"//third_party/github.com/apache/arrow:ThirdpartyToolchain.cmake.patch\"],`\n> `\u00a0 \u00a0 urls = [`\n> `\u00a0 \u00a0 \u00a0 \u00a0 \"https://github.com/apache/arrow/archive/refs/tags/apache-arrow-9.0.0.tar.gz\"`\n> `\u00a0 \u00a0 ],`\n> `)`\r\nIs there a specific rationale for escaping quotes when `src/arrow/util/config.h` is being generated? Is it feasible/practical to remove ESCAPE_QUOTES so that Arrow can be built easier in Bazel projects?\r\n\r\nThank you!"
        },
        {
            "created_at": "2022-09-17T21:34:05.620Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17763?focusedCommentId=17606184) by Kouhei Sutou (kou):*\nCould you show how Bazzel specifies `\\_\\_DATE\\_\\_` and so on?\r\n\r\n```\n\r\nexport CXXFLAGS=\"-D__DATE__=\\\\\\\"redacted\\\\\\\" ...\"\r\n```\r\n\r\n?\r\n\r\nOr\r\n\r\n```\n\r\nexport CXXFLAGS=\"-D__DATE__=\\\"redacted\\\" ...\"\r\n```\r\n\r\n?"
        }
    ]
}