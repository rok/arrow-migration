{
    "issue": {
        "title": "[Rust] [DataFusion] Wrap more operators in CoalesceBatchExec",
        "body": "***Note**: This issue was originally created as [ARROW-11068](https://issues.apache.org/jira/browse/ARROW-11068). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nOnce <https://github.com/apache/arrow/pull/9043> is merged, we should extend this to wrap HashJoinExec and HashAggregateExec as well since they can both produce small batches.\r\n\r\nRather than hard-code a list of operators that need to be wrapped, we should find a more generic mechanism so that plans can declare if their input and/or output batches should be coalesced (similar to how we handle partitioning) and this would allow custom operators outside of DataFusion to benefit from this optimization.",
        "created_at": "2020-12-29T18:39:29.000Z",
        "updated_at": "2021-04-26T13:25:44.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust - DataFusion",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-04-26T13:25:44.000Z"
    },
    "comments": [
        {
            "created_at": "2020-12-30T11:37:27.904Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11068?focusedCommentId=17256477) by Andrew Lamb (alamb):*\nI have some suggestions here: https://github.com/apache/arrow/pull/9043#discussion_r550163707\r\n\r\nTLDR \u2013 I think incorporating the coalescing logic into the operators themselves (so they don't produce small baches in the first place) might be better"
        },
        {
            "created_at": "2021-04-26T13:25:43.270Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11068?focusedCommentId=17332334) by Andrew Lamb (alamb):*\nMigrated to github: https://github.com/apache/arrow-datafusion/issues/139"
        }
    ]
}