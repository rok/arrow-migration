{
    "issue": {
        "title": "[C++][Developer] Implement tool to compile and run C++ benchmarks from master branch against older codebase revisions",
        "body": "***Note**: This issue was originally created as [ARROW-9239](https://issues.apache.org/jira/browse/ARROW-9239). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhenever a benchmark configuration is changed, the results from that benchmark become non-comparable with prior revisions of the benchmark before the change. This impacts \"archery benchmark diff\" and any other workflow that prepares benchmark comparisons\r\n\r\nI suggest the creation of a tool that \r\n\r\n- Backports -benchmark.cc changes along with known dependent files (like stuff in arrow/testing) to a branch based on a target commit to benchmark\n- Compile as many of the benchmarks as possible (some may not compile due to API changes)\n- Run benchmarks and collect their data\n  \n  I've already done this manually in a number of cases to compare performance in PRs where there are changes to the -benchmark.cc files, but it would be better to have a more structured tool that simplifies this process",
        "created_at": "2020-06-27T15:41:27.000Z",
        "updated_at": "2020-06-27T15:41:42.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Developer Tools",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": []
}