{
    "issue": {
        "title": "[C++/Dataset] Reading null columns as dictionary not longer possible",
        "body": "***Note**: This issue was originally created as [ARROW-12420](https://issues.apache.org/jira/browse/ARROW-12420). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nReading a dataset with a dictionary column where some of the files don't contain any data for that column (and thus are typed as null) broke with https://github.com/apache/arrow/pull/9532. It worked with the 3.0 release though and thus I would consider this a regression.\r\n\r\nThis can be reproduced using the following Python snippet:\r\n\r\n```Java\n\r\nimport pyarrow as pa\r\nimport pyarrow.parquet as pq\r\nimport pyarrow.dataset as ds\r\n\r\ntable = pa.table({\"a\": [None, None]})\r\npq.write_table(table, \"test.parquet\")\r\nschema = pa.schema([pa.field(\"a\", pa.dictionary(pa.int32(), pa.string()))])\r\nfsds = ds.FileSystemDataset.from_paths(\r\n    paths=[\"test.parquet\"],\r\n    schema=schema,\r\n    format=pa.dataset.ParquetFileFormat(),\r\n    filesystem=pa.fs.LocalFileSystem(),\r\n)\r\nfsds.to_table()\r\n```\r\n\r\nThe exception on master is currently:\r\n\r\n```Java\n\r\n---------------------------------------------------------------------------\r\nArrowNotImplementedError                  Traceback (most recent call last)\r\n<ipython-input-14-5f0bc602f16b> in <module>\r\n      6     filesystem=pa.fs.LocalFileSystem(),\r\n      7 )\r\n----> 8 fsds.to_table()\r\n\r\n~/Development/arrow/python/pyarrow/_dataset.pyx in pyarrow._dataset.Dataset.to_table()\r\n    456         table : Table instance\r\n    457         \"\"\"\r\n--> 458         return self._scanner(**kwargs).to_table()\r\n    459 \r\n    460     def head(self, int num_rows, **kwargs):\r\n\r\n~/Development/arrow/python/pyarrow/_dataset.pyx in pyarrow._dataset.Scanner.to_table()\r\n   2887             result = self.scanner.ToTable()\r\n   2888 \r\n-> 2889         return pyarrow_wrap_table(GetResultValue(result))\r\n   2890 \r\n   2891     def take(self, object indices):\r\n\r\n~/Development/arrow/python/pyarrow/error.pxi in pyarrow.lib.pyarrow_internal_check_status()\r\n    139 cdef api int pyarrow_internal_check_status(const CStatus& status) \\\r\n    140         nogil except -1:\r\n--> 141     return check_status(status)\r\n    142 \r\n    143 \r\n\r\n~/Development/arrow/python/pyarrow/error.pxi in pyarrow.lib.check_status()\r\n    116             raise ArrowKeyError(message)\r\n    117         elif status.IsNotImplemented():\r\n--> 118             raise ArrowNotImplementedError(message)\r\n    119         elif status.IsTypeError():\r\n    120             raise ArrowTypeError(message)\r\n\r\nArrowNotImplementedError: Unsupported cast from null to dictionary<values=string, indices=int32, ordered=0> (no available cast function for target type)\r\n```",
        "created_at": "2021-04-16T13:01:16.000Z",
        "updated_at": "2021-04-19T07:38:07.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-04-18T23:40:52.000Z"
    },
    "comments": [
        {
            "created_at": "2021-04-16T13:02:42.130Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12420?focusedCommentId=17323792) by Uwe Korn (uwe):*\ncc `[~bkietz]` \u00a0who wrote the PR that broke it ;)"
        },
        {
            "created_at": "2021-04-18T23:40:52.291Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12420?focusedCommentId=17324623) by Krisztian Szucs (kszucs):*\nIssue resolved by pull request 10093\n<https://github.com/apache/arrow/pull/10093>"
        },
        {
            "created_at": "2021-04-19T07:38:07.370Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12420?focusedCommentId=17324790) by Uwe Korn (uwe):*\nThanks `[~kszucs]`!"
        }
    ]
}