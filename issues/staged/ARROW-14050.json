{
    "issue": {
        "title": "[C++] tdigest, quantile return empty arrays when nulls not skipped",
        "body": "***Note**: This issue was originally created as [ARROW-14050](https://issues.apache.org/jira/browse/ARROW-14050). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThis is a C++ kernel issue, but the examples below use the R bindings to call the C++ kernels.\r\n\r\nThe aggregate functions `tdigest` and `quantile` return arrays with the same length as the option value `q`:\r\n```r\n\r\ncall_function(\"tdigest\", Array$create(c(1, 2, 3, NA)), options = list(q = c(0.1, 0.9), skip_nulls = TRUE))\r\n## Array\r\n## <double>\r\n## [\r\n##   1,\r\n##   3\r\n## ]\n```\r\nBut when the data includes `null` values and the option `skip_nulls` is set to `false`, these kernels instead return zero-length arrays:\r\n```r\n\r\ncall_function(\"tdigest\", Array$create(c(1, 2, 3, NA)), options = list(q = c(0.1, 0.9), skip_nulls = FALSE))\r\n## Array\r\n## <double>\r\n## []\n```\r\nThis is difficult to handle in bindings; it requires addition of special code to handle the case where the array comes back empty. It would be much better if the returned array in this situation had the same length `q` with `null` in every position:\r\n```r\n\r\n## Array\r\n## <double>\r\n## [\r\n##   null,\r\n##   null\r\n## ]\u00a0\n```",
        "created_at": "2021-09-21T02:05:48.000Z",
        "updated_at": "2021-09-21T20:41:57.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-09-21T20:41:50.000Z"
    },
    "comments": [
        {
            "created_at": "2021-09-21T20:41:50.089Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14050?focusedCommentId=17418314) by David Li (lidavidm):*\nIssue resolved by pull request 11199\n<https://github.com/apache/arrow/pull/11199>"
        }
    ]
}