{
    "issue": {
        "title": "[R] Discussion: tibble dependency in R package",
        "body": "***Note**: This issue was originally created as [ARROW-5190](https://issues.apache.org/jira/browse/ARROW-5190). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nHello,\r\n\r\n\u00a0\r\n\r\nI would like to have a discussion on the use of\u00a0**tibble** in the Apache Arrow R package. I looked at the [the project contributor guidelines\\|[https://github.com/apache/arrow/blob/master/docs/source/developers/contributing.rst]] and could not tell where the best place might be to start a public discussion on this topic, so I decided on JIRA. I apologize if this is not the right place.\r\n\r\n\u00a0\r\n\r\n**TL;DR**\r\n\r\nI would like to propose moving the\u00a0**tibble** dependency in the\u00a0**arrow**\u00a0R package to \"Suggests\", removing the _as_tibble()_ in _read_arrow()_, and having the core R code implementing the Arrow API only return data.frames or other base-R data structures wherever possible.\r\n\r\n\u00a0\r\n\r\n**Reasoning**\r\n\r\n[As far as I can tell\\|[https://github.com/apache/arrow/search?p=1&q=tibble&unscoped_q=tibble]], outside of tests and examples\u00a0**tibble** is only used in three places in the package:\r\n \\* S3 methods to convert Arrow objects to tibbles (_as_tibble.arrow__::__RecordBatch()_, _as.tibble.arrow::Table()_)\r\n \\* optional \"convert to tibble on the way out\" behavior controlled by a flag in interfaces to file types (parquet and feather)\r\n \\* [_read_arrow()_\\|[https://github.com/apache/arrow/blob/0536ef8174982a7a13a251174cc38701e8663b68/r/R/read_table.R#L88]]\r\n\r\n\u00a0\r\n\r\nIn my opinion, all three of these uses of\u00a0**tibble** are valuable for developers who use that package (or other packages in its ecosystem), but I am not convinced that the Arrow R package should be tightly coupled to them.\r\n\r\nIn\u00a0the Python community,\u00a0**pandas** is a broadly agreed-upon standard for representing data frames. Even with that ubiquity,\u00a0**pyarrow** does not depend on\u00a0**pandas** (it is not necessary to work with it) and all \"compatibility with\u00a0**pandas**\" code is isolated in a place explicitly intended for that purpose:\u00a0<https://github.com/apache/arrow/blob/master/python/pyarrow/pandas_compat.py>\r\n\r\nI think that is the ideal handling for integration of Arrow extensions with other software it might be used with. This allows users who care about only one of the integrations (e.g. feather, parquet,\u00a0HDFS, Apache Spark, tibble, data.table, etc.) to only have to build things they're already using.\u00a0\r\n\r\n\u00a0\r\n\r\n**Other background information**\r\n\r\nI took the time to write this tonight after talking a colleague through the issues\u00a0**feather** (R package) users experienced after the\u00a0**tibble 2.0** release. See for example [wesm/feather#374\\|[https://github.com/wesm/feather/issues/374]] and [wesm/feather#372\\|[https://github.com/wesm/feather/issues/37|https://github.com/wesm/feather/issues/374]2]. When **tibble 2.0** came out it broke\u00a0**feather\u00a00.3.1**\u00a0and the maintainers there promptly released to CRAN a\u00a0**feather 0.3.2** which was compatible with\u00a0**tibble 2.0+**. Unfortunately, this still caused disruptions for many people using\u00a0**feather** (who inadvertently had\u00a0**tibble** upgraded as part of installing other packages which depended on it). Nothing about\u00a0**tibble** was necessary to the implementation of\u00a0_read_feather()_, as far as I can tell, but this\u00a0design choice made installing and upgrading\u00a0**tibble** non-optional for developers who just wanted to use the feather file format and all it's awesome features.\r\n\r\n\u00a0\r\n\r\nIf the proposal here is accepted, I hope it will mean we can prevent repeating the same experience with the R\u00a0**arrow** package and set a strong precedent for developers who want to add compatibility in this package for other members of the ecosystem like parquet or Apache Spark.\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\nThank you for hearing me out!\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0",
        "created_at": "2019-04-21T06:07:48.000Z",
        "updated_at": "2019-06-12T11:39:27.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-06-12T11:39:14.000Z"
    },
    "comments": [
        {
            "created_at": "2019-06-03T13:54:41.027Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5190?focusedCommentId=16854615) by James Lamb (jameslamb):*\nThanks `[~romainfrancois]`!!!"
        },
        {
            "created_at": "2019-06-12T11:39:15.010Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5190?focusedCommentId=16862030) by Romain Francois (romainfrancois):*\nIssue resolved by pull request 4454\n<https://github.com/apache/arrow/pull/4454>"
        }
    ]
}