{
    "issue": {
        "title": "[Rust] Trait-specialization requires nightly",
        "body": "***Note**: This issue was originally created as [ARROW-10002](https://issues.apache.org/jira/browse/ARROW-10002). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nTrait specialization is widely used in the Rust Arrow implementation. Uses can be identified by searching for instances of `default fn` in the codebase:\r\n\r\n\u00a0\r\n```java\n\r\n$> rg -c 'default fn' ../arrow/rust/\r\n ../arrow/rust/parquet/src/util/test_common/rand_gen.rs:1\r\n ../arrow/rust/parquet/src/column/writer.rs:2\r\n ../arrow/rust/parquet/src/encodings/encoding.rs:16\r\n ../arrow/rust/parquet/src/arrow/record_reader.rs:1\r\n ../arrow/rust/parquet/src/encodings/decoding.rs:13\r\n ../arrow/rust/parquet/src/file/statistics.rs:1\r\n ../arrow/rust/arrow/src/array/builder.rs:7\r\n ../arrow/rust/arrow/src/array/array.rs:3\r\n ../arrow/rust/arrow/src/array/equal.rs:3\n```\r\n\u00a0\r\n\r\nThis feature requires Nightly Rust. Additionally, there is [no schedule for stabilization](https://github.com/rust-lang/rust/issues/31844#issue-135807289)\u00a0, primarily due to an [unresolved soundness hole](http://aturon.github.io/blog/2017/07/08/lifetime-dispatch). (Note: there has been further discussion and ideas for resolving the soundness issue, but to my knowledge no definitive action.)\r\n\r\nIf we can remove specialization from the Rust codebase, we will not be blocked on the Rust team's stabilization of that feature in order to move to stable Rust.",
        "created_at": "2020-09-14T17:13:53.000Z",
        "updated_at": "2020-12-03T11:37:07.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: task"
        ],
        "closed": true,
        "closed_at": "2020-10-18T19:06:06.000Z"
    },
    "comments": [
        {
            "created_at": "2020-09-14T17:18:06.152Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10002?focusedCommentId=17195629) by Kyle Strand (batmanaod):*\nI have put together a repository with a minimal example of one way in which we're using specialization in the `array` module: <https://github.com/BatmanAoD/arrow-rust-specialization-alternatives>\r\n\r\nThe `master` branch shows how the code is written currently. This pull request shows how we could avoid specialization by introducing an \"indexing\" method associated with each primitive type: https://github.com/BatmanAoD/arrow-rust-specialization-alternatives/pull/1"
        },
        {
            "created_at": "2020-09-14T17:28:34.687Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10002?focusedCommentId=17195638) by Andy Grove (andygrove):*\nThanks `[~batmanaod]` this looks really interesting.\r\n\r\n`[~paddyhoran]` `[~nevime]` \u00a0 `[~sunchao]` \u00a0 `[~alamb]` \u00a0 `[~jorgecarleitao]` \u00a0 `[~jhorstmann]` will likely be interested in this"
        },
        {
            "created_at": "2020-09-16T02:02:07.172Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10002?focusedCommentId=17196619) by Neville Dipale (nevi_me):*\nHi `[~batmanaod]`, I've looked at the code but haven't checked it out yet to do my own comparisons. I'd be interested in perf implications (I'm presuming there's no change for indexing), and how we would remove `default fn` on other trait methods, seeing as that it's mostly used to specialise between numeric primitives and booleans."
        },
        {
            "created_at": "2020-09-16T10:33:27.552Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10002?focusedCommentId=17196859) by Mahmut Bulut (vertexclique):*\nHi `[~batmanaod]` \u00a0, I have checked out the code and commented about ornamental changes. I don't see any visible perf implications. since dispatch over PrimitiveArrayOps replaced by the ArrowPrimitiveType, I don't expect that much perf impact."
        },
        {
            "created_at": "2020-09-16T18:37:18.054Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10002?focusedCommentId=17197181) by Kyle Strand (batmanaod):*\n[~nevi_me] and `[~vertexclique]`, thanks for taking a look!\r\n\r\nI agree that there shouldn't be any perf impact; the relevant monomorphizations should be inlined in both the current code and in the proposed version. I'd be glad to have some benchmarking done once I've made the changes on a branch of the actual Arrow code, though.\r\n\r\nI've been looking into several of the uses of `default fn`, not just this one, but I chose this one as a starting point because it seemed particularly tricky.\r\n\r\nI'll go ahead and start implementing the suggested approach."
        },
        {
            "created_at": "2020-09-16T19:54:00.326Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10002?focusedCommentId=17197209) by Kyle Strand (batmanaod):*\nI have taken a first pass at changing the implementation of `PrimitiveArrayOps` here: https://github.com/apache/arrow/pull/8206"
        },
        {
            "created_at": "2020-09-18T02:33:07.574Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10002?focusedCommentId=17198081) by Andy Grove (andygrove):*\nIssue resolved by pull request 8206\n<https://github.com/apache/arrow/pull/8206>"
        },
        {
            "created_at": "2020-09-18T03:01:20.528Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10002?focusedCommentId=17198090) by Kyle Strand (batmanaod):*\nMy first PR only removes `default fn` from one trait."
        },
        {
            "created_at": "2020-09-28T03:22:23.352Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10002?focusedCommentId=17202981) by Kyle Strand (batmanaod):*\n`[~sunchao]` [~nevi_me], `[~paddyhoran]`, `[~alamb]`, `[~jorgecarleitao]`, and `[~andygrove]`, the next step I would like to take is a fairly major refactoring. I don't know if there is a good reason for the current distinction between `ArrowPrimitiveType` and `ArrowNativeType`, and the ticket where they were introduced ([ARROW-3878]) doesn't provide many details, but it makes it somewhat more difficult to remove uses of `default fn`. I've written a Google Doc to explain the current situation and the change I would like to make: https://docs.google.com/document/d/14g80-O4lE5dDCv9TOOaS7xzshhGJ0mmrDDoLFvctEpk/edit?usp=sharing"
        },
        {
            "created_at": "2020-09-28T04:39:09.728Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10002?focusedCommentId=17202995) by Jorge Leit\u00e3o (jorgecarleitao):*\n`[~batmanaod]`, I agree with the proposal. I also struggled with the T::Native vs T for some time while working on the crate."
        },
        {
            "created_at": "2020-09-28T04:51:19.599Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10002?focusedCommentId=17202998) by Andy Grove (andygrove):*\n`[~batmanaod]` Thank you for the detailed write-up of the issue. I am also supportive of this effort."
        },
        {
            "created_at": "2020-09-29T09:56:47.339Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10002?focusedCommentId=17203830) by Andrew Lamb (alamb):*\nFWIW  \"I propose that we eliminate ArrowNativeType and simply merge its definition with ArrowPrimitiveType. \" \u2013 also sounds good to me. Thanks for writing it up `[~batmanaod]`"
        },
        {
            "created_at": "2020-09-30T16:22:47.731Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10002?focusedCommentId=17204858) by Andy Grove (andygrove):*\nIt seems like everyone so far agrees with the direction. The next question is when do we do this and who wants to do this. Given that the 2.0.0 release is targetted for next week, should we move this to 3.0.0?"
        },
        {
            "created_at": "2020-09-30T18:08:07.670Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10002?focusedCommentId=17204937) by Chao Sun (csun):*\n+1. It will be awesome if we can remove specialization with this approach!\u00a0"
        },
        {
            "created_at": "2020-09-30T19:16:16.200Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10002?focusedCommentId=17204970) by Kyle Strand (batmanaod):*\nI think it makes sense to target this for 3.0.0."
        },
        {
            "created_at": "2020-10-18T19:06:06.082Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10002?focusedCommentId=17216344) by Neville Dipale (nevi_me):*\nIssue resolved by pull request 8485\n<https://github.com/apache/arrow/pull/8485>"
        }
    ]
}