{
    "issue": {
        "title": "[C++][Dataset] Assert integer overflow in partitioning falls back to string",
        "body": "***Note**: This issue was originally created as [ARROW-10145](https://issues.apache.org/jira/browse/ARROW-10145). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nFrom https://stackoverflow.com/questions/64137664/how-to-override-type-inference-for-partition-columns-in-hive-partitioned-dataset\r\n\r\nSmall reproducer:\r\n\r\n```Java\n\r\nimport pyarrow as pa\r\nimport pyarrow.parquet as pq\r\n\r\ntable = pa.table({'part': [3760212050]*10, 'col': range(10)})\r\npq.write_to_dataset(table, \"test_int64_partition\", partition_cols=['part'])\r\n\r\nIn [35]: pq.read_table(\"test_int64_partition/\")\r\n...\r\nArrowInvalid: error parsing '3760212050' as scalar of type int32\r\nIn ../src/arrow/scalar.cc, line 333, code: VisitTypeInline(*type_, this)\r\nIn ../src/arrow/dataset/partition.cc, line 218, code: (_error_or_value26).status()\r\nIn ../src/arrow/dataset/partition.cc, line 229, code: (_error_or_value27).status()\r\nIn ../src/arrow/dataset/discovery.cc, line 256, code: (_error_or_value17).status()\r\n\r\nIn [36]: pq.read_table(\"test_int64_partition/\", use_legacy_dataset=True)\r\nOut[36]: \r\npyarrow.Table\r\ncol: int64\r\npart: dictionary<values=int64, indices=int32, ordered=0>\r\n```",
        "created_at": "2020-09-30T15:58:22.000Z",
        "updated_at": "2020-10-15T19:30:13.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-10-15T19:29:41.000Z"
    },
    "comments": [
        {
            "created_at": "2020-09-30T15:59:13.751Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10145?focusedCommentId=17204836) by Joris Van den Bossche (jorisvandenbossche):*\nI think at least we should fall back to string instead of raising an error like this (as long as we only support reading partition fields as string or int32), but long term we should expand the supported types."
        },
        {
            "created_at": "2020-09-30T16:10:53.319Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10145?focusedCommentId=17204845) by Joris Van den Bossche (jorisvandenbossche):*\nNote that reading it with pyarrow.dataset interface and _with_ specifying a schema manually, it seems to work correctly:\r\n\r\n```Java\n\r\nIn [38]: import pyarrow.dataset as ds\r\n\r\nIn [40]: dataset = ds.dataset(\"test_int64_partition/\", schema=pa.schema([(\"part\", pa.int64()), (\"col\", pa.int64())]), partitioning=\"hive\")\r\n\r\nIn [42]: dataset.to_table()\r\nOut[42]: \r\npyarrow.Table\r\npart: int64\r\ncol: int64\r\n\r\nIn [43]: dataset.to_table().to_pandas()\r\nOut[43]: \r\n         part  col\r\n0  3760212050    0\r\n1  3760212050    1\r\n2  3760212050    2\r\n3  3760212050    3\r\n4  3760212050    4\r\n5  3760212050    5\r\n6  3760212050    6\r\n7  3760212050    7\r\n8  3760212050    8\r\n9  3760212050    9\r\n```\r\n\r\nAt the moment, this `schema` keyword can not yet be passed to the `pq.read_table` function (something we should add!)"
        },
        {
            "created_at": "2020-10-15T19:29:41.151Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10145?focusedCommentId=17214941) by Joris Van den Bossche (jorisvandenbossche):*\nIssue resolved by pull request 8462\n<https://github.com/apache/arrow/pull/8462>"
        }
    ]
}