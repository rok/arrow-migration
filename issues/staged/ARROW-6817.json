{
    "issue": {
        "title": "dynamic_cast fails on Mac C++ ",
        "body": "***Note**: This issue was originally created as [ARROW-6817](https://issues.apache.org/jira/browse/ARROW-6817). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nthis dynamic_cast fails for me on Mac using Clang9. Was originally trying to use TupleFromTable stl function.\u00a0 Though, I'm not sure how the tests pass. Maybe because they run in Release with NDEBUG\r\n```java\n\r\nusing\u00a0namespace\u00a0arrow;\r\nstd::shared_ptr<Array>\u00a0arrptr;\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\r\n{\r\nauto\u00a0builder\u00a0=\u00a0Int64Builder();\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\r\nauto\u00a0st\u00a0=\u00a0builder.AppendValues(std::vector<std::int64_t>{1,\u00a02,\u00a03,\u00a045});\r\nauto\u00a0fst\u00a0=\u00a0builder.Finish(&arrptr);\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\r\n}\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\r\nstd::cout\u00a0<<\u00a0std::is_polymorphic<FlatArray>::value\u00a0<<\u00a0std::endl;\r\nstd::cout\u00a0<<\u00a0std::is_polymorphic<Int64Array>::value\u00a0<<\u00a0std::endl;\r\nstd::cout\u00a0<<\u00a0std::is_base_of<Array,\u00a0FlatArray>::value\u00a0<<\u00a0std::endl;\r\nstd::cout\u00a0<<\u00a0std::is_base_of<FlatArray,\u00a0Int64Array>::value\u00a0<<\u00a0std::endl;\r\nconst\u00a0auto&\u00a0iarr\u00a0=\u00a0static_cast<const\u00a0Int64Array&>(*arrptr);\r\n```\r\n\u00a0 \u00a0",
        "created_at": "2019-10-08T14:57:01.000Z",
        "updated_at": "2019-10-08T15:29:58.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-10-08T15:29:58.000Z"
    },
    "comments": []
}