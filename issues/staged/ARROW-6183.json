{
    "issue": {
        "title": "[R] Document that you don't have to use tidyselect if you don't want",
        "body": "***Note**: This issue was originally created as [ARROW-6183](https://issues.apache.org/jira/browse/ARROW-6183). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI noticed tonight that several functions from the\u00a0**tidyselect** package are re-exported by\u00a0**arrow**. Why is this necessary? In my opinion, the\u00a0**arrow**\u00a0R package should strive to have as few dependencies as possible and should have no opinion about which parts of the R ecosystem (\"tidy\" or otherwise) are used with it.\r\n\r\nI think it would be valuable to cut the\u00a0**tidyselect** re-exports, and to make\u00a0**feather::read_feather()**'s argument\u00a0**col_select** take a character vector of column names instead of a \"**tidyselect::vars_select()\"** object. I think that would be more natural and would be intuitive for a broader group of R users.\r\n\r\nWould you be open to removing\u00a0**tidyselect** and changing\u00a0**feather::read_feather()** this way?",
        "created_at": "2019-08-09T03:21:11.000Z",
        "updated_at": "2019-08-22T15:58:14.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-08-22T15:58:14.000Z"
    },
    "comments": [
        {
            "created_at": "2019-08-09T03:47:47.376Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6183?focusedCommentId=16903539) by Neal Richardson (npr):*\nThe col_select argument already works with a character vector of column names:\r\n```java\n\r\nlibrary(arrow)\r\nf <- tempfile() \r\nwrite.csv(iris, file=f)\r\ndf <- read_csv_arrow(f, col_select=c(\"Sepal.Length\", \"Species\"))\r\n> head(df)\r\n \u00a0 Sepal.Length Species\r\n 1\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 5.1\u00a0 setosa\r\n 2\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 4.9\u00a0 setosa\r\n 3\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 4.7\u00a0 setosa\r\n 4\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 4.6\u00a0 setosa\r\n 5\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 5.0\u00a0 setosa\r\n 6\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 5.4\u00a0 setosa\r\n```\r\nPerhaps we could improve the documentation to make that explicit.\r\n\r\nI'm generally in favor of minimizing dependencies (I was fine with dropping tibble FWIW), but the tidyselect dependency is not heavy given what other dependencies arrow already requires. And since it doesn't require you to be \"tidy\", including it does not\u00a0force anyone to take a side in an internecine language war. So personally I'm -0 on\u00a0removing it."
        },
        {
            "created_at": "2019-08-09T03:51:05.300Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6183?focusedCommentId=16903540) by James Lamb (jameslamb):*\nI'm also not trying to take sides or force anyone to take sides. In my opinion saying \"pass a vector of column names\" would be preferable to the current state which is \"pass this object from\u00a0**tidyselect** package but also a vector of column names will work\".\r\n\r\nAnd then outside of\u00a0**feather::read_feather()**, I'm unsure why\u00a0**arrow** needs to re-export all of these functions (<https://github.com/apache/arrow/blob/master/r/R/reexports-tidyselect.R>) or have\u00a0**tidyselect** as an \"Imports\" dependency."
        },
        {
            "created_at": "2019-08-22T15:58:14.333Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6183?focusedCommentId=16913443) by Francois Saint-Jacques (fsaintjacques):*\nIssue resolved by pull request 5144\n<https://github.com/apache/arrow/pull/5144>"
        }
    ]
}