{
    "issue": {
        "title": "Add option to only load specific columns from csv",
        "body": "***Note**: This issue was originally created as [ARROW-17766](https://issues.apache.org/jira/browse/ARROW-17766). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI may be missing something, but after checking in detail the documentation of pyarrow, I can't find an option equivalent to `pandas.read_csv(..., usecols=['col_to_load_1', 'col_to_load_2'])`.\r\n\r\nThis would be useful for example when loading CSV files with lots of columns where only few are needed. Having to load all the information in the CSV seems like a significant waste of resources.\r\n\r\nI guess a parameter `load_columns` could be added to `pyarrow.csv.ReadOptions`.",
        "created_at": "2022-09-18T17:10:08.000Z",
        "updated_at": "2022-09-18T17:21:45.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-09-18T17:21:45.000Z"
    },
    "comments": [
        {
            "created_at": "2022-09-18T17:21:36.118Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17766?focusedCommentId=17606331) by Marc Garcia (datapythonista):*\nOk, my bad, seems like it was there, `include_columns` at the end of the `ConverterOptions` parameters, I couldn't find it after looking at all the options 3 times (just found it checking the source code): https://arrow.apache.org/docs/python/generated/pyarrow.csv.ConvertOptions.html#pyarrow.csv.ConvertOptions"
        }
    ]
}