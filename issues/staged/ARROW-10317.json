{
    "issue": {
        "title": "[C++] Consider adding documentation for FunctionOption classes",
        "body": "***Note**: This issue was originally created as [ARROW-10317](https://issues.apache.org/jira/browse/ARROW-10317). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThis would allow generating improved documentation for bindings (e.g. Python).\r\n",
        "created_at": "2020-10-15T16:50:05.000Z",
        "updated_at": "2022-01-14T13:21:21.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-01-13T15:52:38.000Z"
    },
    "comments": [
        {
            "created_at": "2021-06-23T15:35:33.158Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10317?focusedCommentId=17368283) by Antoine Pitrou (apitrou):*\nThis actually may not be so worthwhile for bindings, because the values may change. For example, where C++ uses enums such as `JoinOptions::NullHandlingBehavior::\\{EMIT_NULL, SKIP, REPLACE\\`}, Python takes a plain string (e.g. \"emit_null\", \"skip\", \"replace\")."
        },
        {
            "created_at": "2021-06-23T15:35:41.531Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10317?focusedCommentId=17368284) by Antoine Pitrou (apitrou):*\ncc `[~amol-]`"
        },
        {
            "created_at": "2021-12-16T17:18:36.280Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10317?focusedCommentId=17460893) by Antoine Pitrou (apitrou):*\nMy current inclination is towards adding Python-specific documentation for compute options. Some groundwork is being done in https://github.com/apache/arrow/pull/11955 by allowing custom additions to compute docstrings."
        },
        {
            "created_at": "2021-12-30T14:01:40.428Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10317?focusedCommentId=17466886) by Antoine Pitrou (apitrou):*\nOne way to do this on the Python side would be to write regular Numpy-formatted docstrings for the options classes, then to parse them using `numpydoc` so as to extract parameter descriptions and inject them into the generated compute function docstrings.\r\n\r\nWe could for example vendor the `docscrape` module from `numpydoc`: https://github.com/numpy/numpydoc/blob/main/numpydoc/docscrape.py\r\n\r\n`[~jorisvandenbossche]` Does it sound reasonable?"
        },
        {
            "created_at": "2022-01-13T15:52:38.931Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10317?focusedCommentId=17475471) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 12076\n<https://github.com/apache/arrow/pull/12076>"
        }
    ]
}