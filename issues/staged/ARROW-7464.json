{
    "issue": {
        "title": "[C++] Refine CpuInfo singleton with std::call_once",
        "body": "***Note**: This issue was originally created as [ARROW-7464](https://issues.apache.org/jira/browse/ARROW-7464). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCpuInfo singleton is created and initialized on first invocation of\r\n[CpuInfo::GetInstance()](https://github.com/apache/arrow/blob/master/cpp/src/arrow/util/cpu_info.cc#L188-L195). All calls afterwards return reference to the\r\nsame instance. Current code uses std::mutex to make sure that CpuInfo\r\nis created only once, but it introduces unnecessary overhead for later\r\ncalls. Concurrent threads getting the created instance should not block\r\neach other.\r\n\r\nReplace std::mutex with std::call_once to fix this issue.\r\n\r\nReferences:\r\n[1] https://en.cppreference.com/w/cpp/thread/call_once\r\n[2] http://www.modernescpp.com/index.php/thread-safe-initialization-of-data",
        "created_at": "2019-12-23T05:46:47.000Z",
        "updated_at": "2019-12-24T02:48:42.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-12-24T02:48:42.000Z"
    },
    "comments": [
        {
            "created_at": "2019-12-24T02:48:42.152Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7464?focusedCommentId=17002604) by Kouhei Sutou (kou):*\nIssue resolved by pull request 6091\n<https://github.com/apache/arrow/pull/6091>"
        }
    ]
}