{
    "issue": {
        "title": "[C++] Extend visitor functions to include ArrayBuilder and allow callable visitors",
        "body": "***Note**: This issue was originally created as [ARROW-4146](https://issues.apache.org/jira/browse/ARROW-4146). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIn addition to accepting objects with Visit methods for the visited type, `Visit(Array|Type)` and `Visit(Array|Type)Inline` should accept objects with overloaded call operators.\r\n\r\nIn addition for inline visitation if a visitor can only visit one of the potential unboxings then this can be detected at compile time and the full type_id switch can be avoided (if the unboxed object cannot be visited then do nothing). For example:\r\n\r\n```Java\n\r\nVisitTypeInline(some_type, [](const StructType& s) {\r\n  // only execute this if some_type.id() == Type::STRUCT\r\n});\r\n```\r\n\r\nFinally, visit functions should be added for visiting ArrayBuilders",
        "created_at": "2019-01-02T17:08:26.000Z",
        "updated_at": "2022-07-12T14:04:22.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-08-04T10:14:54.661Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4146?focusedCommentId=17392983) by Antoine Pitrou (apitrou):*\nIs this still something you are willing to do?"
        },
        {
            "created_at": "2022-07-12T14:04:22.093Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4146?focusedCommentId=17565558) by @toddfarmer:*\nThis issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned. Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon."
        }
    ]
}