{
    "issue": {
        "title": "[Python] Segfault with pytorch 0.4",
        "body": "***Note**: This issue was originally created as [ARROW-2920](https://issues.apache.org/jira/browse/ARROW-2920). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSee also <https://github.com/ray-project/ray/issues/2447>\r\n\r\nHow to reproduce:\r\n \\* Start the Ubuntu Deep Learning AMI (version 12.0) on EC2\r\n \\* Create a new env with `conda create -y -n breaking-env python=3.5`\r\n \\* Install pytorch with\u00a0`source activate breaking-env && conda install pytorch torchvision cuda91 -c pytorch`\r\n\r\n \\* Compile and install manylinux1 pyarrow wheels from latest arrow master as described here:\u00a0https://github.com/apache/arrow/blob/2876a3fdd1fb9ef6918b7214d6e8d1e3017b42ad/python/manylinux1/README.md\r\n \\* In the breaking-env just created, run the following:\r\n\r\n\u00a0\r\n```java\n\r\nPython 3.5.5 |Anaconda, Inc.| (default, May 13 2018, 21:12:35)\r\n\r\n[GCC 7.2.0] on linux\r\n\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n\r\n>>> import pyarrow\r\n\r\n>>> import torch\r\n\r\n>>> torch.nn.Conv2d(64, 2, kernel_size=3, stride=1, padding=1, bias=False).cuda()\r\n\r\nSegmentation fault (core dumped)\n```\r\n\u00a0\r\n\r\nBacktrace:\r\n```java\n\r\n>>> torch.nn.Conv2d(64, 2, kernel_size=3, stride=1, padding=1, bias=False).cuda()\r\n\r\n\r\n\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n\r\n0x0000000000000000 in ?? ()\r\n\r\n(gdb) bt\r\n\r\n#0\u00a0 0x0000000000000000 in ?? ()\r\n\r\n#1\u00a0 0x00007ffff7bc8a99 in __pthread_once_slow (once_control=0x7fffdb791e50 <at::globalContext()::globalContext_+400>, init_routine=0x7fffe46aafe1 <std::__once_proxy()>)\r\n\r\n\u00a0 \u00a0 at pthread_once.c:116\r\n\r\n#2\u00a0 0x00007fffda95c302 in at::Type::toBackend(at::Backend) const () from /home/ubuntu/anaconda3/envs/breaking-env2/lib/python3.5/site-packages/torch/lib/libcaffe2.so\r\n\r\n#3\u00a0 0x00007fffdc59b231 in torch::autograd::VariableType::toBackend (this=<optimized out>, b=<optimized out>) at torch/csrc/autograd/generated/VariableType.cpp:145\r\n\r\n#4\u00a0 0x00007fffdc8dbe8a in torch::autograd::THPVariable_cuda (self=0x7ffff6dbff78, args=0x7ffff6daf828, kwargs=0x0) at torch/csrc/autograd/generated/python_variable_methods.cpp:333\r\n\r\n#5\u00a0 0x000055555569f4e8 in PyCFunction_Call ()\r\n\r\n#6\u00a0 0x00005555556f67cc in PyEval_EvalFrameEx ()\r\n\r\n#7\u00a0 0x00005555556fbe08 in PyEval_EvalFrameEx ()\r\n\r\n#8\u00a0 0x00005555556f6e90 in PyEval_EvalFrameEx ()\r\n\r\n#9\u00a0 0x00005555556fbe08 in PyEval_EvalFrameEx ()\r\n\r\n#10 0x000055555570103d in PyEval_EvalCodeEx ()\r\n\r\n#11 0x0000555555701f5c in PyEval_EvalCode ()\r\n\r\n#12 0x000055555575e454 in run_mod ()\r\n\r\n#13 0x000055555562ab5e in PyRun_InteractiveOneObject ()\r\n\r\n#14 0x000055555562ad01 in PyRun_InteractiveLoopFlags ()\r\n\r\n#15 0x000055555562ad62 in PyRun_AnyFileExFlags.cold.2784 ()\r\n\r\n#16 0x000055555562b080 in Py_Main.cold.2785 ()\r\n\r\n#17 0x000055555562b871 in main ()\n```",
        "created_at": "2018-07-26T22:34:56.000Z",
        "updated_at": "2018-08-29T01:38:18.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2018-07-27T15:38:07.000Z"
    },
    "comments": [
        {
            "created_at": "2018-07-26T22:42:48.275Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2920?focusedCommentId=16559004) by Philipp Moritz (pcmoritz):*\nThis is likely the same issue as https://issues.apache.org/jira/browse/ARROW-2657\u00a0(i.e. the symbols exported by the use of the thread pool might clash)."
        },
        {
            "created_at": "2018-07-26T22:51:25.722Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2920?focusedCommentId=16559017) by Robert Nishihara (robertnishihara):*\nDoes the problem only occur when TensorFlow is **not** installed?"
        },
        {
            "created_at": "2018-07-26T23:01:23.899Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2920?focusedCommentId=16559024) by Philipp Moritz (pcmoritz):*\nYes,\u00a0in the environment I set up tensorflow is not installed."
        },
        {
            "created_at": "2018-07-26T23:02:25.905Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2920?focusedCommentId=16559025) by Wes McKinney (wesm):*\nI'd bet a similar workaround can be employed. It's a bummer that these ML projects aren't being team players with coordinating their build toolchains."
        },
        {
            "created_at": "2018-07-26T23:05:24.845Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2920?focusedCommentId=16559029) by Philipp Moritz (pcmoritz):*\nYeah, I can give a shot to the workaround.\u00a0I'm still hopeful we can find a better solution for this down the road.\r\n\r\nThe reason why the ML projects have such a hard time\u00a0it seems\u00a0is that it's not easy to get CUDA working with a standard toolchain."
        },
        {
            "created_at": "2018-07-26T23:10:32.686Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2920?focusedCommentId=16559032) by Wes McKinney (wesm):*\nAh right, because CUDA is not OSS. If NVIDIA provided a devtoolset-2 based CUDA toolchain it would help, I wonder if anyone has asked"
        },
        {
            "created_at": "2018-07-27T01:00:38.666Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2920?focusedCommentId=16559102) by Wes McKinney (wesm):*\nAdded this to 0.10.0 milestone so it gets in. Thanks for digging into this"
        },
        {
            "created_at": "2018-07-27T15:38:07.236Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2920?focusedCommentId=16559910) by Wes McKinney (wesm):*\nIssue resolved by pull request 2329\n<https://github.com/apache/arrow/pull/2329>"
        }
    ]
}