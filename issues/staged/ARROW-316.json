{
    "issue": {
        "title": "Finalize Date type",
        "body": "***Note**: This issue was originally created as [ARROW-316](https://issues.apache.org/jira/browse/ARROW-316). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nParquet defines it as: \"number of days from the Unix epoch, 1 January 1970.\"\nhttps://github.com/apache/parquet-format/blob/master/LogicalTypes.md#datetime-types\n\nWe should make it the same.\n",
        "created_at": "2016-10-03T23:30:47.000Z",
        "updated_at": "2017-03-20T22:53:38.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Format",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2017-03-20T17:44:26.000Z"
    },
    "comments": [
        {
            "created_at": "2016-10-03T23:35:07.071Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-316?focusedCommentId=15543760) by Julien Le Dem (julienledem):*\njava implementation looks wrong:\nhttps://github.com/apache/arrow/blob/c3930a062b2d71e3d277d4db1785e24e9183276f/java/vector/src/main/codegen/templates/FixedValueVectors.java#L496"
        },
        {
            "created_at": "2017-03-13T04:15:08.945Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-316?focusedCommentId=15906839) by Wes McKinney (wesm):*\nSo in the end we are using int64 milliseconds since the UNIX epoch \u2013 we do have a date32 type in the C++ implementation since days-since-UNIX-epoch occurs frequently in the wild. We can document this in the format/ section to close this issue, anything else to discuss?"
        },
        {
            "created_at": "2017-03-16T16:29:19.892Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-316?focusedCommentId=15928377) by Julien Le Dem (julienledem):*\nWhat representations do we need?\n - millisecond since the UNIX epoch on 64 bits: does this mean the timestamp at midnight? This is not the same as number of days \\* 24 \\* 3600 \\* 1000 because of leap seconds.\n - number of days since the UNIX epoch on int32. This one seems straightforward.\n\nDo we want to make the Date type more explicit similar to the current Time type discussion? Meaning it has a unit and a bitWidth? This seems overkill since the precision is always day.\n\n\n"
        },
        {
            "created_at": "2017-03-16T17:55:48.014Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-316?focusedCommentId=15928525) by Wes McKinney (wesm):*\n`[~julienledem]` I guess we should revise the description to be \"UNIX time\", which does not include leap seconds (https://en.wikipedia.org/wiki/Unix_time).\n\nOne option is to add an enum like:\n\n```Java\nenum DateUnit: short { \n  DAY,   /// 32-bit storage\n  MILLISECOND,   /// 64-bit storage\n}\n```\n\nand add that to the Date flatbuffer table. "
        },
        {
            "created_at": "2017-03-16T19:07:33.809Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-316?focusedCommentId=15928667) by Wes McKinney (wesm):*\nIn the interest of an expedient resolution, I opened PR https://github.com/apache/arrow/pull/390 for discussion. \n\nAs an extra data point, the `DateUnit::DAY` 32-bit representation is the one used by PostgreSQL. "
        },
        {
            "created_at": "2017-03-20T17:44:26.945Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-316?focusedCommentId=15933156) by Julien Le Dem (julienledem):*\nIssue resolved by pull request 390\n<https://github.com/apache/arrow/pull/390>"
        },
        {
            "created_at": "2017-03-20T18:41:28.892Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-316?focusedCommentId=15933268) by Luke Higgins (virtualluke):*\nsure you don't want to account for leap seconds?  On CentOS7 for example unix time from date command does give current UTC (which is adjusted for leap seconds).  If I am timestamping events on my unix host and storing them the timestamp will most likely be UTC (modulo timezone locale perhaps)"
        },
        {
            "created_at": "2017-03-20T19:23:42.060Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-316?focusedCommentId=15933352) by Wes McKinney (wesm):*\n`[~virtualluke]` do you have any documentation about that? The `date` command returns the current system time, which does account for leap seconds. When there is a leap second, the same second occurs twice https://access.redhat.com/articles/15145. As far as the actual UNIX timestamps, my understanding is that they do not include leap seconds. "
        },
        {
            "created_at": "2017-03-20T22:53:38.901Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-316?focusedCommentId=15933760) by Luke Higgins (virtualluke):*\nI was wrong, read some documentation on the date command incorrectly.  Looks like storing without leap seconds is pretty universal."
        }
    ]
}