{
    "issue": {
        "title": "[C++] SIMD info always returning none on MacOS",
        "body": "***Note**: This issue was originally created as [ARROW-11905](https://issues.apache.org/jira/browse/ARROW-11905). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI'm helping with ARROW-11507 and in testing it I noticed something odd, I'm getting none and none for both simd_level and detected_simd_level which seems odd. I also tried it in pyarrow (below) and I'm getting the same thing (this was built off of HEAD of apache/arrow) so I suspect that this is something lower than either of them (and in both `runtime_info` is a think wrapper around the c++).\r\n\r\n```python\n\r\n>>> import pyarrow as pa\r\n>>> pa.runtime_info()\r\nRuntimeInfo(simd_level='none', detected_simd_level='none')\r\n```\r\n\r\nI do see the following when building:\r\n\r\n```Java\n\r\n--   ARROW_SIMD_LEVEL=SSE4_2 [default=NONE|SSE4_2|AVX2|AVX512]\r\n--       Compile-time SIMD optimization level\r\n--   ARROW_RUNTIME_SIMD_LEVEL=MAX [default=NONE|SSE4_2|AVX2|AVX512|MAX]\r\n--       Max runtime SIMD optimization level\r\nand sse/avx etc are built:\r\n\r\n-- Performing Test CXX_SUPPORTS_SSE4_2\r\n-- Performing Test CXX_SUPPORTS_SSE4_2 - Success\r\n-- Performing Test CXX_SUPPORTS_AVX2\r\n-- Performing Test CXX_SUPPORTS_AVX2 - Success\r\n-- Performing Test CXX_SUPPORTS_AVX512\r\n-- Performing Test CXX_SUPPORTS_AVX512 - Success\r\n```\r\n\r\nI've also tried confirming that ARROW_USER_SIMD_LEVEL is unset, and tried setting it explicitly:\r\n\r\n```Java\n\r\n(pyarrow-source) jkeane@het python % ARROW_USER_SIMD_LEVEL=sse4_2 python\r\nPython 3.9.2 (default, Feb 24 2021, 13:26:09)\r\n[Clang 12.0.0 (clang-1200.0.32.29)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import pyarrow as pa\r\n>>> pa.runtime_info()\r\nRuntimeInfo(simd_level='none', detected_simd_level='none')\r\n```\r\n\r\n\r\nI've tested it on two macOS machines (both running on intel chips) and both had the same behavior above. This appears to work on linux machines just fine.",
        "created_at": "2021-03-08T14:33:55.000Z",
        "updated_at": "2021-03-10T08:48:13.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-03-09T13:45:49.000Z"
    },
    "comments": [
        {
            "created_at": "2021-03-08T14:41:37.023Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11905?focusedCommentId=17297418) by Antoine Pitrou (apitrou):*\nThanks for the report. It appears we miss the required detection code on macOS."
        },
        {
            "created_at": "2021-03-08T17:28:52.794Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11905?focusedCommentId=17297565) by Neal Richardson (npr):*\nApple recommends using sysctlbyname to look for simd features, and we don't do that. cf. https://developer.apple.com/documentation/apple_silicon/about_the_rosetta_translation_environment and discussion on ARROW-11217"
        },
        {
            "created_at": "2021-03-09T13:45:49.781Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11905?focusedCommentId=17298075) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 9657\n<https://github.com/apache/arrow/pull/9657>"
        }
    ]
}