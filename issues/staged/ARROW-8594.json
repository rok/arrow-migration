{
    "issue": {
        "title": "[GLib][Plasma] Check failed: object.data_size == data_size ",
        "body": "***Note**: This issue was originally created as [ARROW-8594](https://issues.apache.org/jira/browse/ARROW-8594). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThere is some problem with Plasma Object creation in Arrow Build 0.16.\r\n\r\nThe following test function was working fine with Build 0.12, but now in Build 0.16 it is giving some check error: Check failed: object.data_size == data_size\u00a0\r\n\r\nThe sample code is:\r\n\r\n\u00a0\r\n```java\n\r\nvoid plasma_cglib_test(void){\r\ngboolean success = TRUE;\r\n GError *error = NULL;\r\nguint8 id_arr[20] = {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9};\r\n GPlasmaClient *gPlasmaClient;\r\n GPlasmaObjectID *object_id;\r\n GPlasmaClientCreateOptions *create_options;\r\n GPlasmaClientOptions *gplasmaClient_options;\r\n GPlasmaCreatedObject *Object;\r\nconst guint8 *testdata = (const guint8[]){'a', 'b', 'c', 0};\r\n gint64 size=4;\r\ncreate_options = gplasma_client_create_options_new();\r\n gplasmaClient_options = gplasma_client_options_new();\r\n gPlasmaClient = gplasma_client_new(\"/tmp/store0\",gplasmaClient_options, &error);\r\n object_id = gplasma_object_id_new(id_arr, 20, &error);\r\n{\r\n guint8 metadata[] = \"metadata\";\r\n gplasma_client_create_options_set_metadata(create_options, (const guint8 *)metadata, sizeof(metadata));\r\n }\r\n Object = gplasma_client_create(gPlasmaClient, object_id, size, create_options, &error);\r\ng_object_unref(create_options);\r\n {\r\n GArrowBuffer *data;\r\n g_object_get(Object, \"data\", &data, NULL);\r\n garrow_mutable_buffer_set_data(GARROW_MUTABLE_BUFFER(data),0, testdata,size,&error);\r\n g_object_unref(data);\r\n }\r\ngplasma_created_object_seal(Object, &error);\r\n g_object_unref(Object);\r\n gplasma_client_disconnect(gPlasmaClient, &error);\r\n g_object_unref(gPlasmaClient);\r\n g_object_unref(object_id);\r\n fprintf(stderr, \"[%s] obj_id: %d , size: %ld, Done. \\n\", __func__, id_arr[0], size);\r\n}\r\n```\r\nOutput for build 0.12 is:\r\n```java\n\r\nSingularity> plasma_store -m 93000 -s /tmp/store0 & ./bwa\r\n[1] 29574\r\nWARNING: Logging before InitGoogleLogging() is written to STDERR\r\nE0425 22:14:50.104815 29575 io.cc:168] Connection to IPC socket failed for pathname /tmp/store0, retrying 50 more times\r\nE0425 22:14:50.205021 29575 io.cc:168] Connection to IPC socket failed for pathname /tmp/store0, retrying 49 more times\r\nE0425 22:14:50.305122 29575 io.cc:168] Connection to IPC socket failed for pathname /tmp/store0, retrying 48 more times\r\nI0425 22:14:50.333011 29574 store.cc:994] Allowing the Plasma store to use up to 9.3e-05GB of memory.\r\nI0425 22:14:50.379298 29574 store.cc:1024] Starting object store with directory /dev/shm and huge page support disabled\r\nI0425 22:14:50.405828 29574 store.cc:599] Disconnecting client on fd 6\r\n[plasma_cglib_test] obj_id: 1 , size: 4, Done. \n```\r\nFollowing is the output for build 0.16:\r\n```java\n\r\nSingularity> plasma_store -m 93000 -s /tmp/store0 & ./bwa\r\n[1] 28738\r\n/build/apache-arrow-0.16.0/cpp/src/plasma/io.cc:168: Connection to IPC socket failed for pathname /tmp/store0, retrying 20 more times\r\n/arrow/cpp/src/plasma/store.cc:1242: Allowing the Plasma store to use up to 9.3e-05GB of memory.\r\n/arrow/cpp/src/plasma/store.cc:1269: Starting object store with directory /dev/shm and huge page support disabled\r\n/build/apache-arrow-0.16.0/cpp/src/plasma/client.cc:437: Check failed: object.data_size == data_size \r\n/usr/lib/x86_64-linux-gnu/libarrow.so.16(+0x339dd1)[0x2b0a70d55dd1]\r\n/usr/lib/x86_64-linux-gnu/libarrow.so.16(_ZN5arrow4util8ArrowLogD1Ev+0xdd)[0x2b0a7104346d]\r\n/usr/lib/x86_64-linux-gnu/libplasma.so.16(+0x14021)[0x2b0a7224d021]\r\n/usr/lib/x86_64-linux-gnu/libplasma.so.16(_ZN6plasma12PlasmaClient6CreateERKNS_8UniqueIDElPKhlPSt10shared_ptrIN5arrow6BufferEEi+0x29)[0x2b0a7224d289]\r\n/usr/local/lib/libplasma-glib.so.16(gplasma_client_create+0xe3)[0x2b0a6f912513]\r\n./bwa(+0x204b2)[0x55babc7e04b2]\r\n./bwa(+0x329c)[0x55babc7c329c]\r\n/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xe7)[0x2b0a6ff96b97]\r\n./bwa(+0x3a5a)[0x55babc7c3a5a]\r\n/arrow/cpp/src/plasma/store.ccAborted (core dumped)\r\n:749: Disconnecting client on fd 6\n```\r\n\u00a0",
        "created_at": "2020-04-25T20:27:02.000Z",
        "updated_at": "2020-04-27T00:05:12.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: GLib",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-04-27T00:05:12.000Z"
    },
    "comments": [
        {
            "created_at": "2020-04-26T23:38:52.019Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8594?focusedCommentId=17092887) by Kouhei Sutou (kou):*\nI couldn't reproduce this on Ubuntu 18.04.\r\n\r\nI installed 0.16.0 packages by `sudo apt install -y -V libplasma-glib-dev=0.16.0-1 libplasma-dev=0.16.0-1 libarrow-cuda-dev=0.16.0-1 libarrow-dev=0.16.0-1 libarrow-glib-dev=0.16.0-1 libarrow-cuda-glib-dev=0.16.0-1 gir1.2-plasma-1.0=0.16.0-1 gir1.2-arrow-1.0=0.16.0-1 gir1.2-arrow-cuda-1.0=0.16.0-1 plasma-store-server=0.16.0-1`.\r\n\r\nIt seems that you used `libplasma-dev` package and self-build Plasma GLib:\r\n\r\n```\n\r\n/usr/lib/x86_64-linux-gnu/libplasma.so.16(_ZN6plasma12PlasmaClient6CreateERKNS_8UniqueIDElPKhlPSt10shared_ptrIN5arrow6BufferEEi+0x29)[0x2b0a7224d289]\r\n/usr/local/lib/libplasma-glib.so.16(gplasma_client_create+0xe3)[0x2b0a6f912513]\r\n```\r\n\r\nCould you confirm whether this is reproducible with `libplasma-glib-dev` package? "
        },
        {
            "created_at": "2020-04-27T00:04:26.485Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8594?focusedCommentId=17092894) by Tanveer (tahmad):*\nThanks. Yes, You are right, I have self-built C_Glib because I needed the following functions ARROW-8509 included in Plasma API. So I manually added these functions and built it from sources.\r\n\r\n\u00a0\r\n\r\n\u00a0"
        }
    ]
}