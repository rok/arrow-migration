{
    "issue": {
        "title": "[C++][Dataset] Separate datasets backed by readers from InMemoryDataset",
        "body": "***Note**: This issue was originally created as [ARROW-12231](https://issues.apache.org/jira/browse/ARROW-12231). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nFrom ARROW-10882/<https://github.com/apache/arrow/pull/9802>\u00a0\r\n \\* Backing an InMemoryDataset with a reader is misleading. Let's split that out into a separate class.\r\n \\* Dataset scanning can then use an I/O thread for the new class. (Note that for Python, we'll need to be careful to release the GIL before any operations so that the I/O thread can acquire the GIL to call into the underlying Python reader/file object.)\r\n \\* Longer-term, we should interface with Python's async.",
        "created_at": "2021-04-06T15:31:20.000Z",
        "updated_at": "2021-05-06T17:10:05.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-05-06T17:10:05.000Z"
    },
    "comments": [
        {
            "created_at": "2021-04-06T17:09:28.093Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12231?focusedCommentId=17315721) by Weston Pace (westonpace):*\nTo add to this.\u00a0 The reader-backed dataset is not restartable while a RecordBatchVector/Table-backed dataset could be restartable, or it could remove its ownership of the record batches / table as it scans (allowing batches already scanned to be freed)."
        },
        {
            "created_at": "2021-05-06T17:10:05.310Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12231?focusedCommentId=17340322) by Ben Kietzman (bkietz):*\nIssue resolved by pull request 10070\n<https://github.com/apache/arrow/pull/10070>"
        }
    ]
}