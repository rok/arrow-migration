{
    "issue": {
        "title": "[R] Implement dplyr::slice_sample()",
        "body": "***Note**: This issue was originally created as [ARROW-17759](https://issues.apache.org/jira/browse/ARROW-17759). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n```Java\n\r\nslice_sample(.data, ..., n, prop, weight_by = NULL, replace = FALSE)\r\n```\r\n\r\nIf `n` is provided, compute `nrow(.data)`, and if that is not NA, convert to a {prop}. (Might want to do prop + .01 or something and then do head(n) after, i.e. sample more than you need and then take `n`, just so you don't by randomness get fewer than n.)\r\n\r\nWith prop, turn this into `filter(arrow_random() < prop)`. See ARROW-17572. \r\n\r\nDefer weight_by to a followup. It should be doable but might be expensive (need to scan everything to compute sum and ensure that all values are positive).\r\n\r\nDefer replace = TRUE. \r\n\r\nAlso probably can only do if .data is ungrouped, I think the dplyr methods do sampling within groups. ",
        "created_at": "2022-09-16T17:18:06.000Z",
        "updated_at": "2022-09-22T16:36:31.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: task"
        ],
        "closed": false
    },
    "comments": []
}