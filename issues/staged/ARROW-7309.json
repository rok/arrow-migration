{
    "issue": {
        "title": "[Python] Support HDFS federation viewfs://",
        "body": "***Note**: This issue was originally created as [ARROW-7309](https://issues.apache.org/jira/browse/ARROW-7309). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n- Add viewfs support to pyarrow.filesystem.resolve_filesystem_and_path\n-  libhdfs already supports injecting the scheme and will automatically resolve federation in\n      fs = FileSystem#get(URI, conf, ugi)\n-  works with Hadoop 2/3\n  \n  see:\n  https://github.com/apache/hadoop/blob/trunk/hadoop-hdfs-project/hadoop-hdfs-native-client/src/main/native/libhdfs/hdfs.c#L770\n  https://github.com/apache/hadoop/blob/trunk/hadoop-hdfs-project/hadoop-hdfs-native-client/src/main/native/libhdfs/hdfs.c#L637",
        "created_at": "2019-12-04T10:35:14.000Z",
        "updated_at": "2020-01-06T20:17:29.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-01-06T20:16:02.000Z"
    },
    "comments": [
        {
            "created_at": "2019-12-04T10:38:12.598Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7309?focusedCommentId=16987729) by Antoine Pitrou (apitrou):*\n`pyarrow.filesystem` is deprecated, we're working on a new filesystem layer present in `pyarrow.fs`."
        },
        {
            "created_at": "2019-12-04T10:38:25.168Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7309?focusedCommentId=16987730) by Antoine Pitrou (apitrou):*\ncc `[~kszucs]`"
        },
        {
            "created_at": "2019-12-04T10:45:01.861Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7309?focusedCommentId=16987736) by Fabian H\u00f6ring (fhoering):*\nOK. Maybe it needs to be tagged deprecated.\r\n\r\nCan you give some more details on how to use use this ? \r\nhttps://github.com/apache/arrow/blob/master/python/pyarrow/fs.py only seems to re-exposes classes like FileSystem & LocalFileSystem"
        },
        {
            "created_at": "2019-12-04T10:46:06.668Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7309?focusedCommentId=16987738) by Fabian H\u00f6ring (fhoering):*\nOn my side I would like to have some generic fs resolver that works with hdfs (including federation) but also with https://github.com/dask/s3fs"
        },
        {
            "created_at": "2019-12-04T13:09:34.303Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7309?focusedCommentId=16987845) by Antoine Pitrou (apitrou):*\nThere's https://github.com/apache/arrow/blob/master/python/pyarrow/s3fs.py for S3. HDFS still needs to be exposed.\r\n"
        },
        {
            "created_at": "2019-12-04T13:11:53.217Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7309?focusedCommentId=16987847) by Antoine Pitrou (apitrou):*\nThere's also ARROW-7102 open to make `pyarrow.fs` interoperate with the Python `fsspec`."
        },
        {
            "created_at": "2019-12-04T13:12:36.969Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7309?focusedCommentId=16987848) by Fabian H\u00f6ring (fhoering):*\nYes, but now you have those classes exposed separately.\r\nI need some kind of generic resolver based on the path. Exactly what `resolve_filesystem_and_path` is doing. \r\n"
        },
        {
            "created_at": "2019-12-04T13:13:38.032Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7309?focusedCommentId=16987849) by Antoine Pitrou (apitrou):*\nWe need to expose that in Python as well :-)"
        },
        {
            "created_at": "2019-12-04T13:15:29.679Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7309?focusedCommentId=16987853) by Fabian H\u00f6ring (fhoering):*\nThat, imo, is the only way to properly handle viewfs,\r\nI also had a look a fsspec and exactly this is also missing.\r\n\r\nSomething like `fs = get_cached_fs_from_path(\"viewfs://root/user/f.horing/..\")`\r\n\r\nI don't mind where to implement this here or in fsspec. I just would like to avoid doing this in my code."
        },
        {
            "created_at": "2019-12-04T13:33:05.041Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7309?focusedCommentId=16987868) by Fabian H\u00f6ring (fhoering):*\n`[~apitrou]`\r\nI had a look at the new implementations. I get the idea.\r\n\r\nSo what I need is the new hdfs wrapper and then a Python wrapper resolve_filesystem_and_path that exposes all those filesystems based on the path.\r\nThe registry idea from [fsspec](https://github.com/intake/filesystem_spec/blob/master/fsspec/registry.py) is nice or just if blocks based on the scheme (as it is handled now)\r\nAlso some internal caching would be nice (for hdfs filesystems, we have many different namenodes)\r\n\r\nWhen will hdfs be exposed in Python with the new format ?\r\n\r\nI could do a proposal for the fs resolver. But basically it would just be\r\n- move resolve_filesystem_and_path to a new module\n- expose new python objects based on the scheme\n- create the fs\n- add some internal caching"
        },
        {
            "created_at": "2019-12-04T13:36:40.103Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7309?focusedCommentId=16987872) by Antoine Pitrou (apitrou):*\nHDFS should be relatively easy to expose (similar to S3). See ARROW-7310.\r\n\r\nDitto for URI resolving, since it just needs to wrap the corresponding C++ API. Note that the C++ API may need to be expanded to support more URI schemes and parameters.  See ARROW-7311.\r\n\r\n"
        },
        {
            "created_at": "2019-12-04T16:07:26.008Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7309?focusedCommentId=16987968) by Fabian H\u00f6ring (fhoering):*\nFileSystemFromUri doesn't support viewfs either. \r\nhttps://github.com/apache/arrow/blob/master/cpp/src/arrow/filesystem/filesystem.cc#L358"
        },
        {
            "created_at": "2019-12-05T12:40:53.986Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7309?focusedCommentId=16988757) by Fabian H\u00f6ring (fhoering):*\n`[~apitrou]` `[~kszucs]`\r\nI played a bit with the new Fs interface on the c++ hdfs filesystem and by directly using this in Python (ARROW-7311)\r\nIndeed getting the HadoopFileSystem with FileSystemFromUri seems easy. \r\n\r\nHowever the API completely changed in https://github.com/apache/arrow/blob/master/python/pyarrow/_fs.pyx#L172 \r\n\r\nHow are you going to map this to the existing documented interface ?\r\nhttps://arrow.apache.org/docs/python/filesystems.html\r\n\r\nThere seems to be something missing.\r\n\r\nI'm not convinced that `fs.get_target_stats(Selector(\"/user/f.horing/\")` is easier than the existing `fs.ls(\"/user/f.horing/\\*\")`\r\n"
        },
        {
            "created_at": "2019-12-05T13:42:26.154Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7309?focusedCommentId=16988822) by Krisztian Szucs (kszucs):*\nYeah, once we have HDFS exposed for the new filesystem layer https://issues.apache.org/jira/browse/ARROW-7310 we can work on to improve the ergonomics of the API. \r\n\r\n"
        },
        {
            "created_at": "2019-12-05T17:24:04.428Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7309?focusedCommentId=16988999) by Fabian H\u00f6ring (fhoering):*\nUpdated the PR to also include viewfs support to the c++ fs. Please review.\r\nI kept the changes in Python  `resolve_filesystem_and_path` as this is directly usable and make the new Fs compliant to the old API/update doc, .. may probably take some time."
        },
        {
            "created_at": "2019-12-11T10:18:49.485Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7309?focusedCommentId=16993393) by Fabian H\u00f6ring (fhoering):*\n`[~apitrou]` Can you have a look at the PR and give a feedback on what is necessary to merge it ?\r\n\r\nI added unit tests and it passes the existing tests. Tested on our Criteo Hadoop cluster.\r\n\r\nI also investigated adding new integration test but they currently use an external docker image (seems like it is this one https://github.com/parrot-stream/docker-impala) for hdfs with a very basic hdfs config. Seems difficult to set up viewfs on it with multiple names nodes.\r\n\r\nPlease also note that this fix is important https://github.com/apache/arrow/pull/5957/commits/735375ebd537fa790bcdbce346544120999cb525#diff-58910df77b218837364f0b542f889a1bL49. We can pass it as a separate PR if you wish.\r\n\r\nThis made viewfs work in the old implementation when it is set up as the default fs, in this case libhdfs decides based on the config where to find the name nodes."
        },
        {
            "created_at": "2019-12-11T10:48:16.893Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7309?focusedCommentId=16993433) by Antoine Pitrou (apitrou):*\nI'll take a look in a week or so. `[~kszucs]` You might be interested too."
        },
        {
            "created_at": "2019-12-11T11:00:21.800Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7309?focusedCommentId=16993438) by Fabian H\u00f6ring (fhoering):*\nOK. Thanks"
        },
        {
            "created_at": "2020-01-06T20:16:02.718Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7309?focusedCommentId=17009144) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 5957\n<https://github.com/apache/arrow/pull/5957>"
        }
    ]
}