{
    "issue": {
        "title": "[R] [C++] Should strptime support a partial format?",
        "body": "***Note**: This issue was originally created as [ARROW-15813](https://issues.apache.org/jira/browse/ARROW-15813). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIn base R we can use `strptime` to parse and extract\u00a0parts from a datetime by passing a restricted format.\r\n```r\n\r\n> strptime(\"2012-05-25 18:45:32\", format = \"%Y-%m-%d\")\r\n[1] \"2012-05-25 BST\"\r\n> strptime(\"2012-05-25 18:45:32\", format = \"%Y-%m-%d %H\")\r\n[1] \"2012-05-25 18:00:00 BST\r\n```",
        "created_at": "2022-03-01T10:49:25.000Z",
        "updated_at": "2022-06-06T10:51:34.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-03-21T15:38:23.913Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15813?focusedCommentId=17509960) by Drago\u0219 Moldovan-Gr\u00fcnfeld (dragosmg):*\nThere might be a way to implement this directly in R once `strptime` can return a `NULL` so we can `coalesce` through several formats.\u00a0"
        },
        {
            "created_at": "2022-03-25T10:19:31.939Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15813?focusedCommentId=17512300) by Drago\u0219 Moldovan-Gr\u00fcnfeld (dragosmg):*\n`[~jorisvandenbossche]`& `[~rokm]` \u00a0I'd be curious to know what you think. Would something like this be useful outside R?\u00a0"
        },
        {
            "created_at": "2022-03-25T10:27:34.721Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15813?focusedCommentId=17512303) by Rok Mihevc (rokm):*\nWould you say this is basically a strptime + floor under the hood? If so I would implement it like that in R for now."
        },
        {
            "created_at": "2022-03-25T22:10:08.203Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15813?focusedCommentId=17512607) by Drago\u0219 Moldovan-Gr\u00fcnfeld (dragosmg):*\nCould be. I haven't thought about it yet, but strptime + floor sounds like a solid direction."
        },
        {
            "created_at": "2022-03-29T08:29:27.211Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15813?focusedCommentId=17513916) by Joris Van den Bossche (jorisvandenbossche):*\nI don't know if strptime + floor is a possible way to implement this, because the strptime will always raise an error (or return null) if the format doesn't match exactly? So you don't get a value that you can floor."
        },
        {
            "created_at": "2022-03-29T08:46:27.796Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15813?focusedCommentId=17513924) by Drago\u0219 Moldovan-Gr\u00fcnfeld (dragosmg):*\nI was thinking we could try several formats and then choose the one that parses successfully + then floor to the format that has been passed as an arg (i.e. for `strptime(..., format = \"%Y-%m-%d %H\")` coalesce through variations of `\"%H%M%S\"` with a variety of separators).\u00a0"
        },
        {
            "created_at": "2022-03-29T08:55:42.576Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15813?focusedCommentId=17513932) by Drago\u0219 Moldovan-Gr\u00fcnfeld (dragosmg):*\nBut this approach might come with significant overhead. We would need to do a bit of string pre-processing (which on occasion might be not be needed - e.g. the user passes a format such as \"%Y-%m-%d %H\" and the data is in that format)."
        },
        {
            "created_at": "2022-03-29T13:14:57.925Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15813?focusedCommentId=17514084) by Jonathan Keane (jonkeane):*\nFWIW, in the [R docs](https://stat.ethz.ch/R-manual/R-devel/library/base/html/strptime.html) it describes the process as \"Each input string is processed as far as necessary for the format specified: any trailing characters are ignored.\" which is slightly different from a floor-like action (though agree with Joris: that might not even be possible )"
        },
        {
            "created_at": "2022-03-29T15:43:19.285Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15813?focusedCommentId=17514158) by Rok Mihevc (rokm):*\nSo substring + strptime with appropriate length format string?"
        },
        {
            "created_at": "2022-03-29T16:28:35.516Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15813?focusedCommentId=17514182) by Jonathan Keane (jonkeane):*\nKind of, more like the format string has a `.*` at the end that eats up and ignores anything that isn't in the format itself"
        },
        {
            "created_at": "2022-03-29T16:34:49.357Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15813?focusedCommentId=17514185) by Rok Mihevc (rokm):*\nI suppose that can be done from R side now? Do we want this in c++?"
        },
        {
            "created_at": "2022-03-29T16:37:41.263Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15813?focusedCommentId=17514186) by Jonathan Keane (jonkeane):*\nI'm skeptical it can be done in R, and almost certainly not in a performant manner (unless format already accepts regex like that?)"
        },
        {
            "created_at": "2022-03-29T16:41:42.713Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15813?focusedCommentId=17514188) by Rok Mihevc (rokm):*\nWhy not just use substr kernel? If we can do strict in strptime I don't see why we need regex."
        },
        {
            "created_at": "2022-03-29T17:21:32.630Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15813?focusedCommentId=17514213) by Jonathan Keane (jonkeane):*\nBecause we don't actually know the length of the first bit (or really any other part, though ) of the string:\r\n\r\n```Java\n\r\n> times <- c(\"2012-05-25 18:45:32\", \"2020-5-6\", \"20-05-06\", \"2022-06-07 00:55\", \"2020-01-01 could be anything at all ROFL\")\r\n> strptime(times, format = \"%Y-%m-%d\")\r\n[1] \"2012-05-25 CDT\" \"2020-05-06 CDT\" \"0020-05-06 LMT\" \"2022-06-07 CDT\"\r\n[5] \"2020-01-01 CST\"\r\n```\r\n\r\nOr with `%B` it's even worse:\r\n```Java\n\r\n> months_plus <- c(\"2020 January 1 string\", \"2020 July 1 extra\")\r\n> strptime(months_plus, format = \"%Y %B %d\") \r\n[1] \"2020-01-01 CST\" \"2020-07-01 CDT\"\r\n```\r\n\r\n"
        },
        {
            "created_at": "2022-03-29T17:36:21.459Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15813?focusedCommentId=17514246) by Rok Mihevc (rokm):*\nAh, I was assuming we're only doing ISO8610 format. Yeah this wouldn't be easy. Thanks for the explanation!"
        }
    ]
}