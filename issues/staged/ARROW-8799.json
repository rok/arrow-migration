{
    "issue": {
        "title": "[C++][Dataset] Reading list column as nested dictionary segfaults",
        "body": "***Note**: This issue was originally created as [ARROW-8799](https://issues.apache.org/jira/browse/ARROW-8799). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nPython example:\r\n\r\n```Java\n\r\nimport pyarrow as pa\r\nimport pyarrow.parquet as pq  \r\nfrom pyarrow.tests import util                                                                                                                                                                             \r\n                                                                                                                                                                      \r\nrepeats = 10 \r\nnunique = 5 \r\n\r\ndata = [ \r\n    [[util.rands(10)] for i in range(nunique)] * repeats, \r\n] \r\ntable = pa.table(data, names=['f0'])                                                                                                                                                                   \r\n\r\npq.write_table(table, \"test_dictionary.parquet\")\r\n```\r\n\r\nReading with the parquet code works:\r\n\r\n```Java\n\r\n>>> pq.read_table(\"test_dictionary.parquet\", read_dictionary=['f0.list.item'])                                                                                                                                  \r\npyarrow.Table\r\nf0: list<item: dictionary<values=string, indices=int32, ordered=0>>\r\n  child 0, item: dictionary<values=string, indices=int32, ordered=0>\r\n```\r\n\r\nbut doing the same with the datasets API segfaults:\r\n\r\n```Java\n\r\n>>> fmt = ds.ParquetFileFormat(read_options=dict(dictionary_columns=[\"f0.list.item\"]))\r\n>>> dataset = ds.dataset(\"test_dictionary.parquet\", format=fmt)                                                                       \r\n>>> dataset.to_table()      \r\nSegmentation fault (core dumped)\r\n```",
        "created_at": "2020-05-14T13:47:24.000Z",
        "updated_at": "2020-06-09T16:25:02.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-06-08T17:15:29.000Z"
    },
    "comments": [
        {
            "created_at": "2020-06-08T17:15:29.293Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8799?focusedCommentId=17128467) by Wes McKinney (wesm):*\nIssue resolved by pull request 7181\n<https://github.com/apache/arrow/pull/7181>"
        }
    ]
}