{
    "issue": {
        "title": "[C++] Implement support for using selection vectors in scalar aggregate function kernels",
        "body": "***Note**: This issue was originally created as [ARROW-5005](https://issues.apache.org/jira/browse/ARROW-5005). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe aggregate kernels don't support mask (the result of a filter). Add the the following method\u00a0to `AggregateFunction`.\r\n\r\n```c++\n\r\nvirtual Status ConsumeWithFilter(const Array& input, const Array& mask, void* state) const = 0;\r\n```\r\n\r\nThe goal is to add support for AST similar to:\r\n\r\n\r\n```sql\n\r\nSELECT AGG(x) FROM table WHERE pred;\r\n```\r\n",
        "created_at": "2019-03-25T12:59:07.000Z",
        "updated_at": "2022-07-12T14:04:15.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2019-03-25T18:14:36.510Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5005?focusedCommentId=16800955) by Ben Kietzman (bkietz):*\nShould this be added to `UnaryKernel/BinaryKernel` as `CallMasked` or so? It seems like it might be generally useful and fairly straightforward to provide a naive default impl"
        },
        {
            "created_at": "2019-03-25T18:52:28.134Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5005?focusedCommentId=16800975) by Francois Saint-Jacques (fsaintjacques):*\nThe default implementation could work for some operations by using Take, but it's preferable to have each aggregate provide a native implementation. Note that masking is not just applicable to aggregates."
        },
        {
            "created_at": "2019-03-28T22:21:40.766Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5005?focusedCommentId=16804365) by Wes McKinney (wesm):*\n`[~bkietz]` the use of filters to improve performance is fairly specific to each class of kernels \u2013 it is especially impactful in the case of aggregates. I do not think we should generalize prematurely in this case"
        },
        {
            "created_at": "2020-05-25T15:11:46.147Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5005?focusedCommentId=17116107) by Wes McKinney (wesm):*\nI believe the best approach right now is to use selection vectors for this (see `arrow::compute::ExecBatch::selection_vector`)"
        },
        {
            "created_at": "2021-06-08T14:20:54.557Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5005?focusedCommentId=17359389) by Niranda Perera (niranda):*\nI will take this up. From what I understand, we need to enable masked scalar aggregates using the `ExecBatch::selection_vector`.\r\n\r\nI have a couple of questions.\r\n1. Where/ at what point would the selection_vector be set to an ExecBatch?\n1. Should I change the kernels in aggregate_\\* files, so that they are selection-vector-aware, or should we manage those as separate implementations?"
        },
        {
            "created_at": "2022-07-12T14:04:15.260Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5005?focusedCommentId=17565486) by @toddfarmer:*\nThis issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned. Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon."
        }
    ]
}