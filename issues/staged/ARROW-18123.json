{
    "issue": {
        "title": "[Python] Cannot use multi-byte characters in file names in write_table",
        "body": "***Note**: This issue was originally created as [ARROW-18123](https://issues.apache.org/jira/browse/ARROW-18123). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nError when specifying a file path containing multi-byte characters in `pyarrow.parquet.write_table`.\r\n\r\nFor example, use `\u4f8b.parquet` as the file path.\r\n\r\n```python\n\r\nPython 3.10.7 (main, Oct  5 2022, 14:33:54) [GCC 10.2.1 20210110] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import pandas as pd\r\n>>> import numpy as np\r\n>>> import pyarrow as pa\r\n>>> df = pd.DataFrame({'one': [-1, np.nan, 2.5],\r\n...                    'two': ['foo', 'bar', 'baz'],\r\n...                    'three': [True, False, True]},\r\n...                    index=list('abc'))\r\n>>> table = pa.Table.from_pandas(df)\r\n>>> import pyarrow.parquet as pq\r\n>>> pq.write_table(table, '\u4f8b.parquet')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File\r\n\"/home/vscode/.local/lib/python3.10/site-packages/pyarrow/parquet/__init__.py\",\r\nline 2920, in write_table\r\n    with ParquetWriter(\r\n  File\r\n\"/home/vscode/.local/lib/python3.10/site-packages/pyarrow/parquet/__init__.py\",\r\nline 911, in __init__\r\n    filesystem, path = _resolve_filesystem_and_path(\r\n  File \"/home/vscode/.local/lib/python3.10/site-packages/pyarrow/fs.py\", line\r\n184, in _resolve_filesystem_and_path\r\n    filesystem, path = FileSystem.from_uri(path)\r\n  File \"pyarrow/_fs.pyx\", line 463, in pyarrow._fs.FileSystem.from_uri\r\n  File \"pyarrow/error.pxi\", line 144, in\r\npyarrow.lib.pyarrow_internal_check_status\r\n  File \"pyarrow/error.pxi\", line 100, in pyarrow.lib.check_status\r\npyarrow.lib.ArrowInvalid: Cannot parse URI: '\u4f8b.parquet'\r\n```",
        "created_at": "2022-10-21T10:51:40.000Z",
        "updated_at": "2022-11-09T08:52:49.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-10-24T13:26:04.392Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18123?focusedCommentId=17623170) by Alessandro Molina (amol-):*\nThe documentation states\r\n```java\n\r\nthe argument can be a pathlib.Path object, or a string describing an absolute local path. \n```\r\n**absolute local path** is the key here\r\n```java\n\r\n>>> f = pyarrow.fs.FileSystem.from_uri(\"/home/amol/ARROW/arrow/python/\u4f8b.pippo\")\r\n>>> f\r\n(<pyarrow._fs.LocalFileSystem object at 0xffff9e909470>, '/home/amol/ARROW/arrow/python/\u4f8b.pippo')\r\n>>> f[0].open_input_file(f[1]).read()\r\nb''\n```\r\n\u00a0\r\n\r\nIf you are willing to use a local path, you can rely on `pathlib.Path` for that\r\n```java\n\r\n>>> f = pyarrow.fs.FileSystem.from_uri(pathlib.Path(\"\u4f8b.pippo\"))\r\n>>> f\r\n(<pyarrow._fs.LocalFileSystem object at 0xffffb3333270>, '/home/amol/ARROW/arrow/python/\u4f8b.pippo')\r\n>>> f[0].open_input_file(f[1])\r\n<pyarrow.NativeFile closed=False own_file=False is_seekable=True is_writable=False is_readable=True>\r\n>>> f[0].open_input_file(f[1]).read()\r\nb''\r\n```\r\n\u00a0\r\n\r\nTrying to use an actual uri (with `file://` schema) will result in an error by the way, and that should probably be supported too:\r\n```java\n\r\n>>> f = pyarrow.fs.FileSystem.from_uri(\"file:///home/amol/ARROW/arrow/python/\u4f8b.pippo\")\r\nTraceback (most recent call last):\r\n\u00a0 File \"<stdin>\", line 1, in <module>\r\n\u00a0 File \"pyarrow/_fs.pyx\", line 463, in pyarrow._fs.FileSystem.from_uri\r\n\u00a0 \u00a0 return FileSystem.wrap(GetResultValue(result)), frombytes(c_path)\r\n\u00a0 File \"pyarrow/error.pxi\", line 144, in pyarrow.lib.pyarrow_internal_check_status\r\n\u00a0 \u00a0 return check_status(status)\r\n\u00a0 File \"pyarrow/error.pxi\", line 100, in pyarrow.lib.check_status\r\n\u00a0 \u00a0 raise ArrowInvalid(message)\r\npyarrow.lib.ArrowInvalid: Cannot parse URI: 'file:///home/amol/ARROW/arrow/python/\u4f8b.pippo'\n```\r\nAs URI are expected to be percentage encoded, I tried percent encoding the provided uri. That works as expected regarding parsing the uri, but as the file path is not decoded, it results in `NotFound` errors.\u00a0\r\n```java\n\r\n>>> f = pyarrow.fs.FileSystem.from_uri(\"file:///home/amol/ARROW/arrow/python/%E4%BE%8B.pippo\")\r\n>>> f\r\n(<pyarrow._fs.LocalFileSystem object at 0xffff9ee445f0>, '/home/amol/ARROW/arrow/python/%E4%BE%8B.pippo') >>> f[0].get_file_info(f[1])\r\n<FileInfo for '/home/amol/ARROW/arrow/python/%E4%BE%8B.pippo': type=FileType.NotFound>\r\n>>> f[0].open_input_file(f[1])\r\nTraceback (most recent call last):\r\n\u00a0 File \"<stdin>\", line 1, in <module>\r\n\u00a0 File \"pyarrow/_fs.pyx\", line 763, in pyarrow._fs.FileSystem.open_input_file\r\n\u00a0 \u00a0 in_handle = GetResultValue(self.fs.OpenInputFile(pathstr))\r\n\u00a0 File \"pyarrow/error.pxi\", line 144, in pyarrow.lib.pyarrow_internal_check_status\r\n\u00a0 \u00a0 return check_status(status)\r\n\u00a0 File \"pyarrow/error.pxi\", line 113, in pyarrow.lib.check_status\r\n\u00a0 \u00a0 raise IOError(errno, message)\r\nFileNotFoundError: [Errno 2] Failed to open local file '/home/amol/ARROW/arrow/python/%E4%BE%8B.pippo'. Detail: [errno 2] No such file or directory \n```\r\nThis should probably be an issue we want to fix\r\n\r\n\u00a0"
        },
        {
            "created_at": "2022-10-24T13:35:11.996Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18123?focusedCommentId=17623177) by SHIMA Tatsuya (eitsupi):*\nThanks for your comment.\r\nBut does it explain that relative paths can be used if they do not contain multibyte characters?\r\nThe sample code appears to use relative paths.\r\n\r\nAnd, the documentation I am looking at does not seem to have a link to that detailed explanation.\r\n<https://arrow.apache.org/docs/python/generated/pyarrow.parquet.write_table.html>"
        },
        {
            "created_at": "2022-10-24T15:34:07.269Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18123?focusedCommentId=17623249) by Alessandro Molina (amol-):*\nFair point, I got distracted by the ticket summary, but the problem is not that we don't generally support unicode file names, but that `write_table` which should definitely support relative paths doesn't. I'll update the ticket summary to make it clear and reopen it."
        },
        {
            "created_at": "2022-11-09T08:52:43.928Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-18123?focusedCommentId=17630859) by Joris Van den Bossche (jorisvandenbossche):*\nYes, we certainly support relative paths. Targetting this for 11.0 since it is actually a regression compared to older pyarrow versions (before we used pyarrow.fs filesystem in write_table, this worked fine)\r\n"
        }
    ]
}