{
    "issue": {
        "title": "[Python] Use IPC writing code for pickling RecordBatches",
        "body": "***Note**: This issue was originally created as [ARROW-13690](https://issues.apache.org/jira/browse/ARROW-13690). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nFor wide schemas in particular the the recursive nature of the currently pickling algorithm for record batches makes it less efficient then using the IPC format (which can be done entirely in C++).\r\n\r\n\u00a0\r\n\r\nConsider switching the mechanism to use the IPC format.\u00a0 I think this can be a backwards compatible change if the current leaving:\u00a0_reconstruct_record_batch in place if we care about that.",
        "created_at": "2021-08-23T05:50:19.000Z",
        "updated_at": "2021-09-02T05:02:30.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-08-23T11:43:48.716Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13690?focusedCommentId=17403137) by Joris Van den Bossche (jorisvandenbossche):*\nSomewhat related, using IPC for pickling would also help for ensuring we don't pickle the full buffer of a sliced array -> ARROW-10739 (I don't know if there are significant downsides in always using IPC? I suppose for simple/small arrays it will give some overhead for Arrays, since we need to put those in a RecordBatch to use the IPC machinery?)"
        },
        {
            "created_at": "2021-08-25T04:17:07.809Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13690?focusedCommentId=17404169) by Micah Kornfield (emkornfield):*\nThis Jira was intended solely for RecrodBatch objects, I think we might want to revisit this for Arrays/ChunkedArrays, but the tradeoffs as noted are less obvious and implementation is more complicated.\u00a0 RecordBatches shouldn't really need any transformation."
        }
    ]
}