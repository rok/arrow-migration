{
    "issue": {
        "title": "[C++] StringBuilder UnsafeAppend causes EXC_BAD_ACCESS",
        "body": "***Note**: This issue was originally created as [ARROW-15228](https://issues.apache.org/jira/browse/ARROW-15228). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIt seems that StringBuilder->UnsafeAppend produces a memory violation. This is on macOS Monterey with an intel chip if it matters. Below is a sample program that will reproduce the error:\r\n```java\n\r\n#include <arrow/api.h>\r\n\r\narrow::Status RunMain(int argc, char** argv) {\r\n\u00a0 auto builder = std::make_shared<arrow::StringBuilder>();\r\n\u00a0 ARROW_RETURN_NOT_OK(builder->Reserve(1));\r\n\u00a0 builder->UnsafeAppend(std::string(\"a\"));\u00a0 \r\n  return arrow::Status::OK();\r\n}\r\n\r\nint main(int argc, char** argv) {\r\n\u00a0 arrow::Status st = RunMain(argc, argv);\r\n\u00a0 if (!st.ok()) {\r\n\u00a0 \u00a0 return 1;\r\n\u00a0 }\r\n\u00a0 return 0;\r\n}\n```\r\n\u00a0\r\n\r\nI could not reproduce with another builder type",
        "created_at": "2021-12-31T01:01:32.000Z",
        "updated_at": "2022-01-03T16:06:23.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2022-01-03T16:06:23.000Z"
    },
    "comments": [
        {
            "created_at": "2021-12-31T10:43:18.772Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15228?focusedCommentId=17467224) by Antoine Pitrou (apitrou):*\nThis is expected, `Reserve` only reserves space for the indices, you also need to reserve space for the data by calling `ReserveData`."
        },
        {
            "created_at": "2021-12-31T15:49:17.804Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15228?focusedCommentId=17467278) by Will Ayd (willayd):*\nGotcha. Does that assume then that I have a good idea of the general size of the strings I'd eventually be storing? I am dealing with variable sized strings whose size I don't know of in advance, though I know how many there are. I'm guessing I would still need a safe append in that case?\r\n\r\n\u00a0\r\n\r\n~~FWIW even if I add `ARROW_RETURN_NOT_OK(builder>ReserveData(1000));` right after the Reserve call in the above example I still run into the same error~~-"
        },
        {
            "created_at": "2022-01-03T16:05:38.438Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15228?focusedCommentId=17468078) by Antoine Pitrou (apitrou):*\nIf you want to use unsafe appends, then yes, you need to know an upper bound (and preferably a reasonable one if you don't want to overallocate too much). Otherwise, you should use normal appends (but even then, `Reserve` and `ReserveData` are useful to limit the number of resizes)."
        },
        {
            "created_at": "2022-01-03T16:06:23.423Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15228?focusedCommentId=17468079) by Antoine Pitrou (apitrou):*\nI'm closing this as a not a bug. Hopefully we'll have answered your concerns here!"
        }
    ]
}