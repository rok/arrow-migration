{
    "issue": {
        "title": "[R] segfault converting dictionary ChunkedArray with 0 chunks",
        "body": "***Note**: This issue was originally created as [ARROW-14321](https://issues.apache.org/jira/browse/ARROW-14321). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nIt appears to happen when one of the filter parts has no matching rows:\r\n\r\n```r\n\r\nlibrary(arrow)\r\nlibrary(dplyr)\r\nfirst_date <- lubridate::ymd_hms(\"2015-04-29 03:12:39\")\r\n\r\ndf1 <- tibble::tibble(\r\n  int = 1:10,\r\n  dbl = as.numeric(1:10),\r\n  lgl = rep(c(TRUE, FALSE, NA, TRUE, FALSE), 2),\r\n  chr = letters[1:10],\r\n  fct = factor(LETTERS[1:10]),\r\n  ts = first_date + lubridate::days(1:10)\r\n)\r\n\r\nds <- InMemoryDataset$create(df1)\r\n\r\n# works\r\nds %>% \r\n  filter(int < 8) %>%\r\n  arrange(dbl) %>%\r\n  collect()\r\n\r\n# segfaults\r\nds %>% \r\n  filter(int < 8, int > 55) %>%\r\n  arrange(dbl) %>%\r\n  collect()\r\n\r\n segfaults\r\nds %>% \r\n  filter(int < 0) %>%\r\n  arrange(dbl) %>%\r\n  collect()\r\n```",
        "created_at": "2021-10-14T15:37:49.000Z",
        "updated_at": "2021-10-20T22:39:31.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-10-16T17:04:15.000Z"
    },
    "comments": [
        {
            "created_at": "2021-10-14T17:59:27.066Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14321?focusedCommentId=17428946) by Neal Richardson (npr):*\nIt's the dictionary array. This does not segfault:\r\n\r\n```Java\n\r\nds %>% \r\n  select(-fct) %>%\r\n  filter(int < 0) %>%\r\n  arrange(dbl) %>%\r\n  collect()\r\n```"
        },
        {
            "created_at": "2021-10-14T20:13:09.449Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14321?focusedCommentId=17429000) by Neal Richardson (npr):*\nTurns out this is in the same family as ARROW-13761 and converting ChunkedArrays with 0 chunks to R. That was reported about timestamp type, and `[~westonpace]` added a test that covers most types, but apparently not dictionary. Adding dictionary type to the list reproduces the segfault:\r\n\r\n```Java\n\r\ndiff --git a/r/tests/testthat/test-chunked-array.R b/r/tests/testthat/test-chunked-array.R\r\nindex 3be65f88f..0fa9ab656 100644\r\n--- a/r/tests/testthat/test-chunked-array.R\r\n+++ b/r/tests/testthat/test-chunked-array.R\r\n@@ -206,7 +206,7 @@ test_that(\"ChunkedArray supports empty arrays (ARROW-13761)\", {\r\n     int8(), int16(), int32(), int64(), uint8(), uint16(), uint32(),\r\n     uint64(), float32(), float64(), timestamp(\"ns\"), binary(),\r\n     large_binary(), fixed_size_binary(32), date32(), date64(),\r\n-    decimal(4, 2)\r\n+    decimal(4, 2), dictionary()\r\n   )\r\n \r\n   empty_filter <- ChunkedArray$create(type = bool())\r\n```"
        },
        {
            "created_at": "2021-10-14T20:14:35.350Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14321?focusedCommentId=17429001) by Neal Richardson (npr):*\n`[~aocsa]` This relates to the OrderBySinkNode only in that the non-ordering sink node seems to return a ChunkedArray with 1 length-0 chunk, while ordered sink returns a ChunkedArray with 0 chunks."
        },
        {
            "created_at": "2021-10-16T17:04:15.748Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14321?focusedCommentId=17429588) by Ben Kietzman (bkietz):*\nIssue resolved by pull request 11428\n<https://github.com/apache/arrow/pull/11428>"
        }
    ]
}