{
    "issue": {
        "title": "[Python][R] Temporal floor/ceil/round for should accept frequency string",
        "body": "***Note**: This issue was originally created as [ARROW-15250](https://issues.apache.org/jira/browse/ARROW-15250). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nFollow up to ARROW-14822. More user-friendly rounding period input can be supported, e.g. 1D6H. See [Pandas to_offset](https://github.com/pandas-dev/pandas/blob/a6c1f6cccee6bbccfb29488a94664ed07db024d9/pandas/_libs/tslibs/offsets.pyx#L3575-L3679) and [lubridate's period](https://lubridate.tidyverse.org/reference/period.html).",
        "created_at": "2022-01-04T22:48:08.000Z",
        "updated_at": "2022-04-21T18:31:52.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-01-10T12:31:46.873Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15250?focusedCommentId=17471954) by Joris Van den Bossche (jorisvandenbossche):*\nI think there was also still some doubt on the PR about whether this is actually needed. The question is also how far we would do (eg lubridate seems to support both ISO8601 durations (https://en.wikipedia.org/wiki/ISO_8601#Durations) as more custom abbreviations). "
        },
        {
            "created_at": "2022-01-10T12:45:46.910Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15250?focusedCommentId=17471964) by Rok Mihevc (rokm):*\nThe one benefit from shorthands I see is if you want to do an interval of \"1D1s\" that's cleaner to write as unit=\"second\", multiple=86401 (==24h\\*60min\\*60s + 1s).\r\nI'm happy to mark this as Not A Problem and revisit later if users want it."
        },
        {
            "created_at": "2022-01-10T14:54:15.804Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15250?focusedCommentId=17472083) by Joris Van den Bossche (jorisvandenbossche):*\nOn the other hand, rounding by \"1 day and 1 second\" is also quite a rare use case, I think? In most common cases, the potential calculation into a `multiple` and `unit` will be quite straightforward."
        },
        {
            "created_at": "2022-01-10T16:03:24.488Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15250?focusedCommentId=17472122) by Rok Mihevc (rokm):*\nAnother benefit of having this is to be able to seamlessly replace lubridate/pandas.\r\nI would prefer not to include this feature, just being completist."
        },
        {
            "created_at": "2022-01-31T15:16:57.841Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15250?focusedCommentId=17484736) by Dewey Dunnington (paleolimbot):*\nI don't think this will be an issue from a lubridate completist standpoint, since it's hard to round to a period like the one mentioned here:\r\n\r\n```R\n\r\nlubridate::round_date(Sys.time(), unit = \"1M1S\")\r\n#> Error in parse_period_unit(unit): Cannot't parse heterogenuous or fractional units larger than one minute.\r\n```\r\n"
        },
        {
            "created_at": "2022-01-31T15:41:02.750Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-15250?focusedCommentId=17484745) by Rok Mihevc (rokm):*\nBut that's kind of arbitrary, see: https://github.com/tidyverse/lubridate/issues/661"
        }
    ]
}