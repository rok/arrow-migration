{
    "issue": {
        "title": "[C++] Optimize dictionary support in kernels/Support nulls in DictionaryUnifier",
        "body": "***Note**: This issue was originally created as [ARROW-14177](https://issues.apache.org/jira/browse/ARROW-14177). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nARROW-13358, ARROW-14167, ARROW-13573, etc. add support for dictionary types in various generic 'selection'-style kernels. However, the support is fairly unoptimized, repeatedly hashing and inserting the same values. Instead, we could implement more optimized support in some cases.\r\n\r\nFor example, for if_else, we could first unify both dictionaries (in such a way that the first dictionary is unchanged), then copy-with-transpose the indices of the second argument, then copy the relevant indices of the first argument (which doesn't require transposition). This would require DictionaryUnifier to support nulls in dictionaries, however.",
        "created_at": "2021-09-29T19:48:46.000Z",
        "updated_at": "2021-11-10T12:52:33.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": []
}