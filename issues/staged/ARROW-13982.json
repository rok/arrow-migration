{
    "issue": {
        "title": "[C++] Async scanner stalls if a fragment generates no batches",
        "body": "***Note**: This issue was originally created as [ARROW-13982](https://issues.apache.org/jira/browse/ARROW-13982). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nReading parquet files using dataset scanner may stall due to a never-finished future.\u00a0\r\n\r\nTo reproduce this case, one needs two parquet files and sets the filter expression to something that could filter one file completely.\u00a0 After that, calling `AsyncScanner::ToRecordBatchReader` and read data continually.\u00a0\r\n\r\nI also have dug this bug a little. It's caused by the `MakeEmptyGenerator<std::shared_ptr<RecordBatch>>` when filtered row groups is empty, which's ignored by `FragmentToBatches` and causes SequencingGenerator to stall.\r\n\r\nA quick fix is to return a record batch with 0 rows instead of returning a nullptr there.",
        "created_at": "2021-09-13T11:48:37.000Z",
        "updated_at": "2021-09-15T17:20:58.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-09-15T17:09:58.000Z"
    },
    "comments": [
        {
            "created_at": "2021-09-13T13:38:05.039Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13982?focusedCommentId=17414203) by David Li (lidavidm):*\nThanks for the bug report. I can confirm this affects both 5.0.0 and the current development version.\r\n\r\nQuick self-contained reproduction: [repro.py](repro.py)"
        },
        {
            "created_at": "2021-09-13T13:56:16.914Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13982?focusedCommentId=17414214) by David Li (lidavidm):*\nFrom digging around I don't think we can avoid sending an empty batch, given the pipeline doesn't really have any other way to carry information around. Unfortunately this will mean you might get the occasional empty batch, at least from the unordered scan (we could filter them out in the ordered scan if we really cared). This will also happen with empty CSV/Feather files (and presumably ORC as well)."
        },
        {
            "created_at": "2021-09-13T22:21:37.028Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13982?focusedCommentId=17414620) by Weston Pace (westonpace):*\nAt the moment I can't think of anything better than empty batches.  At the very least, it seems removal of empty batches is an optimization we can explore at some future date when the exec plan is more sophisticated."
        },
        {
            "created_at": "2021-09-15T17:09:58.550Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13982?focusedCommentId=17415643) by David Li (lidavidm):*\nIssue resolved by pull request 11145\n<https://github.com/apache/arrow/pull/11145>"
        }
    ]
}