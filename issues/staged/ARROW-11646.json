{
    "issue": {
        "title": "[Python] Allow to create BooleanArray from a list of 0 and 1",
        "body": "***Note**: This issue was originally created as [ARROW-11646](https://issues.apache.org/jira/browse/ARROW-11646). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nHi everyone !\r\nCurrently one can create a BooleanArray using these ways:\r\n\r\n```python\n\r\npa.array([False, True, True, False])\r\npa.array(np.array([0, 1, 1, 0]), type=pa.bool_())\r\npa.array([0, 1, 1, 0]).cast(pa.bool_())\r\n```\r\n\r\n\r\nBut creating it this way fails:\r\n\r\n```python\n\r\npa.array([0, 1, 1, 0], type=pa.bool_())\r\n```\r\n\r\n```Java\n\r\n---------------------------------------------------------------------------\r\nArrowInvalid                              Traceback (most recent call last)\r\n<ipython-input-2-e132766d7a68> in <module>\r\n----> 1 a = pa.array([0, 1, 1, 0], type=pa.bool_())\r\n\r\n~/.virtualenvs/hf-datasets/lib/python3.7/site-packages/pyarrow/array.pxi in pyarrow.lib.array()\r\n\r\n~/.virtualenvs/hf-datasets/lib/python3.7/site-packages/pyarrow/array.pxi in pyarrow.lib._sequence_to_array()\r\n\r\n~/.virtualenvs/hf-datasets/lib/python3.7/site-packages/pyarrow/error.pxi in pyarrow.lib.pyarrow_internal_check_status()\r\n\r\n~/.virtualenvs/hf-datasets/lib/python3.7/site-packages/pyarrow/error.pxi in pyarrow.lib.check_status()\r\n\r\nArrowInvalid: Could not convert 0 with type int: tried to convert to boolean\r\n```\r\n\r\nThanks in advance for the help",
        "created_at": "2021-02-16T17:41:52.000Z",
        "updated_at": "2021-02-24T13:02:29.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-02-24T13:02:29.253Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11646?focusedCommentId=17289905) by Joris Van den Bossche (jorisvandenbossche):*\n`[~lhoestq]` Thanks for the report. I agree it would be good to enable this as well for consistency."
        }
    ]
}