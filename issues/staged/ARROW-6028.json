{
    "issue": {
        "title": "[C++][Python] Failed to compile on windows platform using arrow",
        "body": "***Note**: This issue was originally created as [ARROW-6028](https://issues.apache.org/jira/browse/ARROW-6028). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI am writing a python extension and trying to compile c++ code and link against arrow library on windows platform. (Using visual studio 2017) and compilation failed. \r\n\r\n```text\n\r\nbuilding 'snowflake.connector.arrow_iterator' extension\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\bin\\HostX86\\x64\\cl.exe /c /nologo /Ox /W3 /GL /DNDEBUG /MD -Icpp/ArrowIterator/ -Ic:\\Users\\Haowei\\py36env\\lib\\site-packages\\pyarrow\\include -IC:\\Users\\Haowei\\AppData\\Local\\Programs\\Python\\Python36\\include -IC:\\Users\\Haowei\\AppData\\Local\\Programs\\Python\\Python36\\include \"-IC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\ATLMFC\\include\" \"-IC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\include\" \"-IC:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6.1\\include\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\ucrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\shared\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\winrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\cppwinrt\" /EHsc /Tpbuild\\cython\\arrow_iterator.cpp /Fobuild\\temp.win-amd64-3.6\\Release\\build\\cython\\arrow_iterator.obj -std=c++11\r\ncl : Command line warning D9002 : ignoring unknown option '-std=c++11'\r\narrow_iterator.cpp\r\nc:\\Users\\Haowei\\py36env\\lib\\site-packages\\pyarrow\\include\\arrow/type.h(852): error C2528: '__timezone': pointer to reference is illegal\r\nc:\\Users\\Haowei\\py36env\\lib\\site-packages\\pyarrow\\include\\arrow/type.h(859): error C2269: cannot create a pointer or reference to a qualified function type (requires pointer-to-member)\r\nc:\\Users\\Haowei\\py36env\\lib\\site-packages\\pyarrow\\include\\arrow/type.h(853): error C2664: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string(const std::basic_string<char,std::char_traits<char>,std::allocator<char>> &)': cannot convert argument 1 from 'const std::string *' to 'std::initializer_list<_Elem>'\r\n        with\r\n        [\r\n            _Elem=char\r\n        ]\r\nc:\\Users\\Haowei\\py36env\\lib\\site-packages\\pyarrow\\include\\arrow/type.h(852): note: No constructor could take the source type, or constructor overload resolution was ambiguous\r\nc:\\Users\\Haowei\\py36env\\lib\\site-packages\\pyarrow\\include\\arrow/type.h(859): error C2440: 'return': cannot convert from 'std::string' to 'const std::string *(__cdecl *)(void)'\r\nc:\\Users\\Haowei\\py36env\\lib\\site-packages\\pyarrow\\include\\arrow/type.h(859): note: No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called\r\nc:\\Users\\Haowei\\py36env\\lib\\site-packages\\pyarrow\\include\\arrow/type.h(1126): error C2528: '__timezone': pointer to reference is illegal\r\nerror: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2017\\\\Community\\\\VC\\\\Tools\\\\MSVC\\\\14.16.27023\\\\bin\\\\HostX86\\\\x64\\\\cl.exe' failed with exit status 2\r\n```\r\n\r\nI googled a little bit and found similar issue in feather repo. https://github.com/wesm/feather/issues/111\r\n\r\nSo I did something similar to their fix:\r\nAdding following code to the type.h header file (according to https://github.com/wesm/feather/pull/146/files)\r\n```c++\n\r\n#if _MSC_VER >= 1900\r\n  #undef timezone\r\n#endif\r\n```\r\n\r\nNot sure if this is the right way to fix it. If yes, I can submit a PR.\r\n\r\n\r\n",
        "created_at": "2019-07-24T18:09:28.000Z",
        "updated_at": "2019-07-26T17:18:08.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-07-26T17:18:08.000Z"
    },
    "comments": [
        {
            "created_at": "2019-07-25T14:21:36.028Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6028?focusedCommentId=16892797) by Wes McKinney (wesm):*\nSee https://github.com/apache/arrow/blob/master/cpp/src/arrow/python/platform.h#L27\r\n\r\nI think either you need to use our header files such as \"arrow/python/api.h\" or include such compatibility fixes in your headers"
        },
        {
            "created_at": "2019-07-25T14:24:04.585Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6028?focusedCommentId=16892802) by Antoine Pitrou (apitrou):*\nAgreed with Wes. Also note this was fixed upstream (in Python): https://bugs.python.org/issue24643"
        },
        {
            "created_at": "2019-07-26T17:17:53.775Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-6028?focusedCommentId=16894001) by Haowei Yu (howryu):*\n`[~wesmckinn]` Thanks for your advice. After adding include to platform.h, problems go away."
        }
    ]
}