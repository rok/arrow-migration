{
    "issue": {
        "title": "[C++] Add StrptimeOptions defaults",
        "body": "***Note**: This issue was originally created as [ARROW-12809](https://issues.apache.org/jira/browse/ARROW-12809). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nPer https://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/kernels/scalar_string.cc#L1744 there are no default options for strptime (format, unit). But the TimestampType constructor has a default unit of milliseconds (https://github.com/apache/arrow/blob/master/cpp/src/arrow/type.h#L1236), and a reasonable default for `format` would be ISO8601. \r\n\r\ncc `[~bkietz]` `[~wesm]` for opinions as the authors of this code (according to `git blame`)",
        "created_at": "2021-05-17T16:58:39.000Z",
        "updated_at": "2021-06-10T14:51:45.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-06-10T14:51:45.000Z"
    },
    "comments": [
        {
            "created_at": "2021-06-10T14:51:35.742Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12809?focusedCommentId=17360987) by Antoine Pitrou (apitrou):*\nWell, you just need to cast from string to timestamp if you have ISO-formatted timestamps. It's more flexible than strptime-based parsing too:\r\n```python\n\r\n>>> arr = pa.array(['1999-01-28', '1971-03-05 01:00:00', '2001-12-02 12:34:56.123456'])\r\n>>> arr.cast(pa.timestamp('ns'))\r\n<pyarrow.lib.TimestampArray object at 0x7f8e5a1526e0>\r\n[\r\n  1999-01-28 00:00:00.000000000,\r\n  1971-03-05 01:00:00.000000000,\r\n  2001-12-02 12:34:56.123456000\r\n]\r\n```\r\n"
        }
    ]
}