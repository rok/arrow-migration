{
    "issue": {
        "title": "[R] build_expr() should check that non-expression inputs have vec_size() == 1L",
        "body": "***Note**: This issue was originally created as [ARROW-14855](https://issues.apache.org/jira/browse/ARROW-14855). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhat I\u2019m trying to do is error to prevent code like this from working (since row order isn\u2019t guaranteed in Arrow but is in R): \r\n\r\n```R\n\r\n# remotes::install_github(\"apache/arrow/r#11690\")\r\nlibrary(arrow, warn.conflicts = FALSE)\r\nlibrary(dplyr, warn.conflicts = FALSE)\r\n\r\nrecord_batch(a = c(\"something1\", \"something2\")) %>% \r\n  mutate(df_col = data.frame(a, b = c(\"other1\", \"other2\")))\r\n#> InMemoryDataset (query)\r\n#> a: string\r\n#> df_col: struct<a: string, b: list<item: string>> ({a=a, b=...})\r\n#> \r\n#> See $.data for the source Arrow object\r\n\r\ntibble(a = c(\"something1\", \"something2\")) %>% \r\n  mutate(df_col = data.frame(a, b = c(\"other1\", \"other2\"))) %>% \r\n  arrow:::arrow_dplyr_query()\r\n#> InMemoryDataset (query)\r\n#> a: string\r\n#> df_col: struct<a: string, b: string>\r\n#> \r\n#> See $.data for the source Arrow object\r\n```\r\n\r\n\r\nThis shows up elsewhere too with a confusing error: \r\n\r\n```R\n\r\nrecord_batch(a = 1:2) %>% mutate(a + 3:4)\r\n#> Error: NotImplemented: Function add_checked has no kernel matching input types (array[int32], scalar[list<item: int32>])\r\n#> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/compute/exec/expression.cc:340  call.function->DispatchBest(&descrs)\r\n```\r\n\r\n\r\nI think we need slightly different rules than `Scalar$create()` uses when interpreting user expressions, since we want to error rather than wrap values that aren\u2019t `vctrs::vec_size() != 1` in `list()` (thus changing the type that the user specified). \r\nRelevant section of `build_expr()`: <https://github.com/apache/arrow/blob/4b1135ccfd3075a175667c38dc6326865288caf6/r/R/expression.R#L204-L209> \r\nRelevant section of `Scalar$create()`: <https://github.com/apache/arrow/blob/4b1135ccfd3075a175667c38dc6326865288caf6/r/R/scalar.R#L75-L83>\r\n",
        "created_at": "2021-11-24T17:37:12.000Z",
        "updated_at": "2022-10-18T17:51:27.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2022-10-18T17:51:27.771Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14855?focusedCommentId=17619718) by Apache Arrow JIRA Bot (arrowjira):*\nThis issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned per [project policy](https://arrow.apache.org/docs/dev/developers/bug_reports.html#issue-assignment). Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon."
        }
    ]
}