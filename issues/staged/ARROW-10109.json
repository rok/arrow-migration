{
    "issue": {
        "title": "[Rust] Add support to produce a C Data interface",
        "body": "***Note**: This issue was originally created as [ARROW-10109](https://issues.apache.org/jira/browse/ARROW-10109). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe goal of this issue is to support producing C Data arrays of Rust.\r\n\r\nThe use-case that motivated this issue was the possibility of running DataFusion from Python and support moving arrays from DataFusion to Python/Pyarray and vice-versa.\r\n\r\nIn particular, so that users can write Python UDFs that expect arrow arrays and return arrow arrays, in the same spirit as pandas-udfs in Spark work for Pandas.\r\n\r\nThe brute-force way of writing these arrays is by converting element by element from and to native types. The efficient way of doing it to pass the memory address from and to each implementation, which is zero-copy.\r\n\r\nTo support the latter, we need an FFI implementation in Rust that produces and consumes [C's Data interface](https://arrow.apache.org/docs/format/CDataInterface.html)",
        "created_at": "2020-09-27T14:26:06.000Z",
        "updated_at": "2020-12-06T03:59:21.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-12-05T08:05:15.000Z"
    },
    "comments": [
        {
            "created_at": "2020-12-05T08:05:15.482Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10109?focusedCommentId=17244435) by Jorge Leit\u00e3o (jorgecarleitao):*\nIssue resolved by pull request 8401\n<https://github.com/apache/arrow/pull/8401>"
        }
    ]
}