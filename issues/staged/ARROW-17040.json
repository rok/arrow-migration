{
    "issue": {
        "title": "[Go] Add a new StructBuilder constructor to support some specific use cases ",
        "body": "***Note**: This issue was originally created as [ARROW-17040](https://issues.apache.org/jira/browse/ARROW-17040). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently, the `NewStructBuilder` constructor takes a struct data type and creates the constructor hierarchy itself. While interesting in most cases, this approach is not easy to integrate with some libraries.\r\n\r\nThis PR introduces a new constructor `UnsafeNewStructBuilderFromFields`. `UnsafeNewStructBuilderFromFields` returns a builder, using the provided memory allocator, the corresponding initialized fields and constructors. This method is unsafe because the caller must ensure that the fields and constructors are compatible and that the builders have the same length.\u00a0\r\n\r\nUse case: Can be used by libraries that implement their own Arrow builders tree and ensure the validation of fields and builders by themselves.\r\n\r\nSee PR: <https://github.com/apache/arrow/pull/13574>\u00a0",
        "created_at": "2022-07-11T15:20:43.000Z",
        "updated_at": "2022-07-25T17:20:49.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Go",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2022-07-25T17:20:49.000Z"
    },
    "comments": [
        {
            "created_at": "2022-07-25T17:20:49.843Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-17040?focusedCommentId=17571015) by Matthew Topol (zeroshade):*\nNormal workaround by building columns for the struct in place works fine for the reporter."
        }
    ]
}