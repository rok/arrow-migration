{
    "issue": {
        "title": "[FlightRPC][Java] Clean up DoPut/FlightStream memory handling",
        "body": "***Note**: This issue was originally created as [ARROW-9587](https://issues.apache.org/jira/browse/ARROW-9587). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWe've been running into issues with DoPut in Java. In particular:\r\n \\* Closing a FlightStream without draining it should not send a cancellation to the other side (or should send the cancellation, but also drain the queue). A server will have sent an explicit error message, or will simply just not want to read the entire stream. A client should explicitly cancel/gRPC will cancel for you anyways when\u00a0 you end the call. Also, the gRPC call may already have ended and cancelling the call may result in a runtime exception.\r\n \\* Cancelling a FlightStream explicitly should not immediately mark the stream as completed - it should wait for gRPC to acknowledge the cancellation as there may be undelivered messages.\r\n \\* Make sure there is no race between the gRPC observer in the FlightStream and the consumer. (Ideally the only way for a FlightStream to end is for the observer to end the stream; that does open us up to the possibility of a FlightStream being stuck forever for servers that do not respect cancellation.)\r\n \\* The server should close/clean up things properly in DoPut (it should act like DoExchange and tie closing of the stream to the onCompleted/onError callbacks). Otherwise trying to use it with ARROW-9586 becomes impossible (you need to close the FlightStream before ending the call, or you'll close the per-call allocator before you close the FlightStream)\r\n\r\nI think this also ties into flakiness in unit tests.",
        "created_at": "2020-07-28T17:48:48.000Z",
        "updated_at": "2020-09-15T17:56:21.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: FlightRPC",
            "Component: Java",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-09-15T17:56:04.000Z"
    },
    "comments": [
        {
            "created_at": "2020-08-04T13:49:20.402Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9587?focusedCommentId=17170806) by David Li (lidavidm):*\nAnother problem this causes is a spurious IllegalStateException from gRPC if a DoPut sends an error - that ends the gRPC call, but then when Flight closes the FlightStream, the FlightStream tries to cancel the call, resulting in a double-close of the gRPC call."
        },
        {
            "created_at": "2020-09-15T17:56:04.822Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-9587?focusedCommentId=17196443) by David Li (lidavidm):*\nIssue resolved by pull request 8010\n<https://github.com/apache/arrow/pull/8010>"
        }
    ]
}