{
    "issue": {
        "title": "[C++][Python] Revisit compute functions names",
        "body": "***Note**: This issue was originally created as [ARROW-13359](https://issues.apache.org/jira/browse/ARROW-13359). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCompute function's naming convention should be \"standardized\" for the C++ API and the **CallFunction** string name. There are inconsistencies between the name used and its form (short vs. long form). This is not a trivial task because existing software tools/languages (SQL, numpy, R, C++, etc.) use different function names.",
        "created_at": "2021-07-16T15:41:54.000Z",
        "updated_at": "2022-07-04T17:41:30.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Documentation",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-07-16T15:47:26.409Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13359?focusedCommentId=17382158) by Eduardo Ponce (edponce):*\nWhat are the tools/languages that Arrow wants to conform to the most? If there is an answer to this question, then we can come up with a priority-driven naming convention based on the conformance to such tools.\r\n\r\nFor example, if function exists in SQL, then use the SQL form. If function does not exists in SQL, then use numpy's form. Etc. etc."
        }
    ]
}