{
    "issue": {
        "title": "[Rust][DataFusion] Implement ExprRewriter to avoid tree traversal redundancy",
        "body": "***Note**: This issue was originally created as [ARROW-11710](https://issues.apache.org/jira/browse/ARROW-11710). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n\r\nThe idea is to\r\n1. Reduce the amount repetitions in optimizer rules to make them easier to implement\r\n\r\n2. Reduce the amount of repetition to make it easier to see the actual logic (rather than having it intertwined with the code needed to do recursion)\r\n\r\n2. Set the stage for a more general `PlanRewriter` that doesn't have  to clone its input, and  can modify take their input by value and consume them\r\n\r\nPlan is to make an ExprRewriter, the mutable counterpart to `ExpressionVisitor` and demonstrates its usefulness by rewriting several expression transformation rewrite passes using it.",
        "created_at": "2021-02-20T10:46:49.000Z",
        "updated_at": "2021-02-26T19:53:58.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust - DataFusion",
            "Type: task"
        ],
        "closed": true,
        "closed_at": "2021-02-26T19:53:55.000Z"
    },
    "comments": [
        {
            "created_at": "2021-02-26T19:53:55.629Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11710?focusedCommentId=17291900) by Andrew Lamb (alamb):*\nIssue resolved by pull request 9545\n<https://github.com/apache/arrow/pull/9545>"
        }
    ]
}