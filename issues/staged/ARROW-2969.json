{
    "issue": {
        "title": "[R] Convert between StructArray and \"nested\" data.frame column containing data frame in each cell",
        "body": "***Note**: This issue was originally created as [ARROW-2969](https://issues.apache.org/jira/browse/ARROW-2969). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThese are starting to be more widely used with the tidyr package and elsewhere cc `[~hadley]`",
        "created_at": "2018-08-03T10:29:25.000Z",
        "updated_at": "2019-06-24T07:07:07.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-06-24T07:07:07.000Z"
    },
    "comments": [
        {
            "created_at": "2018-08-06T13:48:56.054Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2969?focusedCommentId=16570223) by Zach Christensen (zchristensen):*\nUpon implementation would this be essentially the same as an array/tensor or more like a nested tibble? It would be really helpful to have multidimensional arrow formats bound to R that can be easily passed to other languages. I'm specifically thinking of imaging data but I'm sure it could be generalized to a lot of other situations."
        },
        {
            "created_at": "2018-08-06T23:34:12.301Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2969?focusedCommentId=16570920) by Wes McKinney (wesm):*\nNested tibble. So a column would have a List-of-Struct type, where each value in the column is a mini data frame"
        },
        {
            "created_at": "2018-10-25T19:48:24.880Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2969?focusedCommentId=16664222) by Javier Luraschi (javierluraschi):*\nIn Spark, it is pretty common to end up with structures like:\r\n```java\n\r\njsonlite::fromJSON('[{\"city\" : \"Zurich\", \"languages\": [\"English\", \"German\"]}, {\"city\" : \"Seattle\", \"languages\": \"English\"}]') %>% as_tibble()\r\n\r\n# A tibble: 2 x 2\r\n   city   languages\r\n * <chr>  <list>\r\n 1 Zurich <chr [2]>\r\n 2 Seattle <chr [1]>\r\n```\r\nOr,\r\n```java\n\r\njsonlite::fromJSON('[{\"city\" : \"Zurich\", \"languages\": [\"English\", {\"other\": \"German\"}]}, {\"city\" : \"Seattle\", \"languages\": [\"English\", {\"other\": \"Spanish\"}]}]') %>% as_tibble()\r\n\r\n# A tibble: 2 x 2\r\n   city    languages\r\n * <chr>   <list>\r\n 1 Zurich  <list [2]>\r\n 2 Seattle <list [2]>\r\n```\r\nData frames with nested data frames are not that common in Spark."
        },
        {
            "created_at": "2018-10-26T10:27:49.265Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2969?focusedCommentId=16664993) by Wes McKinney (wesm):*\nHaving inner cells as lists seems like a reasonable start to me"
        },
        {
            "created_at": "2018-12-07T15:50:40.491Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2969?focusedCommentId=16713007) by Romain Francois (romainfrancois):*\nI need to understand how the data of a structarray is organised in arrow memory, this might rather be a data frame column rather than a a nested data frame. "
        },
        {
            "created_at": "2018-12-07T17:16:49.509Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2969?focusedCommentId=16713108) by Wes McKinney (wesm):*\nThe fields of a StructArray are independent arrays. The only additional memory is a validity bitmap to indicate whether a struct \"slot\" is null or not"
        },
        {
            "created_at": "2019-01-03T12:51:39.476Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2969?focusedCommentId=16732998) by Romain Francois (romainfrancois):*\nIn that case, I think what makes the most sense is a data frame column. We don't have too many tools to work with those yet though, but we can produce them. "
        }
    ]
}