{
    "issue": {
        "title": "[Python] slicing logic defective",
        "body": "***Note**: This issue was originally created as [ARROW-2288](https://issues.apache.org/jira/browse/ARROW-2288). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe slicing logic tends to go too far when normalizing large negative bounds, which leads to results not in line with Python's slicing semantics:\r\n```Java\n\r\n>>> arr = pa.array([1,2,3,4])\r\n>>> arr[-99:100]\r\n<pyarrow.lib.Int64Array object at 0x7f550813a318>\r\n[\r\n  2,\r\n  3,\r\n  4\r\n]\r\n>>> arr.to_pylist()[-99:100]\r\n[1, 2, 3, 4]\r\n>>> \r\n>>> \r\n>>> arr[-6:-5]\r\n<pyarrow.lib.Int64Array object at 0x7f54cd76a908>\r\n[\r\n  3\r\n]\r\n>>> arr.to_pylist()[-6:-5]\r\n[]\r\n```\r\nAlso note this crash:\r\n```Java\n\r\n>>> arr[10:13]\r\n/home/antoine/arrow/cpp/src/arrow/array.cc:105 Check failed: (offset) <= (data.length) \r\nAbandon (core dumped)\r\n```",
        "created_at": "2018-03-08T10:37:01.000Z",
        "updated_at": "2018-03-09T20:04:53.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2018-03-09T20:04:53.000Z"
    },
    "comments": [
        {
            "created_at": "2018-03-08T10:41:04.119Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2288?focusedCommentId=16391052) by Antoine Pitrou (apitrou):*\nAs for the crash: since `Array::Slice` adjusts the length when too large, it would make sense for it to also adjust the offset instead of crashing, IMO."
        },
        {
            "created_at": "2018-03-09T20:04:53.931Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2288?focusedCommentId=16393465) by Wes McKinney (wesm):*\nIssue resolved by pull request 1723\n<https://github.com/apache/arrow/pull/1723>"
        }
    ]
}