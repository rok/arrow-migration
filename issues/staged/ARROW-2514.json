{
    "issue": {
        "title": "[Python] Inferring / converting nested Numpy array is very slow",
        "body": "***Note**: This issue was originally created as [ARROW-2514](https://issues.apache.org/jira/browse/ARROW-2514). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nConverting a nested Numpy array nested walks over the Numpy data as Python objects, even if the dtype is not \"object\". This makes it pointlessly slow compared to the non-nested case, and even the nested Python list case:\r\n\r\n```python\n\r\n>>> %%timeit data = list(range(10000))\r\n...:pa.array(data)\r\n...:\r\n746 \u00b5s \u00b1 8.36 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1000 loops each)\r\n>>> %%timeit data = np.arange(10000)\r\n...:pa.array(data)\r\n...:\r\n81.1 \u00b5s \u00b1 57.7 ns per loop (mean \u00b1 std. dev. of 7 runs, 10000 loops each)\r\n>>> %%timeit data = [np.arange(10000)]\r\n...:pa.array(data)\r\n...:\r\n3.39 ms \u00b1 6.27 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 100 loops each)\r\n```",
        "created_at": "2018-04-26T15:30:31.000Z",
        "updated_at": "2018-07-23T19:09:37.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2018-07-23T19:07:53.000Z"
    },
    "comments": [
        {
            "created_at": "2018-07-23T19:07:53.808Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2514?focusedCommentId=16553276) by Wes McKinney (wesm):*\nIssue resolved by pull request 2308\n<https://github.com/apache/arrow/pull/2308>"
        }
    ]
}