{
    "issue": {
        "title": "[C++] Compiler error on LocalFileSystem::OpenOutputStream \"'arrow::internal::launder': ambiguous call to overloaded function\"",
        "body": "***Note**: This issue was originally created as [ARROW-14800](https://issues.apache.org/jira/browse/ARROW-14800). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nHi, I'm trying to upgrade to arrow-cpp 6.0 and I have some code which compiles with 5.0.0:\r\n```java\n\r\ninline void write_table(const std::shared_ptr<arrow::Table>& table, const std::string& file)\r\n{\r\n\u00a0 \u00a0 auto arrow_fs_ = arrow::fs::LocalFileSystem();\r\n\u00a0 \u00a0 std::string corrected_path = value_or_throw(arrow_fs_.NormalizePath(file));\r\n\u00a0 \u00a0 auto stream_opt = arrow_fs_.OpenOutputStream(corrected_path);\r\n\u00a0 \u00a0 auto status = arrow::ipc::feather::WriteTable(*table, value_or_throw(stream_opt).get());\r\n\u00a0 \u00a0 ALCC_ARROW_STATUS_CHECK(status);\r\n}\n```\r\n\u00a0\r\n\r\nThe following line is the root of the compile stack trace\r\n\r\n\u00a0\r\n```java\n\r\nauto stream_opt = arrow_fs_.OpenOutputStream(corrected_path);\n```\r\n\u00a0\r\n\r\nIt gives me the following error:\r\n```java\n\r\n\u00a0\r\nC:\\Users\\anders.wind\\Miniconda3\\envs\\quant_env_r20211123_1359_841f2c7e\\Library\\include\\arrow/util/aligned_storage.h(36,1): error C2668: 'arrow::internal::launder': ambiguous call to overloaded function [C:\\Users\\anders.wind\\Documents\\0.Projects\\AlipesQuant\\alcc\\build\\market_data\\marke\r\nt_data.vcxproj]\r\nC:\\Users\\anders.wind\\Miniconda3\\envs\\quant_env_r20211123_1359_841f2c7e\\Library\\include\\arrow/util/launder.h(29,14): message : could be 'T *arrow::internal::launder<T>(T *) noexcept' [C:\\Users\\anders.wind\\Documents\\0.Projects\\AlipesQuant\\alcc\\build\\market_data\\market_data.vcxproj] \u00a0 \u00a0 \u00a0\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 with\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 [\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 T=std::shared_ptr<arrow::io::OutputStream>\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Tools\\MSVC\\14.29.30133\\include\\new(33,27): message : or \u00a0 \u00a0 \u00a0 '_Ty *std::launder<T>(_Ty *) noexcept' [found using argument-dependent lookup] [C:\\Users\\anders.wind\\Documents\\0.Projects\\AlipesQuant\\alcc\\build\\market_data\\m\u00a0\r\narket_data.vcxproj]\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 with\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 [\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 _Ty=std::shared_ptr<arrow::io::OutputStream>,\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 T=std::shared_ptr<arrow::io::OutputStream>\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\r\nC:\\Users\\anders.wind\\Miniconda3\\envs\\quant_env_r20211123_1359_841f2c7e\\Library\\include\\arrow/util/aligned_storage.h(36,1): message : while trying to match the argument list '(T *)' [C:\\Users\\anders.wind\\Documents\\0.Projects\\AlipesQuant\\alcc\\build\\market_data\\market_data.vcxproj] \u00a0 \u00a0 \u00a0\u00a0\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 with\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 [\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 T=std::shared_ptr<arrow::io::OutputStream>\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\r\nC:\\Users\\anders.wind\\Miniconda3\\envs\\quant_env_r20211123_1359_841f2c7e\\Library\\include\\arrow/util/aligned_storage.h(36): message : while compiling class template member function 'T *arrow::internal::AlignedStorage<T>::get(void) noexcept' [C:\\Users\\anders.wind\\Documents\\0.Projects\\Alip\u00a0\r\nesQuant\\alcc\\build\\market_data\\market_data.vcxproj]\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 with\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 [\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 T=std::shared_ptr<arrow::io::OutputStream>\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\r\nC:\\Users\\anders.wind\\Miniconda3\\envs\\quant_env_r20211123_1359_841f2c7e\\Library\\include\\arrow/result.h(424): message : see reference to function template instantiation 'T *arrow::internal::AlignedStorage<T>::get(void) noexcept' being compiled [C:\\Users\\anders.wind\\Documents\\0.Projects\\\u00a0\r\nAlipesQuant\\alcc\\build\\market_data\\market_data.vcxproj]\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 with\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 [\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 T=std::shared_ptr<arrow::io::OutputStream>\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\r\nC:\\Users\\anders.wind\\Miniconda3\\envs\\quant_env_r20211123_1359_841f2c7e\\Library\\include\\arrow/result.h(435): message : see reference to class template instantiation 'arrow::internal::AlignedStorage<T>' being compiled [C:\\Users\\anders.wind\\Documents\\0.Projects\\AlipesQuant\\alcc\\build\\mar\u00a0\r\nket_data\\market_data.vcxproj]\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 with\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 [\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 T=std::shared_ptr<arrow::io::OutputStream>\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\r\nC:\\Users\\anders.wind\\Documents\\0.Projects\\AlipesQuant\\alcc\\astl\\include\\astl/arrow_helpers.h(86): message : see reference to class template instantiation 'arrow::Result<std::shared_ptr<arrow::io::OutputStream>>' being compiled [C:\\Users\\anders.wind\\Documents\\0.Projects\\AlipesQuant\\alc\u00a0\r\nc\\build\\market_data\\market_data.vcxproj]\r\nC:\\Users\\anders.wind\\Miniconda3\\envs\\quant_env_r20211123_1359_841f2c7e\\Library\\include\\arrow/util/aligned_storage.h(36,1): error C2668: 'arrow::internal::launder': ambiguous call to overloaded function [C:\\Users\\anders.wind\\Documents\\0.Projects\\AlipesQuant\\alcc\\build\\simulation\\simula\r\nte.vcxproj]\r\nC:\\Users\\anders.wind\\Miniconda3\\envs\\quant_env_r20211123_1359_841f2c7e\\Library\\include\\arrow/util/launder.h(29,14): message : could be 'T *arrow::internal::launder<T>(T *) noexcept' [C:\\Users\\anders.wind\\Documents\\0.Projects\\AlipesQuant\\alcc\\build\\simulation\\simulate.vcxproj]\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 with\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 [\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 T=std::shared_ptr<arrow::io::OutputStream>\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Tools\\MSVC\\14.29.30133\\include\\new(33,27): message : or \u00a0 \u00a0 \u00a0 '_Ty *std::launder<T>(_Ty *) noexcept' [found using argument-dependent lookup] [C:\\Users\\anders.wind\\Documents\\0.Projects\\AlipesQuant\\alcc\\build\\simulation\\si\u00a0\r\nmulate.vcxproj]\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 with\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 [\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 _Ty=std::shared_ptr<arrow::io::OutputStream>,\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 T=std::shared_ptr<arrow::io::OutputStream>\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\r\nC:\\Users\\anders.wind\\Miniconda3\\envs\\quant_env_r20211123_1359_841f2c7e\\Library\\include\\arrow/util/aligned_storage.h(36,1): message : while trying to match the argument list '(T *)' [C:\\Users\\anders.wind\\Documents\\0.Projects\\AlipesQuant\\alcc\\build\\simulation\\simulate.vcxproj]\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 with\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 [\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 T=std::shared_ptr<arrow::io::OutputStream>\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\r\nC:\\Users\\anders.wind\\Miniconda3\\envs\\quant_env_r20211123_1359_841f2c7e\\Library\\include\\arrow/util/aligned_storage.h(36): message : while compiling class template member function 'T *arrow::internal::AlignedStorage<T>::get(void) noexcept' [C:\\Users\\anders.wind\\Documents\\0.Projects\\Alip\u00a0\r\nesQuant\\alcc\\build\\simulation\\simulate.vcxproj]\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 with\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 [\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 T=std::shared_ptr<arrow::io::OutputStream>\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\r\nC:\\Users\\anders.wind\\Miniconda3\\envs\\quant_env_r20211123_1359_841f2c7e\\Library\\include\\arrow/result.h(424): message : see reference to function template instantiation 'T *arrow::internal::AlignedStorage<T>::get(void) noexcept' being compiled [C:\\Users\\anders.wind\\Documents\\0.Projects\\\u00a0\r\nAlipesQuant\\alcc\\build\\simulation\\simulate.vcxproj]\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 with\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 [\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 T=std::shared_ptr<arrow::io::OutputStream>\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\r\nC:\\Users\\anders.wind\\Miniconda3\\envs\\quant_env_r20211123_1359_841f2c7e\\Library\\include\\arrow/result.h(435): message : see reference to class template instantiation 'arrow::internal::AlignedStorage<T>' being compiled [C:\\Users\\anders.wind\\Documents\\0.Projects\\AlipesQuant\\alcc\\build\\sim\u00a0\r\nulation\\simulate.vcxproj]\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 with\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 [\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 T=std::shared_ptr<arrow::io::OutputStream>\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ]\r\nC:\\Users\\anders.wind\\Documents\\0.Projects\\AlipesQuant\\alcc\\astl\\include\\astl/arrow_helpers.h(86): message : see reference to class template instantiation 'arrow::Result<std::shared_ptr<arrow::io::OutputStream>>' being compiled [C:\\Users\\anders.wind\\Documents\\0.Projects\\AlipesQuant\\alc\u00a0\r\nc\\build\\simulation\\simulate.vcxproj]\r\n\r\n\r\n```\r\n`I compile with c++17 flags`",
        "created_at": "2021-11-23T16:17:01.000Z",
        "updated_at": "2021-12-02T09:36:30.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-12-01T18:23:52.000Z"
    },
    "comments": [
        {
            "created_at": "2021-11-24T17:39:32.440Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14800?focusedCommentId=17448746) by Antoine Pitrou (apitrou):*\nCan I ask that you try to apply the following patch to the Arrow include files?\r\nhttps://gist.github.com/pitrou/f3fee9c36048dad7d92779612748de2b"
        },
        {
            "created_at": "2021-11-24T17:56:19.491Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14800?focusedCommentId=17448757) by Anders Wind (Awia):*\nYes, I'll do it tomorrow when I'm back at work. Thanks for the quick response!"
        },
        {
            "created_at": "2021-11-25T16:22:26.117Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14800?focusedCommentId=17449252) by Anders Wind (Awia):*\nThat did the trick!"
        },
        {
            "created_at": "2021-11-25T16:22:58.653Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14800?focusedCommentId=17449253) by Anders Wind (Awia):*\nAny chance of a 6.0.2 release with this?"
        },
        {
            "created_at": "2021-11-30T13:05:45.934Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14800?focusedCommentId=17451114) by Antoine Pitrou (apitrou):*\nI'm not sure we're going to do a 6.0.2 at some point. For now I'm tagging with 7.0.0."
        },
        {
            "created_at": "2021-12-01T18:23:52.079Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14800?focusedCommentId=17451955) by Krisztian Szucs (kszucs):*\nIssue resolved by pull request 11806\n<https://github.com/apache/arrow/pull/11806>"
        },
        {
            "created_at": "2021-12-01T19:31:57.932Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-14800?focusedCommentId=17451994) by Anders Wind (Awia):*\nThats a shame - will have to wait for 7.0.0 for us to upgrade then."
        }
    ]
}