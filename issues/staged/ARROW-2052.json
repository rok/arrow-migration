{
    "issue": {
        "title": "Unify OwnedRef and ScopedRef",
        "body": "***Note**: This issue was originally created as [ARROW-2052](https://issues.apache.org/jira/browse/ARROW-2052). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently `OwnedRef` and `ScopedRef` have similar semantics with small differences. Furtheremore, the naming distinction isn't obvious.\r\n\r\nI propose to unify them as a single `OwnedRef` class with the following characteristics:\r\n- doesn't take the GIL automatically\n- has a `release()` method that decrefs the pointer (and sets the internal copy to NULL) before returning it\n- has a `detach()` method that returns the pointer (and sets the internal copy to NULL) without decrefing it\n  \n  For the rare situations where an `OwnedRef` may be destroyed with the GIL released, a `OwnedRefNoGIL` derived class would also be proposed (the naming scheme follows Cython here).\n  \n  Opinions / comments?",
        "created_at": "2018-01-29T18:22:27.000Z",
        "updated_at": "2018-02-02T05:07:24.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: task"
        ],
        "closed": true,
        "closed_at": "2018-02-02T05:07:21.000Z"
    },
    "comments": [
        {
            "created_at": "2018-01-29T21:42:57.135Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2052?focusedCommentId=16344064) by Antoine Pitrou (apitrou):*\nOther remark : the `release()` method on C++ smart pointers don't decrement the underlying reference count, so deviating from that may be confusing."
        },
        {
            "created_at": "2018-01-30T04:17:38.382Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2052?focusedCommentId=16344477) by Wes McKinney (wesm):*\nSounds good to me. Acquiring the GIL in the destructor of `OwnedRef` seemed a bit unclean to me, so I think it would be better to be explicit about holding the GIL externally whenever a managed reference may go out of scope. "
        },
        {
            "created_at": "2018-02-02T05:07:21.605Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2052?focusedCommentId=16349797) by Wes McKinney (wesm):*\nIssue resolved by pull request 1534\n<https://github.com/apache/arrow/pull/1534>"
        }
    ]
}