{
    "issue": {
        "title": "[Format] Flight Location should be more flexible than a (host, port) pair",
        "body": "***Note**: This issue was originally created as [ARROW-4651](https://issues.apache.org/jira/browse/ARROW-4651). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe more future-proof solution is probably to define a URI format. gRPC already has something like that, though we might want to define our own format:\r\nhttps://grpc.io/grpc/cpp/md_doc_naming.html\r\n",
        "created_at": "2019-02-21T16:16:47.000Z",
        "updated_at": "2019-05-22T19:16:52.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: FlightRPC",
            "Component: Format",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-05-22T18:02:08.000Z"
    },
    "comments": [
        {
            "created_at": "2019-02-21T16:28:07.437Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4651?focusedCommentId=16774267) by Antoine Pitrou (apitrou):*\n`[~wesmckinn]` [~jacques@dremio.com] Comments?"
        },
        {
            "created_at": "2019-02-21T16:48:11.710Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4651?focusedCommentId=16774301) by Jacques Nadeau (jnadeau):*\nGenerally, I think\u00a0it is best to avoid adding stuff that we \"might\" use. I'd also like us to introduce features with reference implementations. Are there specific features someone is building that are blocked by this?"
        },
        {
            "created_at": "2019-02-21T16:52:46.785Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4651?focusedCommentId=16774308) by Antoine Pitrou (apitrou):*\nIn this case, I was benchmarking Flight over a Unix connection (it's supported by gRPC).\r\n\r\nIn any case, (host, port) is inflexible, and it's baked in the protocol, which is more delicate to change than an API."
        },
        {
            "created_at": "2019-02-21T17:09:23.754Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4651?focusedCommentId=16774323) by Jacques Nadeau (jnadeau):*\nInflexible and\u00a0opinionated can be good when defining a format. Flexibility means that implementations don't work with each other. (There are several places where we already have that problem across our bindings :(.)\r\n\r\nI'm all for adding flexibility\u00a0for real things we want to support assuming as part of that we're including support for those items in at least the C++ and Java libraries.\r\n \\* If you're arguing to change\u00a0the protocol to a\u00a0string field and define a formal URI scheme that only supports host + port right now, I'd be in support of that.\r\n \\* If you want to extend that to add support for unix\u00a0domain sockets and the supporting impls, that sounds good\u00a0as well."
        },
        {
            "created_at": "2019-02-25T16:32:03.310Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4651?focusedCommentId=16777075) by Antoine Pitrou (apitrou):*\nIt seems that for C++, we could use this library for URI parsing, which has no external dependencies: https://github.com/cpp-netlib/uri\r\n\r\nIn Java I'm assuming there's already some standard APIs for that.\r\n\r\n`[~davidli]` what do you think about this proposal?"
        },
        {
            "created_at": "2019-02-26T17:03:57.406Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4651?focusedCommentId=16778191) by Jacques Nadeau (jnadeau):*\nYes, there are many libraries for parsing a URI. I\u00a0think we should start by supporting protocols that we have reference implementations for."
        },
        {
            "created_at": "2019-02-27T03:31:27.972Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4651?focusedCommentId=16778832) by Wes McKinney (wesm):*\nChanging the protocol to use a well-defined URI specification for locations seems OK to me. "
        },
        {
            "created_at": "2019-03-11T19:47:36.944Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4651?focusedCommentId=16789902) by David Li (lidavidm):*\nSorry, I totally missed this earlier `[~pitrou]`. I'd also be in favor of defining a URI in place of the Location struct. It'd be good to then get TLS and domain socket support on top."
        },
        {
            "created_at": "2019-05-22T18:02:08.452Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-4651?focusedCommentId=16846097) by Wes McKinney (wesm):*\nIssue resolved by pull request 4047\n<https://github.com/apache/arrow/pull/4047>"
        }
    ]
}