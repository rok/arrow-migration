{
    "issue": {
        "title": "[C++] Valgrind failures in JSON tests",
        "body": "***Note**: This issue was originally created as [ARROW-5273](https://issues.apache.org/jira/browse/ARROW-5273). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI get the following failures with Valgrind:\r\n```Java\n\r\n==12630== Memcheck, a memory error detector\r\n==12630== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==12630== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info\r\n==12630== Command: /home/antoine/arrow/dev/cpp/build-test/debug//arrow-json-chunker-test\r\n==12630== \r\nRunning main() from /home/conda/feedstock_root/build_artifacts/gtest_1551008230529/work/googletest/src/gtest_main.cc\r\n[==========] Running 12 tests from 3 test cases.\r\n[----------] Global test environment set-up.\r\n[----------] 4 tests from ChunkerTest\r\n[ RUN      ] ChunkerTest.PrettyPrinted\r\n==12630== Conditional jump or move depends on uninitialised value(s)\r\n==12630==    at 0x15757F: arrow::rapidjson::GenericReader<arrow::rapidjson::UTF8<char>, arrow::rapidjson::UTF8<char>, arrow::rapidjson::CrtAllocator>::ScanCopyUnescapedString(arrow::rapidjson::GenericStringStream<arrow::rapidjson::UTF8<char> >&, arrow::rapidjson::GenericReader<arrow::rapidjson::UTF8<char>, arrow::rapidjson::UTF8<char>, arrow::rapidjson::CrtAllocator>::StackStream<char>&) (reader.h:942)\r\n==12630==    by 0x155FAA: void arrow::rapidjson::GenericReader<arrow::rapidjson::UTF8<char>, arrow::rapidjson::UTF8<char>, arrow::rapidjson::CrtAllocator>::ParseStringToStream<0u, arrow::rapidjson::UTF8<char>, arrow::rapidjson::UTF8<char>, arrow::rapidjson::GenericStringStream<arrow::rapidjson::UTF8<char> >, arrow::rapidjson::GenericReader<arrow::rapidjson::UTF8<char>, arrow::rapidjson::UTF8<char>, arrow::rapidjson::CrtAllocator>::StackStream<char> >(arrow::rapidjson::GenericStringStream<arrow::rapidjson::UTF8<char> >&, arrow::rapidjson::GenericReader<arrow::rapidjson::UTF8<char>, arrow::rapidjson::UTF8<char>, arrow::rapidjson::CrtAllocator>::StackStream<char>&) (reader.h:856)\r\n==12630==    by 0x1537E0: void arrow::rapidjson::GenericReader<arrow::rapidjson::UTF8<char>, arrow::rapidjson::UTF8<char>, arrow::rapidjson::CrtAllocator>::ParseString<0u, arrow::rapidjson::GenericStringStream<arrow::rapidjson::UTF8<char> >, arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator> >(arrow::rapidjson::GenericStringStream<arrow::rapidjson::UTF8<char> >&, arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator>&, bool) (reader.h:827)\r\n==12630==    by 0x152141: void arrow::rapidjson::GenericReader<arrow::rapidjson::UTF8<char>, arrow::rapidjson::UTF8<char>, arrow::rapidjson::CrtAllocator>::ParseValue<0u, arrow::rapidjson::GenericStringStream<arrow::rapidjson::UTF8<char> >, arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator> >(arrow::rapidjson::GenericStringStream<arrow::rapidjson::UTF8<char> >&, arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator>&) (reader.h:1397)\r\n==12630==    by 0x153CB4: void arrow::rapidjson::GenericReader<arrow::rapidjson::UTF8<char>, arrow::rapidjson::UTF8<char>, arrow::rapidjson::CrtAllocator>::ParseObject<0u, arrow::rapidjson::GenericStringStream<arrow::rapidjson::UTF8<char> >, arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator> >(arrow::rapidjson::GenericStringStream<arrow::rapidjson::UTF8<char> >&, arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator>&) (reader.h:621)\r\n==12630==    by 0x15215A: void arrow::rapidjson::GenericReader<arrow::rapidjson::UTF8<char>, arrow::rapidjson::UTF8<char>, arrow::rapidjson::CrtAllocator>::ParseValue<0u, arrow::rapidjson::GenericStringStream<arrow::rapidjson::UTF8<char> >, arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator> >(arrow::rapidjson::GenericStringStream<arrow::rapidjson::UTF8<char> >&, arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator>&) (reader.h:1398)\r\n==12630==    by 0x1503CC: arrow::rapidjson::ParseResult arrow::rapidjson::GenericReader<arrow::rapidjson::UTF8<char>, arrow::rapidjson::UTF8<char>, arrow::rapidjson::CrtAllocator>::Parse<0u, arrow::rapidjson::GenericStringStream<arrow::rapidjson::UTF8<char> >, arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator> >(arrow::rapidjson::GenericStringStream<arrow::rapidjson::UTF8<char> >&, arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator>&) (reader.h:501)\r\n==12630==    by 0x14E385: arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator>& arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator>::ParseStream<0u, arrow::rapidjson::UTF8<char>, arrow::rapidjson::GenericStringStream<arrow::rapidjson::UTF8<char> > >(arrow::rapidjson::GenericStringStream<arrow::rapidjson::UTF8<char> >&) (document.h:2159)\r\n==12630==    by 0x14BD7E: arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator>& arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator>::Parse<0u, arrow::rapidjson::UTF8<char> >(arrow::rapidjson::UTF8<char>::Ch const*) (document.h:2224)\r\n==12630==    by 0x14972A: arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator>& arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator>::Parse<0u>(char const*) (document.h:2233)\r\n==12630==    by 0x1475BC: arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator>::Parse(char const*) (document.h:2240)\r\n==12630==    by 0x13DE09: arrow::json::PrettyPrint[abi:cxx11](nonstd::sv_lite::basic_string_view<char, std::char_traits<char> >) (test-common.h:173)\r\n==12630== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:_ZN5arrow9rapidjson13GenericReaderINS0_4UTF8IcEES3_NS0_12CrtAllocatorEE23ScanCopyUnescapedStringERNS0_19GenericStringStreamIS3_EERNS5_11StackStreamIcEE\r\n   fun:_ZN5arrow9rapidjson13GenericReaderINS0_4UTF8IcEES3_NS0_12CrtAllocatorEE19ParseStringToStreamILj0ES3_S3_NS0_19GenericStringStreamIS3_EENS5_11StackStreamIcEEEEvRT2_RT3_\r\n   fun:_ZN5arrow9rapidjson13GenericReaderINS0_4UTF8IcEES3_NS0_12CrtAllocatorEE11ParseStringILj0ENS0_19GenericStringStreamIS3_EENS0_15GenericDocumentIS3_NS0_19MemoryPoolAllocatorIS4_EES4_EEEEvRT0_RT1_b\r\n   fun:_ZN5arrow9rapidjson13GenericReaderINS0_4UTF8IcEES3_NS0_12CrtAllocatorEE10ParseValueILj0ENS0_19GenericStringStreamIS3_EENS0_15GenericDocumentIS3_NS0_19MemoryPoolAllocatorIS4_EES4_EEEEvRT0_RT1_\r\n   fun:_ZN5arrow9rapidjson13GenericReaderINS0_4UTF8IcEES3_NS0_12CrtAllocatorEE11ParseObjectILj0ENS0_19GenericStringStreamIS3_EENS0_15GenericDocumentIS3_NS0_19MemoryPoolAllocatorIS4_EES4_EEEEvRT0_RT1_\r\n   fun:_ZN5arrow9rapidjson13GenericReaderINS0_4UTF8IcEES3_NS0_12CrtAllocatorEE10ParseValueILj0ENS0_19GenericStringStreamIS3_EENS0_15GenericDocumentIS3_NS0_19MemoryPoolAllocatorIS4_EES4_EEEEvRT0_RT1_\r\n   fun:_ZN5arrow9rapidjson13GenericReaderINS0_4UTF8IcEES3_NS0_12CrtAllocatorEE5ParseILj0ENS0_19GenericStringStreamIS3_EENS0_15GenericDocumentIS3_NS0_19MemoryPoolAllocatorIS4_EES4_EEEENS0_11ParseResultERT0_RT1_\r\n   fun:_ZN5arrow9rapidjson15GenericDocumentINS0_4UTF8IcEENS0_19MemoryPoolAllocatorINS0_12CrtAllocatorEEES5_E11ParseStreamILj0ES3_NS0_19GenericStringStreamIS3_EEEERS7_RT1_\r\n   fun:_ZN5arrow9rapidjson15GenericDocumentINS0_4UTF8IcEENS0_19MemoryPoolAllocatorINS0_12CrtAllocatorEEES5_E5ParseILj0ES3_EERS7_PKNT0_2ChE\r\n   fun:_ZN5arrow9rapidjson15GenericDocumentINS0_4UTF8IcEENS0_19MemoryPoolAllocatorINS0_12CrtAllocatorEEES5_E5ParseILj0EEERS7_PKc\r\n   fun:_ZN5arrow9rapidjson15GenericDocumentINS0_4UTF8IcEENS0_19MemoryPoolAllocatorINS0_12CrtAllocatorEEES5_E5ParseEPKc\r\n   fun:_ZN5arrow4json11PrettyPrintB5cxx11EN6nonstd7sv_lite17basic_string_viewIcSt11char_traitsIcEEE\r\n}\r\n[       OK ] ChunkerTest.PrettyPrinted (171 ms)\r\n[ RUN      ] ChunkerTest.SingleLine\r\n[       OK ] ChunkerTest.SingleLine (8 ms)\r\n[ RUN      ] ChunkerTest.StraddlingPrettyPrinted\r\n[       OK ] ChunkerTest.StraddlingPrettyPrinted (45 ms)\r\n[ RUN      ] ChunkerTest.StraddlingSingleLine\r\n[       OK ] ChunkerTest.StraddlingSingleLine (5 ms)\r\n[----------] 4 tests from ChunkerTest (236 ms total)\r\n\r\n[----------] 4 tests from NoNewlineChunkerTest/BaseChunkerTest\r\n[ RUN      ] NoNewlineChunkerTest/BaseChunkerTest.Basics/0\r\n[       OK ] NoNewlineChunkerTest/BaseChunkerTest.Basics/0 (21 ms)\r\n[ RUN      ] NoNewlineChunkerTest/BaseChunkerTest.Empty/0\r\n[       OK ] NoNewlineChunkerTest/BaseChunkerTest.Empty/0 (12 ms)\r\n[ RUN      ] NoNewlineChunkerTest/BaseChunkerTest.Straddling/0\r\n[       OK ] NoNewlineChunkerTest/BaseChunkerTest.Straddling/0 (7 ms)\r\n[ RUN      ] NoNewlineChunkerTest/BaseChunkerTest.StraddlingEmpty/0\r\n[       OK ] NoNewlineChunkerTest/BaseChunkerTest.StraddlingEmpty/0 (8 ms)\r\n[----------] 4 tests from NoNewlineChunkerTest/BaseChunkerTest (48 ms total)\r\n\r\n[----------] 4 tests from ChunkerTest/BaseChunkerTest\r\n[ RUN      ] ChunkerTest/BaseChunkerTest.Basics/0\r\n[       OK ] ChunkerTest/BaseChunkerTest.Basics/0 (3 ms)\r\n[ RUN      ] ChunkerTest/BaseChunkerTest.Empty/0\r\n[       OK ] ChunkerTest/BaseChunkerTest.Empty/0 (1 ms)\r\n[ RUN      ] ChunkerTest/BaseChunkerTest.Straddling/0\r\n[       OK ] ChunkerTest/BaseChunkerTest.Straddling/0 (2 ms)\r\n[ RUN      ] ChunkerTest/BaseChunkerTest.StraddlingEmpty/0\r\n[       OK ] ChunkerTest/BaseChunkerTest.StraddlingEmpty/0 (1 ms)\r\n[----------] 4 tests from ChunkerTest/BaseChunkerTest (7 ms total)\r\n\r\n[----------] Global test environment tear-down\r\n[==========] 12 tests from 3 test cases ran. (320 ms total)\r\n[  PASSED  ] 12 tests.\r\n```\r\n\r\nand\r\n\r\n```Java\n\r\n==12627== Memcheck, a memory error detector\r\n==12627== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.\r\n==12627== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info\r\n==12627== Command: /home/antoine/arrow/dev/cpp/build-test/debug//arrow-ipc-json-test\r\n==12627== \r\nRunning main() from /home/conda/feedstock_root/build_artifacts/gtest_1551008230529/work/googletest/src/gtest_main.cc\r\n[==========] Running 20 tests from 4 test cases.\r\n[----------] Global test environment set-up.\r\n[----------] 1 test from TestJsonSchemaWriter\r\n[ RUN      ] TestJsonSchemaWriter.FlatTypes\r\n[       OK ] TestJsonSchemaWriter.FlatTypes (479 ms)\r\n[----------] 1 test from TestJsonSchemaWriter (486 ms total)\r\n\r\n[----------] 3 tests from TestJsonArrayWriter\r\n[ RUN      ] TestJsonArrayWriter.PrimitiveTypes\r\n==12627== Conditional jump or move depends on uninitialised value(s)\r\n==12627==    at 0x1A7BC1: arrow::rapidjson::GenericReader<arrow::rapidjson::UTF8<char>, arrow::rapidjson::UTF8<char>, arrow::rapidjson::CrtAllocator>::ScanCopyUnescapedString(arrow::rapidjson::GenericStringStream<arrow::rapidjson::UTF8<char> >&, arrow::rapidjson::GenericReader<arrow::rapidjson::UTF8<char>, arrow::rapidjson::UTF8<char>, arrow::rapidjson::CrtAllocator>::StackStream<char>&) (reader.h:942)\r\n==12627==    by 0x1A5712: void arrow::rapidjson::GenericReader<arrow::rapidjson::UTF8<char>, arrow::rapidjson::UTF8<char>, arrow::rapidjson::CrtAllocator>::ParseStringToStream<0u, arrow::rapidjson::UTF8<char>, arrow::rapidjson::UTF8<char>, arrow::rapidjson::GenericStringStream<arrow::rapidjson::UTF8<char> >, arrow::rapidjson::GenericReader<arrow::rapidjson::UTF8<char>, arrow::rapidjson::UTF8<char>, arrow::rapidjson::CrtAllocator>::StackStream<char> >(arrow::rapidjson::GenericStringStream<arrow::rapidjson::UTF8<char> >&, arrow::rapidjson::GenericReader<arrow::rapidjson::UTF8<char>, arrow::rapidjson::UTF8<char>, arrow::rapidjson::CrtAllocator>::StackStream<char>&) (reader.h:856)\r\n==12627==    by 0x1A179E: void arrow::rapidjson::GenericReader<arrow::rapidjson::UTF8<char>, arrow::rapidjson::UTF8<char>, arrow::rapidjson::CrtAllocator>::ParseString<0u, arrow::rapidjson::GenericStringStream<arrow::rapidjson::UTF8<char> >, arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator> >(arrow::rapidjson::GenericStringStream<arrow::rapidjson::UTF8<char> >&, arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator>&, bool) (reader.h:827)\r\n==12627==    by 0x1A1B4E: void arrow::rapidjson::GenericReader<arrow::rapidjson::UTF8<char>, arrow::rapidjson::UTF8<char>, arrow::rapidjson::CrtAllocator>::ParseObject<0u, arrow::rapidjson::GenericStringStream<arrow::rapidjson::UTF8<char> >, arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator> >(arrow::rapidjson::GenericStringStream<arrow::rapidjson::UTF8<char> >&, arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator>&) (reader.h:609)\r\n==12627==    by 0x19ED66: void arrow::rapidjson::GenericReader<arrow::rapidjson::UTF8<char>, arrow::rapidjson::UTF8<char>, arrow::rapidjson::CrtAllocator>::ParseValue<0u, arrow::rapidjson::GenericStringStream<arrow::rapidjson::UTF8<char> >, arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator> >(arrow::rapidjson::GenericStringStream<arrow::rapidjson::UTF8<char> >&, arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator>&) (reader.h:1398)\r\n==12627==    by 0x19C95C: arrow::rapidjson::ParseResult arrow::rapidjson::GenericReader<arrow::rapidjson::UTF8<char>, arrow::rapidjson::UTF8<char>, arrow::rapidjson::CrtAllocator>::Parse<0u, arrow::rapidjson::GenericStringStream<arrow::rapidjson::UTF8<char> >, arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator> >(arrow::rapidjson::GenericStringStream<arrow::rapidjson::UTF8<char> >&, arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator>&) (reader.h:501)\r\n==12627==    by 0x199B9F: arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator>& arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator>::ParseStream<0u, arrow::rapidjson::UTF8<char>, arrow::rapidjson::GenericStringStream<arrow::rapidjson::UTF8<char> > >(arrow::rapidjson::GenericStringStream<arrow::rapidjson::UTF8<char> >&) (document.h:2159)\r\n==12627==    by 0x194C0A: arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator>& arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator>::Parse<0u, arrow::rapidjson::UTF8<char> >(arrow::rapidjson::UTF8<char>::Ch const*) (document.h:2224)\r\n==12627==    by 0x18C21F: arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator>& arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator>::Parse<0u>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (document.h:2270)\r\n==12627==    by 0x1871B4: arrow::rapidjson::GenericDocument<arrow::rapidjson::UTF8<char>, arrow::rapidjson::MemoryPoolAllocator<arrow::rapidjson::CrtAllocator>, arrow::rapidjson::CrtAllocator>::Parse(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (document.h:2274)\r\n==12627==    by 0x17AE5E: arrow::ipc::internal::json::TestArrayRoundTrip(arrow::Array const&) (json-test.cc:82)\r\n==12627==    by 0x1909BC: void arrow::ipc::internal::json::CheckPrimitive<arrow::FloatType, float>(std::shared_ptr<arrow::DataType> const&, std::vector<bool, std::allocator<bool> > const&, std::vector<float, std::allocator<float> > const&) (json-test.cc:112)\r\n==12627== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:_ZN5arrow9rapidjson13GenericReaderINS0_4UTF8IcEES3_NS0_12CrtAllocatorEE23ScanCopyUnescapedStringERNS0_19GenericStringStreamIS3_EERNS5_11StackStreamIcEE\r\n   fun:_ZN5arrow9rapidjson13GenericReaderINS0_4UTF8IcEES3_NS0_12CrtAllocatorEE19ParseStringToStreamILj0ES3_S3_NS0_19GenericStringStreamIS3_EENS5_11StackStreamIcEEEEvRT2_RT3_\r\n   fun:_ZN5arrow9rapidjson13GenericReaderINS0_4UTF8IcEES3_NS0_12CrtAllocatorEE11ParseStringILj0ENS0_19GenericStringStreamIS3_EENS0_15GenericDocumentIS3_NS0_19MemoryPoolAllocatorIS4_EES4_EEEEvRT0_RT1_b\r\n   fun:_ZN5arrow9rapidjson13GenericReaderINS0_4UTF8IcEES3_NS0_12CrtAllocatorEE11ParseObjectILj0ENS0_19GenericStringStreamIS3_EENS0_15GenericDocumentIS3_NS0_19MemoryPoolAllocatorIS4_EES4_EEEEvRT0_RT1_\r\n   fun:_ZN5arrow9rapidjson13GenericReaderINS0_4UTF8IcEES3_NS0_12CrtAllocatorEE10ParseValueILj0ENS0_19GenericStringStreamIS3_EENS0_15GenericDocumentIS3_NS0_19MemoryPoolAllocatorIS4_EES4_EEEEvRT0_RT1_\r\n   fun:_ZN5arrow9rapidjson13GenericReaderINS0_4UTF8IcEES3_NS0_12CrtAllocatorEE5ParseILj0ENS0_19GenericStringStreamIS3_EENS0_15GenericDocumentIS3_NS0_19MemoryPoolAllocatorIS4_EES4_EEEENS0_11ParseResultERT0_RT1_\r\n   fun:_ZN5arrow9rapidjson15GenericDocumentINS0_4UTF8IcEENS0_19MemoryPoolAllocatorINS0_12CrtAllocatorEEES5_E11ParseStreamILj0ES3_NS0_19GenericStringStreamIS3_EEEERS7_RT1_\r\n   fun:_ZN5arrow9rapidjson15GenericDocumentINS0_4UTF8IcEENS0_19MemoryPoolAllocatorINS0_12CrtAllocatorEEES5_E5ParseILj0ES3_EERS7_PKNT0_2ChE\r\n   fun:_ZN5arrow9rapidjson15GenericDocumentINS0_4UTF8IcEENS0_19MemoryPoolAllocatorINS0_12CrtAllocatorEEES5_E5ParseILj0EEERS7_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\r\n   fun:_ZN5arrow9rapidjson15GenericDocumentINS0_4UTF8IcEENS0_19MemoryPoolAllocatorINS0_12CrtAllocatorEEES5_E5ParseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\r\n   fun:_ZN5arrow3ipc8internal4json18TestArrayRoundTripERKNS_5ArrayE\r\n   fun:_ZN5arrow3ipc8internal4json14CheckPrimitiveINS_9FloatTypeEfEEvRKSt10shared_ptrINS_8DataTypeEERKSt6vectorIbSaIbEERKSA_IT0_SaISF_EE\r\n}\r\n[       OK ] TestJsonArrayWriter.PrimitiveTypes (625 ms)\r\n[ RUN      ] TestJsonArrayWriter.NestedTypes\r\n[       OK ] TestJsonArrayWriter.NestedTypes (137 ms)\r\n[ RUN      ] TestJsonArrayWriter.Unions\r\n[       OK ] TestJsonArrayWriter.Unions (157 ms)\r\n[----------] 3 tests from TestJsonArrayWriter (919 ms total)\r\n\r\n[----------] 2 tests from TestJsonFileReadWrite\r\n[ RUN      ] TestJsonFileReadWrite.BasicRoundTrip\r\n[       OK ] TestJsonFileReadWrite.BasicRoundTrip (228 ms)\r\n[ RUN      ] TestJsonFileReadWrite.MinimalFormatExample\r\n[       OK ] TestJsonFileReadWrite.MinimalFormatExample (23 ms)\r\n[----------] 2 tests from TestJsonFileReadWrite (251 ms total)\r\n\r\n[----------] 14 tests from TestJsonRoundTrip/TestJsonRoundTrip\r\n[ RUN      ] TestJsonRoundTrip/TestJsonRoundTrip.RoundTrip/0\r\n[       OK ] TestJsonRoundTrip/TestJsonRoundTrip.RoundTrip/0 (29 ms)\r\n[ RUN      ] TestJsonRoundTrip/TestJsonRoundTrip.RoundTrip/1\r\n[       OK ] TestJsonRoundTrip/TestJsonRoundTrip.RoundTrip/1 (156 ms)\r\n[ RUN      ] TestJsonRoundTrip/TestJsonRoundTrip.RoundTrip/2\r\n[       OK ] TestJsonRoundTrip/TestJsonRoundTrip.RoundTrip/2 (99 ms)\r\n[ RUN      ] TestJsonRoundTrip/TestJsonRoundTrip.RoundTrip/3\r\n[       OK ] TestJsonRoundTrip/TestJsonRoundTrip.RoundTrip/3 (19 ms)\r\n[ RUN      ] TestJsonRoundTrip/TestJsonRoundTrip.RoundTrip/4\r\n[       OK ] TestJsonRoundTrip/TestJsonRoundTrip.RoundTrip/4 (364 ms)\r\n[ RUN      ] TestJsonRoundTrip/TestJsonRoundTrip.RoundTrip/5\r\n[       OK ] TestJsonRoundTrip/TestJsonRoundTrip.RoundTrip/5 (115 ms)\r\n[ RUN      ] TestJsonRoundTrip/TestJsonRoundTrip.RoundTrip/6\r\n[       OK ] TestJsonRoundTrip/TestJsonRoundTrip.RoundTrip/6 (267 ms)\r\n[ RUN      ] TestJsonRoundTrip/TestJsonRoundTrip.RoundTrip/7\r\n[       OK ] TestJsonRoundTrip/TestJsonRoundTrip.RoundTrip/7 (26 ms)\r\n[ RUN      ] TestJsonRoundTrip/TestJsonRoundTrip.RoundTrip/8\r\n[       OK ] TestJsonRoundTrip/TestJsonRoundTrip.RoundTrip/8 (76 ms)\r\n[ RUN      ] TestJsonRoundTrip/TestJsonRoundTrip.RoundTrip/9\r\n[       OK ] TestJsonRoundTrip/TestJsonRoundTrip.RoundTrip/9 (47 ms)\r\n[ RUN      ] TestJsonRoundTrip/TestJsonRoundTrip.RoundTrip/10\r\n[       OK ] TestJsonRoundTrip/TestJsonRoundTrip.RoundTrip/10 (69 ms)\r\n[ RUN      ] TestJsonRoundTrip/TestJsonRoundTrip.RoundTrip/11\r\n[       OK ] TestJsonRoundTrip/TestJsonRoundTrip.RoundTrip/11 (56 ms)\r\n[ RUN      ] TestJsonRoundTrip/TestJsonRoundTrip.RoundTrip/12\r\n[       OK ] TestJsonRoundTrip/TestJsonRoundTrip.RoundTrip/12 (100 ms)\r\n[ RUN      ] TestJsonRoundTrip/TestJsonRoundTrip.RoundTrip/13\r\n[       OK ] TestJsonRoundTrip/TestJsonRoundTrip.RoundTrip/13 (348 ms)\r\n[----------] 14 tests from TestJsonRoundTrip/TestJsonRoundTrip (1775 ms total)\r\n```\r\n",
        "created_at": "2019-05-06T19:14:31.000Z",
        "updated_at": "2022-08-27T14:42:00.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-09-18T11:04:10.000Z"
    },
    "comments": [
        {
            "created_at": "2019-05-08T12:10:45.433Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5273?focusedCommentId=16835539) by Antoine Pitrou (apitrou):*\n`[~bkietz]` I don't know if you feel up to diagnosing this issue. Since the problem only surfaces in a few specific tests, chances are it's in our test code (and/or our parsing code?), rather than rapidjson itself."
        },
        {
            "created_at": "2019-09-18T11:04:10.547Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5273?focusedCommentId=16932306) by Antoine Pitrou (apitrou):*\nI can't reproduce anymore, closing."
        },
        {
            "created_at": "2022-08-27T14:42:00.333Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5273?focusedCommentId=17585983) by @toddfarmer:*\nTransitioning issue from Resolved to Closed to based on resolution field value."
        }
    ]
}