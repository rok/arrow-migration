{
    "issue": {
        "title": "[Python] pa.lib.tzinfo_to_string(tz) throws ValueError: Unable to convert timezone `tzoffset(None, -14400)` to string",
        "body": "***Note**: This issue was originally created as [ARROW-5540](https://issues.apache.org/jira/browse/ARROW-5540). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n**Overview:**\r\n\r\nWhen trying to save DataFrame to parquet error is thrown while parsing a column with the following properties:\r\n\r\n\u00a0\r\n```java\n\r\ndtype:\u00a0datetime64[ns, tzoffset(None, -14400)]\r\ndtype.tz:\u00a0tzoffset(None, -14400)\r\n```\r\n\u00a0\r\n\r\n\u00a0\r\n\r\n**Error:** \r\n```java\n\r\nValueError: Unable to convert timezone `tzoffset(None, -14400)` to string\n```\r\n\u00a0\r\n\r\n**Error stack:**\r\n```java\n\r\nFile \"pyarrow/table.pxi\", line 1139, in pyarrow.lib.Table.from_pandas\r\nFile \"/home/koojav/projects/toptal/teftel/.venv/lib/python3.6/site-packages/pyarrow/pandas_compat.py\", line 480, in dataframe_to_arrays\r\ntypes)\r\nFile \"/home/koojav/projects/toptal/teftel/.venv/lib/python3.6/site-packages/pyarrow/pandas_compat.py\", line 209, in construct_metadata\r\nfield_name=sanitized_name)\r\nFile \"/home/koojav/projects/toptal/teftel/.venv/lib/python3.6/site-packages/pyarrow/pandas_compat.py\", line 153, in get_column_metadata\r\nstring_dtype, extra_metadata = get_extension_dtype_info(column)\r\nFile \"/home/koojav/projects/toptal/teftel/.venv/lib/python3.6/site-packages/pyarrow/pandas_compat.py\", line 126, in get_extension_dtype_info\r\nmetadata = {'timezone': pa.lib.tzinfo_to_string(dtype.tz)}\r\nFile \"pyarrow/types.pxi\", line 1149, in pyarrow.lib.tzinfo_to_string\r\nValueError: Unable to convert timezone `tzoffset(None, -14400)` to string\r\n```\r\n**Libraries:**\r\n \\* pandas 0.24.2\r\n \\* pyarrow 0.13.0",
        "created_at": "2019-06-10T12:08:28.000Z",
        "updated_at": "2019-06-12T13:07:33.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2019-06-12T13:07:33.000Z"
    },
    "comments": [
        {
            "created_at": "2019-06-10T15:38:16.947Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5540?focusedCommentId=16860090) by Wes McKinney (wesm):*\n`[~jorisvandenbossche]` or `[~kszucs]` can you take a look?"
        },
        {
            "created_at": "2019-06-12T10:14:01.147Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5540?focusedCommentId=16861965) by Joris Van den Bossche (jorisvandenbossche):*\n`[~Koojav]` Thanks for the report.\r\n\r\nGoing from the output, I assume that you are using a `dateutil` timezone, is that correct? (`type(dtype.tz)` should show it)\r\n\r\nAt the moment, pyarrow only supports `pytz` timezones and the standard library's fixed offset timezone. See ARROW-5248 for that."
        },
        {
            "created_at": "2019-06-12T13:00:32.831Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5540?focusedCommentId=16862073) by Micha\u0142 Kujawski (Koojav):*\n`[~jorisvandenbossche]` thank you for a quick reply.\r\n\r\nThe types of my data are:\r\n```java\n\r\ntype(dtype.tz) : <class 'dateutil.tz.tz.tzoffset'>\n```\r\nand\r\n```java\n\r\ntype(dtype) : <class 'pandas.core.dtypes.dtypes.DatetimeTZDtype'>\n```\r\n\u00a0\r\n\r\nThe issue you have linked seems the same as mine.\r\n\r\n\u00a0"
        },
        {
            "created_at": "2019-06-12T13:05:39.598Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-5540?focusedCommentId=16862079) by Joris Van den Bossche (jorisvandenbossche):*\nThanks for the follow-up. OK, since it is due to not supporting dateutil at the moment, going to close this issue as a duplicate of ARROW-5248.\r\n\r\nTo prevent this issue, you should be able to prevent that pandas creates a dateutil timezone instead of a pytz timezone (not sure how that happened in your case)."
        }
    ]
}