{
    "issue": {
        "title": "[Release] Build of cpp is failing on me on ubuntu-docs",
        "body": "***Note**: This issue was originally created as [ARROW-13017](https://issues.apache.org/jira/browse/ARROW-13017). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI am being unable to run the build cpp inside the ubuntu-docs docker image. \r\n\r\nThere are two observations:\r\n\r\n1. cmake is not being able to find \"c-ares\" nor \"re2\"\r\n2. FAILED: aws-cpp-sdk-config/CMakeFiles/aws-cpp-sdk-config.dir/ub_CONFIG.cpp.o\r\n\r\nLog below:\r\n\r\n```java\n\r\nBuilding ubuntu-docs\r\n[+] Building 1.0s (22/22) FINISHED                                                                                          \r\n => [internal] load build definition from linux-apt-docs.dockerfile                                                    0.2s\r\n => => transferring dockerfile: 3.50kB                                                                                 0.0s\r\n => [internal] load .dockerignore                                                                                      0.1s\r\n => => transferring context: 35B                                                                                       0.0s\r\n => [internal] load metadata for docker.io/apache/arrow-dev:amd64-ubuntu-20.04-python-3                                0.0s\r\n => importing cache manifest from apache/arrow-dev:amd64-ubuntu-20.04-docs                                             0.0s\r\n => [ 1/15] FROM docker.io/apache/arrow-dev:amd64-ubuntu-20.04-python-3                                                0.0s\r\n => [internal] load build context                                                                                      0.0s\r\n => => transferring context: 8.63kB                                                                                    0.0s\r\n => CACHED [ 2/15] RUN apt-get update -y &&     apt-get install -y         dirmngr         apt-transport-https         0.0s\r\n => CACHED [ 3/15] COPY ci/scripts/util_download_apache.sh /arrow/ci/scripts/                                          0.0s\r\n => CACHED [ 4/15] RUN /arrow/ci/scripts/util_download_apache.sh     \"maven/maven-3/3.5.4/binaries/apache-maven-3.5.4  0.0s\r\n => CACHED [ 5/15] RUN mvn -version                                                                                    0.0s\r\n => CACHED [ 6/15] RUN wget -q -O - https://deb.nodesource.com/setup_14.x | bash - &&     apt-get install -y nodejs &  0.0s\r\n => CACHED [ 7/15] RUN pip install         meson         breathe         ipython         sphinx         pydata-sphinx  0.0s\r\n => CACHED [ 8/15] COPY c_glib/Gemfile /arrow/c_glib/                                                                  0.0s\r\n => CACHED [ 9/15] RUN gem install --no-document bundler &&     bundle install --gemfile /arrow/c_glib/Gemfile         0.0s\r\n => CACHED [10/15] COPY ci/etc/rprofile /arrow/ci/etc/                                                                 0.0s\r\n => CACHED [11/15] RUN cat /arrow/ci/etc/rprofile >> $(R RHOME)/etc/Rprofile.site                                      0.0s\r\n => CACHED [12/15] RUN echo \"MAKEFLAGS=-j$(R -s -e 'cat(parallel::detectCores())')\" >> $(R RHOME)/etc/Makeconf         0.0s\r\n => CACHED [13/15] COPY ci/scripts/r_deps.sh /arrow/ci/scripts/                                                        0.0s\r\n => CACHED [14/15] COPY r/DESCRIPTION /arrow/r/                                                                        0.0s\r\n => CACHED [15/15] RUN /arrow/ci/scripts/r_deps.sh /arrow &&     R -e \"install.packages('pkgdown')\"                    0.0s\r\n => exporting to image                                                                                                 0.1s\r\n => => exporting layers                                                                                                0.0s\r\n => => writing image sha256:441e0efed77859c99ad037cf21793d65657b1572e1a8dfa7685054974b74a3d5                           0.0s\r\n => => naming to docker.io/apache/arrow-dev:amd64-ubuntu-20.04-docs                                                    0.0s\r\n => exporting cache                                                                                                    0.1s\r\n => => preparing build cache for export                                                                                0.1s\r\n\r\nUse 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them\r\nSuccessfully built 441e0efed77859c99ad037cf21793d65657b1572e1a8dfa7685054974b74a3d5\r\nUse 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them\r\nCreating arrow_ubuntu-docs_run ... done\r\n+ source_dir=/arrow/cpp\r\n+ build_dir=/build/cpp\r\n+ with_docs=true\r\n+ : ON\r\n+ '[' '!' -z '' ']'\r\n++ command -v xcrun\r\n+ '[' -x '' ']'\r\n+ '[' ON == ON ']'\r\n+ echo -e '===\\n=== ccache statistics before build\\n==='\r\n===\r\n=== ccache statistics before build\r\n===\r\n+ ccache -s\r\ncache directory                     /ccache\r\nprimary config                      /ccache/ccache.conf\r\nsecondary config      (readonly)    /etc/ccache.conf\r\nstats updated                       Tue Jun  8 21:17:43 2021\r\ncache hit (direct)                     0\r\ncache hit (preprocessed)               0\r\ncache miss                             1\r\ncache hit rate                      0.00 %\r\ncleanups performed                     0\r\nfiles in cache                         3\r\ncache size                           1.2 MB\r\nmax cache size                     500.0 MB\r\n+ mkdir -p /build/cpp\r\n+ pushd /build/cpp\r\n/build/cpp /\r\n+ cmake -G Ninja -DARROW_BOOST_USE_SHARED=ON -DARROW_BUILD_BENCHMARKS=OFF -DARROW_BUILD_BENCHMARKS_REFERENCE=OFF -DARROW_BUILD_EXAMPLES=OFF -DARROW_BUILD_INTEGRATION=OFF -DARROW_BUILD_SHARED=ON -DARROW_BUILD_STATIC=OFF -DARROW_BUILD_TESTS=OFF -DARROW_BUILD_UTILITIES=OFF -DARROW_COMPUTE=ON -DARROW_CSV=ON -DARROW_CUDA=ON -DARROW_CXXFLAGS= -DARROW_DATASET=ON -DARROW_DEPENDENCY_SOURCE=SYSTEM -DARROW_EXTRA_ERROR_CONTEXT=OFF -DARROW_ENABLE_TIMING_TESTS=ON -DARROW_FILESYSTEM=ON -DARROW_FLIGHT=ON -DARROW_FUZZING=OFF -DARROW_GANDIVA_JAVA=OFF -DARROW_GANDIVA_PC_CXX_FLAGS= -DARROW_GANDIVA=ON -DARROW_HDFS=ON -DARROW_HIVESERVER2=OFF -DARROW_INSTALL_NAME_RPATH=OFF -DARROW_JEMALLOC=ON -DARROW_JNI=OFF -DARROW_JSON=ON -DARROW_LARGE_MEMORY_TESTS=OFF -DARROW_MIMALLOC=OFF -DARROW_NO_DEPRECATED_API=ON -DARROW_ORC=ON -DARROW_PARQUET=ON -DARROW_PLASMA_JAVA_CLIENT=OFF -DARROW_PLASMA=ON -DARROW_PYTHON=ON -DARROW_RUNTIME_SIMD_LEVEL=MAX -DARROW_S3=ON -DARROW_TEST_LINKAGE=shared -DARROW_TEST_MEMCHECK=OFF -DARROW_USE_ASAN=OFF -DARROW_USE_CCACHE=ON -DARROW_USE_GLOG=OFF -DARROW_USE_LD_GOLD=OFF -DARROW_USE_PRECOMPILED_HEADERS=OFF -DARROW_USE_STATIC_CRT=OFF -DARROW_USE_TSAN=OFF -DARROW_USE_UBSAN=OFF -DARROW_VERBOSE_THIRDPARTY_BUILD=OFF -DARROW_WITH_BROTLI=ON -DARROW_WITH_BZ2=ON -DARROW_WITH_LZ4=ON -DARROW_WITH_SNAPPY=ON -DARROW_WITH_UTF8PROC=ON -DARROW_WITH_ZLIB=ON -DARROW_WITH_ZSTD=ON -DAWSSDK_SOURCE=BUNDLED -Dbenchmark_SOURCE= -DBOOST_SOURCE= -DBrotli_SOURCE= -DBUILD_WARNING_LEVEL=CHECKIN -Dc-ares_SOURCE= -DCMAKE_BUILD_TYPE=debug -DCMAKE_C_FLAGS= -DCMAKE_CXX_FLAGS= -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_UNITY_BUILD=ON -Dgflags_SOURCE= -DgRPC_SOURCE=BUNDLED -DGTest_SOURCE=BUNDLED -DLz4_SOURCE= -DORC_SOURCE=BUNDLED -DPARQUET_BUILD_EXECUTABLES=ON -DPARQUET_BUILD_EXAMPLES=ON -DPARQUET_REQUIRE_ENCRYPTION=ON -DProtobuf_SOURCE=BUNDLED -DRapidJSON_SOURCE= -Dre2_SOURCE= -DSnappy_SOURCE= -DThrift_SOURCE= -Dutf8proc_SOURCE= -Dzstd_SOURCE= /arrow/cpp\r\n-- Building using CMake version: 3.16.3\r\n-- The C compiler identification is GNU 9.3.0\r\n-- The CXX compiler identification is GNU 9.3.0\r\n-- Check for working C compiler: /usr/bin/cc\r\n-- Check for working C compiler: /usr/bin/cc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Check for working CXX compiler: /usr/bin/c++\r\n-- Check for working CXX compiler: /usr/bin/c++ -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\n-- Arrow version: 4.0.1 (full: '4.0.1')\r\n-- Arrow SO version: 400 (full: 400.1.0)\r\n-- clang-tidy found at /usr/bin/clang-tidy-8\r\n-- clang-format found at /usr/bin/clang-format-8\r\n-- Found ClangTools: /usr/bin/clang-format-8  \r\n-- infer not found\r\n-- Found Python3: /usr/local/bin/python (found version \"3.8.5\") found components: Interpreter \r\n-- Using ccache: /usr/bin/ccache\r\n-- Found cpplint executable at /arrow/cpp/build-support/cpplint.py\r\n-- System processor: x86_64\r\n-- Performing Test CXX_SUPPORTS_SSE4_2\r\n-- Performing Test CXX_SUPPORTS_SSE4_2 - Success\r\n-- Performing Test CXX_SUPPORTS_AVX2\r\n-- Performing Test CXX_SUPPORTS_AVX2 - Success\r\n-- Performing Test CXX_SUPPORTS_AVX512\r\n-- Performing Test CXX_SUPPORTS_AVX512 - Success\r\n-- Arrow build warning level: CHECKIN\r\nUsing ld linker\r\nConfigured for DEBUG build (set with cmake -DCMAKE_BUILD_TYPE={release,debug,...})\r\n-- Build Type: DEBUG\r\n-- Using SYSTEM approach to find dependencies\r\n-- ARROW_ABSL_BUILD_VERSION: 0f3bb466b868b523cf1dc9b2aaaed65c77b28862\r\n-- ARROW_AWSSDK_BUILD_VERSION: 1.8.133\r\n-- ARROW_AWS_CHECKSUMS_BUILD_VERSION: v0.1.10\r\n-- ARROW_AWS_C_COMMON_BUILD_VERSION: v0.4.59\r\n-- ARROW_AWS_C_EVENT_STREAM_BUILD_VERSION: v0.1.5\r\n-- ARROW_BOOST_BUILD_VERSION: 1.75.0\r\n-- ARROW_BROTLI_BUILD_VERSION: v1.0.9\r\n-- ARROW_BZIP2_BUILD_VERSION: 1.0.8\r\n-- ARROW_CARES_BUILD_VERSION: 1.17.1\r\n-- ARROW_GBENCHMARK_BUILD_VERSION: v1.5.2\r\n-- ARROW_GFLAGS_BUILD_VERSION: v2.2.2\r\n-- ARROW_GLOG_BUILD_VERSION: v0.4.0\r\n-- ARROW_GRPC_BUILD_VERSION: v1.35.0\r\n-- ARROW_GTEST_BUILD_VERSION: 1.10.0\r\n-- ARROW_JEMALLOC_BUILD_VERSION: 5.2.1\r\n-- ARROW_LZ4_BUILD_VERSION: v1.9.3\r\n-- ARROW_MIMALLOC_BUILD_VERSION: v1.6.4\r\n-- ARROW_ORC_BUILD_VERSION: 1.6.6\r\n-- ARROW_PROTOBUF_BUILD_VERSION: v3.14.0\r\n-- ARROW_RAPIDJSON_BUILD_VERSION: 1a803826f1197b5e30703afe4b9c0e7dd48074f5\r\n-- ARROW_RE2_BUILD_VERSION: 2021-02-02\r\n-- ARROW_SNAPPY_BUILD_VERSION: 1.1.8\r\n-- ARROW_THRIFT_BUILD_VERSION: 0.13.0\r\n-- ARROW_THRIFT_BUILD_MD5_CHECKSUM: 38a27d391a2b03214b444cb13d5664f1\r\n-- ARROW_UTF8PROC_BUILD_VERSION: v2.6.1\r\n-- ARROW_XSIMD_BUILD_VERSION: e9234cd6e6f4428fc260073b2c34ffe86fda1f34\r\n-- ARROW_ZLIB_BUILD_VERSION: 1.2.11\r\n-- ARROW_ZSTD_BUILD_VERSION: v1.4.8\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed\r\n-- Check if compiler accepts -pthread\r\n-- Check if compiler accepts -pthread - yes\r\n-- Found Threads: TRUE  \r\n-- Looking for __SIZEOF_INT128__\r\n-- Looking for __SIZEOF_INT128__ - found\r\n-- Found Boost: /usr/lib/x86_64-linux-gnu/cmake/Boost-1.71.0/BoostConfig.cmake (found suitable version \"1.71.0\", minimum required is \"1.58\") found components: system filesystem \r\n-- Boost include dir: /usr/include\r\n-- Boost libraries: Boost::system;Boost::filesystem\r\n-- Found Snappy: /usr/lib/x86_64-linux-gnu/libsnappy.so  \r\n-- Providing CMake module for Snappy\r\n-- Checking for modules 'libbrotlicommon;libbrotlienc;libbrotlidec'\r\n--   Found libbrotlicommon, version 1.0.7\r\n--   Found libbrotlienc, version 1.0.7\r\n--   Found libbrotlidec, version 1.0.7\r\n-- Found Brotli: /usr/lib/x86_64-linux-gnu/libbrotlicommon.so  \r\n-- Providing CMake module for Brotli\r\n-- Found OpenSSL: /usr/lib/x86_64-linux-gnu/libcrypto.so (found suitable version \"1.1.1f\", minimum required is \"1.0.2\")  \r\n-- Found OpenSSL Crypto Library: /usr/lib/x86_64-linux-gnu/libcrypto.so\r\n-- Building with OpenSSL (Version: 1.1.1f) support\r\n-- Checking for module 'thrift'\r\n--   Found thrift, version 0.13.0\r\n-- Found Thrift: /usr/lib/x86_64-linux-gnu/libthrift.so (found suitable version \"0.13.0\", minimum required is \"0.11.0\")  \r\n-- Providing CMake module for Thrift\r\nBuilding Protocol Buffers from source\r\n-- Found protoc: /build/cpp/protobuf_ep-install/bin/protoc\r\n-- Found libprotoc: /build/cpp/protobuf_ep-install/lib/libprotoc.a\r\n-- Found libprotobuf: /build/cpp/protobuf_ep-install/lib/libprotobuf.a\r\n-- Found protobuf headers: /build/cpp/protobuf_ep-install/include\r\n-- Building (vendored) jemalloc from source\r\n-- RapidJSON found. Headers: /usr/include\r\n-- Building xsimd from source\r\n-- Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.so (found version \"1.2.11\") \r\n-- Checking for module 'liblz4'\r\n--   Found liblz4, version 1.9.2\r\n-- Found Lz4: /usr/lib/x86_64-linux-gnu/liblz4.so  \r\n-- Providing CMake module for Lz4\r\n-- Checking for module 'libzstd'\r\n--   Found libzstd, version 1.4.4\r\n-- Found zstd: /usr/lib/x86_64-linux-gnu/libzstd.so  \r\n-- Providing CMake module for zstd\r\nCMake Warning at cmake_modules/Findre2Alt.cmake:25 (find_package):\r\n  By not providing \"Findre2.cmake\" in CMAKE_MODULE_PATH this project has\r\n  asked CMake to find a package configuration file provided by \"re2\", but\r\n  CMake did not find one.\r\n\r\n  Could not find a package configuration file provided by \"re2\" with any of\r\n  the following names:\r\n\r\n    re2Config.cmake\r\n    re2-config.cmake\r\n\r\n  Add the installation prefix of \"re2\" to CMAKE_PREFIX_PATH or set \"re2_DIR\"\r\n  to a directory containing one of the above files.  If \"re2\" provides a\r\n  separate development package or SDK, be sure it has been installed.\r\nCall Stack (most recent call first):\r\n  cmake_modules/ThirdpartyToolchain.cmake:234 (find_package)\r\n  cmake_modules/ThirdpartyToolchain.cmake:2174 (resolve_dependency)\r\n  CMakeLists.txt:506 (include)\r\n\r\n\r\n-- Checking for module 're2'\r\n--   Found re2, version 0.0.0\r\n-- Found re2Alt: /usr/lib/x86_64-linux-gnu/libre2.so  \r\n-- Providing CMake module for re2Alt\r\n-- Found BZip2: /usr/lib/x86_64-linux-gnu/libbz2.so (found version \"1.0.8\") \r\n-- Looking for BZ2_bzCompressInit\r\n-- Looking for BZ2_bzCompressInit - found\r\n-- Found utf8proc: /usr/lib/x86_64-linux-gnu/libutf8proc.so  \r\n-- Providing CMake module for utf8proc\r\nCMake Warning at cmake_modules/Findc-aresAlt.cmake:25 (find_package):\r\n  By not providing \"Findc-ares.cmake\" in CMAKE_MODULE_PATH this project has\r\n  asked CMake to find a package configuration file provided by \"c-ares\", but\r\n  CMake did not find one.\r\n\r\n  Could not find a package configuration file provided by \"c-ares\" with any\r\n  of the following names:\r\n\r\n    c-aresConfig.cmake\r\n    c-ares-config.cmake\r\n\r\n  Add the installation prefix of \"c-ares\" to CMAKE_PREFIX_PATH or set\r\n  \"c-ares_DIR\" to a directory containing one of the above files.  If \"c-ares\"\r\n  provides a separate development package or SDK, be sure it has been\r\n  installed.\r\nCall Stack (most recent call first):\r\n  cmake_modules/ThirdpartyToolchain.cmake:234 (find_package)\r\n  cmake_modules/ThirdpartyToolchain.cmake:2345 (resolve_dependency)\r\n  cmake_modules/ThirdpartyToolchain.cmake:155 (build_grpc)\r\n  cmake_modules/ThirdpartyToolchain.cmake:232 (build_dependency)\r\n  cmake_modules/ThirdpartyToolchain.cmake:2616 (resolve_dependency)\r\n  CMakeLists.txt:506 (include)\r\n\r\n\r\n-- Checking for module 'libcares'\r\n--   Found libcares, version 1.15.0\r\n-- Found c-aresAlt: /usr/lib/x86_64-linux-gnu/libcares.so  \r\n-- Providing CMake module for c-aresAlt\r\n-- Building gRPC from source\r\n-- Found hdfs.h at: /arrow/cpp/thirdparty/hadoop/include/hdfs.h\r\nBuilding Apache ORC from source\r\n-- Found ORC static library: /build/cpp/orc_ep-install/lib/liborc.a\r\n-- Found ORC headers: /build/cpp/orc_ep-install/include\r\nBuilding AWS C++ SDK from source\r\n-- Found CURL: /usr/lib/x86_64-linux-gnu/libcurl.so (found version \"7.68.0\")  \r\n-- Found AWS SDK headers: /build/cpp/awssdk_ep-install/include\r\n-- Found AWS SDK libraries: aws-cpp-sdk-identity-management;aws-cpp-sdk-sts;aws-cpp-sdk-cognito-identity;aws-cpp-sdk-s3;aws-cpp-sdk-core;AWS::aws-c-event-stream;AWS::aws-checksums;AWS::aws-c-common\r\n-- All bundled static libraries: arrow::protobuf::libprotobuf;jemalloc::jemalloc;absl::statusor;absl::status;absl::cord;absl::str_format_internal;absl::synchronization;absl::graphcycles_internal;absl::symbolize;absl::demangle_internal;absl::stacktrace;absl::debugging_internal;absl::malloc_internal;absl::time;absl::time_zone;absl::strings;absl::strings_internal;absl::throw_delegate;absl::int128;absl::base;absl::spinlock_wait;absl::bad_optional_access;absl::raw_logging_internal;gRPC::address_sorting;gRPC::gpr;gRPC::grpc;gRPC::grpcpp_for_bundling;gRPC::upb;orc::liborc;aws-cpp-sdk-identity-management;aws-cpp-sdk-sts;aws-cpp-sdk-cognito-identity;aws-cpp-sdk-s3;aws-cpp-sdk-core;AWS::aws-c-event-stream;AWS::aws-checksums;AWS::aws-c-common\r\n-- CMAKE_C_FLAGS:  -ggdb -O0  -Wall -Wno-conversion -Wno-deprecated-declarations -Wno-sign-conversion -Wno-unused-variable -Werror -fno-semantic-interposition -msse4.2 \r\n-- CMAKE_CXX_FLAGS:  -Wno-noexcept-type -Wno-subobject-linkage  -fdiagnostics-color=always -ggdb -O0  -Wall -Wno-conversion -Wno-deprecated-declarations -Wno-sign-conversion -Wno-unused-variable -Werror -fno-semantic-interposition -msse4.2 \r\n-- Looking for backtrace\r\n-- Looking for backtrace - found\r\n-- backtrace facility detected in default set of libraries\r\n-- Found Backtrace: /usr/include  \r\n-- Found CUDA: /usr (found version \"10.1\") \r\n-- Found Python3: /usr/local/bin/python (found version \"3.8.5\") found components: Interpreter Development NumPy \r\n-- Found Python3Alt: /usr/local/bin/python  \r\n-- Found LLVMAlt: 12.0.1  \r\n-- Using LLVMConfig.cmake in: /usr/lib/llvm-12/cmake\r\n-- Found llvm-link /usr/lib/llvm-12/bin/llvm-link\r\n-- Found clang /usr/lib/llvm-12/bin/clang-12\r\n-- Found OpenSSL: /usr/lib/x86_64-linux-gnu/libcrypto.so (found version \"1.1.1f\")  \r\n-- OpenSSL found with 1.1.1f version\r\n-- OpenSSL include dir: /usr/include\r\n-- ---------------------------------------------------------------------\r\n-- Arrow version:                                 4.0.1\r\n-- \r\n-- Build configuration summary:\r\n--   Generator: Ninja\r\n--   Build type: DEBUG\r\n--   Source directory: /arrow/cpp\r\n--   Install prefix: /usr/local\r\n--   Compile commands: /build/cpp/compile_commands.json\r\n-- \r\n-- Compile and link options:\r\n-- \r\n--   ARROW_CXXFLAGS=\"\" [default=\"\"]\r\n--       Compiler flags to append when compiling Arrow\r\n--   ARROW_BUILD_STATIC=OFF [default=ON]\r\n--       Build static libraries\r\n--   ARROW_BUILD_SHARED=ON [default=ON]\r\n--       Build shared libraries\r\n--   ARROW_PACKAGE_KIND=\"\" [default=\"\"]\r\n--       Arbitrary string that identifies the kind of package\r\n--       (for informational purposes)\r\n--   ARROW_GIT_ID=81ff679c47754692224f655dab32cc0936bb5f55 [default=\"\"]\r\n--       The Arrow git commit id (if any)\r\n--   ARROW_GIT_DESCRIPTION=apache-arrow-4.0.1-dirty [default=\"\"]\r\n--       The Arrow git commit description (if any)\r\n--   ARROW_NO_DEPRECATED_API=ON [default=OFF]\r\n--       Exclude deprecated APIs from build\r\n--   ARROW_USE_CCACHE=ON [default=ON]\r\n--       Use ccache when compiling (if available)\r\n--   ARROW_USE_LD_GOLD=OFF [default=OFF]\r\n--       Use ld.gold for linking on Linux (if available)\r\n--   ARROW_USE_PRECOMPILED_HEADERS=OFF [default=OFF]\r\n--       Use precompiled headers when compiling\r\n--   ARROW_SIMD_LEVEL=SSE4_2 [default=NONE|SSE4_2|AVX2|AVX512]\r\n--       Compile-time SIMD optimization level\r\n--   ARROW_RUNTIME_SIMD_LEVEL=MAX [default=NONE|SSE4_2|AVX2|AVX512|MAX]\r\n--       Max runtime SIMD optimization level\r\n--   ARROW_ARMV8_ARCH=armv8-a [default=armv8-a|armv8-a+crc+crypto]\r\n--       Arm64 arch and extensions\r\n--   ARROW_ALTIVEC=ON [default=ON]\r\n--       Build with Altivec if compiler has support\r\n--   ARROW_RPATH_ORIGIN=OFF [default=OFF]\r\n--       Build Arrow libraries with RATH set to $ORIGIN\r\n--   ARROW_INSTALL_NAME_RPATH=OFF [default=ON]\r\n--       Build Arrow libraries with install_name set to @rpath\r\n--   ARROW_GGDB_DEBUG=ON [default=ON]\r\n--       Pass -ggdb flag to debug builds\r\n-- \r\n-- Test and benchmark options:\r\n-- \r\n--   ARROW_BUILD_EXAMPLES=OFF [default=OFF]\r\n--       Build the Arrow examples\r\n--   ARROW_BUILD_TESTS=OFF [default=OFF]\r\n--       Build the Arrow googletest unit tests\r\n--   ARROW_ENABLE_TIMING_TESTS=ON [default=ON]\r\n--       Enable timing-sensitive tests\r\n--   ARROW_BUILD_INTEGRATION=OFF [default=OFF]\r\n--       Build the Arrow integration test executables\r\n--   ARROW_BUILD_BENCHMARKS=OFF [default=OFF]\r\n--       Build the Arrow micro benchmarks\r\n--   ARROW_BUILD_BENCHMARKS_REFERENCE=OFF [default=OFF]\r\n--       Build the Arrow micro reference benchmarks\r\n--   ARROW_TEST_LINKAGE=shared [default=shared|static]\r\n--       Linkage of Arrow libraries with unit tests executables.\r\n--   ARROW_FUZZING=OFF [default=OFF]\r\n--       Build Arrow Fuzzing executables\r\n--   ARROW_LARGE_MEMORY_TESTS=OFF [default=OFF]\r\n--       Enable unit tests which use large memory\r\n-- \r\n-- Lint options:\r\n-- \r\n--   ARROW_ONLY_LINT=OFF [default=OFF]\r\n--       Only define the lint and check-format targets\r\n--   ARROW_VERBOSE_LINT=OFF [default=OFF]\r\n--       If off, 'quiet' flags will be passed to linting tools\r\n--   ARROW_GENERATE_COVERAGE=OFF [default=OFF]\r\n--       Build with C++ code coverage enabled\r\n-- \r\n-- Checks options:\r\n-- \r\n--   ARROW_TEST_MEMCHECK=OFF [default=OFF]\r\n--       Run the test suite using valgrind --tool=memcheck\r\n--   ARROW_USE_ASAN=OFF [default=OFF]\r\n--       Enable Address Sanitizer checks\r\n--   ARROW_USE_TSAN=OFF [default=OFF]\r\n--       Enable Thread Sanitizer checks\r\n--   ARROW_USE_UBSAN=OFF [default=OFF]\r\n--       Enable Undefined Behavior sanitizer checks\r\n-- \r\n-- Project component options:\r\n-- \r\n--   ARROW_BUILD_UTILITIES=OFF [default=OFF]\r\n--       Build Arrow commandline utilities\r\n--   ARROW_COMPUTE=ON [default=OFF]\r\n--       Build the Arrow Compute Modules\r\n--   ARROW_CSV=ON [default=OFF]\r\n--       Build the Arrow CSV Parser Module\r\n--   ARROW_CUDA=ON [default=OFF]\r\n--       Build the Arrow CUDA extensions (requires CUDA toolkit)\r\n--   ARROW_DATASET=ON [default=OFF]\r\n--       Build the Arrow Dataset Modules\r\n--   ARROW_FILESYSTEM=ON [default=OFF]\r\n--       Build the Arrow Filesystem Layer\r\n--   ARROW_FLIGHT=ON [default=OFF]\r\n--       Build the Arrow Flight RPC System (requires GRPC, Protocol Buffers)\r\n--   ARROW_GANDIVA=ON [default=OFF]\r\n--       Build the Gandiva libraries\r\n--   ARROW_HDFS=ON [default=OFF]\r\n--       Build the Arrow HDFS bridge\r\n--   ARROW_HIVESERVER2=OFF [default=OFF]\r\n--       Build the HiveServer2 client and Arrow adapter\r\n--   ARROW_IPC=ON [default=ON]\r\n--       Build the Arrow IPC extensions\r\n--   ARROW_JEMALLOC=ON [default=ON]\r\n--       Build the Arrow jemalloc-based allocator\r\n--   ARROW_JNI=OFF [default=OFF]\r\n--       Build the Arrow JNI lib\r\n--   ARROW_JSON=ON [default=OFF]\r\n--       Build Arrow with JSON support (requires RapidJSON)\r\n--   ARROW_MIMALLOC=OFF [default=OFF]\r\n--       Build the Arrow mimalloc-based allocator\r\n--   ARROW_PARQUET=ON [default=OFF]\r\n--       Build the Parquet libraries\r\n--   ARROW_ORC=ON [default=OFF]\r\n--       Build the Arrow ORC adapter\r\n--   ARROW_PLASMA=ON [default=OFF]\r\n--       Build the plasma object store along with Arrow\r\n--   ARROW_PLASMA_JAVA_CLIENT=OFF [default=OFF]\r\n--       Build the plasma object store java client\r\n--   ARROW_PYTHON=ON [default=OFF]\r\n--       Build the Arrow CPython extensions\r\n--   ARROW_S3=ON [default=OFF]\r\n--       Build Arrow with S3 support (requires the AWS SDK for C++)\r\n--   ARROW_TENSORFLOW=OFF [default=OFF]\r\n--       Build Arrow with TensorFlow support enabled\r\n--   ARROW_TESTING=OFF [default=OFF]\r\n--       Build the Arrow testing libraries\r\n-- \r\n-- Thirdparty toolchain options:\r\n-- \r\n--   ARROW_DEPENDENCY_SOURCE=SYSTEM [default=AUTO|BUNDLED|SYSTEM|CONDA|VCPKG|BREW]\r\n--       Method to use for acquiring arrow's build dependencies\r\n--   ARROW_VERBOSE_THIRDPARTY_BUILD=OFF [default=OFF]\r\n--       Show output from ExternalProjects rather than just logging to files\r\n--   ARROW_DEPENDENCY_USE_SHARED=ON [default=ON]\r\n--       Link to shared libraries\r\n--   ARROW_BOOST_USE_SHARED=ON [default=ON]\r\n--       Rely on boost shared libraries where relevant\r\n--   ARROW_BROTLI_USE_SHARED=ON [default=ON]\r\n--       Rely on Brotli shared libraries where relevant\r\n--   ARROW_BZ2_USE_SHARED=ON [default=ON]\r\n--       Rely on Bz2 shared libraries where relevant\r\n--   ARROW_GFLAGS_USE_SHARED=ON [default=ON]\r\n--       Rely on GFlags shared libraries where relevant\r\n--   ARROW_GRPC_USE_SHARED=ON [default=ON]\r\n--       Rely on gRPC shared libraries where relevant\r\n--   ARROW_LZ4_USE_SHARED=ON [default=ON]\r\n--       Rely on lz4 shared libraries where relevant\r\n--   ARROW_OPENSSL_USE_SHARED=ON [default=ON]\r\n--       Rely on OpenSSL shared libraries where relevant\r\n--   ARROW_PROTOBUF_USE_SHARED=ON [default=ON]\r\n--       Rely on Protocol Buffers shared libraries where relevant\r\n--   ARROW_THRIFT_USE_SHARED=ON [default=ON]\r\n--       Rely on thrift shared libraries where relevant\r\n--   ARROW_UTF8PROC_USE_SHARED=ON [default=ON]\r\n--       Rely on utf8proc shared libraries where relevant\r\n--   ARROW_SNAPPY_USE_SHARED=ON [default=ON]\r\n--       Rely on snappy shared libraries where relevant\r\n--   ARROW_UTF8PROC_USE_SHARED=ON [default=ON]\r\n--       Rely on utf8proc shared libraries where relevant\r\n--   ARROW_ZSTD_USE_SHARED=ON [default=ON]\r\n--       Rely on zstd shared libraries where relevant\r\n--   ARROW_USE_GLOG=OFF [default=OFF]\r\n--       Build libraries with glog support for pluggable logging\r\n--   ARROW_WITH_BACKTRACE=ON [default=ON]\r\n--       Build with backtrace support\r\n--   ARROW_WITH_BROTLI=ON [default=OFF]\r\n--       Build with Brotli compression\r\n--   ARROW_WITH_BZ2=ON [default=OFF]\r\n--       Build with BZ2 compression\r\n--   ARROW_WITH_LZ4=ON [default=OFF]\r\n--       Build with lz4 compression\r\n--   ARROW_WITH_SNAPPY=ON [default=OFF]\r\n--       Build with Snappy compression\r\n--   ARROW_WITH_ZLIB=ON [default=OFF]\r\n--       Build with zlib compression\r\n--   ARROW_WITH_ZSTD=ON [default=OFF]\r\n--       Build with zstd compression\r\n--   ARROW_WITH_UTF8PROC=ON [default=ON]\r\n--       Build with support for Unicode properties using the utf8proc library\r\n--       (only used if ARROW_COMPUTE is ON)\r\n--   ARROW_WITH_RE2=ON [default=ON]\r\n--       Build with support for regular expressions using the re2 library\r\n--       (only used if ARROW_COMPUTE or ARROW_GANDIVA is ON)\r\n-- \r\n-- Parquet options:\r\n-- \r\n--   PARQUET_MINIMAL_DEPENDENCY=OFF [default=OFF]\r\n--       Depend only on Thirdparty headers to build libparquet.\r\n--       Always OFF if building binaries\r\n--   PARQUET_BUILD_EXECUTABLES=ON [default=OFF]\r\n--       Build the Parquet executable CLI tools. Requires static libraries to be built.\r\n--   PARQUET_BUILD_EXAMPLES=ON [default=OFF]\r\n--       Build the Parquet examples. Requires static libraries to be built.\r\n--   PARQUET_REQUIRE_ENCRYPTION=ON [default=OFF]\r\n--       Build support for encryption. Fail if OpenSSL is not found\r\n-- \r\n-- Gandiva options:\r\n-- \r\n--   ARROW_GANDIVA_JAVA=OFF [default=OFF]\r\n--       Build the Gandiva JNI wrappers\r\n--   ARROW_GANDIVA_STATIC_LIBSTDCPP=OFF [default=OFF]\r\n--       Include -static-libstdc++ -static-libgcc when linking with\r\n--       Gandiva static libraries\r\n--   ARROW_GANDIVA_PC_CXX_FLAGS=\"\" [default=\"\"]\r\n--       Compiler flags to append when pre-compiling Gandiva operations\r\n-- \r\n-- Advanced developer options:\r\n-- \r\n--   ARROW_EXTRA_ERROR_CONTEXT=OFF [default=OFF]\r\n--       Compile with extra error context (line numbers, code)\r\n--   ARROW_OPTIONAL_INSTALL=OFF [default=OFF]\r\n--       If enabled install ONLY targets that have already been built. Please be\r\n--       advised that if this is enabled 'install' will fail silently on components\r\n--       that have not been built\r\n--   Outputting build configuration summary to /build/cpp/cmake_summary.json\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /build/cpp\r\n+ '[' '!' -z '' ']'\r\n+ cmake --build . --target install\r\n[4/190] Performing download step (download, verify and extract) for 'jemalloc_ep'\r\n-- jemalloc_ep download command succeeded.  See also /build/cpp/jemalloc_ep-prefix/src/jemalloc_ep-stamp/jemalloc_ep-download-*.log\r\n[5/190] Performing download step (download, verify and extract) for 'aws_c_common_ep'\r\n-- aws_c_common_ep download command succeeded.  See also /build/cpp/aws_c_common_ep-prefix/src/aws_c_common_ep-stamp/aws_c_common_ep-download-*.log\r\n[10/190] Performing download step (download, verify and extract) for 'absl_ep'\r\n-- absl_ep download command succeeded.  See also /build/cpp/absl_ep-prefix/src/absl_ep-stamp/absl_ep-download-*.log\r\n[13/190] Performing configure step for 'absl_ep'\r\n-- absl_ep configure command succeeded.  See also /build/cpp/absl_ep-prefix/src/absl_ep-stamp/absl_ep-configure-*.log\r\n[14/190] Performing configure step for 'aws_c_common_ep'\r\n-- aws_c_common_ep configure command succeeded.  See also /build/cpp/aws_c_common_ep-prefix/src/aws_c_common_ep-stamp/aws_c_common_ep-configure-*.log\r\n[15/190] Performing configure step for 'jemalloc_ep'\r\n-- jemalloc_ep configure command succeeded.  See also /build/cpp/jemalloc_ep-prefix/src/jemalloc_ep-stamp/jemalloc_ep-configure-*.log\r\n[16/190] Performing build step for 'aws_c_common_ep'\r\n-- aws_c_common_ep build command succeeded.  See also /build/cpp/aws_c_common_ep-prefix/src/aws_c_common_ep-stamp/aws_c_common_ep-build-*.log\r\n[17/190] Performing install step for 'aws_c_common_ep'\r\n-- aws_c_common_ep install command succeeded.  See also /build/cpp/aws_c_common_ep-prefix/src/aws_c_common_ep-stamp/aws_c_common_ep-install-*.log\r\n[20/190] Performing download step (download, verify and extract) for 'xsimd_ep'\r\n-- xsimd_ep download command succeeded.  See also /build/cpp/src/xsimd_ep-stamp/xsimd_ep-download-*.log\r\n[23/190] Performing configure step for 'xsimd_ep'\r\n-- xsimd_ep configure command succeeded.  See also /build/cpp/src/xsimd_ep-stamp/xsimd_ep-configure-*.log\r\n[24/190] Performing build step for 'xsimd_ep'\r\n-- xsimd_ep build command succeeded.  See also /build/cpp/src/xsimd_ep-stamp/xsimd_ep-build-*.log\r\n[25/190] Performing install step for 'xsimd_ep'\r\n-- xsimd_ep install command succeeded.  See also /build/cpp/src/xsimd_ep-stamp/xsimd_ep-install-*.log\r\n[28/190] Performing download step (download, verify and extract) for 'protobuf_ep'\r\n-- protobuf_ep download command succeeded.  See also /build/cpp/protobuf_ep-prefix/src/protobuf_ep-stamp/protobuf_ep-download-*.log\r\n[31/190] Performing configure step for 'protobuf_ep'\r\n-- protobuf_ep configure command succeeded.  See also /build/cpp/protobuf_ep-prefix/src/protobuf_ep-stamp/protobuf_ep-configure-*.log\r\n[32/190] Performing build step for 'absl_ep'\r\n-- absl_ep build command succeeded.  See also /build/cpp/absl_ep-prefix/src/absl_ep-stamp/absl_ep-build-*.log\r\n[33/190] Performing install step for 'absl_ep'\r\n-- absl_ep install command succeeded.  See also /build/cpp/absl_ep-prefix/src/absl_ep-stamp/absl_ep-install-*.log\r\n[36/190] Performing download step (download, verify and extract) for 'aws_checksums_ep'\r\n-- aws_checksums_ep download command succeeded.  See also /build/cpp/aws_checksums_ep-prefix/src/aws_checksums_ep-stamp/aws_checksums_ep-download-*.log\r\n[39/190] Performing configure step for 'aws_checksums_ep'\r\n-- aws_checksums_ep configure command succeeded.  See also /build/cpp/aws_checksums_ep-prefix/src/aws_checksums_ep-stamp/aws_checksums_ep-configure-*.log\r\n[40/190] Performing build step for 'aws_checksums_ep'\r\n-- aws_checksums_ep build command succeeded.  See also /build/cpp/aws_checksums_ep-prefix/src/aws_checksums_ep-stamp/aws_checksums_ep-build-*.log\r\n[41/190] Performing install step for 'aws_checksums_ep'\r\n-- aws_checksums_ep install command succeeded.  See also /build/cpp/aws_checksums_ep-prefix/src/aws_checksums_ep-stamp/aws_checksums_ep-install-*.log\r\n[44/190] Performing download step (download, verify and extract) for 'aws_c_event_stream_ep'\r\n-- aws_c_event_stream_ep download command succeeded.  See also /build/cpp/aws_c_event_stream_ep-prefix/src/aws_c_event_stream_ep-stamp/aws_c_event_stream_ep-download-*.log\r\n[47/190] Performing configure step for 'aws_c_event_stream_ep'\r\n-- aws_c_event_stream_ep configure command succeeded.  See also /build/cpp/aws_c_event_stream_ep-prefix/src/aws_c_event_stream_ep-stamp/aws_c_event_stream_ep-configure-*.log\r\n[48/190] Performing build step for 'aws_c_event_stream_ep'\r\n-- aws_c_event_stream_ep build command succeeded.  See also /build/cpp/aws_c_event_stream_ep-prefix/src/aws_c_event_stream_ep-stamp/aws_c_event_stream_ep-build-*.log\r\n[49/190] Performing install step for 'aws_c_event_stream_ep'\r\n-- aws_c_event_stream_ep install command succeeded.  See also /build/cpp/aws_c_event_stream_ep-prefix/src/aws_c_event_stream_ep-stamp/aws_c_event_stream_ep-install-*.log\r\n[52/190] Performing download step (download, verify and extract) for 'awssdk_ep'\r\n-- awssdk_ep download command succeeded.  See also /build/cpp/awssdk_ep-prefix/src/awssdk_ep-stamp/awssdk_ep-download-*.log\r\n[55/190] Performing configure step for 'awssdk_ep'\r\n-- awssdk_ep configure command succeeded.  See also /build/cpp/awssdk_ep-prefix/src/awssdk_ep-stamp/awssdk_ep-configure-*.log\r\n[56/190] Performing build step for 'jemalloc_ep'\r\n-- jemalloc_ep build command succeeded.  See also /build/cpp/jemalloc_ep-prefix/src/jemalloc_ep-stamp/jemalloc_ep-build-*.log\r\n[57/190] Performing install step for 'jemalloc_ep'\r\n-- jemalloc_ep install command succeeded.  See also /build/cpp/jemalloc_ep-prefix/src/jemalloc_ep-stamp/jemalloc_ep-install-*.log\r\n[61/190] Performing build step for 'awssdk_ep'\r\nFAILED: awssdk_ep-prefix/src/awssdk_ep-stamp/awssdk_ep-build awssdk_ep-install/lib/libaws-cpp-sdk-cognito-identity.a awssdk_ep-install/lib/libaws-cpp-sdk-core.a awssdk_ep-install/lib/libaws-cpp-sdk-identity-management.a awssdk_ep-install/lib/libaws-cpp-sdk-s3.a awssdk_ep-install/lib/libaws-cpp-sdk-sts.a \r\ncd /build/cpp/awssdk_ep-prefix/src/awssdk_ep-build && /usr/bin/cmake -P /build/cpp/awssdk_ep-prefix/src/awssdk_ep-stamp/awssdk_ep-build-DEBUG.cmake && /usr/bin/cmake -E touch /build/cpp/awssdk_ep-prefix/src/awssdk_ep-stamp/awssdk_ep-build\r\nCMake Error at /build/cpp/awssdk_ep-prefix/src/awssdk_ep-stamp/awssdk_ep-build-DEBUG.cmake:37 (message):\r\n  Command failed: 1\r\n\r\n   '/usr/bin/cmake' '--build' '.'\r\n\r\n  See also\r\n\r\n    /build/cpp/awssdk_ep-prefix/src/awssdk_ep-stamp/awssdk_ep-build-*.log\r\n\r\n\r\n-- stdout output is:\r\n[1/50] Building CXX object aws-cpp-sdk-transfer/CMakeFiles/aws-cpp-sdk-transfer.dir/source/transfer/TransferHandle.cpp.o\r\n[2/50] Building CXX object aws-cpp-sdk-config/CMakeFiles/aws-cpp-sdk-config.dir/ub_CONFIG.cpp.o\r\nFAILED: aws-cpp-sdk-config/CMakeFiles/aws-cpp-sdk-config.dir/ub_CONFIG.cpp.o \r\n/usr/bin/c++  -DAWS_SDK_VERSION_MAJOR=1 -DAWS_SDK_VERSION_MINOR=8 -DAWS_SDK_VERSION_PATCH=133 -DENABLE_CURL_CLIENT -DENABLE_OPENSSL_ENCRYPTION -DHAS_PATHCONF -DHAS_UMASK -DPLATFORM_LINUX -I/build/cpp/awssdk_ep-prefix/src/awssdk_ep/aws-cpp-sdk-config/include -I/build/cpp/awssdk_ep-prefix/src/awssdk_ep/aws-cpp-sdk-core/include -isystem /build/cpp/awssdk_ep-install/include -fdiagnostics-color=always -ggdb -O0 -g -fPIC -O3 -DNDEBUG   -fno-exceptions -std=c++11 -fPIC -s -Wall -Werror -pedantic -Wextra -pthread -MD -MT aws-cpp-sdk-config/CMakeFiles/aws-cpp-sdk-config.dir/ub_CONFIG.cpp.o -MF aws-cpp-sdk-config/CMakeFiles/aws-cpp-sdk-config.dir/ub_CONFIG.cpp.o.d -o aws-cpp-sdk-config/CMakeFiles/aws-cpp-sdk-config.dir/ub_CONFIG.cpp.o -c aws-cpp-sdk-config/ub_CONFIG.cpp\r\nc++: fatal error: Killed signal terminated program cc1plus\r\ncompilation terminated.\r\n[3/50] Building CXX object aws-cpp-sdk-transfer/CMakeFiles/aws-cpp-sdk-transfer.dir/source/transfer/TransferManager.cpp.o\r\n[4/50] Building CXX object aws-cpp-sdk-s3/CMakeFiles/aws-cpp-sdk-s3.dir/ub_S3.cpp.o\r\nFAILED: aws-cpp-sdk-s3/CMakeFiles/aws-cpp-sdk-s3.dir/ub_S3.cpp.o \r\n/usr/bin/c++  -DAWS_SDK_VERSION_MAJOR=1 -DAWS_SDK_VERSION_MINOR=8 -DAWS_SDK_VERSION_PATCH=133 -DENABLE_CURL_CLIENT -DENABLE_OPENSSL_ENCRYPTION -DHAS_PATHCONF -DHAS_UMASK -DPLATFORM_LINUX -I/build/cpp/awssdk_ep-prefix/src/awssdk_ep/aws-cpp-sdk-s3/include -I/build/cpp/awssdk_ep-prefix/src/awssdk_ep/aws-cpp-sdk-core/include -isystem /build/cpp/awssdk_ep-install/include -fdiagnostics-color=always -ggdb -O0 -g -fPIC -O3 -DNDEBUG   -fno-exceptions -std=c++11 -fPIC -s -Wall -Werror -pedantic -Wextra -pthread -MD -MT aws-cpp-sdk-s3/CMakeFiles/aws-cpp-sdk-s3.dir/ub_S3.cpp.o -MF aws-cpp-sdk-s3/CMakeFiles/aws-cpp-sdk-s3.dir/ub_S3.cpp.o.d -o aws-cpp-sdk-s3/CMakeFiles/aws-cpp-sdk-s3.dir/ub_S3.cpp.o -c aws-cpp-sdk-s3/ub_S3.cpp\r\nc++: fatal error: Killed signal terminated program cc1plus\r\ncompilation terminated.\r\nninja: build stopped: subcommand failed.\r\n\r\n-- stderr output is:\r\n\r\nCMake Error at /build/cpp/awssdk_ep-prefix/src/awssdk_ep-stamp/awssdk_ep-build-DEBUG.cmake:47 (message):\r\n  Stopping after outputting logs.\r\n\r\n\r\n[63/190] Performing build step for 'protobuf_ep'\r\n-- protobuf_ep build command succeeded.  See also /build/cpp/protobuf_ep-prefix/src/protobuf_ep-stamp/protobuf_ep-build-*.log\r\nninja: build stopped: subcommand failed.\r\n\r\nreal    357m33.440s\r\nuser    20m12.218s\r\nsys     27m0.748s\r\nERROR: 1\r\nError: `docker-compose --file /Users/jorgecarleitao/projects/arrow/docker-compose.yml run --rm -e ARROW_DOCS_VERSION=4.0.1 -e UBUNTU=20.10 --volume /Users/jorgecarleitao/projects/arrow/dev/release/../../../arrow-site/docs:/build/docs ubuntu-docs` exited with a non-zero exit code 1, see the process log above.\r\n\r\nThe docker-compose command was invoked with the following parameters:\r\n\r\nDefaults defined in .env:\r\n  ARCH: amd64\r\n  ARCH_ALIAS: x86_64\r\n  ARCH_SHORT_ALIAS: x64\r\n  ARROW_R_DEV: TRUE\r\n  BUILDKIT_INLINE_CACHE: 1\r\n  CLANG_TOOLS: 8\r\n  COMPOSE_DOCKER_CLI_BUILD: 1\r\n  CUDA: 9.1\r\n  DASK: latest\r\n  DEBIAN: 10\r\n  DEVTOOLSET_VERSION: -1\r\n  DOCKER_BUILDKIT: 1\r\n  DOCKER_VOLUME_PREFIX: \r\n  DOTNET: 3.1\r\n  FEDORA: 33\r\n  GO: 1.15\r\n  HDFS: 3.2.1\r\n  JDK: 8\r\n  KARTOTHEK: latest\r\n  LLVM: 12\r\n  MAVEN: 3.5.4\r\n  NODE: 14\r\n  NUMPY: latest\r\n  PANDAS: latest\r\n  PYTHON: 3.6\r\n  R: 4.0\r\n  REPO: apache/arrow-dev\r\n  RUST: nightly-2021-03-24\r\n  R_IMAGE: ubuntu-gcc-release\r\n  R_ORG: rhub\r\n  R_TAG: latest\r\n  SPARK: master\r\n  TURBODBC: latest\r\n  UBUNTU: 20.04\r\n  ULIMIT_CORE: -1\r\n  VCPKG: fced4bef1606260f110d74de1ae1975c2b9ac549\r\n\r\nArchery was called with:\r\n```\r\n",
        "created_at": "2021-06-09T04:49:04.000Z",
        "updated_at": "2021-06-09T16:49:24.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Developer Tools",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2021-06-09T06:16:50.259Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13017?focusedCommentId=17359796) by Kouhei Sutou (kou):*\n> 1. cmake is not being able to find \"c-ares\" nor \"re2\"\r\n\r\nThey are not problems. Our CMake configuration tries finding \"c-ares\" and \"re2\" by CMake package first. If they are failed (this case), our CMake configuration tries finding \"c-ares\" and \"re2\" by pkg-config as fallback. In this case, we found \"c-ares\" and \"re2\" by pkg-config. So they aren't problems.\r\n\r\n>  2. FAILED: aws-cpp-sdk-config/CMakeFiles/aws-cpp-sdk-config.dir/ub_CONFIG.cpp.o\r\n\r\nDo you have enough memory? I saw the following error when build environment (such as Travis CI) doesn't have enough memory:\r\n\r\n> c++: fatal error: Killed signal terminated program cc1plus\r\n"
        },
        {
            "created_at": "2021-06-09T16:49:24.793Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-13017?focusedCommentId=17360196) by Jorge Leit\u00e3o (jorgecarleitao):*\nI do not know. I will try from another machine."
        }
    ]
}