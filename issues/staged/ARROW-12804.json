{
    "issue": {
        "title": "[C++] Array methods IsNull and IsValid is confused for NullType",
        "body": "***Note**: This issue was originally created as [ARROW-12804](https://issues.apache.org/jira/browse/ARROW-12804). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI'm not sure if this is a bug or by design.\r\n\r\nArray's method\u00a0`IsNull()` and `IsValid()` is implemented as follows:\r\n```c++\n\r\n/// \\brief Return true if value at index is null. Does not boundscheck\r\nbool IsNull(int64_t i) const {\r\n  return null_bitmap_data_ != NULLPTR &&\r\n         !BitUtil::GetBit(null_bitmap_data_, i + data_->offset);\r\n}\r\n\r\n/// \\brief Return true if value at index is valid (not null). Does not\r\n/// boundscheck\r\nbool IsValid(int64_t i) const {\r\n  return null_bitmap_data_ == NULLPTR ||\r\n         BitUtil::GetBit(null_bitmap_data_, i + data_->offset);\r\n}\r\n```\r\nAccording to the doc, \"Arrays having a 0 null count may choose to not allocate the null bitmap\". But a null type array doesn't have a\u00a0null bitmap. So for a null type array,\u00a0`IsNull()` always returns false,\u00a0`IsValid()` always returns true.\r\n\r\nIf this is by design, maybe additional comments and docs should be added.",
        "created_at": "2021-05-17T04:03:40.000Z",
        "updated_at": "2021-07-22T12:17:03.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-07-21T14:46:26.000Z"
    },
    "comments": [
        {
            "created_at": "2021-07-21T14:46:26.099Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12804?focusedCommentId=17384929) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 10756\n<https://github.com/apache/arrow/pull/10756>"
        }
    ]
}