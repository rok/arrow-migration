{
    "issue": {
        "title": "[Rust] Remove specialisation from Rust parquet",
        "body": "***Note**: This issue was originally created as [ARROW-10636](https://issues.apache.org/jira/browse/ARROW-10636). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThis is a very initial attempt at removing the specialization features from the Rust Parquet implementation.\r\n\r\nThe specialisation is too complex to be covered by `min_specialization` and requires a bit of reworking in the crate.\r\n\r\nRight now the code dispatches in sub-traits and methods on the Parquet type, and uses a combination of trait abuse, macros and transmutes to eliminate the feature.\r\n\r\nI have broken this up into several commits ranging from the simplest removals (which could probably be taken fairly easily) to the most ugly and complex.\r\n\r\nI am not stoked on the `transmute` abuse, and I think another take (or follow up) should be taken to remove as many as possible in the code.\r\n\r\nThe general trait for `DataType::T` has been made a private sealed trait to make it impossible to implement external to the Parquet crate, this is intentional as I dont think many of the public interfaces are sensible for end users to be able to implement.\r\n# TODO:\r\n \\* Purge the added `std::mem::transmute`s if possible\r\n \\* Refine and rationalise the `unimplemented!` implementations\r\n \\* Performance test?",
        "created_at": "2020-11-18T03:36:01.000Z",
        "updated_at": "2021-02-24T01:51:20.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Rust",
            "Type: task"
        ],
        "closed": true,
        "closed_at": "2020-12-15T20:58:14.000Z"
    },
    "comments": [
        {
            "created_at": "2020-11-18T16:21:14.335Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10636?focusedCommentId=17234775) by Andrew Lamb (alamb):*\nRelated to (or perhaps a dupe) of ARROW-6717\r\n"
        },
        {
            "created_at": "2020-12-15T20:58:14.722Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10636?focusedCommentId=17249927) by Andrew Lamb (alamb):*\nIssue resolved by pull request 8698\n<https://github.com/apache/arrow/pull/8698>"
        },
        {
            "created_at": "2021-02-24T01:51:20.307Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10636?focusedCommentId=17289482) by Greg Bowyer (gbowyer@fastmail.co.uk):*\nI am excited to see what you get, it does occur to me maybe we should run a bench on ARM, but I think at this point might be over-analyzing everything :S\n\n"
        }
    ]
}