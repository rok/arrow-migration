{
    "issue": {
        "title": "[Go][Parquet] PlainFixedLenByteArrayEncoder behaves differently from DictFixedLenByteArrayEncoder with null values where schema has Nullable: false",
        "body": "***Note**: This issue was originally created as [ARROW-17133](https://issues.apache.org/jira/browse/ARROW-17133). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nI have created a small repro to illustrate this bug: https://gist.github.com/phillipleblanc/5e3e2d0e6914d276cf9fd79e019581de\r\n\r\nWhen writing a Decimal128 array to a Parquet file the pqarrow package will prefer to use DictFixedLenByteArrayEncoder. If the size of the array goes over some threshold, it will switch to using PlainFixedLenByteArrayEncoder.\r\n\r\nThe DictFixedLenByteArrayEncoder tolerates null values in a Decimal128 array with the arrow schema set to Nullable: false, however the PlainFixedLenByteArrayEncoder will not tolerate null values and will panic.\r\n\r\nHaving null values in an array marked as non-nullable is an issue in the user code - however, it was surprising that my buggy code was working some times and not working other times. I would expect the PlainFixedLen encoder to handle nulls the same way as the DictFixedLen encoder or for the DictFixedLen encoder to panic.\r\n\r\nAn observation is that most other array types handle nulls with the schema marked as non-nullable when writing to Parquet; this was the first instance I found in the pqarrow package where having the Arrow schema marked as Nullable was necessary for Parquet writing arrays with null values. Again, debatable if this is desirable or not.",
        "created_at": "2022-07-20T02:51:02.000Z",
        "updated_at": "2022-07-20T02:51:50.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Go",
            "Component: Parquet",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": []
}