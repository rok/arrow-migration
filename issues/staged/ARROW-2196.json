{
    "issue": {
        "title": "[C++] Consider quarantining platform code with dependency on non-header Boost code",
        "body": "***Note**: This issue was originally created as [ARROW-2196](https://issues.apache.org/jira/browse/ARROW-2196). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nsee discussion in ARROW-2193 for the motivation",
        "created_at": "2018-02-21T22:53:01.000Z",
        "updated_at": "2019-11-22T00:48:26.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-11-22T00:48:26.000Z"
    },
    "comments": [
        {
            "created_at": "2018-02-24T18:37:28.175Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2196?focusedCommentId=16375724) by Uwe Korn (uwe):*\nWhat should we do here? Link Boost differently? Set `--as-needed` during the build? Have our own namespaced boost version?\r\n\r\nFor conda-forge based builds, I would only make sure to set `--as-needed`. In the case of the `manylinux1` wheel, we should actually switch to a namespaced Boost as we're probably not the sole provider of Boost in the stack. This is probably always a case-by-case decision."
        },
        {
            "created_at": "2019-09-17T15:27:07.678Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2196?focusedCommentId=16931558) by Antoine Pitrou (apitrou):*\nAre we still bothered with this? `boost::filesystem` has important functionality that would be non-trivial (though possible) to reimplement from scratch."
        },
        {
            "created_at": "2019-09-18T20:30:30.353Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2196?focusedCommentId=16932794) by Wes McKinney (wesm):*\nI think we should make the arrow/filesystem code optional with `ARROW_FILESYSTEM=ON/OFF` and try to avoid other usages of boost::filesystem when producing a barebones libarrow, per mailing list discussion"
        },
        {
            "created_at": "2019-09-18T20:41:05.664Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2196?focusedCommentId=16932817) by Antoine Pitrou (apitrou):*\nIf we avoid other usages of boost::filesystem then it should be relatively easy to remove uses in arrow::fs as well."
        },
        {
            "created_at": "2019-11-14T13:17:26.390Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2196?focusedCommentId=16974243) by Antoine Pitrou (apitrou):*\nIs there something left to do here?"
        },
        {
            "created_at": "2019-11-22T00:48:26.689Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2196?focusedCommentId=16979735) by Wes McKinney (wesm):*\nBoost is no longer a core build dependency"
        }
    ]
}