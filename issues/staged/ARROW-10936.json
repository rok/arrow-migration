{
    "issue": {
        "title": "[Python] support dateutil timezones ",
        "body": "***Note**: This issue was originally created as [ARROW-10936](https://issues.apache.org/jira/browse/ARROW-10936). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nHere are two main reasons:\r\n1. As of Python 3.6, the\u00a0[tzinfo documentation ](https://docs.python.org/3/library/datetime.html#timezone-objects)\u00a0recommends\u00a0`dateutil.tz`\u00a0rather than\u00a0`pytz`\u00a0as an IANA time zone provider.\n1. Pandas supports dateutil timezones.\n   \n   When having a pandas DataFrame that uses a dateutil timezone,\u00a0 you get an error.\u00a0\n   \n   Below is a code sample:\n   ```python\n   \n   import dateutil\n   tz = dateutil.tz.gettz('Asia/Shanghai')\n   df = pd.DataFrame({'a': list(range(1, 4)), 'b': pd.date_range('20130101', periods=3, tz=tz)})\n   df.to_feather('df.feather')\n   ```\n   Errors:\n   ```java\n   \n   ArrowInvalid: ('Object returned by tzinfo.utcoffset(None) is not an instance of datetime.timedelta', \"Conversion failed for column b with type datetime64[ns, tzfile('/usr/share/zoneinfo/Asia/Shanghai')]\")\n   ```\n   \u00a0",
        "created_at": "2020-12-16T05:13:50.000Z",
        "updated_at": "2020-12-16T08:38:10.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2020-12-16T08:38:10.000Z"
    },
    "comments": [
        {
            "created_at": "2020-12-16T08:37:57.913Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-10936?focusedCommentId=17250170) by Joris Van den Bossche (jorisvandenbossche):*\n`[~ericdu]` Thanks for the report. This is indeed something we should add. \r\n\r\nWe already have ARROW-5248 about this as well, so closing this issue as a duplicate"
        }
    ]
}