{
    "issue": {
        "title": "[R] Smooth out handling of data.frame and StructScalar",
        "body": "***Note**: This issue was originally created as [ARROW-14828](https://issues.apache.org/jira/browse/ARROW-14828). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nCurrently we have \r\n\r\n```R\n\r\narrow::Array$create(data.frame(col = 1:2))\r\n#> StructArray\r\n#> <struct<col: int32>>\r\n#> -- is_valid: all not null\r\n#> -- child 0 type: int32\r\n#>   [\r\n#>     1,\r\n#>     2\r\n#>   ]\r\n```\r\n\r\n\r\n\u2026and \r\n\r\n```R\n\r\narrow::Scalar$create(data.frame(col = 1L))\r\n#> StructScalar\r\n#> {col:int32 = 1}\r\n```\r\n\r\n\r\n\u2026but Scalar truncates the data.frame to the first row without warning \r\n\r\n```R\n\r\narrow::Scalar$create(data.frame(col = 1:2))\r\n#> StructScalar\r\n#> {col:int32 = 1}\r\nas.vector(arrow::Scalar$create(data.frame(col = 1:2)))\r\n#> # A tibble: 1 \u00d7 1\r\n#>     col\r\n#>   <int>\r\n#> 1     1\r\n```\r\n\r\n\r\n\u2026and there is no `as.data.frame()` method for the scalar type (whereas there is `as.integer()` and family and `as.data.frame()` for the StructArray type) \r\n\r\n```R\n\r\nas.data.frame(arrow::Scalar$create(data.frame(col = 1L)))\r\n#> Error in as.data.frame.default(arrow::Scalar$create(data.frame(col = 1L))): cannot coerce class 'c(\"StructScalar\", \"Scalar\", \"ArrowDatum\", \"ArrowObject\", \"R6\"' to a data.frame\r\nas.data.frame(arrow::Array$create(data.frame(col = 1L)))\r\n#> # A tibble: 1 \u00d7 1\r\n#>     col\r\n#>   <int>\r\n#> 1     1\r\nas.integer(arrow::Scalar$create(1L))\r\n#> [1] 1\r\n```\r\n",
        "created_at": "2021-11-24T13:11:00.000Z",
        "updated_at": "2021-11-24T13:11:00.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": []
}