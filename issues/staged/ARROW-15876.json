{
    "issue": {
        "title": "[FlightRPC][Java] CallbackBackpressureStrategy should not rely on listener.isReady()",
        "body": "***Note**: This issue was originally created as [ARROW-15876](https://issues.apache.org/jira/browse/ARROW-15876). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nAccording to the spec for <https://grpc.github.io/grpc-java/javadoc/io/grpc/stub/CallStreamObserver.html#setOnReadyHandler-java.lang.Runnable-> , we can get into a state where the ready flag on the listener has already switched back to false by the time we execute the on ready handler.\r\n\r\nWe currently use the listener's ready flag after the ready handler to check if we received a spurious wake, but it's not reliable because of this. Instead we should use our own readiness flag that gets set within a synchronized block local to the CallbackBackpressureStrategy.",
        "created_at": "2022-03-09T00:21:48.000Z",
        "updated_at": "2022-03-09T00:21:48.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: FlightRPC",
            "Component: Java",
            "Type: bug"
        ],
        "closed": false
    },
    "comments": []
}