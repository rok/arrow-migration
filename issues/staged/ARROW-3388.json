{
    "issue": {
        "title": "[C++][Dataset] Automatically detect\u00a0boolean partition columns",
        "body": "***Note**: This issue was originally created as [ARROW-3388](https://issues.apache.org/jira/browse/ARROW-3388). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nSaving a `ParquetDataset` using a boolean column as a partitioning column will store `True/False` as the values in the path. On reload these columns will then be string columns with the values `'True'`\u00a0and `'False'`.",
        "created_at": "2018-10-01T16:18:26.000Z",
        "updated_at": "2020-11-13T15:12:22.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2020-04-28T09:25:58.481Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3388?focusedCommentId=17094329) by Joris Van den Bossche (jorisvandenbossche):*\nAn update on this issue: also with the new datasets API, they get read back as strings. \r\n\r\nNow, I am not fully sure we necessarily should automatically infer True/False string values. With the new API you can also specify the schema of the partition columns, which seems the general solution for this. However, this also does not work yet, as it just gives nulls (will open a separate issue about that, since it is not specific to booleans)\r\n\r\n"
        },
        {
            "created_at": "2020-04-28T09:36:37.991Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3388?focusedCommentId=17094334) by Joris Van den Bossche (jorisvandenbossche):*\nCorrection: it actually does work with specifying a schema (I just forgot to specify `flavor=\"hive\"` for my example)\r\n\r\n```python\n\r\n# create partitioned table with boolean partition keys\r\npath = pathlib.Path(\".\") / \"dataset_boolean_partition\"\r\npath.mkdir(exist_ok=True)\r\ntable = pa.table({\"part\": [True, True, False, False], \"values\": range(4)})\r\npq.write_to_dataset(table, str(path), partition_cols=[\"part\"])\r\n\r\n# legacy -> gives dictionary column of string values\r\npq.ParquetDataset(case).read()\r\n\r\n# new API -> gives string column\r\npq.ParquetDataset(case, use_legacy_dataset=False).read()\r\n\r\n# specify schema -> actually get a column of bools\r\npartitioning = ds.partitioning(pa.schema([('part', pa.bool_())]), flavor=\"hive\")\r\npq.ParquetDataset(case, use_legacy_dataset=False, partitioning=partitioning).read()\r\npq.ParquetDataset(case, use_legacy_dataset=False, partitioning=partitioning).read().to_pandas()\r\n```\r\n\r\nAre we fine with requiring the user to pass a manual schema here? Or do we actually still want to automatically infer True/False to be boolean type?\r\n\r\ncc `[~fsaintjacques]` `[~bkietz]`"
        },
        {
            "created_at": "2020-04-28T13:51:43.806Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3388?focusedCommentId=17094518) by Francois Saint-Jacques (fsaintjacques):*\nI think it's normal to require a schema."
        },
        {
            "created_at": "2020-06-12T20:15:27.562Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3388?focusedCommentId=17134515) by Neal Richardson (npr):*\nI agree that requiring a schema isn't bad here, though the magic behavior might be nice. I'll rewrite the title to make this about C++ datasets and make it an idea for an enhancement, not a bug report."
        },
        {
            "created_at": "2020-11-12T16:51:05.087Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3388?focusedCommentId=17230773) by Ben Kietzman (bkietz):*\n`[~uwe]` `[~npr]` `[~jorisvandenbossche]` Is this issue still desired? Partition columns are inferred with dictionary type by default, so in the case where the only keys present were \"True\" and \"False\" we'd infer a string dictionary with those two values. The int32 indices are not as efficient as a boolean array, but perhaps it is sufficient"
        },
        {
            "created_at": "2020-11-13T15:12:22.154Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3388?focusedCommentId=17231553) by Joris Van den Bossche (jorisvandenbossche):*\nI am fine with requiring a schema from the user to get boolean data.\r\n\r\n>  Partition columns are inferred with dictionary type by default\r\n\r\nNot in C++, I think? (it's an option to do it?)"
        }
    ]
}