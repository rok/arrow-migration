{
    "issue": {
        "title": "[Python] support returning ChunkedArray from __arrow_array__ ?",
        "body": "***Note**: This issue was originally created as [ARROW-7066](https://issues.apache.org/jira/browse/ARROW-7066). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nThe `\\_\\_arrow_array\\_\\_` protocol was added so that custom objects can define how they should be converted to a pyarrow Array (similar to numpy's `\\_\\_array\\_\\_`). This is then also used to support converting pandas DataFrames with columns using pandas' ExtensionArrays to a pyarrow Table (if the pandas ExtensionArray, such as nullable integer type, implements this `\\_\\_arrow_array\\_\\_` method).\r\n\r\nThis last use case could also be useful for fletcher (https://github.com/xhochy/fletcher/, a package that implements pandas ExtensionArrays that wrap pyarrow arrays, so they can be stored as is in a pandas DataFrame).  \r\nHowever, fletcher stores ChunkedArrays in ExtensionArry / the columns of a pandas DataFrame (to have a better mapping with a Table, where the columns also consist of chunked arrays). While we currently require that the return value of `\\_\\_arrow_array\\_\\_` is a pyarrow.Array.\r\n\r\nSo I was wondering: could we relax this constraint and also allow ChunkedArray as return value? \r\nHowever, this protocol is currently called in the `pa.array(..)` function, which probably should keep returning an Array (and not ChunkedArray in certain cases).\r\n\r\ncc `[~uwe]`",
        "created_at": "2019-11-05T12:52:58.000Z",
        "updated_at": "2019-11-12T22:30:22.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Python",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2019-11-12T22:30:05.000Z"
    },
    "comments": [
        {
            "created_at": "2019-11-05T22:32:54.448Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7066?focusedCommentId=16967922) by Wes McKinney (wesm):*\n`pyarrow.array` actually returns ChunkedArray in certain cases (BinaryArray overflows), so there is reasonable precedent for this. I think relaxing the constraint to return either type of array seems OK to me. "
        },
        {
            "created_at": "2019-11-08T16:12:32.983Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7066?focusedCommentId=16970357) by Uwe Korn (uwe):*\nWould also be OK with this but we should make this clear somewhere in the documenation."
        },
        {
            "created_at": "2019-11-12T07:52:02.827Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7066?focusedCommentId=16972155) by Joris Van den Bossche (jorisvandenbossche):*\nI still don't fully like returning a chunked array from `pa.array`, but also don't see an easy other solution to otherwise get the roundtrip working for eg fletcher that uses chunked arrays (alternative would be to have an \"internal\" version of `pa.array(..)` that allows this, and keep the public one strict, but that is also rather ugly).\r\n\r\nI will add some documentation update to the current open PR."
        },
        {
            "created_at": "2019-11-12T22:30:05.385Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-7066?focusedCommentId=16972849) by Neal Richardson (npr):*\nIssue resolved by pull request 5794\n<https://github.com/apache/arrow/pull/5794>"
        }
    ]
}