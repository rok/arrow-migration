{
    "issue": {
        "title": "[C++][R] Option for is_null(NaN) to evaluate to true",
        "body": "***Note**: This issue was originally created as [ARROW-12959](https://issues.apache.org/jira/browse/ARROW-12959). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n(This is the flip side of\u00a0ARROW-12960.)\r\n\r\nCurrently the Arrow compute kernel `is_null` always treats\u00a0`NaN` as a non-missing value, returning `false`\u00a0at positions of the input datum with value `NaN`.\r\n\r\nIt would be helpful to be able to control this behavior with an option. The option could be\u00a0named\u00a0`nan_is_null`\u00a0or something similar.\u00a0\u00a0It would default to `false`, consistent with current behavior. When set to `true`, it should check if the input datum has a floating point data type, and if so, return `true` at positions where the input is\u00a0`NaN`. If the input datum has some other type, the option should be silently ignored.\r\n\r\nAmong other things, this would enable the `arrow` R package to evaluate\u00a0`is.na()` consistently with the way base R does.\u00a0In base R, `is.na()` returns `TRUE` on\u00a0`NaN`. But in the `arrow` R package, it returns `FALSE`:\r\n```r\n\r\nis.na(c(3.14, NA, NaN))\r\n## [1] FALSE TRUE TRUE\r\n\r\nas.vector(is.na(Array$create(c(3.14, NA, NaN))))\r\n## [1] FALSE TRUE FALSE\n```\r\nI think solving this with an option in the C++ kernel is the best solution, because I suspect there are other cases in which users might want to treat `NaN` as a missing value. However, it would also be possible to solve this just in the R package, by defining\u00a0a mapping of `is.na` in the R package\u00a0that checks if the input `x`\u00a0has a floating point data type, and if so, evaluates `is.na\\(x\\) | is.nan\\(x\\)`. If we choose to go that route, we should change this Jira issue summary to\u00a0\"[R] Make is.na(NaN) consistent with base R\".",
        "created_at": "2021-06-03T17:01:26.000Z",
        "updated_at": "2021-08-26T17:09:58.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: R",
            "Type: enhancement"
        ],
        "closed": true,
        "closed_at": "2021-08-26T17:09:44.000Z"
    },
    "comments": [
        {
            "created_at": "2021-06-04T09:46:30.660Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12959?focusedCommentId=17357226) by Joris Van den Bossche (jorisvandenbossche):*\nAlso for Python land (where NaN is often used as missing value indicator), this will probably be useful. So agreed that doing this on the C++ side with an option would be good."
        },
        {
            "created_at": "2021-08-23T16:02:34.080Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12959?focusedCommentId=17403256) by Christian Cordova (christian8491):*\nThis PR is ready for review <https://github.com/apache/arrow/pull/10896>\u00a0. Thanks `[~edponce]` \u00a0for the support and also `[~icook]` for providing R bindings.\u00a0"
        },
        {
            "created_at": "2021-08-26T17:09:44.573Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-12959?focusedCommentId=17405376) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 10896\n<https://github.com/apache/arrow/pull/10896>"
        }
    ]
}