{
    "issue": {
        "title": "[C++] Compiler error with GLog and unity build enabled",
        "body": "***Note**: This issue was originally created as [ARROW-11237](https://issues.apache.org/jira/browse/ARROW-11237). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n```Java\n\r\nIn file included from src/arrow/CMakeFiles/arrow_objlib.dir/Unity/unity_8_cxx.cxx:7:\r\nIn file included from /home/antoine/arrow/dev/cpp/src/arrow/util/logging.cc:29:\r\nglog_ep-prefix/src/glog_ep/include/glog/logging.h:640:9: error: use of overloaded operator '<<' is ambiguous (with operand types 'std::ostream' (aka 'basic_ostream<char>') and 'const nullptr_t')\r\n  (*os) << v;\r\n  ~~~~~ ^  ~\r\nglog_ep-prefix/src/glog_ep/include/glog/logging.h:696:3: note: in instantiation of function template specialization 'google::MakeCheckOpValueString<nullptr_t>' requested here\r\n  MakeCheckOpValueString(comb.ForVar2(), v2);\r\n  ^\r\nglog_ep-prefix/src/glog_ep/include/glog/logging.h:720:1: note: in instantiation of function template specialization 'google::MakeCheckOpString<std::unordered_map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>, std::hash<std::string>, std::equal_to<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > > *, nullptr_t>' requested here\r\nDEFINE_CHECK_OP_IMPL(Check_NE, !=)  // Use CHECK(x == NULL) instead.\r\n^\r\nglog_ep-prefix/src/glog_ep/include/glog/logging.h:709:17: note: expanded from macro 'DEFINE_CHECK_OP_IMPL'\r\n    else return MakeCheckOpString(v1, v2, exprtext); \\\r\n                ^\r\n/home/antoine/arrow/dev/cpp/src/arrow/util/key_value_metadata.cc:75:3: note: in instantiation of function template specialization 'google::Check_NEImpl<std::unordered_map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>, std::hash<std::string>, std::equal_to<std::__cxx11::basic_string<char> >, std::allocator<std::pair<const std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> > > > *, nullptr_t>' requested here\r\n  DCHECK_NE(out, nullptr);\r\n  ^\r\nglog_ep-prefix/src/glog_ep/include/glog/logging.h:996:31: note: expanded from macro 'DCHECK_NE'\r\n#define DCHECK_NE(val1, val2) CHECK_NE(val1, val2)\r\n                              ^\r\nglog_ep-prefix/src/glog_ep/include/glog/logging.h:791:30: note: expanded from macro 'CHECK_NE'\r\n#define CHECK_NE(val1, val2) CHECK_OP(_NE, !=, val1, val2)\r\n                             ^\r\nglog_ep-prefix/src/glog_ep/include/glog/logging.h:766:3: note: expanded from macro 'CHECK_OP'\r\n  CHECK_OP_LOG(name, op, val1, val2, google::LogMessageFatal)\r\n  ^\r\nglog_ep-prefix/src/glog_ep/include/glog/logging.h:746:18: note: expanded from macro 'CHECK_OP_LOG'\r\n         google::Check##name##Impl(                      \\\r\n                 ^\r\n<scratch space>:101:1: note: expanded from here\r\nCheck_NEImpl\r\n^\r\n/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ostream:108:7: note: candidate function\r\n      operator<<(__ostream_type& (*__pf)(__ostream_type&))\r\n      ^\r\n/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ostream:117:7: note: candidate function\r\n      operator<<(__ios_type& (*__pf)(__ios_type&))\r\n      ^\r\n/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ostream:127:7: note: candidate function\r\n      operator<<(ios_base& (*__pf) (ios_base&))\r\n      ^\r\n/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ostream:245:7: note: candidate function\r\n      operator<<(const void* __p)\r\n      ^\r\n/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ostream:276:7: note: candidate function\r\n      operator<<(__streambuf_type* __sb);\r\n      ^\r\n```\r\n",
        "created_at": "2021-01-13T10:18:07.000Z",
        "updated_at": "2021-01-13T17:06:05.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2021-01-13T17:06:05.000Z"
    },
    "comments": [
        {
            "created_at": "2021-01-13T17:06:05.297Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-11237?focusedCommentId=17264261) by Antoine Pitrou (apitrou):*\nIssue resolved by pull request 9190\n<https://github.com/apache/arrow/pull/9190>"
        }
    ]
}