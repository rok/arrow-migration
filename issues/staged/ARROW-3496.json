{
    "issue": {
        "title": "[Java] Add microbenchmark code to Java",
        "body": "***Note**: This issue was originally created as [ARROW-3496](https://issues.apache.org/jira/browse/ARROW-3496). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\n`[~atrivedi]` has done some microbenchmarking with the Java API. Let's\u00a0consider adding them to the codebase.",
        "created_at": "2018-10-11T15:46:09.000Z",
        "updated_at": "2022-07-12T14:04:46.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: Java",
            "Type: enhancement"
        ],
        "closed": false
    },
    "comments": [
        {
            "created_at": "2018-10-12T08:34:12.852Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3496?focusedCommentId=16647653) by Animesh Trivedi (atrivedi):*\nTo give you an idea what I have so far ([https://github.com/animeshtrivedi/benchmarking-arrow)](https://github.com/animeshtrivedi/benchmarking-arrow).)\u00a0(its README is outdated). A standalone java program to :\u00a0\r\n\r\ni) basic data generation template to generate data for integers, longs, binary column types (we can extend to include any arbitrary types and schema)\u00a0\r\n\r\nii) In-memory data buffers to hold the generated data in the memory (either on on or off heap buffers).\u00a0\u00a0\r\n\r\niii) readers to consume the generated data using various APIs (calling get\\*(), or the holder API variant, or just writing your own readers from the direct byte buffers).\u00a0\r\n\r\nThe whole benchmark is multi-threaded and all 3 steps can be done in parallel. It is the last step usually what is benchmarked.\u00a0Obviously the current code base has a whole lot more code for my own testing and understanding, but we can clean it up gradually.\u00a0\r\n\r\nWhere do we want to have this code? and how should a user run this? May be part of the default build process where benchmark is compiled as a separate jar (arrow-java-benchmarks-0.12.jar, something like this)\u00a0"
        },
        {
            "created_at": "2019-02-06T20:11:35.197Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3496?focusedCommentId=16762077) by Wes McKinney (wesm):*\nSince we're planning to start a benchmark database, it would be good timing to start writing some Java benchmarks. Is anyone interested in this?"
        },
        {
            "created_at": "2022-07-12T14:04:46.495Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-3496?focusedCommentId=17565740) by @toddfarmer:*\nThis issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned. Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon."
        }
    ]
}