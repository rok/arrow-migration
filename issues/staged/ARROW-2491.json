{
    "issue": {
        "title": "[Python]\u00a0Array.from_buffers does not work for ListArray",
        "body": "***Note**: This issue was originally created as [ARROW-2491](https://issues.apache.org/jira/browse/ARROW-2491). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\nWhen you get the buffers from a ListArray and feed it back into `pyarrow.Array.from_buffers` the code fails with a DCHECK: \r\n\r\n```Java\n\r\n./src/arrow/array.cc:247 Check failed: (data->buffers.size()) == (2)))\r\n```",
        "created_at": "2018-04-21T19:19:29.000Z",
        "updated_at": "2018-05-08T17:15:57.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Component: Python",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2018-05-08T17:15:52.000Z"
    },
    "comments": [
        {
            "created_at": "2018-04-21T20:47:05.280Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2491?focusedCommentId=16446983) by Uwe Korn (uwe):*\nThe `from_buffers` method currently does not provide the necessary feature set for nested data and only works for primitive types. I will add a `NotImplementedError`\u00a0so that at least the segfaults are gone.\r\n\r\nI'm working on the pickling at the moment and I'll have to get something similar for this working. Once the `pickle` roundtrip works, we can also discuss a possible alternative API for `from_buffers` for nested types."
        },
        {
            "created_at": "2018-05-08T17:15:52.609Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-2491?focusedCommentId=16467706) by Uwe Korn (uwe):*\nIssue resolved by pull request 1927\n<https://github.com/apache/arrow/pull/1927>"
        }
    ]
}