{
    "issue": {
        "title": "[C++] AVX512 intrinsics fail to compile with clang-8 on Ubuntu 18.04",
        "body": "***Note**: This issue was originally created as [ARROW-8166](https://issues.apache.org/jira/browse/ARROW-8166). Please see the [migration documentation](https://gist.github.com/toddfarmer/12aa88361532d21902818a6044fda4c3) for further details.*\n\n### Original Issue Description:\ncc [~frank.du]\r\n\r\nI have an i9-9960X AVX512-capable CPU but I see\r\n\r\n```Java\n\r\n/usr/bin/ccache /usr/bin/clang++-8  -DARROW_EXTRA_ERROR_CONTEXT -DARROW_HDFS -DARROW_JEMALLOC -DARROW_JEMALLOC_INCLUDE_DIR=\"\" -DARROW_NO_DEPRECATED_API -DARROW_USE_SIMD -DARROW_WITH_BROTLI -DARROW_WITH_BZ2 -DARROW_WITH_LZ4 -DARROW_WITH_SNAPPY -DARROW_WITH_TIMING_TESTS -DARROW_WITH_ZLIB -DARROW_WITH_ZSTD -DURI_STATIC_BUILD -Isrc -I../src -I../src/generated -isystem ../thirdparty/flatbuffers/include -isystem /home/wesm/cpp-toolchain/include -isystem jemalloc_ep-prefix/src -isystem ../thirdparty/hadoop/include -Qunused-arguments -fcolor-diagnostics -fuse-ld=gold -ggdb -O0  -Wall -Wextra -Wdocumentation -Wno-missing-braces -Wno-unused-parameter -Wno-unknown-warning-option -Wno-constant-logical-operand -Werror -Wno-unknown-warning-option -march=skylake-avx512 -maltivec -fno-omit-frame-pointer -g -fPIE   -pthread -std=gnu++11 -MD -MT src/arrow/util/CMakeFiles/arrow-utility-test.dir/rle_encoding_test.cc.o -MF src/arrow/util/CMakeFiles/arrow-utility-test.dir/rle_encoding_test.cc.o.d -o src/arrow/util/CMakeFiles/arrow-utility-test.dir/rle_encoding_test.cc.o -c ../src/arrow/util/rle_encoding_test.cc\r\nIn file included from ../src/arrow/util/rle_encoding_test.cc:33:\r\nIn file included from ../src/arrow/util/bit_stream_utils.h:28:\r\n../src/arrow/util/bpacking.h:49:5: error: use of undeclared identifier '__m512i_u'\r\n  *(__m512i_u*)out = _mm512_and_epi32(_mm512_srlv_epi32(inls, shifts), masks);\r\n    ^\r\n../src/arrow/util/bpacking.h:49:15: error: expected expression\r\n  *(__m512i_u*)out = _mm512_and_epi32(_mm512_srlv_epi32(inls, shifts), masks);\r\n              ^\r\n../src/arrow/util/bpacking.h:55:5: error: use of undeclared identifier '__m512i_u'\r\n  *(__m512i_u*)out = _mm512_and_epi32(_mm512_srlv_epi32(inls, shifts), masks);\r\n    ^\r\n../src/arrow/util/bpacking.h:55:15: error: expected expression\r\n  *(__m512i_u*)out = _mm512_and_epi32(_mm512_srlv_epi32(inls, shifts), masks);\r\n              ^\r\n4 errors generated.\r\n```\r\n\r\nI tried compiling with gcc 8.3 instead of clang-8 and it worked. So it seems that because the base gcc toolchain on Ubuntu 18.04 is gcc 7.x that the clang-\\* versions are using the gcc-7 toolchain headers. Evidently we will need to make this more robust",
        "created_at": "2020-03-19T18:24:49.000Z",
        "updated_at": "2020-03-20T17:14:14.000Z",
        "labels": [
            "Migrated from Jira",
            "Component: C++",
            "Type: bug"
        ],
        "closed": true,
        "closed_at": "2020-03-20T17:14:13.000Z"
    },
    "comments": [
        {
            "created_at": "2020-03-20T02:30:02.406Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8166?focusedCommentId=17063040) by Frank Du (frank.du):*\nI tried a quick build on docker context with ubuntu:18.04 image, the build successfully, below is the command:\r\n\r\nsudo docker run -it -v /home/pnp/arrow/:/mnt ubuntu:18.04\r\napt-get update\r\n\r\napt-get install llvm-8 cmake build-essential clang-8 autoconf libboost-dev libboost-filesystem-dev libboost-system-dev libboost-regex-dev libjemalloc-dev\r\n\r\ncmake -DARROW_WITH_SNAPPY=ON \\\r\n\u00a0 \u00a0 -DARROW_GANDIVA=ON \\\r\n\u00a0 \u00a0 -DARROW_PARQUET=ON \\\r\n\u00a0 \u00a0 -DARROW_BUILD_TESTS=ON \\\r\n\u00a0 \u00a0 -DARROW_BUILD_BENCHMARKS=ON \\\r\n\u00a0 \u00a0 -DARROW_SIMD_LEVEL=AVX512 \\\r\n\u00a0 \u00a0..\r\n\r\nmake -j16\r\n\r\n\u00a0\r\n\r\nAnd below is the info of GCC and LLVM:\r\n\r\ngcc -v\r\nUsing built-in specs.\r\nCOLLECT_GCC=gcc\r\nCOLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/7/lto-wrapper\r\nOFFLOAD_TARGET_NAMES=nvptx-none\r\nOFFLOAD_TARGET_DEFAULT=1\r\nTarget: x86_64-linux-gnu\r\nConfigured with: ../src/configure -v --with-pkgversion='Ubuntu 7.5.0-3ubuntu1~18.04' --with-bugurl=file:///usr/share/doc/gcc-7/README.Bugs --enable-languages=c,ada,c+,go,brig,d,fortran,objc,obj-c+ --prefix=/usr --with-gcc-major-version-only --program-suffix=-7 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-bootstrap --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu\r\nThread model: posix\r\ngcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04)\r\n\r\n\u00a0\r\n\r\nclang-8 -v\r\nclang version 8.0.0-3~ubuntu18.04.2 (tags/RELEASE_800/final)\r\nTarget: x86_64-pc-linux-gnu\r\nThread model: posix\r\nInstalledDir: /usr/bin\r\nFound candidate GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/7\r\nFound candidate GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/7.5.0\r\nFound candidate GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/8\r\nFound candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/7\r\nFound candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/7.5.0\r\nFound candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/8\r\nSelected GCC installation: /usr/bin/../lib/gcc/x86_64-linux-gnu/7.5.0\r\nCandidate multilib: .;@m64\r\nSelected multilib: .;@m64\r\n\r\n\u00a0"
        },
        {
            "created_at": "2020-03-20T02:33:56.972Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8166?focusedCommentId=17063041) by Frank Du (frank.du):*\nroot@9735cf0f4203:/usr# grep __m512i_u \\* -R\r\nlib/gcc/x86_64-linux-gnu/7/include/avx512fintrin.h:typedef long long __m512i_u __attribute__ ((__vector_size__ (64), __may_alias__, __aligned__ (1)));\r\nlib/gcc/x86_64-linux-gnu/7/include/avx512fintrin.h: return \\*(__m512i_u \\*)__P;\r\nlib/gcc/x86_64-linux-gnu/7/include/avx512fintrin.h: \\*(__m512i_u \\*)__P = __A;\r\nlib/gcc/x86_64-linux-gnu/7.5.0/include/avx512fintrin.h:typedef long long __m512i_u __attribute__ ((__vector_size__ (64), __may_alias__, __aligned__ (1)));\r\nlib/gcc/x86_64-linux-gnu/7.5.0/include/avx512fintrin.h: return \\*(__m512i_u \\*)__P;\r\nlib/gcc/x86_64-linux-gnu/7.5.0/include/avx512fintrin.h: \\*(__m512i_u \\*)__P = __A;"
        },
        {
            "created_at": "2020-03-20T02:41:49.888Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8166?focusedCommentId=17063044) by Wes McKinney (wesm):*\nI'll investigate some more and see if I can boil down what is different on my system"
        },
        {
            "created_at": "2020-03-20T03:00:06.428Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8166?focusedCommentId=17063046) by Frank Du (frank.du):*\nSeems I'm still using gcc for the build, how can I change to clang? Sorry I'm not vary familiar with this part.\r\n\r\ncd /mnt/arrow/cpp/build/src/arrow/util && /usr/bin/c++ -DARROW_JEMALLOC -DARROW_JEMALLOC_INCLUDE_DIR=\"\" -DARROW_USE_SIMD -DARROW_WITH_SNAPPY -DARROW_WITH_TIMING_TESTS -DGTEST_LINKED_AS_\r\nSHARED_LIBRARY=1 -DURI_STATIC_BUILD -isystem /mnt/arrow/cpp/thirdparty/flatbuffers/include -isystem /mnt/arrow/cpp/build/boost_ep-prefix/src/boost_ep -isystem /mnt/arrow/cpp/build/snappy\r\n_ep/src/snappy_ep-install/include -isystem /mnt/arrow/cpp/build/gflags_ep-prefix/src/gflags_ep/include -isystem /mnt/arrow/cpp/build/thrift_ep-install/include -isystem /mnt/arrow/cpp/bui\r\nld/protobuf_ep-install/include -isystem /mnt/arrow/cpp/build/jemalloc_ep-prefix/src -isystem /mnt/arrow/cpp/build/googletest_ep-prefix/src/googletest_ep/include -isystem /mnt/arrow/cpp/b\r\nuild/gbenchmark_ep/src/gbenchmark_ep-install/include -isystem /mnt/arrow/cpp/build/rapidjson_ep/src/rapidjson_ep-install/include -isystem /mnt/arrow/cpp/build/re2_ep-install/include -isy\r\nstem /mnt/arrow/cpp/thirdparty/hadoop/include -I/mnt/arrow/cpp/build/src -I/mnt/arrow/cpp/src -I/mnt/arrow/cpp/src/generated -Wno-noexcept-type -fdiagnostics-color=always -O3 -DNDEBUG\r\n -Wall -march=skylake-avx512 -O3 -DNDEBUG -fPIE -pthread -std=gnu++11 -o CMakeFiles/arrow-utility-test.dir/rle_encoding_test.cc.o -c /mnt/arrow/cpp/src/arrow/util/rle_encoding_test.cc\r\n[ 49%] Linking CXX executable ../../../release/arrow-utility-test"
        },
        {
            "created_at": "2020-03-20T03:19:37.461Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8166?focusedCommentId=17063049) by Frank Du (frank.du):*\nRepeat it with passing\u00a0COMPILER clang.\r\n\r\n\u00a0-DCMAKE_C_COMPILER=clang-8 \\\u00a0\r\n\r\n-DCMAKE_CXX_COMPILER=clang++-8 \\\r\n\r\n\r\n/mnt/arrow/cpp/src/arrow/util/bpacking.h:49:5: error: use of undeclared identifier '__m512i_u'\r\n **(__m512i_u**)out = _mm512_and_epi32(_mm512_srlv_epi32(inls, shifts), masks);"
        },
        {
            "created_at": "2020-03-20T04:18:06.266Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8166?focusedCommentId=17063069) by Wes McKinney (wesm):*\nOK you have reproduced it"
        },
        {
            "created_at": "2020-03-20T17:14:13.156Z",
            "body": "***Note**: [Comment](https://issues.apache.org/jira/browse/ARROW-8166?focusedCommentId=17063533) by Wes McKinney (wesm):*\nIssue resolved by pull request 6673\n<https://github.com/apache/arrow/pull/6673>"
        }
    ]
}