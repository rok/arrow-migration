{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13338135",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338135",
    "key": "ARROW-10438",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349493",
                "id": "12349493",
                "description": "",
                "name": "4.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-04-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 20400,
            "total": 20400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 20400,
            "total": 20400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10438/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 34,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338135/worklog/541475",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace opened a new pull request #9323:\nURL: https://github.com/apache/arrow/pull/9323\n\n\n   *This is a draft, right now only the lower level compute/partitioning parts are done*\r\n   \r\n   Tested and added support for partitioning with nulls.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-26T03:37:45.150+0000",
                    "updated": "2021-01-26T03:37:45.150+0000",
                    "started": "2021-01-26T03:37:45.150+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "541475",
                    "issueId": "13338135"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338135/worklog/541476",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9323:\nURL: https://github.com/apache/arrow/pull/9323#issuecomment-767274981\n\n\n   https://issues.apache.org/jira/browse/ARROW-10438\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-26T03:38:09.487+0000",
                    "updated": "2021-01-26T03:38:09.487+0000",
                    "started": "2021-01-26T03:38:09.487+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "541476",
                    "issueId": "13338135"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338135/worklog/541479",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #9323:\nURL: https://github.com/apache/arrow/pull/9323#discussion_r564198742\n\n\n\n##########\nFile path: cpp/src/arrow/pretty_print.cc\n##########\n@@ -670,4 +670,49 @@ Status PrettyPrint(const Schema& schema, const PrettyPrintOptions& options,\n   return Status::OK();\n }\n \n+void GdbPrintArray(const Array& arr, int indent) {\n\nReview comment:\n       These changes aren't related to the PR and I can pull them out but I'd like to get them in at some point.  The GDB pretty prints (python scripts) aren't included in this PR but I use them for debugging and they rely on these functions.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-26T03:44:55.088+0000",
                    "updated": "2021-01-26T03:44:55.088+0000",
                    "started": "2021-01-26T03:44:55.087+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "541479",
                    "issueId": "13338135"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338135/worklog/541585",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #9323:\nURL: https://github.com/apache/arrow/pull/9323#discussion_r564198742\n\n\n\n##########\nFile path: cpp/src/arrow/pretty_print.cc\n##########\n@@ -670,4 +670,49 @@ Status PrettyPrint(const Schema& schema, const PrettyPrintOptions& options,\n   return Status::OK();\n }\n \n+void GdbPrintArray(const Array& arr, int indent) {\n\nReview comment:\n       These changes aren't related to the PR and I can pull them out but I'd like to get them in at some point.  The GDB pretty prints (python scripts) aren't included in this PR but I use them for debugging and they rely on these functions.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-26T04:01:19.593+0000",
                    "updated": "2021-01-26T04:01:19.593+0000",
                    "started": "2021-01-26T04:01:19.592+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "541585",
                    "issueId": "13338135"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338135/worklog/541625",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9323:\nURL: https://github.com/apache/arrow/pull/9323#issuecomment-767274981\n\n\n   https://issues.apache.org/jira/browse/ARROW-10438\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-26T04:05:18.963+0000",
                    "updated": "2021-01-26T04:05:18.963+0000",
                    "started": "2021-01-26T04:05:18.963+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "541625",
                    "issueId": "13338135"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338135/worklog/541805",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace opened a new pull request #9323:\nURL: https://github.com/apache/arrow/pull/9323\n\n\n   *This is a draft, right now only the lower level compute/partitioning parts are done*\r\n   \r\n   Tested and added support for partitioning with nulls.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-26T04:21:05.798+0000",
                    "updated": "2021-01-26T04:21:05.798+0000",
                    "started": "2021-01-26T04:21:05.798+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "541805",
                    "issueId": "13338135"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338135/worklog/542426",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #9323:\nURL: https://github.com/apache/arrow/pull/9323#discussion_r564831474\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/vector_hash.cc\n##########\n@@ -451,8 +487,12 @@ struct HashKernelTraits<Type, Action, enable_if_has_string_view<Type>> {\n template <typename Type, typename Action>\n std::unique_ptr<HashKernel> HashInitImpl(KernelContext* ctx, const KernelInitArgs& args) {\n   using HashKernelType = typename HashKernelTraits<Type, Action>::HashKernel;\n-  auto result = ::arrow::internal::make_unique<HashKernelType>(args.inputs[0].type,\n-                                                               ctx->memory_pool());\n+  DictionaryEncodeOptions options;\n+  if (auto options_ptr = static_cast<const DictionaryEncodeOptions*>(args.options)) {\n\nReview comment:\n       This seems fragile; if other functions which use `HashInitImpl` add options this will break. Would it be possible to branch on the Action instead?\r\n   \r\n   ```suggestion\r\n     if (std::is_same<Action, DictEncodeAction::value) {\r\n   ```\r\n   \r\n   (currently dictionary_encode uses ValueCountsAction in Init, which is confusing and would invalidate the above approach)\n\n##########\nFile path: cpp/src/arrow/dataset/partition.cc\n##########\n@@ -625,9 +621,17 @@ class StructDictionary {\n \n  private:\n   Status AddOne(Datum column, std::shared_ptr<Int32Array>* fused_indices) {\n-    if (column.type()->id() != Type::DICTIONARY) {\n-      ARROW_ASSIGN_OR_RAISE(column, compute::DictionaryEncode(std::move(column)));\n+    if (column.type()->id() == Type::DICTIONARY) {\n+      // compute::DictionaryEncode doesn't support dictionary and, even if it did, it\n+      // would be a null op and return a flat dictionary.  In order to group by dictionary\n+      // we would need to be able to create a nested dictionary.\n+      return Status::NotImplemented(\n+          \"Cannot use column of type dictionary as grouping criteria\");\n\nReview comment:\n       Please revert this: in case of a dictionary array, dictionary encode is unnecessary as we already have the dictionary and the indices and they can be used unchanged below.\n\n##########\nFile path: cpp/src/arrow/compute/api_vector.h\n##########\n@@ -296,7 +315,8 @@ Result<std::shared_ptr<StructArray>> ValueCounts(const Datum& value,\n /// \\since 1.0.0\n /// \\note API not yet finalized\n ARROW_EXPORT\n-Result<Datum> DictionaryEncode(const Datum& data, ExecContext* ctx = NULLPTR);\n+Result<Datum> DictionaryEncode(const Datum& data, const DictionaryEncodeOptions& options,\n\nReview comment:\n       You could provide the default dict encode options here:\r\n   ```suggestion\r\n   Result<Datum> DictionaryEncode(const Datum& data,\r\n                                  const DictionaryEncodeOptions& options = DictionaryEncodeOptions::Defaults(),\r\n   ```\n\n##########\nFile path: cpp/src/arrow/compute/api_vector.h\n##########\n@@ -63,6 +63,25 @@ enum class SortOrder {\n   Descending,\n };\n \n+struct DictionaryEncodeOptions : public FunctionOptions {\n+  /// Configure how null values will be encoded\n+  enum NullEncodingBehavior {\n+    /// the null value will be added to the dictionary with a proper index\n+    ENCODE,\n+    /// the null value will be masked in the indices array\n+    MASK,\n+    /// the null value will not be included in the dictionary\n+    SKIP\n\nReview comment:\n       These are confusingly worded. It'd also be good to have inline examples of each behavior\r\n   ```suggestion\r\n       /// nulls result in an index referencing a null slot in the dictionary\r\n       ENCODE,\r\n       /// nulls result in a null index (does not correspond to any slot in the dictionary)\r\n       MASK,\r\n       /// nulls are ignored\r\n       IGNORE\r\n   ```\n\n##########\nFile path: cpp/src/arrow/compute/kernels/vector_hash_test.cc\n##########\n@@ -649,13 +692,42 @@ TEST_F(TestHashKernel, ChunkedArrayInvoke) {\n TEST_F(TestHashKernel, ZeroLengthDictionaryEncode) {\n   // ARROW-7008\n   auto values = ArrayFromJSON(utf8(), \"[]\");\n-  ASSERT_OK_AND_ASSIGN(Datum datum_result, DictionaryEncode(values));\n+  ASSERT_OK_AND_ASSIGN(Datum datum_result,\n+                       DictionaryEncode(values, DictionaryEncodeOptions::Defaults()));\n \n   std::shared_ptr<Array> result = datum_result.make_array();\n   const auto& dict_result = checked_cast<const DictionaryArray&>(*result);\n   ASSERT_OK(dict_result.ValidateFull());\n }\n \n+TEST_F(TestHashKernel, NullEncodingSchemes) {\n+  auto values = ArrayFromJSON(uint8(), \"[1, 1, null, 2, null]\");\n+\n+  // Masking should put null in the indices array\n+  auto expected_mask_indices = ArrayFromJSON(int32(), \"[0, 0, null, 1, null]\");\n+  auto expected_mask_dictionary = ArrayFromJSON(uint8(), \"[1, 2]\");\n+  auto dictionary_type = dictionary(int32(), uint8());\n+  std::shared_ptr<Array> expected = std::make_shared<DictionaryArray>(\n+      dictionary_type, expected_mask_indices, expected_mask_dictionary);\n+\n+  ASSERT_OK_AND_ASSIGN(Datum datum_result,\n+                       DictionaryEncode(values, DictionaryEncodeOptions::Defaults()));\n+  std::shared_ptr<Array> result = datum_result.make_array();\n+  AssertArraysEqual(*expected, *result);\n+\n+  // Encoding should put null in the dictionary\n+  auto expected_encoded_indices = ArrayFromJSON(int32(), \"[0, 0, 1, 2, 1]\");\n+  auto expected_encoded_dict = ArrayFromJSON(uint8(), \"[1, null, 2]\");\n+  expected = std::make_shared<DictionaryArray>(dictionary_type, expected_encoded_indices,\n+                                               expected_encoded_dict);\n+\n+  auto options = DictionaryEncodeOptions::Defaults();\n+  options.null_encoding_behavior = DictionaryEncodeOptions::ENCODE;\n+  ASSERT_OK_AND_ASSIGN(datum_result, DictionaryEncode(values, options));\n+  result = datum_result.make_array();\n+  AssertArraysEqual(*expected, *result);\n+}\n\nReview comment:\n       It'd be acceptable to just remove `DictionaryEncodeOptions::SKIP` for now; we can add it in a follow up if there's demand\n\n##########\nFile path: cpp/src/arrow/pretty_print.cc\n##########\n@@ -670,4 +670,49 @@ Status PrettyPrint(const Schema& schema, const PrettyPrintOptions& options,\n   return Status::OK();\n }\n \n+void GdbPrintArray(const Array& arr, int indent) {\n\nReview comment:\n       Thanks for working on these, but please revert them here and add them in a dedicated PR\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-26T21:36:04.496+0000",
                    "updated": "2021-01-26T21:36:04.496+0000",
                    "started": "2021-01-26T21:36:04.495+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "542426",
                    "issueId": "13338135"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338135/worklog/542883",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #9323:\nURL: https://github.com/apache/arrow/pull/9323#discussion_r565396190\n\n\n\n##########\nFile path: cpp/src/arrow/compute/api_vector.h\n##########\n@@ -63,6 +63,25 @@ enum class SortOrder {\n   Descending,\n };\n \n+struct DictionaryEncodeOptions : public FunctionOptions {\n+  /// Configure how null values will be encoded\n+  enum NullEncodingBehavior {\n+    /// the null value will be added to the dictionary with a proper index\n+    ENCODE,\n+    /// the null value will be masked in the indices array\n+    MASK,\n+    /// the null value will not be included in the dictionary\n+    SKIP\n\nReview comment:\n       What does SKIP mean in this case? Then your resulting encoded array will be shorter as the original array? (dropping any nulls)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-27T15:21:54.629+0000",
                    "updated": "2021-01-27T15:21:54.629+0000",
                    "started": "2021-01-27T15:21:54.629+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "542883",
                    "issueId": "13338135"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338135/worklog/542999",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #9323:\nURL: https://github.com/apache/arrow/pull/9323#discussion_r565550260\n\n\n\n##########\nFile path: cpp/src/arrow/compute/api_vector.h\n##########\n@@ -63,6 +63,25 @@ enum class SortOrder {\n   Descending,\n };\n \n+struct DictionaryEncodeOptions : public FunctionOptions {\n+  /// Configure how null values will be encoded\n+  enum NullEncodingBehavior {\n+    /// the null value will be added to the dictionary with a proper index\n+    ENCODE,\n+    /// the null value will be masked in the indices array\n+    MASK,\n+    /// the null value will not be included in the dictionary\n+    SKIP\n\nReview comment:\n       Yes, sorry, I will discard the SKIP/IGNORE option.  At one point I thought that was the current behavior and so I added the option.  Later testing showed that I simply misunderstood what was happening and I forgot to fully remove the option.  ENCODE and MASK are the only options.\r\n   \r\n   @bkietz I'm not sure what inline examples of such behavior would mean.  Something like this maybe...\r\n   \r\n   ```\r\n   ENCODE [5, 5, null] -> Dictionary [5, null] / Indices [0, 0, 1]\r\n   MASK [5, 5, null] -> Dictionary [5] / Indices [0, 0, null]\r\n   ```\r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-27T18:47:46.345+0000",
                    "updated": "2021-01-27T18:47:46.345+0000",
                    "started": "2021-01-27T18:47:46.345+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "542999",
                    "issueId": "13338135"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338135/worklog/543077",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #9323:\nURL: https://github.com/apache/arrow/pull/9323#discussion_r565630529\n\n\n\n##########\nFile path: cpp/src/arrow/compute/api_vector.h\n##########\n@@ -63,6 +63,25 @@ enum class SortOrder {\n   Descending,\n };\n \n+struct DictionaryEncodeOptions : public FunctionOptions {\n+  /// Configure how null values will be encoded\n+  enum NullEncodingBehavior {\n+    /// the null value will be added to the dictionary with a proper index\n+    ENCODE,\n+    /// the null value will be masked in the indices array\n+    MASK,\n+    /// the null value will not be included in the dictionary\n+    SKIP\n\nReview comment:\n       That would work. Here's an example from [filter](https://github.com/bkietz/arrow/blob/bead1db7ab5978331ee2622d1cca0911ae939c52/cpp/src/arrow/compute/api_vector.h#L109-L112)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-27T21:01:38.665+0000",
                    "updated": "2021-01-27T21:01:38.665+0000",
                    "started": "2021-01-27T21:01:38.665+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "543077",
                    "issueId": "13338135"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338135/worklog/545724",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #9323:\nURL: https://github.com/apache/arrow/pull/9323#discussion_r568264655\n\n\n\n##########\nFile path: cpp/src/arrow/pretty_print.cc\n##########\n@@ -670,4 +670,49 @@ Status PrettyPrint(const Schema& schema, const PrettyPrintOptions& options,\n   return Status::OK();\n }\n \n+void GdbPrintArray(const Array& arr, int indent) {\n\nReview comment:\n       Removed.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-02T01:45:38.826+0000",
                    "updated": "2021-02-02T01:45:38.826+0000",
                    "started": "2021-02-02T01:45:38.826+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "545724",
                    "issueId": "13338135"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338135/worklog/545725",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #9323:\nURL: https://github.com/apache/arrow/pull/9323#discussion_r568264814\n\n\n\n##########\nFile path: cpp/src/arrow/compute/api_vector.h\n##########\n@@ -63,6 +63,25 @@ enum class SortOrder {\n   Descending,\n };\n \n+struct DictionaryEncodeOptions : public FunctionOptions {\n+  /// Configure how null values will be encoded\n+  enum NullEncodingBehavior {\n+    /// the null value will be added to the dictionary with a proper index\n+    ENCODE,\n+    /// the null value will be masked in the indices array\n+    MASK,\n+    /// the null value will not be included in the dictionary\n+    SKIP\n\nReview comment:\n       I removed SKIP and added some comments similar to those in filter.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-02T01:46:01.977+0000",
                    "updated": "2021-02-02T01:46:01.977+0000",
                    "started": "2021-02-02T01:46:01.977+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "545725",
                    "issueId": "13338135"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338135/worklog/545726",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #9323:\nURL: https://github.com/apache/arrow/pull/9323#discussion_r568264983\n\n\n\n##########\nFile path: cpp/src/arrow/compute/api_vector.h\n##########\n@@ -296,7 +315,8 @@ Result<std::shared_ptr<StructArray>> ValueCounts(const Datum& value,\n /// \\since 1.0.0\n /// \\note API not yet finalized\n ARROW_EXPORT\n-Result<Datum> DictionaryEncode(const Datum& data, ExecContext* ctx = NULLPTR);\n+Result<Datum> DictionaryEncode(const Datum& data, const DictionaryEncodeOptions& options,\n\nReview comment:\n       Done, and cleaned up all the other call sites explicitly stating the default options.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-02T01:46:35.103+0000",
                    "updated": "2021-02-02T01:46:35.103+0000",
                    "started": "2021-02-02T01:46:35.102+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "545726",
                    "issueId": "13338135"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338135/worklog/545728",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #9323:\nURL: https://github.com/apache/arrow/pull/9323#discussion_r568266523\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/vector_hash.cc\n##########\n@@ -451,8 +487,12 @@ struct HashKernelTraits<Type, Action, enable_if_has_string_view<Type>> {\n template <typename Type, typename Action>\n std::unique_ptr<HashKernel> HashInitImpl(KernelContext* ctx, const KernelInitArgs& args) {\n   using HashKernelType = typename HashKernelTraits<Type, Action>::HashKernel;\n-  auto result = ::arrow::internal::make_unique<HashKernelType>(args.inputs[0].type,\n-                                                               ctx->memory_pool());\n+  DictionaryEncodeOptions options;\n+  if (auto options_ptr = static_cast<const DictionaryEncodeOptions*>(args.options)) {\n\nReview comment:\n       I moved the options decoding into Action although the `HashKernel` still needed to be aware of it (to decide if `null` should go in the dictionary or not) so it changed the kernel->action interface slightly (added `ShouldEncodeNulls`)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-02T01:50:43.543+0000",
                    "updated": "2021-02-02T01:50:43.543+0000",
                    "started": "2021-02-02T01:50:43.542+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "545728",
                    "issueId": "13338135"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338135/worklog/545729",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #9323:\nURL: https://github.com/apache/arrow/pull/9323#discussion_r568266959\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/partition.cc\n##########\n@@ -625,9 +621,17 @@ class StructDictionary {\n \n  private:\n   Status AddOne(Datum column, std::shared_ptr<Int32Array>* fused_indices) {\n-    if (column.type()->id() != Type::DICTIONARY) {\n-      ARROW_ASSIGN_OR_RAISE(column, compute::DictionaryEncode(std::move(column)));\n+    if (column.type()->id() == Type::DICTIONARY) {\n+      // compute::DictionaryEncode doesn't support dictionary and, even if it did, it\n+      // would be a null op and return a flat dictionary.  In order to group by dictionary\n+      // we would need to be able to create a nested dictionary.\n+      return Status::NotImplemented(\n+          \"Cannot use column of type dictionary as grouping criteria\");\n\nReview comment:\n       Yes, I keep thinking of dictionary arrays as arrays of dictionaries [{\"a\": 1, \"b\": 2}, ...] and not simply a different encoding.  My brain was off on a tangent when I wrote this column.\r\n   \r\n   I added the logic to encode nulls by decoding (casting) the dictionary first and then re-encoding.  I also added a test case for this.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-02T01:52:04.787+0000",
                    "updated": "2021-02-02T01:52:04.787+0000",
                    "started": "2021-02-02T01:52:04.787+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "545729",
                    "issueId": "13338135"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338135/worklog/546377",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #9323:\nURL: https://github.com/apache/arrow/pull/9323#discussion_r568264655\n\n\n\n##########\nFile path: cpp/src/arrow/pretty_print.cc\n##########\n@@ -670,4 +670,49 @@ Status PrettyPrint(const Schema& schema, const PrettyPrintOptions& options,\n   return Status::OK();\n }\n \n+void GdbPrintArray(const Array& arr, int indent) {\n\nReview comment:\n       Removed.\n\n##########\nFile path: cpp/src/arrow/compute/api_vector.h\n##########\n@@ -63,6 +63,25 @@ enum class SortOrder {\n   Descending,\n };\n \n+struct DictionaryEncodeOptions : public FunctionOptions {\n+  /// Configure how null values will be encoded\n+  enum NullEncodingBehavior {\n+    /// the null value will be added to the dictionary with a proper index\n+    ENCODE,\n+    /// the null value will be masked in the indices array\n+    MASK,\n+    /// the null value will not be included in the dictionary\n+    SKIP\n\nReview comment:\n       I removed SKIP and added some comments similar to those in filter.\n\n##########\nFile path: cpp/src/arrow/compute/api_vector.h\n##########\n@@ -296,7 +315,8 @@ Result<std::shared_ptr<StructArray>> ValueCounts(const Datum& value,\n /// \\since 1.0.0\n /// \\note API not yet finalized\n ARROW_EXPORT\n-Result<Datum> DictionaryEncode(const Datum& data, ExecContext* ctx = NULLPTR);\n+Result<Datum> DictionaryEncode(const Datum& data, const DictionaryEncodeOptions& options,\n\nReview comment:\n       Done, and cleaned up all the other call sites explicitly stating the default options.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/vector_hash.cc\n##########\n@@ -451,8 +487,12 @@ struct HashKernelTraits<Type, Action, enable_if_has_string_view<Type>> {\n template <typename Type, typename Action>\n std::unique_ptr<HashKernel> HashInitImpl(KernelContext* ctx, const KernelInitArgs& args) {\n   using HashKernelType = typename HashKernelTraits<Type, Action>::HashKernel;\n-  auto result = ::arrow::internal::make_unique<HashKernelType>(args.inputs[0].type,\n-                                                               ctx->memory_pool());\n+  DictionaryEncodeOptions options;\n+  if (auto options_ptr = static_cast<const DictionaryEncodeOptions*>(args.options)) {\n\nReview comment:\n       I moved the options decoding into Action although the `HashKernel` still needed to be aware of it (to decide if `null` should go in the dictionary or not) so it changed the kernel->action interface slightly (added `ShouldEncodeNulls`)\n\n##########\nFile path: cpp/src/arrow/dataset/partition.cc\n##########\n@@ -625,9 +621,17 @@ class StructDictionary {\n \n  private:\n   Status AddOne(Datum column, std::shared_ptr<Int32Array>* fused_indices) {\n-    if (column.type()->id() != Type::DICTIONARY) {\n-      ARROW_ASSIGN_OR_RAISE(column, compute::DictionaryEncode(std::move(column)));\n+    if (column.type()->id() == Type::DICTIONARY) {\n+      // compute::DictionaryEncode doesn't support dictionary and, even if it did, it\n+      // would be a null op and return a flat dictionary.  In order to group by dictionary\n+      // we would need to be able to create a nested dictionary.\n+      return Status::NotImplemented(\n+          \"Cannot use column of type dictionary as grouping criteria\");\n\nReview comment:\n       Yes, I keep thinking of dictionary arrays as arrays of dictionaries [{\"a\": 1, \"b\": 2}, ...] and not simply a different encoding.  My brain was off on a tangent when I wrote this column.\r\n   \r\n   I added the logic to encode nulls by decoding (casting) the dictionary first and then re-encoding.  I also added a test case for this.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-03T00:58:26.903+0000",
                    "updated": "2021-02-03T00:58:26.903+0000",
                    "started": "2021-02-03T00:58:26.903+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "546377",
                    "issueId": "13338135"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338135/worklog/547744",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #9323:\nURL: https://github.com/apache/arrow/pull/9323#discussion_r570419335\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/vector_hash.cc\n##########\n@@ -76,6 +79,8 @@ class UniqueAction final : public ActionBase {\n   template <class Index>\n   void ObserveNotFound(Index index) {}\n \n+  bool ShouldEncodeNulls() { return true; }\n\nReview comment:\n       Making this explicitly constexpr (where possible) will help the compiler drop dead code \r\n   ```suggestion\r\n     constexpr bool ShouldEncodeNulls() const { return true; }\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-04T17:42:47.040+0000",
                    "updated": "2021-02-04T17:42:47.040+0000",
                    "started": "2021-02-04T17:42:47.039+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "547744",
                    "issueId": "13338135"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338135/worklog/548367",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #9323:\nURL: https://github.com/apache/arrow/pull/9323#discussion_r570419335\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/vector_hash.cc\n##########\n@@ -76,6 +79,8 @@ class UniqueAction final : public ActionBase {\n   template <class Index>\n   void ObserveNotFound(Index index) {}\n \n+  bool ShouldEncodeNulls() { return true; }\n\nReview comment:\n       Making this explicitly constexpr (where possible) will help the compiler drop dead code \r\n   ```suggestion\r\n     constexpr bool ShouldEncodeNulls() const { return true; }\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-05T10:14:12.836+0000",
                    "updated": "2021-02-05T10:14:12.836+0000",
                    "started": "2021-02-05T10:14:12.836+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "548367",
                    "issueId": "13338135"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338135/worklog/551890",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #9323:\nURL: https://github.com/apache/arrow/pull/9323#discussion_r575328856\n\n\n\n##########\nFile path: python/pyarrow/tests/test_dataset.py\n##########\n@@ -1587,33 +1587,54 @@ def test_open_dataset_non_existing_file():\n \n @pytest.mark.parquet\n @pytest.mark.parametrize('partitioning', [\"directory\", \"hive\"])\n+@pytest.mark.parametrize('null_fallback', ['xyz', None])\n @pytest.mark.parametrize('partition_keys', [\n     ([\"A\", \"B\", \"C\"], [1, 2, 3]),\n     ([1, 2, 3], [\"A\", \"B\", \"C\"]),\n     ([\"A\", \"B\", \"C\"], [\"D\", \"E\", \"F\"]),\n     ([1, 2, 3], [4, 5, 6]),\n+    ([1, None, 3], [\"A\", \"B\", \"C\"]),\n+    ([1, 2, 3], [\"A\", None, \"C\"]),\n+    ([None, 2, 3], [None, 2, 3]),\n ])\n-def test_open_dataset_partitioned_dictionary_type(tempdir, partitioning,\n-                                                  partition_keys):\n+def test_open_dataset_partitioned_dictionary_type(\n+    tempdir, partitioning, null_fallback, partition_keys\n+):\n     # ARROW-9288 / ARROW-9476\n     import pyarrow.parquet as pq\n-    table = pa.table({'a': range(9), 'b': [0.] * 4 + [1.] * 5})\n+\n+    table = pa.table({'a': range(9), 'b': [0.0] * 4 + [1.0] * 5})\n+\n+    if None in partition_keys[0] or None in partition_keys[1]:\n+        # Directory partitioning can't handle the first part being null\n+        return\n\nReview comment:\n       only return here if `partitioning == \"directory\"` ?\n\n##########\nFile path: python/pyarrow/tests/test_dataset.py\n##########\n@@ -1587,33 +1587,54 @@ def test_open_dataset_non_existing_file():\n \n @pytest.mark.parquet\n @pytest.mark.parametrize('partitioning', [\"directory\", \"hive\"])\n+@pytest.mark.parametrize('null_fallback', ['xyz', None])\n\nReview comment:\n       What does `null_fallback=None` mean? (based on the docstring above it seems it can only be a string?)\n\n##########\nFile path: cpp/src/arrow/dataset/partition.cc\n##########\n@@ -74,15 +74,26 @@ Status KeyValuePartitioning::SetDefaultValuesFromKeys(const Expression& expr,\n                                                       RecordBatchProjector* projector) {\n   ARROW_ASSIGN_OR_RAISE(auto known_values, ExtractKnownFieldValues(expr));\n   for (const auto& ref_value : known_values) {\n-    if (!ref_value.second.is_scalar()) {\n-      return Status::Invalid(\"non-scalar partition key \", ref_value.second.ToString());\n+    const auto& known_value = ref_value.second;\n+    if (known_value.concrete() && !known_value.datum.is_scalar()) {\n+      return Status::Invalid(\"non-scalar partition key \", known_value.datum.ToString());\n     }\n \n     ARROW_ASSIGN_OR_RAISE(auto match,\n                           ref_value.first.FindOneOrNone(*projector->schema()));\n \n     if (match.empty()) continue;\n-    RETURN_NOT_OK(projector->SetDefaultValue(match, ref_value.second.scalar()));\n+\n+    const auto& field = projector->schema()->field(match[0]);\n+    if (known_value.concrete()) {\n+      RETURN_NOT_OK(projector->SetDefaultValue(match, known_value.datum.scalar()));\n+    } else if (known_value.valid) {\n+      return Status::Invalid(\n+          \"Partition expression not defined enough to set default value for \",\n\nReview comment:\n       What does \"not defined enough\" in practice mean? (or what would be an example?)\n\n##########\nFile path: python/pyarrow/tests/test_dataset.py\n##########\n@@ -1587,33 +1587,54 @@ def test_open_dataset_non_existing_file():\n \n @pytest.mark.parquet\n @pytest.mark.parametrize('partitioning', [\"directory\", \"hive\"])\n+@pytest.mark.parametrize('null_fallback', ['xyz', None])\n @pytest.mark.parametrize('partition_keys', [\n     ([\"A\", \"B\", \"C\"], [1, 2, 3]),\n     ([1, 2, 3], [\"A\", \"B\", \"C\"]),\n     ([\"A\", \"B\", \"C\"], [\"D\", \"E\", \"F\"]),\n     ([1, 2, 3], [4, 5, 6]),\n+    ([1, None, 3], [\"A\", \"B\", \"C\"]),\n+    ([1, 2, 3], [\"A\", None, \"C\"]),\n+    ([None, 2, 3], [None, 2, 3]),\n ])\n-def test_open_dataset_partitioned_dictionary_type(tempdir, partitioning,\n-                                                  partition_keys):\n+def test_open_dataset_partitioned_dictionary_type(\n\nReview comment:\n       you added this to a test that is specifically about reading partitioned datasets while inferring the partition fields as dictionary. Which is fine (as this case also needs to be able to hand that), but this should also work (and so be tested) in the default case not inferring dictionary type? \r\n   And should we also have a test for the writing part? (this one only tests reading)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-12T16:06:49.739+0000",
                    "updated": "2021-02-12T16:06:49.739+0000",
                    "started": "2021-02-12T16:06:49.739+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "551890",
                    "issueId": "13338135"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338135/worklog/551943",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #9323:\nURL: https://github.com/apache/arrow/pull/9323#discussion_r575451640\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/partition.cc\n##########\n@@ -74,15 +74,26 @@ Status KeyValuePartitioning::SetDefaultValuesFromKeys(const Expression& expr,\n                                                       RecordBatchProjector* projector) {\n   ARROW_ASSIGN_OR_RAISE(auto known_values, ExtractKnownFieldValues(expr));\n   for (const auto& ref_value : known_values) {\n-    if (!ref_value.second.is_scalar()) {\n-      return Status::Invalid(\"non-scalar partition key \", ref_value.second.ToString());\n+    const auto& known_value = ref_value.second;\n+    if (known_value.concrete() && !known_value.datum.is_scalar()) {\n+      return Status::Invalid(\"non-scalar partition key \", known_value.datum.ToString());\n     }\n \n     ARROW_ASSIGN_OR_RAISE(auto match,\n                           ref_value.first.FindOneOrNone(*projector->schema()));\n \n     if (match.empty()) continue;\n-    RETURN_NOT_OK(projector->SetDefaultValue(match, ref_value.second.scalar()));\n+\n+    const auto& field = projector->schema()->field(match[0]);\n+    if (known_value.concrete()) {\n+      RETURN_NOT_OK(projector->SetDefaultValue(match, known_value.datum.scalar()));\n+    } else if (known_value.valid) {\n+      return Status::Invalid(\n+          \"Partition expression not defined enough to set default value for \",\n\nReview comment:\n       Today we only get in this state if the expression is something like `pa.field(\"a\").is_valid()` although technically this could be inferred from expressions like `pa.field(\"a\") > 7` as well.  Any expression that only evaluates true if the field is non-null gives us some hint at least that the result will be non-null.\r\n   \r\n   Although, on second review, it's probably better to just `continue` in this case rather than return an error.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-12T18:48:11.523+0000",
                    "updated": "2021-02-12T18:48:11.523+0000",
                    "started": "2021-02-12T18:48:11.522+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "551943",
                    "issueId": "13338135"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 20400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2807f316[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@317c115[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4daac08d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7008af44[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@52a42df6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1870ced9[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@345cbf2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@36022651[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@453a66fa[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5ba26e82[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7615345f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5182a462[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 20400,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Feb 24 15:34:41 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-02-24T15:34:41.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10438/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2020-10-30T20:28:23.000+0000",
        "updated": "2021-02-24T15:34:50.000+0000",
        "timeoriginalestimate": null,
        "description": "Writing a dataset with null partition keys is currently untested. Ensure the behavior is documented and correct",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 20400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Dataset] Partitioning::Format on nulls",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338135/comment/17268333",
                    "id": "17268333",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "I've created a test for this.\u00a0 Currently the code bails (Grouping on a field with nulls).\u00a0 It appears the default behavior in Hive ([https://github.com/apache/hive/blob/1d5e6bdff99cd5aa7b885f001635d7231c3b9d44/common/src/java/org/apache/hadoop/hive/common/FileUtils.java#L271)] is to use the string \"__HIVE_DEFAULT_PARTITION__\" as the value.\u00a0 Googling around for this value confirms that seems to be how it is used in practice.\r\n\r\n\u00a0\r\n\r\nFurthermore, in Hive, empty strings also map to this value.\u00a0 So empty strings and null will map to the same partition.\u00a0 I'm assuming we want compatibility with Hive in this way?\u00a0 Impala did things slightly differently to avoid the ambiguity (https://issues.apache.org/jira/browse/IMPALA-252) by choosing to reject with an error data that had empty strings.\u00a0 However, this sort of strictness doesn't seem quite in keeping with Arrow.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-01-20T02:50:53.720+0000",
                    "updated": "2021-01-20T02:50:53.720+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338135/comment/17268335",
                    "id": "17268335",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Ah, even worse, it appears to be configurable...\r\n{quote}\r\nh5. hive.exec.default.partition.name\r\n * Default Value: {{__HIVE_DEFAULT_PARTITION__}}\r\n * Added In: Hive 0.6.0\r\n\r\nThe default partition name in case the dynamic partition column value is null/empty string or any other values that cannot be escaped. This value must not contain any special character used in HDFS URI (e.g., ':', '%', '/' etc). The user has to be aware that the dynamic partition value should not contain this value to avoid confusions.\r\n{quote}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-01-20T02:58:42.186+0000",
                    "updated": "2021-01-20T02:58:42.186+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338135/comment/17268559",
                    "id": "17268559",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "I am not sure we should exactly follow the (potentially non-ideal) behaviour of Hive, here. Or at least have the option (or default, and have hive-behaviour as option) for different behaviour that can preserve the actual values would be nice? (there will also be many people that use arrow datasets to write hive-like datastores without ever actually interacting with hive)\r\n\r\nAnother source about the topic: https://kb.databricks.com/data/null-empty-strings.html, which concludes with \"This is the expected behavior. It is inherited from Apache Hive.\" and \"Solution: In general, you shouldn\u2019t use both null and empty strings as values in a partitioned column.\"\r\n\r\nSome random other first thoughts:\r\n\r\n- A default could also be to error? (so users will at least be aware of the problem, and of that it will loose empty strings)\r\n- We also need to think about how to do this for directory partitioning, not only for hive partitioning (and using a hive-specific name for a partitioning schema that is not compatible with Hive might make less sense?)\r\n- We currently already read empty string partition values from {{/key=/}} directory names just fine, although this is probably not tested and might only work accidentally (and might also not work for other readers like spark?)\r\n- This might also interact with the discussion whether to include the partition fields in the actual data files or not (because when not left out, the actual file could still hold the real value to distinguish empty vs null)\r\n\r\nAs another observation: dask simply drops rows with missing values in the partition column (silently), but I think that is just inherited by the fact that pandas' groupby implementation by default drops missing values, and not necessarily intentional design.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-01-20T13:00:25.393+0000",
                    "updated": "2021-01-20T13:19:45.741+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338135/comment/17268666",
                    "id": "17268666",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Perhaps we can get away with two string options for each partitioning scheme,\u00a0*empty_fallback_value* and *null_fallback_value*.\u00a0 The default for both would be the empty string but the behavior would be slightly different.\r\n\r\nDefault behavior for hive partitioning:\r\n\r\n\"key=_HIVE_DEFAULT_PARTITION_\" would map to \"null\" on read and on write\r\n \"key=\" would map to an empty string on read, empty strings would result in error on write\r\n\r\nDefault behavior for directory partitioning:\r\n\r\nNothing would map to \"null\" on read, null strings would result in error on write\r\n Nothing would map to empty on read, empty strings would result in error on write.\r\n\r\nThis way hive datasets can be read by default.\u00a0 Datasets with null partitions will write in hive format by default.\u00a0 Datasets with empty strings will throw an error but this can be overridden if the customer desires the hive behavior (by setting \"empty_fallback_value\" to \"_HIVE_DEFAULT_PARTITION_\")\u00a0 By default no data will be lost (since empty strings will error).\r\n\r\n\u00a0\r\n\r\nFor directory partitioning we won't do anything surprising and will just error on missing data.\u00a0 Customers can choose to map values how they want.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-01-20T16:09:47.444+0000",
                    "updated": "2021-01-20T16:12:10.368+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338135/comment/17268695",
                    "id": "17268695",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Although, on further thought, that would prevent the ability to create `key=` style partitions.\u00a0 That would seem ok but in the unlucky event some other system expects the existence of `key=` style partitions it would be pretty frustrating.\u00a0 Also, one small change, I'm preferring \"empty_Fallback\" and \"null_fallback\" (without the _value) since these are labels and not values.\r\n\r\nAnother approach could be to introduce a third option \"hive_compatibility\" which defaults to True.\r\n\r\n\u00a0\r\n||empty_fallback||null_fallback||hive_compatibility||Read null||Write null||Read empty||Write empty||Allows Data Loss||\r\n|\"\" (default)|\"\\_HIVE\\_DEFAULT\\_PARTITION\\_\" (default)|True (default)|\\_HIVE\\_DEFAULT\\_PARITION\\_|\\_HIVE\\_DEFAULT\\_PARTITION\\_|Can't happen|Error|False|\r\n|\\_HIVE\\_DEFAULT\\_PARTITION\\_|\"\\_HIVE\\_DEFAULT\\_PARTITION\\_\" (default)|True (default)|\\_HIVE\\_DEFAULT\\_PARITION\\_|\\_HIVE\\_DEFAULT\\_PARTITION\\_|Can't happen|\\_HIVE\\_DEFAULT\\_PARTITION\\_|True|\r\n|\"\" (default)|\"\\_HIVE\\_DEFAULT\\_PARTITION\\_\" (default)|False|\\_HIVE\\_DEFAULT\\_PARITION\\_|\\_HIVE\\_DEFAULT\\_PARITION\\_|\"\"|\"\"|False|\r\n|\"XYZ\"|\"XYZ\"|True|XYZ|XYZ|Can't happen|XYZ|True|\r\n|\"XYZ\"|\"XYZ\"|False|Raise error on partition create|\u00a0|\u00a0|\u00a0|\u00a0|\r\n|\"XYZ\"|\"ABC\"|True|Raise error on partition create|\u00a0|\u00a0|\u00a0|\u00a0|\r\n|\"XYZ\"|\"ABC\"|False|XYZ|XYZ|ABC|ABC|False|\r\n|\"XYZ\"|\"\"|False|\"\"|\"\"|XYZ|XYZ|False|\r\n|\"\" (default)|\"XYZ\"|True|XYZ|XYZ|Can't happen|Error|False|\r\n\r\nDocstrings for the three options could look something like...\r\n\r\n\u00a0\r\n\r\nempty_fallback - Arrow will use this label when the value is empty.\u00a0 If hive_compatibility is True then the default behavior will raise an exception to prevent data loss.\u00a0 If you would like to maintain hive interoperability with empty strings set this to the same value as null_fallback.\r\n\r\nnull_fallback - Arrow will use this label when the value is null.\u00a0 By default, for legacy reasons, this is \"\\_HIVE\\_DEFAULT\\_PARTITION\\_\"\r\n\r\nhive_compatibility - When this is True Arrow will not allow a separate fallback value for empty strings.\u00a0 Writing empty strings will produce an error.\u00a0 If you wish to silently map empty strings to null (normal hive behavior) then you should also set empty_fallback to match null_fallback.\u00a0 If False, then Arrow will require the empty fallback and null fallback to be separate values.\r\n\r\n\u00a0\r\n\r\nThis all sounds complicated but it might \"just work\".\u00a0 The customer probably won't even be aware of the options until they attempt to write data with empty strings and then they will get an error.\u00a0 At that point they can agree to the data loss by changing \"empty_fallback\" or they can agree to breaking with Hive by disabling \"hive_compatibility\".\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-01-20T16:59:48.379+0000",
                    "updated": "2021-01-20T17:05:04.740+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338135/comment/17276774",
                    "id": "17276774",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "[~jorisvandenbossche] , I spoke with [~bkietz] a bit on this and, at the risk of putting words in his mouth, he also agreed with `I am not sure we should exactly follow the (potentially non-ideal) behaviour of Hive, here.`\r\n\r\nBen's assumption was that we would just omit the directory on null and, if `\\_HIVE\\_DEFAULT\\_PARTITION\\_` is present then just read in that string and allow the user to convert it to null at a later projection stage if that is what they desire.\r\n\r\nThat does make inference a little difficult in this case (right now HivePartitioning will attempt to infer int32 if possible).\r\n\r\nIt also puts the responsibility back on the user if they want to create a dataset compatible with other Hive tools.\r\n\r\nWe agreed it would be good to revisit the topic with you and see if you had any strong opinions.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-02-02T01:21:58.053+0000",
                    "updated": "2021-02-02T01:21:58.053+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13338135/comment/17290020",
                    "id": "17290020",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 9323\n[https://github.com/apache/arrow/pull/9323]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-02-24T15:34:41.666+0000",
                    "updated": "2021-02-24T15:34:41.666+0000"
                }
            ],
            "maxResults": 7,
            "total": 7,
            "startAt": 0
        },
        "customfield_12311820": "0|z0k5x4:",
        "customfield_12314139": null
    }
}