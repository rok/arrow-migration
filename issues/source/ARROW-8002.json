{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13289607",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289607",
    "key": "ARROW-8002",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "dataset",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12594893",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12594893",
                "type": {
                    "id": "12310051",
                    "name": "Supercedes",
                    "inward": "is superceded by",
                    "outward": "supercedes",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310051"
                },
                "outwardIssue": {
                    "id": "13297372",
                    "key": "ARROW-8381",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13297372",
                    "fields": {
                        "summary": "[C++][Dataset] Dataset writing should require a writer schema",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 3600,
            "total": 3600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 3600,
            "total": 3600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8002/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 6,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289607/worklog/464667",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz opened a new pull request #7869:\nURL: https://github.com/apache/arrow/pull/7869\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-30T17:46:01.812+0000",
                    "updated": "2020-07-30T17:46:01.812+0000",
                    "started": "2020-07-30T17:46:01.812+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "464667",
                    "issueId": "13289607"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289607/worklog/464670",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7869:\nURL: https://github.com/apache/arrow/pull/7869#issuecomment-666558756\n\n\n   https://issues.apache.org/jira/browse/ARROW-8002\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-30T17:46:49.342+0000",
                    "updated": "2020-07-30T17:46:49.342+0000",
                    "started": "2020-07-30T17:46:49.342+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "464670",
                    "issueId": "13289607"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289607/worklog/466381",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #7869:\nURL: https://github.com/apache/arrow/pull/7869#discussion_r465242408\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/filter.cc\n##########\n@@ -1493,5 +1495,191 @@ Result<std::shared_ptr<Expression>> Expression::Deserialize(const Buffer& serial\n   return DeserializeImpl{}.FromBuffer(serialized);\n }\n \n+// Transform an array of counts to offsets which will divide a ListArray\n+// into an equal number of slices with corresponding lengths.\n+inline Result<std::shared_ptr<Array>> CountsToOffsets(\n+    std::shared_ptr<Int64Array> counts) {\n+  Int32Builder offset_builder;\n+  RETURN_NOT_OK(offset_builder.Resize(counts->length() + 1));\n+  offset_builder.UnsafeAppend(0);\n+\n+  for (int64_t i = 0; i < counts->length(); ++i) {\n+    DCHECK_NE(counts->Value(i), 0);\n+    auto next_offset = static_cast<int32_t>(offset_builder[i] + counts->Value(i));\n+    offset_builder.UnsafeAppend(next_offset);\n+  }\n+\n+  std::shared_ptr<Array> offsets;\n+  RETURN_NOT_OK(offset_builder.Finish(&offsets));\n+  return offsets;\n+}\n+\n+// Helper for simultaneous dictionary encoding of multiple arrays.\n+//\n+// The fused dictionary is the Cartesian product of the individual dictionaries.\n+// For example given two arrays A, B where A has unique values [\"ex\", \"why\"]\n+// and B has unique values [0, 1] the fused dictionary is the set of tuples\n+// [[\"ex\", 0], [\"ex\", 1], [\"why\", 0], [\"ex\", 1]].\n\nReview comment:\n       What's the behaviour for nulls?\r\n   \r\n   (edit: ah, I see that is checked and raises a NotImplemented error for now)\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.cc\n##########\n@@ -154,52 +157,101 @@ FragmentIterator FileSystemDataset::GetFragmentsImpl(\n   return MakeVectorIterator(std::move(fragments));\n }\n \n-Result<std::shared_ptr<FileSystemDataset>> FileSystemDataset::Write(\n-    const WritePlan& plan, std::shared_ptr<ScanOptions> scan_options,\n-    std::shared_ptr<ScanContext> scan_context) {\n-  auto filesystem = plan.filesystem;\n-  if (filesystem == nullptr) {\n-    filesystem = std::make_shared<fs::LocalFileSystem>();\n-  }\n+struct WriteTask {\n+  Status Execute();\n \n-  auto task_group = scan_context->TaskGroup();\n-  auto partition_base_dir = fs::internal::EnsureTrailingSlash(plan.partition_base_dir);\n-  auto extension = \".\" + plan.format->type_name();\n-\n-  std::vector<std::shared_ptr<FileFragment>> fragments;\n-  for (size_t i = 0; i < plan.paths.size(); ++i) {\n-    const auto& op = plan.fragment_or_partition_expressions[i];\n-    if (op.kind() == WritePlan::FragmentOrPartitionExpression::FRAGMENT) {\n-      auto path = partition_base_dir + plan.paths[i] + extension;\n-\n-      const auto& input_fragment = op.fragment();\n-      FileSource dest(path, filesystem);\n-\n-      ARROW_ASSIGN_OR_RAISE(auto write_task,\n-                            plan.format->WriteFragment({path, filesystem}, input_fragment,\n-                                                       scan_options, scan_context));\n-      task_group->Append([write_task] { return write_task->Execute(); });\n-\n-      ARROW_ASSIGN_OR_RAISE(\n-          auto fragment, plan.format->MakeFragment(\n-                             {path, filesystem}, input_fragment->partition_expression()));\n-      fragments.push_back(std::move(fragment));\n+  std::string basename;\n\nReview comment:\n       doc comment for `basename` ?\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.cc\n##########\n@@ -154,52 +157,101 @@ FragmentIterator FileSystemDataset::GetFragmentsImpl(\n   return MakeVectorIterator(std::move(fragments));\n }\n \n-Result<std::shared_ptr<FileSystemDataset>> FileSystemDataset::Write(\n-    const WritePlan& plan, std::shared_ptr<ScanOptions> scan_options,\n-    std::shared_ptr<ScanContext> scan_context) {\n-  auto filesystem = plan.filesystem;\n-  if (filesystem == nullptr) {\n-    filesystem = std::make_shared<fs::LocalFileSystem>();\n-  }\n+struct WriteTask {\n+  Status Execute();\n \n-  auto task_group = scan_context->TaskGroup();\n-  auto partition_base_dir = fs::internal::EnsureTrailingSlash(plan.partition_base_dir);\n-  auto extension = \".\" + plan.format->type_name();\n-\n-  std::vector<std::shared_ptr<FileFragment>> fragments;\n-  for (size_t i = 0; i < plan.paths.size(); ++i) {\n-    const auto& op = plan.fragment_or_partition_expressions[i];\n-    if (op.kind() == WritePlan::FragmentOrPartitionExpression::FRAGMENT) {\n-      auto path = partition_base_dir + plan.paths[i] + extension;\n-\n-      const auto& input_fragment = op.fragment();\n-      FileSource dest(path, filesystem);\n-\n-      ARROW_ASSIGN_OR_RAISE(auto write_task,\n-                            plan.format->WriteFragment({path, filesystem}, input_fragment,\n-                                                       scan_options, scan_context));\n-      task_group->Append([write_task] { return write_task->Execute(); });\n-\n-      ARROW_ASSIGN_OR_RAISE(\n-          auto fragment, plan.format->MakeFragment(\n-                             {path, filesystem}, input_fragment->partition_expression()));\n-      fragments.push_back(std::move(fragment));\n+  std::string basename;\n+\n+  /// The partitioning with which paths will be generated\n+  std::shared_ptr<Partitioning> partitioning;\n+\n+  /// The format in which fragments will be written\n+  std::shared_ptr<FileFormat> format;\n+\n+  /// The FileSystem and base directory into which fragments will be written\n+  std::shared_ptr<fs::FileSystem> filesystem;\n+  std::string base_dir;\n+\n+  /// Batches to be written\n+  std::shared_ptr<RecordBatchReader> batches;\n+\n+  /// An Expression already satisfied by every batch to be written\n+  std::shared_ptr<Expression> partition_expression;\n\nReview comment:\n       What is this used for?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-04T18:37:45.151+0000",
                    "updated": "2020-08-04T18:37:45.151+0000",
                    "started": "2020-08-04T18:37:45.150+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "466381",
                    "issueId": "13289607"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289607/worklog/466388",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7869:\nURL: https://github.com/apache/arrow/pull/7869#discussion_r465259555\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.cc\n##########\n@@ -154,52 +157,101 @@ FragmentIterator FileSystemDataset::GetFragmentsImpl(\n   return MakeVectorIterator(std::move(fragments));\n }\n \n-Result<std::shared_ptr<FileSystemDataset>> FileSystemDataset::Write(\n-    const WritePlan& plan, std::shared_ptr<ScanOptions> scan_options,\n-    std::shared_ptr<ScanContext> scan_context) {\n-  auto filesystem = plan.filesystem;\n-  if (filesystem == nullptr) {\n-    filesystem = std::make_shared<fs::LocalFileSystem>();\n-  }\n+struct WriteTask {\n+  Status Execute();\n \n-  auto task_group = scan_context->TaskGroup();\n-  auto partition_base_dir = fs::internal::EnsureTrailingSlash(plan.partition_base_dir);\n-  auto extension = \".\" + plan.format->type_name();\n-\n-  std::vector<std::shared_ptr<FileFragment>> fragments;\n-  for (size_t i = 0; i < plan.paths.size(); ++i) {\n-    const auto& op = plan.fragment_or_partition_expressions[i];\n-    if (op.kind() == WritePlan::FragmentOrPartitionExpression::FRAGMENT) {\n-      auto path = partition_base_dir + plan.paths[i] + extension;\n-\n-      const auto& input_fragment = op.fragment();\n-      FileSource dest(path, filesystem);\n-\n-      ARROW_ASSIGN_OR_RAISE(auto write_task,\n-                            plan.format->WriteFragment({path, filesystem}, input_fragment,\n-                                                       scan_options, scan_context));\n-      task_group->Append([write_task] { return write_task->Execute(); });\n-\n-      ARROW_ASSIGN_OR_RAISE(\n-          auto fragment, plan.format->MakeFragment(\n-                             {path, filesystem}, input_fragment->partition_expression()));\n-      fragments.push_back(std::move(fragment));\n+  std::string basename;\n+\n+  /// The partitioning with which paths will be generated\n+  std::shared_ptr<Partitioning> partitioning;\n+\n+  /// The format in which fragments will be written\n+  std::shared_ptr<FileFormat> format;\n+\n+  /// The FileSystem and base directory into which fragments will be written\n+  std::shared_ptr<fs::FileSystem> filesystem;\n+  std::string base_dir;\n+\n+  /// Batches to be written\n+  std::shared_ptr<RecordBatchReader> batches;\n+\n+  /// An Expression already satisfied by every batch to be written\n+  std::shared_ptr<Expression> partition_expression;\n\nReview comment:\n       This stores partition information which was already attached at the fragment level, and therefore may reference virtual columns absent from `batches`. Without this we'd need to materialize those columns then waste time Grouping their (identical) entries, finally dropping them in the common case where we don't write them to disk.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-04T18:52:15.662+0000",
                    "updated": "2020-08-04T18:52:15.662+0000",
                    "started": "2020-08-04T18:52:15.662+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "466388",
                    "issueId": "13289607"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289607/worklog/466393",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7869:\nURL: https://github.com/apache/arrow/pull/7869#discussion_r465261846\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.cc\n##########\n@@ -154,52 +157,101 @@ FragmentIterator FileSystemDataset::GetFragmentsImpl(\n   return MakeVectorIterator(std::move(fragments));\n }\n \n-Result<std::shared_ptr<FileSystemDataset>> FileSystemDataset::Write(\n-    const WritePlan& plan, std::shared_ptr<ScanOptions> scan_options,\n-    std::shared_ptr<ScanContext> scan_context) {\n-  auto filesystem = plan.filesystem;\n-  if (filesystem == nullptr) {\n-    filesystem = std::make_shared<fs::LocalFileSystem>();\n-  }\n+struct WriteTask {\n+  Status Execute();\n \n-  auto task_group = scan_context->TaskGroup();\n-  auto partition_base_dir = fs::internal::EnsureTrailingSlash(plan.partition_base_dir);\n-  auto extension = \".\" + plan.format->type_name();\n-\n-  std::vector<std::shared_ptr<FileFragment>> fragments;\n-  for (size_t i = 0; i < plan.paths.size(); ++i) {\n-    const auto& op = plan.fragment_or_partition_expressions[i];\n-    if (op.kind() == WritePlan::FragmentOrPartitionExpression::FRAGMENT) {\n-      auto path = partition_base_dir + plan.paths[i] + extension;\n-\n-      const auto& input_fragment = op.fragment();\n-      FileSource dest(path, filesystem);\n-\n-      ARROW_ASSIGN_OR_RAISE(auto write_task,\n-                            plan.format->WriteFragment({path, filesystem}, input_fragment,\n-                                                       scan_options, scan_context));\n-      task_group->Append([write_task] { return write_task->Execute(); });\n-\n-      ARROW_ASSIGN_OR_RAISE(\n-          auto fragment, plan.format->MakeFragment(\n-                             {path, filesystem}, input_fragment->partition_expression()));\n-      fragments.push_back(std::move(fragment));\n+  std::string basename;\n\nReview comment:\n       Will do.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-04T18:56:52.153+0000",
                    "updated": "2020-08-04T18:56:52.153+0000",
                    "started": "2020-08-04T18:56:52.153+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "466393",
                    "issueId": "13289607"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289607/worklog/466926",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz closed pull request #7869:\nURL: https://github.com/apache/arrow/pull/7869\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-05T18:14:28.380+0000",
                    "updated": "2020-08-05T18:14:28.380+0000",
                    "started": "2020-08-05T18:14:28.379+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "466926",
                    "issueId": "13289607"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 3600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@758a56fa[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@535edb5f[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@271cfed4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2bd4d4b[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6ce94315[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5e7070b5[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1edadff1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@76650e74[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@50320a46[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@d9a2d2d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@45f75e38[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1b3fee5c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 3600,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Aug 05 18:14:23 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-08-05T18:14:22.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8002/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2020-03-04T18:50:52.000+0000",
        "updated": "2020-08-05T19:02:26.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 3600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Dataset] Dataset writing should let you (re)partition the data",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289607/comment/17171662",
                    "id": "17171662",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 7869\n[https://github.com/apache/arrow/pull/7869]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-08-05T18:14:23.034+0000",
                    "updated": "2020-08-05T18:14:23.034+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0c63s:",
        "customfield_12314139": null
    }
}