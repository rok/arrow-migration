{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13198868",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198868",
    "key": "ARROW-3808",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
            "name": "romainfrancois",
            "key": "romainfrancois",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
            },
            "displayName": "Romain Francois",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
            "name": "romainfrancois",
            "key": "romainfrancois",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
            },
            "displayName": "Romain Francois",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 15600,
            "total": 15600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 15600,
            "total": 15600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3808/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 26,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198868/worklog/319797",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #5531: ARROW-3808: [R] Array extract, including Take method\nURL: https://github.com/apache/arrow/pull/5531\n \n \n   I implemented `Array__Take` and then wrote a `RecordBatch__Take` that wraps that. For both, I also added an R-based `Filter` method that translates R logical to numeric indices and passes to `Take`. This provides full R `[` semantics for these two classes.\r\n   \r\n   Still to do: same for ChunkedArray and Table. There is no Take method for ChunkedArray in the C++ library, so I plan to write one by iterating over the Array chunks. `Table__Take` will then look pretty similar to `RecordBatch__Take`, just with `ChunkedArrays`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-27T20:31:13.696+0000",
                    "updated": "2019-09-27T20:31:13.696+0000",
                    "started": "2019-09-27T20:31:13.696+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "319797",
                    "issueId": "13198868"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198868/worklog/319929",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5531: ARROW-3808: [R] Array extract, including Take method\nURL: https://github.com/apache/arrow/pull/5531#issuecomment-536138505\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=h1) Report\n   > Merging [#5531](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/7fb6b751f687c54d934ae85c2dbfd7f6bbaca64e?src=pr&el=desc) will **decrease** coverage by `12.16%`.\n   > The diff coverage is `96.42%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5531/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=tree)\n   \n   ```diff\n   @@             Coverage Diff             @@\n   ##           master    #5531       +/-   ##\n   ===========================================\n   - Coverage   89.24%   77.07%   -12.17%     \n   ===========================================\n     Files         875       59      -816     \n     Lines      119679     4379   -115300     \n     Branches     1501        0     -1501     \n   ===========================================\n   - Hits       106803     3375   -103428     \n   + Misses      12865     1004    -11861     \n   + Partials       11        0       -11\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [r/R/arrowExports.R](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9SL2Fycm93RXhwb3J0cy5S) | `73.37% <100%> (+0.17%)` | :arrow_up: |\n   | [r/src/arrowExports.cpp](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9zcmMvYXJyb3dFeHBvcnRzLmNwcA==) | `73.09% <100%> (+0.18%)` | :arrow_up: |\n   | [r/R/record-batch.R](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9SL3JlY29yZC1iYXRjaC5S) | `97.46% <100%> (+0.09%)` | :arrow_up: |\n   | [r/src/compute.cpp](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9zcmMvY29tcHV0ZS5jcHA=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [r/R/array.R](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9SL2FycmF5LlI=) | `82.75% <91.3%> (+5.61%)` | :arrow_up: |\n   | [python/pyarrow/ipc.pxi](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaXBjLnB4aQ==) | | |\n   | [cpp/src/parquet/column\\_page.h](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2NvbHVtbl9wYWdlLmg=) | | |\n   | [cpp/src/plasma/test/external\\_store\\_tests.cc](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGVzdC9leHRlcm5hbF9zdG9yZV90ZXN0cy5jYw==) | | |\n   | [cpp/src/arrow/array/builder\\_decimal.cc](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS9idWlsZGVyX2RlY2ltYWwuY2M=) | | |\n   | [cpp/src/plasma/client.cc](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY2xpZW50LmNj) | | |\n   | ... and [811 more](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=footer). Last update [7fb6b75...fbbcc6e](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-28T01:13:05.184+0000",
                    "updated": "2019-09-28T01:13:05.184+0000",
                    "started": "2019-09-28T01:13:05.183+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "319929",
                    "issueId": "13198868"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198868/worklog/320085",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5531: ARROW-3808: [R] Array extract, including Take method\nURL: https://github.com/apache/arrow/pull/5531#issuecomment-536138505\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=h1) Report\n   > Merging [#5531](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/7fb6b751f687c54d934ae85c2dbfd7f6bbaca64e?src=pr&el=desc) will **decrease** coverage by `11.51%`.\n   > The diff coverage is `92.59%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5531/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=tree)\n   \n   ```diff\n   @@             Coverage Diff             @@\n   ##           master    #5531       +/-   ##\n   ===========================================\n   - Coverage   88.66%   77.15%   -11.52%     \n   ===========================================\n     Files         965       59      -906     \n     Lines      128533     4421   -124112     \n     Branches     1501        0     -1501     \n   ===========================================\n   - Hits       113964     3411   -110553     \n   + Misses      14204     1010    -13194     \n   + Partials      365        0      -365\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [r/src/chunkedarray.cpp](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9zcmMvY2h1bmtlZGFycmF5LmNwcA==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [r/src/compute.cpp](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9zcmMvY29tcHV0ZS5jcHA=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [r/R/record-batch.R](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9SL3JlY29yZC1iYXRjaC5S) | `97.53% <100%> (+0.16%)` | :arrow_up: |\n   | [r/R/arrowExports.R](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9SL2Fycm93RXhwb3J0cy5S) | `73.54% <100%> (+0.34%)` | :arrow_up: |\n   | [r/src/arrowExports.cpp](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9zcmMvYXJyb3dFeHBvcnRzLmNwcA==) | `73.27% <100%> (+0.37%)` | :arrow_up: |\n   | [r/R/chunked-array.R](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9SL2NodW5rZWQtYXJyYXkuUg==) | `84.21% <60%> (-15.79%)` | :arrow_down: |\n   | [r/R/array.R](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9SL2FycmF5LlI=) | `83.87% <92.59%> (+6.72%)` | :arrow_up: |\n   | [python/pyarrow/ipc.pxi](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaXBjLnB4aQ==) | | |\n   | [cpp/src/parquet/column\\_page.h](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2NvbHVtbl9wYWdlLmg=) | | |\n   | [cpp/src/plasma/test/external\\_store\\_tests.cc](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGVzdC9leHRlcm5hbF9zdG9yZV90ZXN0cy5jYw==) | | |\n   | ... and [903 more](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=footer). Last update [7fb6b75...6c57520](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-29T00:00:41.257+0000",
                    "updated": "2019-09-29T00:00:41.257+0000",
                    "started": "2019-09-29T00:00:41.257+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "320085",
                    "issueId": "13198868"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198868/worklog/320269",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #5531: ARROW-3808: [R] Array extract, including Take method\nURL: https://github.com/apache/arrow/pull/5531#issuecomment-536329775\n \n \n   https://issues.apache.org/jira/browse/ARROW-3808\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-29T18:46:13.339+0000",
                    "updated": "2019-09-29T18:46:13.339+0000",
                    "started": "2019-09-29T18:46:13.339+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "320269",
                    "issueId": "13198868"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198868/worklog/320682",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5531: ARROW-3808: [R] Array extract, including Take method\nURL: https://github.com/apache/arrow/pull/5531#issuecomment-536138505\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=h1) Report\n   > Merging [#5531](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/7fb6b751f687c54d934ae85c2dbfd7f6bbaca64e?src=pr&el=desc) will **decrease** coverage by `11.22%`.\n   > The diff coverage is `96.68%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5531/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=tree)\n   \n   ```diff\n   @@             Coverage Diff             @@\n   ##           master    #5531       +/-   ##\n   ===========================================\n   - Coverage   88.66%   77.44%   -11.23%     \n   ===========================================\n     Files         965       59      -906     \n     Lines      128533     4464   -124069     \n     Branches     1501        0     -1501     \n   ===========================================\n   - Hits       113964     3457   -110507     \n   + Misses      14204     1007    -13197     \n   + Partials      365        0      -365\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [r/src/chunkedarray.cpp](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9zcmMvY2h1bmtlZGFycmF5LmNwcA==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [r/R/record-batch.R](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9SL3JlY29yZC1iYXRjaC5S) | `97.53% <100%> (+0.16%)` | :arrow_up: |\n   | [r/R/arrowExports.R](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9SL2Fycm93RXhwb3J0cy5S) | `73.71% <100%> (+0.51%)` | :arrow_up: |\n   | [r/src/arrowExports.cpp](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9zcmMvYXJyb3dFeHBvcnRzLmNwcA==) | `73.46% <100%> (+0.56%)` | :arrow_up: |\n   | [r/R/chunked-array.R](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9SL2NodW5rZWQtYXJyYXkuUg==) | `97.05% <90.9%> (-2.95%)` | :arrow_down: |\n   | [r/R/array.R](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9SL2FycmF5LlI=) | `83.87% <92.59%> (+6.72%)` | :arrow_up: |\n   | [r/src/compute.cpp](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9zcmMvY29tcHV0ZS5jcHA=) | `97.7% <96.55%> (-2.3%)` | :arrow_down: |\n   | [python/pyarrow/ipc.pxi](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaXBjLnB4aQ==) | | |\n   | [cpp/src/parquet/column\\_page.h](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2NvbHVtbl9wYWdlLmg=) | | |\n   | [cpp/src/plasma/test/external\\_store\\_tests.cc](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGVzdC9leHRlcm5hbF9zdG9yZV90ZXN0cy5jYw==) | | |\n   | ... and [903 more](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=footer). Last update [7fb6b75...5abe432](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-30T17:12:41.446+0000",
                    "updated": "2019-09-30T17:12:41.446+0000",
                    "started": "2019-09-30T17:12:41.445+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "320682",
                    "issueId": "13198868"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198868/worklog/321030",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5531: ARROW-3808: [R] Array extract, including Take method\nURL: https://github.com/apache/arrow/pull/5531#issuecomment-536138505\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=h1) Report\n   > Merging [#5531](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/7fb6b751f687c54d934ae85c2dbfd7f6bbaca64e?src=pr&el=desc) will **decrease** coverage by `11.05%`.\n   > The diff coverage is `97.29%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5531/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=tree)\n   \n   ```diff\n   @@             Coverage Diff             @@\n   ##           master    #5531       +/-   ##\n   ===========================================\n   - Coverage   88.66%   77.61%   -11.06%     \n   ===========================================\n     Files         965       59      -906     \n     Lines      128533     4498   -124035     \n     Branches     1501        0     -1501     \n   ===========================================\n   - Hits       113964     3491   -110473     \n   + Misses      14204     1007    -13197     \n   + Partials      365        0      -365\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [r/src/chunkedarray.cpp](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9zcmMvY2h1bmtlZGFycmF5LmNwcA==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [r/R/record-batch.R](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9SL3JlY29yZC1iYXRjaC5S) | `97.53% <100%> (+0.16%)` | :arrow_up: |\n   | [r/R/arrowExports.R](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9SL2Fycm93RXhwb3J0cy5S) | `73.88% <100%> (+0.68%)` | :arrow_up: |\n   | [r/src/arrowExports.cpp](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9zcmMvYXJyb3dFeHBvcnRzLmNwcA==) | `73.64% <100%> (+0.74%)` | :arrow_up: |\n   | [r/R/table.R](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9SL3RhYmxlLlI=) | `92.85% <90%> (-0.9%)` | :arrow_down: |\n   | [r/R/chunked-array.R](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9SL2NodW5rZWQtYXJyYXkuUg==) | `97.05% <90.9%> (-2.95%)` | :arrow_down: |\n   | [r/R/array.R](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9SL2FycmF5LlI=) | `83.87% <92.59%> (+6.72%)` | :arrow_up: |\n   | [r/src/compute.cpp](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9zcmMvY29tcHV0ZS5jcHA=) | `98.98% <98.57%> (-1.02%)` | :arrow_down: |\n   | [python/pyarrow/ipc.pxi](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaXBjLnB4aQ==) | | |\n   | [cpp/src/parquet/column\\_page.h](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2NvbHVtbl9wYWdlLmg=) | | |\n   | ... and [904 more](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=footer). Last update [7fb6b75...075bed2](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-01T02:31:54.825+0000",
                    "updated": "2019-10-01T02:31:54.825+0000",
                    "started": "2019-10-01T02:31:54.825+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "321030",
                    "issueId": "13198868"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198868/worklog/321679",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5531: ARROW-3808: [R] Array extract, including Take method\nURL: https://github.com/apache/arrow/pull/5531#issuecomment-536138505\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=h1) Report\n   > :exclamation: No coverage uploaded for pull request base (`master@8231fcb`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n   > The diff coverage is `98.5%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5531/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff            @@\n   ##             master    #5531   +/-   ##\n   =========================================\n     Coverage          ?   77.74%           \n   =========================================\n     Files             ?       59           \n     Lines             ?     4512           \n     Branches          ?        0           \n   =========================================\n     Hits              ?     3508           \n     Misses            ?     1004           \n     Partials          ?        0\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [r/R/type.R](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9SL3R5cGUuUg==) | `84.88% <\u00f8> (\u00f8)` | |\n   | [r/R/table.R](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9SL3RhYmxlLlI=) | `95.45% <100%> (\u00f8)` | |\n   | [r/src/chunkedarray.cpp](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9zcmMvY2h1bmtlZGFycmF5LmNwcA==) | `100% <100%> (\u00f8)` | |\n   | [r/R/record-batch.R](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9SL3JlY29yZC1iYXRjaC5S) | `97.53% <100%> (\u00f8)` | |\n   | [r/R/arrowExports.R](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9SL2Fycm93RXhwb3J0cy5S) | `73.88% <100%> (\u00f8)` | |\n   | [r/src/arrowExports.cpp](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9zcmMvYXJyb3dFeHBvcnRzLmNwcA==) | `73.64% <100%> (\u00f8)` | |\n   | [r/R/chunked-array.R](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9SL2NodW5rZWQtYXJyYXkuUg==) | `97.29% <92.85%> (\u00f8)` | |\n   | [r/R/array.R](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9SL2FycmF5LlI=) | `87.5% <97.29%> (\u00f8)` | |\n   | [r/src/compute.cpp](https://codecov.io/gh/apache/arrow/pull/5531/diff?src=pr&el=tree#diff-ci9zcmMvY29tcHV0ZS5jcHA=) | `98.98% <98.57%> (\u00f8)` | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=footer). Last update [8231fcb...51cc93f](https://codecov.io/gh/apache/arrow/pull/5531?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-02T04:37:58.582+0000",
                    "updated": "2019-10-02T04:37:58.582+0000",
                    "started": "2019-10-02T04:37:58.582+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "321679",
                    "issueId": "13198868"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198868/worklog/322101",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #5531: ARROW-3808: [R] Array extract, including Take method\nURL: https://github.com/apache/arrow/pull/5531#discussion_r330689534\n \n \n\n ##########\n File path: r/src/compute.cpp\n ##########\n @@ -82,4 +82,148 @@ std::shared_ptr<arrow::Table> Table__cast(\n   return arrow::Table::Make(schema, std::move(columns), table->num_rows());\n }\n \n+// [[arrow::export]]\n+std::shared_ptr<arrow::Array> Array__Take(\n+    const std::shared_ptr<arrow::Array>& values,\n+    const std::shared_ptr<arrow::Array>& indices) {\n+\n+  std::shared_ptr<arrow::Array> out;\n+  arrow::compute::FunctionContext context;\n+  arrow::compute::TakeOptions options;\n+  STOP_IF_NOT_OK(arrow::compute::Take(&context, *values, *indices, options, &out));\n+  return out;\n+}\n+\n+// [[arrow::export]]\n+std::shared_ptr<arrow::RecordBatch> RecordBatch__Take(\n+    const std::shared_ptr<arrow::RecordBatch>& batch,\n+    const std::shared_ptr<arrow::Array>& indices) {\n+  int ncols = batch->num_columns();\n+  auto nrows = indices->length();\n+\n+  std::vector<std::shared_ptr<arrow::Array>> columns(ncols);\n+\n+  for (R_xlen_t j = 0; j < ncols; j++) {\n+    columns[j] = Array__Take(batch->column(j), indices);\n+  }\n+\n+  return arrow::RecordBatch::Make(batch->schema(), nrows, columns);\n+}\n+\n+// [[arrow::export]]\n+std::shared_ptr<arrow::ChunkedArray> ChunkedArray__Take(\n \n Review comment:\n   shouldn't we try to implement this ChunkedArray.Take logic in C++ ? (so python and others also benefit)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-02T17:57:00.369+0000",
                    "updated": "2019-10-02T17:57:00.369+0000",
                    "started": "2019-10-02T17:57:00.368+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "322101",
                    "issueId": "13198868"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198868/worklog/322154",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #5531: ARROW-3808: [R] Array extract, including Take method\nURL: https://github.com/apache/arrow/pull/5531#discussion_r330717223\n \n \n\n ##########\n File path: r/src/compute.cpp\n ##########\n @@ -82,4 +82,148 @@ std::shared_ptr<arrow::Table> Table__cast(\n   return arrow::Table::Make(schema, std::move(columns), table->num_rows());\n }\n \n+// [[arrow::export]]\n+std::shared_ptr<arrow::Array> Array__Take(\n+    const std::shared_ptr<arrow::Array>& values,\n+    const std::shared_ptr<arrow::Array>& indices) {\n+\n+  std::shared_ptr<arrow::Array> out;\n+  arrow::compute::FunctionContext context;\n+  arrow::compute::TakeOptions options;\n+  STOP_IF_NOT_OK(arrow::compute::Take(&context, *values, *indices, options, &out));\n+  return out;\n+}\n+\n+// [[arrow::export]]\n+std::shared_ptr<arrow::RecordBatch> RecordBatch__Take(\n+    const std::shared_ptr<arrow::RecordBatch>& batch,\n+    const std::shared_ptr<arrow::Array>& indices) {\n+  int ncols = batch->num_columns();\n+  auto nrows = indices->length();\n+\n+  std::vector<std::shared_ptr<arrow::Array>> columns(ncols);\n+\n+  for (R_xlen_t j = 0; j < ncols; j++) {\n+    columns[j] = Array__Take(batch->column(j), indices);\n+  }\n+\n+  return arrow::RecordBatch::Make(batch->schema(), nrows, columns);\n+}\n+\n+// [[arrow::export]]\n+std::shared_ptr<arrow::ChunkedArray> ChunkedArray__Take(\n \n Review comment:\n   I would think so, but (1) it was faster for me to prototype here and (2) it wasn't clear to me what the expectations for this function would be, so I figured I'd write something and that could spark some discussion.\r\n   \r\n   IMO I'd prefer to merge this PR with the code where it is and open a followup Jira to relocate this and some other functions to the C++ library.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-02T18:57:27.002+0000",
                    "updated": "2019-10-02T18:57:27.002+0000",
                    "started": "2019-10-02T18:57:27.002+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "322154",
                    "issueId": "13198868"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198868/worklog/322479",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #5531: ARROW-3808: [R] Array extract, including Take method\nURL: https://github.com/apache/arrow/pull/5531#discussion_r330933880\n \n \n\n ##########\n File path: r/src/compute.cpp\n ##########\n @@ -82,4 +82,148 @@ std::shared_ptr<arrow::Table> Table__cast(\n   return arrow::Table::Make(schema, std::move(columns), table->num_rows());\n }\n \n+// [[arrow::export]]\n+std::shared_ptr<arrow::Array> Array__Take(\n+    const std::shared_ptr<arrow::Array>& values,\n+    const std::shared_ptr<arrow::Array>& indices) {\n+\n+  std::shared_ptr<arrow::Array> out;\n+  arrow::compute::FunctionContext context;\n+  arrow::compute::TakeOptions options;\n+  STOP_IF_NOT_OK(arrow::compute::Take(&context, *values, *indices, options, &out));\n+  return out;\n+}\n+\n+// [[arrow::export]]\n+std::shared_ptr<arrow::RecordBatch> RecordBatch__Take(\n+    const std::shared_ptr<arrow::RecordBatch>& batch,\n+    const std::shared_ptr<arrow::Array>& indices) {\n+  int ncols = batch->num_columns();\n+  auto nrows = indices->length();\n+\n+  std::vector<std::shared_ptr<arrow::Array>> columns(ncols);\n+\n+  for (R_xlen_t j = 0; j < ncols; j++) {\n+    columns[j] = Array__Take(batch->column(j), indices);\n+  }\n+\n+  return arrow::RecordBatch::Make(batch->schema(), nrows, columns);\n+}\n+\n+// [[arrow::export]]\n+std::shared_ptr<arrow::ChunkedArray> ChunkedArray__Take(\n \n Review comment:\n   Same. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-03T09:04:33.647+0000",
                    "updated": "2019-10-03T09:04:33.647+0000",
                    "started": "2019-10-03T09:04:33.645+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "322479",
                    "issueId": "13198868"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198868/worklog/322560",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #5531: ARROW-3808: [R] Array extract, including Take method\nURL: https://github.com/apache/arrow/pull/5531#discussion_r330939435\n \n \n\n ##########\n File path: r/R/array.R\n ##########\n @@ -156,3 +181,55 @@ length.Array <- function(x) x$length()\n \n #' @export\n as.vector.Array <- function(x, mode) x$as_vector()\n+\n+filter_rows <- function(x, i, ...) {\n+  # General purpose function for [ row subsetting with R semantics\n+  # Based on the input for `i`, calls x$Filter, x$Slice, or x$Take\n+  nrows <- x$num_rows %||% x$length() # Depends on whether Array or Table-like\n+  if (is.logical(i)) {\n+    i <- rep_len(i, nrows) # For R recycling behavior\n \n Review comment:\n   Can this use `vctrs::vec_recycle()` so that we only get tidy recycling ?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-03T12:28:21.637+0000",
                    "updated": "2019-10-03T12:28:21.637+0000",
                    "started": "2019-10-03T12:28:21.636+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "322560",
                    "issueId": "13198868"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198868/worklog/322561",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #5531: ARROW-3808: [R] Array extract, including Take method\nURL: https://github.com/apache/arrow/pull/5531#discussion_r330938360\n \n \n\n ##########\n File path: r/R/array.R\n ##########\n @@ -85,6 +93,23 @@ Array <- R6Class(\"Array\",\n         shared_ptr(Array, Array__Slice2(self, offset, length))\n       }\n     },\n+    Take = function(i) {\n+      if (is.numeric(i)) {\n+        i <- as.integer(i)\n+      }\n+      if (is.integer(i)) {\n+        i <- Array$create(i)\n+      }\n+      assert_is(i, \"Array\") # Assert type too? Support ChunkedArray too?\n+      shared_ptr(Array, Array__Take(self, i))\n+    },\n+    Filter = function(i) {\n+      if (is.logical(i)) {\n+        i <- Array$create(i)\n+      }\n+      assert_is(i, \"Array\") # Assert type too?\n \n Review comment:\n   This does not seem necessary because of these: \r\n   \r\n   ```cpp\r\n     if (filter_type->id() != Type::BOOL) {\r\n       return Status::TypeError(\"filter array must be of boolean type, got \", *filter_type);\r\n     }\r\n   ```\r\n   \r\n   unless we want a different error message\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-03T12:28:21.871+0000",
                    "updated": "2019-10-03T12:28:21.871+0000",
                    "started": "2019-10-03T12:28:21.870+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "322561",
                    "issueId": "13198868"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198868/worklog/322633",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #5531: ARROW-3808: [R] Array extract, including Take method\nURL: https://github.com/apache/arrow/pull/5531#discussion_r331065562\n \n \n\n ##########\n File path: r/src/compute.cpp\n ##########\n @@ -82,4 +82,148 @@ std::shared_ptr<arrow::Table> Table__cast(\n   return arrow::Table::Make(schema, std::move(columns), table->num_rows());\n }\n \n+// [[arrow::export]]\n+std::shared_ptr<arrow::Array> Array__Take(\n+    const std::shared_ptr<arrow::Array>& values,\n+    const std::shared_ptr<arrow::Array>& indices) {\n+\n+  std::shared_ptr<arrow::Array> out;\n+  arrow::compute::FunctionContext context;\n+  arrow::compute::TakeOptions options;\n+  STOP_IF_NOT_OK(arrow::compute::Take(&context, *values, *indices, options, &out));\n+  return out;\n+}\n+\n+// [[arrow::export]]\n+std::shared_ptr<arrow::RecordBatch> RecordBatch__Take(\n+    const std::shared_ptr<arrow::RecordBatch>& batch,\n+    const std::shared_ptr<arrow::Array>& indices) {\n+  int ncols = batch->num_columns();\n+  auto nrows = indices->length();\n+\n+  std::vector<std::shared_ptr<arrow::Array>> columns(ncols);\n+\n+  for (R_xlen_t j = 0; j < ncols; j++) {\n+    columns[j] = Array__Take(batch->column(j), indices);\n+  }\n+\n+  return arrow::RecordBatch::Make(batch->schema(), nrows, columns);\n+}\n+\n+// [[arrow::export]]\n+std::shared_ptr<arrow::ChunkedArray> ChunkedArray__Take(\n \n Review comment:\n   Sure!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-03T14:19:01.609+0000",
                    "updated": "2019-10-03T14:19:01.609+0000",
                    "started": "2019-10-03T14:19:01.600+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "322633",
                    "issueId": "13198868"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198868/worklog/322705",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #5531: ARROW-3808: [R] Array extract, including Take method\nURL: https://github.com/apache/arrow/pull/5531#discussion_r331120812\n \n \n\n ##########\n File path: r/R/array.R\n ##########\n @@ -156,3 +181,55 @@ length.Array <- function(x) x$length()\n \n #' @export\n as.vector.Array <- function(x, mode) x$as_vector()\n+\n+filter_rows <- function(x, i, ...) {\n+  # General purpose function for [ row subsetting with R semantics\n+  # Based on the input for `i`, calls x$Filter, x$Slice, or x$Take\n+  nrows <- x$num_rows %||% x$length() # Depends on whether Array or Table-like\n+  if (is.logical(i)) {\n+    i <- rep_len(i, nrows) # For R recycling behavior\n \n Review comment:\n   Sure\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-03T15:59:43.028+0000",
                    "updated": "2019-10-03T15:59:43.028+0000",
                    "started": "2019-10-03T15:59:43.027+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "322705",
                    "issueId": "13198868"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198868/worklog/322711",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #5531: ARROW-3808: [R] Array extract, including Take method\nURL: https://github.com/apache/arrow/pull/5531#discussion_r331123803\n \n \n\n ##########\n File path: r/R/array.R\n ##########\n @@ -156,3 +181,55 @@ length.Array <- function(x) x$length()\n \n #' @export\n as.vector.Array <- function(x, mode) x$as_vector()\n+\n+filter_rows <- function(x, i, ...) {\n+  # General purpose function for [ row subsetting with R semantics\n+  # Based on the input for `i`, calls x$Filter, x$Slice, or x$Take\n+  nrows <- x$num_rows %||% x$length() # Depends on whether Array or Table-like\n+  if (is.logical(i)) {\n+    i <- rep_len(i, nrows) # For R recycling behavior\n \n Review comment:\n   We don't currently Import `vctrs` (it's in Suggests). Is it worth adding for this? Is it stable enough?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-03T16:06:13.279+0000",
                    "updated": "2019-10-03T16:06:13.279+0000",
                    "started": "2019-10-03T16:06:13.279+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "322711",
                    "issueId": "13198868"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198868/worklog/322759",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5531: ARROW-3808: [R] Array extract, including Take method\nURL: https://github.com/apache/arrow/pull/5531#discussion_r331156642\n \n \n\n ##########\n File path: r/src/compute.cpp\n ##########\n @@ -82,4 +82,148 @@ std::shared_ptr<arrow::Table> Table__cast(\n   return arrow::Table::Make(schema, std::move(columns), table->num_rows());\n }\n \n+// [[arrow::export]]\n+std::shared_ptr<arrow::Array> Array__Take(\n+    const std::shared_ptr<arrow::Array>& values,\n+    const std::shared_ptr<arrow::Array>& indices) {\n+\n+  std::shared_ptr<arrow::Array> out;\n+  arrow::compute::FunctionContext context;\n+  arrow::compute::TakeOptions options;\n+  STOP_IF_NOT_OK(arrow::compute::Take(&context, *values, *indices, options, &out));\n+  return out;\n+}\n+\n+// [[arrow::export]]\n+std::shared_ptr<arrow::RecordBatch> RecordBatch__Take(\n+    const std::shared_ptr<arrow::RecordBatch>& batch,\n+    const std::shared_ptr<arrow::Array>& indices) {\n+  int ncols = batch->num_columns();\n+  auto nrows = indices->length();\n+\n+  std::vector<std::shared_ptr<arrow::Array>> columns(ncols);\n+\n+  for (R_xlen_t j = 0; j < ncols; j++) {\n+    columns[j] = Array__Take(batch->column(j), indices);\n+  }\n+\n+  return arrow::RecordBatch::Make(batch->schema(), nrows, columns);\n+}\n+\n+// [[arrow::export]]\n+std::shared_ptr<arrow::ChunkedArray> ChunkedArray__Take(\n+    const std::shared_ptr<arrow::ChunkedArray>& values,\n+    Rcpp::IntegerVector& indices) {\n+\n+  int num_chunks = values->num_chunks();\n+  std::vector<std::shared_ptr<arrow::Array>> new_chunks(1); // Hard-coded 1 for now\n+  // TODO: fast path if there's only 1 chunk?\n+\n+  std::shared_ptr<arrow::Array> current_chunk;\n+  std::shared_ptr<arrow::Array> current_indices;\n+  int offset = 0;\n+  int len;\n+  int min_i = indices[0];\n+  int max_i = indices[0];\n+\n+  // 1) see if all i are in the same chunk, call Array__Take on that\n+  for (R_xlen_t i = 0; i < indices.size(); i++) {\n+    if (indices[i] < min_i) {\n+      min_i = indices[i];\n+    } else if (indices[i] > max_i) {\n+      max_i = indices[i];\n+    }\n+  }\n+\n+  for (R_xlen_t chk = 0; chk < num_chunks; chk++) {\n+    current_chunk = values->chunk(chk);\n+    len = current_chunk->length();\n+    if (min_i >= offset & max_i < offset + len) {\n+      for (R_xlen_t i = 0; i < indices.size(); i++) {\n+        // Subtract offset from all indices\n+        indices[i] -= offset;\n+      }\n+      current_indices = arrow::r::Array__from_vector(indices, arrow::int32(), true);\n+      new_chunks[0] = Array__Take(current_chunk, current_indices);\n+      return std::make_shared<arrow::ChunkedArray>(std::move(new_chunks));\n+    }\n+    offset += len;\n+  }\n+  Rcpp::stop(\"ChunkedArray$Take() only supported when all i are in the same chunk\");\n \n Review comment:\n   Alternatively, you could concatenate the chunks and call Take on the result:\r\n   ```suggestion\r\n     std::shared_ptr<Array> concatenated;\r\n     RETURN_NOT_OK(arrow::Concatenate(values->chunks(), arrow::default_memory_pool(), &concatenated));\r\n     new_chunks[0] = Array__Take(concatenated, arrow::r::Array__from_vector(indices, arrow::int32(), true));\r\n     return std::make_shared<arrow::ChunkedArray>(std::move(new_chunks));\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-03T17:24:48.994+0000",
                    "updated": "2019-10-03T17:24:48.994+0000",
                    "started": "2019-10-03T17:24:48.994+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "322759",
                    "issueId": "13198868"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198868/worklog/322764",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #5531: ARROW-3808: [R] Array extract, including Take method\nURL: https://github.com/apache/arrow/pull/5531#discussion_r331160991\n \n \n\n ##########\n File path: r/src/compute.cpp\n ##########\n @@ -82,4 +82,148 @@ std::shared_ptr<arrow::Table> Table__cast(\n   return arrow::Table::Make(schema, std::move(columns), table->num_rows());\n }\n \n+// [[arrow::export]]\n+std::shared_ptr<arrow::Array> Array__Take(\n+    const std::shared_ptr<arrow::Array>& values,\n+    const std::shared_ptr<arrow::Array>& indices) {\n+\n+  std::shared_ptr<arrow::Array> out;\n+  arrow::compute::FunctionContext context;\n+  arrow::compute::TakeOptions options;\n+  STOP_IF_NOT_OK(arrow::compute::Take(&context, *values, *indices, options, &out));\n+  return out;\n+}\n+\n+// [[arrow::export]]\n+std::shared_ptr<arrow::RecordBatch> RecordBatch__Take(\n+    const std::shared_ptr<arrow::RecordBatch>& batch,\n+    const std::shared_ptr<arrow::Array>& indices) {\n+  int ncols = batch->num_columns();\n+  auto nrows = indices->length();\n+\n+  std::vector<std::shared_ptr<arrow::Array>> columns(ncols);\n+\n+  for (R_xlen_t j = 0; j < ncols; j++) {\n+    columns[j] = Array__Take(batch->column(j), indices);\n+  }\n+\n+  return arrow::RecordBatch::Make(batch->schema(), nrows, columns);\n+}\n+\n+// [[arrow::export]]\n+std::shared_ptr<arrow::ChunkedArray> ChunkedArray__Take(\n+    const std::shared_ptr<arrow::ChunkedArray>& values,\n+    Rcpp::IntegerVector& indices) {\n+\n+  int num_chunks = values->num_chunks();\n+  std::vector<std::shared_ptr<arrow::Array>> new_chunks(1); // Hard-coded 1 for now\n+  // TODO: fast path if there's only 1 chunk?\n+\n+  std::shared_ptr<arrow::Array> current_chunk;\n+  std::shared_ptr<arrow::Array> current_indices;\n+  int offset = 0;\n+  int len;\n+  int min_i = indices[0];\n+  int max_i = indices[0];\n+\n+  // 1) see if all i are in the same chunk, call Array__Take on that\n+  for (R_xlen_t i = 0; i < indices.size(); i++) {\n+    if (indices[i] < min_i) {\n+      min_i = indices[i];\n+    } else if (indices[i] > max_i) {\n+      max_i = indices[i];\n+    }\n+  }\n+\n+  for (R_xlen_t chk = 0; chk < num_chunks; chk++) {\n+    current_chunk = values->chunk(chk);\n+    len = current_chunk->length();\n+    if (min_i >= offset & max_i < offset + len) {\n+      for (R_xlen_t i = 0; i < indices.size(); i++) {\n+        // Subtract offset from all indices\n+        indices[i] -= offset;\n+      }\n+      current_indices = arrow::r::Array__from_vector(indices, arrow::int32(), true);\n+      new_chunks[0] = Array__Take(current_chunk, current_indices);\n+      return std::make_shared<arrow::ChunkedArray>(std::move(new_chunks));\n+    }\n+    offset += len;\n+  }\n+  Rcpp::stop(\"ChunkedArray$Take() only supported when all i are in the same chunk\");\n \n Review comment:\n   Is concatenating expensive or even always possible? I'd expect that one reason you'd have a ChunkedArray is that for some reason the values won't all fit into a single Array.\r\n   \r\n   I'm fine with doing \"slow and naive but works\" to start and optimizing later, but I'm just not clear on what ChunkedArrays are about and what we're allowed to do with them.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-03T17:30:24.780+0000",
                    "updated": "2019-10-03T17:30:24.780+0000",
                    "started": "2019-10-03T17:30:24.621+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "322764",
                    "issueId": "13198868"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198868/worklog/322788",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #5531: ARROW-3808: [R] Array extract, including Take method\nURL: https://github.com/apache/arrow/pull/5531#discussion_r331169997\n \n \n\n ##########\n File path: r/src/compute.cpp\n ##########\n @@ -82,4 +82,148 @@ std::shared_ptr<arrow::Table> Table__cast(\n   return arrow::Table::Make(schema, std::move(columns), table->num_rows());\n }\n \n+// [[arrow::export]]\n+std::shared_ptr<arrow::Array> Array__Take(\n+    const std::shared_ptr<arrow::Array>& values,\n+    const std::shared_ptr<arrow::Array>& indices) {\n+\n+  std::shared_ptr<arrow::Array> out;\n+  arrow::compute::FunctionContext context;\n+  arrow::compute::TakeOptions options;\n+  STOP_IF_NOT_OK(arrow::compute::Take(&context, *values, *indices, options, &out));\n+  return out;\n+}\n+\n+// [[arrow::export]]\n+std::shared_ptr<arrow::RecordBatch> RecordBatch__Take(\n+    const std::shared_ptr<arrow::RecordBatch>& batch,\n+    const std::shared_ptr<arrow::Array>& indices) {\n+  int ncols = batch->num_columns();\n+  auto nrows = indices->length();\n+\n+  std::vector<std::shared_ptr<arrow::Array>> columns(ncols);\n+\n+  for (R_xlen_t j = 0; j < ncols; j++) {\n+    columns[j] = Array__Take(batch->column(j), indices);\n+  }\n+\n+  return arrow::RecordBatch::Make(batch->schema(), nrows, columns);\n+}\n+\n+// [[arrow::export]]\n+std::shared_ptr<arrow::ChunkedArray> ChunkedArray__Take(\n \n Review comment:\n   https://issues.apache.org/jira/browse/ARROW-6784\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-03T17:50:23.631+0000",
                    "updated": "2019-10-03T17:50:23.631+0000",
                    "started": "2019-10-03T17:50:23.630+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "322788",
                    "issueId": "13198868"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198868/worklog/322793",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5531: ARROW-3808: [R] Array extract, including Take method\nURL: https://github.com/apache/arrow/pull/5531#discussion_r331171027\n \n \n\n ##########\n File path: r/src/compute.cpp\n ##########\n @@ -82,4 +82,148 @@ std::shared_ptr<arrow::Table> Table__cast(\n   return arrow::Table::Make(schema, std::move(columns), table->num_rows());\n }\n \n+// [[arrow::export]]\n+std::shared_ptr<arrow::Array> Array__Take(\n+    const std::shared_ptr<arrow::Array>& values,\n+    const std::shared_ptr<arrow::Array>& indices) {\n+\n+  std::shared_ptr<arrow::Array> out;\n+  arrow::compute::FunctionContext context;\n+  arrow::compute::TakeOptions options;\n+  STOP_IF_NOT_OK(arrow::compute::Take(&context, *values, *indices, options, &out));\n+  return out;\n+}\n+\n+// [[arrow::export]]\n+std::shared_ptr<arrow::RecordBatch> RecordBatch__Take(\n+    const std::shared_ptr<arrow::RecordBatch>& batch,\n+    const std::shared_ptr<arrow::Array>& indices) {\n+  int ncols = batch->num_columns();\n+  auto nrows = indices->length();\n+\n+  std::vector<std::shared_ptr<arrow::Array>> columns(ncols);\n+\n+  for (R_xlen_t j = 0; j < ncols; j++) {\n+    columns[j] = Array__Take(batch->column(j), indices);\n+  }\n+\n+  return arrow::RecordBatch::Make(batch->schema(), nrows, columns);\n+}\n+\n+// [[arrow::export]]\n+std::shared_ptr<arrow::ChunkedArray> ChunkedArray__Take(\n+    const std::shared_ptr<arrow::ChunkedArray>& values,\n+    Rcpp::IntegerVector& indices) {\n+\n+  int num_chunks = values->num_chunks();\n+  std::vector<std::shared_ptr<arrow::Array>> new_chunks(1); // Hard-coded 1 for now\n+  // TODO: fast path if there's only 1 chunk?\n+\n+  std::shared_ptr<arrow::Array> current_chunk;\n+  std::shared_ptr<arrow::Array> current_indices;\n+  int offset = 0;\n+  int len;\n+  int min_i = indices[0];\n+  int max_i = indices[0];\n+\n+  // 1) see if all i are in the same chunk, call Array__Take on that\n+  for (R_xlen_t i = 0; i < indices.size(); i++) {\n+    if (indices[i] < min_i) {\n+      min_i = indices[i];\n+    } else if (indices[i] > max_i) {\n+      max_i = indices[i];\n+    }\n+  }\n+\n+  for (R_xlen_t chk = 0; chk < num_chunks; chk++) {\n+    current_chunk = values->chunk(chk);\n+    len = current_chunk->length();\n+    if (min_i >= offset & max_i < offset + len) {\n+      for (R_xlen_t i = 0; i < indices.size(); i++) {\n+        // Subtract offset from all indices\n+        indices[i] -= offset;\n+      }\n+      current_indices = arrow::r::Array__from_vector(indices, arrow::int32(), true);\n+      new_chunks[0] = Array__Take(current_chunk, current_indices);\n+      return std::make_shared<arrow::ChunkedArray>(std::move(new_chunks));\n+    }\n+    offset += len;\n+  }\n+  Rcpp::stop(\"ChunkedArray$Take() only supported when all i are in the same chunk\");\n \n Review comment:\n   Concatenating is relatively expensive; it uses as much memory as all the chunks in your array again. If you don't have enough memory it'll return an error status (instead of crashing) but apart from that it's always possible.\r\n   \r\n   Concatenating chunks will never change the value in a slot; it's just expensive so we try to avoid it. I would definitely say you're allowed to concatenate wherever you are working on the initial implementation for chunked arrays.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-03T17:52:31.625+0000",
                    "updated": "2019-10-03T17:52:31.625+0000",
                    "started": "2019-10-03T17:52:31.624+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "322793",
                    "issueId": "13198868"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198868/worklog/322796",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #5531: ARROW-3808: [R] Array extract, including Take method\nURL: https://github.com/apache/arrow/pull/5531#discussion_r331171622\n \n \n\n ##########\n File path: r/src/compute.cpp\n ##########\n @@ -82,4 +82,148 @@ std::shared_ptr<arrow::Table> Table__cast(\n   return arrow::Table::Make(schema, std::move(columns), table->num_rows());\n }\n \n+// [[arrow::export]]\n+std::shared_ptr<arrow::Array> Array__Take(\n+    const std::shared_ptr<arrow::Array>& values,\n+    const std::shared_ptr<arrow::Array>& indices) {\n+\n+  std::shared_ptr<arrow::Array> out;\n+  arrow::compute::FunctionContext context;\n+  arrow::compute::TakeOptions options;\n+  STOP_IF_NOT_OK(arrow::compute::Take(&context, *values, *indices, options, &out));\n+  return out;\n+}\n+\n+// [[arrow::export]]\n+std::shared_ptr<arrow::RecordBatch> RecordBatch__Take(\n+    const std::shared_ptr<arrow::RecordBatch>& batch,\n+    const std::shared_ptr<arrow::Array>& indices) {\n+  int ncols = batch->num_columns();\n+  auto nrows = indices->length();\n+\n+  std::vector<std::shared_ptr<arrow::Array>> columns(ncols);\n+\n+  for (R_xlen_t j = 0; j < ncols; j++) {\n+    columns[j] = Array__Take(batch->column(j), indices);\n+  }\n+\n+  return arrow::RecordBatch::Make(batch->schema(), nrows, columns);\n+}\n+\n+// [[arrow::export]]\n+std::shared_ptr<arrow::ChunkedArray> ChunkedArray__Take(\n+    const std::shared_ptr<arrow::ChunkedArray>& values,\n+    Rcpp::IntegerVector& indices) {\n+\n+  int num_chunks = values->num_chunks();\n+  std::vector<std::shared_ptr<arrow::Array>> new_chunks(1); // Hard-coded 1 for now\n+  // TODO: fast path if there's only 1 chunk?\n+\n+  std::shared_ptr<arrow::Array> current_chunk;\n+  std::shared_ptr<arrow::Array> current_indices;\n+  int offset = 0;\n+  int len;\n+  int min_i = indices[0];\n+  int max_i = indices[0];\n+\n+  // 1) see if all i are in the same chunk, call Array__Take on that\n+  for (R_xlen_t i = 0; i < indices.size(); i++) {\n+    if (indices[i] < min_i) {\n+      min_i = indices[i];\n+    } else if (indices[i] > max_i) {\n+      max_i = indices[i];\n+    }\n+  }\n+\n+  for (R_xlen_t chk = 0; chk < num_chunks; chk++) {\n+    current_chunk = values->chunk(chk);\n+    len = current_chunk->length();\n+    if (min_i >= offset & max_i < offset + len) {\n+      for (R_xlen_t i = 0; i < indices.size(); i++) {\n+        // Subtract offset from all indices\n+        indices[i] -= offset;\n+      }\n+      current_indices = arrow::r::Array__from_vector(indices, arrow::int32(), true);\n+      new_chunks[0] = Array__Take(current_chunk, current_indices);\n+      return std::make_shared<arrow::ChunkedArray>(std::move(new_chunks));\n+    }\n+    offset += len;\n+  }\n+  Rcpp::stop(\"ChunkedArray$Take() only supported when all i are in the same chunk\");\n \n Review comment:\n   Cool. I'll try that. I'd rather ship something that doesn't have seemingly arbitrary restrictions on how to use it, and we can explore performance etc. in https://issues.apache.org/jira/browse/ARROW-6784\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-03T17:53:43.726+0000",
                    "updated": "2019-10-03T17:53:43.726+0000",
                    "started": "2019-10-03T17:53:43.725+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "322796",
                    "issueId": "13198868"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 15600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@8123774[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@26a95535[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@13d1fe54[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7f3d01e6[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6cdd434f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6837a9b6[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7488c9ba[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@63adc4fc[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@65ec34fd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@30c34bef[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2348154[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@fb33fca[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 15600,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Oct 03 23:54:45 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-10-03T23:54:45.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3808/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-11-16T10:53:42.000+0000",
        "updated": "2019-10-03T23:55:14.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 15600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Implement [.arrow::Array",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198868/comment/16944127",
                    "id": "16944127",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 5531\n[https://github.com/apache/arrow/pull/5531]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-10-03T23:54:45.219+0000",
                    "updated": "2019-10-03T23:54:45.219+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|s00kog:",
        "customfield_12314139": null
    }
}