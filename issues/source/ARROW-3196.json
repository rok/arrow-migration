{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13183824",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183824",
    "key": "ARROW-3196",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343066",
                "id": "12343066",
                "description": "",
                "name": "0.11.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-10-08"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334506",
                "id": "12334506",
                "name": "Developer Tools"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3196/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 16,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183824/worklog/145107",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm opened a new pull request #2578: ARROW-3196: Add support for both ARROW and PARQUET patches\nURL: https://github.com/apache/arrow/pull/2578\n \n \n   I will test this out on the PARQUET-1398 patch. We should make sure we can merge both ARROW and PARQUET patches before merging this\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-17T22:50:28.237+0000",
                    "updated": "2018-09-17T22:50:28.237+0000",
                    "started": "2018-09-17T22:50:28.236+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "145107",
                    "issueId": "13183824"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183824/worklog/145110",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2578: ARROW-3196: Add support for both ARROW and PARQUET patches\nURL: https://github.com/apache/arrow/pull/2578#issuecomment-422198155\n \n \n   I merged PARQUET-1398. There's still a little work to do on specifying different fix versions, so I'll keep working at this. I will probably write some unit tests for the merge script\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-17T22:56:10.973+0000",
                    "updated": "2018-09-17T22:56:10.973+0000",
                    "started": "2018-09-17T22:56:10.973+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "145110",
                    "issueId": "13183824"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183824/worklog/145194",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guoyuhong commented on issue #2578: ARROW-3196: Add support for both ARROW and PARQUET patches\nURL: https://github.com/apache/arrow/pull/2578#issuecomment-422251154\n \n \n   @wesm It looks like the `glog` change needs this change to be updated to ray since arrow and parquet are coherent.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-18T04:25:40.575+0000",
                    "updated": "2018-09-18T04:25:40.575+0000",
                    "started": "2018-09-18T04:25:40.575+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "145194",
                    "issueId": "13183824"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183824/worklog/145213",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guoyuhong commented on issue #2578: ARROW-3196: Add support for both ARROW and PARQUET patches\nURL: https://github.com/apache/arrow/pull/2578#issuecomment-422277461\n \n \n   [`arrow::TypePtr`](https://github.com/apache/parquet-cpp/blob/master/src/parquet/arrow/schema.cc#L32) is removed from Arrow but it is still referred from Parquet master. There will be building failures if we use recent Arrow as will as Parquet. Will this also be fixed in this PR? ;-)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-18T06:58:09.305+0000",
                    "updated": "2018-09-18T06:58:09.305+0000",
                    "started": "2018-09-18T06:58:09.305+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "145213",
                    "issueId": "13183824"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183824/worklog/145463",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2578: ARROW-3196: Add support for merging both ARROW and PARQUET patches\nURL: https://github.com/apache/arrow/pull/2578#issuecomment-422544715\n \n \n   @guoyuhong https://github.com/apache/parquet-cpp is now defunct, please remove this from your toolchain and add `-DARROW_PARQUET=ON` when building Arrow\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-18T20:37:02.107+0000",
                    "updated": "2018-09-18T20:37:02.107+0000",
                    "started": "2018-09-18T20:37:02.106+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "145463",
                    "issueId": "13183824"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183824/worklog/145464",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2578: ARROW-3196: Add support for merging both ARROW and PARQUET patches\nURL: https://github.com/apache/arrow/pull/2578#issuecomment-422545722\n \n \n   See https://github.com/apache/parquet-cpp/commit/93683ce0b6681dcab1c023e665c1999ef0715d50\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-18T20:39:54.936+0000",
                    "updated": "2018-09-18T20:39:54.936+0000",
                    "started": "2018-09-18T20:39:54.935+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "145464",
                    "issueId": "13183824"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183824/worklog/145465",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2578: ARROW-3196: Add support for merging both ARROW and PARQUET patches\nURL: https://github.com/apache/arrow/pull/2578#issuecomment-422545996\n \n \n   @pcmoritz @robertnishihara could you let me know what is the status of moving Ray to use the PyPI packages? \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-18T20:40:41.467+0000",
                    "updated": "2018-09-18T20:40:41.467+0000",
                    "started": "2018-09-18T20:40:41.467+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "145465",
                    "issueId": "13183824"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183824/worklog/145611",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "guoyuhong commented on issue #2578: ARROW-3196: Add support for merging both ARROW and PARQUET patches\nURL: https://github.com/apache/arrow/pull/2578#issuecomment-422729444\n \n \n   @wesm Thanks for the information. I have submitted a PR to change Ray's building process.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-19T09:38:04.689+0000",
                    "updated": "2018-09-19T09:38:04.689+0000",
                    "started": "2018-09-19T09:38:04.688+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "145611",
                    "issueId": "13183824"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183824/worklog/145711",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara commented on issue #2578: ARROW-3196: Add support for merging both ARROW and PARQUET patches\nURL: https://github.com/apache/arrow/pull/2578#issuecomment-422874776\n \n \n   @wesm, there's no update about this, though we could try to make the next Ray release (0.6) use the next Arrow release.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-19T16:45:49.788+0000",
                    "updated": "2018-09-19T16:45:49.788+0000",
                    "started": "2018-09-19T16:45:49.787+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "145711",
                    "issueId": "13183824"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183824/worklog/145729",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2578: ARROW-3196: Add support for merging both ARROW and PARQUET patches\nURL: https://github.com/apache/arrow/pull/2578#issuecomment-422882825\n \n \n   OK, we should be releasing pretty soon so that would be great!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-19T17:08:54.781+0000",
                    "updated": "2018-09-19T17:08:54.781+0000",
                    "started": "2018-09-19T17:08:54.781+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "145729",
                    "issueId": "13183824"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183824/worklog/146653",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2578: ARROW-3196: Add support for merging both ARROW and PARQUET patches\nURL: https://github.com/apache/arrow/pull/2578#issuecomment-423709540\n \n \n   This might be a bit elaborate but I was getting tired of the brittleness of this script. It'd be really difficult to test the stuff where git is involved so I skipped that. I'm going to use this to merge some more PRs before merging this back to the repo but this moves things in the right direction, I think\r\n   \r\n   This also includes the fix for ARROW-3116\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-22T02:09:15.858+0000",
                    "updated": "2018-09-22T02:09:15.858+0000",
                    "started": "2018-09-22T02:09:15.857+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "146653",
                    "issueId": "13183824"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183824/worklog/146656",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm edited a comment on issue #2578: ARROW-3196: Add support for merging both ARROW and PARQUET patches\nURL: https://github.com/apache/arrow/pull/2578#issuecomment-423709540\n \n \n   This might be a bit elaborate but I was getting tired of the brittleness of this script. It'd be really difficult to test the stuff where git is involved so I skipped that. I'm going to use this to merge some more PRs before merging this back to the repo but this moves things in the right direction, I think\r\n   \r\n   This also includes the fix for ARROW-3113\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-22T02:12:29.413+0000",
                    "updated": "2018-09-22T02:12:29.413+0000",
                    "started": "2018-09-22T02:12:29.412+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "146656",
                    "issueId": "13183824"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183824/worklog/146657",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara commented on a change in pull request #2578: ARROW-3196: Add support for merging both ARROW and PARQUET patches\nURL: https://github.com/apache/arrow/pull/2578#discussion_r219658647\n \n \n\n ##########\n File path: dev/merge_arrow_pr.py\n ##########\n @@ -19,7 +19,7 @@\n \n # Utility for creating well-formed pull request merges and pushing them to\n # Apache.\n-#   usage: ./apache-pr-merge.py    (see config env vars below)\n+#   usage: ./merge_arrow_py.py    (see config env vars below)\n \n Review comment:\n   spelling I think\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-22T02:14:22.070+0000",
                    "updated": "2018-09-22T02:14:22.070+0000",
                    "started": "2018-09-22T02:14:22.070+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "146657",
                    "issueId": "13183824"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183824/worklog/146782",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2578: ARROW-3196: Add support for merging both ARROW and PARQUET patches\nURL: https://github.com/apache/arrow/pull/2578#issuecomment-423752581\n \n \n   OK, this is working fine now. I'm merging and will fix any more issues that come up\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-22T15:39:12.232+0000",
                    "updated": "2018-09-22T15:39:12.232+0000",
                    "started": "2018-09-22T15:39:12.225+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "146782",
                    "issueId": "13183824"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183824/worklog/146783",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2578: ARROW-3196: Add support for merging both ARROW and PARQUET patches\nURL: https://github.com/apache/arrow/pull/2578#issuecomment-423752587\n \n \n   +1\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-22T15:39:17.257+0000",
                    "updated": "2018-09-22T15:39:17.257+0000",
                    "started": "2018-09-22T15:39:17.256+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "146783",
                    "issueId": "13183824"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183824/worklog/146784",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #2578: ARROW-3196: Add support for merging both ARROW and PARQUET patches\nURL: https://github.com/apache/arrow/pull/2578\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/dev/merge_arrow_pr.py b/dev/merge_arrow_pr.py\nindex 2bfee7e4d2..8539d5d340 100755\n--- a/dev/merge_arrow_pr.py\n+++ b/dev/merge_arrow_pr.py\n@@ -19,7 +19,7 @@\n \n # Utility for creating well-formed pull request merges and pushing them to\n # Apache.\n-#   usage: ./apache-pr-merge.py    (see config env vars below)\n+#   usage: ./merge_arrow_pr.py    (see config env vars below)\n #\n # This utility assumes you already have a local Arrow git clone and that you\n # have added remotes corresponding to both (i) the Github Apache Arrow mirror\n@@ -37,49 +37,16 @@\n \n try:\n     import jira.client\n-    JIRA_IMPORTED = True\n except ImportError:\n-    JIRA_IMPORTED = False\n     print(\"Could not find jira-python library. \"\n           \"Run 'sudo pip install jira-python' to install.\")\n     print(\"Exiting without trying to close the associated JIRA.\")\n+    sys.exit(1)\n+\n \n-# Location of your Arrow git clone\n-SEP = os.path.sep\n-ARROW_HOME = os.path.abspath(__file__).rsplit(SEP, 2)[0]\n-PROJECT_NAME = ARROW_HOME.rsplit(SEP, 1)[1]\n-print(\"ARROW_HOME = \" + ARROW_HOME)\n-print(\"PROJECT_NAME = \" + PROJECT_NAME)\n-\n-# Remote name which points to the Gihub site\n-PR_REMOTE_NAME = os.environ.get(\"PR_REMOTE_NAME\", \"apache-github\")\n-# Remote name which points to Apache git\n-PUSH_REMOTE_NAME = os.environ.get(\"PUSH_REMOTE_NAME\", \"apache\")\n-# ASF JIRA username\n-JIRA_USERNAME = os.environ.get(\"JIRA_USERNAME\")\n-# ASF JIRA password\n-JIRA_PASSWORD = os.environ.get(\"JIRA_PASSWORD\")\n-\n-GITHUB_BASE = \"https://github.com/apache/\" + PROJECT_NAME + \"/pull\"\n-GITHUB_API_BASE = \"https://api.github.com/repos/apache/\" + PROJECT_NAME\n-JIRA_BASE = \"https://issues.apache.org/jira/browse\"\n-JIRA_API_BASE = \"https://issues.apache.org/jira\"\n # Prefix added to temporary branches\n BRANCH_PREFIX = \"PR_TOOL\"\n-\n-os.chdir(ARROW_HOME)\n-\n-if not JIRA_USERNAME:\n-    JIRA_USERNAME = input(\"Env JIRA_USERNAME not set, \"\n-                          \"please enter your JIRA username:\")\n-\n-if not JIRA_PASSWORD:\n-    JIRA_PASSWORD = getpass.getpass(\"Env JIRA_PASSWORD not set, please enter \"\n-                                    \"your JIRA password:\")\n-\n-\n-ASF_JIRA = jira.client.JIRA({'server': JIRA_API_BASE},\n-                            basic_auth=(JIRA_USERNAME, JIRA_PASSWORD))\n+JIRA_API_BASE = \"https://issues.apache.org/jira\"\n \n \n def get_json(url):\n@@ -87,12 +54,6 @@ def get_json(url):\n     return req.json()\n \n \n-def fail(msg):\n-    print(msg)\n-    clean_up()\n-    sys.exit(-1)\n-\n-\n def run_cmd(cmd):\n     if isinstance(cmd, six.string_types):\n         cmd = cmd.split(' ')\n@@ -113,12 +74,6 @@ def run_cmd(cmd):\n     return output\n \n \n-def continue_maybe(prompt):\n-    result = input(\"\\n%s (y/n): \" % prompt)\n-    if result.lower() != \"y\":\n-        fail(\"Okay, exiting\")\n-\n-\n original_head = run_cmd(\"git rev-parse HEAD\")[:8]\n \n \n@@ -128,93 +83,12 @@ def clean_up():\n \n     branches = run_cmd(\"git branch\").replace(\" \", \"\").split(\"\\n\")\n \n-    for branch in [x for x in branches if x.startswith(BRANCH_PREFIX)]:\n+    for branch in [x for x in branches\n+                   if x.startswith(BRANCH_PREFIX)]:\n         print(\"Deleting local branch %s\" % branch)\n         run_cmd(\"git branch -D %s\" % branch)\n \n \n-# merge the requested PR and return the merge hash\n-def merge_pr(pr_num, target_ref):\n-    pr_branch_name = \"%s_MERGE_PR_%s\" % (BRANCH_PREFIX, pr_num)\n-    target_branch_name = \"%s_MERGE_PR_%s_%s\" % (BRANCH_PREFIX, pr_num,\n-                                                target_ref.upper())\n-    run_cmd(\"git fetch %s pull/%s/head:%s\" % (PR_REMOTE_NAME, pr_num,\n-                                              pr_branch_name))\n-    run_cmd(\"git fetch %s %s:%s\" % (PUSH_REMOTE_NAME, target_ref,\n-                                    target_branch_name))\n-    run_cmd(\"git checkout %s\" % target_branch_name)\n-\n-    had_conflicts = False\n-    try:\n-        run_cmd(['git', 'merge', pr_branch_name, '--squash'])\n-    except Exception as e:\n-        msg = (\"Error merging: %s\\nWould you like to \"\n-               \"manually fix-up this merge?\" % e)\n-        continue_maybe(msg)\n-        msg = (\"Okay, please fix any conflicts and 'git add' \"\n-               \"conflicting files... Finished?\")\n-        continue_maybe(msg)\n-        had_conflicts = True\n-\n-    commit_authors = run_cmd(['git', 'log', 'HEAD..%s' % pr_branch_name,\n-                             '--pretty=format:%an <%ae>']).split(\"\\n\")\n-    distinct_authors = sorted(set(commit_authors),\n-                              key=lambda x: commit_authors.count(x),\n-                              reverse=True)\n-    primary_author = distinct_authors[0]\n-    commits = run_cmd(['git', 'log', 'HEAD..%s' % pr_branch_name,\n-                      '--pretty=format:%h <%an> %s']).split(\"\\n\\n\")\n-\n-    merge_message_flags = []\n-\n-    merge_message_flags += [\"-m\", title]\n-    if body is not None:\n-        merge_message_flags += [\"-m\", body]\n-\n-    authors = \"\\n\".join([\"Author: %s\" % a for a in distinct_authors])\n-\n-    merge_message_flags += [\"-m\", authors]\n-\n-    if had_conflicts:\n-        committer_name = run_cmd(\"git config --get user.name\").strip()\n-        committer_email = run_cmd(\"git config --get user.email\").strip()\n-        message = (\"This patch had conflicts when merged, \"\n-                   \"resolved by\\nCommitter: %s <%s>\" %\n-                   (committer_name, committer_email))\n-        merge_message_flags += [\"-m\", message]\n-\n-    # The string \"Closes #%s\" string is required for GitHub to correctly close\n-    # the PR\n-    merge_message_flags += [\n-        \"-m\",\n-        \"Closes #%s from %s and squashes the following commits:\"\n-        % (pr_num, pr_repo_desc)]\n-    for c in commits:\n-        stripped_message = strip_ci_directives(c).strip()\n-        merge_message_flags += [\"-m\", stripped_message]\n-\n-    run_cmd(['git', 'commit',\n-             '--no-verify',  # do not run commit hooks\n-             '--author=\"%s\"' % primary_author] +\n-            merge_message_flags)\n-\n-    continue_maybe(\"Merge complete (local ref %s). Push to %s?\" % (\n-        target_branch_name, PUSH_REMOTE_NAME))\n-\n-    try:\n-        run_cmd('git push %s %s:%s' % (PUSH_REMOTE_NAME, target_branch_name,\n-                                       target_ref))\n-    except Exception as e:\n-        clean_up()\n-        fail(\"Exception while pushing: %s\" % e)\n-\n-    merge_hash = run_cmd(\"git rev-parse %s\" % target_branch_name)[:8]\n-    clean_up()\n-    print(\"Pull request #%s merged!\" % pr_num)\n-    print(\"Merge hash: %s\" % merge_hash)\n-    return merge_hash\n-\n-\n _REGEX_CI_DIRECTIVE = re.compile('\\[[^\\]]*\\]')\n \n \n@@ -234,147 +108,331 @@ def fix_version_from_branch(branch, versions):\n         return [x for x in versions if x.name.startswith(branch_ver)][-1]\n \n \n-def extract_jira_id(title):\n-    m = re.search(r'^(ARROW-[0-9]+)\\b.*$', title)\n-    if m:\n-        return m.group(1)\n-    else:\n-        fail(\"PR title should be prefixed by a jira id \"\n-             \"\\\"ARROW-XXX: ...\\\", found: \\\"%s\\\"\" % title)\n+# We can merge both ARROW and PARQUET patchesa\n+SUPPORTED_PROJECTS = ['ARROW', 'PARQUET']\n+PR_TITLE_REGEXEN = [(project, re.compile(r'^(' + project + r'-[0-9]+)\\b.*$'))\n+                    for project in SUPPORTED_PROJECTS]\n+\n+\n+class JiraIssue(object):\n+\n+    def __init__(self, jira_con, jira_id, project, cmd):\n+        self.jira_con = jira_con\n+        self.jira_id = jira_id\n+        self.project = project\n+        self.cmd = cmd\n+\n+        try:\n+            self.issue = jira_con.issue(jira_id)\n+        except Exception as e:\n+            self.cmd.fail(\"ASF JIRA could not find %s\\n%s\" % (jira_id, e))\n+\n+    def get_candidate_fix_versions(self, merge_branches=('master',)):\n+        # Only suggest versions starting with a number, like 0.x but not JS-0.x\n+        all_versions = self.jira_con.project_versions(self.project)\n+        unreleased_versions = [x for x in all_versions\n+                               if not x.raw['released']]\n+\n+        unreleased_versions = sorted(unreleased_versions,\n+                                     key=lambda x: x.name, reverse=True)\n+\n+        mainline_version_regex = re.compile('\\d.*')\n+        mainline_versions = [x for x in unreleased_versions\n+                             if mainline_version_regex.match(x.name)]\n+\n+        default_fix_versions = [\n+            fix_version_from_branch(x, mainline_versions).name\n+            for x in merge_branches]\n+\n+        for v in default_fix_versions:\n+            # Handles the case where we have forked a release branch but not\n+            # yet made the release.  In this case, if the PR is committed to\n+            # the master branch and the release branch, we only consider the\n+            # release branch to be the fix version. E.g. it is not valid to\n+            # have both 1.1.0 and 1.0.0 as fix versions.\n+            (major, minor, patch) = v.split(\".\")\n+            if patch == \"0\":\n+                previous = \"%s.%s.%s\" % (major, int(minor) - 1, 0)\n+                if previous in default_fix_versions:\n+                    default_fix_versions = [x for x in default_fix_versions\n+                                            if x != v]\n+\n+        return unreleased_versions, default_fix_versions\n+\n+    def resolve(self, fix_versions, comment):\n+        cur_status = self.issue.fields.status.name\n+        cur_summary = self.issue.fields.summary\n+        cur_assignee = self.issue.fields.assignee\n+        if cur_assignee is None:\n+            cur_assignee = \"NOT ASSIGNED!!!\"\n+        else:\n+            cur_assignee = cur_assignee.displayName\n+\n+        if cur_status == \"Resolved\" or cur_status == \"Closed\":\n+            self.cmd.fail(\"JIRA issue %s already has status '%s'\"\n+                          % (self.jira_id, cur_status))\n+        print(\"=== JIRA %s ===\" % self.jira_id)\n+        print(\"summary\\t\\t%s\\nassignee\\t%s\\nstatus\\t\\t%s\\nurl\\t\\t%s/%s\\n\"\n+              % (cur_summary, cur_assignee, cur_status,\n+                 '/'.join((JIRA_API_BASE, 'browse')),\n+                 self.jira_id))\n+\n+        resolve = [x for x in self.jira_con.transitions(self.jira_id)\n+                   if x['name'] == \"Resolve Issue\"][0]\n+        self.jira_con.transition_issue(self.jira_id, resolve[\"id\"],\n+                                       comment=comment,\n+                                       fixVersions=fix_versions)\n+\n+        print(\"Successfully resolved %s!\" % (self.jira_id))\n+\n+\n+class GitHubAPI(object):\n+\n+    def __init__(self, project_name):\n+        self.github_api = (\"https://api.github.com/repos/apache/{0}\"\n+                           .format(project_name))\n+\n+    def get_pr_data(self, number):\n+        return get_json(\"%s/pulls/%s\" % (self.github_api, number))\n+\n+\n+class CommandInput(object):\n+    \"\"\"\n+    Interface to input(...) to enable unit test mocks to be created\n+    \"\"\"\n+\n+    def fail(self, msg):\n+        clean_up()\n+        raise Exception(msg)\n+\n+    def prompt(self, prompt):\n+        return input(prompt)\n+\n+    def getpass(self, prompt):\n+        return getpass.getpass(prompt)\n+\n+    def continue_maybe(self, prompt):\n+        result = input(\"\\n%s (y/n): \" % prompt)\n+        if result.lower() != \"y\":\n+            self.fail(\"Okay, exiting\")\n+\n+\n+class PullRequest(object):\n+\n+    def __init__(self, cmd, github_api, git_remote, jira_con, number):\n+        self.cmd = cmd\n+        self.git_remote = git_remote\n+        self.con = jira_con\n+        self.number = number\n+        self._pr_data = github_api.get_pr_data(number)\n+        self.url = self._pr_data[\"url\"]\n+        self.title = self._pr_data[\"title\"]\n+\n+        self.body = self._pr_data[\"body\"]\n+        self.target_ref = self._pr_data[\"base\"][\"ref\"]\n+        self.user_login = self._pr_data[\"user\"][\"login\"]\n+        self.base_ref = self._pr_data[\"head\"][\"ref\"]\n+        self.description = \"%s/%s\" % (self.user_login, self.base_ref)\n+\n+        self.jira_issue = self._get_jira()\n+\n+    def show(self):\n+        print(\"\\n=== Pull Request #%s ===\" % self.number)\n+        print(\"title\\t%s\\nsource\\t%s\\ntarget\\t%s\\nurl\\t%s\"\n+              % (self.title, self.description, self.target_ref, self.url))\n+\n+    @property\n+    def is_merged(self):\n+        return bool(self._pr_data[\"merged\"])\n+\n+    @property\n+    def is_mergeable(self):\n+        return bool(self._pr_data[\"mergeable\"])\n+\n+    def _get_jira(self):\n+        jira_id = None\n+        for project, regex in PR_TITLE_REGEXEN:\n+            m = regex.search(self.title)\n+            if m:\n+                jira_id = m.group(1)\n+                break\n+\n+        if jira_id is None:\n+            options = ' or '.join('{0}-XXX'.format(project)\n+                                  for project in SUPPORTED_PROJECTS)\n+            self.cmd.fail(\"PR title should be prefixed by a jira id \"\n+                          \"{0}, but found {1}\".format(options, self.title))\n+\n+        return JiraIssue(self.con, jira_id, project, self.cmd)\n+\n+    def merge(self, target_ref='master'):\n+        \"\"\"\n+        merge the requested PR and return the merge hash\n+        \"\"\"\n+        pr_branch_name = \"%s_MERGE_PR_%s\" % (BRANCH_PREFIX, self.number)\n+        target_branch_name = \"%s_MERGE_PR_%s_%s\" % (BRANCH_PREFIX,\n+                                                    self.number,\n+                                                    target_ref.upper())\n+        run_cmd(\"git fetch %s pull/%s/head:%s\" % (self.git_remote,\n+                                                  self.number,\n+                                                  pr_branch_name))\n+        run_cmd(\"git fetch %s %s:%s\" % (self.git_remote, target_ref,\n+                                        target_branch_name))\n+        run_cmd(\"git checkout %s\" % target_branch_name)\n+\n+        had_conflicts = False\n+        try:\n+            run_cmd(['git', 'merge', pr_branch_name, '--squash'])\n+        except Exception as e:\n+            msg = (\"Error merging: %s\\nWould you like to \"\n+                   \"manually fix-up this merge?\" % e)\n+            self.cmd.continue_maybe(msg)\n+            msg = (\"Okay, please fix any conflicts and 'git add' \"\n+                   \"conflicting files... Finished?\")\n+            self.cmd.continue_maybe(msg)\n+            had_conflicts = True\n+\n+        commit_authors = run_cmd(['git', 'log', 'HEAD..%s' % pr_branch_name,\n+                                 '--pretty=format:%an <%ae>']).split(\"\\n\")\n+        distinct_authors = sorted(set(commit_authors),\n+                                  key=lambda x: commit_authors.count(x),\n+                                  reverse=True)\n+        primary_author = distinct_authors[0]\n+        commits = run_cmd(['git', 'log', 'HEAD..%s' % pr_branch_name,\n+                          '--pretty=format:%h <%an> %s']).split(\"\\n\\n\")\n+\n+        merge_message_flags = []\n+\n+        merge_message_flags += [\"-m\", self.title]\n+        if self.body is not None:\n+            merge_message_flags += [\"-m\", self.body]\n+\n+        authors = \"\\n\".join([\"Author: %s\" % a for a in distinct_authors])\n+\n+        merge_message_flags += [\"-m\", authors]\n+\n+        if had_conflicts:\n+            committer_name = run_cmd(\"git config --get user.name\").strip()\n+            committer_email = run_cmd(\"git config --get user.email\").strip()\n+            message = (\"This patch had conflicts when merged, \"\n+                       \"resolved by\\nCommitter: %s <%s>\" %\n+                       (committer_name, committer_email))\n+            merge_message_flags += [\"-m\", message]\n+\n+        # The string \"Closes #%s\" string is required for GitHub to correctly\n+        # close the PR\n+        merge_message_flags += [\n+            \"-m\",\n+            \"Closes #%s from %s and squashes the following commits:\"\n+            % (self.number, self.description)]\n+        for c in commits:\n+            stripped_message = strip_ci_directives(c).strip()\n+            merge_message_flags += [\"-m\", stripped_message]\n+\n+        run_cmd(['git', 'commit',\n+                 '--no-verify',  # do not run commit hooks\n+                 '--author=\"%s\"' % primary_author] +\n+                merge_message_flags)\n+\n+        self.cmd.continue_maybe(\"Merge complete (local ref %s). Push to %s?\"\n+                                % (target_branch_name, self.git_remote))\n+\n+        try:\n+            run_cmd('git push %s %s:%s' % (self.git_remote,\n+                                           target_branch_name,\n+                                           target_ref))\n+        except Exception as e:\n+            clean_up()\n+            self.cmd.fail(\"Exception while pushing: %s\" % e)\n+\n+        merge_hash = run_cmd(\"git rev-parse %s\" % target_branch_name)[:8]\n+        clean_up()\n+        print(\"Pull request #%s merged!\" % self.number)\n+        print(\"Merge hash: %s\" % merge_hash)\n+        return merge_hash\n \n \n-def check_jira(title):\n-    jira_id = extract_jira_id(title)\n-    try:\n-        ASF_JIRA.issue(jira_id)\n-    except Exception as e:\n-        fail(\"ASF JIRA could not find %s\\n%s\" % (jira_id, e))\n+def cli():\n+    # Location of your Arrow git clone\n+    SEP = os.path.sep\n+    ARROW_HOME = os.path.abspath(__file__).rsplit(SEP, 2)[0]\n+    PROJECT_NAME = ARROW_HOME.rsplit(SEP, 1)[1]\n+    print(\"ARROW_HOME = \" + ARROW_HOME)\n+    print(\"PROJECT_NAME = \" + PROJECT_NAME)\n \n+    cmd = CommandInput()\n \n-def resolve_jira(title, merge_branches, comment):\n-    default_jira_id = extract_jira_id(title)\n+    # ASF JIRA username\n+    jira_username = os.environ.get(\"JIRA_USERNAME\")\n \n-    jira_id = input(\"Enter a JIRA id [%s]: \" % default_jira_id)\n-    if jira_id == \"\":\n-        jira_id = default_jira_id\n+    # ASF JIRA password\n+    jira_password = os.environ.get(\"JIRA_PASSWORD\")\n \n-    try:\n-        issue = ASF_JIRA.issue(jira_id)\n-    except Exception as e:\n-        fail(\"ASF JIRA could not find %s\\n%s\" % (jira_id, e))\n+    if not jira_username:\n+        jira_username = cmd.prompt(\"Env JIRA_USERNAME not set, \"\n+                                   \"please enter your JIRA username:\")\n \n-    cur_status = issue.fields.status.name\n-    cur_summary = issue.fields.summary\n-    cur_assignee = issue.fields.assignee\n-    if cur_assignee is None:\n-        cur_assignee = \"NOT ASSIGNED!!!\"\n-    else:\n-        cur_assignee = cur_assignee.displayName\n-\n-    if cur_status == \"Resolved\" or cur_status == \"Closed\":\n-        fail(\"JIRA issue %s already has status '%s'\" % (jira_id, cur_status))\n-    print(\"=== JIRA %s ===\" % jira_id)\n-    print(\"summary\\t\\t%s\\nassignee\\t%s\\nstatus\\t\\t%s\\nurl\\t\\t%s/%s\\n\"\n-          % (cur_summary, cur_assignee, cur_status, JIRA_BASE, jira_id))\n-\n-    jira_fix_versions = _get_fix_version(merge_branches)\n-\n-    resolve = [x for x in ASF_JIRA.transitions(jira_id)\n-               if x['name'] == \"Resolve Issue\"][0]\n-    ASF_JIRA.transition_issue(jira_id, resolve[\"id\"], comment=comment,\n-                              fixVersions=jira_fix_versions)\n-\n-    print(\"Successfully resolved %s!\" % (jira_id))\n-\n-\n-def _get_fix_version(merge_branches):\n-    # Only suggest versions starting with a number, like 0.x but not JS-0.x\n-    mainline_version_regex = re.compile('\\d.*')\n-    versions = [x for x in ASF_JIRA.project_versions(\"ARROW\")\n-                if not x.raw['released'] and\n-                mainline_version_regex.match(x.name)]\n-\n-    versions = sorted(versions, key=lambda x: x.name, reverse=True)\n-\n-    default_fix_versions = [fix_version_from_branch(x, versions).name\n-                            for x in merge_branches]\n-\n-    for v in default_fix_versions:\n-        # Handles the case where we have forked a release branch but not yet\n-        # made the release.  In this case, if the PR is committed to the master\n-        # branch and the release branch, we only consider the release branch to\n-        # be the fix version. E.g. it is not valid to have both 1.1.0 and 1.0.0\n-        # as fix versions.\n-        (major, minor, patch) = v.split(\".\")\n-        if patch == \"0\":\n-            previous = \"%s.%s.%s\" % (major, int(minor) - 1, 0)\n-            if previous in default_fix_versions:\n-                default_fix_versions = [x for x in default_fix_versions\n-                                        if x != v]\n-    default_fix_versions = \",\".join(default_fix_versions)\n+    if not jira_password:\n+        jira_password = cmd.getpass(\"Env JIRA_PASSWORD not set, \"\n+                                    \"please enter \"\n+                                    \"your JIRA password:\")\n \n-    fix_versions = input(\"Enter comma-separated fix version(s) [%s]: \"\n-                         % default_fix_versions)\n-    if fix_versions == \"\":\n-        fix_versions = default_fix_versions\n-    fix_versions = fix_versions.replace(\" \", \"\").split(\",\")\n+    pr_num = input(\"Which pull request would you like to merge? (e.g. 34): \")\n \n-    def get_version_json(version_str):\n-        return [x for x in versions if x.name == version_str][0].raw\n+    # Remote name which points to the GitHub site\n+    git_remote = os.environ.get(\"PR_REMOTE_NAME\", \"apache\")\n+\n+    os.chdir(ARROW_HOME)\n+\n+    jira_con = jira.client.JIRA({'server': JIRA_API_BASE},\n+                                basic_auth=(jira_username, jira_password))\n+    github_api = GitHubAPI(PROJECT_NAME)\n \n-    return [get_version_json(v) for v in fix_versions]\n+    pr = PullRequest(cmd, github_api, git_remote, jira_con, pr_num)\n \n+    if pr.is_merged:\n+        print(\"Pull request %s has already been merged\")\n+        sys.exit(0)\n \n-branches = get_json(\"%s/branches\" % GITHUB_API_BASE)\n-branch_names = [x['name'] for x in branches if x['name'].startswith('branch-')]\n+    if not pr.is_mergeable:\n+        msg = (\"Pull request %s is not mergeable in its current form.\\n\"\n+               % pr_num + \"Continue? (experts only!)\")\n+        cmd.continue_maybe(msg)\n \n-# Assumes branch names can be sorted lexicographically\n-# Julien: I commented this out as we don't have any \"branch-*\" branch yet\n-# latest_branch = sorted(branch_names, reverse=True)[0]\n+    pr.show()\n \n-pr_num = input(\"Which pull request would you like to merge? (e.g. 34): \")\n-pr = get_json(\"%s/pulls/%s\" % (GITHUB_API_BASE, pr_num))\n+    cmd.continue_maybe(\"Proceed with merging pull request #%s?\" % pr_num)\n \n-url = pr[\"url\"]\n-title = pr[\"title\"]\n-check_jira(title)\n-body = pr[\"body\"]\n-target_ref = pr[\"base\"][\"ref\"]\n-user_login = pr[\"user\"][\"login\"]\n-base_ref = pr[\"head\"][\"ref\"]\n-pr_repo_desc = \"%s/%s\" % (user_login, base_ref)\n+    # merged hash not used\n+    pr.merge()\n \n-if pr[\"merged\"] is True:\n-    print(\"Pull request %s has already been merged, \"\n-          \"assuming you want to backport\" % pr_num)\n-    merge_commit_desc = run_cmd([\n-        'git', 'log', '--merges', '--first-parent',\n-        '--grep=pull request #%s' % pr_num, '--oneline']).split(\"\\n\")[0]\n-    if merge_commit_desc == \"\":\n-        fail(\"Couldn't find any merge commit for #%s, \"\n-             \"you may need to update HEAD.\" % pr_num)\n+    cmd.continue_maybe(\"Would you like to update the associated JIRA?\")\n+    jira_comment = (\n+        \"Issue resolved by pull request %s\\n[%s/%s]\"\n+        % (pr_num,\n+           \"https://github.com/apache/\" + PROJECT_NAME + \"/pull\",\n+           pr_num))\n \n-    merge_hash = merge_commit_desc[:7]\n-    message = merge_commit_desc[8:]\n+    versions, default_fix_versions = pr.jira_issue.get_candidate_fix_versions()\n \n-    print(\"Found: %s\" % message)\n-    sys.exit(0)\n+    default_fix_versions = \",\".join(default_fix_versions)\n \n-if not bool(pr[\"mergeable\"]):\n-    msg = (\"Pull request %s is not mergeable in its current form.\\n\"\n-           % pr_num + \"Continue? (experts only!)\")\n-    continue_maybe(msg)\n+    issue_fix_versions = cmd.prompt(\"Enter comma-separated \"\n+                                    \"fix version(s) [%s]: \"\n+                                    % default_fix_versions)\n+    if issue_fix_versions == \"\":\n+        issue_fix_versions = default_fix_versions\n+    issue_fix_versions = issue_fix_versions.replace(\" \", \"\").split(\",\")\n \n-print(\"\\n=== Pull Request #%s ===\" % pr_num)\n-print(\"title\\t%s\\nsource\\t%s\\ntarget\\t%s\\nurl\\t%s\"\n-      % (title, pr_repo_desc, target_ref, url))\n-continue_maybe(\"Proceed with merging pull request #%s?\" % pr_num)\n+    def get_version_json(version_str):\n+        return [x for x in versions if x.name == version_str][0].raw\n \n-merged_refs = [target_ref]\n+    fix_versions_json = [get_version_json(v) for v in issue_fix_versions]\n+    pr.jira_issue.resolve(fix_versions_json, jira_comment)\n \n-merge_hash = merge_pr(pr_num, target_ref)\n \n-continue_maybe(\"Would you like to update the associated JIRA?\")\n-jira_comment = (\"Issue resolved by pull request %s\\n[%s/%s]\"\n-                % (pr_num, GITHUB_BASE, pr_num))\n-resolve_jira(title, merged_refs, jira_comment)\n+if __name__ == '__main__':\n+    try:\n+        cli()\n+    except Exception as e:\n+        print(e.args[0])\ndiff --git a/dev/test_merge_arrow_pr.py b/dev/test_merge_arrow_pr.py\nnew file mode 100644\nindex 0000000000..f69cafeb66\n--- /dev/null\n+++ b/dev/test_merge_arrow_pr.py\n@@ -0,0 +1,164 @@\n+#!/usr/bin/env python\n+\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+from collections import namedtuple\n+\n+import pytest\n+\n+import merge_arrow_pr\n+\n+\n+FakeIssue = namedtuple('issue', ['fields'])\n+FakeFields = namedtuple('fields', ['status', 'summary', 'assignee'])\n+FakeAssignee = namedtuple('assignee', ['displayName'])\n+FakeStatus = namedtuple('status', ['name'])\n+FakeProjectVersion = namedtuple('version', ['name', 'raw'])\n+\n+SOURCE_VERSIONS = [FakeProjectVersion('JS-0.4.0', {'released': False}),\n+                   FakeProjectVersion('0.11.0', {'released': False}),\n+                   FakeProjectVersion('0.12.0', {'released': False}),\n+                   FakeProjectVersion('0.10.0', {'released': True}),\n+                   FakeProjectVersion('0.9.0', {'released': True})]\n+\n+TRANSITIONS = [{'name': 'Resolve Issue', 'id': 1}]\n+\n+jira_id = 'ARROW-1234'\n+status = FakeStatus('In Progress')\n+fields = FakeFields(status, 'issue summary', FakeAssignee('groundhog'))\n+FAKE_ISSUE_1 = FakeIssue(fields)\n+\n+\n+class FakeJIRA:\n+\n+    def __init__(self, issue=None, project_versions=None, transitions=None):\n+        self._issue = issue\n+        self._project_versions = project_versions\n+        self._transitions = transitions\n+\n+    def issue(self, jira_id):\n+        return self._issue\n+\n+    def transitions(self, jira_id):\n+        return self._transitions\n+\n+    def transition_issue(self, jira_id, transition_id, comment=None,\n+                         fixVersions=None):\n+        self.captured_transition = {\n+            'jira_id': jira_id,\n+            'transition_id': transition_id,\n+            'comment': comment,\n+            'fixVersions': fixVersions\n+        }\n+\n+    def project_versions(self, project):\n+        return self._project_versions\n+\n+\n+class FakeCLI:\n+\n+    def __init__(self, responses=()):\n+        self.responses = responses\n+        self.position = 0\n+\n+    def prompt(self, prompt):\n+        response = self.responses[self.position]\n+        self.position += 1\n+        return response\n+\n+    def fail(self, msg):\n+        raise Exception(msg)\n+\n+\n+def test_jira_fix_versions():\n+    jira = FakeJIRA(project_versions=SOURCE_VERSIONS,\n+                    transitions=TRANSITIONS)\n+\n+    issue = merge_arrow_pr.JiraIssue(jira, 'ARROW-1234', 'ARROW', FakeCLI())\n+    all_versions, default_versions = issue.get_candidate_fix_versions()\n+\n+    expected = sorted([x for x in SOURCE_VERSIONS\n+                       if not x.raw['released']],\n+                      key=lambda x: x.name, reverse=True)\n+    assert all_versions == expected\n+    assert default_versions == ['0.11.0']\n+\n+\n+def test_jira_invalid_issue():\n+    class Mock:\n+\n+        def issue(self, jira_id):\n+            raise Exception(\"not found\")\n+\n+    with pytest.raises(Exception):\n+        merge_arrow_pr.JiraIssue(Mock(), 'ARROW-1234', 'ARROW', FakeCLI())\n+\n+\n+def test_jira_resolve():\n+    jira = FakeJIRA(issue=FAKE_ISSUE_1,\n+                    project_versions=SOURCE_VERSIONS,\n+                    transitions=TRANSITIONS)\n+\n+    my_comment = 'my comment'\n+    fix_versions = [SOURCE_VERSIONS[1].raw]\n+\n+    issue = merge_arrow_pr.JiraIssue(jira, 'ARROW-1234', 'ARROW', FakeCLI())\n+    issue.resolve(fix_versions, my_comment)\n+\n+    assert jira.captured_transition == {\n+        'jira_id': 'ARROW-1234',\n+        'transition_id': 1,\n+        'comment': my_comment,\n+        'fixVersions': fix_versions\n+    }\n+\n+\n+def test_jira_resolve_non_mainline():\n+    jira = FakeJIRA(issue=FAKE_ISSUE_1,\n+                    project_versions=SOURCE_VERSIONS,\n+                    transitions=TRANSITIONS)\n+\n+    my_comment = 'my comment'\n+    fix_versions = [SOURCE_VERSIONS[0].raw]\n+\n+    issue = merge_arrow_pr.JiraIssue(jira, 'ARROW-1234', 'ARROW', FakeCLI())\n+    issue.resolve(fix_versions, my_comment)\n+\n+    assert jira.captured_transition == {\n+        'jira_id': 'ARROW-1234',\n+        'transition_id': 1,\n+        'comment': my_comment,\n+        'fixVersions': fix_versions\n+    }\n+\n+\n+def test_jira_already_resolved():\n+    status = FakeStatus('Resolved')\n+    fields = FakeFields(status, 'issue summary', FakeAssignee('groundhog'))\n+    issue = FakeIssue(fields)\n+\n+    jira = FakeJIRA(issue=issue,\n+                    project_versions=SOURCE_VERSIONS,\n+                    transitions=TRANSITIONS)\n+\n+    fix_versions = [SOURCE_VERSIONS[0].raw]\n+    issue = merge_arrow_pr.JiraIssue(jira, 'ARROW-1234', 'ARROW', FakeCLI())\n+\n+    with pytest.raises(Exception,\n+                       match=\"ARROW-1234 already has status 'Resolved'\"):\n+        issue.resolve(fix_versions, \"\")\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-22T15:39:45.438+0000",
                    "updated": "2018-09-22T15:39:45.438+0000",
                    "started": "2018-09-22T15:39:45.437+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "146784",
                    "issueId": "13183824"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 9600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@9ea53aa[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@52677c6d[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@21fdc07c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4810443a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3a3c4f35[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4dc6162e[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@277c1ca[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@480c642a[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1091cff9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6d9bcca3[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@515e394b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7a582a7e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9600,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Sep 22 15:39:46 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-09-22T15:39:46.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3196/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-09-08T14:29:22.000+0000",
        "updated": "2018-10-02T14:31:28.000+0000",
        "timeoriginalestimate": null,
        "description": "Follow up to ARROW-3075",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "Enable merge_arrow_py.py script to merge Parquet patches and set fix versions",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183824/comment/16624718",
                    "id": "16624718",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2578\n[https://github.com/apache/arrow/pull/2578]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-09-22T15:39:46.097+0000",
                    "updated": "2018-09-22T15:39:46.097+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3xvjj:",
        "customfield_12314139": null
    }
}