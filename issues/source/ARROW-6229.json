{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13250632",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250632",
    "key": "ARROW-6229",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12568468",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12568468",
                "type": {
                    "id": "10001",
                    "name": "dependent",
                    "inward": "is depended upon by",
                    "outward": "depends upon",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"
                },
                "inwardIssue": {
                    "id": "13250886",
                    "key": "ARROW-6242",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250886",
                    "fields": {
                        "summary": "[C++] Implements basic Dataset/Scanner/ScannerBuilder",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 21000,
            "total": 21000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 21000,
            "total": 21000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6229/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 44,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250632/worklog/298032",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5139: ARROW-6229: [C++] implement FileSystemBasedDataSource\nURL: https://github.com/apache/arrow/pull/5139\n \n \n   Adds FileSystemBasedDataSource, which is constructed with a file format and reads a given directory recursively on construction then yields data fragments from discovered files matching that format.\r\n   \r\n   Also adds FileFormat::MakeFragment which creates a(n instance of a subclass of) FileBasedDataFragment given a FileSource and ScanOptions.\r\n   \r\n   moved PR from: https://github.com/fsaintjacques/arrow/pull/2\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-20T17:00:21.565+0000",
                    "updated": "2019-08-20T17:00:21.565+0000",
                    "started": "2019-08-20T17:00:21.565+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "298032",
                    "issueId": "13250632"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250632/worklog/299497",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5139: ARROW-6229: [C++][Dataset] implement FileSystemBasedDataSource\nURL: https://github.com/apache/arrow/pull/5139#issuecomment-523952486\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5139?src=pr&el=h1) Report\n   > :exclamation: No coverage uploaded for pull request base (`master@721e6f9`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5139/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5139?src=pr&el=tree)\n   \n   ```diff\n   @@           Coverage Diff            @@\n   ##             master   #5139   +/-   ##\n   ========================================\n     Coverage          ?   75.3%           \n   ========================================\n     Files             ?      57           \n     Lines             ?    3620           \n     Branches          ?       0           \n   ========================================\n     Hits              ?    2726           \n     Misses            ?     894           \n     Partials          ?       0\n   ```\n   \n   \n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5139?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5139?src=pr&el=footer). Last update [721e6f9...7ad746c](https://codecov.io/gh/apache/arrow/pull/5139?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-22T15:21:19.252+0000",
                    "updated": "2019-08-22T15:21:19.252+0000",
                    "started": "2019-08-22T15:21:19.252+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "299497",
                    "issueId": "13250632"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250632/worklog/299553",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5139: ARROW-6229: [C++][Dataset] implement FileSystemBasedDataSource\nURL: https://github.com/apache/arrow/pull/5139#discussion_r316776655\n \n \n\n ##########\n File path: cpp/src/arrow/util/functional.h\n ##########\n @@ -0,0 +1,59 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <tuple>\n+\n+#include \"arrow/util/macros.h\"\n+\n+namespace arrow {\n+\n+/// Helper struct for examining lambdas and other callables.\n+/// If the callable is not overloaded, the argument types of its call operator can be\n+/// extracted via single_call::argument_type<Index, Function>\n+struct single_call {\n \n Review comment:\n   Why is it called `single_call`? Can I only use it a single time? Perhaps call it `call_traits`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-22T16:56:26.431+0000",
                    "updated": "2019-08-22T16:56:26.431+0000",
                    "started": "2019-08-22T16:56:26.431+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "299553",
                    "issueId": "13250632"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250632/worklog/299554",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5139: ARROW-6229: [C++][Dataset] implement FileSystemBasedDataSource\nURL: https://github.com/apache/arrow/pull/5139#discussion_r316775706\n \n \n\n ##########\n File path: cpp/src/arrow/util/iterator.h\n ##########\n @@ -82,4 +83,38 @@ std::unique_ptr<VectorIterator<T>> MakeIterator(std::vector<T> v) {\n   return std::unique_ptr<VectorIterator<T>>(new VectorIterator<T>(std::move(v)));\n }\n \n+template <typename T>\n+class EmptyIterator : public Iterator<T> {\n+ public:\n+  explicit EmptyIterator(Status s = Status::OK()) : status_(s) {}\n+\n+  Status Next(T* out) override {\n+    *out = NULLPTR;\n+    return status_;\n+  }\n+\n+ private:\n+  Status status_;\n+};\n+\n+template <typename Fn, typename T>\n+class FunctionIterator : public Iterator<T> {\n+ public:\n+  using IteratorType = Iterator<T>;\n+\n+  explicit FunctionIterator(Fn fn) : fn_(std::move(fn)) {}\n+\n+  Status Next(T* out) override { return fn_(out); }\n+\n+ private:\n+  Fn fn_;\n+};\n+\n+template <typename Fn, typename T = typename std::remove_pointer<\n+                           single_call::argument_type<0, Fn>>::type>\n+std::unique_ptr<FunctionIterator<Fn, T>> MakeIterator(Fn fn) {\n \n Review comment:\n   Call this `MakeFunctionIterator`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-22T16:56:26.494+0000",
                    "updated": "2019-08-22T16:56:26.494+0000",
                    "started": "2019-08-22T16:56:26.494+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "299554",
                    "issueId": "13250632"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250632/worklog/299555",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5139: ARROW-6229: [C++][Dataset] implement FileSystemBasedDataSource\nURL: https://github.com/apache/arrow/pull/5139#discussion_r316776312\n \n \n\n ##########\n File path: cpp/src/arrow/util/functional.h\n ##########\n @@ -0,0 +1,59 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <tuple>\n+\n+#include \"arrow/util/macros.h\"\n+\n+namespace arrow {\n+\n \n Review comment:\n   Put all this under `arrow::internal`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-22T16:56:26.565+0000",
                    "updated": "2019-08-22T16:56:26.565+0000",
                    "started": "2019-08-22T16:56:26.564+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "299555",
                    "issueId": "13250632"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250632/worklog/299556",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5139: ARROW-6229: [C++][Dataset] implement FileSystemBasedDataSource\nURL: https://github.com/apache/arrow/pull/5139#discussion_r316776823\n \n \n\n ##########\n File path: cpp/src/arrow/util/functional.h\n ##########\n @@ -0,0 +1,59 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <tuple>\n+\n+#include \"arrow/util/macros.h\"\n+\n+namespace arrow {\n+\n+/// Helper struct for examining lambdas and other callables.\n+/// If the callable is not overloaded, the argument types of its call operator can be\n+/// extracted via single_call::argument_type<Index, Function>\n+struct single_call {\n+  template <typename R, typename... A>\n+  static std::true_type check_impl(R(A...));\n \n Review comment:\n   Is this an internal helper? If so, make it private.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-22T16:56:26.726+0000",
                    "updated": "2019-08-22T16:56:26.726+0000",
                    "started": "2019-08-22T16:56:26.724+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "299556",
                    "issueId": "13250632"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250632/worklog/299557",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5139: ARROW-6229: [C++][Dataset] implement FileSystemBasedDataSource\nURL: https://github.com/apache/arrow/pull/5139#discussion_r316777589\n \n \n\n ##########\n File path: cpp/src/arrow/util/functional.h\n ##########\n @@ -0,0 +1,59 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <tuple>\n+\n+#include \"arrow/util/macros.h\"\n+\n+namespace arrow {\n+\n+/// Helper struct for examining lambdas and other callables.\n+/// If the callable is not overloaded, the argument types of its call operator can be\n+/// extracted via single_call::argument_type<Index, Function>\n+struct single_call {\n+  template <typename R, typename... A>\n+  static std::true_type check_impl(R(A...));\n+\n+  template <typename F>\n+  static std::true_type check_impl(decltype(&F::operator())*);\n+\n+  template <typename F>\n+  static std::false_type check_impl(...);\n+\n+  template <std::size_t I, typename F, typename R, typename... A>\n+  static typename std::tuple_element<I, std::tuple<A...>>::type argument_type_impl(\n+      R (F::*)(A...));\n+\n+  template <std::size_t I, typename F, typename R, typename... A>\n+  static typename std::tuple_element<I, std::tuple<A...>>::type argument_type_impl(\n+      R (F::*)(A...) const);\n+\n+  template <typename F>\n+  static constexpr bool check() {\n+    return decltype(check_impl<typename std::decay<F>::type>(NULLPTR))::value;\n+  }\n+\n+  template <typename F, typename T = void>\n+  using enable_if = typename std::enable_if<check<F>(), T>::type;\n \n Review comment:\n   Hmm... is it used somewhere?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-22T16:56:26.726+0000",
                    "updated": "2019-08-22T16:56:26.726+0000",
                    "started": "2019-08-22T16:56:26.725+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "299557",
                    "issueId": "13250632"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250632/worklog/299558",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5139: ARROW-6229: [C++][Dataset] implement FileSystemBasedDataSource\nURL: https://github.com/apache/arrow/pull/5139#discussion_r316777371\n \n \n\n ##########\n File path: cpp/src/arrow/util/functional.h\n ##########\n @@ -0,0 +1,59 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <tuple>\n+\n+#include \"arrow/util/macros.h\"\n+\n+namespace arrow {\n+\n+/// Helper struct for examining lambdas and other callables.\n+/// If the callable is not overloaded, the argument types of its call operator can be\n+/// extracted via single_call::argument_type<Index, Function>\n+struct single_call {\n \n Review comment:\n   Perhaps `call_traits<Function>::argument_type<Index>` would be a nicer spelling btw. No strong feelings though.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-22T16:56:27.129+0000",
                    "updated": "2019-08-22T16:56:27.129+0000",
                    "started": "2019-08-22T16:56:27.129+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "299558",
                    "issueId": "13250632"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250632/worklog/299559",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5139: ARROW-6229: [C++][Dataset] implement FileSystemBasedDataSource\nURL: https://github.com/apache/arrow/pull/5139#discussion_r316778989\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/test_util.h\n ##########\n @@ -139,5 +139,45 @@ std::unique_ptr<GeneratedRecordBatch<Gen>> MakeGeneratedRecordBatch(\n   return internal::make_unique<GeneratedRecordBatch<Gen>>(schema, std::forward<Gen>(gen));\n }\n \n+/// \\brief A dummy FileFormat implementation\n+class DummyFileFormat : public FileFormat {\n+ public:\n+  std::string name() const override { return \"dummy\"; }\n+\n+  /// \\brief Return true if the given file extension\n+  bool IsKnownExtension(const std::string& ext) const override { return ext == name(); }\n+\n+  /// \\brief Open a file for scanning (always returns an empty iterator)\n+  Status ScanFile(const FileSource& source, std::shared_ptr<ScanOptions> scan_options,\n+                  std::shared_ptr<ScanContext> scan_context,\n+                  std::unique_ptr<ScanTaskIterator>* out) const override {\n+    *out = internal::make_unique<EmptyIterator<std::unique_ptr<ScanTask>>>();\n+    return Status::OK();\n+  }\n+\n+  Status MakeFragment(const FileSource& location, std::shared_ptr<ScanOptions> opts,\n+                      std::unique_ptr<FileBasedDataFragment>* out) override;\n \n Review comment:\n   Is it ok to `override` with a slightly different signature? (I suspect the base declaration doesn't use `FileBasedDataFragment`).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-22T16:56:27.146+0000",
                    "updated": "2019-08-22T16:56:27.146+0000",
                    "started": "2019-08-22T16:56:27.145+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "299559",
                    "issueId": "13250632"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250632/worklog/299560",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5139: ARROW-6229: [C++][Dataset] implement FileSystemBasedDataSource\nURL: https://github.com/apache/arrow/pull/5139#discussion_r316783877\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/file_base.cc\n ##########\n @@ -41,5 +45,68 @@ Status FileBasedDataFragment::Scan(std::shared_ptr<ScanContext> scan_context,\n   return format_->ScanFile(source_, scan_options_, scan_context, out);\n }\n \n+FileSystemBasedDataSource::FileSystemBasedDataSource(\n+    fs::FileSystem* filesystem, const fs::Selector& selector,\n+    std::shared_ptr<FileFormat> format, std::shared_ptr<ScanOptions> scan_options,\n+    std::vector<fs::FileStats> stats)\n+    : filesystem_(filesystem),\n+      selector_(std::move(selector)),\n+      format_(std::move(format)),\n+      scan_options_(std::move(scan_options)),\n+      stats_(std::move(stats)) {}\n+\n+Status FileSystemBasedDataSource::Make(fs::FileSystem* filesystem,\n+                                       const fs::Selector& selector,\n+                                       std::shared_ptr<FileFormat> format,\n+                                       std::shared_ptr<ScanOptions> scan_options,\n+                                       std::unique_ptr<FileSystemBasedDataSource>* out) {\n+  std::vector<fs::FileStats> stats;\n+  RETURN_NOT_OK(filesystem->GetTargetStats(selector, &stats));\n+\n+  auto new_end =\n+      std::remove_if(stats.begin(), stats.end(), [&](const fs::FileStats& stats) {\n \n Review comment:\n   It seems this is potentially `O(n**2)` as each remove will shift all trailing vector elements to the left... Better build a new vector from scratch perhaps?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-22T16:56:27.149+0000",
                    "updated": "2019-08-22T16:56:27.149+0000",
                    "started": "2019-08-22T16:56:27.149+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "299560",
                    "issueId": "13250632"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250632/worklog/299561",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5139: ARROW-6229: [C++][Dataset] implement FileSystemBasedDataSource\nURL: https://github.com/apache/arrow/pull/5139#discussion_r316777469\n \n \n\n ##########\n File path: cpp/src/arrow/util/functional.h\n ##########\n @@ -0,0 +1,59 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <tuple>\n+\n+#include \"arrow/util/macros.h\"\n+\n+namespace arrow {\n+\n+/// Helper struct for examining lambdas and other callables.\n+/// If the callable is not overloaded, the argument types of its call operator can be\n+/// extracted via single_call::argument_type<Index, Function>\n+struct single_call {\n+  template <typename R, typename... A>\n+  static std::true_type check_impl(R(A...));\n+\n+  template <typename F>\n+  static std::true_type check_impl(decltype(&F::operator())*);\n+\n+  template <typename F>\n+  static std::false_type check_impl(...);\n+\n+  template <std::size_t I, typename F, typename R, typename... A>\n+  static typename std::tuple_element<I, std::tuple<A...>>::type argument_type_impl(\n+      R (F::*)(A...));\n+\n+  template <std::size_t I, typename F, typename R, typename... A>\n+  static typename std::tuple_element<I, std::tuple<A...>>::type argument_type_impl(\n+      R (F::*)(A...) const);\n+\n+  template <typename F>\n+  static constexpr bool check() {\n \n Review comment:\n   Is this a public API? What does it do?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-22T16:56:27.152+0000",
                    "updated": "2019-08-22T16:56:27.152+0000",
                    "started": "2019-08-22T16:56:27.152+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "299561",
                    "issueId": "13250632"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250632/worklog/299562",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5139: ARROW-6229: [C++][Dataset] implement FileSystemBasedDataSource\nURL: https://github.com/apache/arrow/pull/5139#discussion_r316779328\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/test_util.h\n ##########\n @@ -139,5 +139,45 @@ std::unique_ptr<GeneratedRecordBatch<Gen>> MakeGeneratedRecordBatch(\n   return internal::make_unique<GeneratedRecordBatch<Gen>>(schema, std::forward<Gen>(gen));\n }\n \n+/// \\brief A dummy FileFormat implementation\n+class DummyFileFormat : public FileFormat {\n+ public:\n+  std::string name() const override { return \"dummy\"; }\n+\n+  /// \\brief Return true if the given file extension\n+  bool IsKnownExtension(const std::string& ext) const override { return ext == name(); }\n+\n+  /// \\brief Open a file for scanning (always returns an empty iterator)\n+  Status ScanFile(const FileSource& source, std::shared_ptr<ScanOptions> scan_options,\n+                  std::shared_ptr<ScanContext> scan_context,\n+                  std::unique_ptr<ScanTaskIterator>* out) const override {\n+    *out = internal::make_unique<EmptyIterator<std::unique_ptr<ScanTask>>>();\n+    return Status::OK();\n+  }\n+\n+  Status MakeFragment(const FileSource& location, std::shared_ptr<ScanOptions> opts,\n+                      std::unique_ptr<FileBasedDataFragment>* out) override;\n+};\n+\n+class DummyFragment : public FileBasedDataFragment {\n+ public:\n+  DummyFragment(const FileSource& source, std::shared_ptr<ScanOptions> options)\n+      : FileBasedDataFragment(source, std::make_shared<DummyFileFormat>(), options) {}\n+\n+  bool splittable() const override { return false; }\n+};\n+\n+Status DummyFileFormat::MakeFragment(const FileSource& source,\n \n Review comment:\n   Beware linking issues with a non-inline function in a `.h`...\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-22T16:56:27.153+0000",
                    "updated": "2019-08-22T16:56:27.153+0000",
                    "started": "2019-08-22T16:56:27.152+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "299562",
                    "issueId": "13250632"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250632/worklog/299563",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5139: ARROW-6229: [C++][Dataset] implement FileSystemBasedDataSource\nURL: https://github.com/apache/arrow/pull/5139#discussion_r316778522\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/test_util.h\n ##########\n @@ -139,5 +139,45 @@ std::unique_ptr<GeneratedRecordBatch<Gen>> MakeGeneratedRecordBatch(\n   return internal::make_unique<GeneratedRecordBatch<Gen>>(schema, std::forward<Gen>(gen));\n }\n \n+/// \\brief A dummy FileFormat implementation\n+class DummyFileFormat : public FileFormat {\n+ public:\n+  std::string name() const override { return \"dummy\"; }\n+\n+  /// \\brief Return true if the given file extension\n+  bool IsKnownExtension(const std::string& ext) const override { return ext == name(); }\n+\n+  /// \\brief Open a file for scanning (always returns an empty iterator)\n+  Status ScanFile(const FileSource& source, std::shared_ptr<ScanOptions> scan_options,\n+                  std::shared_ptr<ScanContext> scan_context,\n+                  std::unique_ptr<ScanTaskIterator>* out) const override {\n+    *out = internal::make_unique<EmptyIterator<std::unique_ptr<ScanTask>>>();\n \n Review comment:\n   Have we fixed `make_unique` for MSVC yet?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-22T16:56:27.153+0000",
                    "updated": "2019-08-22T16:56:27.153+0000",
                    "started": "2019-08-22T16:56:27.152+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "299563",
                    "issueId": "13250632"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250632/worklog/299564",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5139: ARROW-6229: [C++][Dataset] implement FileSystemBasedDataSource\nURL: https://github.com/apache/arrow/pull/5139#discussion_r316782127\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/file_parquet.cc\n ##########\n @@ -174,5 +175,18 @@ Status ParquetFileFormat::ScanFile(const FileSource& source,\n                                        out);\n }\n \n+Status ParquetFileFormat::MakeFragment(const FileSource& source,\n+                                       std::shared_ptr<ScanOptions> opts,\n+                                       std::unique_ptr<FileBasedDataFragment>* out) {\n+  fs::FileStats stats;\n+  RETURN_NOT_OK(source.filesystem()->GetTargetStats(source.path(), &stats));\n \n Review comment:\n   Are you double-checking here? i.e. where is this method supposed to be call in the scanning pipeline?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-22T16:56:27.158+0000",
                    "updated": "2019-08-22T16:56:27.158+0000",
                    "started": "2019-08-22T16:56:27.158+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "299564",
                    "issueId": "13250632"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250632/worklog/299565",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5139: ARROW-6229: [C++][Dataset] implement FileSystemBasedDataSource\nURL: https://github.com/apache/arrow/pull/5139#discussion_r316784535\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/file_parquet_test.cc\n ##########\n @@ -88,5 +94,102 @@ TEST_F(TestParquetFileFormat, ScanRecordBatchReader) {\n   ASSERT_EQ(row_count, kNumRows);\n }\n \n+class TestFileSystemBasedDataSource : public FileSourceFixtureMixin {\n+ public:\n+  void SetUp() override {\n+    format_ = std::make_shared<ParquetFileFormat>();\n+\n+    ASSERT_OK(TemporaryDir::Make(\"test-fsdatasource-\", &temp_dir_));\n \n Review comment:\n   If you want you could also use a mock filesystem (see `arrow/filesystem/mockfs.h`). It's in-memory.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-22T16:56:27.304+0000",
                    "updated": "2019-08-22T16:56:27.304+0000",
                    "started": "2019-08-22T16:56:27.304+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "299565",
                    "issueId": "13250632"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250632/worklog/299566",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5139: ARROW-6229: [C++][Dataset] implement FileSystemBasedDataSource\nURL: https://github.com/apache/arrow/pull/5139#discussion_r316780015\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/file_base.h\n ##########\n @@ -130,6 +132,11 @@ class ARROW_DS_EXPORT FileFormat {\n                           std::shared_ptr<ScanOptions> scan_options,\n                           std::shared_ptr<ScanContext> scan_context,\n                           std::unique_ptr<ScanTaskIterator>* out) const = 0;\n+\n+  /// \\brief Open a fragment\n \n Review comment:\n   Hmm... can you explain why that's interesting in addition to `ScanFile`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-22T16:56:27.307+0000",
                    "updated": "2019-08-22T16:56:27.307+0000",
                    "started": "2019-08-22T16:56:27.307+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "299566",
                    "issueId": "13250632"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250632/worklog/299567",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5139: ARROW-6229: [C++][Dataset] implement FileSystemBasedDataSource\nURL: https://github.com/apache/arrow/pull/5139#discussion_r316782860\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/file_base.h\n ##########\n @@ -130,6 +132,11 @@ class ARROW_DS_EXPORT FileFormat {\n                           std::shared_ptr<ScanOptions> scan_options,\n                           std::shared_ptr<ScanContext> scan_context,\n                           std::unique_ptr<ScanTaskIterator>* out) const = 0;\n+\n+  /// \\brief Open a fragment\n \n Review comment:\n   It seems `ScanFile` could be implemented in terms of `MakeFragment` and `DataFragment::Scan`. Is there a reason this is not the case?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-22T16:56:27.310+0000",
                    "updated": "2019-08-22T16:56:27.310+0000",
                    "started": "2019-08-22T16:56:27.310+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "299567",
                    "issueId": "13250632"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250632/worklog/299627",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5139: ARROW-6229: [C++][Dataset] implement FileSystemBasedDataSource\nURL: https://github.com/apache/arrow/pull/5139#discussion_r316821965\n \n \n\n ##########\n File path: cpp/src/arrow/util/functional.h\n ##########\n @@ -0,0 +1,59 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <tuple>\n+\n+#include \"arrow/util/macros.h\"\n+\n+namespace arrow {\n+\n+/// Helper struct for examining lambdas and other callables.\n+/// If the callable is not overloaded, the argument types of its call operator can be\n+/// extracted via single_call::argument_type<Index, Function>\n+struct single_call {\n+  template <typename R, typename... A>\n+  static std::true_type check_impl(R(A...));\n+\n+  template <typename F>\n+  static std::true_type check_impl(decltype(&F::operator())*);\n+\n+  template <typename F>\n+  static std::false_type check_impl(...);\n+\n+  template <std::size_t I, typename F, typename R, typename... A>\n+  static typename std::tuple_element<I, std::tuple<A...>>::type argument_type_impl(\n+      R (F::*)(A...));\n+\n+  template <std::size_t I, typename F, typename R, typename... A>\n+  static typename std::tuple_element<I, std::tuple<A...>>::type argument_type_impl(\n+      R (F::*)(A...) const);\n+\n+  template <typename F>\n+  static constexpr bool check() {\n+    return decltype(check_impl<typename std::decay<F>::type>(NULLPTR))::value;\n+  }\n+\n+  template <typename F, typename T = void>\n+  using enable_if = typename std::enable_if<check<F>(), T>::type;\n \n Review comment:\n   This is going to be useful in my next PR.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-22T18:22:10.925+0000",
                    "updated": "2019-08-22T18:22:10.925+0000",
                    "started": "2019-08-22T18:22:10.924+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "299627",
                    "issueId": "13250632"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250632/worklog/299709",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5139: ARROW-6229: [C++][Dataset] implement FileSystemBasedDataSource\nURL: https://github.com/apache/arrow/pull/5139#discussion_r316865589\n \n \n\n ##########\n File path: cpp/src/arrow/util/functional.h\n ##########\n @@ -0,0 +1,59 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <tuple>\n+\n+#include \"arrow/util/macros.h\"\n+\n+namespace arrow {\n+\n+/// Helper struct for examining lambdas and other callables.\n+/// If the callable is not overloaded, the argument types of its call operator can be\n+/// extracted via single_call::argument_type<Index, Function>\n+struct single_call {\n \n Review comment:\n   I like this `call_traits<Function>::argument<Index>` and `call_traits<Function>::argument<Index>`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-22T20:14:01.043+0000",
                    "updated": "2019-08-22T20:14:01.043+0000",
                    "started": "2019-08-22T20:14:01.043+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "299709",
                    "issueId": "13250632"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250632/worklog/299729",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5139: ARROW-6229: [C++][Dataset] implement FileSystemBasedDataSource\nURL: https://github.com/apache/arrow/pull/5139#discussion_r316873699\n \n \n\n ##########\n File path: cpp/src/arrow/util/iterator.h\n ##########\n @@ -82,4 +83,38 @@ std::unique_ptr<VectorIterator<T>> MakeIterator(std::vector<T> v) {\n   return std::unique_ptr<VectorIterator<T>>(new VectorIterator<T>(std::move(v)));\n }\n \n+template <typename T>\n+class EmptyIterator : public Iterator<T> {\n+ public:\n+  explicit EmptyIterator(Status s = Status::OK()) : status_(s) {}\n+\n+  Status Next(T* out) override {\n+    *out = NULLPTR;\n+    return status_;\n+  }\n+\n+ private:\n+  Status status_;\n+};\n+\n+template <typename Fn, typename T>\n+class FunctionIterator : public Iterator<T> {\n+ public:\n+  using IteratorType = Iterator<T>;\n+\n+  explicit FunctionIterator(Fn fn) : fn_(std::move(fn)) {}\n+\n+  Status Next(T* out) override { return fn_(out); }\n+\n+ private:\n+  Fn fn_;\n+};\n+\n+template <typename Fn, typename T = typename std::remove_pointer<\n+                           single_call::argument_type<0, Fn>>::type>\n+std::unique_ptr<FunctionIterator<Fn, T>> MakeIterator(Fn fn) {\n \n Review comment:\n   because `MakeIterator` was shorter. I can change it\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-22T20:35:00.252+0000",
                    "updated": "2019-08-22T20:35:00.252+0000",
                    "started": "2019-08-22T20:35:00.251+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "299729",
                    "issueId": "13250632"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 21000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7d8103f2[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2a16c6a6[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3f077b4a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@23b8a9fa[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4a1bc501[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@63a5847b[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@677c6e6e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1edfc02[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@154a12f3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5a03ca7d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5e08c04d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@30eb3a62[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 21000,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Aug 27 09:20:05 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-08-27T09:20:05.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6229/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-08-13T19:02:02.000+0000",
        "updated": "2019-08-27T09:20:49.000+0000",
        "timeoriginalestimate": null,
        "description": "DirectoryBasedDataSource should scan a directory (optionally recursively) on construction, yielding FileBasedDataFragments",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 21000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Add a DataSource implementation which scans a directory",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250632/comment/16916546",
                    "id": "16916546",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 5139\n[https://github.com/apache/arrow/pull/5139]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-08-27T09:20:05.277+0000",
                    "updated": "2019-08-27T09:20:05.277+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z05mu0:",
        "customfield_12314139": null
    }
}