{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13415096",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415096",
    "key": "ARROW-14970",
    "fields": {
        "parent": {
            "id": "13417100",
            "key": "ARROW-15079",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13417100",
            "fields": {
                "summary": "[C++] Add scheduler to constrain memory of exec plans",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                    "description": "The issue is open and ready for the assignee to start work on it.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                    "name": "Open",
                    "id": "1",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                        "id": 2,
                        "key": "new",
                        "colorName": "blue-gray",
                        "name": "To Do"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                    "id": "2",
                    "description": "A new feature of the product, which has yet to be developed.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                    "name": "New Feature",
                    "subtask": false,
                    "avatarId": 21141
                }
            }
        },
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "compute",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12632590",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12632590",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13426083",
                    "key": "ARROW-15519",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13426083",
                    "fields": {
                        "summary": "[C++] Investigate potential performance improvements for the filter node",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/3",
            "description": "This issue is being actively worked on at the moment by the assignee.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/inprogress.png",
            "name": "In Progress",
            "id": "3",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/4",
                "id": 4,
                "key": "indeterminate",
                "colorName": "yellow",
                "name": "In Progress"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=aucahuasi",
            "name": "aucahuasi",
            "key": "aucahuasi",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=aucahuasi&avatarId=47450",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=aucahuasi&avatarId=47450",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=aucahuasi&avatarId=47450",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=aucahuasi&avatarId=47450"
            },
            "displayName": "Percy Camilo Trive\u00f1o Aucahuasi",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=aucahuasi",
            "name": "aucahuasi",
            "key": "aucahuasi",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=aucahuasi&avatarId=47450",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=aucahuasi&avatarId=47450",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=aucahuasi&avatarId=47450",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=aucahuasi&avatarId=47450"
            },
            "displayName": "Percy Camilo Trive\u00f1o Aucahuasi",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14970/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 19,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415096/worklog/693522",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi opened a new pull request #11923:\nURL: https://github.com/apache/arrow/pull/11923\n\n\n   https://issues.apache.org/jira/browse/ARROW-14970\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-09T19:53:17.232+0000",
                    "updated": "2021-12-09T19:53:17.232+0000",
                    "started": "2021-12-09T19:53:17.232+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "693522",
                    "issueId": "13415096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415096/worklog/693523",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11923:\nURL: https://github.com/apache/arrow/pull/11923#issuecomment-990192466\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-09T19:53:40.191+0000",
                    "updated": "2021-12-09T19:53:40.191+0000",
                    "started": "2021-12-09T19:53:40.191+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "693523",
                    "issueId": "13415096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415096/worklog/693986",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on pull request #11923:\nURL: https://github.com/apache/arrow/pull/11923#issuecomment-991021003\n\n\n   cc @bkietz for visibility\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-10T14:31:27.618+0000",
                    "updated": "2021-12-10T14:31:27.618+0000",
                    "started": "2021-12-10T14:31:27.618+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "693986",
                    "issueId": "13415096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415096/worklog/694361",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #11923:\nURL: https://github.com/apache/arrow/pull/11923#discussion_r767079966\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/exec_plan.h\n##########\n@@ -226,6 +227,8 @@ class ARROW_EXPORT ExecNode {\n   std::string ToString() const;\n \n  protected:\n+  static inline Result<ExecBatch> IdentityTask(ExecBatch batch) { return batch; }\n+\n\nReview comment:\n       This isn't really a task though is it.  I was expecting something like...\r\n   \r\n   ```\r\n   static inline std::function<Result<ExecBatch>(ExecBatch)> IdentityTask() { return [] (ExecBatch batch) { return batch; }; }\r\n   ```\n\n##########\nFile path: cpp/src/arrow/compute/exec/exec_plan.h\n##########\n@@ -134,8 +134,9 @@ class ARROW_EXPORT ExecNode {\n   /// - these are allowed to call back into PauseProducing(), ResumeProducing()\n   ///   and StopProducing()\n \n-  /// Transfer input batch to ExecNode\n-  virtual void InputReceived(ExecNode* input, ExecBatch batch) = 0;\n+  /// Transfer the input task to ExecNode\n+  virtual void InputReceived(ExecNode* input, ExecBatch batch,\n+                             std::function<Result<ExecBatch>(ExecBatch)> task) = 0;\n\nReview comment:\n       I would expect the signature to be:\r\n   \r\n   ```\r\n   virtual void InputReceived(ExecNode* input, std::function<Result<ExecBatch>(ExecBatch)> task) = 0;\r\n   ```\r\n   \r\n   I'm not sure what it means to have `batch` and `task`?\r\n   \r\n   Is this some kind of intermediate step between the two models?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-11T03:02:47.951+0000",
                    "updated": "2021-12-11T03:02:47.951+0000",
                    "started": "2021-12-11T03:02:47.951+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "694361",
                    "issueId": "13415096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415096/worklog/694647",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #11923:\nURL: https://github.com/apache/arrow/pull/11923#discussion_r767079966\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/exec_plan.h\n##########\n@@ -226,6 +227,8 @@ class ARROW_EXPORT ExecNode {\n   std::string ToString() const;\n \n  protected:\n+  static inline Result<ExecBatch> IdentityTask(ExecBatch batch) { return batch; }\n+\n\nReview comment:\n       This isn't really a task though is it.  I was expecting something like...\r\n   \r\n   ```\r\n   static inline std::function<Result<ExecBatch>(ExecBatch)> IdentityTask() { return [] (ExecBatch batch) { return batch; }; }\r\n   ```\n\n##########\nFile path: cpp/src/arrow/compute/exec/exec_plan.h\n##########\n@@ -134,8 +134,9 @@ class ARROW_EXPORT ExecNode {\n   /// - these are allowed to call back into PauseProducing(), ResumeProducing()\n   ///   and StopProducing()\n \n-  /// Transfer input batch to ExecNode\n-  virtual void InputReceived(ExecNode* input, ExecBatch batch) = 0;\n+  /// Transfer the input task to ExecNode\n+  virtual void InputReceived(ExecNode* input, ExecBatch batch,\n+                             std::function<Result<ExecBatch>(ExecBatch)> task) = 0;\n\nReview comment:\n       I would expect the signature to be:\r\n   \r\n   ```\r\n   virtual void InputReceived(ExecNode* input, std::function<Result<ExecBatch>(ExecBatch)> task) = 0;\r\n   ```\r\n   \r\n   I'm not sure what it means to have `batch` and `task`?\r\n   \r\n   Is this some kind of intermediate step between the two models?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-12T06:08:22.778+0000",
                    "updated": "2021-12-12T06:08:22.778+0000",
                    "started": "2021-12-12T06:08:22.778+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "694647",
                    "issueId": "13415096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415096/worklog/695162",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on pull request #11923:\nURL: https://github.com/apache/arrow/pull/11923#issuecomment-992618786\n\n\n   Thanks for the feedback @westonpace !\r\n   I'm working now for improving all of this\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-13T15:56:57.020+0000",
                    "updated": "2021-12-13T15:56:57.020+0000",
                    "started": "2021-12-13T15:56:57.019+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "695162",
                    "issueId": "13415096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415096/worklog/695166",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on pull request #11923:\nURL: https://github.com/apache/arrow/pull/11923#issuecomment-992632088\n\n\n   @westonpace I've sent some changes, feel free to take another look!\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-13T16:10:44.254+0000",
                    "updated": "2021-12-13T16:10:44.254+0000",
                    "started": "2021-12-13T16:10:44.254+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "695166",
                    "issueId": "13415096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415096/worklog/695588",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #11923:\nURL: https://github.com/apache/arrow/pull/11923#discussion_r768442345\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/filter_node.cc\n##########\n@@ -92,10 +92,13 @@ class FilterNode : public MapNode {\n     return ExecBatch::Make(std::move(values));\n   }\n \n-  void InputReceived(ExecNode* input, ExecBatch batch) override {\n+  void InputReceived(ExecNode* input, std::function<Result<ExecBatch>()> task) override {\n     DCHECK_EQ(input, inputs_[0]);\n-    auto func = [this](ExecBatch batch) { return DoFilter(std::move(batch)); };\n-    this->SubmitTask(std::move(func), std::move(batch));\n+    auto func = [this, task]() -> Result<ExecBatch> {\n+      ARROW_ASSIGN_OR_RAISE(auto batch, task());\n+      return DoFilter(std::move(batch));\n+    };\n+    this->SubmitTask(std::move(func));\n\nReview comment:\n       ```suggestion\r\n       outputs_[0]->InputReceived(this, std::move(func));\r\n   ```\r\n   \r\n   Eventually I'm thinking we will end up with something like this.  The only calls to `SubmitTask` would be from pipeline breakers.\n\n##########\nFile path: cpp/src/arrow/compute/exec/aggregate_node.cc\n##########\n@@ -235,17 +238,18 @@ class ScalarAggregateNode : public ExecNode {\n \n  private:\n   Status Finish() {\n-    ExecBatch batch{{}, 1};\n-    batch.values.resize(kernels_.size());\n-\n-    for (size_t i = 0; i < kernels_.size(); ++i) {\n-      KernelContext ctx{plan()->exec_context()};\n-      ARROW_ASSIGN_OR_RAISE(auto merged, ScalarAggregateKernel::MergeAll(\n-                                             kernels_[i], &ctx, std::move(states_[i])));\n-      RETURN_NOT_OK(kernels_[i]->finalize(&ctx, &batch.values[i]));\n-    }\n-\n-    outputs_[0]->InputReceived(this, std::move(batch));\n+    auto task = [this]() -> Result<ExecBatch> {\n+      ExecBatch batch{{}, 1};\n+      batch.values.resize(kernels_.size());\n+      for (size_t i = 0; i < kernels_.size(); ++i) {\n+        KernelContext ctx{plan()->exec_context()};\n+        ARROW_ASSIGN_OR_RAISE(auto merged, ScalarAggregateKernel::MergeAll(\n+                                               kernels_[i], &ctx, std::move(states_[i])));\n+        RETURN_NOT_OK(kernels_[i]->finalize(&ctx, &batch.values[i]));\n+      }\n+      return batch;\n+    };\n+    outputs_[0]->InputReceived(this, std::move(task));\n\nReview comment:\n       This is good :+1: \n\n##########\nFile path: cpp/src/arrow/compute/exec/source_node.cc\n##########\n@@ -107,19 +109,19 @@ struct SourceNode : ExecNode {\n                 ExecBatch batch = std::move(*maybe_batch);\n \n                 if (executor) {\n-                  auto status =\n-                      task_group_.AddTask([this, executor, batch]() -> Result<Future<>> {\n-                        return executor->Submit([=]() {\n-                          outputs_[0]->InputReceived(this, std::move(batch));\n-                          return Status::OK();\n-                        });\n-                      });\n+                  auto status = task_group_.AddTask([this, executor,\n+                                                     batch]() -> Result<Future<>> {\n+                    return executor->Submit([=]() {\n+                      outputs_[0]->InputReceived(this, IdentityTask(std::move(batch)));\n+                      return Status::OK();\n+                    });\n+                  });\n                   if (!status.ok()) {\n                     outputs_[0]->ErrorReceived(this, std::move(status));\n                     return Break(total_batches);\n                   }\n                 } else {\n-                  outputs_[0]->InputReceived(this, std::move(batch));\n+                  outputs_[0]->InputReceived(this, IdentityTask(std::move(batch)));\n\nReview comment:\n       This would actually **not** create a task but forward to downstream like filter/project.\n\n##########\nFile path: cpp/src/arrow/compute/exec/union_node.cc\n##########\n@@ -74,13 +74,18 @@ class UnionNode : public ExecNode {\n     return plan->EmplaceNode<UnionNode>(plan, std::move(inputs));\n   }\n \n-  void InputReceived(ExecNode* input, ExecBatch batch) override {\n+  void InputReceived(ExecNode* input, std::function<Result<ExecBatch>()> task) override {\n     ARROW_DCHECK(std::find(inputs_.begin(), inputs_.end(), input) != inputs_.end());\n \n     if (finished_.is_finished()) {\n       return;\n     }\n-    outputs_[0]->InputReceived(this, std::move(batch));\n+    auto batch = task();\n+    if (!batch.ok()) {\n+      ErrorIfNotOk(batch.status());\n+      return;\n+    }\n+    outputs_[0]->InputReceived(this, IdentityTask(batch.MoveValueUnsafe()));\n\nReview comment:\n       This looks good :+1: \n\n##########\nFile path: cpp/src/arrow/compute/exec/aggregate_node.cc\n##########\n@@ -175,18 +175,21 @@ class ScalarAggregateNode : public ExecNode {\n     return Status::OK();\n   }\n \n-  void InputReceived(ExecNode* input, ExecBatch batch) override {\n+  void InputReceived(ExecNode* input, std::function<Result<ExecBatch>()> task) override {\n     DCHECK_EQ(input, inputs_[0]);\n \n     auto thread_index = get_thread_index_();\n-\n-    if (ErrorIfNotOk(DoConsume(std::move(batch), thread_index))) return;\n+    auto prev = task();\n+    if (!prev.ok()) {\n+      ErrorIfNotOk(prev.status());\n+      return;\n+    }\n+    if (ErrorIfNotOk(DoConsume(prev.MoveValueUnsafe(), thread_index))) return;\n\nReview comment:\n       ```suggestion\r\n       auto func = [this] (Result<ExecBatch> task) {\r\n         ARROW_ASSIGN_OR_RAISE(auto prev, task());\r\n         auto thread_index = get_thread_index_();\r\n         return DoConsume(prev.MoveValueUnsafe(), thread_index);\r\n       };\r\n       plan_->scheduler()->SubmitTask(std::move(func));\r\n   ```\r\n   \r\n   This is what I'm thinking pipeline breakers would look like.\n\n##########\nFile path: cpp/src/arrow/compute/exec/project_node.cc\n##########\n@@ -88,10 +88,13 @@ class ProjectNode : public MapNode {\n     return ExecBatch{std::move(values), target.length};\n   }\n \n-  void InputReceived(ExecNode* input, ExecBatch batch) override {\n+  void InputReceived(ExecNode* input, std::function<Result<ExecBatch>()> task) override {\n     DCHECK_EQ(input, inputs_[0]);\n-    auto func = [this](ExecBatch batch) { return DoProject(std::move(batch)); };\n-    this->SubmitTask(std::move(func), std::move(batch));\n+    auto func = [this, task]() -> Result<ExecBatch> {\n+      ARROW_ASSIGN_OR_RAISE(auto batch, task());\n+      return DoProject(std::move(batch));\n+    };\n+    this->SubmitTask(std::move(func));\n\nReview comment:\n       ```suggestion\r\n       this->SubmitTask(std::move(func));\r\n   ```\r\n   this->outputs_[0]->InputReceived(this, std::move(func));\n\n##########\nFile path: cpp/src/arrow/compute/exec/hash_join_node.cc\n##########\n@@ -494,7 +494,13 @@ class HashJoinNode : public ExecNode {\n     size_t thread_index = thread_indexer_();\n     int side = (input == inputs_[0]) ? 0 : 1;\n     {\n-      Status status = impl_->InputReceived(thread_index, side, std::move(batch));\n+      auto batch = task();\n+      if (!batch.ok()) {\n+        StopProducing();\n+        ErrorIfNotOk(batch.status());\n+        return;\n+      }\n+      Status status = impl_->InputReceived(thread_index, side, batch.MoveValueUnsafe());\n\nReview comment:\n       This would change to submit task.\n\n##########\nFile path: cpp/src/arrow/compute/exec/sink_node.cc\n##########\n@@ -95,10 +95,15 @@ class SinkNode : public ExecNode {\n \n   Future<> finished() override { return finished_; }\n \n-  void InputReceived(ExecNode* input, ExecBatch batch) override {\n+  void InputReceived(ExecNode* input, std::function<Result<ExecBatch>()> task) override {\n     DCHECK_EQ(input, inputs_[0]);\n \n-    bool did_push = producer_.Push(std::move(batch));\n+    auto batch = task();\n+    if (!batch.ok()) {\n+      ErrorIfNotOk(batch.status());\n+      return;\n+    }\n+    bool did_push = producer_.Push(batch.MoveValueUnsafe());\n\nReview comment:\n       This changes to submit task.\n\n##########\nFile path: cpp/src/arrow/compute/exec/exec_plan.cc\n##########\n@@ -350,37 +350,38 @@ void MapNode::StopProducing() {\n \n Future<> MapNode::finished() { return finished_; }\n \n-void MapNode::SubmitTask(std::function<Result<ExecBatch>(ExecBatch)> map_fn,\n-                         ExecBatch batch) {\n+void MapNode::SubmitTask(std::function<Result<ExecBatch>()> map_fn) {\n\nReview comment:\n       I don't know if `MapNode` will still need to exist.  Eventually this logic will be moving over to the scheduler I think.\n\n##########\nFile path: cpp/src/arrow/compute/exec/aggregate_node.cc\n##########\n@@ -483,13 +491,18 @@ class GroupByNode : public ExecNode {\n     return Status::OK();\n   }\n \n-  void InputReceived(ExecNode* input, ExecBatch batch) override {\n+  void InputReceived(ExecNode* input, std::function<Result<ExecBatch>()> task) override {\n     // bail if StopProducing was called\n     if (finished_.is_finished()) return;\n \n     DCHECK_EQ(input, inputs_[0]);\n \n-    if (ErrorIfNotOk(Consume(std::move(batch)))) return;\n+    auto prev = task();\n+    if (!prev.ok()) {\n+      ErrorIfNotOk(prev.status());\n+      return;\n+    }\n+    if (ErrorIfNotOk(Consume(prev.MoveValueUnsafe()))) return;\n\nReview comment:\n       ```suggestion\r\n       auto prev = task();\r\n       if (!prev.ok()) {\r\n         ErrorIfNotOk(prev.status());\r\n         return;\r\n       }\r\n       if (ErrorIfNotOk(Consume(prev.MoveValueUnsafe()))) return;\r\n   ```\r\n   \r\n   This should change to submit task\n\n##########\nFile path: cpp/src/arrow/compute/exec/sink_node.cc\n##########\n@@ -188,7 +193,12 @@ class ConsumingSinkNode : public ExecNode {\n       return;\n     }\n \n-    Status consumption_status = consumer_->Consume(std::move(batch));\n+    auto batch = task();\n+    if (!batch.ok()) {\n+      ErrorIfNotOk(batch.status());\n+      return;\n+    }\n+    Status consumption_status = consumer_->Consume(batch.MoveValueUnsafe());\n\nReview comment:\n       This changes to submit task.\n\n##########\nFile path: cpp/src/arrow/compute/exec/sink_node.cc\n##########\n@@ -274,11 +284,15 @@ struct OrderBySinkNode final : public SinkNode {\n                                               sink_options.backpressure);\n   }\n \n-  void InputReceived(ExecNode* input, ExecBatch batch) override {\n+  void InputReceived(ExecNode* input, std::function<Result<ExecBatch>()> task) override {\n     DCHECK_EQ(input, inputs_[0]);\n-\n-    auto maybe_batch = batch.ToRecordBatch(inputs_[0]->output_schema(),\n-                                           plan()->exec_context()->memory_pool());\n+    auto batch = task();\n+    if (!batch.ok()) {\n+      ErrorIfNotOk(batch.status());\n+      return;\n+    }\n+    auto maybe_batch = batch.ValueUnsafe().ToRecordBatch(\n+        inputs_[0]->output_schema(), plan()->exec_context()->memory_pool());\n\nReview comment:\n       This would build up a task and pass to impl_->InputReceived.  Or maybe the task itself would call impl_->InputReceived and this method calls submit task.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-14T09:15:38.720+0000",
                    "updated": "2021-12-14T09:15:38.720+0000",
                    "started": "2021-12-14T09:15:38.720+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "695588",
                    "issueId": "13415096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415096/worklog/695803",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on a change in pull request #11923:\nURL: https://github.com/apache/arrow/pull/11923#discussion_r768695291\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/aggregate_node.cc\n##########\n@@ -175,18 +175,21 @@ class ScalarAggregateNode : public ExecNode {\n     return Status::OK();\n   }\n \n-  void InputReceived(ExecNode* input, ExecBatch batch) override {\n+  void InputReceived(ExecNode* input, std::function<Result<ExecBatch>()> task) override {\n     DCHECK_EQ(input, inputs_[0]);\n \n     auto thread_index = get_thread_index_();\n-\n-    if (ErrorIfNotOk(DoConsume(std::move(batch), thread_index))) return;\n+    auto prev = task();\n+    if (!prev.ok()) {\n+      ErrorIfNotOk(prev.status());\n+      return;\n+    }\n+    if (ErrorIfNotOk(DoConsume(prev.MoveValueUnsafe(), thread_index))) return;\n\nReview comment:\n       > plan_->scheduler()->SubmitTask(std::move(func));\r\n   \r\n   Yes that is the idea, but this PR is to enable that construction later, this PR is not going to define any scheduler or submitting logic.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-14T14:03:14.575+0000",
                    "updated": "2021-12-14T14:03:14.575+0000",
                    "started": "2021-12-14T14:03:14.575+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "695803",
                    "issueId": "13415096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415096/worklog/695805",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on a change in pull request #11923:\nURL: https://github.com/apache/arrow/pull/11923#discussion_r768698533\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/exec_plan.cc\n##########\n@@ -350,37 +350,38 @@ void MapNode::StopProducing() {\n \n Future<> MapNode::finished() { return finished_; }\n \n-void MapNode::SubmitTask(std::function<Result<ExecBatch>(ExecBatch)> map_fn,\n-                         ExecBatch batch) {\n+void MapNode::SubmitTask(std::function<Result<ExecBatch>()> map_fn) {\n\nReview comment:\n       Indeed, MapNode should go away once we have the scheduler in place, this PR is not for doing changes in this part of the logic, but just to accommodate the ExecNode interface to make it ready for future PRs about the scheduler.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-14T14:06:54.898+0000",
                    "updated": "2021-12-14T14:06:54.898+0000",
                    "started": "2021-12-14T14:06:54.897+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "695805",
                    "issueId": "13415096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415096/worklog/695806",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on a change in pull request #11923:\nURL: https://github.com/apache/arrow/pull/11923#discussion_r768699423\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/filter_node.cc\n##########\n@@ -92,10 +92,13 @@ class FilterNode : public MapNode {\n     return ExecBatch::Make(std::move(values));\n   }\n \n-  void InputReceived(ExecNode* input, ExecBatch batch) override {\n+  void InputReceived(ExecNode* input, std::function<Result<ExecBatch>()> task) override {\n     DCHECK_EQ(input, inputs_[0]);\n-    auto func = [this](ExecBatch batch) { return DoFilter(std::move(batch)); };\n-    this->SubmitTask(std::move(func), std::move(batch));\n+    auto func = [this, task]() -> Result<ExecBatch> {\n+      ARROW_ASSIGN_OR_RAISE(auto batch, task());\n+      return DoFilter(std::move(batch));\n+    };\n+    this->SubmitTask(std::move(func));\n\nReview comment:\n       That's right, that change will happen when in the PRs related to the scheduler\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-14T14:07:49.735+0000",
                    "updated": "2021-12-14T14:07:49.735+0000",
                    "started": "2021-12-14T14:07:49.735+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "695806",
                    "issueId": "13415096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415096/worklog/695807",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on a change in pull request #11923:\nURL: https://github.com/apache/arrow/pull/11923#discussion_r768699830\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/hash_join_node.cc\n##########\n@@ -494,7 +494,13 @@ class HashJoinNode : public ExecNode {\n     size_t thread_index = thread_indexer_();\n     int side = (input == inputs_[0]) ? 0 : 1;\n     {\n-      Status status = impl_->InputReceived(thread_index, side, std::move(batch));\n+      auto batch = task();\n+      if (!batch.ok()) {\n+        StopProducing();\n+        ErrorIfNotOk(batch.status());\n+        return;\n+      }\n+      Status status = impl_->InputReceived(thread_index, side, batch.MoveValueUnsafe());\n\nReview comment:\n       That's right, that change will happen when in the PRs related to the scheduler x2 :)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-14T14:08:26.175+0000",
                    "updated": "2021-12-14T14:08:26.175+0000",
                    "started": "2021-12-14T14:08:26.174+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "695807",
                    "issueId": "13415096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415096/worklog/695808",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on a change in pull request #11923:\nURL: https://github.com/apache/arrow/pull/11923#discussion_r768700498\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/project_node.cc\n##########\n@@ -88,10 +88,13 @@ class ProjectNode : public MapNode {\n     return ExecBatch{std::move(values), target.length};\n   }\n \n-  void InputReceived(ExecNode* input, ExecBatch batch) override {\n+  void InputReceived(ExecNode* input, std::function<Result<ExecBatch>()> task) override {\n     DCHECK_EQ(input, inputs_[0]);\n-    auto func = [this](ExecBatch batch) { return DoProject(std::move(batch)); };\n-    this->SubmitTask(std::move(func), std::move(batch));\n+    auto func = [this, task]() -> Result<ExecBatch> {\n+      ARROW_ASSIGN_OR_RAISE(auto batch, task());\n+      return DoProject(std::move(batch));\n+    };\n+    this->SubmitTask(std::move(func));\n\nReview comment:\n       That's right, that change will happen when in the PRs related to the scheduler x3\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-14T14:08:59.025+0000",
                    "updated": "2021-12-14T14:08:59.025+0000",
                    "started": "2021-12-14T14:08:59.025+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "695808",
                    "issueId": "13415096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415096/worklog/695811",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on a change in pull request #11923:\nURL: https://github.com/apache/arrow/pull/11923#discussion_r768701574\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/sink_node.cc\n##########\n@@ -95,10 +95,15 @@ class SinkNode : public ExecNode {\n \n   Future<> finished() override { return finished_; }\n \n-  void InputReceived(ExecNode* input, ExecBatch batch) override {\n+  void InputReceived(ExecNode* input, std::function<Result<ExecBatch>()> task) override {\n     DCHECK_EQ(input, inputs_[0]);\n \n-    bool did_push = producer_.Push(std::move(batch));\n+    auto batch = task();\n+    if (!batch.ok()) {\n+      ErrorIfNotOk(batch.status());\n+      return;\n+    }\n+    bool did_push = producer_.Push(batch.MoveValueUnsafe());\n\nReview comment:\n       SubmitTask is a method that is going to be part of the interface of the Scheduler, this part will need to changes in the next PRs related to the scheduler\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-14T14:10:07.448+0000",
                    "updated": "2021-12-14T14:10:07.448+0000",
                    "started": "2021-12-14T14:10:07.448+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "695811",
                    "issueId": "13415096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415096/worklog/695812",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on a change in pull request #11923:\nURL: https://github.com/apache/arrow/pull/11923#discussion_r768701788\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/sink_node.cc\n##########\n@@ -188,7 +193,12 @@ class ConsumingSinkNode : public ExecNode {\n       return;\n     }\n \n-    Status consumption_status = consumer_->Consume(std::move(batch));\n+    auto batch = task();\n+    if (!batch.ok()) {\n+      ErrorIfNotOk(batch.status());\n+      return;\n+    }\n+    Status consumption_status = consumer_->Consume(batch.MoveValueUnsafe());\n\nReview comment:\n       SubmitTask is a method that is going to be part of the interface of the Scheduler, this part will need to changes in the next PRs related to the scheduler x2\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-14T14:10:20.198+0000",
                    "updated": "2021-12-14T14:10:20.198+0000",
                    "started": "2021-12-14T14:10:20.197+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "695812",
                    "issueId": "13415096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415096/worklog/695813",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on a change in pull request #11923:\nURL: https://github.com/apache/arrow/pull/11923#discussion_r768702599\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/sink_node.cc\n##########\n@@ -274,11 +284,15 @@ struct OrderBySinkNode final : public SinkNode {\n                                               sink_options.backpressure);\n   }\n \n-  void InputReceived(ExecNode* input, ExecBatch batch) override {\n+  void InputReceived(ExecNode* input, std::function<Result<ExecBatch>()> task) override {\n     DCHECK_EQ(input, inputs_[0]);\n-\n-    auto maybe_batch = batch.ToRecordBatch(inputs_[0]->output_schema(),\n-                                           plan()->exec_context()->memory_pool());\n+    auto batch = task();\n+    if (!batch.ok()) {\n+      ErrorIfNotOk(batch.status());\n+      return;\n+    }\n+    auto maybe_batch = batch.ValueUnsafe().ToRecordBatch(\n+        inputs_[0]->output_schema(), plan()->exec_context()->memory_pool());\n\nReview comment:\n       I think this should call to SubmitTask, but once again I think this part will need to changes in the next PRs related to the scheduler\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-14T14:11:03.920+0000",
                    "updated": "2021-12-14T14:11:03.920+0000",
                    "started": "2021-12-14T14:11:03.920+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "695813",
                    "issueId": "13415096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415096/worklog/696012",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #11923:\nURL: https://github.com/apache/arrow/pull/11923#issuecomment-993843814\n\n\n   We will want to update the docs in `docs/source/cpp/streaming_execution.rst` as well.  I think it's ok in those docs to mention the concept of a scheduler / task submission if needed to explain the API.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-14T18:08:50.759+0000",
                    "updated": "2021-12-14T18:08:50.759+0000",
                    "started": "2021-12-14T18:08:50.759+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "696012",
                    "issueId": "13415096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415096/worklog/696196",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on pull request #11923:\nURL: https://github.com/apache/arrow/pull/11923#issuecomment-994092048\n\n\n   > We will want to update the docs in docs/source/cpp/streaming_execution.rst\r\n   \r\n   Done! Good catch! thanks.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-14T22:12:10.456+0000",
                    "updated": "2021-12-14T22:12:10.456+0000",
                    "started": "2021-12-14T22:12:10.455+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "696196",
                    "issueId": "13415096"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415096/worklog/697711",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #11923:\nURL: https://github.com/apache/arrow/pull/11923#discussion_r771065253\n\n\n\n##########\nFile path: docs/source/cpp/streaming_execution.rst\n##########\n@@ -95,8 +95,14 @@ through unchanged::\n     class PassthruNode : public ExecNode {\n      public:\n       // InputReceived is the main entry point for ExecNodes. It is invoked\n-      // by an input of this node to push a batch here for processing.\n-      void InputReceived(ExecNode* input, ExecBatch batch) override {\n+      // by an input of this node to push a task here for processing.\n+      // For non-terminating nodes (e.g. filter/project/etc.): the node can wrap\n+      // its own work with the task (using function composition/fusing) and then\n+      // call InputReceived on the downstream node.\n+      // A \"terminating node\" (e.g. sink node / pipeline breaker) could then submit\n+      // the task to a scheduler.\n+      void InputReceived(ExecNode* input,\n+                         std::function<Result<ExecBatch>()> task) override {\n\nReview comment:\n       ```suggestion\r\n         // by an input of this node to push a task here for processing.\r\n         // Non-terminating nodes (e.g. filter/project/etc.): should wrap\r\n         // their own work with the task (using function composition/fusing) and then\r\n         // call InputReceived on the downstream node.\r\n         // Terminating nodes (e.g. sink node / pipeline breaker) should submit\r\n         // the task to an executor or task group.\r\n         void InputReceived(ExecNode* input,\r\n                            std::function<Result<ExecBatch>()> task) override {\r\n   ```\r\n   Some minor wording and removing the term scheduler as one doesn't exist yet.\n\n##########\nFile path: cpp/src/arrow/compute/exec/filter_node.cc\n##########\n@@ -92,10 +92,13 @@ class FilterNode : public MapNode {\n     return ExecBatch::Make(std::move(values));\n   }\n \n-  void InputReceived(ExecNode* input, ExecBatch batch) override {\n+  void InputReceived(ExecNode* input, std::function<Result<ExecBatch>()> task) override {\n     DCHECK_EQ(input, inputs_[0]);\n-    auto func = [this](ExecBatch batch) { return DoFilter(std::move(batch)); };\n-    this->SubmitTask(std::move(func), std::move(batch));\n+    auto func = [this, task]() -> Result<ExecBatch> {\n+      ARROW_ASSIGN_OR_RAISE(auto batch, task());\n+      return DoFilter(std::move(batch));\n+    };\n+    this->SubmitTask(std::move(func));\n\nReview comment:\n       // This node should be forwarding a fused task but that will be handled in ARROW-XYZ\n\n##########\nFile path: cpp/src/arrow/compute/exec/source_node.cc\n##########\n@@ -107,19 +109,19 @@ struct SourceNode : ExecNode {\n                 ExecBatch batch = std::move(*maybe_batch);\n \n                 if (executor) {\n-                  auto status =\n-                      task_group_.AddTask([this, executor, batch]() -> Result<Future<>> {\n-                        return executor->Submit([=]() {\n-                          outputs_[0]->InputReceived(this, std::move(batch));\n-                          return Status::OK();\n-                        });\n-                      });\n+                  auto status = task_group_.AddTask([this, executor,\n+                                                     batch]() -> Result<Future<>> {\n+                    return executor->Submit([=]() {\n+                      outputs_[0]->InputReceived(this, IdentityTask(std::move(batch)));\n+                      return Status::OK();\n+                    });\n+                  });\n                   if (!status.ok()) {\n                     outputs_[0]->ErrorReceived(this, std::move(status));\n                     return Break(total_batches);\n                   }\n                 } else {\n-                  outputs_[0]->InputReceived(this, std::move(batch));\n+                  outputs_[0]->InputReceived(this, IdentityTask(std::move(batch)));\n\nReview comment:\n       So what will this eventually look like?  If we assume we don't know how many batches a scanner will emit then how many \"scan tasks\" do we submit individually?  I suppose we can always \"over-submit\" and then the final tasks will just abandon themselves if the scanner is finished.  Could this be another spot for backpressure?  I don't think we have to solve all of these problems right now.\n\n##########\nFile path: cpp/src/arrow/compute/exec/sink_node.cc\n##########\n@@ -188,7 +193,12 @@ class ConsumingSinkNode : public ExecNode {\n       return;\n     }\n \n-    Status consumption_status = consumer_->Consume(std::move(batch));\n+    auto batch = task();\n+    if (!batch.ok()) {\n+      ErrorIfNotOk(batch.status());\n+      return;\n+    }\n+    Status consumption_status = consumer_->Consume(batch.MoveValueUnsafe());\n\nReview comment:\n       // This node should be submitting...\n\n##########\nFile path: cpp/src/arrow/compute/exec/sink_node.cc\n##########\n@@ -274,11 +284,15 @@ struct OrderBySinkNode final : public SinkNode {\n                                               sink_options.backpressure);\n   }\n \n-  void InputReceived(ExecNode* input, ExecBatch batch) override {\n+  void InputReceived(ExecNode* input, std::function<Result<ExecBatch>()> task) override {\n     DCHECK_EQ(input, inputs_[0]);\n-\n-    auto maybe_batch = batch.ToRecordBatch(inputs_[0]->output_schema(),\n-                                           plan()->exec_context()->memory_pool());\n+    auto batch = task();\n+    if (!batch.ok()) {\n+      ErrorIfNotOk(batch.status());\n+      return;\n+    }\n+    auto maybe_batch = batch.ValueUnsafe().ToRecordBatch(\n+        inputs_[0]->output_schema(), plan()->exec_context()->memory_pool());\n\nReview comment:\n       // This node should be submitting a task...\n\n##########\nFile path: cpp/src/arrow/compute/exec/project_node.cc\n##########\n@@ -88,10 +88,13 @@ class ProjectNode : public MapNode {\n     return ExecBatch{std::move(values), target.length};\n   }\n \n-  void InputReceived(ExecNode* input, ExecBatch batch) override {\n+  void InputReceived(ExecNode* input, std::function<Result<ExecBatch>()> task) override {\n     DCHECK_EQ(input, inputs_[0]);\n-    auto func = [this](ExecBatch batch) { return DoProject(std::move(batch)); };\n-    this->SubmitTask(std::move(func), std::move(batch));\n+    auto func = [this, task]() -> Result<ExecBatch> {\n+      ARROW_ASSIGN_OR_RAISE(auto batch, task());\n+      return DoProject(std::move(batch));\n+    };\n+    this->SubmitTask(std::move(func));\n\nReview comment:\n       // This node should be forwarding a task and not submitting a task and that will be handled in ARROW-XYZ\n\n##########\nFile path: cpp/src/arrow/compute/exec/hash_join_node.cc\n##########\n@@ -494,7 +494,13 @@ class HashJoinNode : public ExecNode {\n     size_t thread_index = thread_indexer_();\n     int side = (input == inputs_[0]) ? 0 : 1;\n     {\n-      Status status = impl_->InputReceived(thread_index, side, std::move(batch));\n+      auto batch = task();\n+      if (!batch.ok()) {\n+        StopProducing();\n+        ErrorIfNotOk(batch.status());\n+        return;\n+      }\n+      Status status = impl_->InputReceived(thread_index, side, batch.MoveValueUnsafe());\n\nReview comment:\n       // This node should be submitting a task to an executor / scheduler but that will be handled in ARROW-XYZ\n\n##########\nFile path: cpp/src/arrow/compute/exec/sink_node.cc\n##########\n@@ -95,10 +95,15 @@ class SinkNode : public ExecNode {\n \n   Future<> finished() override { return finished_; }\n \n-  void InputReceived(ExecNode* input, ExecBatch batch) override {\n+  void InputReceived(ExecNode* input, std::function<Result<ExecBatch>()> task) override {\n     DCHECK_EQ(input, inputs_[0]);\n \n-    bool did_push = producer_.Push(std::move(batch));\n+    auto batch = task();\n+    if (!batch.ok()) {\n+      ErrorIfNotOk(batch.status());\n+      return;\n+    }\n+    bool did_push = producer_.Push(batch.MoveValueUnsafe());\n\nReview comment:\n       // This node should be submitting...\n\n##########\nFile path: cpp/src/arrow/compute/exec/aggregate_node.cc\n##########\n@@ -175,18 +175,21 @@ class ScalarAggregateNode : public ExecNode {\n     return Status::OK();\n   }\n \n-  void InputReceived(ExecNode* input, ExecBatch batch) override {\n+  void InputReceived(ExecNode* input, std::function<Result<ExecBatch>()> task) override {\n     DCHECK_EQ(input, inputs_[0]);\n \n     auto thread_index = get_thread_index_();\n-\n-    if (ErrorIfNotOk(DoConsume(std::move(batch), thread_index))) return;\n+    auto prev = task();\n+    if (!prev.ok()) {\n+      ErrorIfNotOk(prev.status());\n+      return;\n+    }\n+    if (ErrorIfNotOk(DoConsume(prev.MoveValueUnsafe(), thread_index))) return;\n\nReview comment:\n       If we aren't going to address this now let's make another JIRA (taskify 3?)  Something like, \"Fix logic in existing nodes so that pipeline breakers submit and non-breakers forward\" and then add a comment in all of these spots along the lines of...\r\n   \r\n   // This node should be forwarding the task downstream but that will be addressed in ARROW-XYZ\n\n##########\nFile path: cpp/src/arrow/compute/exec/aggregate_node.cc\n##########\n@@ -483,13 +491,18 @@ class GroupByNode : public ExecNode {\n     return Status::OK();\n   }\n \n-  void InputReceived(ExecNode* input, ExecBatch batch) override {\n+  void InputReceived(ExecNode* input, std::function<Result<ExecBatch>()> task) override {\n     // bail if StopProducing was called\n     if (finished_.is_finished()) return;\n \n     DCHECK_EQ(input, inputs_[0]);\n \n-    if (ErrorIfNotOk(Consume(std::move(batch)))) return;\n+    auto prev = task();\n+    if (!prev.ok()) {\n+      ErrorIfNotOk(prev.status());\n+      return;\n+    }\n+    if (ErrorIfNotOk(Consume(prev.MoveValueUnsafe()))) return;\n\nReview comment:\n       // This node should be submitting the task to an executor but that will be addressed in ARROW-XYZ\n\n##########\nFile path: cpp/src/arrow/compute/exec/exec_plan.cc\n##########\n@@ -350,37 +350,38 @@ void MapNode::StopProducing() {\n \n Future<> MapNode::finished() { return finished_; }\n \n-void MapNode::SubmitTask(std::function<Result<ExecBatch>(ExecBatch)> map_fn,\n-                         ExecBatch batch) {\n+void MapNode::SubmitTask(std::function<Result<ExecBatch>()> map_fn) {\n\nReview comment:\n       Actually, thinking on this more today I think we might still want it (we can do this in a future PR if desired).  It would basically look like...\r\n   \r\n   ```\r\n   virtual Result<ExecBatch> MapNode::Map(ExecBatch batch) = 0;\r\n   \r\n   void MapNode::InputReceived(ExecNode* input, std::function<Result<ExecBatch>()> task) override {\r\n       auto fused = [task] () {\r\n           ExecBatch batch = task();\r\n           return Map(batch);\r\n       };\r\n       outputs->InputReceived(this, fused);\r\n   }\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-17T03:01:53.070+0000",
                    "updated": "2021-12-17T03:01:53.070+0000",
                    "started": "2021-12-17T03:01:53.070+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "697711",
                    "issueId": "13415096"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 11400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5755fb40[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@86cb7dd[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4e2b329c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2314b6db[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@55785e0d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1f7af7e[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@165fd20e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@10fb0c70[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@764a054[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3bd46399[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5373194f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1ba317dd[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 11400,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jul 12 14:04:27 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": [
            "C++"
        ],
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14970/watchers",
            "watchCount": 3,
            "isWatching": true
        },
        "created": "2021-12-02T16:17:48.000+0000",
        "updated": "2022-07-12T14:04:27.000+0000",
        "timeoriginalestimate": null,
        "description": "In ARROW-13576 we made possible to defer computation of exec nodes but only for some implementations (e.g. Filter and Project)\u00a0\r\n\r\nThis ticket is to continue that effort and make all the nodes submit their tasks at the moment they are operating the ExecNode::InputReceived\r\n\r\nRelated tasks:\r\n\r\nhttps://issues.apache.org/jira/browse/ARROW-13576\r\n\r\nhttps://issues.apache.org/jira/browse/ARROW-14330\r\n\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 11400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Compute] Replace ExecNode::InputReceived with ::MakeTask (Part 2)",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415096/comment/17452675",
                    "id": "17452675",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "We talked about this offline but I'll add it as a comment here for visibility.  I think this is a good idea but I'd like to avoid task-per-node (although that could be an acceptable stepping stone).  One way we can do this (inspired by work from [~aocsa]) is change InputReceived from:\r\n\r\n{noformat}\r\nvoid InputReceived(ExecNode* input, ExecBatch batch)\r\n{noformat}\r\n\r\nto something like...\r\n\r\n{noformat}\r\nvoid InputReceived(ExecNode* input, std::function<void(ExecBatch)> task)\r\n{noformat}\r\n\r\nA \"terminating node\" (e.g. sink node / pipeline breaker) could then submit the task.  A \"non-terminating node\" (e.g. filter/project/etc.) could wrap the task with its own work (function composition) and call InputReceived on the downstream node.\r\n\r\nThere are probably other ways to do this as well.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-12-03T01:17:07.920+0000",
                    "updated": "2021-12-03T01:17:07.920+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415096/comment/17565619",
                    "id": "17565619",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=toddfarmer",
                        "name": "toddfarmer",
                        "key": "JIRAUSER288796",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39935",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39935",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39935",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39935"
                        },
                        "displayName": "Todd Farmer",
                        "active": true,
                        "timeZone": "America/Boise"
                    },
                    "body": "This issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned. Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=toddfarmer",
                        "name": "toddfarmer",
                        "key": "JIRAUSER288796",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39935",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39935",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39935",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39935"
                        },
                        "displayName": "Todd Farmer",
                        "active": true,
                        "timeZone": "America/Boise"
                    },
                    "created": "2022-07-12T14:04:27.094+0000",
                    "updated": "2022-07-12T14:04:27.094+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z0xay0:",
        "customfield_12314139": null
    }
}