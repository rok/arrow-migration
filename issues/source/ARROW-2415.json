{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13150752",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150752",
    "key": "ARROW-2415",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=brucem",
            "name": "brucem",
            "key": "brucem",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Bruce Mitchener",
            "active": true,
            "timeZone": "Asia/Jakarta"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=brucem",
            "name": "brucem",
            "key": "brucem",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Bruce Mitchener",
            "active": true,
            "timeZone": "Asia/Jakarta"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=brucem",
            "name": "brucem",
            "key": "brucem",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Bruce Mitchener",
            "active": true,
            "timeZone": "Asia/Jakarta"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2415/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@547e346a[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4ea4e2df[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2a12af3b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@43c912bc[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@20e826a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5d0501a4[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@62511648[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6986b44c[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1f6d66c4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6a104cac[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@19f4f0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5ce1146b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Apr 09 12:53:19 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-04-09T12:52:46.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2415/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-04-07T07:36:43.000+0000",
        "updated": "2018-06-29T14:46:06.000+0000",
        "timeoriginalestimate": null,
        "description": "Clippy reports [https://rust-lang-nursery.github.io/rust-clippy/v0.0.191/index.html#match_ref_pats]\u00a0warnings.",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Fix using references in pattern matching",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150752/comment/16429272",
                    "id": "16429272",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "waywardmonkeys opened a new pull request #1851: ARROW-2415: [Rust] Fix clippy ref-match-pats warnings.\nURL: https://github.com/apache/arrow/pull/1851\n \n \n   It isn't necessary to use a reference in each pattern in a pattern\r\n   match and it is more readable to just dereference the match value.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-07T07:38:05.957+0000",
                    "updated": "2018-04-07T07:38:05.957+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150752/comment/16429526",
                    "id": "16429526",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "maxim-lian commented on issue #1851: ARROW-2415: [Rust] Fix clippy ref-match-pats warnings.\nURL: https://github.com/apache/arrow/pull/1851#issuecomment-379492997\n \n \n   This is (almost) all the remainder of them:\r\n   \r\n   ```diff\r\n   diff --git a/rust/src/array.rs b/rust/src/array.rs\r\n   index 09f0c950..e6ee0241 100644\r\n   --- a/rust/src/array.rs\r\n   +++ b/rust/src/array.rs\r\n   @@ -93,6 +93,9 @@ impl Array {\r\n        pub fn len(&self) -> usize {\r\n            self.len as usize\r\n        }\r\n   +    pub fn is_empty(&self) -> bool {\r\n   +        self.len == 0\r\n   +}\r\n    }\r\n    \r\n    macro_rules! array_from_primitive {\r\n   @@ -137,8 +140,8 @@ macro_rules! array_from_optional_primitive {\r\n                fn from(v: Vec<Option<$DT>>) -> Self {\r\n                    let mut null_count = 0;\r\n                    let mut validity_bitmap = Bitmap::new(v.len());\r\n   -                for i in 0..v.len() {\r\n   -                    if v[i].is_none() {\r\n   +                for (i, item) in v.iter().enumerate() {\r\n   +                    if item.is_none() {\r\n                            null_count += 1;\r\n                            validity_bitmap.clear(i);\r\n                        }\r\n   @@ -192,7 +195,7 @@ impl From<Vec<Rc<Array>>> for Array {\r\n                len: v.len() as i32,\r\n                null_count: 0,\r\n                validity_bitmap: None,\r\n   -            data: ArrayData::Struct(v.iter().map(|a| a.clone()).collect()),\r\n   +            data: ArrayData::Struct(v.iter().cloned().collect()),\r\n            }\r\n        }\r\n    }\r\n   diff --git a/rust/src/bitmap.rs b/rust/src/bitmap.rs\r\n   index 59c65139..264feb4f 100644\r\n   --- a/rust/src/bitmap.rs\r\n   +++ b/rust/src/bitmap.rs\r\n   @@ -42,6 +42,9 @@ impl Bitmap {\r\n        pub fn len(&self) -> i32 {\r\n            self.bits.len()\r\n        }\r\n   +    pub fn is_empty(&self) -> bool {\r\n   +        self.len() == 0\r\n   +    }\r\n    \r\n        pub fn is_set(&self, i: usize) -> bool {\r\n            let byte_offset = i / 8;\r\n   diff --git a/rust/src/buffer.rs b/rust/src/buffer.rs\r\n   index 1f2ec6c8..a4907e61 100644\r\n   --- a/rust/src/buffer.rs\r\n   +++ b/rust/src/buffer.rs\r\n   @@ -38,6 +38,9 @@ impl<T> Buffer<T> {\r\n            self.len\r\n        }\r\n    \r\n   +    pub fn is_empty(&self) -> bool {\r\n   +        self.len == 0\r\n   +    }\r\n        pub fn data(&self) -> *const T {\r\n            self.data\r\n        }\r\n   @@ -166,6 +169,7 @@ mod tests {\r\n        fn test_buffer_i32() {\r\n            let b: Buffer<i32> = Buffer::from(vec![1, 2, 3, 4, 5]);\r\n            assert_eq!(5, b.len);\r\n   +        assert_eq!(false, b.is_empty());\r\n        }\r\n    \r\n        #[test]\r\n   diff --git a/rust/src/datatypes.rs b/rust/src/datatypes.rs\r\n   index ac2c2c6e..19e85321 100644\r\n   --- a/rust/src/datatypes.rs\r\n   +++ b/rust/src/datatypes.rs\r\n   @@ -40,17 +40,17 @@ pub enum DataType {\r\n    impl DataType {\r\n        fn from(json: &Value) -> Result<DataType, ArrowError> {\r\n            //println!(\"DataType::from({:?})\", json);\r\n   -        match json {\r\n   -            &Value::Object(ref map) => match map.get(\"name\") {\r\n   +        match *json {\r\n   +            Value::Object(ref map) => match map.get(\"name\") {\r\n                    Some(s) if s == \"bool\" => Ok(DataType::Boolean),\r\n                    Some(s) if s == \"utf8\" => Ok(DataType::Utf8),\r\n                    Some(s) if s == \"floatingpoint\" => match map.get(\"precision\") {\r\n                        Some(p) if p == \"HALF\" => Ok(DataType::Float16),\r\n                        Some(p) if p == \"SINGLE\" => Ok(DataType::Float32),\r\n                        Some(p) if p == \"DOUBLE\" => Ok(DataType::Float64),\r\n   -                    _ => Err(ArrowError::ParseError(format!(\r\n   -                        \"floatingpoint precision missing or invalid\"\r\n   -                    ))),\r\n   +                    _ => Err(ArrowError::ParseError(\r\n   +                        \"floatingpoint precision missing or invalid\".to_string(),\r\n   +                    )),\r\n                    },\r\n                    Some(s) if s == \"int\" => match map.get(\"isSigned\") {\r\n                        Some(&Value::Bool(true)) => match map.get(\"bitWidth\") {\r\n   @@ -59,13 +59,13 @@ impl DataType {\r\n                                Some(16) => Ok(DataType::Int16),\r\n                                Some(32) => Ok(DataType::Int32),\r\n                                Some(64) => Ok(DataType::Int32),\r\n   -                            _ => Err(ArrowError::ParseError(format!(\r\n   -                                \"int bitWidth missing or invalid\"\r\n   -                            ))),\r\n   +                            _ => Err(ArrowError::ParseError(\r\n   +                                \"int bitWidth missing or invalid\".to_string(),\r\n   +                            )),\r\n                            },\r\n   -                        _ => Err(ArrowError::ParseError(format!(\r\n   -                            \"int bitWidth missing or invalid\"\r\n   -                        ))),\r\n   +                        _ => Err(ArrowError::ParseError(\r\n   +                            \"int bitWidth missing or invalid\".to_string(),\r\n   +                        )),\r\n                        },\r\n                        Some(&Value::Bool(false)) => match map.get(\"bitWidth\") {\r\n                            Some(&Value::Number(ref n)) => match n.as_u64() {\r\n   @@ -73,17 +73,17 @@ impl DataType {\r\n                                Some(16) => Ok(DataType::UInt16),\r\n                                Some(32) => Ok(DataType::UInt32),\r\n                                Some(64) => Ok(DataType::UInt64),\r\n   -                            _ => Err(ArrowError::ParseError(format!(\r\n   -                                \"int bitWidth missing or invalid\"\r\n   -                            ))),\r\n   +                            _ => Err(ArrowError::ParseError(\r\n   +                                \"int bitWidth missing or invalid\".to_string(),\r\n   +                            )),\r\n                            },\r\n   -                        _ => Err(ArrowError::ParseError(format!(\r\n   -                            \"int bitWidth missing or invalid\"\r\n   -                        ))),\r\n   +                        _ => Err(ArrowError::ParseError(\r\n   +                            \"int bitWidth missing or invalid\".to_string(),\r\n   +                        )),\r\n                        },\r\n   -                    _ => Err(ArrowError::ParseError(format!(\r\n   -                        \"int signed missing or invalid\"\r\n   -                    ))),\r\n   +                    _ => Err(ArrowError::ParseError(\r\n   +                        \"int signed missing or invalid\".to_string(),\r\n   +                    )),\r\n                    },\r\n                    Some(other) => Err(ArrowError::ParseError(format!(\r\n                        \"invalid type name: {}\",\r\n   @@ -97,29 +97,31 @@ impl DataType {\r\n                                .collect::<Result<Vec<Field>, ArrowError>>();\r\n                            Ok(DataType::Struct(fields?))\r\n                        }\r\n   -                    _ => Err(ArrowError::ParseError(format!(\"empty type\"))),\r\n   +                    _ => Err(ArrowError::ParseError(\"empty type\".to_string())),\r\n                    },\r\n                },\r\n   -            _ => Err(ArrowError::ParseError(format!(\"invalid json value type\"))),\r\n   +            _ => Err(ArrowError::ParseError(\r\n   +                \"invalid json value type\".to_string(),\r\n   +            )),\r\n            }\r\n        }\r\n    \r\n        pub fn to_json(&self) -> Value {\r\n   -        match self {\r\n   -            &DataType::Boolean => json!({\"name\": \"bool\"}),\r\n   -            &DataType::Int8 => json!({\"name\": \"int\", \"bitWidth\": 8, \"isSigned\": true}),\r\n   -            &DataType::Int16 => json!({\"name\": \"int\", \"bitWidth\": 16, \"isSigned\": true}),\r\n   -            &DataType::Int32 => json!({\"name\": \"int\", \"bitWidth\": 32, \"isSigned\": true}),\r\n   -            &DataType::Int64 => json!({\"name\": \"int\", \"bitWidth\": 64, \"isSigned\": true}),\r\n   -            &DataType::UInt8 => json!({\"name\": \"int\", \"bitWidth\": 8, \"isSigned\": false}),\r\n   -            &DataType::UInt16 => json!({\"name\": \"int\", \"bitWidth\": 16, \"isSigned\": false}),\r\n   -            &DataType::UInt32 => json!({\"name\": \"int\", \"bitWidth\": 32, \"isSigned\": false}),\r\n   -            &DataType::UInt64 => json!({\"name\": \"int\", \"bitWidth\": 64, \"isSigned\": false}),\r\n   -            &DataType::Float16 => json!({\"name\": \"floatingpoint\", \"precision\": \"HALF\"}),\r\n   -            &DataType::Float32 => json!({\"name\": \"floatingpoint\", \"precision\": \"SINGLE\"}),\r\n   -            &DataType::Float64 => json!({\"name\": \"floatingpoint\", \"precision\": \"DOUBLE\"}),\r\n   -            &DataType::Utf8 => json!({\"name\": \"utf8\"}),\r\n   -            &DataType::Struct(ref fields) => {\r\n   +        match *self {\r\n   +            DataType::Boolean => json!({\"name\": \"bool\"}),\r\n   +            DataType::Int8 => json!({\"name\": \"int\", \"bitWidth\": 8, \"isSigned\": true}),\r\n   +            DataType::Int16 => json!({\"name\": \"int\", \"bitWidth\": 16, \"isSigned\": true}),\r\n   +            DataType::Int32 => json!({\"name\": \"int\", \"bitWidth\": 32, \"isSigned\": true}),\r\n   +            DataType::Int64 => json!({\"name\": \"int\", \"bitWidth\": 64, \"isSigned\": true}),\r\n   +            DataType::UInt8 => json!({\"name\": \"int\", \"bitWidth\": 8, \"isSigned\": false}),\r\n   +            DataType::UInt16 => json!({\"name\": \"int\", \"bitWidth\": 16, \"isSigned\": false}),\r\n   +            DataType::UInt32 => json!({\"name\": \"int\", \"bitWidth\": 32, \"isSigned\": false}),\r\n   +            DataType::UInt64 => json!({\"name\": \"int\", \"bitWidth\": 64, \"isSigned\": false}),\r\n   +            DataType::Float16 => json!({\"name\": \"floatingpoint\", \"precision\": \"HALF\"}),\r\n   +            DataType::Float32 => json!({\"name\": \"floatingpoint\", \"precision\": \"SINGLE\"}),\r\n   +            DataType::Float64 => json!({\"name\": \"floatingpoint\", \"precision\": \"DOUBLE\"}),\r\n   +            DataType::Utf8 => json!({\"name\": \"utf8\"}),\r\n   +            DataType::Struct(ref fields) => {\r\n                    let field_json_array =\r\n                        Value::Array(fields.iter().map(|f| f.to_json()).collect::<Vec<Value>>());\r\n                    json!({ \"fields\": field_json_array })\r\n   @@ -139,37 +141,37 @@ impl Field {\r\n        pub fn new(name: &str, data_type: DataType, nullable: bool) -> Self {\r\n            Field {\r\n                name: name.to_string(),\r\n   -            data_type: data_type,\r\n   -            nullable: nullable,\r\n   +            data_type,\r\n   +            nullable,\r\n            }\r\n        }\r\n    \r\n        pub fn from(json: &Value) -> Result<Self, ArrowError> {\r\n            //println!(\"Field::from({:?}\", json);\r\n   -        match json {\r\n   -            &Value::Object(ref map) => {\r\n   +        match *json {\r\n   +            Value::Object(ref map) => {\r\n                    let name = match map.get(\"name\") {\r\n                        Some(&Value::String(ref name)) => name.to_string(),\r\n                        _ => {\r\n   -                        return Err(ArrowError::ParseError(format!(\r\n   -                            \"Field missing 'name' attribute\"\r\n   -                        )))\r\n   +                        return Err(ArrowError::ParseError(\r\n   +                            \"Field missing 'name' attribute\".to_string(),\r\n   +                        ))\r\n                        }\r\n                    };\r\n                    let nullable = match map.get(\"nullable\") {\r\n                        Some(&Value::Bool(b)) => b,\r\n                        _ => {\r\n   -                        return Err(ArrowError::ParseError(format!(\r\n   -                            \"Field missing 'nullable' attribute\"\r\n   -                        )))\r\n   +                        return Err(ArrowError::ParseError(\r\n   +                            \"Field missing 'nullable' attribute\".to_string(),\r\n   +                        ))\r\n                        }\r\n                    };\r\n                    let data_type = match map.get(\"type\") {\r\n                        Some(t) => DataType::from(t)?,\r\n                        _ => {\r\n   -                        return Err(ArrowError::ParseError(format!(\r\n   -                            \"Field missing 'type' attribute\"\r\n   -                        )))\r\n   +                        return Err(ArrowError::ParseError(\r\n   +                            \"Field missing 'type' attribute\".to_string(),\r\n   +                        ))\r\n                        }\r\n                    };\r\n                    Ok(Field {\r\n   @@ -178,9 +180,9 @@ impl Field {\r\n                        data_type,\r\n                    })\r\n                }\r\n   -            _ => Err(ArrowError::ParseError(format!(\r\n   -                \"Invalid json value type for field\"\r\n   -            ))),\r\n   +            _ => Err(ArrowError::ParseError(\r\n   +                \"Invalid json value type for field\".to_string(),\r\n   +            )),\r\n            }\r\n        }\r\n    \r\n   @@ -215,7 +217,7 @@ impl Schema {\r\n        }\r\n    \r\n        pub fn new(columns: Vec<Field>) -> Self {\r\n   -        Schema { columns: columns }\r\n   +        Schema { columns }\r\n        }\r\n    \r\n        /// look up a column by name and return a reference to the column along with it's index\r\n   diff --git a/rust/src/list.rs b/rust/src/list.rs\r\n   index 461f8e64..c46d1ef9 100644\r\n   --- a/rust/src/list.rs\r\n   +++ b/rust/src/list.rs\r\n   @@ -31,10 +31,14 @@ impl<T> List<T> {\r\n            self.offsets.len() - 1\r\n        }\r\n    \r\n   +    pub fn is_empty(&self) -> bool {\r\n   +        self.len() == 0\r\n   +    }\r\n   +\r\n        pub fn slice(&self, index: usize) -> &[T] {\r\n            let start = *self.offsets.get(index) as usize;\r\n            let end = *self.offsets.get(index + 1) as usize;\r\n   -        &self.data.slice(start, end)\r\n   +        self.data.slice(start, end)\r\n        }\r\n    }\r\n    \r\n   diff --git a/rust/src/memory.rs b/rust/src/memory.rs\r\n   index 41d4c53e..e3bb786b 100644\r\n   --- a/rust/src/memory.rs\r\n   +++ b/rust/src/memory.rs\r\n   @@ -28,9 +28,9 @@ pub fn allocate_aligned(size: i64) -> Result<*const u8, ArrowError> {\r\n            let result = libc::posix_memalign(&mut page, ALIGNMENT, size as usize);\r\n            match result {\r\n                0 => Ok(mem::transmute::<*mut libc::c_void, *const u8>(page)),\r\n   -            _ => Err(ArrowError::MemoryError(format!(\r\n   -                \"Failed to allocate memory\"\r\n   -            ))),\r\n   +            _ => Err(ArrowError::MemoryError(\r\n   +                \"Failed to allocate memory\".to_string(),\r\n   +            )),\r\n            }\r\n        }\r\n    }\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-07T19:22:59.551+0000",
                    "updated": "2018-04-07T19:22:59.551+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150752/comment/16429592",
                    "id": "16429592",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "waywardmonkeys commented on issue #1851: ARROW-2415: [Rust] Fix clippy ref-match-pats warnings.\nURL: https://github.com/apache/arrow/pull/1851#issuecomment-379516182\n \n \n   I'd planned to do subsequent things separately ... there's already a separate issue + PR for the `format!` calls for example. That way, each set of changes is independent and handled separately if people disagree on the usefulness of a particular check.\r\n   \r\n   Note that when `is_empty` is implemented for `Bitmap`, it should be `self.bits.is_empty()` hopefully rather than `self.len != 0` ... but I had that queued up for a subsequent issue + PR.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-08T03:11:32.744+0000",
                    "updated": "2018-04-08T03:11:32.744+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150752/comment/16429902",
                    "id": "16429902",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "maxim-lian commented on issue #1851: ARROW-2415: [Rust] Fix clippy ref-match-pats warnings.\nURL: https://github.com/apache/arrow/pull/1851#issuecomment-379588224\n \n \n   > it should be self.bits.is_empty() hopefully rather than self.len != 0\r\n   \r\n   \ud83d\udc4d \r\n   \r\n   > I'd planned to do subsequent things separately \r\n   \r\n   That's fine IMO. For the immediate fixes I don't think there's much ambiguity / need for discussion, but feel free to split up regardless. \r\n   \r\n   Should we add a check in CI? \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-08T22:33:06.092+0000",
                    "updated": "2018-04-08T22:33:06.092+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150752/comment/16429905",
                    "id": "16429905",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "waywardmonkeys commented on issue #1851: ARROW-2415: [Rust] Fix clippy ref-match-pats warnings.\nURL: https://github.com/apache/arrow/pull/1851#issuecomment-379589466\n \n \n   > Should we add a check in CI?\r\n   \r\n   Until clippy is part of rustup, I'm not sure. Since it is nightly only and sometimes it doesn't build for a day or two after compiler changes, it might introduce inconvenience.\r\n   \r\n   We could mention it somewhere though and encourage people to check?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-08T22:54:48.212+0000",
                    "updated": "2018-04-08T22:54:48.212+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150752/comment/16429971",
                    "id": "16429971",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "maxim-lian commented on issue #1851: ARROW-2415: [Rust] Fix clippy ref-match-pats warnings.\nURL: https://github.com/apache/arrow/pull/1851#issuecomment-379615789\n \n \n   Yes, I tend to agree. Potentially we could pin to a specific nightly, but maybe more trouble than it's worth. Any idea what other Rust projects do?\r\n   \r\n   CC @andygrove \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-09T03:06:19.982+0000",
                    "updated": "2018-04-09T03:06:19.982+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150752/comment/16430025",
                    "id": "16430025",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "waywardmonkeys commented on issue #1851: ARROW-2415: [Rust] Fix clippy ref-match-pats warnings.\nURL: https://github.com/apache/arrow/pull/1851#issuecomment-379630972\n \n \n   I will look into that this week and add it to my list of PRs to submit if necessary. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-09T04:53:11.627+0000",
                    "updated": "2018-04-09T04:53:11.627+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150752/comment/16430384",
                    "id": "16430384",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "andygrove commented on issue #1851: ARROW-2415: [Rust] Fix clippy ref-match-pats warnings.\nURL: https://github.com/apache/arrow/pull/1851#issuecomment-379717159\n \n \n   LGTM. I haven't been using clippy but will take a look.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-09T11:13:34.410+0000",
                    "updated": "2018-04-09T11:13:34.410+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150752/comment/16430391",
                    "id": "16430391",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on issue #1851: ARROW-2415: [Rust] Fix clippy ref-match-pats warnings.\nURL: https://github.com/apache/arrow/pull/1851#issuecomment-379718659\n \n \n   Is this ok for merging?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-09T11:20:14.157+0000",
                    "updated": "2018-04-09T11:20:14.157+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150752/comment/16430472",
                    "id": "16430472",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "andygrove commented on issue #1851: ARROW-2415: [Rust] Fix clippy ref-match-pats warnings.\nURL: https://github.com/apache/arrow/pull/1851#issuecomment-379739505\n \n \n   @pitrou :+1: yes please go ahead and merge\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-09T12:47:20.089+0000",
                    "updated": "2018-04-09T12:47:20.089+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150752/comment/16430482",
                    "id": "16430482",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou closed pull request #1851: ARROW-2415: [Rust] Fix clippy ref-match-pats warnings.\nURL: https://github.com/apache/arrow/pull/1851\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/rust/src/datatypes.rs b/rust/src/datatypes.rs\nindex 85278f7bb..005a13952 100644\n--- a/rust/src/datatypes.rs\n+++ b/rust/src/datatypes.rs\n@@ -41,8 +41,8 @@ pub enum DataType {\n impl DataType {\n     fn from(json: &Value) -> Result<DataType, ArrowError> {\n         //println!(\"DataType::from({:?})\", json);\n-        match json {\n-            &Value::Object(ref map) => match map.get(\"name\") {\n+        match *json {\n+            Value::Object(ref map) => match map.get(\"name\") {\n                 Some(s) if s == \"bool\" => Ok(DataType::Boolean),\n                 Some(s) if s == \"utf8\" => Ok(DataType::Utf8),\n                 Some(s) if s == \"floatingpoint\" => match map.get(\"precision\") {\n@@ -106,21 +106,21 @@ impl DataType {\n     }\n \n     pub fn to_json(&self) -> Value {\n-        match self {\n-            &DataType::Boolean => json!({\"name\": \"bool\"}),\n-            &DataType::Int8 => json!({\"name\": \"int\", \"bitWidth\": 8, \"isSigned\": true}),\n-            &DataType::Int16 => json!({\"name\": \"int\", \"bitWidth\": 16, \"isSigned\": true}),\n-            &DataType::Int32 => json!({\"name\": \"int\", \"bitWidth\": 32, \"isSigned\": true}),\n-            &DataType::Int64 => json!({\"name\": \"int\", \"bitWidth\": 64, \"isSigned\": true}),\n-            &DataType::UInt8 => json!({\"name\": \"int\", \"bitWidth\": 8, \"isSigned\": false}),\n-            &DataType::UInt16 => json!({\"name\": \"int\", \"bitWidth\": 16, \"isSigned\": false}),\n-            &DataType::UInt32 => json!({\"name\": \"int\", \"bitWidth\": 32, \"isSigned\": false}),\n-            &DataType::UInt64 => json!({\"name\": \"int\", \"bitWidth\": 64, \"isSigned\": false}),\n-            &DataType::Float16 => json!({\"name\": \"floatingpoint\", \"precision\": \"HALF\"}),\n-            &DataType::Float32 => json!({\"name\": \"floatingpoint\", \"precision\": \"SINGLE\"}),\n-            &DataType::Float64 => json!({\"name\": \"floatingpoint\", \"precision\": \"DOUBLE\"}),\n-            &DataType::Utf8 => json!({\"name\": \"utf8\"}),\n-            &DataType::Struct(ref fields) => {\n+        match *self {\n+            DataType::Boolean => json!({\"name\": \"bool\"}),\n+            DataType::Int8 => json!({\"name\": \"int\", \"bitWidth\": 8, \"isSigned\": true}),\n+            DataType::Int16 => json!({\"name\": \"int\", \"bitWidth\": 16, \"isSigned\": true}),\n+            DataType::Int32 => json!({\"name\": \"int\", \"bitWidth\": 32, \"isSigned\": true}),\n+            DataType::Int64 => json!({\"name\": \"int\", \"bitWidth\": 64, \"isSigned\": true}),\n+            DataType::UInt8 => json!({\"name\": \"int\", \"bitWidth\": 8, \"isSigned\": false}),\n+            DataType::UInt16 => json!({\"name\": \"int\", \"bitWidth\": 16, \"isSigned\": false}),\n+            DataType::UInt32 => json!({\"name\": \"int\", \"bitWidth\": 32, \"isSigned\": false}),\n+            DataType::UInt64 => json!({\"name\": \"int\", \"bitWidth\": 64, \"isSigned\": false}),\n+            DataType::Float16 => json!({\"name\": \"floatingpoint\", \"precision\": \"HALF\"}),\n+            DataType::Float32 => json!({\"name\": \"floatingpoint\", \"precision\": \"SINGLE\"}),\n+            DataType::Float64 => json!({\"name\": \"floatingpoint\", \"precision\": \"DOUBLE\"}),\n+            DataType::Utf8 => json!({\"name\": \"utf8\"}),\n+            DataType::Struct(ref fields) => {\n                 let field_json_array =\n                     Value::Array(fields.iter().map(|f| f.to_json()).collect::<Vec<Value>>());\n                 json!({ \"fields\": field_json_array })\n@@ -147,8 +147,8 @@ impl Field {\n \n     pub fn from(json: &Value) -> Result<Self, ArrowError> {\n         //println!(\"Field::from({:?}\", json);\n-        match json {\n-            &Value::Object(ref map) => {\n+        match *json {\n+            Value::Object(ref map) => {\n                 let name = match map.get(\"name\") {\n                     Some(&Value::String(ref name)) => name.to_string(),\n                     _ => {\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-09T12:51:42.437+0000",
                    "updated": "2018-04-09T12:51:42.437+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150752/comment/16430484",
                    "id": "16430484",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on issue #1851: ARROW-2415: [Rust] Fix clippy ref-match-pats warnings.\nURL: https://github.com/apache/arrow/pull/1851#issuecomment-379741162\n \n \n   Ok, thanks!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-09T12:53:19.909+0000",
                    "updated": "2018-04-09T12:53:19.909+0000"
                }
            ],
            "maxResults": 12,
            "total": 12,
            "startAt": 0
        },
        "customfield_12311820": "0|i3s9hb:",
        "customfield_12314139": null
    }
}