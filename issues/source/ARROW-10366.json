{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13336633",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336633",
    "key": "ARROW-10366",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
            "name": "alamb",
            "key": "alamb",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
            },
            "displayName": "Andrew Lamb",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12335005",
                "id": "12335005",
                "name": "Rust - DataFusion"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 30000,
            "total": 30000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 30000,
            "total": 30000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10366/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 50,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336633/worklog/503548",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao opened a new pull request #8503:\nURL: https://github.com/apache/arrow/pull/8503\n\n\n   This makes `merge` send batches to a receiver stream as they arrive and, thereby removing the need to wait for each thread to finish collecting all its batches.\r\n   \r\n   on micro-benchmarks, performance on non-grouped data improved by -8%, on other aggregate benches is between +2%-0%.\r\n   \r\n   This is the implementation of an idea fielded by @alamb here: https://github.com/apache/arrow/pull/8473/files#r506304982\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-22T05:15:09.052+0000",
                    "updated": "2020-10-22T05:15:09.052+0000",
                    "started": "2020-10-22T05:15:09.052+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "503548",
                    "issueId": "13336633"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336633/worklog/503554",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8503:\nURL: https://github.com/apache/arrow/pull/8503#issuecomment-714238006\n\n\n   https://issues.apache.org/jira/browse/ARROW-10366\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-22T05:27:32.612+0000",
                    "updated": "2020-10-22T05:27:32.612+0000",
                    "started": "2020-10-22T05:27:32.612+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "503554",
                    "issueId": "13336633"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336633/worklog/503558",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #8503:\nURL: https://github.com/apache/arrow/pull/8503#issuecomment-714243113\n\n\n   This is not working with aggregates and I am trying to understand why, thus moved it to draft.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-22T05:41:44.863+0000",
                    "updated": "2020-10-22T05:41:44.863+0000",
                    "started": "2020-10-22T05:41:44.863+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "503558",
                    "issueId": "13336633"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336633/worklog/503563",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8503:\nURL: https://github.com/apache/arrow/pull/8503#discussion_r509907817\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/merge.rs\n##########\n@@ -103,37 +105,53 @@ impl ExecutionPlan for MergeExec {\n                 self.input.execute(0).await\n             }\n             _ => {\n-                let tasks = (0..input_partitions).map(|part_i| {\n+                // todo: buffer size should be configurable or dependent of metrics\n+                let (sender, receiver) = mpsc::channel::<ArrowResult<RecordBatch>>(1);\n+\n+                // spawn independent tasks whose resulting streams (of batches)\n+                // are sent to the channel for consumption.\n+                (0..input_partitions).for_each(|part_i| {\n                     let input = self.input.clone();\n+                    let mut sender = sender.clone();\n                     tokio::spawn(async move {\n\nReview comment:\n       we need to join the handles of this one or the main thread may finish before the spawn task does.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-22T06:26:08.995+0000",
                    "updated": "2020-10-22T06:26:08.995+0000",
                    "started": "2020-10-22T06:26:08.995+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "503563",
                    "issueId": "13336633"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336633/worklog/503568",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #8503:\nURL: https://github.com/apache/arrow/pull/8503#issuecomment-714272285\n\n\n   I am not sure if this is what we want: we still need to join all the threads on `execute` or we may lose then, which means that the stream will accumulate all the batches instead of streaming them as they arrive by the threads.\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-22T06:50:03.241+0000",
                    "updated": "2020-10-22T06:50:03.241+0000",
                    "started": "2020-10-22T06:50:03.240+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "503568",
                    "issueId": "13336633"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336633/worklog/503665",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #8503:\nURL: https://github.com/apache/arrow/pull/8503#discussion_r510061337\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/merge.rs\n##########\n@@ -103,37 +105,56 @@ impl ExecutionPlan for MergeExec {\n                 self.input.execute(0).await\n             }\n             _ => {\n-                let tasks = (0..input_partitions).map(|part_i| {\n+                let (sender, receiver) = mpsc::unbounded::<ArrowResult<RecordBatch>>();\n\nReview comment:\n       I wonder if picking a fixed channel size might be a good idea. Specifically, given there is s one  That way the producers can't get too far ahead. I think a small fixed number (`number_of_cores`? 10?) might be reasonable to begin with\r\n   \r\n   Given that the actual work of `MergeStream` is pretty light (simply passing the record batches on) this may not be a problem in practice, but it probably depends on what order the tasks are run.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-22T10:44:24.889+0000",
                    "updated": "2020-10-22T10:44:24.889+0000",
                    "started": "2020-10-22T10:44:24.888+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "503665",
                    "issueId": "13336633"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336633/worklog/503709",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8503:\nURL: https://github.com/apache/arrow/pull/8503#discussion_r510134213\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/merge.rs\n##########\n@@ -103,37 +105,56 @@ impl ExecutionPlan for MergeExec {\n                 self.input.execute(0).await\n             }\n             _ => {\n-                let tasks = (0..input_partitions).map(|part_i| {\n+                let (sender, receiver) = mpsc::unbounded::<ArrowResult<RecordBatch>>();\n\nReview comment:\n       Good point.\r\n   \r\n   I actually started with a `bounded(1)`, but this (and others) won't work because we need to `join_all` threads. because there is no consumer to retrieve the items from the `receiver`, we are locked as the threads cannot be joined, and we wait indefinitely for the `join_all`.\r\n   \r\n   An alternative is to not `join_all`, but then we risk losing results if the main thread finishes first.\r\n   \r\n   I.e. if we bound the channel, we cannot `join_all` and thus we may lose threads. If we join all, the channel needs to be unbounded so that we can build the stream.\r\n   \r\n   IMO neither is good, as in both cases we are essentially waiting for all threads to finish before returning the stream, which I understand is not what we want.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-22T12:51:20.266+0000",
                    "updated": "2020-10-22T12:51:20.266+0000",
                    "started": "2020-10-22T12:51:20.265+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "503709",
                    "issueId": "13336633"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336633/worklog/503710",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8503:\nURL: https://github.com/apache/arrow/pull/8503#discussion_r510134213\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/merge.rs\n##########\n@@ -103,37 +105,56 @@ impl ExecutionPlan for MergeExec {\n                 self.input.execute(0).await\n             }\n             _ => {\n-                let tasks = (0..input_partitions).map(|part_i| {\n+                let (sender, receiver) = mpsc::unbounded::<ArrowResult<RecordBatch>>();\n\nReview comment:\n       Good point.\r\n   \r\n   I actually started with a `bounded(1)`, but this (and other values) won't work because we need to `join_all` threads. because there is no consumer to retrieve the items from the `receiver`, we are locked as the threads cannot be joined, and we wait indefinitely for the `join_all`.\r\n   \r\n   An alternative is to not `join_all`, but then we risk losing results if the main thread finishes first.\r\n   \r\n   I.e. if we bound the channel, we cannot `join_all` and thus we may lose threads. If we join all, the channel needs to be unbounded so that we can build the stream.\r\n   \r\n   IMO neither is good, as in both cases we are essentially waiting for all threads to finish before returning the stream, which I understand is not what we want.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-22T12:51:35.159+0000",
                    "updated": "2020-10-22T12:51:35.159+0000",
                    "started": "2020-10-22T12:51:35.159+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "503710",
                    "issueId": "13336633"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336633/worklog/503711",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8503:\nURL: https://github.com/apache/arrow/pull/8503#discussion_r510134213\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/merge.rs\n##########\n@@ -103,37 +105,56 @@ impl ExecutionPlan for MergeExec {\n                 self.input.execute(0).await\n             }\n             _ => {\n-                let tasks = (0..input_partitions).map(|part_i| {\n+                let (sender, receiver) = mpsc::unbounded::<ArrowResult<RecordBatch>>();\n\nReview comment:\n       Good point.\r\n   \r\n   I actually started with a `bounded(1)`, but this (and other values) won't work because we need to `join_all` threads. because there is no consumer to retrieve the items from the `receiver`, we are locked as the threads cannot be joined, and we wait indefinitely for the `join_all`.\r\n   \r\n   An alternative is to not `join_all`, but then we risk losing results if the main thread finishes first.\r\n   \r\n   I.e. if we bound the channel, we cannot `join_all` and thus we may lose threads. If we join all, the channel needs to be unbounded so that we can build the stream.\r\n   \r\n   IMO neither is good, as in both cases we are essentially waiting for all threads to finish before returning the stream, which I understand is not what we want.\r\n   \r\n   <small> I was hoping that some of you would know the solution for this </small>\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-22T12:52:39.351+0000",
                    "updated": "2020-10-22T12:52:39.351+0000",
                    "started": "2020-10-22T12:52:39.351+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "503711",
                    "issueId": "13336633"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336633/worklog/503713",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8503:\nURL: https://github.com/apache/arrow/pull/8503#discussion_r510134213\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/merge.rs\n##########\n@@ -103,37 +105,56 @@ impl ExecutionPlan for MergeExec {\n                 self.input.execute(0).await\n             }\n             _ => {\n-                let tasks = (0..input_partitions).map(|part_i| {\n+                let (sender, receiver) = mpsc::unbounded::<ArrowResult<RecordBatch>>();\n\nReview comment:\n       Good point.\r\n   \r\n   I actually started with a `bounded(1)`, but this (and other values) won't work because we need to `join_all` threads. because there is no consumer to retrieve the items from the `receiver`, we are locked as the threads cannot be joined, and we wait indefinitely for the `join_all`.\r\n   \r\n   An alternative is to not `join_all`, but then we risk losing results if the main thread finishes first.\r\n   \r\n   I.e. if we bound the channel, we cannot `join_all` and thus we may lose threads. If we join all, the channel needs to be unbounded so that we can build the stream.\r\n   \r\n   IMO neither is good, as in both cases we are essentially waiting for all threads to finish before returning the stream, which I understand is not what we want.\r\n   \r\n   (I was hoping that some of you would know the solution for this \ud83d\ude04)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-22T12:53:55.659+0000",
                    "updated": "2020-10-22T12:53:55.659+0000",
                    "started": "2020-10-22T12:53:55.659+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "503713",
                    "issueId": "13336633"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336633/worklog/503746",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #8503:\nURL: https://github.com/apache/arrow/pull/8503#discussion_r510216029\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/merge.rs\n##########\n@@ -103,37 +105,56 @@ impl ExecutionPlan for MergeExec {\n                 self.input.execute(0).await\n             }\n             _ => {\n-                let tasks = (0..input_partitions).map(|part_i| {\n+                let (sender, receiver) = mpsc::unbounded::<ArrowResult<RecordBatch>>();\n\nReview comment:\n       Now that I think about it, I don't think calling `join_all` before returning `MergeStream` is needed here (as that  requires all tasks to complete executing before anything can consume the output of this operator).\r\n   \r\n   If we want to pass errors back up stream (aka call join_all eventually) I wonder if we can put `handles` into `MergeStream` and call `join_all` after `input` is done. \r\n   \r\n   I am thinking all of this theoretically -- not having actually ever expressed such a thing in Rust / futures, BTW. So thanks for bearing with me!\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-22T14:38:17.286+0000",
                    "updated": "2020-10-22T14:38:17.286+0000",
                    "started": "2020-10-22T14:38:17.286+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "503746",
                    "issueId": "13336633"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336633/worklog/503751",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8503:\nURL: https://github.com/apache/arrow/pull/8503#discussion_r510227802\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/merge.rs\n##########\n@@ -103,37 +105,56 @@ impl ExecutionPlan for MergeExec {\n                 self.input.execute(0).await\n             }\n             _ => {\n-                let tasks = (0..input_partitions).map(|part_i| {\n+                let (sender, receiver) = mpsc::unbounded::<ArrowResult<RecordBatch>>();\n\nReview comment:\n       I thought that too!\r\n   \r\n   until this morning, where I opened this PR and many tests failed. :/\r\n   \r\n   The issue is not that we want the errors, is that we want to ensure the the threads finish. If we remove the `join_all`, we end up in the situation described here: https://stackoverflow.com/q/38957741/931303 (I think, thanks for bearing with me also ^_^)\r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-22T14:53:05.348+0000",
                    "updated": "2020-10-22T14:53:05.348+0000",
                    "started": "2020-10-22T14:53:05.348+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "503751",
                    "issueId": "13336633"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336633/worklog/503761",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #8503:\nURL: https://github.com/apache/arrow/pull/8503#discussion_r510252959\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/merge.rs\n##########\n@@ -103,37 +105,56 @@ impl ExecutionPlan for MergeExec {\n                 self.input.execute(0).await\n             }\n             _ => {\n-                let tasks = (0..input_partitions).map(|part_i| {\n+                let (sender, receiver) = mpsc::unbounded::<ArrowResult<RecordBatch>>();\n\nReview comment:\n       What experiment failed? removing the calls to `join_all`?\r\n   \r\n   > is that we want to ensure the the threads finish\r\n   \r\n   I wonder why we care about the thread \"finishing\" on some particular schedule. It seems what matter\r\n   \r\n   The situation described in https://stackoverflow.com/q/38957741/931303 I think is about expecting to see a side-effect of thread execution that happens *after* all the results are retrieved from them. \r\n   \r\n   So in this case, the threads will all hang around, sending results via the channel as long as they have something to send and the channel hasn't been closed.\r\n   \r\n   Once the channel is closed, there is some period of time during which the threads might be running (effectively after completing\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-22T15:25:51.729+0000",
                    "updated": "2020-10-22T15:25:51.729+0000",
                    "started": "2020-10-22T15:25:51.729+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "503761",
                    "issueId": "13336633"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336633/worklog/503762",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #8503:\nURL: https://github.com/apache/arrow/pull/8503#discussion_r510253390\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/merge.rs\n##########\n@@ -103,37 +105,56 @@ impl ExecutionPlan for MergeExec {\n                 self.input.execute(0).await\n             }\n             _ => {\n-                let tasks = (0..input_partitions).map(|part_i| {\n+                let (sender, receiver) = mpsc::unbounded::<ArrowResult<RecordBatch>>();\n\nReview comment:\n       I'll try and give it look locally this afternoon. I am trying to finish up something for work now that I need to focus on first \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-22T15:26:25.044+0000",
                    "updated": "2020-10-22T15:26:25.044+0000",
                    "started": "2020-10-22T15:26:25.044+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "503762",
                    "issueId": "13336633"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336633/worklog/503763",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #8503:\nURL: https://github.com/apache/arrow/pull/8503#discussion_r510252959\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/merge.rs\n##########\n@@ -103,37 +105,56 @@ impl ExecutionPlan for MergeExec {\n                 self.input.execute(0).await\n             }\n             _ => {\n-                let tasks = (0..input_partitions).map(|part_i| {\n+                let (sender, receiver) = mpsc::unbounded::<ArrowResult<RecordBatch>>();\n\nReview comment:\n       What experiment failed? removing the calls to `join_all`?\r\n   \r\n   > is that we want to ensure the the threads finish\r\n   \r\n   I wonder why we care about the thread \"finishing\" on some particular schedule. It seems what matter\r\n   \r\n   The situation described in https://stackoverflow.com/q/38957741/931303 I think is about expecting to see a side-effect of thread execution that happens *after* all the results are retrieved from them. \r\n   \r\n   So in this case, the threads will all hang around, sending results via the channel as long as they have something to send and the channel hasn't been closed.\r\n   \r\n   Once the channel is closed, there is some period of time during which the threads might be running (effectively after completing, but I don't know what adverse effect that might have\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-22T15:26:48.985+0000",
                    "updated": "2020-10-22T15:26:48.985+0000",
                    "started": "2020-10-22T15:26:48.985+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "503763",
                    "issueId": "13336633"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336633/worklog/503979",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8503:\nURL: https://github.com/apache/arrow/pull/8503#discussion_r510567189\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/merge.rs\n##########\n@@ -103,37 +105,56 @@ impl ExecutionPlan for MergeExec {\n                 self.input.execute(0).await\n             }\n             _ => {\n-                let tasks = (0..input_partitions).map(|part_i| {\n+                let (sender, receiver) = mpsc::unbounded::<ArrowResult<RecordBatch>>();\n\nReview comment:\n       Thanks @alamb. So, [this](https://github.com/jorgecarleitao/arrow/pull/18) fails with no partitions collected at the end.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-23T03:00:48.782+0000",
                    "updated": "2020-10-23T03:00:48.782+0000",
                    "started": "2020-10-23T03:00:48.782+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "503979",
                    "issueId": "13336633"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336633/worklog/504208",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #8503:\nURL: https://github.com/apache/arrow/pull/8503#discussion_r510851478\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/merge.rs\n##########\n@@ -103,37 +105,56 @@ impl ExecutionPlan for MergeExec {\n                 self.input.execute(0).await\n             }\n             _ => {\n-                let tasks = (0..input_partitions).map(|part_i| {\n+                let (sender, receiver) = mpsc::unbounded::<ArrowResult<RecordBatch>>();\n\nReview comment:\n       FWIW I am looking at this and it is definitely not doing what I expected.I spent a while adding instrumentation (`println!`) and observing what was happening.\r\n   \r\n   From what I can tell, problem is that nothing ever arranges for poll_next to get invoked again -- so if the data isn't available on the first invocation, then no results are ever produced.\r\n   \r\n   I tried several different things to get this working (most notably invoking `Waker::wake` but I couldn't get the runtime to call `poll_next` again. \r\n   \r\n   My current (un proven theory) is that it has something to do with the interaction of `futures::Stream` and `tokio::stream::Stream` - https://docs.rs/tokio/0.2.22/tokio/stream/trait.Stream.html which i think are similar but not quite the same. \r\n   \r\n   And the mixing of `futures` and `tokio` may be a problem... Maybe\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-23T14:46:14.848+0000",
                    "updated": "2020-10-23T14:46:14.848+0000",
                    "started": "2020-10-23T14:46:14.847+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "504208",
                    "issueId": "13336633"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336633/worklog/504452",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #8503:\nURL: https://github.com/apache/arrow/pull/8503#issuecomment-715899914\n\n\n   I spent some more time looking and thinking about this issue. I have some more thoughts I plan to try out tomorrow. I'll keep you posed @jorgecarleitao \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-24T11:13:49.661+0000",
                    "updated": "2020-10-24T11:13:49.661+0000",
                    "started": "2020-10-24T11:13:49.661+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "504452",
                    "issueId": "13336633"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336633/worklog/504991",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8503:\nURL: https://github.com/apache/arrow/pull/8503#discussion_r512384366\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/merge.rs\n##########\n@@ -103,37 +105,56 @@ impl ExecutionPlan for MergeExec {\n                 self.input.execute(0).await\n             }\n             _ => {\n-                let tasks = (0..input_partitions).map(|part_i| {\n+                let (sender, receiver) = mpsc::unbounded::<ArrowResult<RecordBatch>>();\n\nReview comment:\n       I it that this is by design: there is no guarantee that a task spawn by Tokio finishes unless we `.join()` it. A `tokio::spawn` is a future like any other future: we need to await for it.\r\n   \r\n   At least the problem is well defined: we have a vector (over `parts`) of futures (`spawn`) whose result is a stream (of `record batches`) and we would like to convert this into a stream of record batches. \r\n   \r\n   The solution IMO is to have a new adapter for this:\r\n   \r\n   ```rust\r\n   type Streams = Vec<Item=Future<Stream<Item=Result<RecordBatch>>>>;\r\n   \r\n   struct Adapter {}\r\n   \r\n   impl Adapter {\r\n       pub fn new(it: Streams);\r\n   }\r\n   \r\n   impl Stream for Adapter {\r\n       item = Result<RecordBatch>\r\n       \r\n       fn poll_next(\r\n           mut self: Pin<&mut Self>,\r\n           cx: &mut Context<'_>,\r\n       ) -> Poll<Option<Self::Item>> {\r\n            // poll any of the tasks, if it is done, store the stream in `self` and start pulling \r\n            // from the stream together with the other tasks\r\n       }\r\n   }\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-27T02:56:14.069+0000",
                    "updated": "2020-10-27T02:56:14.069+0000",
                    "started": "2020-10-27T02:56:14.069+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "504991",
                    "issueId": "13336633"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336633/worklog/504992",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8503:\nURL: https://github.com/apache/arrow/pull/8503#discussion_r512384366\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/merge.rs\n##########\n@@ -103,37 +105,56 @@ impl ExecutionPlan for MergeExec {\n                 self.input.execute(0).await\n             }\n             _ => {\n-                let tasks = (0..input_partitions).map(|part_i| {\n+                let (sender, receiver) = mpsc::unbounded::<ArrowResult<RecordBatch>>();\n\nReview comment:\n       I it that this is by design: there is no guarantee that a task spawn by Tokio finishes unless we `.join()` it. A `tokio::spawn` is a future like any other future: we need to await for it.\r\n   \r\n   At least the problem is well defined: we have a vector (over `parts`) of futures (`spawn`) whose result is a stream (of `record batches`) and we would like to convert this into a stream of record batches. \r\n   \r\n   The solution IMO is to have a new adapter for this:\r\n   \r\n   ```rust\r\n   // vec: one entry per part of the partition\r\n   // future: the `tokio::spawn`\r\n   // stream: the stream of records\r\n   type Streams = Vec<Item=Future<Stream<Item=Result<RecordBatch>>>>;\r\n   \r\n   struct Adapter {}\r\n   \r\n   impl Adapter {\r\n       pub fn new(it: Streams);\r\n   }\r\n   \r\n   impl Stream for Adapter {\r\n       item = Result<RecordBatch>\r\n       \r\n       fn poll_next(\r\n           mut self: Pin<&mut Self>,\r\n           cx: &mut Context<'_>,\r\n       ) -> Poll<Option<Self::Item>> {\r\n            // poll any of the tasks, if it is done, store the stream in `self` and start pulling \r\n            // from the stream together with the other tasks\r\n       }\r\n   }\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-27T02:57:02.052+0000",
                    "updated": "2020-10-27T02:57:02.052+0000",
                    "started": "2020-10-27T02:57:02.051+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "504992",
                    "issueId": "13336633"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 30000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@29f78809[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3877dd89[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@c4a8421[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@ad79bb4[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@73af5cd4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2d1f64bc[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@75ac86b2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4390a988[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4ad004d2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1c3ca3b0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@d342f93[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4bae0b54[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 30000,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Nov 14 12:40:27 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-11-14T12:40:27.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10366/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-10-22T05:09:46.000+0000",
        "updated": "2020-11-14T12:41:12.000+0000",
        "timeoriginalestimate": null,
        "description": "The merge currently uses a collect within the thread, which causes the accumulation to happen before merging all batches together, see [https://github.com/apache/arrow/pull/8473/files#r506304982]\r\n\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "8h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 30000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] [DataFusion] Remove collect from merge",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336633/comment/17232009",
                    "id": "17232009",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 8553\n[https://github.com/apache/arrow/pull/8553]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-11-14T12:40:27.138+0000",
                    "updated": "2020-11-14T12:40:27.138+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0jwnk:",
        "customfield_12314139": null
    }
}