{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13377648",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377648",
    "key": "ARROW-12715",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12615320",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12615320",
                "type": {
                    "id": "12310460",
                    "name": "Child-Issue",
                    "inward": "is a child of",
                    "outward": "is a parent of",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310460"
                },
                "inwardIssue": {
                    "id": "13042654",
                    "key": "ARROW-555",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13042654",
                    "fields": {
                        "summary": "[C++] String algorithm library for StringArray/BinaryArray",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            },
            {
                "id": "12616690",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12616690",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13381928",
                    "key": "ARROW-12949",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13381928",
                    "fields": {
                        "summary": "[C++] Add string starts-with/ends-with kernels",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            },
            {
                "id": "12616143",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12616143",
                "type": {
                    "id": "10001",
                    "name": "dependent",
                    "inward": "is depended upon by",
                    "outward": "depends upon",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"
                },
                "inwardIssue": {
                    "id": "13380330",
                    "key": "ARROW-12870",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380330",
                    "fields": {
                        "summary": "[R] Bindings for stringr::str_like",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
            "name": "icook",
            "key": "icook",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
            },
            "displayName": "Ian Cook",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
            "name": "icook",
            "key": "icook",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
            },
            "displayName": "Ian Cook",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 15000,
            "total": 15000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 15000,
            "total": 15000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12715/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 25,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377648/worklog/599230",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm opened a new pull request #10356:\nURL: https://github.com/apache/arrow/pull/10356\n\n\n   Implements a simple SQL LIKE pattern match kernel by translating it to a regex (or substring) match as appropriate.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T13:26:51.127+0000",
                    "updated": "2021-05-19T13:26:51.127+0000",
                    "started": "2021-05-19T13:26:51.127+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599230",
                    "issueId": "13377648"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377648/worklog/599234",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10356:\nURL: https://github.com/apache/arrow/pull/10356#issuecomment-844110771\n\n\n   https://issues.apache.org/jira/browse/ARROW-12715\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T13:33:27.411+0000",
                    "updated": "2021-05-19T13:33:27.411+0000",
                    "started": "2021-05-19T13:33:27.411+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599234",
                    "issueId": "13377648"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377648/worklog/599450",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #10356:\nURL: https://github.com/apache/arrow/pull/10356#discussion_r635579350\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -494,6 +494,93 @@ const FunctionDoc match_substring_regex_doc(\n      \"position.\\n\"\n      \"Null inputs emit null.  The pattern must be given in MatchSubstringOptions.\"),\n     {\"strings\"}, \"MatchSubstringOptions\");\n+\n+// SQL LIKE match\n+\n+/// Convert a SQL-style LIKE pattern (using '%' and '_') into a regex pattern\n+std::string MakeLikeRegex(const MatchSubstringOptions& options) {\n+  // Allow . to match \\n\n+  std::string like_pattern = \"(?s:^\";\n+  like_pattern.reserve(options.pattern.size() + 7);\n+  bool escaped = false;\n+  for (const char c : options.pattern) {\n+    if (!escaped && c == '%') {\n+      like_pattern.append(\".*\");\n+    } else if (!escaped && c == '_') {\n+      like_pattern.append(\".\");\n+    } else if (!escaped && c == '\\\\') {\n+      escaped = true;\n+    } else {\n+      switch (c) {\n+        case '.':\n+        case '?':\n+        case '+':\n+        case '*':\n+        case '^':\n+        case '$':\n+        case '\\\\':\n+        case '[':\n+        case '{':\n+        case '(':\n+        case ')':\n+        case '|': {\n\nReview comment:\n       I'm pretty sure we don't need to escape `]` and `}` but I noticed Impala does:\r\n   https://github.com/apache/impala/blob/9c38568657d62b6f6d7b10aa1c721ba843374dd8/be/src/exprs/like-predicate.cc#L384-L397\r\n   Can you think of any reason we would need to escape those?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T20:56:55.768+0000",
                    "updated": "2021-05-19T20:56:55.768+0000",
                    "started": "2021-05-19T20:56:55.768+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599450",
                    "issueId": "13377648"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377648/worklog/599451",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #10356:\nURL: https://github.com/apache/arrow/pull/10356#discussion_r635580566\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -494,6 +494,93 @@ const FunctionDoc match_substring_regex_doc(\n      \"position.\\n\"\n      \"Null inputs emit null.  The pattern must be given in MatchSubstringOptions.\"),\n     {\"strings\"}, \"MatchSubstringOptions\");\n+\n+// SQL LIKE match\n+\n+/// Convert a SQL-style LIKE pattern (using '%' and '_') into a regex pattern\n+std::string MakeLikeRegex(const MatchSubstringOptions& options) {\n+  // Allow . to match \\n\n+  std::string like_pattern = \"(?s:^\";\n+  like_pattern.reserve(options.pattern.size() + 7);\n+  bool escaped = false;\n+  for (const char c : options.pattern) {\n+    if (!escaped && c == '%') {\n+      like_pattern.append(\".*\");\n+    } else if (!escaped && c == '_') {\n+      like_pattern.append(\".\");\n+    } else if (!escaped && c == '\\\\') {\n\nReview comment:\n       Can you confirm that this won't catch `\\n`, `\\t`, and the like?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T20:58:56.484+0000",
                    "updated": "2021-05-19T20:58:56.484+0000",
                    "started": "2021-05-19T20:58:56.484+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599451",
                    "issueId": "13377648"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377648/worklog/599452",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #10356:\nURL: https://github.com/apache/arrow/pull/10356#discussion_r635580566\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -494,6 +494,93 @@ const FunctionDoc match_substring_regex_doc(\n      \"position.\\n\"\n      \"Null inputs emit null.  The pattern must be given in MatchSubstringOptions.\"),\n     {\"strings\"}, \"MatchSubstringOptions\");\n+\n+// SQL LIKE match\n+\n+/// Convert a SQL-style LIKE pattern (using '%' and '_') into a regex pattern\n+std::string MakeLikeRegex(const MatchSubstringOptions& options) {\n+  // Allow . to match \\n\n+  std::string like_pattern = \"(?s:^\";\n+  like_pattern.reserve(options.pattern.size() + 7);\n+  bool escaped = false;\n+  for (const char c : options.pattern) {\n+    if (!escaped && c == '%') {\n+      like_pattern.append(\".*\");\n+    } else if (!escaped && c == '_') {\n+      like_pattern.append(\".\");\n+    } else if (!escaped && c == '\\\\') {\n\nReview comment:\n       Can you confirm that this will properly handle `\\n`, `\\t`, and the like?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T20:59:29.772+0000",
                    "updated": "2021-05-19T20:59:29.772+0000",
                    "started": "2021-05-19T20:59:29.772+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599452",
                    "issueId": "13377648"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377648/worklog/599455",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10356:\nURL: https://github.com/apache/arrow/pull/10356#discussion_r635582104\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -494,6 +494,93 @@ const FunctionDoc match_substring_regex_doc(\n      \"position.\\n\"\n      \"Null inputs emit null.  The pattern must be given in MatchSubstringOptions.\"),\n     {\"strings\"}, \"MatchSubstringOptions\");\n+\n+// SQL LIKE match\n+\n+/// Convert a SQL-style LIKE pattern (using '%' and '_') into a regex pattern\n+std::string MakeLikeRegex(const MatchSubstringOptions& options) {\n+  // Allow . to match \\n\n+  std::string like_pattern = \"(?s:^\";\n+  like_pattern.reserve(options.pattern.size() + 7);\n+  bool escaped = false;\n+  for (const char c : options.pattern) {\n+    if (!escaped && c == '%') {\n+      like_pattern.append(\".*\");\n+    } else if (!escaped && c == '_') {\n+      like_pattern.append(\".\");\n+    } else if (!escaped && c == '\\\\') {\n\nReview comment:\n       I added a test for it.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T21:01:43.793+0000",
                    "updated": "2021-05-19T21:01:43.793+0000",
                    "started": "2021-05-19T21:01:43.793+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599455",
                    "issueId": "13377648"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377648/worklog/599456",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10356:\nURL: https://github.com/apache/arrow/pull/10356#discussion_r635582443\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -494,6 +494,93 @@ const FunctionDoc match_substring_regex_doc(\n      \"position.\\n\"\n      \"Null inputs emit null.  The pattern must be given in MatchSubstringOptions.\"),\n     {\"strings\"}, \"MatchSubstringOptions\");\n+\n+// SQL LIKE match\n+\n+/// Convert a SQL-style LIKE pattern (using '%' and '_') into a regex pattern\n+std::string MakeLikeRegex(const MatchSubstringOptions& options) {\n+  // Allow . to match \\n\n+  std::string like_pattern = \"(?s:^\";\n+  like_pattern.reserve(options.pattern.size() + 7);\n+  bool escaped = false;\n+  for (const char c : options.pattern) {\n+    if (!escaped && c == '%') {\n+      like_pattern.append(\".*\");\n+    } else if (!escaped && c == '_') {\n+      like_pattern.append(\".\");\n+    } else if (!escaped && c == '\\\\') {\n+      escaped = true;\n+    } else {\n+      switch (c) {\n+        case '.':\n+        case '?':\n+        case '+':\n+        case '*':\n+        case '^':\n+        case '$':\n+        case '\\\\':\n+        case '[':\n+        case '{':\n+        case '(':\n+        case ')':\n+        case '|': {\n\nReview comment:\n       regex101.com lets you play around with RE2 (listed as 'Golang'). It seems escaping isn't necessary but doesn't hurt. Impala's authors may have wanted to be extra-safe.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T21:02:08.232+0000",
                    "updated": "2021-05-19T21:02:08.232+0000",
                    "started": "2021-05-19T21:02:08.232+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599456",
                    "issueId": "13377648"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377648/worklog/599468",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #10356:\nURL: https://github.com/apache/arrow/pull/10356#discussion_r635594889\n\n\n\n##########\nFile path: docs/source/cpp/compute.rst\n##########\n@@ -529,28 +529,36 @@ Containment tests\n +---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n | Function name             | Arity      | Input types                        | Output type   | Options class                          |\n +===========================+============+====================================+===============+========================================+\n-| match_substring           | Unary      | String-like                        | Boolean (1)   | :struct:`MatchSubstringOptions`        |\n+| match_like                | Unary      | String-like                        | Boolean (1)   | :struct:`MatchSubstringOptions`        |\n +---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n-| match_substring_regex     | Unary      | String-like                        | Boolean (2)   | :struct:`MatchSubstringOptions`        |\n+| match_substring           | Unary      | String-like                        | Boolean (2)   | :struct:`MatchSubstringOptions`        |\n +---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n-| index_in                  | Unary      | Boolean, Null, Numeric, Temporal,  | Int32 (3)     | :struct:`SetLookupOptions`             |\n+| match_substring_regex     | Unary      | String-like                        | Boolean (3)   | :struct:`MatchSubstringOptions`        |\n++---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n+| index_in                  | Unary      | Boolean, Null, Numeric, Temporal,  | Int32 (4)     | :struct:`SetLookupOptions`             |\n |                           |            | Binary- and String-like            |               |                                        |\n +---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n-| is_in                     | Unary      | Boolean, Null, Numeric, Temporal,  | Boolean (4)   | :struct:`SetLookupOptions`             |\n+| is_in                     | Unary      | Boolean, Null, Numeric, Temporal,  | Boolean (5)   | :struct:`SetLookupOptions`             |\n |                           |            | Binary- and String-like            |               |                                        |\n +---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n \n-* \\(1) Output is true iff :member:`MatchSubstringOptions::pattern`\n-  is a substring of the corresponding input element.\n+* \\(1) Output is true iff the SQL-style LIKE pattern\n+  :member:`MatchSubstringOptions::pattern` fully matches the\n+  corresponding input element. That is, ``%`` will match any number of\n+  characters, ``_`` will match exactly one character, and any other\n+  character matches itself.\n\nReview comment:\n       Could you document here and in the PyArrow docs that a backslash can be used to escape a `%` or `_`? Maybe something like this:\r\n   >To match a literal percent sign or underscore, precede the character with a backslash.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T21:25:09.080+0000",
                    "updated": "2021-05-19T21:25:09.080+0000",
                    "started": "2021-05-19T21:25:09.080+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599468",
                    "issueId": "13377648"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377648/worklog/599471",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #10356:\nURL: https://github.com/apache/arrow/pull/10356#discussion_r635595821\n\n\n\n##########\nFile path: docs/source/cpp/compute.rst\n##########\n@@ -529,28 +529,36 @@ Containment tests\n +---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n | Function name             | Arity      | Input types                        | Output type   | Options class                          |\n +===========================+============+====================================+===============+========================================+\n-| match_substring           | Unary      | String-like                        | Boolean (1)   | :struct:`MatchSubstringOptions`        |\n+| match_like                | Unary      | String-like                        | Boolean (1)   | :struct:`MatchSubstringOptions`        |\n +---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n-| match_substring_regex     | Unary      | String-like                        | Boolean (2)   | :struct:`MatchSubstringOptions`        |\n+| match_substring           | Unary      | String-like                        | Boolean (2)   | :struct:`MatchSubstringOptions`        |\n +---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n-| index_in                  | Unary      | Boolean, Null, Numeric, Temporal,  | Int32 (3)     | :struct:`SetLookupOptions`             |\n+| match_substring_regex     | Unary      | String-like                        | Boolean (3)   | :struct:`MatchSubstringOptions`        |\n++---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n+| index_in                  | Unary      | Boolean, Null, Numeric, Temporal,  | Int32 (4)     | :struct:`SetLookupOptions`             |\n |                           |            | Binary- and String-like            |               |                                        |\n +---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n-| is_in                     | Unary      | Boolean, Null, Numeric, Temporal,  | Boolean (4)   | :struct:`SetLookupOptions`             |\n+| is_in                     | Unary      | Boolean, Null, Numeric, Temporal,  | Boolean (5)   | :struct:`SetLookupOptions`             |\n |                           |            | Binary- and String-like            |               |                                        |\n +---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n \n-* \\(1) Output is true iff :member:`MatchSubstringOptions::pattern`\n-  is a substring of the corresponding input element.\n+* \\(1) Output is true iff the SQL-style LIKE pattern\n+  :member:`MatchSubstringOptions::pattern` fully matches the\n+  corresponding input element. That is, ``%`` will match any number of\n+  characters, ``_`` will match exactly one character, and any other\n+  character matches itself.\n\nReview comment:\n       IMO this is worth mentioning because some SQL engines (e.g. PostgreSQL) use backslashes to escape `%` or `_` whereas others (e.g. Oracle) don't by default.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T21:27:00.028+0000",
                    "updated": "2021-05-19T21:27:00.028+0000",
                    "started": "2021-05-19T21:27:00.028+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599471",
                    "issueId": "13377648"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377648/worklog/599474",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10356:\nURL: https://github.com/apache/arrow/pull/10356#discussion_r635598720\n\n\n\n##########\nFile path: docs/source/cpp/compute.rst\n##########\n@@ -529,28 +529,36 @@ Containment tests\n +---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n | Function name             | Arity      | Input types                        | Output type   | Options class                          |\n +===========================+============+====================================+===============+========================================+\n-| match_substring           | Unary      | String-like                        | Boolean (1)   | :struct:`MatchSubstringOptions`        |\n+| match_like                | Unary      | String-like                        | Boolean (1)   | :struct:`MatchSubstringOptions`        |\n +---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n-| match_substring_regex     | Unary      | String-like                        | Boolean (2)   | :struct:`MatchSubstringOptions`        |\n+| match_substring           | Unary      | String-like                        | Boolean (2)   | :struct:`MatchSubstringOptions`        |\n +---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n-| index_in                  | Unary      | Boolean, Null, Numeric, Temporal,  | Int32 (3)     | :struct:`SetLookupOptions`             |\n+| match_substring_regex     | Unary      | String-like                        | Boolean (3)   | :struct:`MatchSubstringOptions`        |\n++---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n+| index_in                  | Unary      | Boolean, Null, Numeric, Temporal,  | Int32 (4)     | :struct:`SetLookupOptions`             |\n |                           |            | Binary- and String-like            |               |                                        |\n +---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n-| is_in                     | Unary      | Boolean, Null, Numeric, Temporal,  | Boolean (4)   | :struct:`SetLookupOptions`             |\n+| is_in                     | Unary      | Boolean, Null, Numeric, Temporal,  | Boolean (5)   | :struct:`SetLookupOptions`             |\n |                           |            | Binary- and String-like            |               |                                        |\n +---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n \n-* \\(1) Output is true iff :member:`MatchSubstringOptions::pattern`\n-  is a substring of the corresponding input element.\n+* \\(1) Output is true iff the SQL-style LIKE pattern\n+  :member:`MatchSubstringOptions::pattern` fully matches the\n+  corresponding input element. That is, ``%`` will match any number of\n+  characters, ``_`` will match exactly one character, and any other\n+  character matches itself.\n\nReview comment:\n       Done (I also updated the docstrings in C++/Python). I noticed Impala has a configurable escape character but opted not to implement that (that said it should be reasonably simple if we want to support that).\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T21:32:45.403+0000",
                    "updated": "2021-05-19T21:32:45.403+0000",
                    "started": "2021-05-19T21:32:45.403+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599474",
                    "issueId": "13377648"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377648/worklog/599476",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #10356:\nURL: https://github.com/apache/arrow/pull/10356#discussion_r635601185\n\n\n\n##########\nFile path: docs/source/cpp/compute.rst\n##########\n@@ -529,28 +529,36 @@ Containment tests\n +---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n | Function name             | Arity      | Input types                        | Output type   | Options class                          |\n +===========================+============+====================================+===============+========================================+\n-| match_substring           | Unary      | String-like                        | Boolean (1)   | :struct:`MatchSubstringOptions`        |\n+| match_like                | Unary      | String-like                        | Boolean (1)   | :struct:`MatchSubstringOptions`        |\n +---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n-| match_substring_regex     | Unary      | String-like                        | Boolean (2)   | :struct:`MatchSubstringOptions`        |\n+| match_substring           | Unary      | String-like                        | Boolean (2)   | :struct:`MatchSubstringOptions`        |\n +---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n-| index_in                  | Unary      | Boolean, Null, Numeric, Temporal,  | Int32 (3)     | :struct:`SetLookupOptions`             |\n+| match_substring_regex     | Unary      | String-like                        | Boolean (3)   | :struct:`MatchSubstringOptions`        |\n++---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n+| index_in                  | Unary      | Boolean, Null, Numeric, Temporal,  | Int32 (4)     | :struct:`SetLookupOptions`             |\n |                           |            | Binary- and String-like            |               |                                        |\n +---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n-| is_in                     | Unary      | Boolean, Null, Numeric, Temporal,  | Boolean (4)   | :struct:`SetLookupOptions`             |\n+| is_in                     | Unary      | Boolean, Null, Numeric, Temporal,  | Boolean (5)   | :struct:`SetLookupOptions`             |\n |                           |            | Binary- and String-like            |               |                                        |\n +---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n \n-* \\(1) Output is true iff :member:`MatchSubstringOptions::pattern`\n-  is a substring of the corresponding input element.\n+* \\(1) Output is true iff the SQL-style LIKE pattern\n+  :member:`MatchSubstringOptions::pattern` fully matches the\n+  corresponding input element. That is, ``%`` will match any number of\n+  characters, ``_`` will match exactly one character, and any other\n+  character matches itself.\n\nReview comment:\n       Thanks. I agree it seems unimportant to implement a configurable escape character.\r\n   \r\n   Looks like there's an errant `\"To match a literal\"` at the end of `FunctionDoc`\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T21:37:23.418+0000",
                    "updated": "2021-05-19T21:37:23.418+0000",
                    "started": "2021-05-19T21:37:23.418+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599476",
                    "issueId": "13377648"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377648/worklog/599478",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10356:\nURL: https://github.com/apache/arrow/pull/10356#discussion_r635602560\n\n\n\n##########\nFile path: docs/source/cpp/compute.rst\n##########\n@@ -529,28 +529,36 @@ Containment tests\n +---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n | Function name             | Arity      | Input types                        | Output type   | Options class                          |\n +===========================+============+====================================+===============+========================================+\n-| match_substring           | Unary      | String-like                        | Boolean (1)   | :struct:`MatchSubstringOptions`        |\n+| match_like                | Unary      | String-like                        | Boolean (1)   | :struct:`MatchSubstringOptions`        |\n +---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n-| match_substring_regex     | Unary      | String-like                        | Boolean (2)   | :struct:`MatchSubstringOptions`        |\n+| match_substring           | Unary      | String-like                        | Boolean (2)   | :struct:`MatchSubstringOptions`        |\n +---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n-| index_in                  | Unary      | Boolean, Null, Numeric, Temporal,  | Int32 (3)     | :struct:`SetLookupOptions`             |\n+| match_substring_regex     | Unary      | String-like                        | Boolean (3)   | :struct:`MatchSubstringOptions`        |\n++---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n+| index_in                  | Unary      | Boolean, Null, Numeric, Temporal,  | Int32 (4)     | :struct:`SetLookupOptions`             |\n |                           |            | Binary- and String-like            |               |                                        |\n +---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n-| is_in                     | Unary      | Boolean, Null, Numeric, Temporal,  | Boolean (4)   | :struct:`SetLookupOptions`             |\n+| is_in                     | Unary      | Boolean, Null, Numeric, Temporal,  | Boolean (5)   | :struct:`SetLookupOptions`             |\n |                           |            | Binary- and String-like            |               |                                        |\n +---------------------------+------------+------------------------------------+---------------+----------------------------------------+\n \n-* \\(1) Output is true iff :member:`MatchSubstringOptions::pattern`\n-  is a substring of the corresponding input element.\n+* \\(1) Output is true iff the SQL-style LIKE pattern\n+  :member:`MatchSubstringOptions::pattern` fully matches the\n+  corresponding input element. That is, ``%`` will match any number of\n+  characters, ``_`` will match exactly one character, and any other\n+  character matches itself.\n\nReview comment:\n       Whoops, thanks. Now fixed.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T21:40:02.205+0000",
                    "updated": "2021-05-19T21:40:02.205+0000",
                    "started": "2021-05-19T21:40:02.205+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599478",
                    "issueId": "13377648"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377648/worklog/599484",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #10356:\nURL: https://github.com/apache/arrow/pull/10356#discussion_r635609498\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -494,6 +494,95 @@ const FunctionDoc match_substring_regex_doc(\n      \"position.\\n\"\n      \"Null inputs emit null.  The pattern must be given in MatchSubstringOptions.\"),\n     {\"strings\"}, \"MatchSubstringOptions\");\n+\n+// SQL LIKE match\n+\n+/// Convert a SQL-style LIKE pattern (using '%' and '_') into a regex pattern\n+std::string MakeLikeRegex(const MatchSubstringOptions& options) {\n+  // Allow . to match \\n\n+  std::string like_pattern = \"(?s:^\";\n+  like_pattern.reserve(options.pattern.size() + 7);\n+  bool escaped = false;\n+  for (const char c : options.pattern) {\n+    if (!escaped && c == '%') {\n+      like_pattern.append(\".*\");\n+    } else if (!escaped && c == '_') {\n+      like_pattern.append(\".\");\n+    } else if (!escaped && c == '\\\\') {\n+      escaped = true;\n+    } else {\n+      switch (c) {\n+        case '.':\n+        case '?':\n+        case '+':\n+        case '*':\n+        case '^':\n+        case '$':\n+        case '\\\\':\n+        case '[':\n+        case '{':\n+        case '(':\n+        case ')':\n+        case '|': {\n+          like_pattern.push_back('\\\\');\n+          like_pattern.push_back(c);\n+          escaped = false;\n+          break;\n+        }\n+        default: {\n+          like_pattern.push_back(c);\n+          escaped = false;\n+          break;\n+        }\n+      }\n+    }\n+  }\n+  like_pattern.append(\"$)\");\n+  return like_pattern;\n+}\n+\n+// A LIKE pattern matching this regex can be translated into a substring search.\n+static RE2 kLikePatternIsSubstringMatch(\"%+([^%_])*%+\");\n\nReview comment:\n       Shouldn't `*` be inside the parens here so `re2::RE2::FullMatch` will extract everything in between the `%` and `%`?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T21:53:34.473+0000",
                    "updated": "2021-05-19T21:53:34.473+0000",
                    "started": "2021-05-19T21:53:34.472+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599484",
                    "issueId": "13377648"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377648/worklog/599488",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10356:\nURL: https://github.com/apache/arrow/pull/10356#discussion_r635613255\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -494,6 +494,95 @@ const FunctionDoc match_substring_regex_doc(\n      \"position.\\n\"\n      \"Null inputs emit null.  The pattern must be given in MatchSubstringOptions.\"),\n     {\"strings\"}, \"MatchSubstringOptions\");\n+\n+// SQL LIKE match\n+\n+/// Convert a SQL-style LIKE pattern (using '%' and '_') into a regex pattern\n+std::string MakeLikeRegex(const MatchSubstringOptions& options) {\n+  // Allow . to match \\n\n+  std::string like_pattern = \"(?s:^\";\n+  like_pattern.reserve(options.pattern.size() + 7);\n+  bool escaped = false;\n+  for (const char c : options.pattern) {\n+    if (!escaped && c == '%') {\n+      like_pattern.append(\".*\");\n+    } else if (!escaped && c == '_') {\n+      like_pattern.append(\".\");\n+    } else if (!escaped && c == '\\\\') {\n+      escaped = true;\n+    } else {\n+      switch (c) {\n+        case '.':\n+        case '?':\n+        case '+':\n+        case '*':\n+        case '^':\n+        case '$':\n+        case '\\\\':\n+        case '[':\n+        case '{':\n+        case '(':\n+        case ')':\n+        case '|': {\n+          like_pattern.push_back('\\\\');\n+          like_pattern.push_back(c);\n+          escaped = false;\n+          break;\n+        }\n+        default: {\n+          like_pattern.push_back(c);\n+          escaped = false;\n+          break;\n+        }\n+      }\n+    }\n+  }\n+  like_pattern.append(\"$)\");\n+  return like_pattern;\n+}\n+\n+// A LIKE pattern matching this regex can be translated into a substring search.\n+static RE2 kLikePatternIsSubstringMatch(\"%+([^%_])*%+\");\n\nReview comment:\n       D'oh, good catch. I've fixed this and adjusted the tests to catch this.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T22:01:20.674+0000",
                    "updated": "2021-05-19T22:01:20.674+0000",
                    "started": "2021-05-19T22:01:20.673+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599488",
                    "issueId": "13377648"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377648/worklog/599502",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on pull request #10356:\nURL: https://github.com/apache/arrow/pull/10356#issuecomment-844539780\n\n\n   P.S. case insensitivity can be achieved by using one of the `_upper` or `_lower` kernels, which I think is good enough\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T22:28:54.246+0000",
                    "updated": "2021-05-19T22:28:54.246+0000",
                    "started": "2021-05-19T22:28:54.245+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599502",
                    "issueId": "13377648"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377648/worklog/599503",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #10356:\nURL: https://github.com/apache/arrow/pull/10356#issuecomment-844540228\n\n\n   We could easily add a flag to toggle insensitivity in RE2 as well. (Would be better than allocating a new string and potentially dealing with Unicode.)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T22:30:07.664+0000",
                    "updated": "2021-05-19T22:30:07.664+0000",
                    "started": "2021-05-19T22:30:07.664+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599503",
                    "issueId": "13377648"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377648/worklog/599504",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on pull request #10356:\nURL: https://github.com/apache/arrow/pull/10356#issuecomment-844542150\n\n\n   But can `PlainSubstringMatcher` do case-insensitive matching?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T22:34:32.446+0000",
                    "updated": "2021-05-19T22:34:32.446+0000",
                    "started": "2021-05-19T22:34:32.446+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599504",
                    "issueId": "13377648"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377648/worklog/599505",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #10356:\nURL: https://github.com/apache/arrow/pull/10356#issuecomment-844542476\n\n\n   No, but in that case we'd just not dispatch to that path.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T22:35:18.091+0000",
                    "updated": "2021-05-19T22:35:18.091+0000",
                    "started": "2021-05-19T22:35:18.090+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599505",
                    "issueId": "13377648"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377648/worklog/599512",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on pull request #10356:\nURL: https://github.com/apache/arrow/pull/10356#issuecomment-844548176\n\n\n   What to do about the options class might be awkward. You could subclass `MatchSubstringOptions`, but I think ultimately we might incorporate an option for case insensitivity into `MatchSubstringOptions`.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-19T22:48:27.709+0000",
                    "updated": "2021-05-19T22:48:27.709+0000",
                    "started": "2021-05-19T22:48:27.709+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599512",
                    "issueId": "13377648"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377648/worklog/599792",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #10356:\nURL: https://github.com/apache/arrow/pull/10356#issuecomment-845101882\n\n\n   We could add it to `MatchSubstringOptions`, if we plan to support for all kernels, and leave it unimplemented for now in the non-regex case (it's pretty easy to support in any regex case). \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-20T13:05:57.601+0000",
                    "updated": "2021-05-20T13:05:57.601+0000",
                    "started": "2021-05-20T13:05:57.601+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "599792",
                    "issueId": "13377648"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 15000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2777f11c[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@44ca3f3a[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4a946f30[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5fb2bab7[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@375e8f1a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@79b8a291[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@10bcaf79[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5a11d8db[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1974aadc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@25642f49[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@50d69bfb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4d5563a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 15000,
        "customfield_12312520": null,
        "customfield_12312521": "Thu May 20 14:44:25 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-05-20T14:44:25.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12715/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2021-05-10T15:08:52.000+0000",
        "updated": "2021-06-03T15:06:57.000+0000",
        "timeoriginalestimate": null,
        "description": "Similar to the SQL {{LIKE}} and {{ILIKE}}\u00a0operators, with wildcard\u00a0{{_}} matching a single character and wildcard {{%}} matching multiple characters,\u00a0and an option controlling case sensitivity",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 15000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] SQL-style glob string match kernel",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377648/comment/17342422",
                    "id": "17342422",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "This is kind of a \"simpler\" version compared to using an actual regex expression? \r\n\r\nI am wondering if we need to exactly implement this as a separate kernel with those specific features, or if this could be written in terms of the {{match_substring_regex}}. In principle an input string to match could be transformed into the equivalent regex pattern? And then we don't need to implement a light form of pattern matching ourselves. \r\n\r\n(of course, that would then require arrow to be compiled with a regex library for this function, and a specialized version might be faster?)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-05-11T08:52:46.078+0000",
                    "updated": "2021-05-11T08:52:46.078+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377648/comment/17342789",
                    "id": "17342789",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
                        "name": "icook",
                        "key": "icook",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
                        },
                        "displayName": "Ian Cook",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "[~jorisvandenbossche]\u00a0yes; I would suggest looking at the implementation of {{LIKE}} in Impala to see what they did there. Like Arrow, Impala is implemented in C++ and uses RE2, and it also has regex match functions and operators.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
                        "name": "icook",
                        "key": "icook",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
                        },
                        "displayName": "Ian Cook",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-05-11T18:21:56.849+0000",
                    "updated": "2021-05-11T18:21:56.849+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377648/comment/17347180",
                    "id": "17347180",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Impala checks if the pattern can be converted into a prefix/suffix/substring/exact match search, or else converts the pattern into a regex: [https://github.com/apache/impala/blob/9c38568657d62b6f6d7b10aa1c721ba843374dd8/be/src/exprs/like-predicate.cc#L63-L108]\r\n\r\nWe could do something similar.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-05-18T21:48:26.231+0000",
                    "updated": "2021-05-18T21:48:26.231+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377648/comment/17348548",
                    "id": "17348548",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
                        "name": "icook",
                        "key": "icook",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
                        },
                        "displayName": "Ian Cook",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Options for case insensitivity will be a follow-up (ARROW-12835)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
                        "name": "icook",
                        "key": "icook",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
                        },
                        "displayName": "Ian Cook",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-05-20T14:19:42.341+0000",
                    "updated": "2021-05-20T14:19:42.341+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377648/comment/17348572",
                    "id": "17348572",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 10356\n[https://github.com/apache/arrow/pull/10356]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-05-20T14:44:25.062+0000",
                    "updated": "2021-05-20T14:44:25.062+0000"
                }
            ],
            "maxResults": 5,
            "total": 5,
            "startAt": 0
        },
        "customfield_12311820": "0|z0qw94:",
        "customfield_12314139": null
    }
}