{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13208505",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208505",
    "key": "ARROW-4207",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
            "name": "shiro615",
            "key": "shiro615",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Yosuke Shiro",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334626",
                "id": "12334626",
                "name": "C++ - Gandiva"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332430",
                "id": "12332430",
                "name": "GLib"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
            "name": "shiro615",
            "key": "shiro615",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Yosuke Shiro",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
            "name": "shiro615",
            "key": "shiro615",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
            },
            "displayName": "Yosuke Shiro",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 4200,
            "total": 4200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 4200,
            "total": 4200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4207/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 7,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208505/worklog/182972",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shiro615 commented on pull request #3354: ARROW-4207: [GLib] Add support for IfNode\nURL: https://github.com/apache/arrow/pull/3354\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-09T10:00:42.590+0000",
                    "updated": "2019-01-09T10:00:42.590+0000",
                    "started": "2019-01-09T10:00:42.589+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "182972",
                    "issueId": "13208505"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208505/worklog/182996",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #3354: ARROW-4207: [Gandiva] [GLib] Add support for IfNode\nURL: https://github.com/apache/arrow/pull/3354#issuecomment-452650132\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3354?src=pr&el=h1) Report\n   > Merging [#3354](https://codecov.io/gh/apache/arrow/pull/3354?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/090a8c020611b2f75ec0e36d765cc6d48adbe9a7?src=pr&el=desc) will **increase** coverage by `<.01%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3354/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3354?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #3354      +/-   ##\n   ==========================================\n   + Coverage   88.36%   88.37%   +<.01%     \n   ==========================================\n     Files         557      557              \n     Lines       73560    73562       +2     \n   ==========================================\n   + Hits        65001    65008       +7     \n   + Misses       8450     8449       -1     \n   + Partials      109      105       -4\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3354?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [go/arrow/math/uint64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3354/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfc3NlNF9hbWQ2NC5nbw==) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/float64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3354/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9mbG9hdDY0X3NzZTRfYW1kNjQuZ28=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/memory/memory\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3354/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9zc2U0X2FtZDY0Lmdv) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/int64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3354/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9zc2U0X2FtZDY0Lmdv) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/plasma/store.cc](https://codecov.io/gh/apache/arrow/pull/3354/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvc3RvcmUuY2M=) | `91.32% <0%> (-0.78%)` | :arrow_down: |\n   | [cpp/src/arrow/vendored/xxhash/xxhash.c](https://codecov.io/gh/apache/arrow/pull/3354/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy92ZW5kb3JlZC94eGhhc2gveHhoYXNoLmM=) | `73.6% <0%> (-0.51%)` | :arrow_down: |\n   | [go/arrow/math/float64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3354/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9mbG9hdDY0X2FtZDY0Lmdv) | `33.33% <0%> (\u00f8)` | :arrow_up: |\n   | [go/arrow/math/int64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3354/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9hbWQ2NC5nbw==) | `33.33% <0%> (\u00f8)` | :arrow_up: |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3354/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | `33.33% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/util/bpacking.h](https://codecov.io/gh/apache/arrow/pull/3354/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2JwYWNraW5nLmg=) | `99.84% <0%> (\u00f8)` | :arrow_up: |\n   | ... and [6 more](https://codecov.io/gh/apache/arrow/pull/3354/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3354?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3354?src=pr&el=footer). Last update [090a8c0...8058b2c](https://codecov.io/gh/apache/arrow/pull/3354?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-09T10:36:08.584+0000",
                    "updated": "2019-01-09T10:36:08.584+0000",
                    "started": "2019-01-09T10:36:08.583+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "182996",
                    "issueId": "13208505"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208505/worklog/183275",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #3354: ARROW-4207: [Gandiva] [GLib] Add support for IfNode\nURL: https://github.com/apache/arrow/pull/3354#discussion_r246511496\n \n \n\n ##########\n File path: c_glib/gandiva-glib/node.cpp\n ##########\n @@ -1180,6 +1182,171 @@ ggandiva_string_literal_node_get_value(GGandivaStringLiteralNode *node)\n   return value.c_str();\n }\n \n+\n+typedef struct GGandivaIfNodePrivate_ {\n+  GGandivaNode *condition_node;\n+  GGandivaNode *then_node;\n+  GGandivaNode *else_node;\n+} GGandivaIfNodePrivate;\n+\n+enum {\n+  PROP_CONDITION_NODE = 1,\n+  PROP_THEN_NODE,\n+  PROP_ELSE_NODE,\n+};\n+\n+G_DEFINE_TYPE_WITH_PRIVATE(GGandivaIfNode,\n+                           ggandiva_if_node,\n+                           GGANDIVA_TYPE_NODE)\n+\n+#define GGANDIVA_IF_NODE_GET_PRIVATE(object)                 \\\n+  static_cast<GGandivaIfNodePrivate *>(                      \\\n+    ggandiva_if_node_get_instance_private(                   \\\n+      GGANDIVA_IF_NODE(object)))\n+\n+static void\n+ggandiva_if_node_dispose(GObject *object)\n+{\n+  auto priv = GGANDIVA_IF_NODE_GET_PRIVATE(object);\n+\n+  if (priv->condition_node) {\n+    g_object_unref(priv->condition_node);\n+    priv->condition_node = nullptr;\n+  }\n+\n+  if (priv->then_node) {\n+    g_object_unref(priv->then_node);\n+    priv->then_node = nullptr;\n+  }\n+\n+  if (priv->else_node) {\n+    g_object_unref(priv->else_node);\n+    priv->else_node = nullptr;\n+  }\n+\n+  G_OBJECT_CLASS(ggandiva_if_node_parent_class)->dispose(object);\n+}\n+\n+static void\n+ggandiva_if_node_set_property(GObject *object,\n+                              guint prop_id,\n+                              const GValue *value,\n+                              GParamSpec *pspec)\n+{\n+  auto priv = GGANDIVA_IF_NODE_GET_PRIVATE(object);\n+\n+  switch (prop_id) {\n+  case PROP_CONDITION_NODE:\n+    priv->condition_node = GGANDIVA_NODE(g_value_dup_object(value));\n+    break;\n+  case PROP_THEN_NODE:\n+    priv->then_node = GGANDIVA_NODE(g_value_dup_object(value));\n+    break;\n+  case PROP_ELSE_NODE:\n+    priv->else_node = GGANDIVA_NODE(g_value_dup_object(value));\n+    break;\n+  default:\n+    G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);\n+    break;\n+  }\n+}\n+\n+static void\n+ggandiva_if_node_get_property(GObject *object,\n+                              guint prop_id,\n+                              GValue *value,\n+                              GParamSpec *pspec)\n+{\n+  auto priv = GGANDIVA_IF_NODE_GET_PRIVATE(object);\n+\n+  switch (prop_id) {\n+  case PROP_CONDITION_NODE:\n+    g_value_set_object(value, priv->condition_node);\n+    break;\n+  case PROP_THEN_NODE:\n+    g_value_set_object(value, priv->then_node);\n+    break;\n+  case PROP_ELSE_NODE:\n+    g_value_set_object(value, priv->else_node);\n+    break;\n+  default:\n+    G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);\n+    break;\n+  }\n+}\n+\n+static void\n+ggandiva_if_node_init(GGandivaIfNode *if_node)\n+{\n+}\n+\n+static void\n+ggandiva_if_node_class_init(GGandivaIfNodeClass *klass)\n+{\n+  auto gobject_class = G_OBJECT_CLASS(klass);\n+\n+  gobject_class->dispose      = ggandiva_if_node_dispose;\n+  gobject_class->set_property = ggandiva_if_node_set_property;\n+  gobject_class->get_property = ggandiva_if_node_get_property;\n+\n+  GParamSpec *spec;\n+  spec = g_param_spec_object(\"condition-node\",\n+                             \"Condition node\",\n+                             \"The condition node\",\n+                             GGANDIVA_TYPE_NODE,\n+                             static_cast<GParamFlags>(G_PARAM_READWRITE |\n+                                                      G_PARAM_CONSTRUCT_ONLY));\n+  g_object_class_install_property(gobject_class, PROP_CONDITION_NODE, spec);\n+\n+  spec = g_param_spec_object(\"then-node\",\n+                             \"Then node\",\n+                             \"The then node\",\n+                             GGANDIVA_TYPE_NODE,\n+                             static_cast<GParamFlags>(G_PARAM_READWRITE |\n+                                                      G_PARAM_CONSTRUCT_ONLY));\n+  g_object_class_install_property(gobject_class, PROP_THEN_NODE, spec);\n+\n+  spec = g_param_spec_object(\"else-node\",\n+                             \"Else node\",\n+                             \"The else node\",\n+                             GGANDIVA_TYPE_NODE,\n+                             static_cast<GParamFlags>(G_PARAM_READWRITE |\n+                                                      G_PARAM_CONSTRUCT_ONLY));\n+  g_object_class_install_property(gobject_class, PROP_ELSE_NODE, spec);\n+}\n+\n+/**\n+ * ggandiva_if_node_new:\n+ * @condition_node: the node with the condition for if-else expression.\n+ * @then_node: the node in case the condition node is true.\n+ * @else_node: the node in case the condition node is false.\n+ * @return_type: A #GArrowDataType.\n+ *\n+ * Returns: A newly created #GGandivaIfNode.\n+ *\n+ * Since: 0.12.0\n+ */\n+GGandivaIfNode *\n+ggandiva_if_node_new(GGandivaNode *condition_node,\n+                     GGandivaNode *then_node,\n+                     GGandivaNode *else_node,\n+                     GArrowDataType *return_type)\n \n Review comment:\n   Could you add `GError **error` and set an error when `MakeIf` returns `nullptr`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-09T19:35:30.553+0000",
                    "updated": "2019-01-09T19:35:30.553+0000",
                    "started": "2019-01-09T19:35:30.553+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "183275",
                    "issueId": "13208505"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208505/worklog/183497",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shiro615 commented on pull request #3354: ARROW-4207: [Gandiva] [GLib] Add support for IfNode\nURL: https://github.com/apache/arrow/pull/3354#discussion_r246615748\n \n \n\n ##########\n File path: c_glib/gandiva-glib/node.cpp\n ##########\n @@ -1180,6 +1182,171 @@ ggandiva_string_literal_node_get_value(GGandivaStringLiteralNode *node)\n   return value.c_str();\n }\n \n+\n+typedef struct GGandivaIfNodePrivate_ {\n+  GGandivaNode *condition_node;\n+  GGandivaNode *then_node;\n+  GGandivaNode *else_node;\n+} GGandivaIfNodePrivate;\n+\n+enum {\n+  PROP_CONDITION_NODE = 1,\n+  PROP_THEN_NODE,\n+  PROP_ELSE_NODE,\n+};\n+\n+G_DEFINE_TYPE_WITH_PRIVATE(GGandivaIfNode,\n+                           ggandiva_if_node,\n+                           GGANDIVA_TYPE_NODE)\n+\n+#define GGANDIVA_IF_NODE_GET_PRIVATE(object)                 \\\n+  static_cast<GGandivaIfNodePrivate *>(                      \\\n+    ggandiva_if_node_get_instance_private(                   \\\n+      GGANDIVA_IF_NODE(object)))\n+\n+static void\n+ggandiva_if_node_dispose(GObject *object)\n+{\n+  auto priv = GGANDIVA_IF_NODE_GET_PRIVATE(object);\n+\n+  if (priv->condition_node) {\n+    g_object_unref(priv->condition_node);\n+    priv->condition_node = nullptr;\n+  }\n+\n+  if (priv->then_node) {\n+    g_object_unref(priv->then_node);\n+    priv->then_node = nullptr;\n+  }\n+\n+  if (priv->else_node) {\n+    g_object_unref(priv->else_node);\n+    priv->else_node = nullptr;\n+  }\n+\n+  G_OBJECT_CLASS(ggandiva_if_node_parent_class)->dispose(object);\n+}\n+\n+static void\n+ggandiva_if_node_set_property(GObject *object,\n+                              guint prop_id,\n+                              const GValue *value,\n+                              GParamSpec *pspec)\n+{\n+  auto priv = GGANDIVA_IF_NODE_GET_PRIVATE(object);\n+\n+  switch (prop_id) {\n+  case PROP_CONDITION_NODE:\n+    priv->condition_node = GGANDIVA_NODE(g_value_dup_object(value));\n+    break;\n+  case PROP_THEN_NODE:\n+    priv->then_node = GGANDIVA_NODE(g_value_dup_object(value));\n+    break;\n+  case PROP_ELSE_NODE:\n+    priv->else_node = GGANDIVA_NODE(g_value_dup_object(value));\n+    break;\n+  default:\n+    G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);\n+    break;\n+  }\n+}\n+\n+static void\n+ggandiva_if_node_get_property(GObject *object,\n+                              guint prop_id,\n+                              GValue *value,\n+                              GParamSpec *pspec)\n+{\n+  auto priv = GGANDIVA_IF_NODE_GET_PRIVATE(object);\n+\n+  switch (prop_id) {\n+  case PROP_CONDITION_NODE:\n+    g_value_set_object(value, priv->condition_node);\n+    break;\n+  case PROP_THEN_NODE:\n+    g_value_set_object(value, priv->then_node);\n+    break;\n+  case PROP_ELSE_NODE:\n+    g_value_set_object(value, priv->else_node);\n+    break;\n+  default:\n+    G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);\n+    break;\n+  }\n+}\n+\n+static void\n+ggandiva_if_node_init(GGandivaIfNode *if_node)\n+{\n+}\n+\n+static void\n+ggandiva_if_node_class_init(GGandivaIfNodeClass *klass)\n+{\n+  auto gobject_class = G_OBJECT_CLASS(klass);\n+\n+  gobject_class->dispose      = ggandiva_if_node_dispose;\n+  gobject_class->set_property = ggandiva_if_node_set_property;\n+  gobject_class->get_property = ggandiva_if_node_get_property;\n+\n+  GParamSpec *spec;\n+  spec = g_param_spec_object(\"condition-node\",\n+                             \"Condition node\",\n+                             \"The condition node\",\n+                             GGANDIVA_TYPE_NODE,\n+                             static_cast<GParamFlags>(G_PARAM_READWRITE |\n+                                                      G_PARAM_CONSTRUCT_ONLY));\n+  g_object_class_install_property(gobject_class, PROP_CONDITION_NODE, spec);\n+\n+  spec = g_param_spec_object(\"then-node\",\n+                             \"Then node\",\n+                             \"The then node\",\n+                             GGANDIVA_TYPE_NODE,\n+                             static_cast<GParamFlags>(G_PARAM_READWRITE |\n+                                                      G_PARAM_CONSTRUCT_ONLY));\n+  g_object_class_install_property(gobject_class, PROP_THEN_NODE, spec);\n+\n+  spec = g_param_spec_object(\"else-node\",\n+                             \"Else node\",\n+                             \"The else node\",\n+                             GGANDIVA_TYPE_NODE,\n+                             static_cast<GParamFlags>(G_PARAM_READWRITE |\n+                                                      G_PARAM_CONSTRUCT_ONLY));\n+  g_object_class_install_property(gobject_class, PROP_ELSE_NODE, spec);\n+}\n+\n+/**\n+ * ggandiva_if_node_new:\n+ * @condition_node: the node with the condition for if-else expression.\n+ * @then_node: the node in case the condition node is true.\n+ * @else_node: the node in case the condition node is false.\n+ * @return_type: A #GArrowDataType.\n+ *\n+ * Returns: A newly created #GGandivaIfNode.\n+ *\n+ * Since: 0.12.0\n+ */\n+GGandivaIfNode *\n+ggandiva_if_node_new(GGandivaNode *condition_node,\n+                     GGandivaNode *then_node,\n+                     GGandivaNode *else_node,\n+                     GArrowDataType *return_type)\n \n Review comment:\n   Yes. I'll add it.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-10T02:06:18.980+0000",
                    "updated": "2019-01-10T02:06:18.980+0000",
                    "started": "2019-01-10T02:06:18.979+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "183497",
                    "issueId": "13208505"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208505/worklog/183545",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #3354: ARROW-4207: [Gandiva] [GLib] Add support for IfNode\nURL: https://github.com/apache/arrow/pull/3354#discussion_r246655743\n \n \n\n ##########\n File path: c_glib/gandiva-glib/node.cpp\n ##########\n @@ -1180,6 +1182,171 @@ ggandiva_string_literal_node_get_value(GGandivaStringLiteralNode *node)\n   return value.c_str();\n }\n \n+\n+typedef struct GGandivaIfNodePrivate_ {\n+  GGandivaNode *condition_node;\n+  GGandivaNode *then_node;\n+  GGandivaNode *else_node;\n+} GGandivaIfNodePrivate;\n+\n+enum {\n+  PROP_CONDITION_NODE = 1,\n+  PROP_THEN_NODE,\n+  PROP_ELSE_NODE,\n+};\n+\n+G_DEFINE_TYPE_WITH_PRIVATE(GGandivaIfNode,\n+                           ggandiva_if_node,\n+                           GGANDIVA_TYPE_NODE)\n+\n+#define GGANDIVA_IF_NODE_GET_PRIVATE(object)                 \\\n+  static_cast<GGandivaIfNodePrivate *>(                      \\\n+    ggandiva_if_node_get_instance_private(                   \\\n+      GGANDIVA_IF_NODE(object)))\n+\n+static void\n+ggandiva_if_node_dispose(GObject *object)\n+{\n+  auto priv = GGANDIVA_IF_NODE_GET_PRIVATE(object);\n+\n+  if (priv->condition_node) {\n+    g_object_unref(priv->condition_node);\n+    priv->condition_node = nullptr;\n+  }\n+\n+  if (priv->then_node) {\n+    g_object_unref(priv->then_node);\n+    priv->then_node = nullptr;\n+  }\n+\n+  if (priv->else_node) {\n+    g_object_unref(priv->else_node);\n+    priv->else_node = nullptr;\n+  }\n+\n+  G_OBJECT_CLASS(ggandiva_if_node_parent_class)->dispose(object);\n+}\n+\n+static void\n+ggandiva_if_node_set_property(GObject *object,\n+                              guint prop_id,\n+                              const GValue *value,\n+                              GParamSpec *pspec)\n+{\n+  auto priv = GGANDIVA_IF_NODE_GET_PRIVATE(object);\n+\n+  switch (prop_id) {\n+  case PROP_CONDITION_NODE:\n+    priv->condition_node = GGANDIVA_NODE(g_value_dup_object(value));\n+    break;\n+  case PROP_THEN_NODE:\n+    priv->then_node = GGANDIVA_NODE(g_value_dup_object(value));\n+    break;\n+  case PROP_ELSE_NODE:\n+    priv->else_node = GGANDIVA_NODE(g_value_dup_object(value));\n+    break;\n+  default:\n+    G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);\n+    break;\n+  }\n+}\n+\n+static void\n+ggandiva_if_node_get_property(GObject *object,\n+                              guint prop_id,\n+                              GValue *value,\n+                              GParamSpec *pspec)\n+{\n+  auto priv = GGANDIVA_IF_NODE_GET_PRIVATE(object);\n+\n+  switch (prop_id) {\n+  case PROP_CONDITION_NODE:\n+    g_value_set_object(value, priv->condition_node);\n+    break;\n+  case PROP_THEN_NODE:\n+    g_value_set_object(value, priv->then_node);\n+    break;\n+  case PROP_ELSE_NODE:\n+    g_value_set_object(value, priv->else_node);\n+    break;\n+  default:\n+    G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);\n+    break;\n+  }\n+}\n+\n+static void\n+ggandiva_if_node_init(GGandivaIfNode *if_node)\n+{\n+}\n+\n+static void\n+ggandiva_if_node_class_init(GGandivaIfNodeClass *klass)\n+{\n+  auto gobject_class = G_OBJECT_CLASS(klass);\n+\n+  gobject_class->dispose      = ggandiva_if_node_dispose;\n+  gobject_class->set_property = ggandiva_if_node_set_property;\n+  gobject_class->get_property = ggandiva_if_node_get_property;\n+\n+  GParamSpec *spec;\n+  spec = g_param_spec_object(\"condition-node\",\n+                             \"Condition node\",\n+                             \"The condition node\",\n+                             GGANDIVA_TYPE_NODE,\n+                             static_cast<GParamFlags>(G_PARAM_READWRITE |\n+                                                      G_PARAM_CONSTRUCT_ONLY));\n+  g_object_class_install_property(gobject_class, PROP_CONDITION_NODE, spec);\n+\n+  spec = g_param_spec_object(\"then-node\",\n+                             \"Then node\",\n+                             \"The then node\",\n+                             GGANDIVA_TYPE_NODE,\n+                             static_cast<GParamFlags>(G_PARAM_READWRITE |\n+                                                      G_PARAM_CONSTRUCT_ONLY));\n+  g_object_class_install_property(gobject_class, PROP_THEN_NODE, spec);\n+\n+  spec = g_param_spec_object(\"else-node\",\n+                             \"Else node\",\n+                             \"The else node\",\n+                             GGANDIVA_TYPE_NODE,\n+                             static_cast<GParamFlags>(G_PARAM_READWRITE |\n+                                                      G_PARAM_CONSTRUCT_ONLY));\n+  g_object_class_install_property(gobject_class, PROP_ELSE_NODE, spec);\n+}\n+\n+/**\n+ * ggandiva_if_node_new:\n+ * @condition_node: the node with the condition for if-else expression.\n+ * @then_node: the node in case the condition node is true.\n+ * @else_node: the node in case the condition node is false.\n+ * @return_type: A #GArrowDataType.\n+ *\n+ * Returns: A newly created #GGandivaIfNode.\n+ *\n+ * Since: 0.12.0\n+ */\n+GGandivaIfNode *\n+ggandiva_if_node_new(GGandivaNode *condition_node,\n+                     GGandivaNode *then_node,\n+                     GGandivaNode *else_node,\n+                     GArrowDataType *return_type)\n \n Review comment:\n   I've implemented.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-10T07:23:19.976+0000",
                    "updated": "2019-01-10T07:23:19.976+0000",
                    "started": "2019-01-10T07:23:19.975+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "183545",
                    "issueId": "13208505"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208505/worklog/183554",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on issue #3354: ARROW-4207: [Gandiva] [GLib] Add support for IfNode\nURL: https://github.com/apache/arrow/pull/3354#issuecomment-453005356\n \n \n   Rust build failure is unrelated. I'll merge this.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-10T08:07:10.453+0000",
                    "updated": "2019-01-10T08:07:10.453+0000",
                    "started": "2019-01-10T08:07:10.453+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "183554",
                    "issueId": "13208505"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208505/worklog/183555",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #3354: ARROW-4207: [Gandiva] [GLib] Add support for IfNode\nURL: https://github.com/apache/arrow/pull/3354\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-10T08:07:58.985+0000",
                    "updated": "2019-01-10T08:07:58.985+0000",
                    "started": "2019-01-10T08:07:58.983+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "183555",
                    "issueId": "13208505"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 4200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@74f1ecf[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@66c0e602[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@16685703[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7779433a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@443f3855[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5920dfa0[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@d245bc8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@30f9a9c5[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@d39d21f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@523bc1c7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7dee2a53[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2413aa[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 4200,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Jan 10 08:07:53 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-01-10T08:07:53.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4207/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-01-09T09:43:33.000+0000",
        "updated": "2019-01-10T08:07:58.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 4200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Gandiva] [GLib] Add support for IfNode",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13208505/comment/16739191",
                    "id": "16739191",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Issue resolved by pull request 3354\n[https://github.com/apache/arrow/pull/3354]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2019-01-10T08:07:53.509+0000",
                    "updated": "2019-01-10T08:07:53.509+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|u00nso:",
        "customfield_12314139": null
    }
}