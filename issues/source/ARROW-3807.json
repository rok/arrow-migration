{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13198862",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198862",
    "key": "ARROW-3807",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
            "name": "romainfrancois",
            "key": "romainfrancois",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
            },
            "displayName": "Romain Francois",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
            "name": "romainfrancois",
            "key": "romainfrancois",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
            },
            "displayName": "Romain Francois",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
            "name": "romainfrancois",
            "key": "romainfrancois",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
            },
            "displayName": "Romain Francois",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 3600,
            "total": 3600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 3600,
            "total": 3600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3807/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 6,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198862/worklog/166834",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois opened a new pull request #2981: ARROW-3807: [R] Missing Field API\nURL: https://github.com/apache/arrow/pull/2981\n \n \n   Exposed the `field()` function, +Field$type(), +Field$Equals()\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-16T10:30:08.758+0000",
                    "updated": "2018-11-16T10:30:08.758+0000",
                    "started": "2018-11-16T10:30:08.758+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166834",
                    "issueId": "13198862"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198862/worklog/166842",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2981: ARROW-3807: [R] Missing Field API\nURL: https://github.com/apache/arrow/pull/2981#issuecomment-439364871\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2981?src=pr&el=h1) Report\n   > Merging [#2981](https://codecov.io/gh/apache/arrow/pull/2981?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/f83454ca64c5b90598ccd88e004275bcbae39e75?src=pr&el=desc) will **increase** coverage by `1.02%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2981/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2981?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2981      +/-   ##\n   ==========================================\n   + Coverage   86.64%   87.67%   +1.02%     \n   ==========================================\n     Files         491      423      -68     \n     Lines       69393    63970    -5423     \n   ==========================================\n   - Hits        60124    56083    -4041     \n   + Misses       9177     7887    -1290     \n   + Partials       92        0      -92\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2981?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/thirdparty/ae/ae.c](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9hZS9hZS5j) | `72.03% <0%> (-0.95%)` | :arrow_down: |\n   | [rust/src/record\\_batch.rs](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-cnVzdC9zcmMvcmVjb3JkX2JhdGNoLnJz) | | |\n   | [go/arrow/array/table.go](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvdGFibGUuZ28=) | | |\n   | [rust/src/array.rs](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-cnVzdC9zcmMvYXJyYXkucnM=) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [go/arrow/internal/testing/tools/bool.go](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvdGVzdGluZy90b29scy9ib29sLmdv) | | |\n   | [go/arrow/array/bufferbuilder.go](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlci5nbw==) | | |\n   | [go/arrow/internal/bitutil/bitutil.go](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvYml0dXRpbC9iaXR1dGlsLmdv) | | |\n   | [go/arrow/memory/memory\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hdngyX2FtZDY0Lmdv) | | |\n   | [go/arrow/array/null.go](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvbnVsbC5nbw==) | | |\n   | ... and [59 more](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2981?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2981?src=pr&el=footer). Last update [f83454c...82f963b](https://codecov.io/gh/apache/arrow/pull/2981?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-16T11:24:42.872+0000",
                    "updated": "2018-11-16T11:24:42.872+0000",
                    "started": "2018-11-16T11:24:42.871+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166842",
                    "issueId": "13198862"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198862/worklog/167178",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on issue #2981: ARROW-3807: [R] Missing Field API\nURL: https://github.com/apache/arrow/pull/2981#issuecomment-439364871\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2981?src=pr&el=h1) Report\n   > Merging [#2981](https://codecov.io/gh/apache/arrow/pull/2981?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/60305d5a75e319e2cfec94be8bacf97abde77d90?src=pr&el=desc) will **increase** coverage by `15.14%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2981/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2981?src=pr&el=tree)\n   \n   ```diff\n   @@             Coverage Diff             @@\n   ##           master    #2981       +/-   ##\n   ===========================================\n   + Coverage   74.31%   89.45%   +15.14%     \n   ===========================================\n     Files          68       12       -56     \n     Lines        5423     1811     -3612     \n   ===========================================\n   - Hits         4030     1620     -2410     \n   + Misses       1297      191     -1106     \n   + Partials       96        0       -96\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2981?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [go/arrow/array/table.go](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvdGFibGUuZ28=) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [go/arrow/internal/testing/tools/bool.go](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvdGVzdGluZy90b29scy9ib29sLmdv) | | |\n   | [go/arrow/internal/bitutil/bitutil.go](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvYml0dXRpbC9iaXR1dGlsLmdv) | | |\n   | [go/arrow/memory/memory\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hdngyX2FtZDY0Lmdv) | | |\n   | [go/arrow/array/null.go](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvbnVsbC5nbw==) | | |\n   | [go/arrow/datatype\\_nested.go](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-Z28vYXJyb3cvZGF0YXR5cGVfbmVzdGVkLmdv) | | |\n   | [go/arrow/array/string.go](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvc3RyaW5nLmdv) | | |\n   | [go/arrow/math/uint64\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYXZ4Ml9hbWQ2NC5nbw==) | | |\n   | [go/arrow/array/builder.go](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVpbGRlci5nbw==) | | |\n   | ... and [46 more](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2981?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2981?src=pr&el=footer). Last update [60305d5...9e5ebfc](https://codecov.io/gh/apache/arrow/pull/2981?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-17T08:22:20.109+0000",
                    "updated": "2018-11-17T08:22:20.109+0000",
                    "started": "2018-11-17T08:22:20.108+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "167178",
                    "issueId": "13198862"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198862/worklog/169323",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on issue #2981: ARROW-3807: [R] Missing Field API\nURL: https://github.com/apache/arrow/pull/2981#issuecomment-439364871\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2981?src=pr&el=h1) Report\n   > Merging [#2981](https://codecov.io/gh/apache/arrow/pull/2981?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/427a219937954bda554b44b1655c86fd24bfcba8?src=pr&el=desc) will **increase** coverage by `1.03%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2981/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2981?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2981      +/-   ##\n   ==========================================\n   + Coverage      87%   88.03%   +1.03%     \n   ==========================================\n     Files         496      425      -71     \n     Lines       70563    64856    -5707     \n   ==========================================\n   - Hits        61393    57099    -4294     \n   + Misses       9069     7757    -1312     \n   + Partials      101        0     -101\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2981?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/thirdparty/ae/ae.c](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9hZS9hZS5j) | `72.03% <0%> (-0.95%)` | :arrow_down: |\n   | [rust/src/record\\_batch.rs](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-cnVzdC9zcmMvcmVjb3JkX2JhdGNoLnJz) | | |\n   | [go/arrow/array/table.go](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvdGFibGUuZ28=) | | |\n   | [rust/src/array.rs](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-cnVzdC9zcmMvYXJyYXkucnM=) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [go/arrow/internal/testing/tools/bool.go](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvdGVzdGluZy90b29scy9ib29sLmdv) | | |\n   | [go/arrow/array/bufferbuilder.go](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlci5nbw==) | | |\n   | [go/arrow/internal/bitutil/bitutil.go](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvYml0dXRpbC9iaXR1dGlsLmdv) | | |\n   | [go/arrow/memory/memory\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hdngyX2FtZDY0Lmdv) | | |\n   | [go/arrow/array/null.go](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvbnVsbC5nbw==) | | |\n   | ... and [62 more](https://codecov.io/gh/apache/arrow/pull/2981/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2981?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2981?src=pr&el=footer). Last update [427a219...f6908a0](https://codecov.io/gh/apache/arrow/pull/2981?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-26T11:55:13.543+0000",
                    "updated": "2018-11-26T11:55:13.543+0000",
                    "started": "2018-11-26T11:55:13.542+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "169323",
                    "issueId": "13198862"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198862/worklog/170521",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2981: ARROW-3807: [R] Missing Field API\nURL: https://github.com/apache/arrow/pull/2981#discussion_r237333676\n \n \n\n ##########\n File path: r/R/Field.R\n ##########\n @@ -40,7 +42,20 @@\n   lhs$Equals(rhs)\n }\n \n-field <- function(name, type) {\n+#' Factor for a `arrow::Field`\n \n Review comment:\n   Factory\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-29T02:22:37.146+0000",
                    "updated": "2018-11-29T02:22:37.146+0000",
                    "started": "2018-11-29T02:22:37.145+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "170521",
                    "issueId": "13198862"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198862/worklog/170523",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #2981: ARROW-3807: [R] Missing Field API\nURL: https://github.com/apache/arrow/pull/2981\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/r/NAMESPACE b/r/NAMESPACE\nindex e538878251..490d2118c5 100644\n--- a/r/NAMESPACE\n+++ b/r/NAMESPACE\n@@ -94,6 +94,7 @@ export(decimal)\n export(dictionary)\n export(feather_table_reader)\n export(feather_table_writer)\n+export(field)\n export(file_open)\n export(file_output_stream)\n export(fixed_size_buffer_writer)\ndiff --git a/r/R/Field.R b/r/R/Field.R\nindex e999b975c6..79c0f33be6 100644\n--- a/r/R/Field.R\n+++ b/r/R/Field.R\n@@ -17,8 +17,7 @@\n \n #' @include R6.R\n \n-`arrow::Field` <- R6Class(\"arrow::Field\",\n-  inherit = `arrow::Object`,\n+`arrow::Field` <- R6Class(\"arrow::Field\", inherit = `arrow::Object`,\n   public = list(\n     ToString = function() {\n       Field__ToString(self)\n@@ -31,6 +30,9 @@\n     },\n     Equals = function(other) {\n       inherits(other, \"arrow::Field\") && Field__Equals(self, other)\n+    },\n+    type = function() {\n+      `arrow::DataType`$dispatch(Field__type(self))\n     }\n   )\n )\n@@ -40,7 +42,20 @@\n   lhs$Equals(rhs)\n }\n \n-field <- function(name, type) {\n+#' Factory for a `arrow::Field`\n+#'\n+#' @param name field name\n+#' @param type logical type, instance of `arrow::DataType`\n+#' @param metadata currently ignored\n+#'\n+#' @examples\n+#' field(\"x\", int32())\n+#'\n+#' @export\n+field <- function(name, type, metadata) {\n+  assert_that(inherits(name, \"character\"), length(name) == 1L)\n+  assert_that(inherits(type, \"arrow::DataType\"))\n+  assert_that(missing(metadata), msg = \"metadata= is currently ignored\")\n   shared_ptr(`arrow::Field`, Field__initialize(name, type))\n }\n \ndiff --git a/r/R/RcppExports.R b/r/R/RcppExports.R\nindex c8df2fa742..324510cf1b 100644\n--- a/r/R/RcppExports.R\n+++ b/r/R/RcppExports.R\n@@ -453,20 +453,28 @@ ipc___feather___TableReader__Open <- function(stream) {\n     .Call(`_arrow_ipc___feather___TableReader__Open`, stream)\n }\n \n-Field__initialize <- function(name, type, nullable = TRUE) {\n-    .Call(`_arrow_Field__initialize`, name, type, nullable)\n+Field__initialize <- function(name, field, nullable = TRUE) {\n+    .Call(`_arrow_Field__initialize`, name, field, nullable)\n }\n \n-Field__ToString <- function(type) {\n-    .Call(`_arrow_Field__ToString`, type)\n+Field__ToString <- function(field) {\n+    .Call(`_arrow_Field__ToString`, field)\n }\n \n-Field__name <- function(type) {\n-    .Call(`_arrow_Field__name`, type)\n+Field__name <- function(field) {\n+    .Call(`_arrow_Field__name`, field)\n }\n \n-Field__nullable <- function(type) {\n-    .Call(`_arrow_Field__nullable`, type)\n+Field__Equals <- function(field, other) {\n+    .Call(`_arrow_Field__Equals`, field, other)\n+}\n+\n+Field__nullable <- function(field) {\n+    .Call(`_arrow_Field__nullable`, field)\n+}\n+\n+Field__type <- function(field) {\n+    .Call(`_arrow_Field__type`, field)\n }\n \n io___Readable__Read <- function(x, nbytes) {\ndiff --git a/r/man/field.Rd b/r/man/field.Rd\nnew file mode 100644\nindex 0000000000..e7af66db29\n--- /dev/null\n+++ b/r/man/field.Rd\n@@ -0,0 +1,22 @@\n+% Generated by roxygen2: do not edit by hand\n+% Please edit documentation in R/Field.R\n+\\name{field}\n+\\alias{field}\n+\\title{Factor for a \\code{arrow::Field}}\n+\\usage{\n+field(name, type, metadata)\n+}\n+\\arguments{\n+\\item{name}{field name}\n+\n+\\item{type}{logical type, instance of \\code{arrow::DataType}}\n+\n+\\item{metadata}{currently ignored}\n+}\n+\\description{\n+Factor for a \\code{arrow::Field}\n+}\n+\\examples{\n+field(\"x\", int32())\n+\n+}\ndiff --git a/r/src/RcppExports.cpp b/r/src/RcppExports.cpp\nindex f1573a6df6..2c549ad1b9 100644\n--- a/r/src/RcppExports.cpp\n+++ b/r/src/RcppExports.cpp\n@@ -1266,48 +1266,71 @@ BEGIN_RCPP\n END_RCPP\n }\n // Field__initialize\n-std::shared_ptr<arrow::Field> Field__initialize(const std::string& name, const std::shared_ptr<arrow::DataType>& type, bool nullable);\n-RcppExport SEXP _arrow_Field__initialize(SEXP nameSEXP, SEXP typeSEXP, SEXP nullableSEXP) {\n+std::shared_ptr<arrow::Field> Field__initialize(const std::string& name, const std::shared_ptr<arrow::DataType>& field, bool nullable);\n+RcppExport SEXP _arrow_Field__initialize(SEXP nameSEXP, SEXP fieldSEXP, SEXP nullableSEXP) {\n BEGIN_RCPP\n     Rcpp::RObject rcpp_result_gen;\n     Rcpp::RNGScope rcpp_rngScope_gen;\n     Rcpp::traits::input_parameter< const std::string& >::type name(nameSEXP);\n-    Rcpp::traits::input_parameter< const std::shared_ptr<arrow::DataType>& >::type type(typeSEXP);\n+    Rcpp::traits::input_parameter< const std::shared_ptr<arrow::DataType>& >::type field(fieldSEXP);\n     Rcpp::traits::input_parameter< bool >::type nullable(nullableSEXP);\n-    rcpp_result_gen = Rcpp::wrap(Field__initialize(name, type, nullable));\n+    rcpp_result_gen = Rcpp::wrap(Field__initialize(name, field, nullable));\n     return rcpp_result_gen;\n END_RCPP\n }\n // Field__ToString\n-std::string Field__ToString(const std::shared_ptr<arrow::Field>& type);\n-RcppExport SEXP _arrow_Field__ToString(SEXP typeSEXP) {\n+std::string Field__ToString(const std::shared_ptr<arrow::Field>& field);\n+RcppExport SEXP _arrow_Field__ToString(SEXP fieldSEXP) {\n BEGIN_RCPP\n     Rcpp::RObject rcpp_result_gen;\n     Rcpp::RNGScope rcpp_rngScope_gen;\n-    Rcpp::traits::input_parameter< const std::shared_ptr<arrow::Field>& >::type type(typeSEXP);\n-    rcpp_result_gen = Rcpp::wrap(Field__ToString(type));\n+    Rcpp::traits::input_parameter< const std::shared_ptr<arrow::Field>& >::type field(fieldSEXP);\n+    rcpp_result_gen = Rcpp::wrap(Field__ToString(field));\n     return rcpp_result_gen;\n END_RCPP\n }\n // Field__name\n-std::string Field__name(const std::shared_ptr<arrow::Field>& type);\n-RcppExport SEXP _arrow_Field__name(SEXP typeSEXP) {\n+std::string Field__name(const std::shared_ptr<arrow::Field>& field);\n+RcppExport SEXP _arrow_Field__name(SEXP fieldSEXP) {\n+BEGIN_RCPP\n+    Rcpp::RObject rcpp_result_gen;\n+    Rcpp::RNGScope rcpp_rngScope_gen;\n+    Rcpp::traits::input_parameter< const std::shared_ptr<arrow::Field>& >::type field(fieldSEXP);\n+    rcpp_result_gen = Rcpp::wrap(Field__name(field));\n+    return rcpp_result_gen;\n+END_RCPP\n+}\n+// Field__Equals\n+bool Field__Equals(const std::shared_ptr<arrow::Field>& field, const std::shared_ptr<arrow::Field>& other);\n+RcppExport SEXP _arrow_Field__Equals(SEXP fieldSEXP, SEXP otherSEXP) {\n BEGIN_RCPP\n     Rcpp::RObject rcpp_result_gen;\n     Rcpp::RNGScope rcpp_rngScope_gen;\n-    Rcpp::traits::input_parameter< const std::shared_ptr<arrow::Field>& >::type type(typeSEXP);\n-    rcpp_result_gen = Rcpp::wrap(Field__name(type));\n+    Rcpp::traits::input_parameter< const std::shared_ptr<arrow::Field>& >::type field(fieldSEXP);\n+    Rcpp::traits::input_parameter< const std::shared_ptr<arrow::Field>& >::type other(otherSEXP);\n+    rcpp_result_gen = Rcpp::wrap(Field__Equals(field, other));\n     return rcpp_result_gen;\n END_RCPP\n }\n // Field__nullable\n-bool Field__nullable(const std::shared_ptr<arrow::Field>& type);\n-RcppExport SEXP _arrow_Field__nullable(SEXP typeSEXP) {\n+bool Field__nullable(const std::shared_ptr<arrow::Field>& field);\n+RcppExport SEXP _arrow_Field__nullable(SEXP fieldSEXP) {\n+BEGIN_RCPP\n+    Rcpp::RObject rcpp_result_gen;\n+    Rcpp::RNGScope rcpp_rngScope_gen;\n+    Rcpp::traits::input_parameter< const std::shared_ptr<arrow::Field>& >::type field(fieldSEXP);\n+    rcpp_result_gen = Rcpp::wrap(Field__nullable(field));\n+    return rcpp_result_gen;\n+END_RCPP\n+}\n+// Field__type\n+std::shared_ptr<arrow::DataType> Field__type(const std::shared_ptr<arrow::Field>& field);\n+RcppExport SEXP _arrow_Field__type(SEXP fieldSEXP) {\n BEGIN_RCPP\n     Rcpp::RObject rcpp_result_gen;\n     Rcpp::RNGScope rcpp_rngScope_gen;\n-    Rcpp::traits::input_parameter< const std::shared_ptr<arrow::Field>& >::type type(typeSEXP);\n-    rcpp_result_gen = Rcpp::wrap(Field__nullable(type));\n+    Rcpp::traits::input_parameter< const std::shared_ptr<arrow::Field>& >::type field(fieldSEXP);\n+    rcpp_result_gen = Rcpp::wrap(Field__type(field));\n     return rcpp_result_gen;\n END_RCPP\n }\n@@ -2178,7 +2201,9 @@ static const R_CallMethodDef CallEntries[] = {\n     {\"_arrow_Field__initialize\", (DL_FUNC) &_arrow_Field__initialize, 3},\n     {\"_arrow_Field__ToString\", (DL_FUNC) &_arrow_Field__ToString, 1},\n     {\"_arrow_Field__name\", (DL_FUNC) &_arrow_Field__name, 1},\n+    {\"_arrow_Field__Equals\", (DL_FUNC) &_arrow_Field__Equals, 2},\n     {\"_arrow_Field__nullable\", (DL_FUNC) &_arrow_Field__nullable, 1},\n+    {\"_arrow_Field__type\", (DL_FUNC) &_arrow_Field__type, 1},\n     {\"_arrow_io___Readable__Read\", (DL_FUNC) &_arrow_io___Readable__Read, 2},\n     {\"_arrow_io___InputStream__Close\", (DL_FUNC) &_arrow_io___InputStream__Close, 1},\n     {\"_arrow_io___OutputStream__Close\", (DL_FUNC) &_arrow_io___OutputStream__Close, 1},\ndiff --git a/r/src/field.cpp b/r/src/field.cpp\nindex 146525b431..1c44e8bd5d 100644\n--- a/r/src/field.cpp\n+++ b/r/src/field.cpp\n@@ -21,22 +21,33 @@ using namespace Rcpp;\n \n // [[Rcpp::export]]\n std::shared_ptr<arrow::Field> Field__initialize(\n-    const std::string& name, const std::shared_ptr<arrow::DataType>& type,\n+    const std::string& name, const std::shared_ptr<arrow::DataType>& field,\n     bool nullable = true) {\n-  return arrow::field(name, type, nullable);\n+  return arrow::field(name, field, nullable);\n }\n \n // [[Rcpp::export]]\n-std::string Field__ToString(const std::shared_ptr<arrow::Field>& type) {\n-  return type->ToString();\n+std::string Field__ToString(const std::shared_ptr<arrow::Field>& field) {\n+  return field->ToString();\n }\n \n // [[Rcpp::export]]\n-std::string Field__name(const std::shared_ptr<arrow::Field>& type) {\n-  return type->name();\n+std::string Field__name(const std::shared_ptr<arrow::Field>& field) {\n+  return field->name();\n }\n \n // [[Rcpp::export]]\n-bool Field__nullable(const std::shared_ptr<arrow::Field>& type) {\n-  return type->nullable();\n+bool Field__Equals(const std::shared_ptr<arrow::Field>& field,\n+                   const std::shared_ptr<arrow::Field>& other) {\n+  return field->Equals(other);\n+}\n+\n+// [[Rcpp::export]]\n+bool Field__nullable(const std::shared_ptr<arrow::Field>& field) {\n+  return field->nullable();\n+}\n+\n+// [[Rcpp::export]]\n+std::shared_ptr<arrow::DataType> Field__type(const std::shared_ptr<arrow::Field>& field) {\n+  return field->type();\n }\ndiff --git a/r/tests/testthat/test-field.R b/r/tests/testthat/test-field.R\nnew file mode 100644\nindex 0000000000..08bf4db36a\n--- /dev/null\n+++ b/r/tests/testthat/test-field.R\n@@ -0,0 +1,26 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+context(\"arrow::Field\")\n+\n+test_that(\"field() factory\", {\n+  x <- field(\"x\", int32())\n+  expect_equal(x$type(), int32())\n+  expect_equal(x$name(), \"x\")\n+  expect_true(x == x)\n+  expect_false(x == field(\"x\", int64()))\n+})\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-29T02:24:54.525+0000",
                    "updated": "2018-11-29T02:24:54.525+0000",
                    "started": "2018-11-29T02:24:54.524+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "170523",
                    "issueId": "13198862"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 3600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4b19c46b[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1998fcd1[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@77991b2b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@29390f7d[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3a51ece5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7d2cb2c4[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4253ae09[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@23f013d9[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1673e586[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@e51df1e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@512d1b3b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@72e0a41c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 3600,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Nov 29 02:27:26 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-11-29T02:27:26.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3807/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-11-16T10:26:13.000+0000",
        "updated": "2018-11-29T02:27:34.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 3600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Missing Field API",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198862/comment/16702636",
                    "id": "16702636",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2981\n[https://github.com/apache/arrow/pull/2981]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-11-29T02:27:26.618+0000",
                    "updated": "2018-11-29T02:27:26.618+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|s00kn4:",
        "customfield_12314139": null
    }
}