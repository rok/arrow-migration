{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13245075",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245075",
    "key": "ARROW-5955",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345727",
                "id": "12345727",
                "name": "0.14.1",
                "archived": false,
                "released": true,
                "releaseDate": "2019-07-22"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ekhliang",
            "name": "ekhliang",
            "key": "ekhliang",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Eric Liang",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332956",
                "id": "12332956",
                "name": "C++ - Plasma"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ekhliang",
            "name": "ekhliang",
            "key": "ekhliang",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Eric Liang",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ekhliang",
            "name": "ekhliang",
            "key": "ekhliang",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Eric Liang",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5955/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 15,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245075/worklog/277079",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ericl commented on pull request #4885: ARROW-5955: [Plasma] Support setting memory quotas per plasma client for better isolation\nURL: https://github.com/apache/arrow/pull/4885\n \n \n   Currently, plasma evicts objects according a global LRU queue. In Ray, this often causes memory-intensive workloads to fail unpredictably, since a client that creates objects at a high rate can evict objects created by clients at lower rates. This is despite the fact that the true working set of both clients may be quite small.\r\n   \r\n   This PR adds\r\n   - support for configuring per-client LRU eviction queues at runtime\r\n   - improved debugging of memory usage of clients\r\n   \r\n   **Details on the implementation:**\r\n   \r\n   QuotaAwarePolicy extends the basic eviction policy to implement per-client memory quotas.  This effectively gives each client its own LRU queue, which caps its memory usage and protects this memory from being evicted by other clients.\r\n   \r\n   The quotas are enforced when objects are first created, by evicting the necessary number of objects from the client's own LRU queue to cap its memory usage. Once that is done, allocation is handled by the normal eviction policy. This may result in the eviction of objects from the global LRU queue, if not enough memory can be allocated even after the evictions from the client's own LRU queue.\r\n   \r\n   Some special cases:\r\n   - When a pinned object is \"evicted\" from a per-client queue, it is instead transferred into the global LRU queue.\r\n   - When a client disconnects, its LRU queue is merged into the head of the global LRU queue.\r\n   \r\n   cc @pcmoritz \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-16T00:17:22.816+0000",
                    "updated": "2019-07-16T00:17:22.816+0000",
                    "started": "2019-07-16T00:17:22.816+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "277079",
                    "issueId": "13245075"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245075/worklog/277205",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on pull request #4885: ARROW-5955: [Plasma] Support setting memory quotas per plasma client for better isolation\nURL: https://github.com/apache/arrow/pull/4885#discussion_r303726730\n \n \n\n ##########\n File path: cpp/src/plasma/quota_aware_policy.h\n ##########\n @@ -0,0 +1,90 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#ifndef PLASMA_QUOTA_AWARE_POLICY_H\n+#define PLASMA_QUOTA_AWARE_POLICY_H\n+\n+#include <list>\n+#include <memory>\n+#include <unordered_map>\n+#include <unordered_set>\n+#include <string>\n+#include <utility>\n+#include <vector>\n+\n+#include \"plasma/common.h\"\n+#include \"plasma/eviction_policy.h\"\n+#include \"plasma/plasma.h\"\n+\n+namespace plasma {\n+\n+/// Reserve this fraction of memory for shared usage. Attempts to set client\n+/// quotas that would cause the global LRU memory fraction to fall below this\n+/// value will be rejected.\n+static const double GLOBAL_LRU_RESERVE_FRACTION = 0.3;\n \n Review comment:\n   This should be\r\n   ```\r\n   constexpr double kGlobalLruReserveFraction = 0.3;\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-16T04:51:19.510+0000",
                    "updated": "2019-07-16T04:51:19.510+0000",
                    "started": "2019-07-16T04:51:19.509+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "277205",
                    "issueId": "13245075"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245075/worklog/277236",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on pull request #4885: ARROW-5955: [Plasma] Support setting memory quotas per plasma client for better isolation\nURL: https://github.com/apache/arrow/pull/4885#discussion_r303743581\n \n \n\n ##########\n File path: cpp/src/plasma/quota_aware_policy.cc\n ##########\n @@ -0,0 +1,168 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"plasma/quota_aware_policy.h\"\n+#include \"plasma/common.h\"\n+#include \"plasma/plasma_allocator.h\"\n+\n+#include <algorithm>\n+#include <memory>\n+#include <sstream>\n+\n+namespace plasma {\n+\n+QuotaAwarePolicy::QuotaAwarePolicy(PlasmaStoreInfo* store_info, int64_t max_size)\n+    : EvictionPolicy(store_info, max_size) {}\n+\n+bool QuotaAwarePolicy::HasQuota(Client* client, bool is_create) {\n+  if (!is_create) {\n+    return false;  // no quota enforcement on read requests yet\n+  }\n+  return per_client_cache_.find(client) != per_client_cache_.end();\n+}\n+\n+void QuotaAwarePolicy::ObjectCreated(const ObjectID& object_id, Client* client,\n+                                     bool is_create) {\n+  if (HasQuota(client, is_create)) {\n+    per_client_cache_[client]->Add(object_id, GetObjectSize(object_id));\n+    owned_by_client_[object_id] = client;\n+  } else {\n+    EvictionPolicy::ObjectCreated(object_id, client, is_create);\n \n Review comment:\n   This is nice!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-16T06:24:03.182+0000",
                    "updated": "2019-07-16T06:24:03.182+0000",
                    "started": "2019-07-16T06:24:03.181+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "277236",
                    "issueId": "13245075"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245075/worklog/277238",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on pull request #4885: ARROW-5955: [Plasma] Support setting memory quotas per plasma client for better isolation\nURL: https://github.com/apache/arrow/pull/4885#discussion_r303746549\n \n \n\n ##########\n File path: cpp/src/plasma/quota_aware_policy.cc\n ##########\n @@ -0,0 +1,168 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"plasma/quota_aware_policy.h\"\n+#include \"plasma/common.h\"\n+#include \"plasma/plasma_allocator.h\"\n+\n+#include <algorithm>\n+#include <memory>\n+#include <sstream>\n+\n+namespace plasma {\n+\n+QuotaAwarePolicy::QuotaAwarePolicy(PlasmaStoreInfo* store_info, int64_t max_size)\n+    : EvictionPolicy(store_info, max_size) {}\n+\n+bool QuotaAwarePolicy::HasQuota(Client* client, bool is_create) {\n+  if (!is_create) {\n+    return false;  // no quota enforcement on read requests yet\n+  }\n+  return per_client_cache_.find(client) != per_client_cache_.end();\n+}\n+\n+void QuotaAwarePolicy::ObjectCreated(const ObjectID& object_id, Client* client,\n+                                     bool is_create) {\n+  if (HasQuota(client, is_create)) {\n+    per_client_cache_[client]->Add(object_id, GetObjectSize(object_id));\n+    owned_by_client_[object_id] = client;\n+  } else {\n+    EvictionPolicy::ObjectCreated(object_id, client, is_create);\n+  }\n+}\n+\n+bool QuotaAwarePolicy::SetClientQuota(Client* client, int64_t output_memory_quota) {\n+  if (per_client_cache_.find(client) != per_client_cache_.end()) {\n+    ARROW_LOG(WARNING) << \"Cannot change the client quota once set\";\n+    return false;\n+  }\n+\n+  if (cache_.Capacity() - output_memory_quota <\n+      cache_.OriginalCapacity() * GLOBAL_LRU_RESERVE_FRACTION) {\n+    ARROW_LOG(WARNING) << \"Not enough memory to set client quota: \" << DebugString();\n+    return false;\n+  }\n+\n+  // those objects will be lazily evicted on the next call\n+  cache_.AdjustCapacity(-output_memory_quota);\n+  per_client_cache_[client] =\n+      std::unique_ptr<LRUCache>(new LRUCache(client->name, output_memory_quota));\n+  return true;\n+}\n+\n+bool QuotaAwarePolicy::EnforcePerClientQuota(Client* client, int64_t size, bool is_create,\n+                                             std::vector<ObjectID>* objects_to_evict) {\n+  if (!HasQuota(client, is_create)) {\n+    return true;\n+  }\n+\n+  auto& client_cache = per_client_cache_[client];\n+  if (size > client_cache->Capacity()) {\n+    ARROW_LOG(WARNING) << \"object too large (\" << size\n+                       << \" bytes) to fit in client quota \" << client_cache->Capacity()\n+                       << \" \" << DebugString();\n+    return false;\n+  }\n+\n+  if (client_cache->RemainingCapacity() >= size) {\n+    return true;\n+  }\n+\n+  int64_t space_to_free = size - client_cache->RemainingCapacity();\n+  if (space_to_free > 0) {\n+    std::vector<ObjectID> candidates;\n+    client_cache->ChooseObjectsToEvict(space_to_free, &candidates);\n+    for (ObjectID& object_id : candidates) {\n+      if (shared_for_read_.count(object_id)) {\n+        // Pinned so we can't evict it, so demote the object to global LRU instead.\n+        // We an do this by simply removing it from all data structures, so that\n+        // the next EndObjectAccess() will add it back to global LRU.\n+        shared_for_read_.erase(object_id);\n+      } else {\n+        objects_to_evict->push_back(object_id);\n+      }\n+      owned_by_client_.erase(object_id);\n+      client_cache->Remove(object_id);\n+    }\n+  }\n+  return true;\n+}\n+\n+void QuotaAwarePolicy::BeginObjectAccess(const ObjectID& object_id) {\n+  if (owned_by_client_.find(object_id) != owned_by_client_.end()) {\n+    shared_for_read_.insert(object_id);\n+    pinned_memory_bytes_ += GetObjectSize(object_id);\n+    return;\n+  }\n+  EvictionPolicy::BeginObjectAccess(object_id);\n+}\n+\n+void QuotaAwarePolicy::EndObjectAccess(const ObjectID& object_id) {\n+  if (owned_by_client_.find(object_id) != owned_by_client_.end()) {\n+    shared_for_read_.erase(object_id);\n+    pinned_memory_bytes_ -= GetObjectSize(object_id);\n+    return;\n+  }\n+  EvictionPolicy::EndObjectAccess(object_id);\n+}\n+\n+void QuotaAwarePolicy::RemoveObject(const ObjectID& object_id) {\n+  if (owned_by_client_.find(object_id) != owned_by_client_.end()) {\n+    per_client_cache_[owned_by_client_[object_id]]->Remove(object_id);\n+    owned_by_client_.erase(object_id);\n+    shared_for_read_.erase(object_id);\n+    return;\n+  }\n+  EvictionPolicy::RemoveObject(object_id);\n+}\n+\n+void QuotaAwarePolicy::ClientDisconnected(Client* client) {\n+  if (per_client_cache_.find(client) == per_client_cache_.end()) {\n+    return;\n+  }\n+  // return capacity back to global LRU\n+  cache_.AdjustCapacity(per_client_cache_[client]->Capacity());\n+  // clean up any entries used to track this client's quota usage\n+  per_client_cache_[client]->Foreach([this](ObjectID obj) {\n+    auto entry = store_info_->objects[obj].get();\n+    if (!shared_for_read_.count(obj)) {\n+      // only add it to the global LRU if we have it in pinned mode\n+      // otherwise, EndObjectAccess will add it later\n+      cache_.Add(obj, entry->data_size + entry->metadata_size);\n \n Review comment:\n   can use GetObjectSize here?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-16T06:36:14.103+0000",
                    "updated": "2019-07-16T06:36:14.103+0000",
                    "started": "2019-07-16T06:36:14.102+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "277238",
                    "issueId": "13245075"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245075/worklog/277837",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ericl commented on issue #4885: ARROW-5955: [Plasma] Support setting memory quotas per plasma client for better isolation\nURL: https://github.com/apache/arrow/pull/4885#issuecomment-512037456\n \n \n   That's right, if no clients set a quota, the behaviour should be identical from before.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-16T23:16:42.939+0000",
                    "updated": "2019-07-16T23:16:42.939+0000",
                    "started": "2019-07-16T23:16:42.938+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "277837",
                    "issueId": "13245075"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245075/worklog/279380",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4885: ARROW-5955: [Plasma] Support setting memory quotas per plasma client for better isolation\nURL: https://github.com/apache/arrow/pull/4885#issuecomment-513011599\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=h1) Report\n   > Merging [#4885](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/30ba931863d19416ce024ee8d7fad1f4fd96cc3a?src=pr&el=desc) will **increase** coverage by `0.63%`.\n   > The diff coverage is `96.55%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4885/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4885      +/-   ##\n   ==========================================\n   + Coverage    88.5%   89.13%   +0.63%     \n   ==========================================\n     Files         909      607     -302     \n     Lines      115568    77514   -38054     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       102279    69094   -33185     \n   + Misses      12927     8420    -4507     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/store.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvc3RvcmUuaA==) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/client.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY2xpZW50Lmg=) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/protocol.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcHJvdG9jb2wuaA==) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/store.cc](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvc3RvcmUuY2M=) | `86.35% <100%> (-4.78%)` | :arrow_down: |\n   | [cpp/src/plasma/protocol.cc](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcHJvdG9jb2wuY2M=) | `89.57% <100%> (-4.19%)` | :arrow_down: |\n   | [cpp/src/plasma/quota\\_aware\\_policy.cc](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcXVvdGFfYXdhcmVfcG9saWN5LmNj) | `100% <100%> (\u00f8)` | |\n   | [cpp/src/plasma/quota\\_aware\\_policy.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcXVvdGFfYXdhcmVfcG9saWN5Lmg=) | `100% <100%> (\u00f8)` | |\n   | [cpp/src/plasma/eviction\\_policy.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvZXZpY3Rpb25fcG9saWN5Lmg=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/plasma.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcGxhc21hLmg=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/client.cc](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY2xpZW50LmNj) | `89.5% <85%> (-7.61%)` | :arrow_down: |\n   | ... and [383 more](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=footer). Last update [30ba931...248bb78](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-18T22:23:47.214+0000",
                    "updated": "2019-07-18T22:23:47.214+0000",
                    "started": "2019-07-18T22:23:47.213+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "279380",
                    "issueId": "13245075"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245075/worklog/281411",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ericl commented on pull request #4885: ARROW-5955: [Plasma] Support setting memory quotas per plasma client for better isolation\nURL: https://github.com/apache/arrow/pull/4885\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T00:35:02.562+0000",
                    "updated": "2019-07-24T00:35:02.562+0000",
                    "started": "2019-07-24T00:35:02.561+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "281411",
                    "issueId": "13245075"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245075/worklog/281412",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ericl commented on pull request #4885: ARROW-5955: [Plasma] Support setting memory quotas per plasma client for better isolation\nURL: https://github.com/apache/arrow/pull/4885\n \n \n   Currently, plasma evicts objects according a global LRU queue. In Ray, this often causes memory-intensive workloads to fail unpredictably, since a client that creates objects at a high rate can evict objects created by clients at lower rates. This is despite the fact that the true working set of both clients may be quite small.\r\n   \r\n   This PR adds\r\n   - support for configuring per-client LRU eviction queues at runtime\r\n   - improved debugging of memory usage of clients\r\n   \r\n   **Details on the implementation:**\r\n   \r\n   QuotaAwarePolicy extends the basic eviction policy to implement per-client memory quotas.  This effectively gives each client its own LRU queue, which caps its memory usage and protects this memory from being evicted by other clients.\r\n   \r\n   The quotas are enforced when objects are first created, by evicting the necessary number of objects from the client's own LRU queue to cap its memory usage. Once that is done, allocation is handled by the normal eviction policy. This may result in the eviction of objects from the global LRU queue, if not enough memory can be allocated even after the evictions from the client's own LRU queue.\r\n   \r\n   Some special cases:\r\n   - When a pinned object is \"evicted\" from a per-client queue, it is instead transferred into the global LRU queue.\r\n   - When a client disconnects, its LRU queue is merged into the head of the global LRU queue.\r\n   \r\n   cc @pcmoritz \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T00:35:33.572+0000",
                    "updated": "2019-07-24T00:35:33.572+0000",
                    "started": "2019-07-24T00:35:33.572+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "281412",
                    "issueId": "13245075"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245075/worklog/281906",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4885: ARROW-5955: [Plasma] Support setting memory quotas per plasma client for better isolation\nURL: https://github.com/apache/arrow/pull/4885#issuecomment-513011599\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=h1) Report\n   > Merging [#4885](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/2746a2361a8e42f2d6684749d6ad8e5d3307858c?src=pr&el=desc) will **increase** coverage by `1.63%`.\n   > The diff coverage is `95.03%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4885/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4885      +/-   ##\n   ==========================================\n   + Coverage   87.45%   89.09%   +1.63%     \n   ==========================================\n     Files         994      719     -275     \n     Lines      140389   100613   -39776     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       122778    89641   -33137     \n   + Misses      17249    10972    -6277     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/store.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvc3RvcmUuaA==) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/client.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY2xpZW50Lmg=) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/protocol.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcHJvdG9jb2wuaA==) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/\\_plasma.pyx](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvX3BsYXNtYS5weXg=) | `89.28% <0%> (-2.82%)` | :arrow_down: |\n   | [cpp/src/plasma/store.cc](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvc3RvcmUuY2M=) | `91.33% <100%> (+0.19%)` | :arrow_up: |\n   | [cpp/src/plasma/protocol.cc](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcHJvdG9jb2wuY2M=) | `94.29% <100%> (+0.52%)` | :arrow_up: |\n   | [cpp/src/plasma/quota\\_aware\\_policy.cc](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcXVvdGFfYXdhcmVfcG9saWN5LmNj) | `100% <100%> (\u00f8)` | |\n   | [cpp/src/plasma/quota\\_aware\\_policy.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcXVvdGFfYXdhcmVfcG9saWN5Lmg=) | `100% <100%> (\u00f8)` | |\n   | [cpp/src/plasma/eviction\\_policy.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvZXZpY3Rpb25fcG9saWN5Lmg=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/plasma.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcGxhc21hLmg=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | ... and [286 more](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=footer). Last update [2746a23...f3638b8](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T12:26:22.017+0000",
                    "updated": "2019-07-24T12:26:22.017+0000",
                    "started": "2019-07-24T12:26:22.016+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "281906",
                    "issueId": "13245075"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245075/worklog/281907",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4885: ARROW-5955: [Plasma] Support setting memory quotas per plasma client for better isolation\nURL: https://github.com/apache/arrow/pull/4885#issuecomment-513011599\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=h1) Report\n   > Merging [#4885](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/2746a2361a8e42f2d6684749d6ad8e5d3307858c?src=pr&el=desc) will **increase** coverage by `1.63%`.\n   > The diff coverage is `95.03%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4885/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4885      +/-   ##\n   ==========================================\n   + Coverage   87.45%   89.09%   +1.63%     \n   ==========================================\n     Files         994      719     -275     \n     Lines      140389   100613   -39776     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       122778    89641   -33137     \n   + Misses      17249    10972    -6277     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/store.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvc3RvcmUuaA==) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/client.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY2xpZW50Lmg=) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/protocol.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcHJvdG9jb2wuaA==) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/\\_plasma.pyx](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvX3BsYXNtYS5weXg=) | `89.28% <0%> (-2.82%)` | :arrow_down: |\n   | [cpp/src/plasma/store.cc](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvc3RvcmUuY2M=) | `91.33% <100%> (+0.19%)` | :arrow_up: |\n   | [cpp/src/plasma/protocol.cc](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcHJvdG9jb2wuY2M=) | `94.29% <100%> (+0.52%)` | :arrow_up: |\n   | [cpp/src/plasma/quota\\_aware\\_policy.cc](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcXVvdGFfYXdhcmVfcG9saWN5LmNj) | `100% <100%> (\u00f8)` | |\n   | [cpp/src/plasma/quota\\_aware\\_policy.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcXVvdGFfYXdhcmVfcG9saWN5Lmg=) | `100% <100%> (\u00f8)` | |\n   | [cpp/src/plasma/eviction\\_policy.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvZXZpY3Rpb25fcG9saWN5Lmg=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/plasma.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcGxhc21hLmg=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | ... and [286 more](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=footer). Last update [2746a23...f3638b8](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T12:26:22.981+0000",
                    "updated": "2019-07-24T12:26:22.981+0000",
                    "started": "2019-07-24T12:26:22.981+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "281907",
                    "issueId": "13245075"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245075/worklog/281908",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4885: ARROW-5955: [Plasma] Support setting memory quotas per plasma client for better isolation\nURL: https://github.com/apache/arrow/pull/4885#issuecomment-513011599\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=h1) Report\n   > Merging [#4885](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/2746a2361a8e42f2d6684749d6ad8e5d3307858c?src=pr&el=desc) will **increase** coverage by `1.63%`.\n   > The diff coverage is `95.03%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4885/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4885      +/-   ##\n   ==========================================\n   + Coverage   87.45%   89.09%   +1.63%     \n   ==========================================\n     Files         994      719     -275     \n     Lines      140389   100613   -39776     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       122778    89641   -33137     \n   + Misses      17249    10972    -6277     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/store.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvc3RvcmUuaA==) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/client.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY2xpZW50Lmg=) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/protocol.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcHJvdG9jb2wuaA==) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/\\_plasma.pyx](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvX3BsYXNtYS5weXg=) | `89.28% <0%> (-2.82%)` | :arrow_down: |\n   | [cpp/src/plasma/store.cc](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvc3RvcmUuY2M=) | `91.33% <100%> (+0.19%)` | :arrow_up: |\n   | [cpp/src/plasma/protocol.cc](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcHJvdG9jb2wuY2M=) | `94.29% <100%> (+0.52%)` | :arrow_up: |\n   | [cpp/src/plasma/quota\\_aware\\_policy.cc](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcXVvdGFfYXdhcmVfcG9saWN5LmNj) | `100% <100%> (\u00f8)` | |\n   | [cpp/src/plasma/quota\\_aware\\_policy.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcXVvdGFfYXdhcmVfcG9saWN5Lmg=) | `100% <100%> (\u00f8)` | |\n   | [cpp/src/plasma/eviction\\_policy.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvZXZpY3Rpb25fcG9saWN5Lmg=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/plasma.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcGxhc21hLmg=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | ... and [286 more](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=footer). Last update [2746a23...f3638b8](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T12:26:26.012+0000",
                    "updated": "2019-07-24T12:26:26.012+0000",
                    "started": "2019-07-24T12:26:26.011+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "281908",
                    "issueId": "13245075"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245075/worklog/281909",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4885: ARROW-5955: [Plasma] Support setting memory quotas per plasma client for better isolation\nURL: https://github.com/apache/arrow/pull/4885#issuecomment-513011599\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=h1) Report\n   > Merging [#4885](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/2746a2361a8e42f2d6684749d6ad8e5d3307858c?src=pr&el=desc) will **increase** coverage by `1.63%`.\n   > The diff coverage is `95.03%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4885/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4885      +/-   ##\n   ==========================================\n   + Coverage   87.45%   89.09%   +1.63%     \n   ==========================================\n     Files         994      719     -275     \n     Lines      140389   100613   -39776     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       122778    89641   -33137     \n   + Misses      17249    10972    -6277     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/store.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvc3RvcmUuaA==) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/client.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY2xpZW50Lmg=) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/protocol.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcHJvdG9jb2wuaA==) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/\\_plasma.pyx](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvX3BsYXNtYS5weXg=) | `89.28% <0%> (-2.82%)` | :arrow_down: |\n   | [cpp/src/plasma/store.cc](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvc3RvcmUuY2M=) | `91.33% <100%> (+0.19%)` | :arrow_up: |\n   | [cpp/src/plasma/protocol.cc](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcHJvdG9jb2wuY2M=) | `94.29% <100%> (+0.52%)` | :arrow_up: |\n   | [cpp/src/plasma/quota\\_aware\\_policy.cc](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcXVvdGFfYXdhcmVfcG9saWN5LmNj) | `100% <100%> (\u00f8)` | |\n   | [cpp/src/plasma/quota\\_aware\\_policy.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcXVvdGFfYXdhcmVfcG9saWN5Lmg=) | `100% <100%> (\u00f8)` | |\n   | [cpp/src/plasma/eviction\\_policy.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvZXZpY3Rpb25fcG9saWN5Lmg=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/plasma.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcGxhc21hLmg=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | ... and [286 more](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=footer). Last update [2746a23...f3638b8](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T12:26:29.902+0000",
                    "updated": "2019-07-24T12:26:29.902+0000",
                    "started": "2019-07-24T12:26:29.901+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "281909",
                    "issueId": "13245075"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245075/worklog/281910",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4885: ARROW-5955: [Plasma] Support setting memory quotas per plasma client for better isolation\nURL: https://github.com/apache/arrow/pull/4885#issuecomment-513011599\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=h1) Report\n   > Merging [#4885](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/2746a2361a8e42f2d6684749d6ad8e5d3307858c?src=pr&el=desc) will **increase** coverage by `1.63%`.\n   > The diff coverage is `95.03%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4885/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4885      +/-   ##\n   ==========================================\n   + Coverage   87.45%   89.09%   +1.63%     \n   ==========================================\n     Files         994      719     -275     \n     Lines      140389   100613   -39776     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       122778    89641   -33137     \n   + Misses      17249    10972    -6277     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/store.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvc3RvcmUuaA==) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/client.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY2xpZW50Lmg=) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/protocol.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcHJvdG9jb2wuaA==) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/\\_plasma.pyx](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvX3BsYXNtYS5weXg=) | `89.28% <0%> (-2.82%)` | :arrow_down: |\n   | [cpp/src/plasma/store.cc](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvc3RvcmUuY2M=) | `91.33% <100%> (+0.19%)` | :arrow_up: |\n   | [cpp/src/plasma/protocol.cc](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcHJvdG9jb2wuY2M=) | `94.29% <100%> (+0.52%)` | :arrow_up: |\n   | [cpp/src/plasma/quota\\_aware\\_policy.cc](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcXVvdGFfYXdhcmVfcG9saWN5LmNj) | `100% <100%> (\u00f8)` | |\n   | [cpp/src/plasma/quota\\_aware\\_policy.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcXVvdGFfYXdhcmVfcG9saWN5Lmg=) | `100% <100%> (\u00f8)` | |\n   | [cpp/src/plasma/eviction\\_policy.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvZXZpY3Rpb25fcG9saWN5Lmg=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/plasma.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcGxhc21hLmg=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | ... and [286 more](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=footer). Last update [2746a23...f3638b8](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T12:26:30.221+0000",
                    "updated": "2019-07-24T12:26:30.221+0000",
                    "started": "2019-07-24T12:26:30.221+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "281910",
                    "issueId": "13245075"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245075/worklog/281911",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4885: ARROW-5955: [Plasma] Support setting memory quotas per plasma client for better isolation\nURL: https://github.com/apache/arrow/pull/4885#issuecomment-513011599\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=h1) Report\n   > Merging [#4885](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/2746a2361a8e42f2d6684749d6ad8e5d3307858c?src=pr&el=desc) will **increase** coverage by `1.63%`.\n   > The diff coverage is `95.03%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4885/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4885      +/-   ##\n   ==========================================\n   + Coverage   87.45%   89.09%   +1.63%     \n   ==========================================\n     Files         994      719     -275     \n     Lines      140389   100613   -39776     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       122778    89641   -33137     \n   + Misses      17249    10972    -6277     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/store.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvc3RvcmUuaA==) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/client.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY2xpZW50Lmg=) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/protocol.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcHJvdG9jb2wuaA==) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/\\_plasma.pyx](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvX3BsYXNtYS5weXg=) | `89.28% <0%> (-2.82%)` | :arrow_down: |\n   | [cpp/src/plasma/store.cc](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvc3RvcmUuY2M=) | `91.33% <100%> (+0.19%)` | :arrow_up: |\n   | [cpp/src/plasma/protocol.cc](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcHJvdG9jb2wuY2M=) | `94.29% <100%> (+0.52%)` | :arrow_up: |\n   | [cpp/src/plasma/quota\\_aware\\_policy.cc](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcXVvdGFfYXdhcmVfcG9saWN5LmNj) | `100% <100%> (\u00f8)` | |\n   | [cpp/src/plasma/quota\\_aware\\_policy.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcXVvdGFfYXdhcmVfcG9saWN5Lmg=) | `100% <100%> (\u00f8)` | |\n   | [cpp/src/plasma/eviction\\_policy.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvZXZpY3Rpb25fcG9saWN5Lmg=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/plasma.h](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcGxhc21hLmg=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | ... and [286 more](https://codecov.io/gh/apache/arrow/pull/4885/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=footer). Last update [2746a23...f3638b8](https://codecov.io/gh/apache/arrow/pull/4885?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T12:26:30.812+0000",
                    "updated": "2019-07-24T12:26:30.812+0000",
                    "started": "2019-07-24T12:26:30.811+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "281911",
                    "issueId": "13245075"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245075/worklog/283058",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on pull request #4885: ARROW-5955: [Plasma] Support setting memory quotas per plasma client for better isolation\nURL: https://github.com/apache/arrow/pull/4885\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-26T03:03:12.865+0000",
                    "updated": "2019-07-26T03:03:12.865+0000",
                    "started": "2019-07-26T03:03:12.865+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "283058",
                    "issueId": "13245075"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 9000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@720edbc[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@31ac77b7[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2360c38a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7123199e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@712b476[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@48ca443d[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6d93b23d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@415a9f8[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@16360c08[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@c47495f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7c3500b0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@55462ca7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9000,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Jul 26 03:03:05 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-07-26T03:03:05.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5955/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-07-16T00:14:12.000+0000",
        "updated": "2019-08-01T22:39:19.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently, plasma evicts objects\u00a0according a global LRU queue. In Ray, this often causes memory-intensive workloads to fail unpredictably, since a client that\u00a0creates objects at a high rate can evict objects created by clients at lower rates. This is despite the fact that the true working set of both clients may be quite small.\r\n\r\ncc [~pcmoritz]",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Plasma] Support setting memory quotas per plasma client for better isolation",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245075/comment/16893279",
                    "id": "16893279",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
                        "name": "pcmoritz",
                        "key": "pcmoritz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Philipp Moritz",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 4885\n[https://github.com/apache/arrow/pull/4885]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
                        "name": "pcmoritz",
                        "key": "pcmoritz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Philipp Moritz",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-07-26T03:03:05.314+0000",
                    "updated": "2019-07-26T03:03:05.314+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z04p0w:",
        "customfield_12314139": null
    }
}