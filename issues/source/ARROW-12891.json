{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13380759",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380759",
    "key": "ARROW-12891",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 3600,
            "total": 3600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 3600,
            "total": 3600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12891/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 6,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380759/worklog/608680",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm opened a new pull request #10484:\nURL: https://github.com/apache/arrow/pull/10484\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-08T19:14:52.987+0000",
                    "updated": "2021-06-08T19:14:52.987+0000",
                    "started": "2021-06-08T19:14:52.987+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "608680",
                    "issueId": "13380759"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380759/worklog/608681",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10484:\nURL: https://github.com/apache/arrow/pull/10484#issuecomment-857031758\n\n\n   https://issues.apache.org/jira/browse/ARROW-12891\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-08T19:15:19.735+0000",
                    "updated": "2021-06-08T19:15:19.735+0000",
                    "started": "2021-06-08T19:15:19.735+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "608681",
                    "issueId": "13380759"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380759/worklog/618174",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #10484:\nURL: https://github.com/apache/arrow/pull/10484#discussion_r663126955\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.cc\n##########\n@@ -266,20 +268,21 @@ void FileSystemDataset::SetupSubtreePruning() {\n     }\n   }\n \n-  subtrees_->forest = Forest(static_cast<int>(encoded.size()), [&](int l, int r) {\n-    if (encoded[l].fragment_index) {\n-      // Fragment: not an ancestor.\n-      return false;\n-    }\n+  subtrees_->forest =\n+      compute::Forest(static_cast<int>(encoded.size()), [&](int l, int r) {\n+        if (encoded[l].fragment_index) {\n\nReview comment:\n       Same: move into Subtree or Forest\n\n##########\nFile path: cpp/src/arrow/compute/exec/subtree_internal.h\n##########\n@@ -0,0 +1,148 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <stdint.h>\n+#include <string>\n+#include <unordered_map>\n+#include <unordered_set>\n+#include <vector>\n+\n+#include \"arrow/compute/exec/expression.h\"\n+#include \"arrow/util/optional.h\"\n+\n+namespace arrow {\n+namespace compute {\n+// Helper class for efficiently detecting subtrees given fragment partition expressions.\n+// Partition expressions are broken into conjunction members and each member dictionary\n+// encoded to impose a sortable ordering. In addition, subtrees are generated which span\n+// groups of fragments and nested subtrees. After encoding each fragment is guaranteed to\n+// be a descendant of at least one subtree. For example, given fragments in a\n+// HivePartitioning with paths:\n+//\n+//   /num=0/al=eh/dat.par\n+//   /num=0/al=be/dat.par\n+//   /num=1/al=eh/dat.par\n+//   /num=1/al=be/dat.par\n+//\n+// The following subtrees will be introduced:\n+//\n+//   /num=0/\n+//   /num=0/al=eh/\n+//   /num=0/al=eh/dat.par\n+//   /num=0/al=be/\n+//   /num=0/al=be/dat.par\n+//   /num=1/\n+//   /num=1/al=eh/\n+//   /num=1/al=eh/dat.par\n+//   /num=1/al=be/\n+//   /num=1/al=be/dat.par\n+struct SubtreeImpl {\n+  // Each unique conjunction member is mapped to an integer.\n+  using expression_code = char32_t;\n+  // Partition expressions are mapped to strings of codes; strings give us lexicographic\n+  // ordering (and potentially useful optimizations).\n+  using expression_codes = std::basic_string<expression_code>;\n+  // An encoded fragment (if fragment_index is set) or subtree.\n+  struct Encoded {\n+    util::optional<int> fragment_index;\n+    expression_codes partition_expression;\n+  };\n+\n+  std::unordered_map<compute::Expression, expression_code, compute::Expression::Hash>\n+      expr_to_code_;\n+  std::vector<compute::Expression> code_to_expr_;\n+  std::unordered_set<expression_codes> subtree_exprs_;\n+\n+  // Encode a subexpression (returning the existing code if possible).\n+  expression_code GetOrInsert(const compute::Expression& expr) {\n+    auto next_code = static_cast<int>(expr_to_code_.size());\n+    auto it_success = expr_to_code_.emplace(expr, next_code);\n+\n+    if (it_success.second) {\n+      code_to_expr_.push_back(expr);\n+    }\n+    return it_success.first->second;\n+  }\n+\n+  // Encode an expression (recursively breaking up conjunction members if possible).\n+  void EncodeConjunctionMembers(const compute::Expression& expr,\n+                                expression_codes* codes) {\n+    if (auto call = expr.call()) {\n+      if (call->function_name == \"and_kleene\") {\n+        // expr is a conjunction, encode its arguments\n+        EncodeConjunctionMembers(call->arguments[0], codes);\n+        EncodeConjunctionMembers(call->arguments[1], codes);\n+        return;\n+      }\n+    }\n+    // expr is not a conjunction, encode it whole\n+    codes->push_back(GetOrInsert(expr));\n+  }\n+\n+  // Convert an encoded subtree or fragment back into an expression.\n+  compute::Expression GetSubtreeExpression(const Encoded& encoded_subtree) {\n+    // Filters will already be simplified by all of a subtree's ancestors, so\n+    // we only need to simplify the filter by the trailing conjunction member\n+    // of each subtree.\n+    return code_to_expr_[encoded_subtree.partition_expression.back()];\n+  }\n+\n+  // Insert subtrees for each component of an encoded partition expression.\n+  void GenerateSubtrees(expression_codes partition_expression,\n+                        std::vector<Encoded>* encoded) {\n+    while (!partition_expression.empty()) {\n+      if (subtree_exprs_.insert(partition_expression).second) {\n+        Encoded encoded_subtree{/*fragment_index=*/util::nullopt, partition_expression};\n+        encoded->push_back(std::move(encoded_subtree));\n+      }\n+      partition_expression.resize(partition_expression.size() - 1);\n+    }\n+  }\n+\n+  // Encode the fragment's partition expression and generate subtrees for it as well.\n+  void EncodeOneExpression(int fragment_index, const Expression& partition_expression,\n+                           std::vector<Encoded>* encoded) {\n+    Encoded encoded_fragment{fragment_index, {}};\n+\n+    EncodeConjunctionMembers(partition_expression,\n+                             &encoded_fragment.partition_expression);\n+\n+    GenerateSubtrees(encoded_fragment.partition_expression, encoded);\n+\n+    encoded->push_back(std::move(encoded_fragment));\n+  }\n+\n+  template <typename Fragments>\n+  std::vector<Encoded> EncodeFragments(const Fragments& fragments) {\n+    std::vector<Encoded> encoded;\n+    for (size_t i = 0; i < fragments.size(); ++i) {\n+      EncodeOneExpression(static_cast<int>(i), fragments[i]->partition_expression(),\n+                          &encoded);\n+    }\n+    return encoded;\n+  }\n\nReview comment:\n       Since this isn't in dataset:: anymore, let's remove references to `Fragment` and make it generically about a set of guarantees\r\n   ```suggestion\r\n     template <typename GetGuarantee>\r\n     std::vector<Encoded> EncodeGuarantee(const GetGuarantee& get, int count) {\r\n       std::vector<Encoded> encoded;\r\n       for (int i = 0; i < count; ++i) {\r\n         EncodeOneGuarantee(i, get(i), &encoded);\r\n       }\r\n       return encoded;\r\n     }\r\n   ```\n\n##########\nFile path: cpp/src/arrow/compute/exec/forest_internal.h\n##########\n@@ -21,15 +21,16 @@\n #include <utility>\n #include <vector>\n \n-#include \"arrow/dataset/visibility.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/status.h\"\n \n namespace arrow {\n-namespace dataset {\n+namespace compute {\n \n /// A Forest is a view of a sorted range which carries an ancestry relation in addition\n /// to an ordering relation: each element's descendants appear directly after it.\n /// This can be used to efficiently skip subtrees when iterating through the range.\n-class ARROW_DS_EXPORT Forest {\n+class Forest {\n\nReview comment:\n       ```suggestion\r\n   class ARROW_EXPORT Forest {\r\n   ```\n\n##########\nFile path: cpp/src/arrow/dataset/file_base.cc\n##########\n@@ -243,20 +244,21 @@ std::string FileSystemDataset::ToString() const {\n \n void FileSystemDataset::SetupSubtreePruning() {\n   subtrees_ = std::make_shared<FragmentSubtrees>();\n-  SubtreeImpl impl;\n+  compute::SubtreeImpl impl;\n \n   auto encoded = impl.EncodeFragments(fragments_);\n \n-  std::sort(encoded.begin(), encoded.end(),\n-            [](const SubtreeImpl::Encoded& l, const SubtreeImpl::Encoded& r) {\n-              const auto cmp = l.partition_expression.compare(r.partition_expression);\n-              if (cmp != 0) {\n-                return cmp < 0;\n-              }\n-              // Equal partition expressions; sort encodings with fragment indices after\n-              // encodings without\n-              return (l.fragment_index ? 1 : 0) < (r.fragment_index ? 1 : 0);\n-            });\n+  std::sort(\n+      encoded.begin(), encoded.end(),\n+      [](const compute::SubtreeImpl::Encoded& l, const compute::SubtreeImpl::Encoded& r) {\n\nReview comment:\n       Since this sort doesn't refer to anything in this scope it should move into SubtreeImpl. Otherwise other consumers of SubtreeImpl would need to reiterate the sort\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-02T16:27:21.465+0000",
                    "updated": "2021-07-02T16:27:21.465+0000",
                    "started": "2021-07-02T16:27:21.465+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "618174",
                    "issueId": "13380759"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380759/worklog/618635",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10484:\nURL: https://github.com/apache/arrow/pull/10484#discussion_r663907887\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/forest_internal.h\n##########\n@@ -21,15 +21,16 @@\n #include <utility>\n #include <vector>\n \n-#include \"arrow/dataset/visibility.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/status.h\"\n \n namespace arrow {\n-namespace dataset {\n+namespace compute {\n \n /// A Forest is a view of a sorted range which carries an ancestry relation in addition\n /// to an ordering relation: each element's descendants appear directly after it.\n /// This can be used to efficiently skip subtrees when iterating through the range.\n-class ARROW_DS_EXPORT Forest {\n+class Forest {\n\nReview comment:\n       The MSVC2015 linker gets really unhappy with this:\r\n   \r\n   ```\r\n   unity_0_cxx.cxx.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) public: __cdecl arrow::compute::Forest::Forest(int,class std::function<bool __cdecl(int,int)>)\" (__imp_??0Forest@compute@arrow@@QEAA@HV?$function@$$A6A_NHH@Z@std@@@Z) referenced in function \"class arrow::compute::Forest __cdecl arrow::compute::MakeForest(class std::vector<struct arrow::compute::FileInfo,class std::allocator<struct arrow::compute::FileInfo> > *)\" (?MakeForest@compute@arrow@@YA?AVForest@12@PEAV?$vector@UFileInfo@compute@arrow@@V?$allocator@UFileInfo@compute@arrow@@@std@@@std@@@Z)\r\n   unity_0_cxx.cxx.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) public: int __cdecl arrow::compute::Forest::size(void)const \" (__imp_?size@Forest@compute@arrow@@QEBAHXZ) referenced in function \"private: virtual void __cdecl arrow::compute::Forest_Visit_Test::TestBody(void)\" (?TestBody@Forest_Visit_Test@compute@arrow@@EEAAXXZ)\r\n   unity_0_cxx.cxx.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) public: struct arrow::compute::Forest::Ref __cdecl arrow::compute::Forest::operator[](int)const \" (__imp_??AForest@compute@arrow@@QEBA?AURef@012@H@Z) referenced in function \"public: __cdecl arrow::compute::TestPathTree::TestPathTree(struct arrow::compute::Forest::Ref,class std::vector<struct arrow::compute::FileInfo,class std::allocator<struct arrow::compute::FileInfo> > const &)\" (??0TestPathTree@compute@arrow@@QEAA@URef@Forest@12@AEBV?$vector@UFileInfo@compute@arrow@@V?$allocator@UFileInfo@compute@arrow@@@std@@@std@@@Z)\r\n   unity_0_cxx.cxx.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) public: __cdecl arrow::compute::Forest::~Forest(void)\" (__imp_??1Forest@compute@arrow@@QEAA@XZ) referenced in function \"void __cdecl arrow::compute::ExpectForestIs(class std::vector<struct arrow::compute::FileInfo,class std::allocator<struct arrow::compute::FileInfo> >,class std::vector<struct arrow::compute::TestPathTree,class std::allocator<struct arrow::compute::TestPathTree> >)\" (?ExpectForestIs@compute@arrow@@YAXV?$vector@UFileInfo@compute@arrow@@V?$allocator@UFileInfo@compute@arrow@@@std@@@std@@V?$vector@UTestPathTree@compute@arrow@@V?$allocator@UTestPathTree@compute@arrow@@@std@@@4@@Z)\r\n   release\\arrow-compute-expression-test.exe : fatal error LNK1120: 4 unresolved externals\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-05T12:52:01.367+0000",
                    "updated": "2021-07-05T12:52:01.367+0000",
                    "started": "2021-07-05T12:52:01.367+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "618635",
                    "issueId": "13380759"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380759/worklog/619019",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10484:\nURL: https://github.com/apache/arrow/pull/10484#discussion_r663907887\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/forest_internal.h\n##########\n@@ -21,15 +21,16 @@\n #include <utility>\n #include <vector>\n \n-#include \"arrow/dataset/visibility.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/status.h\"\n \n namespace arrow {\n-namespace dataset {\n+namespace compute {\n \n /// A Forest is a view of a sorted range which carries an ancestry relation in addition\n /// to an ordering relation: each element's descendants appear directly after it.\n /// This can be used to efficiently skip subtrees when iterating through the range.\n-class ARROW_DS_EXPORT Forest {\n+class Forest {\n\nReview comment:\n       The MSVC2015 linker gets really unhappy with this:\r\n   \r\n   ```\r\n   unity_0_cxx.cxx.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) public: __cdecl arrow::compute::Forest::Forest(int,class std::function<bool __cdecl(int,int)>)\" (__imp_??0Forest@compute@arrow@@QEAA@HV?$function@$$A6A_NHH@Z@std@@@Z) referenced in function \"class arrow::compute::Forest __cdecl arrow::compute::MakeForest(class std::vector<struct arrow::compute::FileInfo,class std::allocator<struct arrow::compute::FileInfo> > *)\" (?MakeForest@compute@arrow@@YA?AVForest@12@PEAV?$vector@UFileInfo@compute@arrow@@V?$allocator@UFileInfo@compute@arrow@@@std@@@std@@@Z)\r\n   unity_0_cxx.cxx.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) public: int __cdecl arrow::compute::Forest::size(void)const \" (__imp_?size@Forest@compute@arrow@@QEBAHXZ) referenced in function \"private: virtual void __cdecl arrow::compute::Forest_Visit_Test::TestBody(void)\" (?TestBody@Forest_Visit_Test@compute@arrow@@EEAAXXZ)\r\n   unity_0_cxx.cxx.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) public: struct arrow::compute::Forest::Ref __cdecl arrow::compute::Forest::operator[](int)const \" (__imp_??AForest@compute@arrow@@QEBA?AURef@012@H@Z) referenced in function \"public: __cdecl arrow::compute::TestPathTree::TestPathTree(struct arrow::compute::Forest::Ref,class std::vector<struct arrow::compute::FileInfo,class std::allocator<struct arrow::compute::FileInfo> > const &)\" (??0TestPathTree@compute@arrow@@QEAA@URef@Forest@12@AEBV?$vector@UFileInfo@compute@arrow@@V?$allocator@UFileInfo@compute@arrow@@@std@@@std@@@Z)\r\n   unity_0_cxx.cxx.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) public: __cdecl arrow::compute::Forest::~Forest(void)\" (__imp_??1Forest@compute@arrow@@QEAA@XZ) referenced in function \"void __cdecl arrow::compute::ExpectForestIs(class std::vector<struct arrow::compute::FileInfo,class std::allocator<struct arrow::compute::FileInfo> >,class std::vector<struct arrow::compute::TestPathTree,class std::allocator<struct arrow::compute::TestPathTree> >)\" (?ExpectForestIs@compute@arrow@@YAXV?$vector@UFileInfo@compute@arrow@@V?$allocator@UFileInfo@compute@arrow@@@std@@@std@@V?$vector@UTestPathTree@compute@arrow@@V?$allocator@UTestPathTree@compute@arrow@@@std@@@4@@Z)\r\n   release\\arrow-compute-expression-test.exe : fatal error LNK1120: 4 unresolved externals\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T11:01:54.008+0000",
                    "updated": "2021-07-06T11:01:54.008+0000",
                    "started": "2021-07-06T11:01:54.007+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619019",
                    "issueId": "13380759"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380759/worklog/619574",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz closed pull request #10484:\nURL: https://github.com/apache/arrow/pull/10484\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T19:27:48.635+0000",
                    "updated": "2021-07-06T19:27:48.635+0000",
                    "started": "2021-07-06T19:27:48.635+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619574",
                    "issueId": "13380759"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 3600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@52b0604f[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@20a80d25[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@46ad5a01[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@260ca6d4[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1aa1ca71[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7a1a8880[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@56cbb890[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@15328e9b[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1d42c0e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2fa4ea3c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@24a0c860[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@25e7cc39[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 3600,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jul 06 19:27:41 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-07-06T19:27:41.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12891/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-05-27T12:14:51.000+0000",
        "updated": "2021-07-06T19:27:49.000+0000",
        "timeoriginalestimate": null,
        "description": "Subtree pruning need not reference fragments or anything else in dataset::, so it should be extracted to the compute namespace and be unit tested alongside Expression",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 3600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Compute][Dataset] Extract subtree pruning logic to compute::",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380759/comment/17375963",
                    "id": "17375963",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 10484\n[https://github.com/apache/arrow/pull/10484]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-07-06T19:27:41.597+0000",
                    "updated": "2021-07-06T19:27:41.597+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0rffc:",
        "customfield_12314139": null
    }
}