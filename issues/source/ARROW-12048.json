{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13366819",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366819",
    "key": "ARROW-12048",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349493",
                "id": "12349493",
                "description": "",
                "name": "4.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-04-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=Dandandan",
            "name": "Dandandan",
            "key": "dandandan",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Dani\u00ebl Heres",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12335005",
                "id": "12335005",
                "name": "Rust - DataFusion"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=Dandandan",
            "name": "Dandandan",
            "key": "dandandan",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Dani\u00ebl Heres",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=Dandandan",
            "name": "Dandandan",
            "key": "dandandan",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Dani\u00ebl Heres",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12048/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 12,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366819/worklog/570036",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan opened a new pull request #9776:\nURL: https://github.com/apache/arrow/pull/9776\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-22T20:43:57.847+0000",
                    "updated": "2021-03-22T20:43:57.847+0000",
                    "started": "2021-03-22T20:43:57.847+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "570036",
                    "issueId": "13366819"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366819/worklog/570071",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9776:\nURL: https://github.com/apache/arrow/pull/9776#issuecomment-804416180\n\n\n   https://issues.apache.org/jira/browse/ARROW-12048\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-22T21:44:36.337+0000",
                    "updated": "2021-03-22T21:44:36.337+0000",
                    "started": "2021-03-22T21:44:36.337+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "570071",
                    "issueId": "13366819"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366819/worklog/570265",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #9776:\nURL: https://github.com/apache/arrow/pull/9776#discussion_r599302014\n\n\n\n##########\nFile path: rust/datafusion/src/sql/planner.rs\n##########\n@@ -114,7 +115,17 @@ impl<'a, S: ContextProvider> SqlToRel<'a, S> {\n         alias: Option<String>,\n     ) -> Result<LogicalPlan> {\n         let set_expr = &query.body;\n-        let plan = self.set_expr_to_plan(set_expr, alias)?;\n+        let ctes: HashMap<String, Query> = query\n+            .clone()\n+            .with\n+            .map(|with| {\n+                with.cte_tables\n\nReview comment:\n       This needs to be converted to a logical plan here already and only allow backward references\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-23T06:31:56.177+0000",
                    "updated": "2021-03-23T06:31:56.177+0000",
                    "started": "2021-03-23T06:31:56.177+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "570265",
                    "issueId": "13366819"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366819/worklog/570820",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #9776:\nURL: https://github.com/apache/arrow/pull/9776#discussion_r599994379\n\n\n\n##########\nFile path: rust/datafusion/tests/sql.rs\n##########\n@@ -1940,6 +1940,56 @@ async fn query_without_from() -> Result<()> {\n     Ok(())\n }\n \n+#[tokio::test]\n+async fn query_cte() -> Result<()> {\n+    // Test for SELECT <expression> without FROM.\n+    // Should evaluate expressions in project position.\n+    let mut ctx = ExecutionContext::new();\n+\n+    // simple with\n+    let sql = \"WITH t AS (SELECT 1) SELECT * FROM t\";\n+    let actual = execute(&mut ctx, sql).await;\n+    let expected = vec![vec![\"1\"]];\n+    assert_eq!(expected, actual);\n+\n+    // with + union\n+    let sql = \"WITH t AS (SELECT 1 AS a), u AS (SELECT 2 AS a) SELECT * FROM t UNION ALL SELECT * FROM u\";\n+    let actual = execute(&mut ctx, sql).await;\n+    let expected = vec![vec![\"1\"], vec![\"2\"]];\n+    assert_eq!(expected, actual);\n+\n+    // with + join\n+    let sql = \"WITH t AS (SELECT 1 AS id1), u AS (SELECT 1 AS id2, 5 as x) SELECT x FROM t JOIN u ON (id1 = id2)\";\n+    let actual = execute(&mut ctx, sql).await;\n+    let expected = vec![vec![\"5\"]];\n+    assert_eq!(expected, actual);\n+\n+    // backward reference\n+    let sql = \"WITH t AS (SELECT 1 AS id1), u AS (SELECT * FROM t) SELECT * from u\";\n+    let actual = execute(&mut ctx, sql).await;\n+    let expected = vec![vec![\"1\"]];\n+    assert_eq!(expected, actual);\n+\n+    Ok(())\n+}\n+\n+#[tokio::test]\n+async fn query_cte_incorrect() -> Result<()> {\n+    let ctx = ExecutionContext::new();\n+\n+    // self reference\n+    let sql = \"WITH t AS (SELECT * FROM t) SELECT * from u\";\n+    let plan = ctx.create_logical_plan(&sql);\n+    assert!(plan.is_err());\n+\n+    // forward referencing\n+    let sql = \"WITH t AS (SELECT * FROM u), u AS (SELECT 1) SELECT * from u\";\n+    let plan = ctx.create_logical_plan(&sql);\n+    assert!(plan.is_err());\n\nReview comment:\n       Out of curiosity, what is the error message here? Is it worth asserting about its content?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-23T22:17:26.785+0000",
                    "updated": "2021-03-23T22:17:26.785+0000",
                    "started": "2021-03-23T22:17:26.784+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "570820",
                    "issueId": "13366819"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366819/worklog/570821",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #9776:\nURL: https://github.com/apache/arrow/pull/9776#issuecomment-805303051\n\n\n   Thank you for this @Dandandan ! I plan to review this carefully tomorrow\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-23T22:17:29.658+0000",
                    "updated": "2021-03-23T22:17:29.658+0000",
                    "started": "2021-03-23T22:17:29.658+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "570821",
                    "issueId": "13366819"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366819/worklog/570838",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #9776:\nURL: https://github.com/apache/arrow/pull/9776#discussion_r600001227\n\n\n\n##########\nFile path: rust/datafusion/tests/sql.rs\n##########\n@@ -1940,6 +1940,56 @@ async fn query_without_from() -> Result<()> {\n     Ok(())\n }\n \n+#[tokio::test]\n+async fn query_cte() -> Result<()> {\n+    // Test for SELECT <expression> without FROM.\n+    // Should evaluate expressions in project position.\n+    let mut ctx = ExecutionContext::new();\n+\n+    // simple with\n+    let sql = \"WITH t AS (SELECT 1) SELECT * FROM t\";\n+    let actual = execute(&mut ctx, sql).await;\n+    let expected = vec![vec![\"1\"]];\n+    assert_eq!(expected, actual);\n+\n+    // with + union\n+    let sql = \"WITH t AS (SELECT 1 AS a), u AS (SELECT 2 AS a) SELECT * FROM t UNION ALL SELECT * FROM u\";\n+    let actual = execute(&mut ctx, sql).await;\n+    let expected = vec![vec![\"1\"], vec![\"2\"]];\n+    assert_eq!(expected, actual);\n+\n+    // with + join\n+    let sql = \"WITH t AS (SELECT 1 AS id1), u AS (SELECT 1 AS id2, 5 as x) SELECT x FROM t JOIN u ON (id1 = id2)\";\n+    let actual = execute(&mut ctx, sql).await;\n+    let expected = vec![vec![\"5\"]];\n+    assert_eq!(expected, actual);\n+\n+    // backward reference\n+    let sql = \"WITH t AS (SELECT 1 AS id1), u AS (SELECT * FROM t) SELECT * from u\";\n+    let actual = execute(&mut ctx, sql).await;\n+    let expected = vec![vec![\"1\"]];\n+    assert_eq!(expected, actual);\n+\n+    Ok(())\n+}\n+\n+#[tokio::test]\n+async fn query_cte_incorrect() -> Result<()> {\n+    let ctx = ExecutionContext::new();\n+\n+    // self reference\n+    let sql = \"WITH t AS (SELECT * FROM t) SELECT * from u\";\n+    let plan = ctx.create_logical_plan(&sql);\n+    assert!(plan.is_err());\n+\n+    // forward referencing\n+    let sql = \"WITH t AS (SELECT * FROM u), u AS (SELECT 1) SELECT * from u\";\n+    let plan = ctx.create_logical_plan(&sql);\n+    assert!(plan.is_err());\n\nReview comment:\n       Slightly changed the error message + added tests for this:\r\n   error message is now: `Table or CTE with name 'u' not found`.\r\n   \r\n   With some extra code it could detect maybe that it is forward referencing to provide a better user experience.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-23T22:30:06.226+0000",
                    "updated": "2021-03-23T22:30:06.226+0000",
                    "started": "2021-03-23T22:30:06.225+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "570838",
                    "issueId": "13366819"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366819/worklog/570957",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #9776:\nURL: https://github.com/apache/arrow/pull/9776#discussion_r600195534\n\n\n\n##########\nFile path: rust/datafusion/src/sql/planner.rs\n##########\n@@ -103,17 +104,31 @@ impl<'a, S: ContextProvider> SqlToRel<'a, S> {\n \n     /// Generate a logic plan from an SQL query\n     pub fn query_to_plan(&self, query: &Query) -> Result<LogicalPlan> {\n-        self.query_to_plan_with_alias(query, None)\n+        self.query_to_plan_with_alias(query, None, &mut HashMap::new())\n     }\n \n     /// Generate a logic plan from an SQL query with optional alias\n     pub fn query_to_plan_with_alias(\n         &self,\n         query: &Query,\n         alias: Option<String>,\n+        ctes: &mut HashMap<String, LogicalPlan>,\n     ) -> Result<LogicalPlan> {\n         let set_expr = &query.body;\n-        let plan = self.set_expr_to_plan(set_expr, alias)?;\n+        if let Some(with) = &query.with {\n+            // Process CTEs from top to bottom\n+            // do not allow self-references\n+            for cte in &with.cte_tables {\n+                // create logical plan & pass backreferencing CTEs\n+                let logical_plan = self.query_to_plan_with_alias(\n+                    &cte.query,\n+                    Some(cte.alias.name.value.clone()),\n+                    &mut ctes.clone(),\n\nReview comment:\n       This clone is now relatively inefficient for very long and/or deep ctes.\r\n   \r\n   Two (common) solutions I see for this problem.\r\n   * use an immutable HashMap (O(1) clone, easier to program), example: https://docs.rs/im/15.0.0/im/struct.HashMap.html\r\n   * use something like \"frames\", e.g. `Vec<HashMap<String, LogicalPlan>>`  -> when looking up a reference first look up level 0, level-1, level -2, etc.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-24T06:02:30.678+0000",
                    "updated": "2021-03-24T06:02:30.678+0000",
                    "started": "2021-03-24T06:02:30.677+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "570957",
                    "issueId": "13366819"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366819/worklog/570959",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #9776:\nURL: https://github.com/apache/arrow/pull/9776#discussion_r600195534\n\n\n\n##########\nFile path: rust/datafusion/src/sql/planner.rs\n##########\n@@ -103,17 +104,31 @@ impl<'a, S: ContextProvider> SqlToRel<'a, S> {\n \n     /// Generate a logic plan from an SQL query\n     pub fn query_to_plan(&self, query: &Query) -> Result<LogicalPlan> {\n-        self.query_to_plan_with_alias(query, None)\n+        self.query_to_plan_with_alias(query, None, &mut HashMap::new())\n     }\n \n     /// Generate a logic plan from an SQL query with optional alias\n     pub fn query_to_plan_with_alias(\n         &self,\n         query: &Query,\n         alias: Option<String>,\n+        ctes: &mut HashMap<String, LogicalPlan>,\n     ) -> Result<LogicalPlan> {\n         let set_expr = &query.body;\n-        let plan = self.set_expr_to_plan(set_expr, alias)?;\n+        if let Some(with) = &query.with {\n+            // Process CTEs from top to bottom\n+            // do not allow self-references\n+            for cte in &with.cte_tables {\n+                // create logical plan & pass backreferencing CTEs\n+                let logical_plan = self.query_to_plan_with_alias(\n+                    &cte.query,\n+                    Some(cte.alias.name.value.clone()),\n+                    &mut ctes.clone(),\n\nReview comment:\n       This clone is now relatively inefficient for very long and/or deep ctes.\r\n   \r\n   Solutions I see for this problem.\r\n   * use an immutable HashMap (O(1) clone, easier to program), example: https://docs.rs/im/15.0.0/im/struct.HashMap.html\r\n   * use something like \"frames\", e.g. `Vec<HashMap<String, LogicalPlan>>`  -> when looking up a reference first look up level 0, level-1, level -2, etc.\r\n   * cleanup the variables before returning (removing / replacing the old references)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-24T06:13:22.800+0000",
                    "updated": "2021-03-24T06:13:22.800+0000",
                    "started": "2021-03-24T06:13:22.800+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "570959",
                    "issueId": "13366819"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366819/worklog/570968",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #9776:\nURL: https://github.com/apache/arrow/pull/9776#discussion_r600216623\n\n\n\n##########\nFile path: rust/datafusion/tests/sql.rs\n##########\n@@ -1940,6 +1940,56 @@ async fn query_without_from() -> Result<()> {\n     Ok(())\n }\n \n+#[tokio::test]\n+async fn query_cte() -> Result<()> {\n+    // Test for SELECT <expression> without FROM.\n+    // Should evaluate expressions in project position.\n+    let mut ctx = ExecutionContext::new();\n+\n+    // simple with\n+    let sql = \"WITH t AS (SELECT 1) SELECT * FROM t\";\n+    let actual = execute(&mut ctx, sql).await;\n+    let expected = vec![vec![\"1\"]];\n+    assert_eq!(expected, actual);\n+\n+    // with + union\n+    let sql = \"WITH t AS (SELECT 1 AS a), u AS (SELECT 2 AS a) SELECT * FROM t UNION ALL SELECT * FROM u\";\n+    let actual = execute(&mut ctx, sql).await;\n+    let expected = vec![vec![\"1\"], vec![\"2\"]];\n+    assert_eq!(expected, actual);\n+\n+    // with + join\n+    let sql = \"WITH t AS (SELECT 1 AS id1), u AS (SELECT 1 AS id2, 5 as x) SELECT x FROM t JOIN u ON (id1 = id2)\";\n+    let actual = execute(&mut ctx, sql).await;\n+    let expected = vec![vec![\"5\"]];\n+    assert_eq!(expected, actual);\n+\n+    // backward reference\n+    let sql = \"WITH t AS (SELECT 1 AS id1), u AS (SELECT * FROM t) SELECT * from u\";\n+    let actual = execute(&mut ctx, sql).await;\n+    let expected = vec![vec![\"1\"]];\n+    assert_eq!(expected, actual);\n+\n+    Ok(())\n+}\n+\n+#[tokio::test]\n+async fn query_cte_incorrect() -> Result<()> {\n+    let ctx = ExecutionContext::new();\n+\n+    // self reference\n+    let sql = \"WITH t AS (SELECT * FROM t) SELECT * from u\";\n+    let plan = ctx.create_logical_plan(&sql);\n+    assert!(plan.is_err());\n+\n+    // forward referencing\n+    let sql = \"WITH t AS (SELECT * FROM u), u AS (SELECT 1) SELECT * from u\";\n+    let plan = ctx.create_logical_plan(&sql);\n+    assert!(plan.is_err());\n\nReview comment:\n       FWIW, postgresql just errors with a similar `reference 'u' not found`\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-24T06:58:01.120+0000",
                    "updated": "2021-03-24T06:58:01.120+0000",
                    "started": "2021-03-24T06:58:01.120+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "570968",
                    "issueId": "13366819"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366819/worklog/570999",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #9776:\nURL: https://github.com/apache/arrow/pull/9776#discussion_r600195534\n\n\n\n##########\nFile path: rust/datafusion/src/sql/planner.rs\n##########\n@@ -103,17 +104,31 @@ impl<'a, S: ContextProvider> SqlToRel<'a, S> {\n \n     /// Generate a logic plan from an SQL query\n     pub fn query_to_plan(&self, query: &Query) -> Result<LogicalPlan> {\n-        self.query_to_plan_with_alias(query, None)\n+        self.query_to_plan_with_alias(query, None, &mut HashMap::new())\n     }\n \n     /// Generate a logic plan from an SQL query with optional alias\n     pub fn query_to_plan_with_alias(\n         &self,\n         query: &Query,\n         alias: Option<String>,\n+        ctes: &mut HashMap<String, LogicalPlan>,\n     ) -> Result<LogicalPlan> {\n         let set_expr = &query.body;\n-        let plan = self.set_expr_to_plan(set_expr, alias)?;\n+        if let Some(with) = &query.with {\n+            // Process CTEs from top to bottom\n+            // do not allow self-references\n+            for cte in &with.cte_tables {\n+                // create logical plan & pass backreferencing CTEs\n+                let logical_plan = self.query_to_plan_with_alias(\n+                    &cte.query,\n+                    Some(cte.alias.name.value.clone()),\n+                    &mut ctes.clone(),\n\nReview comment:\n       This clone is now relatively inefficient for very long and/or deep ctes.\r\n   \r\n   Solutions I see for this problem.\r\n   * use an immutable HashMap (O(1) clone, easier to program), example: https://docs.rs/im/15.0.0/im/struct.HashMap.html\r\n   * use something like \"frames\", e.g. `Vec<HashMap<String, LogicalPlan>>`  -> when looking up a reference first look up level 0, level-1, level -2, etc.\r\n   * cleanup the variables before returning (removing / replacing the added references)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-24T08:46:44.726+0000",
                    "updated": "2021-03-24T08:46:44.726+0000",
                    "started": "2021-03-24T08:46:44.726+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "570999",
                    "issueId": "13366819"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366819/worklog/571320",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #9776:\nURL: https://github.com/apache/arrow/pull/9776#discussion_r600686278\n\n\n\n##########\nFile path: rust/datafusion/src/sql/planner.rs\n##########\n@@ -103,17 +104,31 @@ impl<'a, S: ContextProvider> SqlToRel<'a, S> {\n \n     /// Generate a logic plan from an SQL query\n     pub fn query_to_plan(&self, query: &Query) -> Result<LogicalPlan> {\n-        self.query_to_plan_with_alias(query, None)\n+        self.query_to_plan_with_alias(query, None, &mut HashMap::new())\n     }\n \n     /// Generate a logic plan from an SQL query with optional alias\n     pub fn query_to_plan_with_alias(\n         &self,\n         query: &Query,\n         alias: Option<String>,\n+        ctes: &mut HashMap<String, LogicalPlan>,\n     ) -> Result<LogicalPlan> {\n         let set_expr = &query.body;\n-        let plan = self.set_expr_to_plan(set_expr, alias)?;\n+        if let Some(with) = &query.with {\n+            // Process CTEs from top to bottom\n+            // do not allow self-references\n+            for cte in &with.cte_tables {\n+                // create logical plan & pass backreferencing CTEs\n+                let logical_plan = self.query_to_plan_with_alias(\n+                    &cte.query,\n+                    Some(cte.alias.name.value.clone()),\n+                    &mut ctes.clone(),\n\nReview comment:\n       I think the `frames` idea makes the most sense to me -- namely a stack\r\n   \r\n   We can handle it in the future if/when it shows itself to be a problem\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-24T17:09:24.107+0000",
                    "updated": "2021-03-24T17:09:24.107+0000",
                    "started": "2021-03-24T17:09:24.107+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "571320",
                    "issueId": "13366819"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366819/worklog/571321",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb closed pull request #9776:\nURL: https://github.com/apache/arrow/pull/9776\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-24T17:09:47.284+0000",
                    "updated": "2021-03-24T17:09:47.284+0000",
                    "started": "2021-03-24T17:09:47.283+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "571321",
                    "issueId": "13366819"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 7200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@460e1439[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@d45e95c[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@60d0eddf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@42fde790[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6c988fa[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1c3d7adc[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7b64c291[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@56086b0a[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1c4ca769[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6bd0d5a6[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@36fde207[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@23388fe9[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 7200,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Mar 24 17:09:42 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-03-24T17:09:42.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12048/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-03-22T20:43:24.000+0000",
        "updated": "2021-03-24T17:09:48.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 7200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust][DataFusion] Support Common Table Expressions",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366819/comment/17308016",
                    "id": "17308016",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 9776\n[https://github.com/apache/arrow/pull/9776]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-03-24T17:09:42.893+0000",
                    "updated": "2021-03-24T17:09:42.893+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0p27c:",
        "customfield_12314139": null
    }
}