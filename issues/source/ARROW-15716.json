{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13429132",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13429132",
    "key": "ARROW-15716",
    "fields": {
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
            "name": "vibhatha",
            "key": "vibhatha",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Vibhatha Lakmal Abeykoon",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/3",
            "description": "This issue is being actively worked on at the moment by the assignee.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/inprogress.png",
            "name": "In Progress",
            "id": "3",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/4",
                "id": 4,
                "key": "indeterminate",
                "colorName": "yellow",
                "name": "In Progress"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ldacey",
            "name": "ldacey",
            "key": "ldacey",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Lance Dacey",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ldacey",
            "name": "ldacey",
            "key": "ldacey",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Lance Dacey",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 6000,
            "total": 6000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6000,
            "total": 6000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15716/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 10,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13429132/worklog/826000",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha opened a new pull request, #14641:\nURL: https://github.com/apache/arrow/pull/14641\n\n   Updated `parse` function in `Partitioning` to accept a list of paths and produce a single expression.\n\n\n",
                    "created": "2022-11-15T06:48:25.177+0000",
                    "updated": "2022-11-15T06:48:25.177+0000",
                    "started": "2022-11-15T06:48:25.176+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "826000",
                    "issueId": "13429132"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13429132/worklog/826002",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #14641:\nURL: https://github.com/apache/arrow/pull/14641#issuecomment-1314850629\n\n   https://issues.apache.org/jira/browse/ARROW-15716\n\n\n",
                    "created": "2022-11-15T06:48:45.804+0000",
                    "updated": "2022-11-15T06:48:45.804+0000",
                    "started": "2022-11-15T06:48:45.803+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "826002",
                    "issueId": "13429132"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13429132/worklog/826003",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #14641:\nURL: https://github.com/apache/arrow/pull/14641#issuecomment-1314850659\n\n   :warning: Ticket **has not been started in JIRA**, please click 'Start Progress'.\n\n\n",
                    "created": "2022-11-15T06:48:47.710+0000",
                    "updated": "2022-11-15T06:48:47.710+0000",
                    "started": "2022-11-15T06:48:47.710+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "826003",
                    "issueId": "13429132"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13429132/worklog/826061",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on PR #14641:\nURL: https://github.com/apache/arrow/pull/14641#issuecomment-1315047402\n\n   See also my last comment on the JIRA. Since this is essentially doing `functools.reduce(operator.or_, [partitioning.parse(file) for file in paths])` (as there is no further simplification), I am not sure it is worth adding this capability to `parse()` instead of having the user do this reduce manually.\n\n\n",
                    "created": "2022-11-15T09:41:16.164+0000",
                    "updated": "2022-11-15T09:41:16.164+0000",
                    "started": "2022-11-15T09:41:16.164+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "826061",
                    "issueId": "13429132"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13429132/worklog/826106",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on PR #14641:\nURL: https://github.com/apache/arrow/pull/14641#issuecomment-1315200552\n\n   > See also my last comment on the JIRA. Since this is essentially doing `functools.reduce(operator.or_, [partitioning.parse(file) for file in paths])` (as there is no further simplification), I am not sure it is worth adding this capability to `parse()` instead of having the user do this reduce manually.\r\n   \r\n   I agree with you. If you take a look at my examples in the thread itself, I also shows the same intent for the user to do it themselves. I only added this piece as a helper. I also have doubt if it is actually worth it. \r\n   \r\n   cc @westonpace WDYT?\n\n\n",
                    "created": "2022-11-15T11:50:50.347+0000",
                    "updated": "2022-11-15T11:50:50.347+0000",
                    "started": "2022-11-15T11:50:50.346+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "826106",
                    "issueId": "13429132"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13429132/worklog/826140",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ldacey commented on PR #14641:\nURL: https://github.com/apache/arrow/pull/14641#issuecomment-1315331226\n\n   This works for me, I can run the functools reduce (that simplifies what I have).\r\n   \r\n   Some things I want to make sure:\r\n   \r\n   ```\r\n   paths = [\r\n        'path/to/data/month_id=202105/part-0.parquet',\r\n        'path/to/data/month_id=202106/part-0.parquet',\r\n        'path/to/data/month_id=202107/part-0.parquet',\r\n        'path/to/data/month_id=202107/part-1.parquet',\r\n        'path/to/data/month_id=202107/part-2.parquet',\r\n   ]\r\n   reduce(operator.or_, [partitioning.parse(file) for file in paths])\r\n   \r\n   <pyarrow.compute.Expression (((((month_id == 202105) or (month_id == 202106)) or \r\n   (month_id == 202107)) or (month_id == 202107)) or (month_id == 202107))>\r\n   ```\r\n   \r\n   \r\n   1. Do I need to worry about there being multiple filters for 202107 in that expression? In my example, there are 3 fragments in that partition.\r\n   2. There is no benefit in using `.isin()` for a single partition compared to `or`, right? In terms of performance/efficiency they are the same?\r\n   \r\n   ```\r\n   <pyarrow.compute.Expression is_in(month_id, {value_set=int64:[\r\n     202105,\r\n     202106,\r\n     202107\r\n   ], skip_nulls=false})>\r\n   ```\n\n\n",
                    "created": "2022-11-15T13:45:27.572+0000",
                    "updated": "2022-11-15T13:45:27.572+0000",
                    "started": "2022-11-15T13:45:27.572+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "826140",
                    "issueId": "13429132"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13429132/worklog/826178",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on PR #14641:\nURL: https://github.com/apache/arrow/pull/14641#issuecomment-1315460858\n\n   > Do I need to worry about there being multiple filters for 202107 in that expression? In my example, there are 3 fragments in that partition.\r\n   \r\n   I don't think you really have to worry about that (it won't change behaviour), although it might make a bit less efficient to apply the filter (not sure by heart).\r\n   \r\n   > 2\\. There is no benefit in using `.isin()` for a single partition compared to `or`, right? In terms of performance/efficiency they are the same?\r\n   \r\n   In general, I think an `isin` filter will certainly be more efficient than the equivalent with multiple boolean comparisons (that's one of the goals for having `isin`). \r\n   But that's when talking about applying such a filter to actual, materialized data. In the specific case where this filter only applies to partitioning fields, I suppose the situation is different. I am actually not fully sure if the code to evaluate pushdown filters would actually understand an `isin` kernel. I _think_ this is handled in `SimplifyWithGuarantee`:\r\n   \r\n   https://github.com/apache/arrow/blob/058d4f697a06477539e7f9ccf3e7c035f8cfbc5e/cpp/src/arrow/compute/exec/expression.cc#L1144-L1188\r\n   \n\n\n",
                    "created": "2022-11-15T15:18:49.627+0000",
                    "updated": "2022-11-15T15:18:49.627+0000",
                    "started": "2022-11-15T15:18:49.627+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "826178",
                    "issueId": "13429132"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13429132/worklog/826426",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on PR #14641:\nURL: https://github.com/apache/arrow/pull/14641#issuecomment-1316471121\n\n   > I am actually not fully sure if the code to evaluate pushdown filters would actually understand an isin kernel. I think this is handled in SimplifyWithGuarantee:\r\n   \r\n   I'm pretty sure this is correct.  The pushdown filtering is more primitive and only understands <, ==, > (and maybe != and is_valid / is_null?)\n\n\n",
                    "created": "2022-11-16T06:59:34.201+0000",
                    "updated": "2022-11-16T06:59:34.201+0000",
                    "started": "2022-11-16T06:59:34.200+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "826426",
                    "issueId": "13429132"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13429132/worklog/826431",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on PR #14641:\nURL: https://github.com/apache/arrow/pull/14641#issuecomment-1316485067\n\n   Should we close this PR? I also think handling things externally using the existing APIs is fine for the job.\n\n\n",
                    "created": "2022-11-16T07:14:13.705+0000",
                    "updated": "2022-11-16T07:14:13.705+0000",
                    "started": "2022-11-16T07:14:13.705+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "826431",
                    "issueId": "13429132"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13429132/worklog/826539",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ldacey commented on PR #14641:\nURL: https://github.com/apache/arrow/pull/14641#issuecomment-1317139268\n\n   > > I am actually not fully sure if the code to evaluate pushdown filters would actually understand an isin kernel. I think this is handled in SimplifyWithGuarantee:\r\n   > \r\n   \r\n   I have historically been consolidated a single .isin() expression if my dataset has 1 partition since I assumed it should be faster/better. \r\n   \r\n   ```\r\n   Consolidated dataset filter: {'month_id': [202105, 202106, 202107]}\r\n   \r\n   <pyarrow.compute.Expression is_in(month_id, {value_set=int64:[\r\n     202105,\r\n     202106,\r\n     202107\r\n   ], skip_nulls=false})>\r\n   ```\r\n   \r\n   But if it is fine to use OR (and potentially have duplicate filters in cases where multiple fragments were saved to 1 partition), then I am fine with that. It sounds like a chain of OR filters might be used anyways.\r\n   \r\n   I think we can close this then. The reduce method above will cut out a lot of my custom, messy code. I currently have several functions preparing the expression for me (the consolidate_dictionary() removes the duplicate partitions from ds._get_partition_keys).\r\n   \r\n   ```\r\n       def consolidate_expressions(\r\n           self, expressions: list[ds.Expression], partition_count: int\r\n       ) -> dict | list[dict]:\r\n           \"\"\"Consolidates the values of a multiple filters into a single list\r\n   \r\n           Args:\r\n               expressions: Partitioning expressions\r\n               partition_count: Number of partition columns\r\n   \r\n           Returns:\r\n               Consolidate dictionary filter such as {'date_id': [20220507, 20220514]}\r\n           \"\"\"\r\n           filters = [ds._get_partition_keys(exp) for exp in expressions]\r\n           if partition_count == 1:\r\n               filters = consolidate_dictionary(filters)\r\n           return filters\r\n   \r\n       @staticmethod\r\n       def multiple_partition_filter(\r\n           partitions: list[dict] | dict,\r\n       ) -> list[list[tuple[str, str, Any]]]:\r\n           \"\"\"Consolidates filters into a single list which has lists of tuples such as\r\n               [[(\"date_id\", \"==\", 20201231)], [(\"date_id\", \"==\", 20210217)]]\r\n   \r\n           Args:\r\n               partitions: Dataset partition keys\r\n           \"\"\"\r\n           filters = []\r\n           for part in partitions:\r\n               element = [(k, \"==\", v) for k, v in part.items()]\r\n               if element not in filters:\r\n                   filters.append(element)\r\n           return filters\r\n   \r\n       @staticmethod\r\n       def single_partition_filter(\r\n           partitions: list[dict] | dict,\r\n       ) -> list[tuple[str, str, Any]]:\r\n           \"\"\"Consolidates filters into a single list of a tuple such as\r\n               [(\"date_id\", \"in\", [20201231, 20200101, 20200102, 20200103])]\r\n   \r\n           Args:\r\n               partitions: Dataset partition keys\r\n           \"\"\"\r\n           return [(k, \"in\", v) for k, v in partitions.items()]\r\n   ```\n\n\n",
                    "created": "2022-11-16T14:48:35.815+0000",
                    "updated": "2022-11-16T14:48:35.815+0000",
                    "started": "2022-11-16T14:48:35.815+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "826539",
                    "issueId": "13429132"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/5",
            "id": "5",
            "description": "General wishlist item.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Wish",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 6000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4de721f5[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@62ea5532[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6e07da86[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5e7441b1[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5166461a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@167ff2ff[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@467cc95c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3a7961eb[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@59ccb628[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@30cd5fe4[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@10db5688[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@61dc0b41[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6000,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Nov 15 09:46:04 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15716/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2022-02-17T15:11:44.000+0000",
        "updated": "2022-11-16T14:48:35.000+0000",
        "timeoriginalestimate": null,
        "description": "Is it possible for partitioning.parse() to be updated to parse a list of paths instead of just a single path? \r\n\r\nI am passing the .paths from file_visitor to downstream tasks to process data which was recently saved, but I can run into problems with this if I overwrite data with delete_matching in order to consolidate small files since the paths won't exist. \r\n\r\nHere is the output of my current approach to use filters instead of reading the paths directly:\r\n\r\n{code:python}\r\n# Fragments saved during write_dataset \r\n['dev/dataset/fragments/date_id=20210813/data-0.parquet', 'dev/dataset/fragments/date_id=20210114/data-2.parquet', 'dev/dataset/fragments/date_id=20210114/data-1.parquet', 'dev/dataset/fragments/date_id=20210114/data-0.parquet']\r\n\r\n# Run partitioning.parse() on each fragment \r\n[<pyarrow.compute.Expression (date_id == 20210813)>, <pyarrow.compute.Expression (date_id == 20210114)>, <pyarrow.compute.Expression (date_id == 20210114)>, <pyarrow.compute.Expression (date_id == 20210114)>]\r\n\r\n# Format those expressions into a list of tuples\r\n[('date_id', 'in', [20210114, 20210813])]\r\n\r\n# Convert to an expression which is used as a filter in .to_table()\r\nis_in(date_id, {value_set=int64:[\r\n  20210114,\r\n  20210813\r\n], skip_nulls=false})\r\n{code}\r\n\r\n\r\nMy hope would be to do something like filt_exp = partitioning.parse(paths) which would return a dataset expression.\r\n",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Dataset][Python] Parse a list of fragment paths to gather filters",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13429132/comment/17630046",
                    "id": "17630046",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ldacey",
                        "name": "ldacey",
                        "key": "ldacey",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Lance Dacey",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I wanted to check if this is something which might be possible eventually. It would reduce a lot of ugly custom code that I use to achieve the result that I am looking for.\r\n\r\nWrite dataset, collect the fragment paths:\r\n\r\n{code:python}\r\ncollector = []\r\nds.write_dataset(\r\n  table, \r\n  base_dir=\"dev/staging\", \r\n  partitioning=[\"date\"], \r\n  partitioning_flavor=\"hive\", \r\n  file_visitor=lambda x: collector.append(x)\r\n)\r\n{code}\r\n\r\nNext my hope would be parse those paths into a consolidate filter expression which I could use to query the original dataset. This ensures that I read in the entire partition since it is possible that other files already existed before the write step above.\r\n\r\n{code:python}\r\n\r\npaths = [file.path for file in collector]\r\npartitioning = ds.partitioning(flavor=\"hive\") \r\nfilter_expression = partitioning.parse(paths) #parse a list of paths, ideally using the \"hive\" shortcut\r\n\r\ndataset = ds.dataset(source=\"dev/staging\", partitioning=partitioning)\r\nnew_table = dataset.to_table(filter=filter_expression)\r\nds.write_dataset(new_table, base_dir=\"dev/final\", existing_data_behavior=\"delete_matching\")\r\n{code}\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ldacey",
                        "name": "ldacey",
                        "key": "ldacey",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Lance Dacey",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-11-07T21:54:28.605+0000",
                    "updated": "2022-11-07T21:54:28.605+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13429132/comment/17630089",
                    "id": "17630089",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "If I understand correctly, your goal is to get a list of partitions that were modified during a dataset write.  Is that correct?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-11-07T23:56:52.481+0000",
                    "updated": "2022-11-07T23:56:52.481+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13429132/comment/17630175",
                    "id": "17630175",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ldacey",
                        "name": "ldacey",
                        "key": "ldacey",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Lance Dacey",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Yes, if I could easily retrieve a list of the unique partitions which were written to that would be helpful. If I could then parse the list of partitions into a dataset expression (used for table(filter=expression)), that would be even better.\r\n\r\nRight now I can get a list of the fragments, parse them into expressions, and from there I can determine the partitions using ds._get_partition_keys()\r\n\r\nFull example below. I am essentially just looking for a potential shortcut, convenience method, or better approach.\r\n\r\nSay these are the fragments which were written during dataset write:\r\n{code:python}\r\n['path/to/data/month_id=202105/v1-manual__2022-11-06T22:50:20.parquet',\r\n 'path/to/data/month_id=202106/v1-manual__2022-11-06T22:50:20.parquet',\r\n 'path/to/data/month_id=202107/v1-manual__2022-11-06T22:50:20..parquet']\r\n{code}\r\n\r\nMy ultimate goal is for a downstream task to filter the dataset for those three partitions (not just the fragments since other files might exist).\r\n\r\n{code:python}\r\npartitioning = dataset.partitioning\r\n\r\n#parse each fragment path to get a list of expressions\r\nexpressions = [partitioning.parse(file) for file in paths]\r\n\r\n#get the partitions\r\nfilters = [ds._get_partition_keys(expression) for expression in expressions]\r\n\r\n[{'month_id': 202105}, {'month_id': 202106}, {'month_id': 202107}]\r\n\r\n#Convert to an expression\r\n\r\nfrom pyarrow.parquet import filters_to_expression\r\n\r\nfilters_to_expression(filters)\r\n\r\n<pyarrow.compute.Expression (((month_id == 202105) or (month_id == 202106)) or (month_id == 202107))>\r\n{code}\r\n\r\n\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ldacey",
                        "name": "ldacey",
                        "key": "ldacey",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Lance Dacey",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-11-08T04:35:50.387+0000",
                    "updated": "2022-11-08T04:35:50.387+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13429132/comment/17630773",
                    "id": "17630773",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
                        "name": "vibhatha",
                        "key": "vibhatha",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Vibhatha Lakmal Abeykoon",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~ldacey]\u00a0I tried the following,\u00a0\r\n{code:java|title=test_dataset_prase.py|borderStyle=solid}\r\nfrom datetime import datetime\r\nimport pyarrow.dataset as ds\r\ndf = pd.DataFrame({'a': [datetime(2019, 1, 1, 0),\r\ndatetime(2019, 2, 1, 0),\r\ndatetime(2019, 1, 1, 0),\r\ndatetime(2019, 2, 1, 0),\r\ndatetime(2019, 1, 1, 0),\r\ndatetime(2019, 2, 1, 0)],\r\n'b': [20, 30, 40, 50, 60, 10]})\r\ntable = pa.Table.from_pandas(df)\r\npath = tempdir / 'partitioning'\r\n\r\ncollector = []\r\nds.write_dataset(\r\ntable,\r\nbase_dir=path,\r\nformat=\"parquet\",\r\npartitioning=[\"a\"],\r\npartitioning_flavor=\"hive\",\r\nfile_visitor=lambdax: collector.append(x)\r\n)\r\n\u00a0\r\npaths = [file.path for file in collector]\r\npartitioning = ds.partitioning(flavor=\"hive\")\r\n\u00a0\r\ndataset = ds.dataset(source=path, partitioning=partitioning)\r\n\u00a0\r\nfilter_expressions = [dataset.partitioning.parse(path) for path in paths]\r\n\u00a0\r\nnew_table = dataset.to_table(filter=filter_expressions[0])\r\nprint(table)\r\nprint(\"-\" * 80)\r\nprint(new_table)\r\n{code}\r\n\r\nAre these steps acceptable? Or any issue with this (assume `parse` will be updated to your requirements)\r\nPlease correct me if I am wrong in anyway.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
                        "name": "vibhatha",
                        "key": "vibhatha",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Vibhatha Lakmal Abeykoon",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-11-09T06:24:33.140+0000",
                    "updated": "2022-11-09T06:24:33.140+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13429132/comment/17630776",
                    "id": "17630776",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "[~vibhatha] I'm not sure {{new_table = dataset.to_table(filter=filter_expressions[0])}} will work.  Won't that create a table from just the first partition?  I think [~ldacey] was asking for something like {{filter=filter_expressions[0] | filter_expressions[1] | ... | filter_expressions[N]}}.\r\n\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-11-09T06:29:31.637+0000",
                    "updated": "2022-11-09T06:29:31.637+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13429132/comment/17630778",
                    "id": "17630778",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
                        "name": "vibhatha",
                        "key": "vibhatha",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Vibhatha Lakmal Abeykoon",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I agree, sorry I didn't finished the statement, properly. What we need now is not to update the `parse` function, but fuse the filter experssions internally or externally and get the expected results, right?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
                        "name": "vibhatha",
                        "key": "vibhatha",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Vibhatha Lakmal Abeykoon",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-11-09T06:32:59.792+0000",
                    "updated": "2022-11-09T06:32:59.792+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13429132/comment/17631108",
                    "id": "17631108",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ldacey",
                        "name": "ldacey",
                        "key": "ldacey",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Lance Dacey",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Yes, ultimate goal is to create a single expression which would filter all unique partitions that had data written into them.\r\n\r\nI added unique partitions there because it is possible for multiple file fragments to be written to the same partition (max_rows during write) - I never tested what happens if you run an expression that has duplicates though. Any idea if that would matter? For example, the filter expression for both of these fragments would be the same:\r\n\r\n'path/to/data/section=a/part-0.parquet',\r\n'path/to/data/section=a/part-1.parquet',\r\n\r\nThe example [~westonpace] provided would work great.\r\n\r\n\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ldacey",
                        "name": "ldacey",
                        "key": "ldacey",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Lance Dacey",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-11-09T14:38:39.854+0000",
                    "updated": "2022-11-09T14:38:39.854+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13429132/comment/17631783",
                    "id": "17631783",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
                        "name": "vibhatha",
                        "key": "vibhatha",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Vibhatha Lakmal Abeykoon",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~ldacey] Can we always guarantee that the operator is always going to be a `or` or `and`? Can it be a mix of those operators, when you want to filter out like a band-pass filter. \r\n\r\nI could be misunderstanding the objective here, but just curious. Or should we expose a UDF and let the user decide how it needs to be applied.\r\n\r\ncc [~westonpace]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
                        "name": "vibhatha",
                        "key": "vibhatha",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Vibhatha Lakmal Abeykoon",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-11-10T16:50:07.762+0000",
                    "updated": "2022-11-10T16:50:07.762+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13429132/comment/17631792",
                    "id": "17631792",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "I am pretty sure the operator is always OR based on:\r\n\r\n{quote}\r\nultimate goal is to create a single expression which would filter all unique partitions that had data written into them.\r\n{quote}\r\n\r\nAn OR expression would give you all the partitions that had data written.\r\n\r\nIn fact, partition expressions are always disjoint (e.g. x == 7 vs x == 8) so ANDing any of the returned expressions will always give you an empty set.\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-11-10T17:02:45.078+0000",
                    "updated": "2022-11-10T17:02:45.078+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13429132/comment/17632598",
                    "id": "17632598",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
                        "name": "vibhatha",
                        "key": "vibhatha",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Vibhatha Lakmal Abeykoon",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Yeah, that is true since it is always the equality operator. But for other comparator operators it won't. So it is better to fuse it at parse rather than at to_table.\u00a0\r\n\r\nBecause when filtering range of values as follows.\r\n{code:python}\r\n    import pyarrow.dataset as ds\r\n    df = pd.DataFrame({'a' : [1, 2, 1, 2, 3, 4, 5, 1, 2, 4, 7, 8],\r\n                       'b' : [10, 30, 20, 40, 50, 60, 30, 50, 60, 10, 11, 12]})\r\n    table = pa.Table.from_pandas(df)\r\n    path = tempdir / 'partitioning'\r\n\r\n    collector = []\r\n    ds.write_dataset(\r\n        table,\r\n        base_dir=path,\r\n        format=\"parquet\",\r\n        partitioning=[\"a\"],\r\n        partitioning_flavor=\"hive\",\r\n        file_visitor=lambda x: collector.append(x)\r\n    )\r\n\r\n    paths = [file.path for file in collector]\r\n    partitioning = ds.partitioning(flavor=\"hive\")\r\n\r\n    dataset = ds.dataset(source=path, partitioning=partitioning)\r\n\r\n    filter_expressions = [dataset.partitioning.parse(path) for path in paths]\r\n    \r\n    f11 = ds.field(\"a\") > pc.scalar(3)\r\n    f22 = ds.field(\"a\") < pc.scalar(6)\r\n    f3 = f11 & f22\r\n    print(f3)\r\n    new_table = dataset.to_table(filter=f3)\r\n    print(table.to_pandas())\r\n    print(\"-\" * 80)\r\n    print(new_table.to_pandas())\r\n\r\n{code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
                        "name": "vibhatha",
                        "key": "vibhatha",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Vibhatha Lakmal Abeykoon",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-11-12T03:49:36.423+0000",
                    "updated": "2022-11-12T03:50:41.140+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13429132/comment/17633927",
                    "id": "17633927",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "I'm not certain I understand.  A partition key will always be an equality operator.  In your above example you would have {{a==1 | a == 2 | a == 3 | a == 4 | a == 5 | a == 7 | a == 8}}.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-11-14T16:34:07.692+0000",
                    "updated": "2022-11-14T16:34:07.692+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13429132/comment/17633952",
                    "id": "17633952",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
                        "name": "vibhatha",
                        "key": "vibhatha",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Vibhatha Lakmal Abeykoon",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Yes, I was merely referring to the filter statement at `to_table` it could be any other comparator operator, right?\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
                        "name": "vibhatha",
                        "key": "vibhatha",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Vibhatha Lakmal Abeykoon",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-11-14T17:17:45.745+0000",
                    "updated": "2022-11-14T17:17:45.745+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13429132/comment/17633961",
                    "id": "17633961",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Ah, yes.  So if you wanted to simplify I agree it would be easier to do that before calling {{to_table}}.  I think I understand now.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-11-14T17:32:40.856+0000",
                    "updated": "2022-11-14T17:32:40.856+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13429132/comment/17634264",
                    "id": "17634264",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "To just OR-combine the different expressions for each of the paths, you can do this automatically with {{reduce()}} and a list comprehension calling Partitioning.parse on each of the paths (without having to resort to {{_get_partition_keys}} and {{filters_to_expression}}). Using your example:\r\n\r\n{code}\r\npaths = ['path/to/data/month_id=202105/v1-manual__2022-11-06T22:50:20.parquet',\r\n         'path/to/data/month_id=202106/v1-manual__2022-11-06T22:50:20.parquet',\r\n         'path/to/data/month_id=202107/v1-manual__2022-11-06T22:50:20..parquet']\r\npartitioning = ds.partitioning(pa.schema([('month_id', 'int64')]), flavor=\"hive\")\r\n\r\n\r\n>>> import operator\r\n>>> import functools\r\n>>> functools.reduce(operator.or_, [partitioning.parse(file) for file in paths])\r\n<pyarrow.compute.Expression (((month_id == 202105) or (month_id == 202106)) or (month_id == 202107))>\r\n{code}\r\n\r\nI think this is what Weston is suggesting to do. It doesn't necessarily give the most efficient filter expression, but that's a direct translation of the subset of paths (if there are many paths, it might be more efficient with isin or a greater/smaller compare kernel)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2022-11-15T09:40:07.797+0000",
                    "updated": "2022-11-15T09:40:07.797+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13429132/comment/17634267",
                    "id": "17634267",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
                        "name": "vibhatha",
                        "key": "vibhatha",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Vibhatha Lakmal Abeykoon",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~jorisvandenbossche]\u00a0I made the PR to handle this internally within the parse function.\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
                        "name": "vibhatha",
                        "key": "vibhatha",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Vibhatha Lakmal Abeykoon",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-11-15T09:45:17.567+0000",
                    "updated": "2022-11-15T09:45:17.567+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13429132/comment/17634268",
                    "id": "17634268",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
                        "name": "vibhatha",
                        "key": "vibhatha",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Vibhatha Lakmal Abeykoon",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "But I should probably use the reduce operator.\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
                        "name": "vibhatha",
                        "key": "vibhatha",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Vibhatha Lakmal Abeykoon",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-11-15T09:46:04.471+0000",
                    "updated": "2022-11-15T09:46:04.471+0000"
                }
            ],
            "maxResults": 16,
            "total": 16,
            "startAt": 0
        },
        "customfield_12311820": "0|z0zos8:",
        "customfield_12314139": null
    }
}