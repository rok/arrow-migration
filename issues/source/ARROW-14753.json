{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13412497",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412497",
    "key": "ARROW-14753",
    "fields": {
        "parent": {
            "id": "13405944",
            "key": "ARROW-14278",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13405944",
            "fields": {
                "summary": "[Doc] New Contributors Guide",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                    "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                    "name": "Resolved",
                    "id": "5",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                    "id": "2",
                    "description": "A new feature of the product, which has yet to be developed.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                    "name": "New Feature",
                    "subtask": false,
                    "avatarId": 21141
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
            "name": "alenka",
            "key": "alenkaf",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Alenka Frim",
            "active": true,
            "timeZone": "Europe/Ljubljana"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332532",
                "id": "12332532",
                "name": "Documentation"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
            "name": "alenka",
            "key": "alenkaf",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Alenka Frim",
            "active": true,
            "timeZone": "Europe/Ljubljana"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
            "name": "alenka",
            "key": "alenkaf",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Alenka Frim",
            "active": true,
            "timeZone": "Europe/Ljubljana"
        },
        "aggregateprogress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14753/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 22,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412497/worklog/688492",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF opened a new pull request #11820:\nURL: https://github.com/apache/arrow/pull/11820\n\n\n   Add Building C++ and PyArrow sections of the New Contributor's guide.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-01T08:48:54.599+0000",
                    "updated": "2021-12-01T08:48:54.599+0000",
                    "started": "2021-12-01T08:48:54.599+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "688492",
                    "issueId": "13412497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412497/worklog/688493",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11820:\nURL: https://github.com/apache/arrow/pull/11820#issuecomment-983419108\n\n\n   https://issues.apache.org/jira/browse/ARROW-14753\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-01T08:49:07.403+0000",
                    "updated": "2021-12-01T08:49:07.403+0000",
                    "started": "2021-12-01T08:49:07.403+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "688493",
                    "issueId": "13412497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412497/worklog/688582",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on a change in pull request #11820:\nURL: https://github.com/apache/arrow/pull/11820#discussion_r760072636\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -35,17 +35,83 @@\n Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n *********************************\n \n+If you decide to contribute to Arrow you will meet the topic of\n+compiling source code and use of CMake. You may have some\n+experience with it or not. If not, it is good to read through\n+this part so you understand what is happening in the process of\n+building Arrow better.\n \n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n \n Building C++\n ============\n \n+Why build C++ from source?\n+--------------------------\n+\n+The core of Arrow is written in C++ and all work done in other\n+languages (Python, R, ..) is wrapping-binding-connecting underlying\n\nReview comment:\n       ```suggestion\r\n   languages (Python, R, ..) are wrapping underlying\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -35,17 +35,83 @@\n Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n *********************************\n \n+If you decide to contribute to Arrow you will meet the topic of\n+compiling source code and use of CMake. You may have some\n+experience with it or not. If not, it is good to read through\n+this part so you understand what is happening in the process of\n+building Arrow better.\n \n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n \n Building C++\n ============\n \n+Why build C++ from source?\n+--------------------------\n+\n+The core of Arrow is written in C++ and all work done in other\n\nReview comment:\n       ```suggestion\r\n   The core of Arrow is written in C++ and all bindings in other\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-01T10:58:04.935+0000",
                    "updated": "2021-12-01T10:58:04.935+0000",
                    "started": "2021-12-01T10:58:04.934+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "688582",
                    "issueId": "13412497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412497/worklog/689242",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on pull request #11820:\nURL: https://github.com/apache/arrow/pull/11820#issuecomment-984586292\n\n\n   Failing build doesn't seem to be related (RStudio Package Manager error).\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-02T12:32:48.422+0000",
                    "updated": "2021-12-02T12:32:48.422+0000",
                    "started": "2021-12-02T12:32:48.422+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "689242",
                    "issueId": "13412497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412497/worklog/689468",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #11820:\nURL: https://github.com/apache/arrow/pull/11820#discussion_r761260095\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -35,17 +35,83 @@\n Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n *********************************\n \n+If you decide to contribute to Arrow you will meet the topic of\n+compiling source code and use of CMake. You may have some\n\nReview comment:\n       ```suggestion\r\n   compiling the source code and use of CMake. You may have some\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-02T16:24:40.182+0000",
                    "updated": "2021-12-02T16:24:40.182+0000",
                    "started": "2021-12-02T16:24:40.182+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "689468",
                    "issueId": "13412497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412497/worklog/689472",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11820:\nURL: https://github.com/apache/arrow/pull/11820#discussion_r761252165\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -35,17 +35,83 @@\n Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n *********************************\n \n+If you decide to contribute to Arrow you will meet the topic of\n+compiling source code and use of CMake. You may have some\n\nReview comment:\n       The mention of CMake applies mostly to Arrow C++ and C++-derived bindings such as Python or R (not Java or Go, for example). Perhaps you could start this document by mentioning this context?\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -35,17 +35,83 @@\n Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n\nReview comment:\n       It's not in this PR, but this should probably be \"Building the Arrow libraries\".\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -35,17 +35,83 @@\n Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n *********************************\n \n+If you decide to contribute to Arrow you will meet the topic of\n+compiling source code and use of CMake. You may have some\n+experience with it or not. If not, it is good to read through\n+this part so you understand what is happening in the process of\n+building Arrow better.\n \n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n \n Building C++\n ============\n \n+Why build C++ from source?\n+--------------------------\n+\n+The core of Arrow is written in C++ and all bindings in other\n+languages (Python, R, ..) are wrapping underlying\n+C++ functions. Even if you want to work on PyArrow or R package\n+the source code of C++ may have to be edited also.\n+\n+About CMake\n+-----------\n+\n+CMake is a cross platform build system generator and it uses make\n+for the actual build. In the compiling process of Arrow what will\n+most probably be needed is some tweaking of the flags that are added\n+to cmake in the compiling process of Arrow.\n+\n+\n+Optional flags and why might we use them\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+.. TODO short description of the use of flags\n+\n+.. seealso::\n+\tFull list of optional flags: :ref:`cpp_build_optional_components`\n+\n+.. Environment variables useful for developers\n+.. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+.. TODO short description of the use of env vars\n+\n+Building from source vs. using binaries\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+Using binaries is a fast and simple way of working with the latest\n+Arrow version. But you do not have the possibility to add or change\n+the code and as a contributor you will need to.\n+\n+Detailed instructions on building C++ library from source can\n+be found :ref:`here <building-arrow-cpp>`.\n+\n .. _build-pyarrow:\n \n Building PyArrow\n ================\n \n-.. _build-rarrow:\n+After building C++ part of Arrow you have to build PyArrow on top of it\n\nReview comment:\n       \"the Arrow C++ libraries\"\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -35,17 +35,83 @@\n Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n *********************************\n \n+If you decide to contribute to Arrow you will meet the topic of\n+compiling source code and use of CMake. You may have some\n+experience with it or not. If not, it is good to read through\n+this part so you understand what is happening in the process of\n+building Arrow better.\n \n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n \n Building C++\n ============\n \n+Why build C++ from source?\n\nReview comment:\n       \"Arrow C++\", not just \"C++\" (and in the title above as well) :-)\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -35,17 +35,83 @@\n Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n *********************************\n \n+If you decide to contribute to Arrow you will meet the topic of\n+compiling source code and use of CMake. You may have some\n+experience with it or not. If not, it is good to read through\n+this part so you understand what is happening in the process of\n+building Arrow better.\n \n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n \n Building C++\n ============\n \n+Why build C++ from source?\n+--------------------------\n+\n+The core of Arrow is written in C++ and all bindings in other\n+languages (Python, R, ..) are wrapping underlying\n+C++ functions. Even if you want to work on PyArrow or R package\n+the source code of C++ may have to be edited also.\n+\n+About CMake\n+-----------\n+\n+CMake is a cross platform build system generator and it uses make\n+for the actual build. In the compiling process of Arrow what will\n+most probably be needed is some tweaking of the flags that are added\n+to cmake in the compiling process of Arrow.\n\nReview comment:\n       \"CMake\"\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -35,17 +35,83 @@\n Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n *********************************\n \n+If you decide to contribute to Arrow you will meet the topic of\n+compiling source code and use of CMake. You may have some\n+experience with it or not. If not, it is good to read through\n+this part so you understand what is happening in the process of\n+building Arrow better.\n \n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n \n Building C++\n ============\n \n+Why build C++ from source?\n+--------------------------\n+\n+The core of Arrow is written in C++ and all bindings in other\n+languages (Python, R, ..) are wrapping underlying\n+C++ functions. Even if you want to work on PyArrow or R package\n+the source code of C++ may have to be edited also.\n+\n+About CMake\n+-----------\n+\n+CMake is a cross platform build system generator and it uses make\n+for the actual build. In the compiling process of Arrow what will\n+most probably be needed is some tweaking of the flags that are added\n+to cmake in the compiling process of Arrow.\n+\n+\n+Optional flags and why might we use them\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+.. TODO short description of the use of flags\n+\n+.. seealso::\n+\tFull list of optional flags: :ref:`cpp_build_optional_components`\n+\n+.. Environment variables useful for developers\n+.. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+.. TODO short description of the use of env vars\n+\n+Building from source vs. using binaries\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+Using binaries is a fast and simple way of working with the latest\n+Arrow version. But you do not have the possibility to add or change\n+the code and as a contributor you will need to.\n+\n+Detailed instructions on building C++ library from source can\n+be found :ref:`here <building-arrow-cpp>`.\n+\n .. _build-pyarrow:\n \n Building PyArrow\n ================\n \n-.. _build-rarrow:\n+After building C++ part of Arrow you have to build PyArrow on top of it\n+also. The reason is the same, so you can edit the code and run tests on\n+the edited code you have locally.\n \n-Building R-Arrow\n-================\n+**Why do we have to do builds separately?**\n\nReview comment:\n       I'm not sure it's worth bothering beginners with this question :-) If we want to, though, we'll need to find a better wording for the answer, as currently it feels a bit confusing.\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -35,17 +35,83 @@\n Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n *********************************\n \n+If you decide to contribute to Arrow you will meet the topic of\n+compiling source code and use of CMake. You may have some\n+experience with it or not. If not, it is good to read through\n+this part so you understand what is happening in the process of\n+building Arrow better.\n \n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n \n Building C++\n ============\n \n+Why build C++ from source?\n+--------------------------\n+\n+The core of Arrow is written in C++ and all bindings in other\n+languages (Python, R, ..) are wrapping underlying\n+C++ functions. Even if you want to work on PyArrow or R package\n+the source code of C++ may have to be edited also.\n+\n+About CMake\n+-----------\n+\n+CMake is a cross platform build system generator and it uses make\n+for the actual build. In the compiling process of Arrow what will\n\nReview comment:\n       Hmm, it doesn't necessarily use make (we actually recommend [Ninja](https://ninja-build.org/) in the C++ build docs).\r\n   \r\n   Therefore you could rephrase this as : \"... and it defers to another program such as `make` or `ninja` for the actual build\".\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-02T16:28:04.343+0000",
                    "updated": "2021-12-02T16:28:04.343+0000",
                    "started": "2021-12-02T16:28:04.343+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "689472",
                    "issueId": "13412497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412497/worklog/689476",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #11820:\nURL: https://github.com/apache/arrow/pull/11820#discussion_r761262716\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -35,17 +35,83 @@\n Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n *********************************\n \n+If you decide to contribute to Arrow you will meet the topic of\n+compiling source code and use of CMake. You may have some\n+experience with it or not. If not, it is good to read through\n+this part so you understand what is happening in the process of\n+building Arrow better.\n \n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n \n Building C++\n ============\n \n+Why build C++ from source?\n+--------------------------\n+\n+The core of Arrow is written in C++ and all bindings in other\n+languages (Python, R, ..) are wrapping underlying\n+C++ functions. Even if you want to work on PyArrow or R package\n+the source code of C++ may have to be edited also.\n+\n+About CMake\n+-----------\n+\n+CMake is a cross platform build system generator and it uses make\n\nReview comment:\n       The \"uses make for the actual build\" actually depends on the cmake settings. For example we recommend to use ninja instead of make.\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -35,17 +35,83 @@\n Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n *********************************\n \n+If you decide to contribute to Arrow you will meet the topic of\n+compiling source code and use of CMake. You may have some\n+experience with it or not. If not, it is good to read through\n+this part so you understand what is happening in the process of\n+building Arrow better.\n \n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n \n Building C++\n ============\n \n+Why build C++ from source?\n+--------------------------\n+\n+The core of Arrow is written in C++ and all bindings in other\n+languages (Python, R, ..) are wrapping underlying\n+C++ functions. Even if you want to work on PyArrow or R package\n+the source code of C++ may have to be edited also.\n+\n+About CMake\n+-----------\n+\n+CMake is a cross platform build system generator and it uses make\n+for the actual build. In the compiling process of Arrow what will\n+most probably be needed is some tweaking of the flags that are added\n+to cmake in the compiling process of Arrow.\n\nReview comment:\n       This sentence is a bit hard to read. Maybe something like \"You will probably need to tweak some CMake flags for compiling Arrow.\"\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -35,17 +35,83 @@\n Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n *********************************\n \n+If you decide to contribute to Arrow you will meet the topic of\n+compiling source code and use of CMake. You may have some\n+experience with it or not. If not, it is good to read through\n+this part so you understand what is happening in the process of\n+building Arrow better.\n \n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n \n Building C++\n ============\n \n+Why build C++ from source?\n+--------------------------\n+\n+The core of Arrow is written in C++ and all bindings in other\n+languages (Python, R, ..) are wrapping underlying\n+C++ functions. Even if you want to work on PyArrow or R package\n+the source code of C++ may have to be edited also.\n+\n+About CMake\n+-----------\n+\n+CMake is a cross platform build system generator and it uses make\n+for the actual build. In the compiling process of Arrow what will\n+most probably be needed is some tweaking of the flags that are added\n+to cmake in the compiling process of Arrow.\n+\n+\n+Optional flags and why might we use them\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+.. TODO short description of the use of flags\n+\n+.. seealso::\n+\tFull list of optional flags: :ref:`cpp_build_optional_components`\n+\n+.. Environment variables useful for developers\n+.. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+.. TODO short description of the use of env vars\n+\n+Building from source vs. using binaries\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+Using binaries is a fast and simple way of working with the latest\n+Arrow version. But you do not have the possibility to add or change\n+the code and as a contributor you will need to.\n+\n+Detailed instructions on building C++ library from source can\n+be found :ref:`here <building-arrow-cpp>`.\n+\n .. _build-pyarrow:\n \n Building PyArrow\n ================\n \n-.. _build-rarrow:\n+After building C++ part of Arrow you have to build PyArrow on top of it\n\nReview comment:\n       ```suggestion\r\n   After building the C++ part of Arrow you have to build PyArrow on top of it\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -35,17 +35,83 @@\n Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n *********************************\n \n+If you decide to contribute to Arrow you will meet the topic of\n+compiling source code and use of CMake. You may have some\n+experience with it or not. If not, it is good to read through\n+this part so you understand what is happening in the process of\n+building Arrow better.\n \n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n \n Building C++\n ============\n \n+Why build C++ from source?\n+--------------------------\n+\n+The core of Arrow is written in C++ and all bindings in other\n+languages (Python, R, ..) are wrapping underlying\n+C++ functions. Even if you want to work on PyArrow or R package\n\nReview comment:\n       This is only true for the C++ implementation and its bindings. We should maybe try to reword this a bit to more correctly represent the fact that there are non-C++ Arrow implementations\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -35,17 +35,83 @@\n Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n *********************************\n \n+If you decide to contribute to Arrow you will meet the topic of\n+compiling source code and use of CMake. You may have some\n+experience with it or not. If not, it is good to read through\n+this part so you understand what is happening in the process of\n+building Arrow better.\n \n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n \n Building C++\n ============\n \n+Why build C++ from source?\n+--------------------------\n+\n+The core of Arrow is written in C++ and all bindings in other\n+languages (Python, R, ..) are wrapping underlying\n+C++ functions. Even if you want to work on PyArrow or R package\n+the source code of C++ may have to be edited also.\n+\n+About CMake\n+-----------\n+\n+CMake is a cross platform build system generator and it uses make\n+for the actual build. In the compiling process of Arrow what will\n\nReview comment:\n       ```suggestion\r\n   for the actual build. In the compilation process of Arrow what will\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-02T16:30:17.100+0000",
                    "updated": "2021-12-02T16:30:17.100+0000",
                    "started": "2021-12-02T16:30:17.100+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "689476",
                    "issueId": "13412497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412497/worklog/689770",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on a change in pull request #11820:\nURL: https://github.com/apache/arrow/pull/11820#discussion_r761657687\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -35,17 +35,83 @@\n Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n *********************************\n \n+If you decide to contribute to Arrow you will meet the topic of\n+compiling source code and use of CMake. You may have some\n+experience with it or not. If not, it is good to read through\n+this part so you understand what is happening in the process of\n+building Arrow better.\n \n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n \n Building C++\n ============\n \n+Why build C++ from source?\n+--------------------------\n+\n+The core of Arrow is written in C++ and all bindings in other\n+languages (Python, R, ..) are wrapping underlying\n+C++ functions. Even if you want to work on PyArrow or R package\n+the source code of C++ may have to be edited also.\n+\n+About CMake\n+-----------\n+\n+CMake is a cross platform build system generator and it uses make\n+for the actual build. In the compiling process of Arrow what will\n+most probably be needed is some tweaking of the flags that are added\n+to cmake in the compiling process of Arrow.\n+\n+\n+Optional flags and why might we use them\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+.. TODO short description of the use of flags\n\nReview comment:\n       Two things worth mentioning here:\r\n   \r\n    1. R and Python have specific lists of flags in their respective building docs that can be referenced.\r\n    2. We now have [CMake Presets](https://github.com/apache/arrow/blob/master/docs/source/developers/cpp/building.rst#cmake-presets) which are useful starting points.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-03T05:37:10.888+0000",
                    "updated": "2021-12-03T05:37:10.888+0000",
                    "started": "2021-12-03T05:37:10.888+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "689770",
                    "issueId": "13412497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412497/worklog/689802",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on a change in pull request #11820:\nURL: https://github.com/apache/arrow/pull/11820#discussion_r761708121\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -35,17 +35,83 @@\n Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n *********************************\n \n+If you decide to contribute to Arrow you will meet the topic of\n+compiling source code and use of CMake. You may have some\n\nReview comment:\n       Oh, didn't even know that. Will have to learn about other libraries to be able to explain the difference. Thanks for pointing it out! \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-03T07:44:09.151+0000",
                    "updated": "2021-12-03T07:44:09.151+0000",
                    "started": "2021-12-03T07:44:09.151+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "689802",
                    "issueId": "13412497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412497/worklog/689805",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on a change in pull request #11820:\nURL: https://github.com/apache/arrow/pull/11820#discussion_r761712578\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -35,17 +35,83 @@\n Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n *********************************\n \n+If you decide to contribute to Arrow you will meet the topic of\n+compiling source code and use of CMake. You may have some\n\nReview comment:\n       Well, it's nicely explained in https://arrow.apache.org/overview/ \ud83e\udd26\u200d\u2640\ufe0f \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-03T07:52:45.250+0000",
                    "updated": "2021-12-03T07:52:45.250+0000",
                    "started": "2021-12-03T07:52:45.249+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "689805",
                    "issueId": "13412497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412497/worklog/689810",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on a change in pull request #11820:\nURL: https://github.com/apache/arrow/pull/11820#discussion_r761719996\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -35,17 +35,83 @@\n Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n *********************************\n \n+If you decide to contribute to Arrow you will meet the topic of\n+compiling source code and use of CMake. You may have some\n+experience with it or not. If not, it is good to read through\n+this part so you understand what is happening in the process of\n+building Arrow better.\n \n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n \n Building C++\n ============\n \n+Why build C++ from source?\n+--------------------------\n+\n+The core of Arrow is written in C++ and all bindings in other\n+languages (Python, R, ..) are wrapping underlying\n+C++ functions. Even if you want to work on PyArrow or R package\n+the source code of C++ may have to be edited also.\n+\n+About CMake\n+-----------\n+\n+CMake is a cross platform build system generator and it uses make\n+for the actual build. In the compiling process of Arrow what will\n+most probably be needed is some tweaking of the flags that are added\n+to cmake in the compiling process of Arrow.\n+\n+\n+Optional flags and why might we use them\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+.. TODO short description of the use of flags\n+\n+.. seealso::\n+\tFull list of optional flags: :ref:`cpp_build_optional_components`\n+\n+.. Environment variables useful for developers\n+.. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+.. TODO short description of the use of env vars\n+\n+Building from source vs. using binaries\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+Using binaries is a fast and simple way of working with the latest\n+Arrow version. But you do not have the possibility to add or change\n+the code and as a contributor you will need to.\n+\n+Detailed instructions on building C++ library from source can\n+be found :ref:`here <building-arrow-cpp>`.\n+\n .. _build-pyarrow:\n \n Building PyArrow\n ================\n \n-.. _build-rarrow:\n+After building C++ part of Arrow you have to build PyArrow on top of it\n+also. The reason is the same, so you can edit the code and run tests on\n+the edited code you have locally.\n \n-Building R-Arrow\n-================\n+**Why do we have to do builds separately?**\n\nReview comment:\n       Yeah, showing I am still a little confused :P Will try to rephrase - as I would love to have this info when I started ;)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-03T08:06:40.891+0000",
                    "updated": "2021-12-03T08:06:40.891+0000",
                    "started": "2021-12-03T08:06:40.890+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "689810",
                    "issueId": "13412497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412497/worklog/689819",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on pull request #11820:\nURL: https://github.com/apache/arrow/pull/11820#issuecomment-985313525\n\n\n   Thanks everybody for the comments! \r\n   \r\n   > Do you intend to fill the TODOs here or in another PR?\r\n   \r\n   I wanted to do it later, but I think I gained some understanding to manage it now. In case the review will take longer as expected I would still think about putting it into a separate PR to make the process faster.\r\n   \r\n   As this is harder topic to write about for me (flags and env variables) it would be great to have some suggestions!\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-03T08:31:46.719+0000",
                    "updated": "2021-12-03T08:31:46.719+0000",
                    "started": "2021-12-03T08:31:46.719+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "689819",
                    "issueId": "13412497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412497/worklog/690108",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #11820:\nURL: https://github.com/apache/arrow/pull/11820#discussion_r762022752\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -31,21 +31,102 @@\n \n .. _build-arrow:\n \n-*********************************\n-Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n-*********************************\n+************************************\n+Building the Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n+************************************\n \n+The Arrow project contains good number of libraries that enable\n\nReview comment:\n       ```suggestion\r\n   The Arrow project contains a number of libraries that enable\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -31,21 +31,102 @@\n \n .. _build-arrow:\n \n-*********************************\n-Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n-*********************************\n+************************************\n+Building the Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n\nReview comment:\n       ```suggestion\r\n   Building the Arrow libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -31,21 +31,102 @@\n \n .. _build-arrow:\n \n-*********************************\n-Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n-*********************************\n+************************************\n+Building the Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n+************************************\n \n+The Arrow project contains good number of libraries that enable\n+work in many languages. Most libraries (C++, C#, Go, Java,\n+JavaScript, Julia, and Rust) already contain distinct implementations\n+of Arrow. \n \n+It is different for C (Glib), MATLAB, Python, R, and Ruby as they\n+are built on top of the C++ library. In this section we will be\n+dealing with this second part of the libraries plus some of C++.\n\nReview comment:\n       ```suggestion\r\n   dealing with some of these libraries as well has how they work with the C++ library.\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -31,21 +31,102 @@\n \n .. _build-arrow:\n \n-*********************************\n-Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n-*********************************\n+************************************\n+Building the Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n+************************************\n \n+The Arrow project contains good number of libraries that enable\n+work in many languages. Most libraries (C++, C#, Go, Java,\n+JavaScript, Julia, and Rust) already contain distinct implementations\n+of Arrow. \n \n+It is different for C (Glib), MATLAB, Python, R, and Ruby as they\n+are built on top of the C++ library. In this section we will be\n+dealing with this second part of the libraries plus some of C++.\n \n-Building C++\n-============\n+In this case, if you decide to contribute to Arrow you will meet\n+the topic of compiling the source code and use of CMake. You may\n+have some experience with it or not. If not, it is good to read\n+through this part so you understand what is happening in the process\n+of building Arrow better.\n+\n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n+\n+Building Arrow C++\n+==================\n+\n+Why build Arrow C++ from source?\n+--------------------------------\n+\n+For Arrow C++ implementation and its bindings (Python and R for example)\n+these bindings are wrapping the underlying C++ functions. Even if you\n+want to work on PyArrow or R package the source code of C++ may have to\n+be edited also.\n+\n+About CMake\n+-----------\n+\n+CMake is a cross platform build system generator and it defers\n+to another program such as ``make`` or ``ninja`` for the actual build.\n+If running into errors with the build process, the first thing to try is\n\nReview comment:\n       ```suggestion\r\n   If you are running into errors with the build process, the first thing to try is\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/index.rst\n##########\n@@ -81,7 +81,7 @@ of adding a basic feature.\n    appropriate :ref:`communication` channel.\n \n    See a short description about the building process of \n-   :ref:`PyArrow or R-Arrow<build-arrow>` or go straight to detailed\n+   :ref:`PyArrow or R package<build-arrow>` or go straight to detailed\n\nReview comment:\n       ```suggestion\r\n      :ref:`PyArrow or the R package<build-arrow>` or go straight to detailed\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -31,21 +31,102 @@\n \n .. _build-arrow:\n \n-*********************************\n-Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n-*********************************\n+************************************\n+Building the Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n+************************************\n \n+The Arrow project contains good number of libraries that enable\n+work in many languages. Most libraries (C++, C#, Go, Java,\n+JavaScript, Julia, and Rust) already contain distinct implementations\n+of Arrow. \n \n+It is different for C (Glib), MATLAB, Python, R, and Ruby as they\n+are built on top of the C++ library. In this section we will be\n+dealing with this second part of the libraries plus some of C++.\n \n-Building C++\n-============\n+In this case, if you decide to contribute to Arrow you will meet\n+the topic of compiling the source code and use of CMake. You may\n+have some experience with it or not. If not, it is good to read\n+through this part so you understand what is happening in the process\n+of building Arrow better.\n+\n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n+\n+Building Arrow C++\n+==================\n+\n+Why build Arrow C++ from source?\n+--------------------------------\n+\n+For Arrow C++ implementation and its bindings (Python and R for example)\n+these bindings are wrapping the underlying C++ functions. Even if you\n+want to work on PyArrow or R package the source code of C++ may have to\n+be edited also.\n+\n+About CMake\n+-----------\n+\n+CMake is a cross platform build system generator and it defers\n+to another program such as ``make`` or ``ninja`` for the actual build.\n+If running into errors with the build process, the first thing to try is\n+to tweak some CMake flags for compiling Arrow.\n+\n+.. TODO\n+.. CMake presets\n+.. Ex: \"We now have CMake Presets which are useful starting points.\"\n+.. https://github.com/apache/arrow/blob/master/docs/source/developers/cpp/building.rst#cmake-presets\n+\n+\n+Optional flags and why might we use them\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+.. TODO short description of the use of flags\n+.. R and Python have specific lists of flags in their respective building docs that can be referenced.\n+\n+.. seealso::\n+\tFull list of optional flags: :ref:`cpp_build_optional_components`\n+\n+.. Environment variables useful for developers\n+.. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+.. TODO short description of the use of env vars\n+\n+Building from source vs. using binaries\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+Using binaries is a fast and simple way of working with the latest\n+Arrow version. But you do not have the possibility to add or change\n+the code and as a contributor you will need to.\n+\n+Detailed instructions on building C++ library from source can\n+be found :ref:`here <building-arrow-cpp>`.\n \n .. _build-pyarrow:\n \n Building PyArrow\n ================\n \n-.. _build-rarrow:\n+After building Arrow C++ part of Arrow you have to build PyArrow on top\n+of it also. The reason is the same, so you can edit the code and run\n+tests on the edited code you have locally.\n \n-Building R-Arrow\n-================\n+**Why do we have to do builds separately?**\n+\n+As mentioned in the beginning of this page, Python part of the Arrow\n+project is built on top of C++. In order to make changes in Python part\n+of Arrow as well as C++ part of Arrow, we need to build them separately.\n\nReview comment:\n       ```suggestion\r\n   of Arrow as well as the C++ part of Arrow, you need to build them separately.\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -31,21 +31,102 @@\n \n .. _build-arrow:\n \n-*********************************\n-Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n-*********************************\n+************************************\n+Building the Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n+************************************\n \n+The Arrow project contains good number of libraries that enable\n+work in many languages. Most libraries (C++, C#, Go, Java,\n+JavaScript, Julia, and Rust) already contain distinct implementations\n+of Arrow. \n \n+It is different for C (Glib), MATLAB, Python, R, and Ruby as they\n+are built on top of the C++ library. In this section we will be\n+dealing with this second part of the libraries plus some of C++.\n \n-Building C++\n-============\n+In this case, if you decide to contribute to Arrow you will meet\n+the topic of compiling the source code and use of CMake. You may\n+have some experience with it or not. If not, it is good to read\n+through this part so you understand what is happening in the process\n+of building Arrow better.\n\nReview comment:\n       ```suggestion\r\n   If you decide to contribute to Arrow you might\r\n   need to compile the C++ source code.  This is done using a tool called CMake, which you may or may not have experience with.  If not, this section of the guide will help you better understand CMake and the process\r\n   of building Arrow's C++ code.\r\n   ```\r\n   \r\n   Not all contributors will need to compile the C++; in the R developer docs we have instructions for using the nightly builds as the C++ source when people are only making changes to the R code without needing to build C++ from source.\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -31,21 +31,102 @@\n \n .. _build-arrow:\n \n-*********************************\n-Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n-*********************************\n+************************************\n+Building the Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n+************************************\n \n+The Arrow project contains good number of libraries that enable\n+work in many languages. Most libraries (C++, C#, Go, Java,\n+JavaScript, Julia, and Rust) already contain distinct implementations\n+of Arrow. \n \n+It is different for C (Glib), MATLAB, Python, R, and Ruby as they\n+are built on top of the C++ library. In this section we will be\n+dealing with this second part of the libraries plus some of C++.\n \n-Building C++\n-============\n+In this case, if you decide to contribute to Arrow you will meet\n+the topic of compiling the source code and use of CMake. You may\n+have some experience with it or not. If not, it is good to read\n+through this part so you understand what is happening in the process\n+of building Arrow better.\n+\n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n+\n+Building Arrow C++\n+==================\n+\n+Why build Arrow C++ from source?\n+--------------------------------\n+\n+For Arrow C++ implementation and its bindings (Python and R for example)\n+these bindings are wrapping the underlying C++ functions. Even if you\n+want to work on PyArrow or R package the source code of C++ may have to\n+be edited also.\n\nReview comment:\n       ```suggestion\r\n   For Arrow implementations which are built on top of the C++ implementation\r\n   (e.g. Python and R), wrappers and interfaces have been written to the \r\n   underlying C++ functions. If you want to work on PyArrow or R package, \r\n   you may need to edit the source code of the C++ library too.\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -31,21 +31,102 @@\n \n .. _build-arrow:\n \n-*********************************\n-Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n-*********************************\n+************************************\n+Building the Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n+************************************\n \n+The Arrow project contains good number of libraries that enable\n+work in many languages. Most libraries (C++, C#, Go, Java,\n+JavaScript, Julia, and Rust) already contain distinct implementations\n+of Arrow. \n \n+It is different for C (Glib), MATLAB, Python, R, and Ruby as they\n+are built on top of the C++ library. In this section we will be\n+dealing with this second part of the libraries plus some of C++.\n \n-Building C++\n-============\n+In this case, if you decide to contribute to Arrow you will meet\n+the topic of compiling the source code and use of CMake. You may\n+have some experience with it or not. If not, it is good to read\n+through this part so you understand what is happening in the process\n+of building Arrow better.\n+\n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n+\n+Building Arrow C++\n+==================\n+\n+Why build Arrow C++ from source?\n+--------------------------------\n+\n+For Arrow C++ implementation and its bindings (Python and R for example)\n+these bindings are wrapping the underlying C++ functions. Even if you\n+want to work on PyArrow or R package the source code of C++ may have to\n+be edited also.\n+\n+About CMake\n+-----------\n+\n+CMake is a cross platform build system generator and it defers\n+to another program such as ``make`` or ``ninja`` for the actual build.\n+If running into errors with the build process, the first thing to try is\n+to tweak some CMake flags for compiling Arrow.\n+\n+.. TODO\n+.. CMake presets\n+.. Ex: \"We now have CMake Presets which are useful starting points.\"\n+.. https://github.com/apache/arrow/blob/master/docs/source/developers/cpp/building.rst#cmake-presets\n+\n+\n+Optional flags and why might we use them\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+.. TODO short description of the use of flags\n+.. R and Python have specific lists of flags in their respective building docs that can be referenced.\n+\n+.. seealso::\n+\tFull list of optional flags: :ref:`cpp_build_optional_components`\n+\n+.. Environment variables useful for developers\n+.. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+.. TODO short description of the use of env vars\n+\n+Building from source vs. using binaries\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+Using binaries is a fast and simple way of working with the latest\n+Arrow version. But you do not have the possibility to add or change\n+the code and as a contributor you will need to.\n+\n+Detailed instructions on building C++ library from source can\n+be found :ref:`here <building-arrow-cpp>`.\n \n .. _build-pyarrow:\n \n Building PyArrow\n ================\n \n-.. _build-rarrow:\n+After building Arrow C++ part of Arrow you have to build PyArrow on top\n+of it also. The reason is the same, so you can edit the code and run\n+tests on the edited code you have locally.\n \n-Building R-Arrow\n-================\n+**Why do we have to do builds separately?**\n+\n+As mentioned in the beginning of this page, Python part of the Arrow\n\nReview comment:\n       ```suggestion\r\n   As mentioned at the beginning of this page, the Python part of the Arrow\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -31,21 +31,102 @@\n \n .. _build-arrow:\n \n-*********************************\n-Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n-*********************************\n+************************************\n+Building the Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n+************************************\n \n+The Arrow project contains good number of libraries that enable\n+work in many languages. Most libraries (C++, C#, Go, Java,\n+JavaScript, Julia, and Rust) already contain distinct implementations\n+of Arrow. \n \n+It is different for C (Glib), MATLAB, Python, R, and Ruby as they\n+are built on top of the C++ library. In this section we will be\n+dealing with this second part of the libraries plus some of C++.\n \n-Building C++\n-============\n+In this case, if you decide to contribute to Arrow you will meet\n+the topic of compiling the source code and use of CMake. You may\n+have some experience with it or not. If not, it is good to read\n+through this part so you understand what is happening in the process\n+of building Arrow better.\n+\n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n+\n+Building Arrow C++\n+==================\n+\n+Why build Arrow C++ from source?\n+--------------------------------\n+\n+For Arrow C++ implementation and its bindings (Python and R for example)\n+these bindings are wrapping the underlying C++ functions. Even if you\n+want to work on PyArrow or R package the source code of C++ may have to\n+be edited also.\n+\n+About CMake\n+-----------\n+\n+CMake is a cross platform build system generator and it defers\n\nReview comment:\n       ```suggestion\r\n   CMake is a cross-platform build system generator and it defers\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -31,21 +31,102 @@\n \n .. _build-arrow:\n \n-*********************************\n-Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n-*********************************\n+************************************\n+Building the Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n+************************************\n \n+The Arrow project contains good number of libraries that enable\n+work in many languages. Most libraries (C++, C#, Go, Java,\n+JavaScript, Julia, and Rust) already contain distinct implementations\n+of Arrow. \n \n+It is different for C (Glib), MATLAB, Python, R, and Ruby as they\n+are built on top of the C++ library. In this section we will be\n+dealing with this second part of the libraries plus some of C++.\n \n-Building C++\n-============\n+In this case, if you decide to contribute to Arrow you will meet\n+the topic of compiling the source code and use of CMake. You may\n+have some experience with it or not. If not, it is good to read\n+through this part so you understand what is happening in the process\n+of building Arrow better.\n+\n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n+\n+Building Arrow C++\n+==================\n+\n+Why build Arrow C++ from source?\n+--------------------------------\n+\n+For Arrow C++ implementation and its bindings (Python and R for example)\n+these bindings are wrapping the underlying C++ functions. Even if you\n+want to work on PyArrow or R package the source code of C++ may have to\n+be edited also.\n+\n+About CMake\n+-----------\n+\n+CMake is a cross platform build system generator and it defers\n+to another program such as ``make`` or ``ninja`` for the actual build.\n+If running into errors with the build process, the first thing to try is\n+to tweak some CMake flags for compiling Arrow.\n\nReview comment:\n       I wonder if we could be a bit less definitive here; in terms of suggesting tweaking the CMake flags being *definitely* the first thing to try - it's not something I've needed to do often for fixing C++ & R build errors.  I think we should be suggesting a thorough look at the error message and that changing the CMake flags *could* be useful.\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -31,21 +31,102 @@\n \n .. _build-arrow:\n \n-*********************************\n-Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n-*********************************\n+************************************\n+Building the Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n+************************************\n \n+The Arrow project contains good number of libraries that enable\n+work in many languages. Most libraries (C++, C#, Go, Java,\n+JavaScript, Julia, and Rust) already contain distinct implementations\n+of Arrow. \n \n+It is different for C (Glib), MATLAB, Python, R, and Ruby as they\n+are built on top of the C++ library. In this section we will be\n+dealing with this second part of the libraries plus some of C++.\n \n-Building C++\n-============\n+In this case, if you decide to contribute to Arrow you will meet\n+the topic of compiling the source code and use of CMake. You may\n+have some experience with it or not. If not, it is good to read\n+through this part so you understand what is happening in the process\n+of building Arrow better.\n+\n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n+\n+Building Arrow C++\n+==================\n+\n+Why build Arrow C++ from source?\n+--------------------------------\n+\n+For Arrow C++ implementation and its bindings (Python and R for example)\n+these bindings are wrapping the underlying C++ functions. Even if you\n+want to work on PyArrow or R package the source code of C++ may have to\n+be edited also.\n+\n+About CMake\n+-----------\n+\n+CMake is a cross platform build system generator and it defers\n+to another program such as ``make`` or ``ninja`` for the actual build.\n+If running into errors with the build process, the first thing to try is\n+to tweak some CMake flags for compiling Arrow.\n+\n+.. TODO\n+.. CMake presets\n+.. Ex: \"We now have CMake Presets which are useful starting points.\"\n+.. https://github.com/apache/arrow/blob/master/docs/source/developers/cpp/building.rst#cmake-presets\n+\n+\n+Optional flags and why might we use them\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+.. TODO short description of the use of flags\n+.. R and Python have specific lists of flags in their respective building docs that can be referenced.\n+\n+.. seealso::\n+\tFull list of optional flags: :ref:`cpp_build_optional_components`\n+\n+.. Environment variables useful for developers\n+.. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+.. TODO short description of the use of env vars\n+\n+Building from source vs. using binaries\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+Using binaries is a fast and simple way of working with the latest\n+Arrow version. But you do not have the possibility to add or change\n+the code and as a contributor you will need to.\n\nReview comment:\n       ```suggestion\r\n   Arrow version.  However, if you use these it means that you will be unable to make \r\n   changes to the Arrow C++ library.\r\n   ```\r\n   Removed \"you will need to\" as this isn't necessarily the case.\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -31,21 +31,102 @@\n \n .. _build-arrow:\n \n-*********************************\n-Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n-*********************************\n+************************************\n+Building the Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n+************************************\n \n+The Arrow project contains good number of libraries that enable\n+work in many languages. Most libraries (C++, C#, Go, Java,\n+JavaScript, Julia, and Rust) already contain distinct implementations\n+of Arrow. \n \n+It is different for C (Glib), MATLAB, Python, R, and Ruby as they\n+are built on top of the C++ library. In this section we will be\n+dealing with this second part of the libraries plus some of C++.\n \n-Building C++\n-============\n+In this case, if you decide to contribute to Arrow you will meet\n+the topic of compiling the source code and use of CMake. You may\n+have some experience with it or not. If not, it is good to read\n+through this part so you understand what is happening in the process\n+of building Arrow better.\n+\n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n+\n+Building Arrow C++\n+==================\n+\n+Why build Arrow C++ from source?\n+--------------------------------\n+\n+For Arrow C++ implementation and its bindings (Python and R for example)\n+these bindings are wrapping the underlying C++ functions. Even if you\n+want to work on PyArrow or R package the source code of C++ may have to\n+be edited also.\n+\n+About CMake\n+-----------\n+\n+CMake is a cross platform build system generator and it defers\n+to another program such as ``make`` or ``ninja`` for the actual build.\n+If running into errors with the build process, the first thing to try is\n+to tweak some CMake flags for compiling Arrow.\n+\n+.. TODO\n+.. CMake presets\n+.. Ex: \"We now have CMake Presets which are useful starting points.\"\n+.. https://github.com/apache/arrow/blob/master/docs/source/developers/cpp/building.rst#cmake-presets\n+\n+\n+Optional flags and why might we use them\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+.. TODO short description of the use of flags\n+.. R and Python have specific lists of flags in their respective building docs that can be referenced.\n+\n+.. seealso::\n+\tFull list of optional flags: :ref:`cpp_build_optional_components`\n+\n+.. Environment variables useful for developers\n+.. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+.. TODO short description of the use of env vars\n+\n+Building from source vs. using binaries\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+Using binaries is a fast and simple way of working with the latest\n\nReview comment:\n       I may be being pedantic about the use of the word \"latest\" here, but binaries are the released or nightly versions rather than the truly most up-to-date version (i.e. latest code merged into the master branch).\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -31,21 +31,102 @@\n \n .. _build-arrow:\n \n-*********************************\n-Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n-*********************************\n+************************************\n+Building the Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n+************************************\n \n+The Arrow project contains good number of libraries that enable\n+work in many languages. Most libraries (C++, C#, Go, Java,\n+JavaScript, Julia, and Rust) already contain distinct implementations\n+of Arrow. \n \n+It is different for C (Glib), MATLAB, Python, R, and Ruby as they\n+are built on top of the C++ library. In this section we will be\n+dealing with this second part of the libraries plus some of C++.\n \n-Building C++\n-============\n+In this case, if you decide to contribute to Arrow you will meet\n+the topic of compiling the source code and use of CMake. You may\n+have some experience with it or not. If not, it is good to read\n+through this part so you understand what is happening in the process\n+of building Arrow better.\n+\n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n+\n+Building Arrow C++\n+==================\n+\n+Why build Arrow C++ from source?\n+--------------------------------\n+\n+For Arrow C++ implementation and its bindings (Python and R for example)\n+these bindings are wrapping the underlying C++ functions. Even if you\n+want to work on PyArrow or R package the source code of C++ may have to\n+be edited also.\n+\n+About CMake\n+-----------\n+\n+CMake is a cross platform build system generator and it defers\n+to another program such as ``make`` or ``ninja`` for the actual build.\n+If running into errors with the build process, the first thing to try is\n+to tweak some CMake flags for compiling Arrow.\n+\n+.. TODO\n+.. CMake presets\n+.. Ex: \"We now have CMake Presets which are useful starting points.\"\n+.. https://github.com/apache/arrow/blob/master/docs/source/developers/cpp/building.rst#cmake-presets\n+\n+\n+Optional flags and why might we use them\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+.. TODO short description of the use of flags\n+.. R and Python have specific lists of flags in their respective building docs that can be referenced.\n+\n+.. seealso::\n+\tFull list of optional flags: :ref:`cpp_build_optional_components`\n+\n+.. Environment variables useful for developers\n+.. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+.. TODO short description of the use of env vars\n+\n+Building from source vs. using binaries\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+Using binaries is a fast and simple way of working with the latest\n+Arrow version. But you do not have the possibility to add or change\n+the code and as a contributor you will need to.\n+\n+Detailed instructions on building C++ library from source can\n+be found :ref:`here <building-arrow-cpp>`.\n \n .. _build-pyarrow:\n \n Building PyArrow\n ================\n \n-.. _build-rarrow:\n+After building Arrow C++ part of Arrow you have to build PyArrow on top\n+of it also. The reason is the same, so you can edit the code and run\n+tests on the edited code you have locally.\n \n-Building R-Arrow\n-================\n+**Why do we have to do builds separately?**\n+\n+As mentioned in the beginning of this page, Python part of the Arrow\n+project is built on top of C++. In order to make changes in Python part\n\nReview comment:\n       ```suggestion\r\n   project is built on top of the C++ library. In order to make changes in the Python part\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -31,21 +31,102 @@\n \n .. _build-arrow:\n \n-*********************************\n-Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n-*********************************\n+************************************\n+Building the Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n+************************************\n \n+The Arrow project contains good number of libraries that enable\n+work in many languages. Most libraries (C++, C#, Go, Java,\n+JavaScript, Julia, and Rust) already contain distinct implementations\n+of Arrow. \n \n+It is different for C (Glib), MATLAB, Python, R, and Ruby as they\n+are built on top of the C++ library. In this section we will be\n+dealing with this second part of the libraries plus some of C++.\n \n-Building C++\n-============\n+In this case, if you decide to contribute to Arrow you will meet\n+the topic of compiling the source code and use of CMake. You may\n+have some experience with it or not. If not, it is good to read\n+through this part so you understand what is happening in the process\n+of building Arrow better.\n+\n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n+\n+Building Arrow C++\n+==================\n+\n+Why build Arrow C++ from source?\n+--------------------------------\n+\n+For Arrow C++ implementation and its bindings (Python and R for example)\n+these bindings are wrapping the underlying C++ functions. Even if you\n+want to work on PyArrow or R package the source code of C++ may have to\n+be edited also.\n+\n+About CMake\n+-----------\n+\n+CMake is a cross platform build system generator and it defers\n+to another program such as ``make`` or ``ninja`` for the actual build.\n+If running into errors with the build process, the first thing to try is\n+to tweak some CMake flags for compiling Arrow.\n+\n+.. TODO\n+.. CMake presets\n+.. Ex: \"We now have CMake Presets which are useful starting points.\"\n+.. https://github.com/apache/arrow/blob/master/docs/source/developers/cpp/building.rst#cmake-presets\n+\n+\n+Optional flags and why might we use them\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+.. TODO short description of the use of flags\n+.. R and Python have specific lists of flags in their respective building docs that can be referenced.\n+\n+.. seealso::\n+\tFull list of optional flags: :ref:`cpp_build_optional_components`\n+\n+.. Environment variables useful for developers\n+.. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+.. TODO short description of the use of env vars\n+\n+Building from source vs. using binaries\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+Using binaries is a fast and simple way of working with the latest\n+Arrow version. But you do not have the possibility to add or change\n+the code and as a contributor you will need to.\n+\n+Detailed instructions on building C++ library from source can\n+be found :ref:`here <building-arrow-cpp>`.\n \n .. _build-pyarrow:\n \n Building PyArrow\n ================\n \n-.. _build-rarrow:\n+After building Arrow C++ part of Arrow you have to build PyArrow on top\n\nReview comment:\n       ```suggestion\r\n   After building the Arrow C++ library, you need to build PyArrow on top\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -31,21 +31,102 @@\n \n .. _build-arrow:\n \n-*********************************\n-Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n-*********************************\n+************************************\n+Building the Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n+************************************\n \n+The Arrow project contains good number of libraries that enable\n+work in many languages. Most libraries (C++, C#, Go, Java,\n+JavaScript, Julia, and Rust) already contain distinct implementations\n+of Arrow. \n \n+It is different for C (Glib), MATLAB, Python, R, and Ruby as they\n+are built on top of the C++ library. In this section we will be\n+dealing with this second part of the libraries plus some of C++.\n \n-Building C++\n-============\n+In this case, if you decide to contribute to Arrow you will meet\n+the topic of compiling the source code and use of CMake. You may\n+have some experience with it or not. If not, it is good to read\n+through this part so you understand what is happening in the process\n+of building Arrow better.\n+\n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n+\n+Building Arrow C++\n+==================\n+\n+Why build Arrow C++ from source?\n+--------------------------------\n+\n+For Arrow C++ implementation and its bindings (Python and R for example)\n+these bindings are wrapping the underlying C++ functions. Even if you\n+want to work on PyArrow or R package the source code of C++ may have to\n+be edited also.\n+\n+About CMake\n+-----------\n+\n+CMake is a cross platform build system generator and it defers\n+to another program such as ``make`` or ``ninja`` for the actual build.\n+If running into errors with the build process, the first thing to try is\n+to tweak some CMake flags for compiling Arrow.\n+\n+.. TODO\n+.. CMake presets\n+.. Ex: \"We now have CMake Presets which are useful starting points.\"\n+.. https://github.com/apache/arrow/blob/master/docs/source/developers/cpp/building.rst#cmake-presets\n+\n+\n+Optional flags and why might we use them\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+.. TODO short description of the use of flags\n+.. R and Python have specific lists of flags in their respective building docs that can be referenced.\n+\n+.. seealso::\n+\tFull list of optional flags: :ref:`cpp_build_optional_components`\n+\n+.. Environment variables useful for developers\n+.. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+.. TODO short description of the use of env vars\n+\n+Building from source vs. using binaries\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+Using binaries is a fast and simple way of working with the latest\n+Arrow version. But you do not have the possibility to add or change\n+the code and as a contributor you will need to.\n+\n+Detailed instructions on building C++ library from source can\n+be found :ref:`here <building-arrow-cpp>`.\n \n .. _build-pyarrow:\n \n Building PyArrow\n ================\n \n-.. _build-rarrow:\n+After building Arrow C++ part of Arrow you have to build PyArrow on top\n+of it also. The reason is the same, so you can edit the code and run\n\nReview comment:\n       ```suggestion\r\n   of it also. The reason is the same; so you can edit the code and run\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -31,21 +31,102 @@\n \n .. _build-arrow:\n \n-*********************************\n-Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n-*********************************\n+************************************\n+Building the Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n+************************************\n \n+The Arrow project contains good number of libraries that enable\n+work in many languages. Most libraries (C++, C#, Go, Java,\n+JavaScript, Julia, and Rust) already contain distinct implementations\n+of Arrow. \n \n+It is different for C (Glib), MATLAB, Python, R, and Ruby as they\n+are built on top of the C++ library. In this section we will be\n+dealing with this second part of the libraries plus some of C++.\n \n-Building C++\n-============\n+In this case, if you decide to contribute to Arrow you will meet\n+the topic of compiling the source code and use of CMake. You may\n+have some experience with it or not. If not, it is good to read\n+through this part so you understand what is happening in the process\n+of building Arrow better.\n+\n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n+\n+Building Arrow C++\n+==================\n+\n+Why build Arrow C++ from source?\n+--------------------------------\n+\n+For Arrow C++ implementation and its bindings (Python and R for example)\n+these bindings are wrapping the underlying C++ functions. Even if you\n+want to work on PyArrow or R package the source code of C++ may have to\n+be edited also.\n+\n+About CMake\n+-----------\n+\n+CMake is a cross platform build system generator and it defers\n+to another program such as ``make`` or ``ninja`` for the actual build.\n+If running into errors with the build process, the first thing to try is\n+to tweak some CMake flags for compiling Arrow.\n+\n+.. TODO\n+.. CMake presets\n+.. Ex: \"We now have CMake Presets which are useful starting points.\"\n+.. https://github.com/apache/arrow/blob/master/docs/source/developers/cpp/building.rst#cmake-presets\n+\n+\n+Optional flags and why might we use them\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+.. TODO short description of the use of flags\n+.. R and Python have specific lists of flags in their respective building docs that can be referenced.\n+\n+.. seealso::\n+\tFull list of optional flags: :ref:`cpp_build_optional_components`\n+\n+.. Environment variables useful for developers\n+.. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+.. TODO short description of the use of env vars\n+\n+Building from source vs. using binaries\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+Using binaries is a fast and simple way of working with the latest\n+Arrow version. But you do not have the possibility to add or change\n+the code and as a contributor you will need to.\n+\n+Detailed instructions on building C++ library from source can\n+be found :ref:`here <building-arrow-cpp>`.\n \n .. _build-pyarrow:\n \n Building PyArrow\n ================\n \n-.. _build-rarrow:\n+After building Arrow C++ part of Arrow you have to build PyArrow on top\n+of it also. The reason is the same, so you can edit the code and run\n+tests on the edited code you have locally.\n \n-Building R-Arrow\n-================\n+**Why do we have to do builds separately?**\n+\n+As mentioned in the beginning of this page, Python part of the Arrow\n+project is built on top of C++. In order to make changes in Python part\n+of Arrow as well as C++ part of Arrow, we need to build them separately.\n+\n+We hope this introduction was enough to help you start with the building\n+process.\n+\n+.. seealso::\n+\tFollow the instructions to build PyArrow together with the C++ library\n+\n+\t- :ref:`build_pyarrow`\n+\tOr\n+\n+\t- :ref:`build_pyarrow_win`\n+\n+.. _build-rapackage:\n+\n+Building R package\n\nReview comment:\n       ```suggestion\r\n   Building the R package\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-03T15:39:46.346+0000",
                    "updated": "2021-12-03T15:39:46.346+0000",
                    "started": "2021-12-03T15:39:46.346+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "690108",
                    "issueId": "13412497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412497/worklog/690846",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on a change in pull request #11820:\nURL: https://github.com/apache/arrow/pull/11820#discussion_r762820605\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -31,21 +31,102 @@\n \n .. _build-arrow:\n \n-*********************************\n-Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n-*********************************\n+************************************\n+Building the Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n+************************************\n \n+The Arrow project contains good number of libraries that enable\n+work in many languages. Most libraries (C++, C#, Go, Java,\n+JavaScript, Julia, and Rust) already contain distinct implementations\n+of Arrow. \n \n+It is different for C (Glib), MATLAB, Python, R, and Ruby as they\n+are built on top of the C++ library. In this section we will be\n+dealing with this second part of the libraries plus some of C++.\n \n-Building C++\n-============\n+In this case, if you decide to contribute to Arrow you will meet\n+the topic of compiling the source code and use of CMake. You may\n+have some experience with it or not. If not, it is good to read\n+through this part so you understand what is happening in the process\n+of building Arrow better.\n+\n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n+\n+Building Arrow C++\n+==================\n+\n+Why build Arrow C++ from source?\n+--------------------------------\n+\n+For Arrow C++ implementation and its bindings (Python and R for example)\n+these bindings are wrapping the underlying C++ functions. Even if you\n+want to work on PyArrow or R package the source code of C++ may have to\n+be edited also.\n+\n+About CMake\n+-----------\n+\n+CMake is a cross platform build system generator and it defers\n+to another program such as ``make`` or ``ninja`` for the actual build.\n+If running into errors with the build process, the first thing to try is\n+to tweak some CMake flags for compiling Arrow.\n+\n+.. TODO\n+.. CMake presets\n+.. Ex: \"We now have CMake Presets which are useful starting points.\"\n+.. https://github.com/apache/arrow/blob/master/docs/source/developers/cpp/building.rst#cmake-presets\n+\n+\n+Optional flags and why might we use them\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+.. TODO short description of the use of flags\n+.. R and Python have specific lists of flags in their respective building docs that can be referenced.\n+\n+.. seealso::\n+\tFull list of optional flags: :ref:`cpp_build_optional_components`\n+\n+.. Environment variables useful for developers\n+.. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+.. TODO short description of the use of env vars\n+\n+Building from source vs. using binaries\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+Using binaries is a fast and simple way of working with the latest\n\nReview comment:\n       Thanks for pointing it out! I will rephrase.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-06T09:13:51.473+0000",
                    "updated": "2021-12-06T09:13:51.473+0000",
                    "started": "2021-12-06T09:13:51.473+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "690846",
                    "issueId": "13412497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412497/worklog/690910",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on pull request #11820:\nURL: https://github.com/apache/arrow/pull/11820#issuecomment-986688195\n\n\n   Added the suggestions and the TODO parts (flags, env vars and CMake presets). I think this is ready for another round of review @thisisnic @jorisvandenbossche @pitrou Thank you!\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-06T11:27:48.154+0000",
                    "updated": "2021-12-06T11:27:48.154+0000",
                    "started": "2021-12-06T11:27:48.154+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "690910",
                    "issueId": "13412497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412497/worklog/690923",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #11820:\nURL: https://github.com/apache/arrow/pull/11820#discussion_r762924663\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -31,21 +31,120 @@\n \n .. _build-arrow:\n \n-*********************************\n-Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n-*********************************\n+**********************************\n+Building the Arrow libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n+**********************************\n \n+The Arrow project contains a number of libraries that enable\n+work in many languages. Most libraries (C++, C#, Go, Java,\n+JavaScript, Julia, and Rust) already contain distinct implementations\n+of Arrow. \n \n+It is different for C (Glib), MATLAB, Python, R, and Ruby as they\n+are built on top of the C++ library. In this section of the guide\n+we will try to make a friendly introduction to the build\n\nReview comment:\n       ```suggestion\r\n   we will try to make a friendly introduction to the build,\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -31,21 +31,120 @@\n \n .. _build-arrow:\n \n-*********************************\n-Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n-*********************************\n+**********************************\n+Building the Arrow libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n+**********************************\n \n+The Arrow project contains a number of libraries that enable\n+work in many languages. Most libraries (C++, C#, Go, Java,\n+JavaScript, Julia, and Rust) already contain distinct implementations\n+of Arrow. \n \n+It is different for C (Glib), MATLAB, Python, R, and Ruby as they\n+are built on top of the C++ library. In this section of the guide\n+we will try to make a friendly introduction to the build\n+dealing with some of these libraries as well has how they work with\n+the C++ library.\n \n-Building C++\n-============\n+If you decide to contribute to Arrow you might need to compile the\n+C++ source code. This is done using a tool called CMake, which you\n+may or may not have experience with. If not, this section of the\n+guide will help you better understand CMake and the process\n+of building Arrow's C++ code.\n \n-.. _build-pyarrow:\n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n \n-Building PyArrow\n-================\n+Building Arrow C++\n+==================\n \n-.. _build-rarrow:\n+Why build Arrow C++ from source?\n+--------------------------------\n+\n+For Arrow implementations which are built on top of the C++ implementation\n+(e.g. Python and R), wrappers and interfaces have been written to the\n+underlying C++ functions. If you want to work on PyArrow or R package,\n+you may need to edit the source code of the C++ library too.\n+\n+Detailed instructions on building C++ library from source can\n+be found :ref:`here <building-arrow-cpp>`.\n+\n+About CMake\n+-----------\n+\n+CMake is a cross-platform build system generator and it defers\n+to another program such as ``make`` or ``ninja`` for the actual build.\n+If you are running into errors with the build process, the first thing to\n+do is to look at the error message thoroughly and check the building\n+documentation for any similar error advice. Also changing the CMake flags\n+for compiling Arrow could be useful.\n+\n+CMake presets\n+-------------\n+\n+You could also try to build with CMake presets which are a collection of\n+build and test recipes for Arrow's CMake. They are a very useful\n+starting points.\n+\n+More detailed information about CMake presets can be found in\n+the :ref:`cmake_presets` section.\n+\n+Optional flags and environment variables\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+Flags used in the CMake build are used to include additional components\n+and to handle third-party dependencies.\n+The build for C++ library can be minimal with no use of flags or can\n+be changed with adding optional components from the\n+:ref:`list <cpp_build_optional_components>`.\n+\n+.. seealso::\n+\tFull list of optional flags: :ref:`cpp_build_optional_components`\n+\n+R and Python have specific lists of flags in their respective builds\n+that need to be included. You can find the links at the end\n+of this section.\n+\n+In general on Python side the options are set with CMake flags and\n+paths with environment variables. In R the environment variables are used\n+for all things connected to the build, also for setting CMake flags.\n+\n+Building from source vs. using binaries\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+Using binaries is a fast and simple way of working with the last release\n+of Arrow. However, if you use these it means that you will be unable to\n+make changes to the Arrow C++ library.\n+\n+**Note:** every language has it's own way of dealing with binaries.\n\nReview comment:\n       ```suggestion\r\n   **Note:** every language has its own way of dealing with binaries.\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -31,21 +31,120 @@\n \n .. _build-arrow:\n \n-*********************************\n-Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n-*********************************\n+**********************************\n+Building the Arrow libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n+**********************************\n \n+The Arrow project contains a number of libraries that enable\n+work in many languages. Most libraries (C++, C#, Go, Java,\n+JavaScript, Julia, and Rust) already contain distinct implementations\n+of Arrow. \n \n+It is different for C (Glib), MATLAB, Python, R, and Ruby as they\n+are built on top of the C++ library. In this section of the guide\n+we will try to make a friendly introduction to the build\n+dealing with some of these libraries as well has how they work with\n+the C++ library.\n \n-Building C++\n-============\n+If you decide to contribute to Arrow you might need to compile the\n+C++ source code. This is done using a tool called CMake, which you\n+may or may not have experience with. If not, this section of the\n+guide will help you better understand CMake and the process\n+of building Arrow's C++ code.\n \n-.. _build-pyarrow:\n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n\nReview comment:\n       ```suggestion\r\n   This content is intended to help explain the concepts related to \r\n   and tools required for building Arrow's C++ library from source.\r\n   If you are looking for the specific required steps, or already feel comfortable \r\n   with compiling Arrow's C++ library, then feel free to proceed\r\n   to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\r\n   `R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\r\n   ```\r\n   How about we add a little bit here to emphasise that this section is about *understanding* and isn't intended to provide concrete steps for the reader?\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -31,21 +31,120 @@\n \n .. _build-arrow:\n \n-*********************************\n-Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n-*********************************\n+**********************************\n+Building the Arrow libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n+**********************************\n \n+The Arrow project contains a number of libraries that enable\n+work in many languages. Most libraries (C++, C#, Go, Java,\n+JavaScript, Julia, and Rust) already contain distinct implementations\n+of Arrow. \n \n+It is different for C (Glib), MATLAB, Python, R, and Ruby as they\n+are built on top of the C++ library. In this section of the guide\n+we will try to make a friendly introduction to the build\n+dealing with some of these libraries as well has how they work with\n+the C++ library.\n \n-Building C++\n-============\n+If you decide to contribute to Arrow you might need to compile the\n+C++ source code. This is done using a tool called CMake, which you\n+may or may not have experience with. If not, this section of the\n+guide will help you better understand CMake and the process\n+of building Arrow's C++ code.\n \n-.. _build-pyarrow:\n+If you feel comfortable with compiling then feel free to proceed\n+to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n+`R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n \n-Building PyArrow\n-================\n+Building Arrow C++\n+==================\n \n-.. _build-rarrow:\n+Why build Arrow C++ from source?\n+--------------------------------\n+\n+For Arrow implementations which are built on top of the C++ implementation\n+(e.g. Python and R), wrappers and interfaces have been written to the\n+underlying C++ functions. If you want to work on PyArrow or R package,\n\nReview comment:\n       ```suggestion\r\n   underlying C++ functions. If you want to work on PyArrow or the R package,\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-06T11:40:22.375+0000",
                    "updated": "2021-12-06T11:40:22.375+0000",
                    "started": "2021-12-06T11:40:22.374+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "690923",
                    "issueId": "13412497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412497/worklog/690944",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #11820:\nURL: https://github.com/apache/arrow/pull/11820#discussion_r762953347\n\n\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -31,87 +31,120 @@\n \n .. _build-arrow:\n \n-*********************************\n-Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n-*********************************\n-\n-If you decide to contribute to Arrow you will meet the topic of\n-compiling source code and use of CMake. You may have some\n-experience with it or not. If not, it is good to read through\n-this part so you understand what is happening in the process of\n-building Arrow better.\n+**********************************\n+Building the Arrow libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n+**********************************\n+\n+The Arrow project contains a number of libraries that enable\n+work in many languages. Most libraries (C++, C#, Go, Java,\n+JavaScript, Julia, and Rust) already contain distinct implementations\n+of Arrow. \n+\n+It is different for C (Glib), MATLAB, Python, R, and Ruby as they\n\nReview comment:\n       ```suggestion\r\n   This is different for C (Glib), MATLAB, Python, R, and Ruby as they\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -31,87 +31,120 @@\n \n .. _build-arrow:\n \n-*********************************\n-Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n-*********************************\n-\n-If you decide to contribute to Arrow you will meet the topic of\n-compiling source code and use of CMake. You may have some\n-experience with it or not. If not, it is good to read through\n-this part so you understand what is happening in the process of\n-building Arrow better.\n+**********************************\n+Building the Arrow libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n+**********************************\n+\n+The Arrow project contains a number of libraries that enable\n+work in many languages. Most libraries (C++, C#, Go, Java,\n+JavaScript, Julia, and Rust) already contain distinct implementations\n+of Arrow. \n+\n+It is different for C (Glib), MATLAB, Python, R, and Ruby as they\n+are built on top of the C++ library. In this section of the guide\n+we will try to make a friendly introduction to the build\n+dealing with some of these libraries as well has how they work with\n+the C++ library.\n+\n+If you decide to contribute to Arrow you might need to compile the\n+C++ source code. This is done using a tool called CMake, which you\n+may or may not have experience with. If not, this section of the\n+guide will help you better understand CMake and the process\n+of building Arrow's C++ code.\n \n If you feel comfortable with compiling then feel free to proceed\n to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n `R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n \n-Building C++\n-============\n+Building Arrow C++\n+==================\n+\n+Why build Arrow C++ from source?\n+--------------------------------\n \n-Why build C++ from source?\n---------------------------\n+For Arrow implementations which are built on top of the C++ implementation\n+(e.g. Python and R), wrappers and interfaces have been written to the\n+underlying C++ functions. If you want to work on PyArrow or R package,\n+you may need to edit the source code of the C++ library too.\n \n-The core of Arrow is written in C++ and all bindings in other\n-languages (Python, R, ..) are wrapping underlying\n-C++ functions. Even if you want to work on PyArrow or R package\n-the source code of C++ may have to be edited also.\n+Detailed instructions on building C++ library from source can\n+be found :ref:`here <building-arrow-cpp>`.\n \n About CMake\n -----------\n \n-CMake is a cross platform build system generator and it uses make\n-for the actual build. In the compiling process of Arrow what will\n-most probably be needed is some tweaking of the flags that are added\n-to cmake in the compiling process of Arrow.\n+CMake is a cross-platform build system generator and it defers\n+to another program such as ``make`` or ``ninja`` for the actual build.\n+If you are running into errors with the build process, the first thing to\n+do is to look at the error message thoroughly and check the building\n+documentation for any similar error advice. Also changing the CMake flags\n+for compiling Arrow could be useful.\n+\n+CMake presets\n+-------------\n+\n+You could also try to build with CMake presets which are a collection of\n+build and test recipes for Arrow's CMake. They are a very useful\n+starting points.\n \n+More detailed information about CMake presets can be found in\n+the :ref:`cmake_presets` section.\n \n-Optional flags and why might we use them\n+Optional flags and environment variables\n ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-.. TODO short description of the use of flags\n+\n+Flags used in the CMake build are used to include additional components\n+and to handle third-party dependencies.\n+The build for C++ library can be minimal with no use of flags or can\n+be changed with adding optional components from the\n+:ref:`list <cpp_build_optional_components>`.\n \n .. seealso::\n \tFull list of optional flags: :ref:`cpp_build_optional_components`\n \n-.. Environment variables useful for developers\n-.. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-.. TODO short description of the use of env vars\n+R and Python have specific lists of flags in their respective builds\n+that need to be included. You can find the links at the end\n+of this section.\n+\n+In general on Python side the options are set with CMake flags and\n\nReview comment:\n       ```suggestion\r\n   In general on Python side, the options are set with CMake flags and\r\n   ```\n\n##########\nFile path: docs/source/developers/guide/step_by_step/building.rst\n##########\n@@ -31,87 +31,120 @@\n \n .. _build-arrow:\n \n-*********************************\n-Building Arrow's libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n-*********************************\n-\n-If you decide to contribute to Arrow you will meet the topic of\n-compiling source code and use of CMake. You may have some\n-experience with it or not. If not, it is good to read through\n-this part so you understand what is happening in the process of\n-building Arrow better.\n+**********************************\n+Building the Arrow libraries \ud83c\udfcb\ud83c\udfff\u200d\u2640\ufe0f\n+**********************************\n+\n+The Arrow project contains a number of libraries that enable\n+work in many languages. Most libraries (C++, C#, Go, Java,\n+JavaScript, Julia, and Rust) already contain distinct implementations\n+of Arrow. \n+\n+It is different for C (Glib), MATLAB, Python, R, and Ruby as they\n+are built on top of the C++ library. In this section of the guide\n+we will try to make a friendly introduction to the build\n+dealing with some of these libraries as well has how they work with\n+the C++ library.\n+\n+If you decide to contribute to Arrow you might need to compile the\n+C++ source code. This is done using a tool called CMake, which you\n+may or may not have experience with. If not, this section of the\n+guide will help you better understand CMake and the process\n+of building Arrow's C++ code.\n \n If you feel comfortable with compiling then feel free to proceed\n to the :ref:`C++ <building-arrow-cpp>`, :ref:`PyArrow <build_pyarrow>` or\n `R package build section <https://arrow.apache.org/docs/r/articles/developing.html>`_.\n \n-Building C++\n-============\n+Building Arrow C++\n+==================\n+\n+Why build Arrow C++ from source?\n+--------------------------------\n \n-Why build C++ from source?\n---------------------------\n+For Arrow implementations which are built on top of the C++ implementation\n+(e.g. Python and R), wrappers and interfaces have been written to the\n+underlying C++ functions. If you want to work on PyArrow or R package,\n+you may need to edit the source code of the C++ library too.\n \n-The core of Arrow is written in C++ and all bindings in other\n-languages (Python, R, ..) are wrapping underlying\n-C++ functions. Even if you want to work on PyArrow or R package\n-the source code of C++ may have to be edited also.\n+Detailed instructions on building C++ library from source can\n+be found :ref:`here <building-arrow-cpp>`.\n \n About CMake\n -----------\n \n-CMake is a cross platform build system generator and it uses make\n-for the actual build. In the compiling process of Arrow what will\n-most probably be needed is some tweaking of the flags that are added\n-to cmake in the compiling process of Arrow.\n+CMake is a cross-platform build system generator and it defers\n+to another program such as ``make`` or ``ninja`` for the actual build.\n+If you are running into errors with the build process, the first thing to\n+do is to look at the error message thoroughly and check the building\n+documentation for any similar error advice. Also changing the CMake flags\n+for compiling Arrow could be useful.\n+\n+CMake presets\n+-------------\n\nReview comment:\n       ```suggestion\r\n   ^^^^^^^^^^^^^^^^^^^\r\n   ```\r\n   \r\n   (then it's a subsection below \"CMake\"?)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-06T12:19:12.383+0000",
                    "updated": "2021-12-06T12:19:12.383+0000",
                    "started": "2021-12-06T12:19:12.382+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "690944",
                    "issueId": "13412497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412497/worklog/692527",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic closed pull request #11820:\nURL: https://github.com/apache/arrow/pull/11820\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-08T12:55:49.562+0000",
                    "updated": "2021-12-08T12:55:49.562+0000",
                    "started": "2021-12-08T12:55:49.562+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "692527",
                    "issueId": "13412497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412497/worklog/692533",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on pull request #11820:\nURL: https://github.com/apache/arrow/pull/11820#issuecomment-988794944\n\n\n   Benchmark runs are scheduled for baseline = 6896c6eeca22c2ea3d713aa64cfea518499de0c6 and contender = 065b1fcba985b067e960947e79ae62c8925dc42a. 065b1fcba985b067e960947e79ae62c8925dc42a is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Scheduled] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/84ac46d7a7c64b24a9f516b34d59f3da...eae4e29a561843298f064f2a35c3f5a8/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/30c6b37602aa4b9d8ed4a3169c6fb346...e65db6d792254adfa7caed792bc8f0b9/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/71c8f1c6e7d046cb8731852ae259e854...3650988425bf4321abe68911540cca5e/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-08T13:01:18.572+0000",
                    "updated": "2021-12-08T13:01:18.572+0000",
                    "started": "2021-12-08T13:01:18.571+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "692533",
                    "issueId": "13412497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412497/worklog/692550",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #11820:\nURL: https://github.com/apache/arrow/pull/11820#issuecomment-988794944\n\n\n   Benchmark runs are scheduled for baseline = 6896c6eeca22c2ea3d713aa64cfea518499de0c6 and contender = 065b1fcba985b067e960947e79ae62c8925dc42a. 065b1fcba985b067e960947e79ae62c8925dc42a is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/84ac46d7a7c64b24a9f516b34d59f3da...eae4e29a561843298f064f2a35c3f5a8/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/30c6b37602aa4b9d8ed4a3169c6fb346...e65db6d792254adfa7caed792bc8f0b9/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/71c8f1c6e7d046cb8731852ae259e854...3650988425bf4321abe68911540cca5e/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-08T13:21:21.309+0000",
                    "updated": "2021-12-08T13:21:21.309+0000",
                    "started": "2021-12-08T13:21:21.308+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "692550",
                    "issueId": "13412497"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 13200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5e49695e[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7a0d0948[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@34394a96[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@26ec4210[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5731c487[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@862a6e1[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@76f12081[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@32c9108d[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6b05efaf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@76cd1980[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@9c7daf0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7370ee3d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13200,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Dec 08 12:55:44 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-12-08T12:55:44.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14753/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-11-18T10:40:29.000+0000",
        "updated": "2021-12-09T16:51:20.000+0000",
        "timeoriginalestimate": null,
        "description": "*Building C++* section of the Steps in making your first PR.\r\n\r\nSteps in making your first PR outline:\r\n * Set up (command line and Git)\r\n * Building Arrow package\r\n ** Building C++\r\n ** Building PyArrow\r\n ** Building R-Arrow\r\n * Finding good first issues\r\n * Solving the problem\r\n ** Python bindings\r\n ** R bindings\r\n * Testing\r\n * Life cycle of a Pull Request\r\n ** Making the PR\r\n ** Reviews and get the PR merge",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Doc] Steps in making your first PR - building C++",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412497/comment/17455222",
                    "id": "17455222",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "body": "Issue resolved by pull request 11820\n[https://github.com/apache/arrow/pull/11820]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "created": "2021-12-08T12:55:44.903+0000",
                    "updated": "2021-12-08T12:55:44.903+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0wuww:",
        "customfield_12314139": null
    }
}