{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13176454",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13176454",
    "key": "ARROW-2963",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=marco.neumann.by",
            "name": "marco.neumann.by",
            "key": "marco.neumann.by",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Marco Neumann",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=marco.neumann.by",
            "name": "marco.neumann.by",
            "key": "marco.neumann.by",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Marco Neumann",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "aggregateprogress": {
            "progress": 6000,
            "total": 6000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6000,
            "total": 6000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2963/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 10,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13176454/worklog/130321",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou opened a new pull request #2363: ARROW-2963: [C++] Make thread pool fork-safe\nURL: https://github.com/apache/arrow/pull/2363\n \n \n   In a forked child process, ThreadPool should reinitialize its internal state as though no threads had been spawned.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-02T16:26:56.725+0000",
                    "updated": "2018-08-02T16:26:56.725+0000",
                    "started": "2018-08-02T16:26:56.724+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "130321",
                    "issueId": "13176454"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13176454/worklog/130560",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2363: ARROW-2963: [C++] Make thread pool fork-safe\nURL: https://github.com/apache/arrow/pull/2363#issuecomment-410023243\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2363?src=pr&el=h1) Report\n   > Merging [#2363](https://codecov.io/gh/apache/arrow/pull/2363?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/d48dce2cfebdbd044a8260d0a77f5fe3d89a4a2d?src=pr&el=desc) will **increase** coverage by `2.34%`.\n   > The diff coverage is `54.54%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2363/graphs/tree.svg?height=150&width=650&token=LpTCFbqVT1&src=pr)](https://codecov.io/gh/apache/arrow/pull/2363?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2363      +/-   ##\n   ==========================================\n   + Coverage   84.48%   86.83%   +2.34%     \n   ==========================================\n     Files         293      237      -56     \n     Lines       45220    42480    -2740     \n   ==========================================\n   - Hits        38205    36887    -1318     \n   + Misses       6984     5593    -1391     \n   + Partials       31        0      -31\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2363?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/util/thread-pool.h](https://codecov.io/gh/apache/arrow/pull/2363/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZC1wb29sLmg=) | `92.3% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/util/thread-pool-test.cc](https://codecov.io/gh/apache/arrow/pull/2363/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZC1wb29sLXRlc3QuY2M=) | `98.91% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/util/thread-pool.cc](https://codecov.io/gh/apache/arrow/pull/2363/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZC1wb29sLmNj) | `89.72% <54.54%> (-6.28%)` | :arrow_down: |\n   | [go/arrow/array/numericbuilder.gen.go](https://codecov.io/gh/apache/arrow/pull/2363/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvbnVtZXJpY2J1aWxkZXIuZ2VuLmdv) | | |\n   | [rust/src/lib.rs](https://codecov.io/gh/apache/arrow/pull/2363/diff?src=pr&el=tree#diff-cnVzdC9zcmMvbGliLnJz) | | |\n   | [go/arrow/array/booleanbuilder.go](https://codecov.io/gh/apache/arrow/pull/2363/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYm9vbGVhbmJ1aWxkZXIuZ28=) | | |\n   | [go/arrow/internal/cpu/cpu\\_x86.go](https://codecov.io/gh/apache/arrow/pull/2363/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvY3B1L2NwdV94ODYuZ28=) | | |\n   | [go/arrow/array/bufferbuilder.go](https://codecov.io/gh/apache/arrow/pull/2363/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlci5nbw==) | | |\n   | [go/arrow/memory/go\\_allocator.go](https://codecov.io/gh/apache/arrow/pull/2363/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L2dvX2FsbG9jYXRvci5nbw==) | | |\n   | [go/arrow/datatype\\_binary.go](https://codecov.io/gh/apache/arrow/pull/2363/diff?src=pr&el=tree#diff-Z28vYXJyb3cvZGF0YXR5cGVfYmluYXJ5Lmdv) | | |\n   | ... and [49 more](https://codecov.io/gh/apache/arrow/pull/2363/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2363?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2363?src=pr&el=footer). Last update [d48dce2...956556b](https://codecov.io/gh/apache/arrow/pull/2363?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-02T18:26:09.505+0000",
                    "updated": "2018-08-02T18:26:09.505+0000",
                    "started": "2018-08-02T18:26:09.505+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "130560",
                    "issueId": "13176454"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13176454/worklog/130567",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cpcloud commented on a change in pull request #2363: ARROW-2963: [C++] Make thread pool fork-safe\nURL: https://github.com/apache/arrow/pull/2363#discussion_r207330494\n \n \n\n ##########\n File path: cpp/src/arrow/util/thread-pool.cc\n ##########\n @@ -51,15 +51,46 @@ struct ThreadPool::State {\n ThreadPool::ThreadPool()\n     : sp_state_(std::make_shared<ThreadPool::State>()),\n       state_(sp_state_.get()),\n-      shutdown_on_destroy_(true) {}\n+      shutdown_on_destroy_(true) {\n+#ifndef _WIN32\n+  pid_ = getpid();\n+#endif\n+}\n \n ThreadPool::~ThreadPool() {\n   if (shutdown_on_destroy_) {\n     ARROW_UNUSED(Shutdown(false /* wait */));\n   }\n }\n \n+void ThreadPool::FixIfBroken() {\n \n Review comment:\n   Is there a less vague name for what this does?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-02T18:34:06.304+0000",
                    "updated": "2018-08-02T18:34:06.304+0000",
                    "started": "2018-08-02T18:34:06.303+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "130567",
                    "issueId": "13176454"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13176454/worklog/130568",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cpcloud commented on a change in pull request #2363: ARROW-2963: [C++] Make thread pool fork-safe\nURL: https://github.com/apache/arrow/pull/2363#discussion_r207330601\n \n \n\n ##########\n File path: cpp/src/arrow/util/thread-pool.h\n ##########\n @@ -136,6 +140,8 @@ class ARROW_EXPORT ThreadPool {\n   void LaunchWorkersUnlocked(int threads);\n   // Get the current actual capacity\n   int GetActualCapacity();\n+  // Protect against fork()\n \n Review comment:\n   Like maybe `ProtectAgainstFork()`? :)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-02T18:34:26.825+0000",
                    "updated": "2018-08-02T18:34:26.825+0000",
                    "started": "2018-08-02T18:34:26.825+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "130568",
                    "issueId": "13176454"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13176454/worklog/130572",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2363: ARROW-2963: [C++] Make thread pool fork-safe\nURL: https://github.com/apache/arrow/pull/2363#discussion_r207331211\n \n \n\n ##########\n File path: cpp/src/arrow/util/thread-pool.cc\n ##########\n @@ -186,6 +220,7 @@ void ThreadPool::WorkerLoop(std::shared_ptr<State> state,\n \n Status ThreadPool::SpawnReal(std::function<void()> task) {\n   {\n+    FixIfBroken();\n \n Review comment:\n   What is the rough cost of this (e.g. # of nanoseconds)? I guess this can be measured in the benchmarks\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-02T18:39:48.810+0000",
                    "updated": "2018-08-02T18:39:48.810+0000",
                    "started": "2018-08-02T18:39:48.810+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "130572",
                    "issueId": "13176454"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13176454/worklog/130575",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2363: ARROW-2963: [C++] Make thread pool fork-safe\nURL: https://github.com/apache/arrow/pull/2363#discussion_r207332784\n \n \n\n ##########\n File path: cpp/src/arrow/util/thread-pool.cc\n ##########\n @@ -186,6 +220,7 @@ void ThreadPool::WorkerLoop(std::shared_ptr<State> state,\n \n Status ThreadPool::SpawnReal(std::function<void()> task) {\n   {\n+    FixIfBroken();\n \n Review comment:\n   According to https://stackoverflow.com/a/41783404 it is < 10ns. This seems OK but we should definitely keep an eye on benchmarks for thread spawning overhead\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-02T18:41:28.101+0000",
                    "updated": "2018-08-02T18:41:28.101+0000",
                    "started": "2018-08-02T18:41:28.100+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "130575",
                    "issueId": "13176454"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13176454/worklog/130576",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2363: ARROW-2963: [C++] Make thread pool fork-safe\nURL: https://github.com/apache/arrow/pull/2363#issuecomment-410028332\n \n \n   +1 modulo the potential for renaming the Fork Protector, and assuming there aren't concerns about performance\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-02T18:43:25.595+0000",
                    "updated": "2018-08-02T18:43:25.595+0000",
                    "started": "2018-08-02T18:43:25.594+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "130576",
                    "issueId": "13176454"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13176454/worklog/130578",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cpcloud commented on issue #2363: ARROW-2963: [C++] Make thread pool fork-safe\nURL: https://github.com/apache/arrow/pull/2363#issuecomment-410028679\n \n \n   > +1 modulo the potential for renaming the Fork Protector, and assuming there aren't concerns about performance\r\n   \r\n   Protecting all things tine-y.\r\n   \r\n   I think we need a meme with Antoine on it.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-02T18:44:38.106+0000",
                    "updated": "2018-08-02T18:44:38.106+0000",
                    "started": "2018-08-02T18:44:38.106+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "130578",
                    "issueId": "13176454"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13176454/worklog/130612",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on issue #2363: ARROW-2963: [C++] Make thread pool fork-safe\nURL: https://github.com/apache/arrow/pull/2363#issuecomment-410023243\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2363?src=pr&el=h1) Report\n   > Merging [#2363](https://codecov.io/gh/apache/arrow/pull/2363?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/d48dce2cfebdbd044a8260d0a77f5fe3d89a4a2d?src=pr&el=desc) will **increase** coverage by `2.23%`.\n   > The diff coverage is `70.58%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2363/graphs/tree.svg?height=150&width=650&token=LpTCFbqVT1&src=pr)](https://codecov.io/gh/apache/arrow/pull/2363?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2363      +/-   ##\n   ==========================================\n   + Coverage    84.6%   86.83%   +2.23%     \n   ==========================================\n     Files         293      237      -56     \n     Lines       45220    42489    -2731     \n   ==========================================\n   - Hits        38259    36896    -1363     \n   + Misses       6932     5593    -1339     \n   + Partials       29        0      -29\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2363?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/util/thread-pool.h](https://codecov.io/gh/apache/arrow/pull/2363/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZC1wb29sLmg=) | `92.3% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/util/thread-pool-test.cc](https://codecov.io/gh/apache/arrow/pull/2363/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZC1wb29sLXRlc3QuY2M=) | `98.91% <\u00f8> (-0.55%)` | :arrow_down: |\n   | [python/pyarrow/tests/test\\_convert\\_pandas.py](https://codecov.io/gh/apache/arrow/pull/2363/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9jb252ZXJ0X3BhbmRhcy5weQ==) | `94.96% <100%> (+0.03%)` | :arrow_up: |\n   | [cpp/src/arrow/util/thread-pool.cc](https://codecov.io/gh/apache/arrow/pull/2363/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZC1wb29sLmNj) | `89.72% <54.54%> (-6.28%)` | :arrow_down: |\n   | [go/arrow/array/numericbuilder.gen.go](https://codecov.io/gh/apache/arrow/pull/2363/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvbnVtZXJpY2J1aWxkZXIuZ2VuLmdv) | | |\n   | [rust/src/lib.rs](https://codecov.io/gh/apache/arrow/pull/2363/diff?src=pr&el=tree#diff-cnVzdC9zcmMvbGliLnJz) | | |\n   | [go/arrow/array/booleanbuilder.go](https://codecov.io/gh/apache/arrow/pull/2363/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYm9vbGVhbmJ1aWxkZXIuZ28=) | | |\n   | [go/arrow/internal/cpu/cpu\\_x86.go](https://codecov.io/gh/apache/arrow/pull/2363/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvY3B1L2NwdV94ODYuZ28=) | | |\n   | [go/arrow/array/bufferbuilder.go](https://codecov.io/gh/apache/arrow/pull/2363/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlci5nbw==) | | |\n   | ... and [51 more](https://codecov.io/gh/apache/arrow/pull/2363/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2363?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2363?src=pr&el=footer). Last update [d48dce2...851c195](https://codecov.io/gh/apache/arrow/pull/2363?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-02T20:23:31.548+0000",
                    "updated": "2018-08-02T20:23:31.548+0000",
                    "started": "2018-08-02T20:23:31.547+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "130612",
                    "issueId": "13176454"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13176454/worklog/130668",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #2363: ARROW-2963: [C++] Make thread pool fork-safe\nURL: https://github.com/apache/arrow/pull/2363\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/util/thread-pool-test.cc b/cpp/src/arrow/util/thread-pool-test.cc\nindex a70f0164e8..99d4de2f7d 100644\n--- a/cpp/src/arrow/util/thread-pool-test.cc\n+++ b/cpp/src/arrow/util/thread-pool-test.cc\n@@ -15,8 +15,14 @@\n // specific language governing permissions and limitations\n // under the License.\n \n+#ifndef _WIN32\n+#include <sys/wait.h>\n+#include <unistd.h>\n+#endif\n+\n #include <algorithm>\n #include <chrono>\n+#include <cstdlib>\n #include <functional>\n #include <thread>\n #include <vector>\n@@ -282,6 +288,65 @@ TEST_F(TestThreadPool, Submit) {\n   }\n }\n \n+// Test fork safety on Unix\n+\n+#if !(defined(_WIN32) || defined(ARROW_VALGRIND))\n+TEST_F(TestThreadPool, ForkSafety) {\n+  pid_t child_pid;\n+  int child_status;\n+\n+  {\n+    // Fork after task submission\n+    auto pool = this->MakeThreadPool(3);\n+    auto fut = pool->Submit(add<int>, 4, 5);\n+    ASSERT_EQ(fut.get(), 9);\n+\n+    child_pid = fork();\n+    if (child_pid == 0) {\n+      // Child: thread pool should be usable\n+      fut = pool->Submit(add<int>, 3, 4);\n+      if (fut.get() != 7) {\n+        std::exit(1);\n+      }\n+      // Shutting down shouldn't hang or fail\n+      Status st = pool->Shutdown();\n+      std::exit(st.ok() ? 0 : 2);\n+    } else {\n+      // Parent\n+      ASSERT_GT(child_pid, 0);\n+      ASSERT_GT(waitpid(child_pid, &child_status, 0), 0);\n+      ASSERT_TRUE(WIFEXITED(child_status));\n+      ASSERT_EQ(WEXITSTATUS(child_status), 0);\n+      ASSERT_OK(pool->Shutdown());\n+    }\n+  }\n+  {\n+    // Fork after shutdown\n+    auto pool = this->MakeThreadPool(3);\n+    ASSERT_OK(pool->Shutdown());\n+\n+    child_pid = fork();\n+    if (child_pid == 0) {\n+      // Child\n+      // Spawning a task should return with error (pool was shutdown)\n+      Status st = pool->Spawn([] {});\n+      if (!st.IsInvalid()) {\n+        std::exit(1);\n+      }\n+      // Trigger destructor\n+      pool.reset();\n+      std::exit(0);\n+    } else {\n+      // Parent\n+      ASSERT_GT(child_pid, 0);\n+      ASSERT_GT(waitpid(child_pid, &child_status, 0), 0);\n+      ASSERT_TRUE(WIFEXITED(child_status));\n+      ASSERT_EQ(WEXITSTATUS(child_status), 0);\n+    }\n+  }\n+}\n+#endif\n+\n TEST(TestGlobalThreadPool, Capacity) {\n   // Sanity check\n   auto pool = GetCpuThreadPool();\ndiff --git a/cpp/src/arrow/util/thread-pool.cc b/cpp/src/arrow/util/thread-pool.cc\nindex 90fa4b787d..f3b05fdaaf 100644\n--- a/cpp/src/arrow/util/thread-pool.cc\n+++ b/cpp/src/arrow/util/thread-pool.cc\n@@ -51,7 +51,11 @@ struct ThreadPool::State {\n ThreadPool::ThreadPool()\n     : sp_state_(std::make_shared<ThreadPool::State>()),\n       state_(sp_state_.get()),\n-      shutdown_on_destroy_(true) {}\n+      shutdown_on_destroy_(true) {\n+#ifndef _WIN32\n+  pid_ = getpid();\n+#endif\n+}\n \n ThreadPool::~ThreadPool() {\n   if (shutdown_on_destroy_) {\n@@ -59,7 +63,34 @@ ThreadPool::~ThreadPool() {\n   }\n }\n \n+void ThreadPool::ProtectAgainstFork() {\n+#ifndef _WIN32\n+  pid_t current_pid = getpid();\n+  if (pid_ != current_pid) {\n+    // Reinitialize internal state in child process after fork()\n+    // Ideally we would use pthread_at_fork(), but that doesn't allow\n+    // storing an argument, hence we'd need to maintain a list of all\n+    // existing ThreadPools.\n+    int capacity = state_->desired_capacity_;\n+\n+    auto new_state = std::make_shared<ThreadPool::State>();\n+    new_state->please_shutdown_ = state_->please_shutdown_;\n+    new_state->quick_shutdown_ = state_->quick_shutdown_;\n+\n+    pid_ = current_pid;\n+    sp_state_ = new_state;\n+    state_ = sp_state_.get();\n+\n+    // Launch worker threads anew\n+    if (!state_->please_shutdown_) {\n+      ARROW_UNUSED(SetCapacity(capacity));\n+    }\n+  }\n+#endif\n+}\n+\n Status ThreadPool::SetCapacity(int threads) {\n+  ProtectAgainstFork();\n   std::unique_lock<std::mutex> lock(state_->mutex_);\n   if (state_->please_shutdown_) {\n     return Status::Invalid(\"operation forbidden during or after shutdown\");\n@@ -81,16 +112,19 @@ Status ThreadPool::SetCapacity(int threads) {\n }\n \n int ThreadPool::GetCapacity() {\n+  ProtectAgainstFork();\n   std::unique_lock<std::mutex> lock(state_->mutex_);\n   return state_->desired_capacity_;\n }\n \n int ThreadPool::GetActualCapacity() {\n+  ProtectAgainstFork();\n   std::unique_lock<std::mutex> lock(state_->mutex_);\n   return static_cast<int>(state_->workers_.size());\n }\n \n Status ThreadPool::Shutdown(bool wait) {\n+  ProtectAgainstFork();\n   std::unique_lock<std::mutex> lock(state_->mutex_);\n \n   if (state_->please_shutdown_) {\n@@ -186,6 +220,7 @@ void ThreadPool::WorkerLoop(std::shared_ptr<State> state,\n \n Status ThreadPool::SpawnReal(std::function<void()> task) {\n   {\n+    ProtectAgainstFork();\n     std::lock_guard<std::mutex> lock(state_->mutex_);\n     if (state_->please_shutdown_) {\n       return Status::Invalid(\"operation forbidden during or after shutdown\");\ndiff --git a/cpp/src/arrow/util/thread-pool.h b/cpp/src/arrow/util/thread-pool.h\nindex 20b6b2ed59..07bc5f9abd 100644\n--- a/cpp/src/arrow/util/thread-pool.h\n+++ b/cpp/src/arrow/util/thread-pool.h\n@@ -18,6 +18,10 @@\n #ifndef ARROW_UTIL_THREAD_POOL_H\n #define ARROW_UTIL_THREAD_POOL_H\n \n+#ifndef _WIN32\n+#include <unistd.h>\n+#endif\n+\n #include <exception>\n #include <functional>\n #include <future>\n@@ -136,6 +140,8 @@ class ARROW_EXPORT ThreadPool {\n   void LaunchWorkersUnlocked(int threads);\n   // Get the current actual capacity\n   int GetActualCapacity();\n+  // Reinitialize the thread pool if the pid changed\n+  void ProtectAgainstFork();\n \n   // The worker loop is a static method so that it can keep running\n   // after the ThreadPool is destroyed\n@@ -144,9 +150,12 @@ class ARROW_EXPORT ThreadPool {\n \n   static std::shared_ptr<ThreadPool> MakeCpuThreadPool();\n \n-  const std::shared_ptr<State> sp_state_;\n-  State* const state_;\n+  std::shared_ptr<State> sp_state_;\n+  State* state_;\n   bool shutdown_on_destroy_;\n+#ifndef _WIN32\n+  pid_t pid_;\n+#endif\n };\n \n // Return the process-global thread pool for CPU-bound tasks.\ndiff --git a/python/pyarrow/tests/test_convert_pandas.py b/python/pyarrow/tests/test_convert_pandas.py\nindex e9f2e4b3ed..613d810fd6 100644\n--- a/python/pyarrow/tests/test_convert_pandas.py\n+++ b/python/pyarrow/tests/test_convert_pandas.py\n@@ -17,6 +17,7 @@\n # under the License.\n import decimal\n import json\n+import multiprocessing as mp\n from collections import OrderedDict\n from datetime import date, datetime, time, timedelta\n \n@@ -1826,6 +1827,13 @@ def test_zero_copy_failure_on_timestamp_types(self):\n         self.check_zero_copy_failure(pa.array(arr))\n \n \n+# This function must be at the top-level for Python 2.7's multiprocessing\n+def _threaded_conversion():\n+    df = _alltypes_example()\n+    _check_pandas_roundtrip(df, use_threads=True)\n+    _check_pandas_roundtrip(df, use_threads=True, as_batch=True)\n+\n+\n class TestConvertMisc(object):\n     \"\"\"\n     Miscellaneous conversion tests.\n@@ -1866,9 +1874,16 @@ def test_empty_arrays(self):\n             _check_array_roundtrip(arr, type=pa_type)\n \n     def test_threaded_conversion(self):\n-        df = _alltypes_example()\n-        _check_pandas_roundtrip(df, use_threads=True)\n-        _check_pandas_roundtrip(df, use_threads=True, as_batch=True)\n+        _threaded_conversion()\n+\n+    def test_threaded_conversion_multiprocess(self):\n+        # Parallel conversion should work from child processes too (ARROW-2963)\n+        pool = mp.Pool(2)\n+        try:\n+            pool.apply(_threaded_conversion)\n+        finally:\n+            pool.close()\n+            pool.join()\n \n     def test_category(self):\n         repeats = 5\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-02T23:23:14.264+0000",
                    "updated": "2018-08-02T23:23:14.264+0000",
                    "started": "2018-08-02T23:23:14.263+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "130668",
                    "issueId": "13176454"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 6000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@249c3c02[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@275603d3[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@62b6a826[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@75e96738[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6096d992[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@382689dd[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6f86e167[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@51e89b08[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@76492ee[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@b009bbe[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@53d5ce60[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@46702fc9[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6000,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Aug 02 23:23:18 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-08-02T23:23:18.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2963/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-08-02T15:20:56.000+0000",
        "updated": "2018-08-02T23:23:18.000+0000",
        "timeoriginalestimate": null,
        "description": "The following code passes:\r\n\r\n{noformat}\r\nimport os\r\nimport pandas as pd\r\nimport pyarrow as pa\r\n\r\n\r\ndf = pd.DataFrame({'x': [1]})\r\ntable = pa.Table.from_pandas(df)\r\ndf = table.to_pandas(use_threads=False)\r\n\r\npid = os.fork()\r\nif pid != 0:\r\n    os.waitpid(pid, 0)\r\n{noformat}\r\n\r\nbut the following code will never finish (the {{waitpid}} calls blocks forever, seems that the child process is frozen):\r\n\r\n{noformat}\r\nimport os\r\nimport pandas as pd\r\nimport pyarrow as pa\r\n\r\n\r\ndf = pd.DataFrame({'x': [1]})\r\ntable = pa.Table.from_pandas(df)\r\ndf = table.to_pandas(use_threads=True)\r\n\r\npid = os.fork()\r\nif pid != 0:\r\n    os.waitpid(pid, 0)\r\n{noformat}\r\n\r\n(the only difference is {{use_threads=True}})",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Deadlock during fork-join and use_threads=True",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": "pandas==0.23.3\r\npyarrow==0.10.0rc0",
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13176454/comment/16566940",
                    "id": "16566940",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Oh, right, I don't think our thread-pool is fork-safe.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-08-02T15:23:19.595+0000",
                    "updated": "2018-08-02T15:23:19.595+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13176454/comment/16566987",
                    "id": "16566987",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=marco.neumann.by",
                        "name": "marco.neumann.by",
                        "key": "marco.neumann.by",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Marco Neumann",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "The problem is that using threads worked in {{0.9.0}}, because (I think) there was no pool involved.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=marco.neumann.by",
                        "name": "marco.neumann.by",
                        "key": "marco.neumann.by",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Marco Neumann",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-08-02T15:56:32.840+0000",
                    "updated": "2018-08-02T15:56:32.840+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13176454/comment/16567577",
                    "id": "16567577",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2363\n[https://github.com/apache/arrow/pull/2363]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-08-02T23:23:18.366+0000",
                    "updated": "2018-08-02T23:23:18.366+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|i3wmlr:",
        "customfield_12314139": null
    }
}