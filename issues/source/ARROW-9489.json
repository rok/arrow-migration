{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13316997",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316997",
    "key": "ARROW-9489",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12593521",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12593521",
                "type": {
                    "id": "10001",
                    "name": "dependent",
                    "inward": "is depended upon by",
                    "outward": "depends upon",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"
                },
                "inwardIssue": {
                    "id": "13316108",
                    "key": "ARROW-9401",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316108",
                    "fields": {
                        "summary": "[C++/Python]\u00a0Support necessary functionality to have an Arrow-string type in pandas",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/5",
                            "id": "5",
                            "description": "General wishlist item.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Wish",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=maartenbreddels",
            "name": "maartenbreddels",
            "key": "maartenbreddels",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Maarten Breddels",
            "active": true,
            "timeZone": "Europe/Amsterdam"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "aggregateprogress": {
            "progress": 10800,
            "total": 10800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 10800,
            "total": 10800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9489/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 18,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316997/worklog/509806",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "maartenbreddels opened a new pull request #8628:\nURL: https://github.com/apache/arrow/pull/8628\n\n\n   The Python test fails for the `large_binary` test, with output:\r\n   ```\r\n           arr = pa.array([b'a', b'bb', None], type=pa.large_binary())\r\n           result = arr.fill_null('ccc')\r\n           expected = pa.array([b'a', b'bb', b'ccc'])\r\n   >       assert result.equals(expected)\r\n   E       assert False\r\n   E        +  where False = <built-in method equals of pyarrow.lib.LargeBinaryArray object at 0x7f762fb38520>(<pyarrow.lib.BinaryArray object at 0x7f762fb38600>\\n[\\n  61,\\n  6262,\\n  636363\\n])\r\n   E        +    where <built-in method equals of pyarrow.lib.LargeBinaryArray object at 0x7f762fb38520> = <pyarrow.lib.LargeBinaryArray object at 0x7f762fb38520>\\n[\\n  61,\\n  6262,\\n  636363\\n].equals\r\n   ```\r\n   Could this be a bug in equals for LargeBinaryArray?\r\n   \r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-10T16:32:13.981+0000",
                    "updated": "2020-11-10T16:32:13.981+0000",
                    "started": "2020-11-10T16:32:13.981+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "509806",
                    "issueId": "13316997"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316997/worklog/509808",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "maartenbreddels commented on a change in pull request #8628:\nURL: https://github.com/apache/arrow/pull/8628#discussion_r520701716\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_fill_null.cc\n##########\n@@ -84,6 +84,52 @@ struct FillNullFunctor<Type, enable_if_t<is_number_type<Type>::value>> {\n   }\n };\n \n+template <typename Type>\n+struct FillNullFunctor<Type, enable_if_t<is_base_binary_type<Type>::value>> {\n+  using BuilderType = typename TypeTraits<Type>::BuilderType;\n+\n+  static void Exec(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+    const ArrayData& input = *batch[0].array();\n+    const auto& fill_value_scalar =\n+        checked_cast<const BaseBinaryScalar&>(*batch[1].scalar());\n+    util::string_view fill_value =\n+        static_cast<util::string_view>(*fill_value_scalar.value);\n+    ArrayData* output = out->mutable_array();\n+\n+    // Ensure the kernel is configured properly to have no validity bitmap /\n+    // null count 0 unless we explicitly propagate it below.\n+    DCHECK(output->buffers[0] == nullptr);\n+\n+    if (input.MayHaveNulls() && fill_value_scalar.is_valid) {\n+      BuilderType builder(input.type, ctx->memory_pool());\n+      //\n+      KERNEL_RETURN_IF_ERROR(\n+          ctx, builder.ReserveData(input.buffers[2]->size() +\n+                                   fill_value.length() * input.GetNullCount()));\n+      KERNEL_RETURN_IF_ERROR(ctx, builder.Resize(input.length + 1));\n\nReview comment:\n       I accidentally forgot the +1 here, and everything worked. Does CI include valgrind, and should it pick this up?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-10T16:33:50.703+0000",
                    "updated": "2020-11-10T16:33:50.703+0000",
                    "started": "2020-11-10T16:33:50.702+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "509808",
                    "issueId": "13316997"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316997/worklog/509811",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8628:\nURL: https://github.com/apache/arrow/pull/8628#issuecomment-724819642\n\n\n   https://issues.apache.org/jira/browse/ARROW-9489\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-10T16:37:03.617+0000",
                    "updated": "2020-11-10T16:37:03.617+0000",
                    "started": "2020-11-10T16:37:03.616+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "509811",
                    "issueId": "13316997"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316997/worklog/509825",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #8628:\nURL: https://github.com/apache/arrow/pull/8628#discussion_r520724980\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_fill_null.cc\n##########\n@@ -84,6 +84,52 @@ struct FillNullFunctor<Type, enable_if_t<is_number_type<Type>::value>> {\n   }\n };\n \n+template <typename Type>\n+struct FillNullFunctor<Type, enable_if_t<is_base_binary_type<Type>::value>> {\n+  using BuilderType = typename TypeTraits<Type>::BuilderType;\n+\n+  static void Exec(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+    const ArrayData& input = *batch[0].array();\n+    const auto& fill_value_scalar =\n+        checked_cast<const BaseBinaryScalar&>(*batch[1].scalar());\n+    util::string_view fill_value =\n+        static_cast<util::string_view>(*fill_value_scalar.value);\n+    ArrayData* output = out->mutable_array();\n+\n+    // Ensure the kernel is configured properly to have no validity bitmap /\n+    // null count 0 unless we explicitly propagate it below.\n+    DCHECK(output->buffers[0] == nullptr);\n+\n+    if (input.MayHaveNulls() && fill_value_scalar.is_valid) {\n+      BuilderType builder(input.type, ctx->memory_pool());\n+      //\n+      KERNEL_RETURN_IF_ERROR(\n+          ctx, builder.ReserveData(input.buffers[2]->size() +\n+                                   fill_value.length() * input.GetNullCount()));\n+      KERNEL_RETURN_IF_ERROR(ctx, builder.Resize(input.length + 1));\n\nReview comment:\n       The +1 should not be necessary. This is the number of values appended, not the number of offsets.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-10T17:05:38.268+0000",
                    "updated": "2020-11-10T17:05:38.268+0000",
                    "started": "2020-11-10T17:05:38.267+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "509825",
                    "issueId": "13316997"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316997/worklog/509826",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #8628:\nURL: https://github.com/apache/arrow/pull/8628#discussion_r520725613\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_fill_null.cc\n##########\n@@ -84,6 +84,52 @@ struct FillNullFunctor<Type, enable_if_t<is_number_type<Type>::value>> {\n   }\n };\n \n+template <typename Type>\n+struct FillNullFunctor<Type, enable_if_t<is_base_binary_type<Type>::value>> {\n+  using BuilderType = typename TypeTraits<Type>::BuilderType;\n+\n+  static void Exec(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+    const ArrayData& input = *batch[0].array();\n+    const auto& fill_value_scalar =\n+        checked_cast<const BaseBinaryScalar&>(*batch[1].scalar());\n+    util::string_view fill_value =\n+        static_cast<util::string_view>(*fill_value_scalar.value);\n\nReview comment:\n       The `static_cast` looks weird IMHO. How about using a constructor call?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-10T17:06:36.408+0000",
                    "updated": "2020-11-10T17:06:36.408+0000",
                    "started": "2020-11-10T17:06:36.408+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "509826",
                    "issueId": "13316997"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316997/worklog/509828",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #8628:\nURL: https://github.com/apache/arrow/pull/8628#discussion_r520727173\n\n\n\n##########\nFile path: python/pyarrow/tests/test_compute.py\n##########\n@@ -860,6 +860,17 @@ def test_fill_null():\n     expected = pa.array([None, None, None, None])\n     assert result.equals(expected)\n \n+    arr = pa.array(['a', 'bb', None])\n+    result = arr.fill_null('ccc')\n+    expected = pa.array(['a', 'bb', 'ccc'])\n+    assert result.equals(expected)\n+\n+    arr = pa.array([b'a', b'bb', None], type=pa.large_binary())\n+    result = arr.fill_null('ccc')\n+    expected = pa.array([b'a', b'bb', b'ccc'])\n\nReview comment:\n       You forgot to pass the type here.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-10T17:08:50.777+0000",
                    "updated": "2020-11-10T17:08:50.777+0000",
                    "started": "2020-11-10T17:08:50.776+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "509828",
                    "issueId": "13316997"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316997/worklog/509856",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "maartenbreddels commented on a change in pull request #8628:\nURL: https://github.com/apache/arrow/pull/8628#discussion_r520769300\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_fill_null.cc\n##########\n@@ -84,6 +84,52 @@ struct FillNullFunctor<Type, enable_if_t<is_number_type<Type>::value>> {\n   }\n };\n \n+template <typename Type>\n+struct FillNullFunctor<Type, enable_if_t<is_base_binary_type<Type>::value>> {\n+  using BuilderType = typename TypeTraits<Type>::BuilderType;\n+\n+  static void Exec(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+    const ArrayData& input = *batch[0].array();\n+    const auto& fill_value_scalar =\n+        checked_cast<const BaseBinaryScalar&>(*batch[1].scalar());\n+    util::string_view fill_value =\n+        static_cast<util::string_view>(*fill_value_scalar.value);\n\nReview comment:\n       Totally bizar, it's a copy-paste from some previous code of mine, will also change that.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-10T18:12:41.634+0000",
                    "updated": "2020-11-10T18:12:41.634+0000",
                    "started": "2020-11-10T18:12:41.634+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "509856",
                    "issueId": "13316997"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316997/worklog/509870",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "maartenbreddels commented on pull request #8628:\nURL: https://github.com/apache/arrow/pull/8628#issuecomment-724881905\n\n\n   Looking at the implementation of `VisitArrayDataInline`, which is quite similar to what is being done in `FillNullFunctor<Type, enable_if_t<is_number_type<Type>::value>>`, I don't see much room for improvement.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-10T18:24:42.980+0000",
                    "updated": "2020-11-10T18:24:42.980+0000",
                    "started": "2020-11-10T18:24:42.979+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "509870",
                    "issueId": "13316997"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316997/worklog/509871",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "maartenbreddels commented on a change in pull request #8628:\nURL: https://github.com/apache/arrow/pull/8628#discussion_r520776198\n\n\n\n##########\nFile path: python/pyarrow/tests/test_compute.py\n##########\n@@ -860,6 +860,17 @@ def test_fill_null():\n     expected = pa.array([None, None, None, None])\n     assert result.equals(expected)\n \n+    arr = pa.array(['a', 'bb', None])\n+    result = arr.fill_null('ccc')\n+    expected = pa.array(['a', 'bb', 'ccc'])\n+    assert result.equals(expected)\n+\n+    arr = pa.array([b'a', b'bb', None], type=pa.large_binary())\n+    result = arr.fill_null('ccc')\n+    expected = pa.array([b'a', b'bb', b'ccc'])\n\nReview comment:\n       Thanks, I stared at that piece of code for quite a bit!\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-10T18:24:46.042+0000",
                    "updated": "2020-11-10T18:24:46.042+0000",
                    "started": "2020-11-10T18:24:46.042+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "509871",
                    "issueId": "13316997"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316997/worklog/510956",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #8628:\nURL: https://github.com/apache/arrow/pull/8628#discussion_r522312822\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_fill_null.cc\n##########\n@@ -153,6 +153,60 @@ void AddBasicFillNullKernels(ScalarKernel kernel, ScalarFunction* func) {\n   AddKernels({boolean(), null()});\n }\n \n+template <typename Type>\n+struct FillNullFunctor<Type, enable_if_t<is_base_binary_type<Type>::value>> {\n+  using BuilderType = typename TypeTraits<Type>::BuilderType;\n+\n+  static void Exec(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+    const ArrayData& input = *batch[0].array();\n+    const auto& fill_value_scalar =\n+        checked_cast<const BaseBinaryScalar&>(*batch[1].scalar());\n+    util::string_view fill_value(*fill_value_scalar.value);\n+    ArrayData* output = out->mutable_array();\n+\n+    // Ensure the kernel is configured properly to have no validity bitmap /\n+    // null count 0 unless we explicitly propagate it below.\n+    DCHECK(output->buffers[0] == nullptr);\n+\n+    if (input.MayHaveNulls() && fill_value_scalar.is_valid) {\n\nReview comment:\n       Instead of calling `MayHaveNulls`, just compute the null count and check it here.\n\n##########\nFile path: docs/source/cpp/compute.rst\n##########\n@@ -431,17 +431,17 @@ Structural transforms\n \n .. XXX (this category is a bit of a hodgepodge)\n \n-+--------------------------+------------+---------------------------------------+---------------------+---------+\n-| Function name            | Arity      | Input types                           | Output type         | Notes   |\n-+==========================+============+=======================================+=====================+=========+\n-| fill_null                | Binary     | Boolean, Null, Numeric, Temporal      | Boolean             | \\(1)    |\n-+--------------------------+------------+---------------------------------------+---------------------+---------+\n-| is_null                  | Unary      | Any                                   | Boolean             | \\(2)    |\n-+--------------------------+------------+---------------------------------------+---------------------+---------+\n-| is_valid                 | Unary      | Any                                   | Boolean             | \\(2)    |\n-+--------------------------+------------+---------------------------------------+---------------------+---------+\n-| list_value_length        | Unary      | List-like                             | Int32 or Int64      | \\(4)    |\n-+--------------------------+------------+---------------------------------------+---------------------+---------+\n++--------------------------+------------+------------------------------------------------+---------------------+---------+\n+| Function name            | Arity      | Input types                                    | Output type         | Notes   |\n++==========================+============+================================================+=====================+=========+\n+| fill_null                | Binary     | Boolean, Null, Numeric, Temporal, String-like  | Input type          | \\(1)    |\n\nReview comment:\n       Thanks :-)\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_fill_null.cc\n##########\n@@ -153,6 +153,60 @@ void AddBasicFillNullKernels(ScalarKernel kernel, ScalarFunction* func) {\n   AddKernels({boolean(), null()});\n }\n \n+template <typename Type>\n+struct FillNullFunctor<Type, enable_if_t<is_base_binary_type<Type>::value>> {\n+  using BuilderType = typename TypeTraits<Type>::BuilderType;\n+\n+  static void Exec(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+    const ArrayData& input = *batch[0].array();\n+    const auto& fill_value_scalar =\n+        checked_cast<const BaseBinaryScalar&>(*batch[1].scalar());\n+    util::string_view fill_value(*fill_value_scalar.value);\n+    ArrayData* output = out->mutable_array();\n+\n+    // Ensure the kernel is configured properly to have no validity bitmap /\n+    // null count 0 unless we explicitly propagate it below.\n+    DCHECK(output->buffers[0] == nullptr);\n+\n+    if (input.MayHaveNulls() && fill_value_scalar.is_valid) {\n+      BuilderType builder(input.type, ctx->memory_pool());\n+      //\n\nReview comment:\n       Did you mean to say something here?\n\n##########\nFile path: cpp/src/arrow/compute/kernels/codegen_internal.h\n##########\n@@ -1058,6 +1058,22 @@ ArrayKernelExec GenerateTypeAgnosticPrimitive(detail::GetTypeId get_id) {\n   }\n }\n \n+/// similar to GenerateTypeAgnosticPrimitive, but for variable types\n+template <template <typename...> class Generator>\n+ArrayKernelExec GenerateTypeAgnosticVarBinaryBase(detail::GetTypeId get_id) {\n+  switch (get_id.id) {\n+    case Type::BINARY:\n+    case Type::STRING:\n+      return Generator<BinaryType>::Exec;\n\nReview comment:\n       Why don't you use `StringType` for `Type::STRING`? Fear of code duplication?\n\n##########\nFile path: python/pyarrow/tests/test_compute.py\n##########\n@@ -860,6 +860,16 @@ def test_fill_null():\n     expected = pa.array([None, None, None, None])\n     assert result.equals(expected)\n \n+    arr = pa.array(['a', 'bb', None])\n+    result = arr.fill_null('ccc')\n+    expected = pa.array(['a', 'bb', 'ccc'])\n+    assert result.equals(expected)\n+\n+    arr = pa.array([b'a', b'bb', None], type=pa.large_binary())\n+    result = arr.fill_null('ccc')\n\nReview comment:\n       Hmm, we can pass a unicode string here? Interesting.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-12T18:16:07.097+0000",
                    "updated": "2020-11-12T18:16:07.097+0000",
                    "started": "2020-11-12T18:16:07.096+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "510956",
                    "issueId": "13316997"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316997/worklog/510963",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "maartenbreddels commented on a change in pull request #8628:\nURL: https://github.com/apache/arrow/pull/8628#discussion_r522325504\n\n\n\n##########\nFile path: python/pyarrow/tests/test_compute.py\n##########\n@@ -860,6 +860,16 @@ def test_fill_null():\n     expected = pa.array([None, None, None, None])\n     assert result.equals(expected)\n \n+    arr = pa.array(['a', 'bb', None])\n+    result = arr.fill_null('ccc')\n+    expected = pa.array(['a', 'bb', 'ccc'])\n+    assert result.equals(expected)\n+\n+    arr = pa.array([b'a', b'bb', None], type=pa.large_binary())\n+    result = arr.fill_null('ccc')\n\nReview comment:\n       When writing it, I was doing it as a check to the system, expecting it to fail, and forget to change this. However, thinking about it, I'm not sure how it should be checked since we have both LargeStringScalar and StringScalar.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-12T18:31:02.647+0000",
                    "updated": "2020-11-12T18:31:02.647+0000",
                    "started": "2020-11-12T18:31:02.646+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "510963",
                    "issueId": "13316997"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316997/worklog/510964",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "maartenbreddels commented on a change in pull request #8628:\nURL: https://github.com/apache/arrow/pull/8628#discussion_r522326005\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/codegen_internal.h\n##########\n@@ -1058,6 +1058,22 @@ ArrayKernelExec GenerateTypeAgnosticPrimitive(detail::GetTypeId get_id) {\n   }\n }\n \n+/// similar to GenerateTypeAgnosticPrimitive, but for variable types\n+template <template <typename...> class Generator>\n+ArrayKernelExec GenerateTypeAgnosticVarBinaryBase(detail::GetTypeId get_id) {\n+  switch (get_id.id) {\n+    case Type::BINARY:\n+    case Type::STRING:\n+      return Generator<BinaryType>::Exec;\n\nReview comment:\n       Yeah, following the convention I was being used in the fill_na for primitives/temporals.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-12T18:32:00.910+0000",
                    "updated": "2020-11-12T18:32:00.910+0000",
                    "started": "2020-11-12T18:32:00.909+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "510964",
                    "issueId": "13316997"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316997/worklog/510965",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "maartenbreddels commented on a change in pull request #8628:\nURL: https://github.com/apache/arrow/pull/8628#discussion_r522327624\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_fill_null.cc\n##########\n@@ -153,6 +153,60 @@ void AddBasicFillNullKernels(ScalarKernel kernel, ScalarFunction* func) {\n   AddKernels({boolean(), null()});\n }\n \n+template <typename Type>\n+struct FillNullFunctor<Type, enable_if_t<is_base_binary_type<Type>::value>> {\n+  using BuilderType = typename TypeTraits<Type>::BuilderType;\n+\n+  static void Exec(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+    const ArrayData& input = *batch[0].array();\n+    const auto& fill_value_scalar =\n+        checked_cast<const BaseBinaryScalar&>(*batch[1].scalar());\n+    util::string_view fill_value(*fill_value_scalar.value);\n+    ArrayData* output = out->mutable_array();\n+\n+    // Ensure the kernel is configured properly to have no validity bitmap /\n+    // null count 0 unless we explicitly propagate it below.\n+    DCHECK(output->buffers[0] == nullptr);\n+\n+    if (input.MayHaveNulls() && fill_value_scalar.is_valid) {\n+      BuilderType builder(input.type, ctx->memory_pool());\n+      //\n\nReview comment:\n       No, forgot to commit \ud83d\udc4d \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-12T18:34:19.162+0000",
                    "updated": "2020-11-12T18:34:19.162+0000",
                    "started": "2020-11-12T18:34:19.162+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "510965",
                    "issueId": "13316997"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316997/worklog/510967",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "maartenbreddels commented on a change in pull request #8628:\nURL: https://github.com/apache/arrow/pull/8628#discussion_r522327950\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/codegen_internal.h\n##########\n@@ -1058,6 +1058,22 @@ ArrayKernelExec GenerateTypeAgnosticPrimitive(detail::GetTypeId get_id) {\n   }\n }\n \n+/// similar to GenerateTypeAgnosticPrimitive, but for variable types\n+template <template <typename...> class Generator>\n+ArrayKernelExec GenerateTypeAgnosticVarBinaryBase(detail::GetTypeId get_id) {\n+  switch (get_id.id) {\n+    case Type::BINARY:\n+    case Type::STRING:\n+      return Generator<BinaryType>::Exec;\n\nReview comment:\n       Do you think it's overkill?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-12T18:34:56.069+0000",
                    "updated": "2020-11-12T18:34:56.069+0000",
                    "started": "2020-11-12T18:34:56.069+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "510967",
                    "issueId": "13316997"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316997/worklog/510981",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #8628:\nURL: https://github.com/apache/arrow/pull/8628#discussion_r522341491\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/codegen_internal.h\n##########\n@@ -1058,6 +1058,22 @@ ArrayKernelExec GenerateTypeAgnosticPrimitive(detail::GetTypeId get_id) {\n   }\n }\n \n+/// similar to GenerateTypeAgnosticPrimitive, but for variable types\n+template <template <typename...> class Generator>\n+ArrayKernelExec GenerateTypeAgnosticVarBinaryBase(detail::GetTypeId get_id) {\n+  switch (get_id.id) {\n+    case Type::BINARY:\n+    case Type::STRING:\n+      return Generator<BinaryType>::Exec;\n\nReview comment:\n       No, it's ok. However, please don't use triple-slashes above for regular comments.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-12T18:57:10.619+0000",
                    "updated": "2020-11-12T18:57:10.619+0000",
                    "started": "2020-11-12T18:57:10.619+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "510981",
                    "issueId": "13316997"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316997/worklog/510983",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #8628:\nURL: https://github.com/apache/arrow/pull/8628#discussion_r522341768\n\n\n\n##########\nFile path: python/pyarrow/tests/test_compute.py\n##########\n@@ -860,6 +860,16 @@ def test_fill_null():\n     expected = pa.array([None, None, None, None])\n     assert result.equals(expected)\n \n+    arr = pa.array(['a', 'bb', None])\n+    result = arr.fill_null('ccc')\n+    expected = pa.array(['a', 'bb', 'ccc'])\n+    assert result.equals(expected)\n+\n+    arr = pa.array([b'a', b'bb', None], type=pa.large_binary())\n+    result = arr.fill_null('ccc')\n\nReview comment:\n       Yes, it's probably ok.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-12T18:57:36.928+0000",
                    "updated": "2020-11-12T18:57:36.928+0000",
                    "started": "2020-11-12T18:57:36.928+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "510983",
                    "issueId": "13316997"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316997/worklog/511333",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "maartenbreddels commented on pull request #8628:\nURL: https://github.com/apache/arrow/pull/8628#issuecomment-726748561\n\n\n   @pitrou i think this is ready to go/review.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-13T12:54:15.043+0000",
                    "updated": "2020-11-13T12:54:15.043+0000",
                    "started": "2020-11-13T12:54:15.043+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "511333",
                    "issueId": "13316997"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316997/worklog/512574",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #8628:\nURL: https://github.com/apache/arrow/pull/8628\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-16T20:26:50.780+0000",
                    "updated": "2020-11-16T20:26:50.780+0000",
                    "started": "2020-11-16T20:26:50.780+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "512574",
                    "issueId": "13316997"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 10800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6f7d327d[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2196c930[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@c94d3d7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1b5c543c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@764faba7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1b6fe6df[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@314f840e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@48cbcbaf[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@43524382[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@276f1c29[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6a4d933e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7ccdab6b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10800,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Nov 16 20:26:40 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-11-16T20:26:40.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9489/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2020-07-15T18:14:34.000+0000",
        "updated": "2020-11-16T20:26:51.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Add fill_null kernel implementation for (array[string], scalar[string])",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316997/comment/17226557",
                    "id": "17226557",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "cc [~maartenbreddels] depending on time, this would also be an interesting one\r\n\r\n{code}\r\nIn [1]: arr = pa.array(['a', 'b', None])\r\n\r\nIn [2]: import pyarrow.compute as pc\r\n\r\nIn [3]: pc.fill_null(arr, 'c')\r\n...\r\nArrowNotImplementedError: Function fill_null has no kernel matching input types (array[string], scalar[string])\r\n{code}\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2020-11-05T07:56:51.744+0000",
                    "updated": "2020-11-05T07:56:51.744+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316997/comment/17226572",
                    "id": "17226572",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=maartenbreddels",
                        "name": "maartenbreddels",
                        "key": "maartenbreddels",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Maarten Breddels",
                        "active": true,
                        "timeZone": "Europe/Amsterdam"
                    },
                    "body": "Yes, happy to take this on, since it's an ugly code path in Vaex right now, and quite a performance hit.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=maartenbreddels",
                        "name": "maartenbreddels",
                        "key": "maartenbreddels",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Maarten Breddels",
                        "active": true,
                        "timeZone": "Europe/Amsterdam"
                    },
                    "created": "2020-11-05T08:19:56.748+0000",
                    "updated": "2020-11-05T08:19:56.748+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316997/comment/17229986",
                    "id": "17229986",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "For full coverage of pandas functionality, a {{(array[string], array[string])}}  signature would also be interesting: pandas allows to fill with an array, taking the corresponding value of the second array where the first array has a null.   \r\n(but certainly less of a priority)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2020-11-11T14:04:11.184+0000",
                    "updated": "2020-11-11T14:04:11.184+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316997/comment/17229989",
                    "id": "17229989",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=maartenbreddels",
                        "name": "maartenbreddels",
                        "key": "maartenbreddels",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Maarten Breddels",
                        "active": true,
                        "timeZone": "Europe/Amsterdam"
                    },
                    "body": "Yes, I thought about that too. Although I think a `np.where` equivalent would be more general. Sth like:\r\n{code:java}\r\npc.where(pc.is_null(arr), arr2, arr)  # equivalent what you described\r\npc.where(pc.is_null(arr), 'c', arr)  # less performant version of fill_null\r\n{code}\r\nI could explore what you describe, and see if we can do some template programming so that we can generalize this to other kernels as well. But I think a 'where' kernel would make more sense at this point in time.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=maartenbreddels",
                        "name": "maartenbreddels",
                        "key": "maartenbreddels",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Maarten Breddels",
                        "active": true,
                        "timeZone": "Europe/Amsterdam"
                    },
                    "created": "2020-11-11T14:22:45.295+0000",
                    "updated": "2020-11-11T14:22:45.295+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316997/comment/17230042",
                    "id": "17230042",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "Ah, yes, a general \"where\" general seems more useful indeed, and can be used for this purpose as well (and could also be used for some \"setitem\" like calls in pandas, which would be useful to have)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2020-11-11T15:47:08.527+0000",
                    "updated": "2020-11-11T15:47:08.527+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13316997/comment/17233062",
                    "id": "17233062",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 8628\n[https://github.com/apache/arrow/pull/8628]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2020-11-16T20:26:40.873+0000",
                    "updated": "2020-11-16T20:26:40.873+0000"
                }
            ],
            "maxResults": 6,
            "total": 6,
            "startAt": 0
        },
        "customfield_12311820": "0|z0gsog:",
        "customfield_12314139": null
    }
}