{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13336700",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336700",
    "key": "ARROW-10368",
    "fields": {
        "fixVersions": [],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/8",
            "id": "8",
            "description": "The described issue is not actually a problem - it is as designed.",
            "name": "Not A Problem"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "name": "Closed",
            "id": "6",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12335005",
                "id": "12335005",
                "name": "Rust - DataFusion"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rdettai",
            "name": "rdettai",
            "key": "rdettai",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=rdettai&avatarId=42994",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rdettai&avatarId=42994",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rdettai&avatarId=42994",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rdettai&avatarId=42994"
            },
            "displayName": "R\u00e9mi Dettai",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rdettai",
            "name": "rdettai",
            "key": "rdettai",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=rdettai&avatarId=42994",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rdettai&avatarId=42994",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rdettai&avatarId=42994",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rdettai&avatarId=42994"
            },
            "displayName": "R\u00e9mi Dettai",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 3000,
            "total": 3000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 3000,
            "total": 3000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10368/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 5,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336700/worklog/504109",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rdettai opened a new pull request #8513:\nURL: https://github.com/apache/arrow/pull/8513\n\n\n   Replace all specific XxxScan nodes with a generic SourceScan that dynamically dispatches to any source implementation.\r\n   \r\n   The main goal is to make implementations of custom data sources possible (read from S3, custom file formats...). It might also make the LogicalPlan enum a bit more readable.\r\n   \r\n   Initial discussion: https://issues.apache.org/jira/browse/ARROW-10368\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-23T10:22:35.956+0000",
                    "updated": "2020-10-23T10:22:35.956+0000",
                    "started": "2020-10-23T10:22:35.956+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "504109",
                    "issueId": "13336700"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336700/worklog/504111",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8513:\nURL: https://github.com/apache/arrow/pull/8513#issuecomment-715255711\n\n\n   https://issues.apache.org/jira/browse/ARROW-10368\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-23T10:30:47.018+0000",
                    "updated": "2020-10-23T10:30:47.018+0000",
                    "started": "2020-10-23T10:30:47.018+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "504111",
                    "issueId": "13336700"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336700/worklog/504113",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rdettai commented on pull request #8513:\nURL: https://github.com/apache/arrow/pull/8513#issuecomment-715257359\n\n\n   @jorgecarleitao I have implemented the basic structure, with a `SourceScanner` trait proposal. I have shown how the `SourceScan` logical plan is mapped to an execution by just passing through the source implementation. This basically means that there is no \"real\" conversion from logical to physical plan, we are just passing the same implem from one to the other.\r\n   \r\n   If this is \"conceptually\" okay with you, I will port all the currently implemented sources to this model.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-23T10:33:50.865+0000",
                    "updated": "2020-10-23T10:33:50.865+0000",
                    "started": "2020-10-23T10:33:50.865+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "504113",
                    "issueId": "13336700"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336700/worklog/504196",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rdettai commented on pull request #8513:\nURL: https://github.com/apache/arrow/pull/8513#issuecomment-715378341\n\n\n   I just found out something! It seems that datafusion is full of interesting mysteries \ud83d\ude04 ! You actually already have the abstractions required to do what I want, but they are a little hidden.\r\n   \r\n   With `ExecutionContext::register_table(&mut self, name: &str, provider: Box<dyn TableProvider>)` you can actually already directly register an implementation of a custom source exec. You have to implement the `TableProvider` trait that allows you to have the projection pushdown, then directly the `ExecutionPlan` trait. You can then run your queries on it, and you can even use the new source from the dataframe API with `ExecutionContext::table(&mut self, table_name: &str) -> Result<Arc<dyn DataFrame>>`.\r\n   \r\n   Isn't that wonderful ?\r\n   \r\n   Now the only thing that remains to be done I guess is:\r\n   - add a commodity function like `ExecutionContext::read_provider(&mut self, provider: Box<dyn TableProvider>)  -> Result<Arc<dyn DataFrame>>` that shortcuts the two calls mentioned above. This is mainly meant to make this feature more explicit.\r\n   - add a new example ?\r\n   - enjoy... \u2764\ufe0f \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-23T14:30:45.538+0000",
                    "updated": "2020-10-23T14:30:45.538+0000",
                    "started": "2020-10-23T14:30:45.538+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "504196",
                    "issueId": "13336700"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336700/worklog/504642",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rdettai closed pull request #8513:\nURL: https://github.com/apache/arrow/pull/8513\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-26T07:35:06.638+0000",
                    "updated": "2020-10-26T07:35:06.638+0000",
                    "started": "2020-10-26T07:35:06.638+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "504642",
                    "issueId": "13336700"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 3000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5e616e6f[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@af9f322[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4f356477[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@a90ee50[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4dddf9ed[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@443cfb75[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@20ce2959[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@2d21a17e[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@f9127a6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2c558272[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7d80f240[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5d8a96df[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 3000,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Oct 23 14:34:01 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-10-26T07:35:41.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10368/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2020-10-22T11:24:43.000+0000",
        "updated": "2020-10-26T07:35:41.000+0000",
        "timeoriginalestimate": null,
        "description": "The first intention of this issue was to refactor InMemoryScan to use an iterator to make it more flexible:\r\n\r\n{quote}Currently, InMemoryScan takes a Vec<Vec<RecordBatch>> as data.\r\n- the outer Vec separates the partitions\r\n- the inner Vec contains all the RecordBatch for one partition\r\nThe inner Vec is then converted into an iterator when the LogicalPlan is turned into a PhysicalPlan.\r\n\r\nI suggest that InMemoryScan should take Vec<Iter<RecordBatch>>.  This would make it possible to plug custom Scan implementations into datafusion without the need to read them entirely into memory. It would still work pretty seamlessly with Vec<Vec<RecordBatch>> that would just need a to be converted with data.map(|x| x.iter()) first.{quote}\r\n\r\nAfter further inspection (see discussion below), it seems more appropriate to completely refactor the way scan nodes are organized. The idea is to replace all specific XxxScan nodes with a generic SourceScan node:\r\n\r\n{code:java}\r\n/// A node that generates source data\r\nLogicalPlan::SourceScan {\r\n    /// A shared reference to the source implementation\r\n    scanner: Arc<dyn SourceScanner>,\r\n},\r\n{code}\r\n\r\nwith:\r\n\r\n{code:java}\r\n#[async_trait]\r\n/// A scanner implementation that can be used by datafusion\r\npub trait SourceScanner: Send + Sync + fmt::Debug {\r\n\r\n  /// reference to the schema of the data as it will be read by this scanner\r\n  fn projected_schema(&self) -> &SchemaRef;\r\n\r\n  /// string display of this scanner\r\n  fn format(&self) -> &str;\r\n\r\n  /// apply projection on this scanner\r\n  fn project(\r\n    &self,\r\n    required_columns: &HashSet<String>,\r\n    has_projection: bool,\r\n  ) -> Result<Arc<dyn SourceScanner>>;\r\n\r\n  /// get scanner partitioning\r\n  fn output_partitioning(&self) -> Partitioning;\r\n\r\n  /// get iterator for a given partition\r\n  async fn execute(&self, partition: usize) -> Result<Box<dyn RecordBatchReader + Send>>;\r\n\r\n}\r\n{code}\r\n\r\nThe current specific implementations of scanner will then be provided by implementations of SourceScanner.\r\n\r\n\r\n",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 3000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust][DataFusion] Refactor scan nodes to allow extensions",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336700/comment/17218952",
                    "id": "17218952",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rdettai",
                        "name": "rdettai",
                        "key": "rdettai",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=rdettai&avatarId=42994",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rdettai&avatarId=42994",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rdettai&avatarId=42994",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rdettai&avatarId=42994"
                        },
                        "displayName": "R\u00e9mi Dettai",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~andygrove] If this change seems reasonable to you, I can give it a try! I wonder if we could not go one step further and try to add a new logical plan that makes it possible to add custom sources. This would make it possible to also have access to the projection info...",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rdettai",
                        "name": "rdettai",
                        "key": "rdettai",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=rdettai&avatarId=42994",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rdettai&avatarId=42994",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rdettai&avatarId=42994",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rdettai&avatarId=42994"
                        },
                        "displayName": "R\u00e9mi Dettai",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-10-22T11:29:55.124+0000",
                    "updated": "2020-10-22T11:59:16.900+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336700/comment/17219142",
                    "id": "17219142",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rdettai",
                        "name": "rdettai",
                        "key": "rdettai",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=rdettai&avatarId=42994",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rdettai&avatarId=42994",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rdettai&avatarId=42994",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rdettai&avatarId=42994"
                        },
                        "displayName": "R\u00e9mi Dettai",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "bq.  I wonder if we could not go one step further and try to add a new logical plan that makes it possible to add custom sources\r\n\r\nThis is definitively outside the scope of the original ticket, but here is what I came up with for the custom source logical plan:\r\n\r\n{code:java}\r\n/// Produces rows from a custom user implementation\r\nLogicalPlan::CustomScan {\r\n    /// A shared reference to the custom implementation\r\n    scanner: Arc<dyn CustomScanner>,\r\n},\r\n{code}\r\n\r\nwith:\r\n\r\n{code:java}\r\n#[async_trait]\r\n/// A user implemented scanner that can be used by datafusion\r\npub trait CustomScanner: Send + Sync + fmt::Debug {\r\n  /// reference to the schema of the data as it will be read by this scanner\r\n  fn projected_schema(&self) -> &SchemaRef;\r\n  /// string display of this scanner\r\n  fn format(&self) -> &str;\r\n  /// apply projection on this scanner\r\n  fn project(\r\n    &self,\r\n    required_columns: &HashSet<String>,\r\n    has_projection: bool,\r\n  ) -> Result<Arc<dyn CustomScanner>>;\r\n  /// get scanner partitioning\r\n  fn output_partitioning(&self) -> Partitioning;\r\n  /// get iterator for a given partition\r\n  async fn execute(&self, partition: usize) -> Result<Box<dyn RecordBatchReader + Send>>;\r\n}\r\n{code}\r\n\r\nI am now wondering if we shouldn't make this the common interface for all LogicalPlan::XxxScan rather than having them in the enum.\r\n\r\nI need guidance on the best way to achieve some kind of flexibility in that API. In the end, I don't even want an exotic data source, just to read parquet from S3 and the current parquet LogicalPlan/ExecutionPlan is very fs oriented.\r\n\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rdettai",
                        "name": "rdettai",
                        "key": "rdettai",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=rdettai&avatarId=42994",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rdettai&avatarId=42994",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rdettai&avatarId=42994",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rdettai&avatarId=42994"
                        },
                        "displayName": "R\u00e9mi Dettai",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-10-22T16:20:42.379+0000",
                    "updated": "2020-10-22T16:32:31.626+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336700/comment/17219181",
                    "id": "17219181",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rdettai",
                        "name": "rdettai",
                        "key": "rdettai",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=rdettai&avatarId=42994",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rdettai&avatarId=42994",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rdettai&avatarId=42994",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rdettai&avatarId=42994"
                        },
                        "displayName": "R\u00e9mi Dettai",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "_I know what this is: It's just myself talking to myself about myself_ :D\r\n\r\nI just came accross ExtensionPlanner and LogicalPlan::Extension. This is very nice, and is pretty similar to what I just proposed. But it seems a bit WIP as there is no \"nominal condition\" test path, only failure tests. On top of that, Extension is not capable of receiving projection push down. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rdettai",
                        "name": "rdettai",
                        "key": "rdettai",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=rdettai&avatarId=42994",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rdettai&avatarId=42994",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rdettai&avatarId=42994",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rdettai&avatarId=42994"
                        },
                        "displayName": "R\u00e9mi Dettai",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-10-22T17:08:58.202+0000",
                    "updated": "2020-10-22T17:08:58.202+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336700/comment/17219210",
                    "id": "17219210",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rdettai",
                        "name": "rdettai",
                        "key": "rdettai",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=rdettai&avatarId=42994",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rdettai&avatarId=42994",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rdettai&avatarId=42994",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rdettai&avatarId=42994"
                        },
                        "displayName": "R\u00e9mi Dettai",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "If I summarize all of the above, these are the paths I could take to implement my S3 parquet datasource:\r\n- modify InMemoryScan to use iterators of RecordBatch. This iterator can be provided by a s3 reader or any other datasource. *No way to have projection pushdown here.*\r\n- use ExtensionPlanner and LogicalPlan::Extension to implement a new logical and execution plan. *No way to have projection pushdown here.*\r\n- extend the current ParquetExec with a specific code path if the filename starts with \"s3://\". I am not sure how this could be done without bringing in the dependency to s3 right in the middle of datafusion, which would definitively not scale.\r\n- replace all the LogicalPlan::XxxScan by a single LogicalPlan::SourceScan (equivalent to the LogicalPlan::CustomScan above) that dynamically dispatches to any source implementation.\r\n\r\nLast solution seems to be the best, but I'm curious to have your opinions !",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rdettai",
                        "name": "rdettai",
                        "key": "rdettai",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=rdettai&avatarId=42994",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rdettai&avatarId=42994",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rdettai&avatarId=42994",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rdettai&avatarId=42994"
                        },
                        "displayName": "R\u00e9mi Dettai",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-10-22T17:28:30.043+0000",
                    "updated": "2020-10-22T17:28:30.043+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336700/comment/17219426",
                    "id": "17219426",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
                        "name": "jorgecarleitao",
                        "key": "jorgecarleitao",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
                        },
                        "displayName": "Jorge Leit\u00e3o",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~rdettai], great proposal and comments.\r\n\r\nIMO the last item, for the same reasons that you concluded :)\r\n\r\na scan is very fundamental and has a different semantics than the extension, which was designed to be a generic compute node.\r\n # check what is the common pattern of each Scan node (both logical and physical)\r\n # check what differences it has vs e.g. s3\r\n # abstract the pattern out to a new generic logical node\r\n # migrate all scanners to it\r\n # implement s3 on top of the new pattern\r\n\r\nNote that the code now expects a stream, not an iterator, of RecordBatch, which may help at reading s3 sources.\r\n\r\nAs it stands, this is a large task, so, let us know if you any help. One idea is to have a PR only with the new interface (and only\u00a0{{todo!}} on the implementation) for the new node, so that we can all go through, before committing the bulk of the work.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
                        "name": "jorgecarleitao",
                        "key": "jorgecarleitao",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
                        },
                        "displayName": "Jorge Leit\u00e3o",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-10-23T02:52:57.869+0000",
                    "updated": "2020-10-23T02:52:57.869+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336700/comment/17219558",
                    "id": "17219558",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rdettai",
                        "name": "rdettai",
                        "key": "rdettai",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=rdettai&avatarId=42994",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rdettai&avatarId=42994",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rdettai&avatarId=42994",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rdettai&avatarId=42994"
                        },
                        "displayName": "R\u00e9mi Dettai",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~jorgecarleitao] thanks for looking into this. It's so nice not to be talking alone :D\r\n\r\nI have renamed the issue and changed the description to better relate the new direction this issue is taking.\r\n\r\nI am going to open a PR with the new abstraction, and we can move this very technical question over there. I think I can handle the change, but I will definitively need your opinions on various aspect.\r\n{quote}Note that the code now expects a stream, not an iterator, of RecordBatch, which may help at reading s3 sources.\r\n{quote}\r\nNot sure that helps a lot, as the parquet reader still requires you to plunge back to sync world (ARROW-10307 is really really hard)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rdettai",
                        "name": "rdettai",
                        "key": "rdettai",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=rdettai&avatarId=42994",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rdettai&avatarId=42994",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rdettai&avatarId=42994",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rdettai&avatarId=42994"
                        },
                        "displayName": "R\u00e9mi Dettai",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-10-23T09:02:30.844+0000",
                    "updated": "2020-10-23T09:02:30.844+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336700/comment/17219723",
                    "id": "17219723",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rdettai",
                        "name": "rdettai",
                        "key": "rdettai",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=rdettai&avatarId=42994",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rdettai&avatarId=42994",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rdettai&avatarId=42994",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rdettai&avatarId=42994"
                        },
                        "displayName": "R\u00e9mi Dettai",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Just found out the addition of custom sources can be done with the {{TableProvider}} trait. See [explanations|https://github.com/apache/arrow/pull/8513].",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rdettai",
                        "name": "rdettai",
                        "key": "rdettai",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=rdettai&avatarId=42994",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rdettai&avatarId=42994",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rdettai&avatarId=42994",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rdettai&avatarId=42994"
                        },
                        "displayName": "R\u00e9mi Dettai",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-10-23T14:34:01.705+0000",
                    "updated": "2020-10-23T14:34:01.705+0000"
                }
            ],
            "maxResults": 7,
            "total": 7,
            "startAt": 0
        },
        "customfield_12311820": "0|z0jx2g:",
        "customfield_12314139": null
    }
}