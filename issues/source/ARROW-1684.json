{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13110304",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110304",
    "key": "ARROW-1684",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341666",
                "id": "12341666",
                "name": "0.7.1",
                "archived": false,
                "released": true,
                "releaseDate": "2017-10-01"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1684/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7ced5b6d[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3b852ef2[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4611818d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5471d503[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1b2d0484[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@47b6e602[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@de10a90[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@57e20fe2[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@241828be[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@54ee4cc9[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@51de694e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1604e188[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Nov 29 01:07:22 UTC 2017",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2017-11-29T01:07:22.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1684/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2017-10-18T14:30:31.000+0000",
        "updated": "2017-11-29T01:07:22.000+0000",
        "timeoriginalestimate": null,
        "description": "It is not necessarily intuitive for users to have to specify the complete path to the leaf in the Parquet schema. See https://github.com/apache/arrow/issues/1207",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Simplify user API for reading nested Parquet columns",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110304/comment/16209425",
                    "id": "16209425",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Github user wesm commented on the issue:\n\n    https://github.com/apache/arrow/issues/1207\n  \n    If you pass `a.list.item` instead of `a` it should work. I opened https://issues.apache.org/jira/browse/ARROW-1684 ARROW-1684 about improving the usability of this API for nested columns\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-18T14:31:02.676+0000",
                    "updated": "2017-10-18T14:31:02.676+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110304/comment/16267315",
                    "id": "16267315",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm opened a new pull request #1366: ARROW-1684: [Python] Support selecting nested Parquet fields by any path prefix\nURL: https://github.com/apache/arrow/pull/1366\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-27T19:29:28.690+0000",
                    "updated": "2017-11-27T19:29:28.690+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110304/comment/16269854",
                    "id": "16269854",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1366: ARROW-1684: [Python] Support selecting nested Parquet fields by any path prefix\nURL: https://github.com/apache/arrow/pull/1366#issuecomment-347718106\n \n \n   +1\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-29T01:07:05.881+0000",
                    "updated": "2017-11-29T01:07:05.881+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110304/comment/16269855",
                    "id": "16269855",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1366: ARROW-1684: [Python] Support selecting nested Parquet fields by any path prefix\nURL: https://github.com/apache/arrow/pull/1366\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/python/pyarrow/_parquet.pxd b/python/pyarrow/_parquet.pxd\nindex 7e5e57509..55b66b53d 100644\n--- a/python/pyarrow/_parquet.pxd\n+++ b/python/pyarrow/_parquet.pxd\n@@ -37,6 +37,7 @@ cdef extern from \"parquet/api/schema.h\" namespace \"parquet::schema\" nogil:\n \n     cdef cppclass ColumnPath:\n         c_string ToDotString()\n+        vector[c_string] ToDotVector()\n \n \n cdef extern from \"parquet/api/schema.h\" namespace \"parquet\" nogil:\ndiff --git a/python/pyarrow/_parquet.pyx b/python/pyarrow/_parquet.pyx\nindex eca6b201b..147af2175 100644\n--- a/python/pyarrow/_parquet.pyx\n+++ b/python/pyarrow/_parquet.pyx\n@@ -600,9 +600,11 @@ cdef class ParquetReader:\n         object source\n         CMemoryPool* allocator\n         unique_ptr[FileReader] reader\n-        column_idx_map\n         FileMetaData _metadata\n \n+    cdef public:\n+        _column_idx_map\n+\n     def __cinit__(self, MemoryPool memory_pool=None):\n         self.allocator = maybe_unbox_memory_pool(memory_pool)\n         self._metadata = None\n@@ -624,6 +626,23 @@ cdef class ParquetReader:\n             check_status(OpenFile(rd_handle, self.allocator, properties,\n                                   c_metadata, &self.reader))\n \n+    property column_paths:\n+\n+        def __get__(self):\n+            cdef:\n+                FileMetaData container = self.metadata\n+                const CFileMetaData* metadata = container._metadata\n+                vector[c_string] path\n+                int i = 0\n+\n+            paths = []\n+            for i in range(0, metadata.num_columns()):\n+                path = (metadata.schema().Column(i)\n+                        .path().get().ToDotVector())\n+                paths.append([frombytes(x) for x in path])\n+\n+            return paths\n+\n     @property\n     def metadata(self):\n         cdef:\n@@ -729,14 +748,14 @@ cdef class ParquetReader:\n             const CFileMetaData* metadata = container._metadata\n             int i = 0\n \n-        if self.column_idx_map is None:\n-            self.column_idx_map = {}\n+        if self._column_idx_map is None:\n+            self._column_idx_map = {}\n             for i in range(0, metadata.num_columns()):\n                 col_bytes = tobytes(metadata.schema().Column(i)\n                                     .path().get().ToDotString())\n-                self.column_idx_map[col_bytes] = i\n+                self._column_idx_map[col_bytes] = i\n \n-        return self.column_idx_map[tobytes(column_name)]\n+        return self._column_idx_map[tobytes(column_name)]\n \n     def read_column(self, int column_index):\n         cdef:\ndiff --git a/python/pyarrow/parquet.py b/python/pyarrow/parquet.py\nindex 37da66280..9fb890c6e 100644\n--- a/python/pyarrow/parquet.py\n+++ b/python/pyarrow/parquet.py\n@@ -15,6 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n \n+from collections import defaultdict\n import os\n import inspect\n import json\n@@ -54,6 +55,24 @@ def __init__(self, source, metadata=None, common_metadata=None):\n         self.reader = ParquetReader()\n         self.reader.open(source, metadata=metadata)\n         self.common_metadata = common_metadata\n+        self._nested_paths_by_prefix = self._build_nested_paths()\n+\n+    def _build_nested_paths(self):\n+        paths = self.reader.column_paths\n+\n+        result = defaultdict(list)\n+\n+        def _visit_piece(i, key, rest):\n+            result[key].append(i)\n+\n+            if len(rest) > 0:\n+                nested_key = '.'.join((key, rest[0]))\n+                _visit_piece(i, nested_key, rest[1:])\n+\n+        for i, path in enumerate(paths):\n+            _visit_piece(i, path[0], path[1:])\n+\n+        return result\n \n     @property\n     def metadata(self):\n@@ -75,7 +94,9 @@ def read_row_group(self, i, columns=None, nthreads=1,\n         Parameters\n         ----------\n         columns: list\n-            If not None, only these columns will be read from the row group.\n+            If not None, only these columns will be read from the row group. A\n+            column name may be a prefix of a nested field, e.g. 'a' will select\n+            'a.b', 'a.c', and 'a.d.e'\n         nthreads : int, default 1\n             Number of columns to read in parallel. If > 1, requires that the\n             underlying file source is threadsafe\n@@ -100,7 +121,9 @@ def read(self, columns=None, nthreads=1, use_pandas_metadata=False):\n         Parameters\n         ----------\n         columns: list\n-            If not None, only these columns will be read from the file.\n+            If not None, only these columns will be read from the file. A\n+            column name may be a prefix of a nested field, e.g. 'a' will select\n+            'a.b', 'a.c', and 'a.d.e'\n         nthreads : int, default 1\n             Number of columns to read in parallel. If > 1, requires that the\n             underlying file source is threadsafe\n@@ -143,7 +166,11 @@ def _get_column_indices(self, column_names, use_pandas_metadata=False):\n         if column_names is None:\n             return None\n \n-        indices = list(map(self.reader.column_name_idx, column_names))\n+        indices = []\n+\n+        for name in column_names:\n+            if name in self._nested_paths_by_prefix:\n+                indices.extend(self._nested_paths_by_prefix[name])\n \n         if use_pandas_metadata:\n             file_keyvalues = self.metadata.metadata\n@@ -837,7 +864,9 @@ def read_table(source, columns=None, nthreads=1, metadata=None,\n         name or directory name. For passing Python file objects or byte\n         buffers, see pyarrow.io.PythonFileInterface or pyarrow.io.BufferReader.\n     columns: list\n-        If not None, only these columns will be read from the file.\n+        If not None, only these columns will be read from the file. A column\n+        name may be a prefix of a nested field, e.g. 'a' will select 'a.b',\n+        'a.c', and 'a.d.e'\n     nthreads : int, default 1\n         Number of columns to read in parallel. Requires that the underlying\n         file source is threadsafe\n@@ -875,7 +904,9 @@ def read_pandas(source, columns=None, nthreads=1, metadata=None):\n         name. For passing Python file objects or byte buffers,\n         see pyarrow.io.PythonFileInterface or pyarrow.io.BufferReader.\n     columns: list\n-        If not None, only these columns will be read from the file.\n+        If not None, only these columns will be read from the file. A column\n+        name may be a prefix of a nested field, e.g. 'a' will select 'a.b',\n+        'a.c', and 'a.d.e'\n     nthreads : int, default 1\n         Number of columns to read in parallel. Requires that the underlying\n         file source is threadsafe\ndiff --git a/python/pyarrow/tests/test_parquet.py b/python/pyarrow/tests/test_parquet.py\nindex 274ff458f..9004fc01a 100644\n--- a/python/pyarrow/tests/test_parquet.py\n+++ b/python/pyarrow/tests/test_parquet.py\n@@ -1468,6 +1468,28 @@ def test_index_column_name_duplicate(tmpdir):\n     tm.assert_frame_equal(result_df, dfx)\n \n \n+@parquet\n+def test_parquet_nested_convenience(tmpdir):\n+    # ARROW-1684\n+    import pyarrow.parquet as pq\n+\n+    df = pd.DataFrame({\n+        'a': [[1, 2, 3], None, [4, 5], []],\n+        'b': [[1.], None, None, [6., 7.]],\n+    })\n+\n+    path = str(tmpdir / 'nested_convenience.parquet')\n+\n+    table = pa.Table.from_pandas(df, preserve_index=False)\n+    _write_table(table, path)\n+\n+    read = pq.read_table(path, columns=['a'])\n+    tm.assert_frame_equal(read.to_pandas(), df[['a']])\n+\n+    read = pq.read_table(path, columns=['a', 'b'])\n+    tm.assert_frame_equal(read.to_pandas(), df)\n+\n+\n @parquet\n def test_backwards_compatible_index_naming():\n     expected_string = b\"\"\"\\\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-29T01:07:19.670+0000",
                    "updated": "2017-11-29T01:07:19.670+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13110304/comment/16269856",
                    "id": "16269856",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1366\n[https://github.com/apache/arrow/pull/1366]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-11-29T01:07:22.160+0000",
                    "updated": "2017-11-29T01:07:22.160+0000"
                }
            ],
            "maxResults": 5,
            "total": 5,
            "startAt": 0
        },
        "customfield_12311820": "0|i3lev3:",
        "customfield_12314139": null
    }
}