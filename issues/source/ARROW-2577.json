{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13158980",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158980",
    "key": "ARROW-2577",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
            "name": "pcmoritz",
            "key": "pcmoritz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Philipp Moritz",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332956",
                "id": "12332956",
                "name": "C++ - Plasma"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
            "name": "pcmoritz",
            "key": "pcmoritz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Philipp Moritz",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
            "name": "pcmoritz",
            "key": "pcmoritz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Philipp Moritz",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2577/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 13,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158980/worklog/101560",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz opened a new pull request #2038: ARROW-2577: [Plasma] Add asv benchmarks for plasma\nURL: https://github.com/apache/arrow/pull/2038\n \n \n   This adds some initial ASV benchmarks for plasma:\r\n   \r\n   - Put latency\r\n   - Get latency\r\n   - Put throughput for 1KB, 10KB, 100KB, 1MB, 10MB, 100MB\r\n   \r\n   It also includes some minor code restructuring to expose the start_plasma_store method.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-14T01:15:29.325+0000",
                    "updated": "2018-05-14T01:15:29.325+0000",
                    "started": "2018-05-14T01:15:29.324+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "101560",
                    "issueId": "13158980"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158980/worklog/101676",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2038: ARROW-2577: [Plasma] Add asv benchmarks for plasma\nURL: https://github.com/apache/arrow/pull/2038#discussion_r187913045\n \n \n\n ##########\n File path: python/benchmarks/plasma.py\n ##########\n @@ -0,0 +1,68 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+import numpy as np\n+\n+import pyarrow as pa\n+import pyarrow.plasma as plasma\n+\n+from . import common\n+\n+\n+class PlasmaBenchmarks(object):\n \n Review comment:\n   From a high-level point of view, what do we want to benchmark here? The plasma client, or client + store? You may want to choose an explicit timer that reflects that decision (see the `timer` attribute [here](https://asv.readthedocs.io/en/latest/writing_benchmarks.html#timing)). Also add a docstring :-)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-14T11:12:35.376+0000",
                    "updated": "2018-05-14T11:12:35.376+0000",
                    "started": "2018-05-14T11:12:35.376+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "101676",
                    "issueId": "13158980"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158980/worklog/101677",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2038: ARROW-2577: [Plasma] Add asv benchmarks for plasma\nURL: https://github.com/apache/arrow/pull/2038#discussion_r187912579\n \n \n\n ##########\n File path: python/benchmarks/plasma.py\n ##########\n @@ -0,0 +1,68 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+import numpy as np\n+\n+import pyarrow as pa\n+import pyarrow.plasma as plasma\n+\n+from . import common\n+\n+\n+class PlasmaBenchmarks(object):\n+\n+    def setup(self):\n+        self.plasma_store_ctx = plasma.start_plasma_store(plasma_store_memory=10**9)\n+        plasma_store_name, p = self.plasma_store_ctx.__enter__()\n+        self.plasma_client = plasma.connect(plasma_store_name, \"\", 64)\n+\n+        self.data_1kb = np.random.randn(1000 // 8)\n \n Review comment:\n   You should use parametrization for the various sizes (you can look at the conversion benchmarks to see how that is done, or see [docs](https://asv.readthedocs.io/en/latest/writing_benchmarks.html#parameterized-benchmarks)). Also I don't think we should test so many sizes.  Testing a very small size (1kb) and a large-ish size (10mb) sounds sufficient.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-14T11:12:35.381+0000",
                    "updated": "2018-05-14T11:12:35.381+0000",
                    "started": "2018-05-14T11:12:35.380+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "101677",
                    "issueId": "13158980"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158980/worklog/101837",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on a change in pull request #2038: ARROW-2577: [Plasma] Add asv benchmarks for plasma\nURL: https://github.com/apache/arrow/pull/2038#discussion_r188060763\n \n \n\n ##########\n File path: python/benchmarks/plasma.py\n ##########\n @@ -0,0 +1,68 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+import numpy as np\n+\n+import pyarrow as pa\n+import pyarrow.plasma as plasma\n+\n+from . import common\n+\n+\n+class PlasmaBenchmarks(object):\n+\n+    def setup(self):\n+        self.plasma_store_ctx = plasma.start_plasma_store(plasma_store_memory=10**9)\n+        plasma_store_name, p = self.plasma_store_ctx.__enter__()\n+        self.plasma_client = plasma.connect(plasma_store_name, \"\", 64)\n+\n+        self.data_1kb = np.random.randn(1000 // 8)\n \n Review comment:\n   done\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-14T18:54:38.645+0000",
                    "updated": "2018-05-14T18:54:38.645+0000",
                    "started": "2018-05-14T18:54:38.644+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "101837",
                    "issueId": "13158980"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158980/worklog/101841",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on a change in pull request #2038: ARROW-2577: [Plasma] Add asv benchmarks for plasma\nURL: https://github.com/apache/arrow/pull/2038#discussion_r188062955\n \n \n\n ##########\n File path: python/benchmarks/plasma.py\n ##########\n @@ -0,0 +1,68 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+import numpy as np\n+\n+import pyarrow as pa\n+import pyarrow.plasma as plasma\n+\n+from . import common\n+\n+\n+class PlasmaBenchmarks(object):\n \n Review comment:\n   I added a docstring, not sure what you mean with the timer attribute; the default seems fine to me :)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-14T19:02:00.924+0000",
                    "updated": "2018-05-14T19:02:00.924+0000",
                    "started": "2018-05-14T19:02:00.924+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "101841",
                    "issueId": "13158980"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158980/worklog/101854",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2038: ARROW-2577: [Plasma] Add asv benchmarks for plasma\nURL: https://github.com/apache/arrow/pull/2038#discussion_r188072047\n \n \n\n ##########\n File path: python/benchmarks/plasma.py\n ##########\n @@ -0,0 +1,68 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+import numpy as np\n+\n+import pyarrow as pa\n+import pyarrow.plasma as plasma\n+\n+from . import common\n+\n+\n+class PlasmaBenchmarks(object):\n \n Review comment:\n   I mean that if you want to time the client overhead, you need a timer that measures the elapsed CPU time of the current process is required (but that is `asv`'s default, AFAICT). If OTOH you want to measure the whole client + server roundtrip, you need a timer that measures the elapsed wall clock time.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-14T19:36:18.441+0000",
                    "updated": "2018-05-14T19:36:18.441+0000",
                    "started": "2018-05-14T19:36:18.441+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "101854",
                    "issueId": "13158980"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158980/worklog/101879",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on a change in pull request #2038: ARROW-2577: [Plasma] Add asv benchmarks for plasma\nURL: https://github.com/apache/arrow/pull/2038#discussion_r188094484\n \n \n\n ##########\n File path: python/benchmarks/plasma.py\n ##########\n @@ -0,0 +1,68 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+import numpy as np\n+\n+import pyarrow as pa\n+import pyarrow.plasma as plasma\n+\n+from . import common\n+\n+\n+class PlasmaBenchmarks(object):\n \n Review comment:\n   Oh I see, thanks for pointing that out. I do want to measure the roundtrip wallclock time, and think timeit which is the default for asv is doing that (according to https://docs.python.org/3.0/library/timeit.html).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-14T20:53:09.881+0000",
                    "updated": "2018-05-14T20:53:09.881+0000",
                    "started": "2018-05-14T20:53:09.881+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "101879",
                    "issueId": "13158980"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158980/worklog/101881",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2038: ARROW-2577: [Plasma] Add asv benchmarks for plasma\nURL: https://github.com/apache/arrow/pull/2038#discussion_r188096894\n \n \n\n ##########\n File path: python/benchmarks/plasma.py\n ##########\n @@ -0,0 +1,68 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+import numpy as np\n+\n+import pyarrow as pa\n+import pyarrow.plasma as plasma\n+\n+from . import common\n+\n+\n+class PlasmaBenchmarks(object):\n \n Review comment:\n   Actually, according to https://asv.readthedocs.io/en/latest/writing_benchmarks.html#timing the default is process CPU time (by way of `time.process_time`). Which makes sense in most cases but not here :-)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-14T21:01:10.412+0000",
                    "updated": "2018-05-14T21:01:10.412+0000",
                    "started": "2018-05-14T21:01:10.412+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "101881",
                    "issueId": "13158980"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158980/worklog/101884",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on a change in pull request #2038: ARROW-2577: [Plasma] Add asv benchmarks for plasma\nURL: https://github.com/apache/arrow/pull/2038#discussion_r188100058\n \n \n\n ##########\n File path: python/benchmarks/plasma.py\n ##########\n @@ -0,0 +1,68 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+import numpy as np\n+\n+import pyarrow as pa\n+import pyarrow.plasma as plasma\n+\n+from . import common\n+\n+\n+class PlasmaBenchmarks(object):\n \n Review comment:\n   Thanks, I didn't realize they were overriding the timeit default, should be fixed now :)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-14T21:12:02.886+0000",
                    "updated": "2018-05-14T21:12:02.886+0000",
                    "started": "2018-05-14T21:12:02.885+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "101884",
                    "issueId": "13158980"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158980/worklog/101938",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2038: ARROW-2577: [Plasma] Add asv benchmarks for plasma\nURL: https://github.com/apache/arrow/pull/2038#issuecomment-388995282\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2038?src=pr&el=h1) Report\n   > Merging [#2038](https://codecov.io/gh/apache/arrow/pull/2038?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/4b8511f92d24dc9d5ace150218a2902c8e32dc76?src=pr&el=desc) will **increase** coverage by `0.02%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2038/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2038?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2038      +/-   ##\n   ==========================================\n   + Coverage   87.44%   87.47%   +0.02%     \n   ==========================================\n     Files         189      178      -11     \n     Lines       29368    28595     -773     \n   ==========================================\n   - Hits        25682    25014     -668     \n   + Misses       3686     3581     -105\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2038?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/util/thread-pool-test.cc](https://codecov.io/gh/apache/arrow/pull/2038/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZC1wb29sLXRlc3QuY2M=) | `98.87% <0%> (-0.57%)` | :arrow_down: |\n   | [rust/src/bitmap.rs](https://codecov.io/gh/apache/arrow/pull/2038/diff?src=pr&el=tree#diff-cnVzdC9zcmMvYml0bWFwLnJz) | | |\n   | [rust/src/builder.rs](https://codecov.io/gh/apache/arrow/pull/2038/diff?src=pr&el=tree#diff-cnVzdC9zcmMvYnVpbGRlci5ycw==) | | |\n   | [rust/src/memory.rs](https://codecov.io/gh/apache/arrow/pull/2038/diff?src=pr&el=tree#diff-cnVzdC9zcmMvbWVtb3J5LnJz) | | |\n   | [rust/src/error.rs](https://codecov.io/gh/apache/arrow/pull/2038/diff?src=pr&el=tree#diff-cnVzdC9zcmMvZXJyb3IucnM=) | | |\n   | [rust/src/buffer.rs](https://codecov.io/gh/apache/arrow/pull/2038/diff?src=pr&el=tree#diff-cnVzdC9zcmMvYnVmZmVyLnJz) | | |\n   | [rust/src/memory\\_pool.rs](https://codecov.io/gh/apache/arrow/pull/2038/diff?src=pr&el=tree#diff-cnVzdC9zcmMvbWVtb3J5X3Bvb2wucnM=) | | |\n   | [rust/src/datatypes.rs](https://codecov.io/gh/apache/arrow/pull/2038/diff?src=pr&el=tree#diff-cnVzdC9zcmMvZGF0YXR5cGVzLnJz) | | |\n   | [rust/src/list.rs](https://codecov.io/gh/apache/arrow/pull/2038/diff?src=pr&el=tree#diff-cnVzdC9zcmMvbGlzdC5ycw==) | | |\n   | [rust/src/array.rs](https://codecov.io/gh/apache/arrow/pull/2038/diff?src=pr&el=tree#diff-cnVzdC9zcmMvYXJyYXkucnM=) | | |\n   | ... and [2 more](https://codecov.io/gh/apache/arrow/pull/2038/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2038?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2038?src=pr&el=footer). Last update [4b8511f...34a0684](https://codecov.io/gh/apache/arrow/pull/2038?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-14T23:33:07.837+0000",
                    "updated": "2018-05-14T23:33:07.837+0000",
                    "started": "2018-05-14T23:33:07.837+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "101938",
                    "issueId": "13158980"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158980/worklog/101943",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz closed pull request #2038: ARROW-2577: [Plasma] Add asv benchmarks for plasma\nURL: https://github.com/apache/arrow/pull/2038\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/python/CMakeLists.txt b/python/CMakeLists.txt\nindex fcc1d3cdc2..99194c2733 100644\n--- a/python/CMakeLists.txt\n+++ b/python/CMakeLists.txt\n@@ -404,7 +404,7 @@ if (PYARROW_BUILD_PLASMA)\n     ${LINK_LIBS}\n     libplasma_shared)\n \n-  set(CYTHON_EXTENSIONS ${CYTHON_EXTENSIONS} plasma)\n+  set(CYTHON_EXTENSIONS ${CYTHON_EXTENSIONS} _plasma)\n   file(COPY ${PLASMA_EXECUTABLE} DESTINATION ${BUILD_OUTPUT_ROOT_DIRECTORY})\n endif()\n \ndiff --git a/python/asv-build.sh b/python/asv-build.sh\nindex 31e56edcdb..2bbc94bd3d 100755\n--- a/python/asv-build.sh\n+++ b/python/asv-build.sh\n@@ -37,6 +37,7 @@ cmake -GNinja \\\n       -DCMAKE_INSTALL_PREFIX=$ARROW_HOME \\\n       -DARROW_CXXFLAGS=$CXXFLAGS \\\n       -DARROW_PYTHON=ON \\\n+      -DARROW_PLASMA=ON \\\n       -DARROW_BUILD_TESTS=OFF \\\n       ..\n cmake --build . --target install\n@@ -47,6 +48,7 @@ popd\n # Build pyarrow wrappers\n export SETUPTOOLS_SCM_PRETEND_VERSION=0.0.1\n export PYARROW_BUILD_TYPE=release\n+export PYARROW_WITH_PLASMA=1\n \n python setup.py clean\n find pyarrow -name \"*.so\" -delete\ndiff --git a/python/benchmarks/plasma.py b/python/benchmarks/plasma.py\nnew file mode 100644\nindex 0000000000..8a607a3c62\n--- /dev/null\n+++ b/python/benchmarks/plasma.py\n@@ -0,0 +1,68 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+import numpy as np\n+import timeit\n+\n+import pyarrow as pa\n+import pyarrow.plasma as plasma\n+\n+from . import common\n+\n+\n+class SimplePlasmaThroughput(object):\n+    \"\"\"Benchmark plasma store throughput with a single client.\"\"\"\n+\n+    params = [1000, 100000, 10000000]\n+\n+    timer = timeit.default_timer\n+\n+    def setup(self, size):\n+        self.plasma_store_ctx = plasma.start_plasma_store(plasma_store_memory=10**9)\n+        plasma_store_name, p = self.plasma_store_ctx.__enter__()\n+        self.plasma_client = plasma.connect(plasma_store_name, \"\", 64)\n+\n+        self.data = np.random.randn(size // 8)\n+\n+    def teardown(self, size):\n+        self.plasma_store_ctx.__exit__(None, None, None)\n+\n+    def time_plasma_put_data(self, size):\n+        self.plasma_client.put(self.data)\n+\n+\n+class SimplePlasmaLatency(object):\n+    \"\"\"Benchmark plasma store latency with a single client.\"\"\"\n+\n+    timer = timeit.default_timer\n+\n+    def setup(self):\n+        self.plasma_store_ctx = plasma.start_plasma_store(plasma_store_memory=10**9)\n+        plasma_store_name, p = self.plasma_store_ctx.__enter__()\n+        self.plasma_client = plasma.connect(plasma_store_name, \"\", 64)\n+\n+    def teardown(self):\n+        self.plasma_store_ctx.__exit__(None, None, None)\n+\n+    def time_plasma_put(self):\n+        for i in range(1000):\n+            self.plasma_client.put(1)\n+\n+    def time_plasma_putget(self):\n+        for i in range(1000):\n+            x = self.plasma_client.put(1)\n+            self.plasma_client.get(x)\ndiff --git a/python/pyarrow/plasma.pyx b/python/pyarrow/_plasma.pyx\nsimilarity index 100%\nrename from python/pyarrow/plasma.pyx\nrename to python/pyarrow/_plasma.pyx\ndiff --git a/python/pyarrow/plasma.py b/python/pyarrow/plasma.py\nnew file mode 100644\nindex 0000000000..2fb3974414\n--- /dev/null\n+++ b/python/pyarrow/plasma.py\n@@ -0,0 +1,97 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+import contextlib\n+import os\n+import pyarrow as pa\n+import subprocess\n+import shutil\n+import tempfile\n+import time\n+\n+from pyarrow._plasma import (ObjectID, ObjectNotAvailable, # noqa\n+                             PlasmaBuffer, PlasmaClient, connect)\n+\n+\n+@contextlib.contextmanager\n+def start_plasma_store(plasma_store_memory,\n+                       use_valgrind=False, use_profiler=False,\n+                       use_one_memory_mapped_file=False,\n+                       plasma_directory=None, use_hugepages=False):\n+    \"\"\"Start a plasma store process.\n+    Args:\n+        plasma_store_memory (int): Capacity of the plasma store in bytes.\n+        use_valgrind (bool): True if the plasma store should be started inside\n+            of valgrind. If this is True, use_profiler must be False.\n+        use_profiler (bool): True if the plasma store should be started inside\n+            a profiler. If this is True, use_valgrind must be False.\n+        use_one_memory_mapped_file: If True, then the store will use only a\n+            single memory-mapped file.\n+        plasma_directory (str): Directory where plasma memory mapped files\n+            will be stored.\n+        use_hugepages (bool): True if the plasma store should use huge pages.\n+    Return:\n+        A tuple of the name of the plasma store socket and the process ID of\n+            the plasma store process.\n+    \"\"\"\n+    if use_valgrind and use_profiler:\n+        raise Exception(\"Cannot use valgrind and profiler at the same time.\")\n+\n+    tmpdir = tempfile.mkdtemp(prefix='test_plasma-')\n+    try:\n+        plasma_store_name = os.path.join(tmpdir, 'plasma.sock')\n+        plasma_store_executable = os.path.join(pa.__path__[0], \"plasma_store\")\n+        command = [plasma_store_executable,\n+                   \"-s\", plasma_store_name,\n+                   \"-m\", str(plasma_store_memory)]\n+        if use_one_memory_mapped_file:\n+            command += [\"-f\"]\n+        if plasma_directory:\n+            command += [\"-d\", plasma_directory]\n+        if use_hugepages:\n+            command += [\"-h\"]\n+        stdout_file = None\n+        stderr_file = None\n+        if use_valgrind:\n+            command = [\"valgrind\",\n+                       \"--track-origins=yes\",\n+                       \"--leak-check=full\",\n+                       \"--show-leak-kinds=all\",\n+                       \"--leak-check-heuristics=stdstring\",\n+                       \"--error-exitcode=1\"] + command\n+            proc = subprocess.Popen(command, stdout=stdout_file,\n+                                    stderr=stderr_file)\n+            time.sleep(1.0)\n+        elif use_profiler:\n+            command = [\"valgrind\", \"--tool=callgrind\"] + command\n+            proc = subprocess.Popen(command, stdout=stdout_file,\n+                                    stderr=stderr_file)\n+            time.sleep(1.0)\n+        else:\n+            proc = subprocess.Popen(command, stdout=stdout_file,\n+                                    stderr=stderr_file)\n+            time.sleep(0.1)\n+        rc = proc.poll()\n+        if rc is not None:\n+            raise RuntimeError(\"plasma_store exited unexpectedly with \"\n+                               \"code %d\" % (rc,))\n+\n+        yield plasma_store_name, proc\n+    finally:\n+        if proc.poll() is None:\n+            proc.kill()\n+        shutil.rmtree(tmpdir)\ndiff --git a/python/pyarrow/tests/test_plasma.py b/python/pyarrow/tests/test_plasma.py\nindex de11eb6e5f..fe5cafb72d 100644\n--- a/python/pyarrow/tests/test_plasma.py\n+++ b/python/pyarrow/tests/test_plasma.py\n@@ -19,16 +19,11 @@\n from __future__ import division\n from __future__ import print_function\n \n-import contextlib\n import os\n import pytest\n import random\n-import shutil\n import signal\n import sys\n-import subprocess\n-import tempfile\n-import time\n \n import numpy as np\n import pyarrow as pa\n@@ -106,76 +101,6 @@ def assert_get_object_equal(unit_test, client1, client2, object_id,\n         assert plasma.buffers_equal(metadata, client1_metadata)\n \n \n-@contextlib.contextmanager\n-def start_plasma_store(plasma_store_memory=DEFAULT_PLASMA_STORE_MEMORY,\n-                       use_valgrind=False, use_profiler=False,\n-                       use_one_memory_mapped_file=False,\n-                       plasma_directory=None, use_hugepages=False):\n-    \"\"\"Start a plasma store process.\n-    Args:\n-        use_valgrind (bool): True if the plasma store should be started inside\n-            of valgrind. If this is True, use_profiler must be False.\n-        use_profiler (bool): True if the plasma store should be started inside\n-            a profiler. If this is True, use_valgrind must be False.\n-        stdout_file: A file handle opened for writing to redirect stdout to. If\n-            no redirection should happen, then this should be None.\n-        stderr_file: A file handle opened for writing to redirect stderr to. If\n-            no redirection should happen, then this should be None.\n-        use_one_memory_mapped_file: If True, then the store will use only a\n-            single memory-mapped file.\n-    Return:\n-        A tuple of the name of the plasma store socket and the process ID of\n-            the plasma store process.\n-    \"\"\"\n-    if use_valgrind and use_profiler:\n-        raise Exception(\"Cannot use valgrind and profiler at the same time.\")\n-\n-    tmpdir = tempfile.mkdtemp(prefix='test_plasma-')\n-    try:\n-        plasma_store_name = os.path.join(tmpdir, 'plasma.sock')\n-        plasma_store_executable = os.path.join(pa.__path__[0], \"plasma_store\")\n-        command = [plasma_store_executable,\n-                   \"-s\", plasma_store_name,\n-                   \"-m\", str(plasma_store_memory)]\n-        if use_one_memory_mapped_file:\n-            command += [\"-f\"]\n-        if plasma_directory:\n-            command += [\"-d\", plasma_directory]\n-        if use_hugepages:\n-            command += [\"-h\"]\n-        stdout_file = None\n-        stderr_file = None\n-        if use_valgrind:\n-            command = [\"valgrind\",\n-                       \"--track-origins=yes\",\n-                       \"--leak-check=full\",\n-                       \"--show-leak-kinds=all\",\n-                       \"--leak-check-heuristics=stdstring\",\n-                       \"--error-exitcode=1\"] + command\n-            proc = subprocess.Popen(command, stdout=stdout_file,\n-                                    stderr=stderr_file)\n-            time.sleep(1.0)\n-        elif use_profiler:\n-            command = [\"valgrind\", \"--tool=callgrind\"] + command\n-            proc = subprocess.Popen(command, stdout=stdout_file,\n-                                    stderr=stderr_file)\n-            time.sleep(1.0)\n-        else:\n-            proc = subprocess.Popen(command, stdout=stdout_file,\n-                                    stderr=stderr_file)\n-            time.sleep(0.1)\n-        rc = proc.poll()\n-        if rc is not None:\n-            raise RuntimeError(\"plasma_store exited unexpectedly with \"\n-                               \"code %d\" % (rc,))\n-\n-        yield plasma_store_name, proc\n-    finally:\n-        if proc.poll() is None:\n-            proc.kill()\n-        shutil.rmtree(tmpdir)\n-\n-\n @pytest.mark.plasma\n class TestPlasmaClient(object):\n \n@@ -185,7 +110,8 @@ def setup_method(self, test_method):\n \n         import pyarrow.plasma as plasma\n         # Start Plasma store.\n-        self.plasma_store_ctx = start_plasma_store(\n+        self.plasma_store_ctx = plasma.start_plasma_store(\n+            plasma_store_memory=DEFAULT_PLASMA_STORE_MEMORY,\n             use_valgrind=USE_VALGRIND,\n             use_one_memory_mapped_file=use_one_memory_mapped_file)\n         plasma_store_name, self.p = self.plasma_store_ctx.__enter__()\n@@ -839,8 +765,10 @@ def test_object_id_equality_operators():\n                     reason=\"requires hugepage support\")\n def test_use_huge_pages():\n     import pyarrow.plasma as plasma\n-    with start_plasma_store(plasma_directory=\"/mnt/hugepages\",\n-                            use_hugepages=True) as (plasma_store_name, p):\n+    with plasma.start_plasma_store(\n+            plasma_store_memory=DEFAULT_PLASMA_STORE_MEMORY,\n+            plasma_directory=\"/mnt/hugepages\",\n+            use_hugepages=True) as (plasma_store_name, p):\n         plasma_client = plasma.connect(plasma_store_name, \"\", 64)\n         create_object(plasma_client, 100000000)\n \n@@ -852,7 +780,9 @@ def test_use_huge_pages():\n def test_plasma_client_sharing():\n     import pyarrow.plasma as plasma\n \n-    with start_plasma_store() as (plasma_store_name, p):\n+    with plasma.start_plasma_store(\n+            plasma_store_memory=DEFAULT_PLASMA_STORE_MEMORY) \\\n+            as (plasma_store_name, p):\n         plasma_client = plasma.connect(plasma_store_name, \"\", 64)\n         object_id = plasma_client.put(np.zeros(3))\n         buf = plasma_client.get(object_id)\ndiff --git a/python/setup.py b/python/setup.py\nindex 8d26e092bc..2e0d982595 100644\n--- a/python/setup.py\n+++ b/python/setup.py\n@@ -144,7 +144,7 @@ def initialize_options(self):\n         'lib',\n         '_parquet',\n         '_orc',\n-        'plasma']\n+        '_plasma']\n \n     def _run_cmake(self):\n         # The directory containing this setup.py\n@@ -328,7 +328,7 @@ def _run_cmake(self):\n     def _failure_permitted(self, name):\n         if name == '_parquet' and not self.with_parquet:\n             return True\n-        if name == 'plasma' and not self.with_plasma:\n+        if name == '_plasma' and not self.with_plasma:\n             return True\n         if name == '_orc' and not self.with_orc:\n             return True\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-14T23:57:18.101+0000",
                    "updated": "2018-05-14T23:57:18.101+0000",
                    "started": "2018-05-14T23:57:18.101+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "101943",
                    "issueId": "13158980"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158980/worklog/101950",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on issue #2038: ARROW-2577: [Plasma] Add asv benchmarks for plasma\nURL: https://github.com/apache/arrow/pull/2038#issuecomment-389007395\n \n \n   @pitrou Is there a way to get all the numbers for each parameter from a command line run? For me it only shows the first one and the rest is omitted with ... (at the very right):\r\n   \r\n   ```\r\n   ubuntu@ip-172-31-49-70:~/arrow/python$ asv run --python=same\r\n   \u00b7 Discovering benchmarks\r\n   \u00b7 Running 14 total benchmarks (1 commits * 1 environments * 14 benchmarks)\r\n   [  0.00%] \u00b7\u00b7 Building for existing-py_home_ubuntu_anaconda3_bin_python\r\n   [  0.00%] \u00b7\u00b7 Benchmarking existing-py_home_ubuntu_anaconda3_bin_python\r\n   [  7.14%] \u00b7\u00b7\u00b7 Running array_ops.ScalarAccess.time_as_py                                                                                                                        9.41ms\r\n   [ 14.29%] \u00b7\u00b7\u00b7 Running array_ops.ScalarAccess.time_getitem                                                                                                                     41.09ms\r\n   [ 21.43%] \u00b7\u00b7\u00b7 Running convert_builtins.ConvertArrayToPyList.time_convert                                                                                                  41.60ms;...\r\n   [ 28.57%] \u00b7\u00b7\u00b7 Running convert_builtins.ConvertPyListToArray.time_convert                                                                                                  15.41ms;...\r\n   [ 35.71%] \u00b7\u00b7\u00b7 Running convert_builtins.InferPyListToArray.time_infer                                                                                                      19.75ms;...\r\n   [ 42.86%] \u00b7\u00b7\u00b7 Running convert_pandas.PandasConversionsFromArrow.time_to_series                                                                                             1.28ms;...\r\n   [ 50.00%] \u00b7\u00b7\u00b7 Running convert_pandas.PandasConversionsToArrow.time_from_series                                                                                           594.60\u03bcs;...\r\n   [ 57.14%] \u00b7\u00b7\u00b7 Running convert_pandas.ZeroCopyPandasRead.time_deserialize_from_buffer                                                                                         609.45\u03bcs\r\n   [ 64.29%] \u00b7\u00b7\u00b7 Running convert_pandas.ZeroCopyPandasRead.time_deserialize_from_components                                                                                     597.48\u03bcs\r\n   [ 71.43%] \u00b7\u00b7\u00b7 Running microbenchmarks.PandasObjectIsNull.time_PandasObjectIsNull                                                                                           2.76ms;...\r\n   [ 78.57%] \u00b7\u00b7\u00b7 Running plasma.SimplePlasmaLatency.time_plasma_put                                                                                                             500.94ms\r\n   [ 85.71%] \u00b7\u00b7\u00b7 Running plasma.SimplePlasmaLatency.time_plasma_putget                                                                                                          691.88ms\r\n   [ 92.86%] \u00b7\u00b7\u00b7 Running plasma.SimplePlasmaThroughput.time_plasma_put_data                                                                                                 562.55\u03bcs;...\r\n   [100.00%] \u00b7\u00b7\u00b7 Running streaming.StreamReader.time_read_to_dataframe                                                                                                      232.14ms;...\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-15T00:50:10.410+0000",
                    "updated": "2018-05-15T00:50:10.410+0000",
                    "started": "2018-05-15T00:50:10.409+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "101950",
                    "issueId": "13158980"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158980/worklog/102039",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #2038: ARROW-2577: [Plasma] Add asv benchmarks for plasma\nURL: https://github.com/apache/arrow/pull/2038#issuecomment-389093866\n \n \n   @pcmoritz The `-e` flag should do it, IIRC.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-15T08:54:22.938+0000",
                    "updated": "2018-05-15T08:54:22.938+0000",
                    "started": "2018-05-15T08:54:22.938+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "102039",
                    "issueId": "13158980"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 7200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@73622696[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@574b4c9a[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@50053e18[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5da7971e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@761d1451[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4bd3f154[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@32dff3c8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@53a19dea[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4d00a453[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@198db5f6[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@548144bc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@b10cd0b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 7200,
        "customfield_12312520": null,
        "customfield_12312521": "Mon May 14 23:57:22 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-05-14T23:57:22.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2577/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-05-14T01:13:52.000+0000",
        "updated": "2018-07-27T15:04:15.000+0000",
        "timeoriginalestimate": null,
        "description": "We are about to merge some PRs that potentially impact plasma performance, so we should set up ASV to track the changes.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 7200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Plasma] Add ASV benchmarks",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13158980/comment/16475073",
                    "id": "16475073",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
                        "name": "pcmoritz",
                        "key": "pcmoritz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Philipp Moritz",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 2038\n[https://github.com/apache/arrow/pull/2038]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
                        "name": "pcmoritz",
                        "key": "pcmoritz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Philipp Moritz",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-05-14T23:57:22.569+0000",
                    "updated": "2018-05-14T23:57:22.569+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3tnkv:",
        "customfield_12314139": null
    }
}