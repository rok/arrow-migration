{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13202987",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202987",
    "key": "ARROW-3951",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343937",
                "id": "12343937",
                "description": "",
                "name": "0.13.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-04-01"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=anson627",
            "name": "anson627",
            "key": "anson627",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Anson Qian",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333772",
                "id": "12333772",
                "name": "Go"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=sbinet",
            "name": "sbinet",
            "key": "sbinet",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=sbinet&avatarId=36072",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sbinet&avatarId=36072",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sbinet&avatarId=36072",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sbinet&avatarId=36072"
            },
            "displayName": "Sebastien Binet",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=sbinet",
            "name": "sbinet",
            "key": "sbinet",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=sbinet&avatarId=36072",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sbinet&avatarId=36072",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sbinet&avatarId=36072",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sbinet&avatarId=36072"
            },
            "displayName": "Sebastien Binet",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 31200,
            "total": 31200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 31200,
            "total": 31200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3951/votes",
            "votes": 1,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 59,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202987/worklog/204059",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anson627 commented on pull request #3755: ARROW-3951 [Go] implement a CSV writer\nURL: https://github.com/apache/arrow/pull/3755\n \n \n   @sbinet\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-26T04:23:24.740+0000",
                    "updated": "2019-02-26T04:23:24.740+0000",
                    "started": "2019-02-26T04:23:24.739+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "204059",
                    "issueId": "13202987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202987/worklog/204667",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "anson627 commented on issue #3755: ARROW-3951 [Go] implement a CSV writer [WIP]\nURL: https://github.com/apache/arrow/pull/3755#issuecomment-467565084\n \n \n   @sbinet can you take a quick look at the basic implementation and see if I'm on the right track? anything I'm missing here?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-26T18:53:31.135+0000",
                    "updated": "2019-02-26T18:53:31.135+0000",
                    "started": "2019-02-26T18:53:31.135+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "204667",
                    "issueId": "13202987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202987/worklog/204715",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3755: ARROW-3951 [Go] implement a CSV writer [WIP]\nURL: https://github.com/apache/arrow/pull/3755#discussion_r260440152\n \n \n\n ##########\n File path: go/arrow/csv/common.go\n ##########\n @@ -0,0 +1,25 @@\n+package csv\n \n Review comment:\n   please add a license header.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-26T19:52:14.840+0000",
                    "updated": "2019-02-26T19:52:14.840+0000",
                    "started": "2019-02-26T19:52:14.839+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "204715",
                    "issueId": "13202987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202987/worklog/204716",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3755: ARROW-3951 [Go] implement a CSV writer [WIP]\nURL: https://github.com/apache/arrow/pull/3755#discussion_r260444610\n \n \n\n ##########\n File path: go/arrow/csv/writer.go\n ##########\n @@ -0,0 +1,147 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// Package csv reads CSV files and presents the extracted data as records.\n+package csv\n+\n+import (\n+\t\"encoding/csv\"\n+\t\"fmt\"\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/array\"\n+\t\"io\"\n+)\n+\n+// WriterOption configures a CSV writer.\n+type WriterOption func(*Writer)\n+\n+// WithComma specifies the fields separation character used while writing CSV files.\n+func WithFieldSeparator(c rune) WriterOption {\n+\treturn func(w *Writer) {\n+\t\tw.w.Comma = c\n+\t}\n+}\n+\n+// UseCRLF specifies the line terminator used while writing CSV files.\n+func WithLineTerminator(b bool) WriterOption {\n \n Review comment:\n   this could be indeed renamed `UseCRLF`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-26T19:52:14.902+0000",
                    "updated": "2019-02-26T19:52:14.902+0000",
                    "started": "2019-02-26T19:52:14.902+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "204716",
                    "issueId": "13202987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202987/worklog/204717",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3755: ARROW-3951 [Go] implement a CSV writer [WIP]\nURL: https://github.com/apache/arrow/pull/3755#discussion_r260441257\n \n \n\n ##########\n File path: go/arrow/csv/writer.go\n ##########\n @@ -0,0 +1,147 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// Package csv reads CSV files and presents the extracted data as records.\n \n Review comment:\n   this documentation should probably be lifted and put into the \"new\" csv.go file (and be amended to also mention writing CSV files :))\r\n   also: the one from the \"new\" reader.go file should be removed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-26T19:52:15.158+0000",
                    "updated": "2019-02-26T19:52:15.158+0000",
                    "started": "2019-02-26T19:52:15.157+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "204717",
                    "issueId": "13202987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202987/worklog/204718",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3755: ARROW-3951 [Go] implement a CSV writer [WIP]\nURL: https://github.com/apache/arrow/pull/3755#discussion_r260444364\n \n \n\n ##########\n File path: go/arrow/csv/writer.go\n ##########\n @@ -0,0 +1,147 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// Package csv reads CSV files and presents the extracted data as records.\n+package csv\n+\n+import (\n+\t\"encoding/csv\"\n+\t\"fmt\"\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/array\"\n+\t\"io\"\n+)\n+\n+// WriterOption configures a CSV writer.\n+type WriterOption func(*Writer)\n \n Review comment:\n   perhaps, instead of defining a new \"WriterOption\" we should keep `Option` but introduce a hidden `config` type on which the new `Option` type would operate:\r\n   \r\n   ```go\r\n   type Option func(*config)\r\n   type config struct {\r\n       // ...\r\n   }\r\n   ```\r\n   \r\n   this would involve having to check at runtime whether the option makes sense (some write-oriented options don't make sense for a reader and vice versa...)\r\n   not sold on this `config` struct either...\r\n   what do you think?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-26T19:52:15.160+0000",
                    "updated": "2019-02-26T19:52:15.160+0000",
                    "started": "2019-02-26T19:52:15.159+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "204718",
                    "issueId": "13202987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202987/worklog/204719",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3755: ARROW-3951 [Go] implement a CSV writer [WIP]\nURL: https://github.com/apache/arrow/pull/3755#discussion_r260445043\n \n \n\n ##########\n File path: go/arrow/csv/writer.go\n ##########\n @@ -0,0 +1,147 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// Package csv reads CSV files and presents the extracted data as records.\n+package csv\n+\n+import (\n+\t\"encoding/csv\"\n+\t\"fmt\"\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/array\"\n+\t\"io\"\n+)\n+\n+// WriterOption configures a CSV writer.\n+type WriterOption func(*Writer)\n+\n+// WithComma specifies the fields separation character used while writing CSV files.\n+func WithFieldSeparator(c rune) WriterOption {\n+\treturn func(w *Writer) {\n+\t\tw.w.Comma = c\n+\t}\n+}\n+\n+// UseCRLF specifies the line terminator used while writing CSV files.\n+func WithLineTerminator(b bool) WriterOption {\n+\treturn func(w *Writer) {\n+\t\tw.w.UseCRLF = b\n+\t}\n+}\n+\n+// Reader wraps encoding/csv.Reader and creates array.Records from a schema.\n+type Writer struct {\n+\tw      *csv.Writer\n+\tschema *arrow.Schema\n+}\n+\n+// NewWriter returns a writer that write array.Records to the CSV file\n \n Review comment:\n   `s/that write/that writes/`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-26T19:52:15.396+0000",
                    "updated": "2019-02-26T19:52:15.396+0000",
                    "started": "2019-02-26T19:52:15.395+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "204719",
                    "issueId": "13202987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202987/worklog/204720",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3755: ARROW-3951 [Go] implement a CSV writer [WIP]\nURL: https://github.com/apache/arrow/pull/3755#discussion_r260446311\n \n \n\n ##########\n File path: go/arrow/csv/writer_test.go\n ##########\n @@ -0,0 +1,59 @@\n+package csv_test\n \n Review comment:\n   please add a license header.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-26T19:52:15.613+0000",
                    "updated": "2019-02-26T19:52:15.613+0000",
                    "started": "2019-02-26T19:52:15.613+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "204720",
                    "issueId": "13202987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202987/worklog/204721",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3755: ARROW-3951 [Go] implement a CSV writer [WIP]\nURL: https://github.com/apache/arrow/pull/3755#discussion_r260445581\n \n \n\n ##########\n File path: go/arrow/csv/writer.go\n ##########\n @@ -0,0 +1,147 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// Package csv reads CSV files and presents the extracted data as records.\n+package csv\n+\n+import (\n+\t\"encoding/csv\"\n+\t\"fmt\"\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/array\"\n+\t\"io\"\n+)\n+\n+// WriterOption configures a CSV writer.\n+type WriterOption func(*Writer)\n+\n+// WithComma specifies the fields separation character used while writing CSV files.\n+func WithFieldSeparator(c rune) WriterOption {\n+\treturn func(w *Writer) {\n+\t\tw.w.Comma = c\n+\t}\n+}\n+\n+// UseCRLF specifies the line terminator used while writing CSV files.\n+func WithLineTerminator(b bool) WriterOption {\n+\treturn func(w *Writer) {\n+\t\tw.w.UseCRLF = b\n+\t}\n+}\n+\n+// Reader wraps encoding/csv.Reader and creates array.Records from a schema.\n+type Writer struct {\n+\tw      *csv.Writer\n+\tschema *arrow.Schema\n+}\n+\n+// NewWriter returns a writer that write array.Records to the CSV file\n+// with the given schema.\n+//\n+// NewWriter panics if the given schema contains fields that have types that are not\n+// primitive types.\n+func NewWriter(r io.Writer, schema *arrow.Schema, opts ...WriterOption) *Writer {\n \n Review comment:\n   `s/r io.Writer/w io.Writer/`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-26T19:52:15.718+0000",
                    "updated": "2019-02-26T19:52:15.718+0000",
                    "started": "2019-02-26T19:52:15.718+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "204721",
                    "issueId": "13202987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202987/worklog/204722",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3755: ARROW-3951 [Go] implement a CSV writer [WIP]\nURL: https://github.com/apache/arrow/pull/3755#discussion_r260455427\n \n \n\n ##########\n File path: go/arrow/csv/writer_test.go\n ##########\n @@ -0,0 +1,59 @@\n+package csv_test\n+\n+import (\n+\t\"bytes\"\n+\t\"strings\"\n+\t\"testing\"\n+\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/array\"\n+\t\"github.com/apache/arrow/go/arrow/csv\"\n+\t\"github.com/apache/arrow/go/arrow/memory\"\n+)\n+\n+func TestCSVWriter(t *testing.T) {\n+\tf := bytes.NewBufferString(``)\n+\n+\tpool := memory.NewGoAllocator()\n \n Review comment:\n   please wrap this with a `memory.NewCheckedAllocator` and add:\r\n   ```go\r\n   defer pool.AssertSize(t, 0)\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-26T19:52:15.796+0000",
                    "updated": "2019-02-26T19:52:15.796+0000",
                    "started": "2019-02-26T19:52:15.795+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "204722",
                    "issueId": "13202987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202987/worklog/204723",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3755: ARROW-3951 [Go] implement a CSV writer [WIP]\nURL: https://github.com/apache/arrow/pull/3755#discussion_r260456447\n \n \n\n ##########\n File path: go/arrow/csv/writer.go\n ##########\n @@ -0,0 +1,147 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// Package csv reads CSV files and presents the extracted data as records.\n+package csv\n+\n+import (\n+\t\"encoding/csv\"\n+\t\"fmt\"\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/array\"\n+\t\"io\"\n+)\n+\n+// WriterOption configures a CSV writer.\n+type WriterOption func(*Writer)\n+\n+// WithComma specifies the fields separation character used while writing CSV files.\n+func WithFieldSeparator(c rune) WriterOption {\n+\treturn func(w *Writer) {\n+\t\tw.w.Comma = c\n+\t}\n+}\n+\n+// UseCRLF specifies the line terminator used while writing CSV files.\n+func WithLineTerminator(b bool) WriterOption {\n+\treturn func(w *Writer) {\n+\t\tw.w.UseCRLF = b\n+\t}\n+}\n+\n+// Reader wraps encoding/csv.Reader and creates array.Records from a schema.\n+type Writer struct {\n+\tw      *csv.Writer\n+\tschema *arrow.Schema\n+}\n+\n+// NewWriter returns a writer that write array.Records to the CSV file\n+// with the given schema.\n+//\n+// NewWriter panics if the given schema contains fields that have types that are not\n+// primitive types.\n+func NewWriter(r io.Writer, schema *arrow.Schema, opts ...WriterOption) *Writer {\n+\tvalidate(schema)\n+\n+\trr := &Writer{w: csv.NewWriter(r), schema: schema}\n+\tfor _, opt := range opts {\n+\t\topt(rr)\n+\t}\n+\n+\treturn rr\n+}\n+\n+func (w *Writer) Schema() *arrow.Schema { return w.schema }\n+\n+// Write writes a single Record as one row to the CSV file\n+func (w *Writer) Write(record array.Record) error {\n+\tif !record.Schema().Equal(w.schema) {\n \n Review comment:\n   it could be interesting to be able to (optionally) write a header.\r\n   (this can be added as a FIXME or a JIRA issue.)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-26T19:52:15.816+0000",
                    "updated": "2019-02-26T19:52:15.816+0000",
                    "started": "2019-02-26T19:52:15.816+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "204723",
                    "issueId": "13202987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202987/worklog/204724",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3755: ARROW-3951 [Go] implement a CSV writer [WIP]\nURL: https://github.com/apache/arrow/pull/3755#discussion_r260445477\n \n \n\n ##########\n File path: go/arrow/csv/writer.go\n ##########\n @@ -0,0 +1,147 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// Package csv reads CSV files and presents the extracted data as records.\n+package csv\n+\n+import (\n+\t\"encoding/csv\"\n+\t\"fmt\"\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/array\"\n+\t\"io\"\n+)\n+\n+// WriterOption configures a CSV writer.\n+type WriterOption func(*Writer)\n+\n+// WithComma specifies the fields separation character used while writing CSV files.\n+func WithFieldSeparator(c rune) WriterOption {\n+\treturn func(w *Writer) {\n+\t\tw.w.Comma = c\n+\t}\n+}\n+\n+// UseCRLF specifies the line terminator used while writing CSV files.\n+func WithLineTerminator(b bool) WriterOption {\n+\treturn func(w *Writer) {\n+\t\tw.w.UseCRLF = b\n+\t}\n+}\n+\n+// Reader wraps encoding/csv.Reader and creates array.Records from a schema.\n+type Writer struct {\n+\tw      *csv.Writer\n+\tschema *arrow.Schema\n+}\n+\n+// NewWriter returns a writer that write array.Records to the CSV file\n+// with the given schema.\n+//\n+// NewWriter panics if the given schema contains fields that have types that are not\n+// primitive types.\n+func NewWriter(r io.Writer, schema *arrow.Schema, opts ...WriterOption) *Writer {\n+\tvalidate(schema)\n+\n+\trr := &Writer{w: csv.NewWriter(r), schema: schema}\n \n Review comment:\n   `s/rr/ww/`\r\n   `s/r/w/`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-26T19:52:15.841+0000",
                    "updated": "2019-02-26T19:52:15.841+0000",
                    "started": "2019-02-26T19:52:15.840+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "204724",
                    "issueId": "13202987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202987/worklog/204725",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3755: ARROW-3951 [Go] implement a CSV writer [WIP]\nURL: https://github.com/apache/arrow/pull/3755#discussion_r260458211\n \n \n\n ##########\n File path: go/arrow/csv/writer_test.go\n ##########\n @@ -0,0 +1,59 @@\n+package csv_test\n+\n+import (\n+\t\"bytes\"\n+\t\"strings\"\n+\t\"testing\"\n+\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/array\"\n+\t\"github.com/apache/arrow/go/arrow/csv\"\n+\t\"github.com/apache/arrow/go/arrow/memory\"\n+)\n+\n+func TestCSVWriter(t *testing.T) {\n \n Review comment:\n   it could be interesting to also write a nice little example based on this.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-26T19:52:15.914+0000",
                    "updated": "2019-02-26T19:52:15.914+0000",
                    "started": "2019-02-26T19:52:15.913+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "204725",
                    "issueId": "13202987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202987/worklog/204726",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3755: ARROW-3951 [Go] implement a CSV writer [WIP]\nURL: https://github.com/apache/arrow/pull/3755#discussion_r260450183\n \n \n\n ##########\n File path: go/arrow/csv/writer_test.go\n ##########\n @@ -0,0 +1,59 @@\n+package csv_test\n+\n+import (\n+\t\"bytes\"\n+\t\"strings\"\n+\t\"testing\"\n+\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/array\"\n+\t\"github.com/apache/arrow/go/arrow/csv\"\n+\t\"github.com/apache/arrow/go/arrow/memory\"\n+)\n+\n+func TestCSVWriter(t *testing.T) {\n+\tf := bytes.NewBufferString(``)\n+\n+\tpool := memory.NewGoAllocator()\n+\n+\tschema := arrow.NewSchema(\n+\t\t[]arrow.Field{\n+\t\t\t{Name: \"i64\", Type: arrow.PrimitiveTypes.Int64},\n+\t\t\t{Name: \"f64\", Type: arrow.PrimitiveTypes.Float64},\n+\t\t\t{Name: \"str\", Type: arrow.BinaryTypes.String},\n+\t\t},\n+\t\tnil,\n+\t)\n+\n+\tb := array.NewRecordBuilder(pool, schema)\n+\tdefer b.Release()\n+\n+\tb.Field(0).(*array.Int64Builder).AppendValues([]int64{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, nil)\n+\tb.Field(1).(*array.Float64Builder).AppendValues([]float64{0, 1, 2, 3, 4, 5, 6, 7, 8, 9}, nil)\n+\tb.Field(2).(*array.StringBuilder).AppendValues([]string{\"str-0\", \"str-1\", \"str-2\", \"str-3\", \"str-4\", \"str-5\", \"str-6\", \"str-7\", \"str-8\", \"str-9\"}, nil)\n+\n+\trec := b.NewRecord()\n+\tdefer rec.Release()\n+\n+\tw := csv.NewWriter(f, schema, csv.WithFieldSeparator(';'))\n+\terr := w.Write(rec)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\n+\twant := `0;0;str-0\n+1;1;str-1\n+2;2;str-2\n+3;3;str-3\n+4;4;str-4\n+5;5;str-5\n+6;6;str-6\n+7;7;str-7\n+8;8;str-8\n+9;9;str-9\n+`\n+\n+\tif got, want := f.String(), want; strings.Compare(got, want) != 0 {\n+\t\tt.Fatalf(\"invalid output:\\ngot=%s\\nwant=%s\\n\", got, want)\n+\t}\n+}\n \n Review comment:\n   please add a `\\n`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-26T19:52:15.915+0000",
                    "updated": "2019-02-26T19:52:15.915+0000",
                    "started": "2019-02-26T19:52:15.914+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "204726",
                    "issueId": "13202987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202987/worklog/204727",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3755: ARROW-3951 [Go] implement a CSV writer [WIP]\nURL: https://github.com/apache/arrow/pull/3755#discussion_r260454542\n \n \n\n ##########\n File path: go/arrow/csv/writer.go\n ##########\n @@ -0,0 +1,147 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// Package csv reads CSV files and presents the extracted data as records.\n+package csv\n+\n+import (\n+\t\"encoding/csv\"\n+\t\"fmt\"\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/array\"\n+\t\"io\"\n+)\n+\n+// WriterOption configures a CSV writer.\n+type WriterOption func(*Writer)\n+\n+// WithComma specifies the fields separation character used while writing CSV files.\n \n Review comment:\n   `s/WithComma/WithFieldSeparator/`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-26T19:52:15.932+0000",
                    "updated": "2019-02-26T19:52:15.932+0000",
                    "started": "2019-02-26T19:52:15.932+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "204727",
                    "issueId": "13202987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202987/worklog/204728",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3755: ARROW-3951 [Go] implement a CSV writer [WIP]\nURL: https://github.com/apache/arrow/pull/3755#discussion_r260449305\n \n \n\n ##########\n File path: go/arrow/csv/writer_test.go\n ##########\n @@ -0,0 +1,59 @@\n+package csv_test\n+\n+import (\n+\t\"bytes\"\n+\t\"strings\"\n+\t\"testing\"\n+\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/array\"\n+\t\"github.com/apache/arrow/go/arrow/csv\"\n+\t\"github.com/apache/arrow/go/arrow/memory\"\n+)\n+\n+func TestCSVWriter(t *testing.T) {\n+\tf := bytes.NewBufferString(``)\n \n Review comment:\n   `s/bytes.NewBufferString(``)/new(bytes.Buffer)/`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-26T19:52:15.938+0000",
                    "updated": "2019-02-26T19:52:15.938+0000",
                    "started": "2019-02-26T19:52:15.938+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "204728",
                    "issueId": "13202987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202987/worklog/204729",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3755: ARROW-3951 [Go] implement a CSV writer [WIP]\nURL: https://github.com/apache/arrow/pull/3755#discussion_r260455889\n \n \n\n ##########\n File path: go/arrow/csv/writer.go\n ##########\n @@ -0,0 +1,147 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// Package csv reads CSV files and presents the extracted data as records.\n+package csv\n+\n+import (\n+\t\"encoding/csv\"\n+\t\"fmt\"\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/array\"\n+\t\"io\"\n+)\n+\n+// WriterOption configures a CSV writer.\n+type WriterOption func(*Writer)\n+\n+// WithComma specifies the fields separation character used while writing CSV files.\n+func WithFieldSeparator(c rune) WriterOption {\n+\treturn func(w *Writer) {\n+\t\tw.w.Comma = c\n+\t}\n+}\n+\n+// UseCRLF specifies the line terminator used while writing CSV files.\n+func WithLineTerminator(b bool) WriterOption {\n+\treturn func(w *Writer) {\n+\t\tw.w.UseCRLF = b\n+\t}\n+}\n+\n+// Reader wraps encoding/csv.Reader and creates array.Records from a schema.\n \n Review comment:\n   `s/Reader/Writer/g`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-26T19:52:15.949+0000",
                    "updated": "2019-02-26T19:52:15.949+0000",
                    "started": "2019-02-26T19:52:15.949+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "204729",
                    "issueId": "13202987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202987/worklog/204730",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3755: ARROW-3951 [Go] implement a CSV writer [WIP]\nURL: https://github.com/apache/arrow/pull/3755#discussion_r260445757\n \n \n\n ##########\n File path: go/arrow/csv/writer.go\n ##########\n @@ -0,0 +1,147 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// Package csv reads CSV files and presents the extracted data as records.\n+package csv\n+\n+import (\n+\t\"encoding/csv\"\n+\t\"fmt\"\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/array\"\n+\t\"io\"\n+)\n+\n+// WriterOption configures a CSV writer.\n+type WriterOption func(*Writer)\n+\n+// WithComma specifies the fields separation character used while writing CSV files.\n+func WithFieldSeparator(c rune) WriterOption {\n+\treturn func(w *Writer) {\n+\t\tw.w.Comma = c\n+\t}\n+}\n+\n+// UseCRLF specifies the line terminator used while writing CSV files.\n+func WithLineTerminator(b bool) WriterOption {\n+\treturn func(w *Writer) {\n+\t\tw.w.UseCRLF = b\n+\t}\n+}\n+\n+// Reader wraps encoding/csv.Reader and creates array.Records from a schema.\n+type Writer struct {\n+\tw      *csv.Writer\n+\tschema *arrow.Schema\n+}\n+\n+// NewWriter returns a writer that write array.Records to the CSV file\n+// with the given schema.\n+//\n+// NewWriter panics if the given schema contains fields that have types that are not\n+// primitive types.\n+func NewWriter(r io.Writer, schema *arrow.Schema, opts ...WriterOption) *Writer {\n+\tvalidate(schema)\n+\n+\trr := &Writer{w: csv.NewWriter(r), schema: schema}\n+\tfor _, opt := range opts {\n+\t\topt(rr)\n+\t}\n+\n+\treturn rr\n+}\n+\n+func (w *Writer) Schema() *arrow.Schema { return w.schema }\n+\n+// Write writes a single Record as one row to the CSV file\n+func (w *Writer) Write(record array.Record) error {\n+\tif !record.Schema().Equal(w.schema) {\n+\t\treturn ErrMismatchFields\n+\t}\n+\n \n Review comment:\n   please remove one of the two empty lines.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-26T19:52:15.958+0000",
                    "updated": "2019-02-26T19:52:15.958+0000",
                    "started": "2019-02-26T19:52:15.957+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "204730",
                    "issueId": "13202987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202987/worklog/204731",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3755: ARROW-3951 [Go] implement a CSV writer [WIP]\nURL: https://github.com/apache/arrow/pull/3755#discussion_r260457842\n \n \n\n ##########\n File path: go/arrow/csv/writer.go\n ##########\n @@ -0,0 +1,147 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// Package csv reads CSV files and presents the extracted data as records.\n+package csv\n+\n+import (\n+\t\"encoding/csv\"\n+\t\"fmt\"\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/array\"\n+\t\"io\"\n+)\n+\n+// WriterOption configures a CSV writer.\n+type WriterOption func(*Writer)\n+\n+// WithComma specifies the fields separation character used while writing CSV files.\n+func WithFieldSeparator(c rune) WriterOption {\n+\treturn func(w *Writer) {\n+\t\tw.w.Comma = c\n+\t}\n+}\n+\n+// UseCRLF specifies the line terminator used while writing CSV files.\n+func WithLineTerminator(b bool) WriterOption {\n+\treturn func(w *Writer) {\n+\t\tw.w.UseCRLF = b\n+\t}\n+}\n+\n+// Reader wraps encoding/csv.Reader and creates array.Records from a schema.\n+type Writer struct {\n+\tw      *csv.Writer\n+\tschema *arrow.Schema\n+}\n+\n+// NewWriter returns a writer that write array.Records to the CSV file\n+// with the given schema.\n+//\n+// NewWriter panics if the given schema contains fields that have types that are not\n+// primitive types.\n+func NewWriter(r io.Writer, schema *arrow.Schema, opts ...WriterOption) *Writer {\n+\tvalidate(schema)\n+\n+\trr := &Writer{w: csv.NewWriter(r), schema: schema}\n+\tfor _, opt := range opts {\n+\t\topt(rr)\n+\t}\n+\n+\treturn rr\n+}\n+\n+func (w *Writer) Schema() *arrow.Schema { return w.schema }\n+\n+// Write writes a single Record as one row to the CSV file\n+func (w *Writer) Write(record array.Record) error {\n+\tif !record.Schema().Equal(w.schema) {\n+\t\treturn ErrMismatchFields\n+\t}\n+\n+\n+\trecs := make([][]string, record.NumRows())\n+\tfor i := range recs {\n+\t\trecs[i] = make([]string, record.NumCols())\n+\t}\n+\n+\tfor j, col := range record.Columns() {\n+\t\tswitch w.schema.Field(j).Type.(type) {\n+\t\tcase *arrow.BooleanType:\n+\t\t\tarr := col.(*array.Boolean)\n+\t\t\tfor i := 0; i < arr.Len(); i++ {\n+\t\t\t\trecs[i][j] = fmt.Sprintf(\"%v\", arr.Value(i))\n+\t\t\t}\n+\t\tcase *arrow.Int8Type:\n+\t\t\tarr := col.(*array.Int8)\n+\t\t\tfor i := 0; i < arr.Len(); i++ {\n+\t\t\t\trecs[i][j] = fmt.Sprintf(\"%v\", arr.Value(i))\n \n Review comment:\n   it might be interesting performance-wise to directly use `strconv.Format{Bool,Float,Int,Uint}` instead of `fmt.Sprintf`.\r\n   \r\n   (this can be done in a later PR, but please write a FIXME or send a JIRA issue.)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-26T19:52:15.959+0000",
                    "updated": "2019-02-26T19:52:15.959+0000",
                    "started": "2019-02-26T19:52:15.959+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "204731",
                    "issueId": "13202987"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202987/worklog/204732",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3755: ARROW-3951 [Go] implement a CSV writer [WIP]\nURL: https://github.com/apache/arrow/pull/3755#discussion_r260451774\n \n \n\n ##########\n File path: go/arrow/csv/writer.go\n ##########\n @@ -0,0 +1,147 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// Package csv reads CSV files and presents the extracted data as records.\n+package csv\n+\n+import (\n+\t\"encoding/csv\"\n+\t\"fmt\"\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/array\"\n+\t\"io\"\n+)\n+\n+// WriterOption configures a CSV writer.\n+type WriterOption func(*Writer)\n+\n+// WithComma specifies the fields separation character used while writing CSV files.\n+func WithFieldSeparator(c rune) WriterOption {\n+\treturn func(w *Writer) {\n+\t\tw.w.Comma = c\n+\t}\n+}\n+\n+// UseCRLF specifies the line terminator used while writing CSV files.\n+func WithLineTerminator(b bool) WriterOption {\n+\treturn func(w *Writer) {\n+\t\tw.w.UseCRLF = b\n+\t}\n+}\n+\n+// Reader wraps encoding/csv.Reader and creates array.Records from a schema.\n+type Writer struct {\n+\tw      *csv.Writer\n+\tschema *arrow.Schema\n+}\n+\n+// NewWriter returns a writer that write array.Records to the CSV file\n+// with the given schema.\n+//\n+// NewWriter panics if the given schema contains fields that have types that are not\n+// primitive types.\n+func NewWriter(r io.Writer, schema *arrow.Schema, opts ...WriterOption) *Writer {\n+\tvalidate(schema)\n+\n+\trr := &Writer{w: csv.NewWriter(r), schema: schema}\n+\tfor _, opt := range opts {\n+\t\topt(rr)\n+\t}\n+\n+\treturn rr\n+}\n+\n+func (w *Writer) Schema() *arrow.Schema { return w.schema }\n+\n+// Write writes a single Record as one row to the CSV file\n+func (w *Writer) Write(record array.Record) error {\n+\tif !record.Schema().Equal(w.schema) {\n+\t\treturn ErrMismatchFields\n+\t}\n+\n+\n+\trecs := make([][]string, record.NumRows())\n \n Review comment:\n   perhaps not for this PR, but, depending on the number of rows and cols this record contains, this may be a very large allocation, and very big memory chunk.\r\n   it could be more interesting performance wise to write n rows instead of everything in one big chunk.\r\n   \r\n   also, to reduce the memory pressure on the GC, we should probably (re)use this slice-of-slice of strings.\r\n   \r\n   these 2 comments can be turned as FIXMEs (or better: JIRA issues) if you don't want to tackle them in that PR.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-26T19:52:15.970+0000",
                    "updated": "2019-02-26T19:52:15.970+0000",
                    "started": "2019-02-26T19:52:15.969+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "204732",
                    "issueId": "13202987"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 31200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@75c864a0[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@c6bf220[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@a8f8541[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@59269cc2[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6eb91f1f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7229eda4[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@47adb2d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@695797ec[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4f302c3e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@72c9bcb1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@20b8a276[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7505a97a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 31200,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Mar 11 13:34:42 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-03-11T13:34:42.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3951/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-12-07T08:34:08.000+0000",
        "updated": "2019-03-11T13:34:42.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "8h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 31200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Go] implement a CSV writer",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202987/comment/16776456",
                    "id": "16776456",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=anson627",
                        "name": "anson627",
                        "key": "anson627",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Anson Qian",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I will try to work on this",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=anson627",
                        "name": "anson627",
                        "key": "anson627",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Anson Qian",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-02-25T00:23:36.247+0000",
                    "updated": "2019-02-25T00:23:36.247+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202987/comment/16789568",
                    "id": "16789568",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=sbinet",
                        "name": "sbinet",
                        "key": "sbinet",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=sbinet&avatarId=36072",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sbinet&avatarId=36072",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sbinet&avatarId=36072",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sbinet&avatarId=36072"
                        },
                        "displayName": "Sebastien Binet",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 3755\n[https://github.com/apache/arrow/pull/3755]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=sbinet",
                        "name": "sbinet",
                        "key": "sbinet",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=sbinet&avatarId=36072",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=sbinet&avatarId=36072",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=sbinet&avatarId=36072",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=sbinet&avatarId=36072"
                        },
                        "displayName": "Sebastien Binet",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-03-11T13:34:42.368+0000",
                    "updated": "2019-03-11T13:34:42.368+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|s019uo:",
        "customfield_12314139": null
    }
}