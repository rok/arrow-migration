{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13198360",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198360",
    "key": "ARROW-3789",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3789/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 25,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198360/worklog/361477",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6067: ARROW-3789: [Python] Use common conversion path for Arrow to pandas.Series/DataFrame. Zero copy optimizations for DataFrame, add split_blocks and self_destruct options\nURL: https://github.com/apache/arrow/pull/6067\n \n \n   The primary goal of this patch is to provide a way for some users to avoid memory doubling with converting from Arrow to pandas.\r\n   \r\n   This took me entirely too much time to get right, but partly I was attempting to disentangle some of the technical debt and overdue refactoring in arrow_to_pandas.cc. \r\n   \r\n   Summary of what's here:\r\n   \r\n   - Refactor ChunkedArray->Series and Table->DataFrame conversion paths to use the exact same code rather than two implementations of the same thing with slightly different behavior. The `ArrowDeserializer` helper class is now gone\r\n   - Do zero-copy construction of internal DataFrame blocks for the case of a contiguous non-nullable array and a block with only 1 column represented\r\n   - Add `split_blocks` option to `to_pandas` which constructs one block per DataFrame column, resulting in more zero-copy opportunities. Note that pandas's internal \"consolidation\" can still cause memory doubling (see discussion about this in https://github.com/pandas-dev/pandas/issues/10556)\r\n   - Add `self_destruct` option to `to_pandas` which releases the Table's internal buffers as soon as they are converted to the required pandas structure. This allows memory to be reclaimed by the OS as conversion is taking place rather than having a forced memory-doubling and then post-facto reclamation (which has been causing OOM for some users)\r\n   \r\n   The most conservative invocation of `to_pandas` now would be `table.to_pandas(use_thread=False, split_blocks=True, self_destruct=True)`\r\n   \r\n   Note that the self-destruct option makes the `Table` object unsafe for further use. This is a bit dissatisfying but I wasn't sure how else to provide this capability. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-19T18:27:39.483+0000",
                    "updated": "2019-12-19T18:27:39.483+0000",
                    "started": "2019-12-19T18:27:39.482+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "361477",
                    "issueId": "13198360"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198360/worklog/366918",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #6067: ARROW-3789: [Python] Use common conversion path for Arrow to pandas.Series/DataFrame. Zero copy optimizations for DataFrame, add split_blocks and self_destruct options\nURL: https://github.com/apache/arrow/pull/6067#issuecomment-571288119\n \n \n   I will rebase this and add docs. It's a little bit frustrating to have rebase conflicts due to a patch that only fixes typos =/ \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-06T19:53:23.106+0000",
                    "updated": "2020-01-06T19:53:23.106+0000",
                    "started": "2020-01-06T19:53:23.106+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "366918",
                    "issueId": "13198360"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198360/worklog/368457",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #6067: ARROW-3789: [Python] Use common conversion path for Arrow to pandas.Series/DataFrame. Zero copy optimizations for DataFrame, add split_blocks and self_destruct options\nURL: https://github.com/apache/arrow/pull/6067#issuecomment-572294472\n \n \n   I added docs, so aside from CI issues this is ready to go. @jorisvandenbossche can you help review this at least for the high level parts? \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-08T22:45:46.333+0000",
                    "updated": "2020-01-08T22:45:46.333+0000",
                    "started": "2020-01-08T22:45:46.333+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "368457",
                    "issueId": "13198360"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198360/worklog/368472",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #6067: ARROW-3789: [Python] Use common conversion path for Arrow to pandas.Series/DataFrame. Zero copy optimizations for DataFrame, add split_blocks and self_destruct options\nURL: https://github.com/apache/arrow/pull/6067#issuecomment-572300923\n \n \n   I'll try to take a look at it too during the week, perhaps I'll also add a couple of hypothesis tests for pandas roundtrips.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-08T23:06:00.185+0000",
                    "updated": "2020-01-08T23:06:00.185+0000",
                    "started": "2020-01-08T23:06:00.184+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "368472",
                    "issueId": "13198360"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198360/worklog/369174",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6067: ARROW-3789: [Python] Use common conversion path for Arrow to pandas.Series/DataFrame. Zero copy optimizations for DataFrame, add split_blocks and self_destruct options\nURL: https://github.com/apache/arrow/pull/6067#discussion_r364843506\n \n \n\n ##########\n File path: cpp/src/arrow/python/arrow_to_pandas.h\n ##########\n @@ -53,26 +52,42 @@ struct PandasOptions {\n   bool date_as_object = false;\n   bool use_threads = false;\n \n+  /// Coerce all date and timestamp to datetime64[ns]\n+  bool coerce_temporal_nanoseconds = false;\n+\n   /// \\brief If true, do not create duplicate PyObject versions of equal\n   /// objects. This only applies to immutable objects like strings or datetime\n   /// objects\n   bool deduplicate_objects = false;\n+\n+  /// \\brief If true, create one block per column rather than consolidated\n+  /// blocks (1 per data type). Do zero-copy wrapping when there are no\n+  /// nulls. When using this, you may want to set pandas's consolidation policy\n+  /// to leave the blocks split\n \n Review comment:\n   Note that this doesn't exist (yet)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-09T17:10:24.612+0000",
                    "updated": "2020-01-09T17:10:24.612+0000",
                    "started": "2020-01-09T17:10:24.612+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "369174",
                    "issueId": "13198360"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198360/worklog/369175",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6067: ARROW-3789: [Python] Use common conversion path for Arrow to pandas.Series/DataFrame. Zero copy optimizations for DataFrame, add split_blocks and self_destruct options\nURL: https://github.com/apache/arrow/pull/6067#discussion_r364847275\n \n \n\n ##########\n File path: docs/source/python/pandas.rst\n ##########\n @@ -221,3 +221,74 @@ Time types\n ~~~~~~~~~~\n \n TODO\n+\n+Memory Usage and Zero Copy\n+--------------------------\n+\n+When converting from Arrow data structures to pandas objects using various\n+``to_pandas`` methods, one must occasionally be mindful of issues related to\n+performance and memory usage.\n+\n+Since pandas's internal data representation is generally different from the\n+Arrow columnar format, zero copy conversions (where no memory allocation or\n+computation is required) are only possible in certain limited cases.\n+\n+In the worst case scenario, calling ``to_pandas`` will result in a two versions\n+of the data in memory, one for Arrow and one for pandas, yielding approximately\n+twice the memory footprint. We have implement some mitigations for this case,\n+particularly when creating large ``DataFrame`` objects, that we describe below.\n+\n+Zero Copy Series Conversions\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Zero copy conversions from ``Array`` or ``ChunkedArray`` to NumPy arrays or\n+pandas Series are possible in certain narrow cases:\n+\n+* The Arrow data is stored in an integer (signed or unsigned ``int8`` through\n+  ``int64``) or floating point type (``float16`` through ``float64``). This\n+  includes many numeric types as well as timestamps.\n+* The Arrow data has no null values (since these are represented using bitmaps\n+  which are not supported by pandas).\n+* For ``ChunkedArray``, the data consists of a single chunk,\n+  i.e. ``arr.num_chunks == 1``. Multiple chunks will always require a copy\n+  because of pandas's contiguousness requirement.\n+\n+In these scenarios, ``to_pandas`` will be zero copy. In all other scenarios, a\n \n Review comment:\n   ```suggestion\r\n   In these scenarios, ``to_pandas`` or ``to_numpy`` will be zero copy. In all other scenarios, a\r\n   ```\r\n   \r\n   ?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-09T17:10:24.689+0000",
                    "updated": "2020-01-09T17:10:24.689+0000",
                    "started": "2020-01-09T17:10:24.688+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "369175",
                    "issueId": "13198360"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198360/worklog/369176",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6067: ARROW-3789: [Python] Use common conversion path for Arrow to pandas.Series/DataFrame. Zero copy optimizations for DataFrame, add split_blocks and self_destruct options\nURL: https://github.com/apache/arrow/pull/6067#discussion_r364846225\n \n \n\n ##########\n File path: docs/source/python/pandas.rst\n ##########\n @@ -221,3 +221,74 @@ Time types\n ~~~~~~~~~~\n \n TODO\n+\n+Memory Usage and Zero Copy\n+--------------------------\n+\n+When converting from Arrow data structures to pandas objects using various\n+``to_pandas`` methods, one must occasionally be mindful of issues related to\n+performance and memory usage.\n+\n+Since pandas's internal data representation is generally different from the\n+Arrow columnar format, zero copy conversions (where no memory allocation or\n+computation is required) are only possible in certain limited cases.\n+\n+In the worst case scenario, calling ``to_pandas`` will result in a two versions\n \n Review comment:\n   ```suggestion\r\n   In the worst case scenario, calling ``to_pandas`` will result in two versions\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-09T17:10:24.768+0000",
                    "updated": "2020-01-09T17:10:24.768+0000",
                    "started": "2020-01-09T17:10:24.768+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "369176",
                    "issueId": "13198360"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198360/worklog/369177",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6067: ARROW-3789: [Python] Use common conversion path for Arrow to pandas.Series/DataFrame. Zero copy optimizations for DataFrame, add split_blocks and self_destruct options\nURL: https://github.com/apache/arrow/pull/6067#discussion_r364857526\n \n \n\n ##########\n File path: python/pyarrow/array.pxi\n ##########\n @@ -1957,6 +1977,18 @@ cdef class ExtensionArray(Array):\n         result.validate()\n         return result\n \n+    def _to_pandas(self, options, **kwargs):\n+        result = Array._to_pandas(self, options, **kwargs)\n+        # TODO(wesm): is passing through these parameters to the storage array\n+        # correct?\n+        return result.to_pandas(options, **kwargs)\n \n Review comment:\n   Will try to check this later (reminder for myself)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-09T17:10:24.800+0000",
                    "updated": "2020-01-09T17:10:24.800+0000",
                    "started": "2020-01-09T17:10:24.800+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "369177",
                    "issueId": "13198360"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198360/worklog/369178",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6067: ARROW-3789: [Python] Use common conversion path for Arrow to pandas.Series/DataFrame. Zero copy optimizations for DataFrame, add split_blocks and self_destruct options\nURL: https://github.com/apache/arrow/pull/6067#discussion_r364847574\n \n \n\n ##########\n File path: docs/source/python/pandas.rst\n ##########\n @@ -221,3 +221,74 @@ Time types\n ~~~~~~~~~~\n \n TODO\n+\n+Memory Usage and Zero Copy\n+--------------------------\n+\n+When converting from Arrow data structures to pandas objects using various\n+``to_pandas`` methods, one must occasionally be mindful of issues related to\n+performance and memory usage.\n+\n+Since pandas's internal data representation is generally different from the\n+Arrow columnar format, zero copy conversions (where no memory allocation or\n+computation is required) are only possible in certain limited cases.\n+\n+In the worst case scenario, calling ``to_pandas`` will result in a two versions\n+of the data in memory, one for Arrow and one for pandas, yielding approximately\n+twice the memory footprint. We have implement some mitigations for this case,\n+particularly when creating large ``DataFrame`` objects, that we describe below.\n+\n+Zero Copy Series Conversions\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Zero copy conversions from ``Array`` or ``ChunkedArray`` to NumPy arrays or\n+pandas Series are possible in certain narrow cases:\n+\n+* The Arrow data is stored in an integer (signed or unsigned ``int8`` through\n+  ``int64``) or floating point type (``float16`` through ``float64``). This\n+  includes many numeric types as well as timestamps.\n+* The Arrow data has no null values (since these are represented using bitmaps\n+  which are not supported by pandas).\n+* For ``ChunkedArray``, the data consists of a single chunk,\n+  i.e. ``arr.num_chunks == 1``. Multiple chunks will always require a copy\n+  because of pandas's contiguousness requirement.\n+\n+In these scenarios, ``to_pandas`` will be zero copy. In all other scenarios, a\n+copy will be required.\n+\n+Reducing Memory Use in ``Table.to_pandas``\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+As if this writing, pandas applies a data management strategy called\n \n Review comment:\n   ```suggestion\r\n   As of this writing, pandas applies a data management strategy called\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-09T17:10:24.804+0000",
                    "updated": "2020-01-09T17:10:24.804+0000",
                    "started": "2020-01-09T17:10:24.804+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "369178",
                    "issueId": "13198360"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198360/worklog/369179",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6067: ARROW-3789: [Python] Use common conversion path for Arrow to pandas.Series/DataFrame. Zero copy optimizations for DataFrame, add split_blocks and self_destruct options\nURL: https://github.com/apache/arrow/pull/6067#discussion_r364850250\n \n \n\n ##########\n File path: docs/source/python/pandas.rst\n ##########\n @@ -221,3 +221,74 @@ Time types\n ~~~~~~~~~~\n \n TODO\n+\n+Memory Usage and Zero Copy\n+--------------------------\n+\n+When converting from Arrow data structures to pandas objects using various\n+``to_pandas`` methods, one must occasionally be mindful of issues related to\n+performance and memory usage.\n+\n+Since pandas's internal data representation is generally different from the\n+Arrow columnar format, zero copy conversions (where no memory allocation or\n+computation is required) are only possible in certain limited cases.\n+\n+In the worst case scenario, calling ``to_pandas`` will result in a two versions\n+of the data in memory, one for Arrow and one for pandas, yielding approximately\n+twice the memory footprint. We have implement some mitigations for this case,\n+particularly when creating large ``DataFrame`` objects, that we describe below.\n+\n+Zero Copy Series Conversions\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Zero copy conversions from ``Array`` or ``ChunkedArray`` to NumPy arrays or\n+pandas Series are possible in certain narrow cases:\n+\n+* The Arrow data is stored in an integer (signed or unsigned ``int8`` through\n+  ``int64``) or floating point type (``float16`` through ``float64``). This\n+  includes many numeric types as well as timestamps.\n+* The Arrow data has no null values (since these are represented using bitmaps\n+  which are not supported by pandas).\n+* For ``ChunkedArray``, the data consists of a single chunk,\n+  i.e. ``arr.num_chunks == 1``. Multiple chunks will always require a copy\n+  because of pandas's contiguousness requirement.\n+\n+In these scenarios, ``to_pandas`` will be zero copy. In all other scenarios, a\n+copy will be required.\n+\n+Reducing Memory Use in ``Table.to_pandas``\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+As if this writing, pandas applies a data management strategy called\n+\"consolidation\" to collect like-typed DataFrame columns in two-dimensional\n+NumPy arrays, referred to internally as \"blocks\". We have gone to great effort\n+to construct the precise \"consolidated\" blocks so that pandas will not perform\n+any further allocation or copies after we hand off the data to\n+``pandas.DataFrame``. The obvious downside of this consolidation strategy is\n+that it forces a \"memory doubling\".\n+\n+To try to limit the potential effects of \"memory doubling\" during\n+``Table.to_pandas``, we provide a couple of options:\n+\n+* ``split_blocks=True``, when enabled ``Table.to_pandas`` produces one internal\n+  DataFrame \"block\" for each column, skipping the \"consolidation\" step. Note\n+  that many pandas operations will trigger consolidation anyway, but the peak\n+  memory use may be less than the worst case scenario of a full memory\n+  doubling. As a result of this option, we are able to do zero copy conversions\n+  of columns in the same cases where we can do zero copy with ``Array`` and\n+  ``ChunkedArray``.\n+* ``self_destruct=True``, this destroys the internal Arrow memory buffers in\n+  each column ``Table`` object as they are converted to the pandas-compatible\n+  representation, potentially releasing memory to the operating system as soon\n+  as a column is converted. Note that this renders the calling ``Table`` object\n+  unsafe for further use, and any further methods called will cause your Python\n+  process to crash.\n+\n+Used together, the call\n+\n+.. code-block:: python\n+\n+   df = table.to_pandas(split_blocks=True, self_destruct=True)\n \n Review comment:\n   Maybe include a `del table` on a second line to show as good practice to make it clear that the `table` should not be used any more?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-09T17:10:24.834+0000",
                    "updated": "2020-01-09T17:10:24.834+0000",
                    "started": "2020-01-09T17:10:24.833+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "369179",
                    "issueId": "13198360"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198360/worklog/369180",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6067: ARROW-3789: [Python] Use common conversion path for Arrow to pandas.Series/DataFrame. Zero copy optimizations for DataFrame, add split_blocks and self_destruct options\nURL: https://github.com/apache/arrow/pull/6067#discussion_r364850779\n \n \n\n ##########\n File path: python/pyarrow/array.pxi\n ##########\n @@ -519,6 +521,15 @@ cdef class _PandasConvertible:\n         ignore_metadata : boolean, default False\n             If True, do not use the 'pandas' metadata to reconstruct the\n             DataFrame index, if present\n+        split_blocks : boolean, default False\n+            If True, generate one internal \"block\" for each column when\n+            creating a pandas.DataFrame from a RecordBatch or Table. While this\n+            can temporarily reduce memory note that various pandas operations\n+            can trigger \"consolidation\" which may balloon memory use\n+        self_destruct : boolean, default False\n+            EXPERIMENTAL: If True, attempt to deallocate memory while\n \n Review comment:\n   ```suggestion\r\n               EXPERIMENTAL: If True, attempt to deallocate the original Arrow memory while\r\n   ```\r\n   \r\n   ?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-09T17:10:25.074+0000",
                    "updated": "2020-01-09T17:10:25.074+0000",
                    "started": "2020-01-09T17:10:25.074+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "369180",
                    "issueId": "13198360"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198360/worklog/369182",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6067: ARROW-3789: [Python] Use common conversion path for Arrow to pandas.Series/DataFrame. Zero copy optimizations for DataFrame, add split_blocks and self_destruct options\nURL: https://github.com/apache/arrow/pull/6067#discussion_r364853654\n \n \n\n ##########\n File path: python/pyarrow/array.pxi\n ##########\n @@ -974,46 +989,12 @@ cdef class Array(_PandasConvertible):\n         return wrap_datum(out)\n \n     def _to_pandas(self, options, **kwargs):\n-        cdef:\n-            PyObject* out\n-            PandasOptions c_options = _convert_pandas_options(options)\n-            Array array\n-\n-        if self.type.id == _Type_TIMESTAMP and self.type.unit != 'ns':\n-            # pandas only stores ns data - casting here is faster\n-            array = self.cast(timestamp('ns'))\n-        else:\n-            array = self\n-\n-        with nogil:\n-            check_status(ConvertArrayToPandas(c_options, array.sp_array,\n-                                              array, &out))\n-        result = pandas_api.series(wrap_array_output(out), name=self._name)\n-\n-        if isinstance(self.type, TimestampType) and self.type.tz is not None:\n-            from pyarrow.pandas_compat import make_tz_aware\n-\n-            result = make_tz_aware(result, self.type.tz)\n-\n-        return result\n+        return _array_like_to_pandas(self, options)\n \n     def __array__(self, dtype=None):\n-        cdef:\n-            PyObject* out\n-            PandasOptions c_options\n-            object values\n-\n-        with nogil:\n-            check_status(ConvertArrayToPandas(c_options, self.sp_array,\n-                                              self, &out))\n-\n-        # wrap_array_output uses pandas to convert to Categorical, here\n-        # always convert to numpy array\n-        values = PyObject_to_object(out)\n-\n+        values = self.to_numpy(zero_copy_only=False)\n         if isinstance(values, dict):\n \n Review comment:\n   That seems a bug in the current `to_numpy` that it returns a dictionary for dictionary type data. \r\n   \r\n   Maybe can move this if block to `to_numpy`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-09T17:10:25.090+0000",
                    "updated": "2020-01-09T17:10:25.090+0000",
                    "started": "2020-01-09T17:10:25.090+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "369182",
                    "issueId": "13198360"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198360/worklog/369181",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6067: ARROW-3789: [Python] Use common conversion path for Arrow to pandas.Series/DataFrame. Zero copy optimizations for DataFrame, add split_blocks and self_destruct options\nURL: https://github.com/apache/arrow/pull/6067#discussion_r364859146\n \n \n\n ##########\n File path: python/pyarrow/table.pxi\n ##########\n @@ -183,38 +183,21 @@ cdef class ChunkedArray(_PandasConvertible):\n         return result\n \n     def _to_pandas(self, options, **kwargs):\n-        cdef:\n-            PyObject* out\n-            PandasOptions c_options = _convert_pandas_options(options)\n-            ChunkedArray array\n-\n-        if self.type.id == _Type_TIMESTAMP and self.type.unit != 'ns':\n-            # pandas only stores ns data - casting here is faster\n-            array = self.cast(timestamp('ns'))\n-        else:\n-            array = self\n-\n-        with nogil:\n-            check_status(libarrow.ConvertChunkedArrayToPandas(\n-                c_options,\n-                array.sp_chunked_array,\n-                array, &out))\n-\n-        result = pandas_api.series(wrap_array_output(out), name=self._name)\n-\n-        if isinstance(self.type, TimestampType) and self.type.tz is not None:\n-            from pyarrow.pandas_compat import make_tz_aware\n-\n-            result = make_tz_aware(result, self.type.tz)\n-\n-        return result\n+        return _array_like_to_pandas(self, options)\n \n     def __array__(self, dtype=None):\n         cdef:\n             PyObject* out\n             PandasOptions c_options\n             object values\n \n+        if self.type.id == _Type_EXTENSION:\n+            return (\n+                chunked_array(\n+                    [self.chunk(i).storage for i in range(self.num_chunks)]\n+                ).__array__(dtype)\n \n Review comment:\n   Was this already tested?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-09T17:10:25.090+0000",
                    "updated": "2020-01-09T17:10:25.090+0000",
                    "started": "2020-01-09T17:10:25.090+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "369181",
                    "issueId": "13198360"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198360/worklog/371958",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6067: ARROW-3789: [Python] Use common conversion path for Arrow to pandas.Series/DataFrame. Zero copy optimizations for DataFrame, add split_blocks and self_destruct options\nURL: https://github.com/apache/arrow/pull/6067#discussion_r366620928\n \n \n\n ##########\n File path: cpp/src/arrow/python/arrow_to_pandas.h\n ##########\n @@ -53,26 +52,42 @@ struct PandasOptions {\n   bool date_as_object = false;\n   bool use_threads = false;\n \n+  /// Coerce all date and timestamp to datetime64[ns]\n+  bool coerce_temporal_nanoseconds = false;\n+\n   /// \\brief If true, do not create duplicate PyObject versions of equal\n   /// objects. This only applies to immutable objects like strings or datetime\n   /// objects\n   bool deduplicate_objects = false;\n+\n+  /// \\brief If true, create one block per column rather than consolidated\n+  /// blocks (1 per data type). Do zero-copy wrapping when there are no\n+  /// nulls. When using this, you may want to set pandas's consolidation policy\n+  /// to leave the blocks split\n \n Review comment:\n   fixed\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-14T23:09:15.804+0000",
                    "updated": "2020-01-14T23:09:15.804+0000",
                    "started": "2020-01-14T23:09:15.804+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "371958",
                    "issueId": "13198360"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198360/worklog/371959",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6067: ARROW-3789: [Python] Use common conversion path for Arrow to pandas.Series/DataFrame. Zero copy optimizations for DataFrame, add split_blocks and self_destruct options\nURL: https://github.com/apache/arrow/pull/6067#discussion_r366621084\n \n \n\n ##########\n File path: docs/source/python/pandas.rst\n ##########\n @@ -221,3 +221,74 @@ Time types\n ~~~~~~~~~~\n \n TODO\n+\n+Memory Usage and Zero Copy\n+--------------------------\n+\n+When converting from Arrow data structures to pandas objects using various\n+``to_pandas`` methods, one must occasionally be mindful of issues related to\n+performance and memory usage.\n+\n+Since pandas's internal data representation is generally different from the\n+Arrow columnar format, zero copy conversions (where no memory allocation or\n+computation is required) are only possible in certain limited cases.\n+\n+In the worst case scenario, calling ``to_pandas`` will result in a two versions\n \n Review comment:\n   fixed\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-14T23:09:41.106+0000",
                    "updated": "2020-01-14T23:09:41.106+0000",
                    "started": "2020-01-14T23:09:41.106+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "371959",
                    "issueId": "13198360"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198360/worklog/371960",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6067: ARROW-3789: [Python] Use common conversion path for Arrow to pandas.Series/DataFrame. Zero copy optimizations for DataFrame, add split_blocks and self_destruct options\nURL: https://github.com/apache/arrow/pull/6067#discussion_r366621192\n \n \n\n ##########\n File path: docs/source/python/pandas.rst\n ##########\n @@ -221,3 +221,74 @@ Time types\n ~~~~~~~~~~\n \n TODO\n+\n+Memory Usage and Zero Copy\n+--------------------------\n+\n+When converting from Arrow data structures to pandas objects using various\n+``to_pandas`` methods, one must occasionally be mindful of issues related to\n+performance and memory usage.\n+\n+Since pandas's internal data representation is generally different from the\n+Arrow columnar format, zero copy conversions (where no memory allocation or\n+computation is required) are only possible in certain limited cases.\n+\n+In the worst case scenario, calling ``to_pandas`` will result in a two versions\n+of the data in memory, one for Arrow and one for pandas, yielding approximately\n+twice the memory footprint. We have implement some mitigations for this case,\n+particularly when creating large ``DataFrame`` objects, that we describe below.\n+\n+Zero Copy Series Conversions\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Zero copy conversions from ``Array`` or ``ChunkedArray`` to NumPy arrays or\n+pandas Series are possible in certain narrow cases:\n+\n+* The Arrow data is stored in an integer (signed or unsigned ``int8`` through\n+  ``int64``) or floating point type (``float16`` through ``float64``). This\n+  includes many numeric types as well as timestamps.\n+* The Arrow data has no null values (since these are represented using bitmaps\n+  which are not supported by pandas).\n+* For ``ChunkedArray``, the data consists of a single chunk,\n+  i.e. ``arr.num_chunks == 1``. Multiple chunks will always require a copy\n+  because of pandas's contiguousness requirement.\n+\n+In these scenarios, ``to_pandas`` will be zero copy. In all other scenarios, a\n \n Review comment:\n   fixed\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-14T23:10:00.289+0000",
                    "updated": "2020-01-14T23:10:00.289+0000",
                    "started": "2020-01-14T23:10:00.289+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "371960",
                    "issueId": "13198360"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198360/worklog/371961",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6067: ARROW-3789: [Python] Use common conversion path for Arrow to pandas.Series/DataFrame. Zero copy optimizations for DataFrame, add split_blocks and self_destruct options\nURL: https://github.com/apache/arrow/pull/6067#discussion_r366621244\n \n \n\n ##########\n File path: docs/source/python/pandas.rst\n ##########\n @@ -221,3 +221,74 @@ Time types\n ~~~~~~~~~~\n \n TODO\n+\n+Memory Usage and Zero Copy\n+--------------------------\n+\n+When converting from Arrow data structures to pandas objects using various\n+``to_pandas`` methods, one must occasionally be mindful of issues related to\n+performance and memory usage.\n+\n+Since pandas's internal data representation is generally different from the\n+Arrow columnar format, zero copy conversions (where no memory allocation or\n+computation is required) are only possible in certain limited cases.\n+\n+In the worst case scenario, calling ``to_pandas`` will result in a two versions\n+of the data in memory, one for Arrow and one for pandas, yielding approximately\n+twice the memory footprint. We have implement some mitigations for this case,\n+particularly when creating large ``DataFrame`` objects, that we describe below.\n+\n+Zero Copy Series Conversions\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Zero copy conversions from ``Array`` or ``ChunkedArray`` to NumPy arrays or\n+pandas Series are possible in certain narrow cases:\n+\n+* The Arrow data is stored in an integer (signed or unsigned ``int8`` through\n+  ``int64``) or floating point type (``float16`` through ``float64``). This\n+  includes many numeric types as well as timestamps.\n+* The Arrow data has no null values (since these are represented using bitmaps\n+  which are not supported by pandas).\n+* For ``ChunkedArray``, the data consists of a single chunk,\n+  i.e. ``arr.num_chunks == 1``. Multiple chunks will always require a copy\n+  because of pandas's contiguousness requirement.\n+\n+In these scenarios, ``to_pandas`` will be zero copy. In all other scenarios, a\n+copy will be required.\n+\n+Reducing Memory Use in ``Table.to_pandas``\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+As if this writing, pandas applies a data management strategy called\n \n Review comment:\n   fixed\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-14T23:10:10.588+0000",
                    "updated": "2020-01-14T23:10:10.588+0000",
                    "started": "2020-01-14T23:10:10.588+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "371961",
                    "issueId": "13198360"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198360/worklog/371962",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6067: ARROW-3789: [Python] Use common conversion path for Arrow to pandas.Series/DataFrame. Zero copy optimizations for DataFrame, add split_blocks and self_destruct options\nURL: https://github.com/apache/arrow/pull/6067#discussion_r366621411\n \n \n\n ##########\n File path: docs/source/python/pandas.rst\n ##########\n @@ -221,3 +221,74 @@ Time types\n ~~~~~~~~~~\n \n TODO\n+\n+Memory Usage and Zero Copy\n+--------------------------\n+\n+When converting from Arrow data structures to pandas objects using various\n+``to_pandas`` methods, one must occasionally be mindful of issues related to\n+performance and memory usage.\n+\n+Since pandas's internal data representation is generally different from the\n+Arrow columnar format, zero copy conversions (where no memory allocation or\n+computation is required) are only possible in certain limited cases.\n+\n+In the worst case scenario, calling ``to_pandas`` will result in a two versions\n+of the data in memory, one for Arrow and one for pandas, yielding approximately\n+twice the memory footprint. We have implement some mitigations for this case,\n+particularly when creating large ``DataFrame`` objects, that we describe below.\n+\n+Zero Copy Series Conversions\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Zero copy conversions from ``Array`` or ``ChunkedArray`` to NumPy arrays or\n+pandas Series are possible in certain narrow cases:\n+\n+* The Arrow data is stored in an integer (signed or unsigned ``int8`` through\n+  ``int64``) or floating point type (``float16`` through ``float64``). This\n+  includes many numeric types as well as timestamps.\n+* The Arrow data has no null values (since these are represented using bitmaps\n+  which are not supported by pandas).\n+* For ``ChunkedArray``, the data consists of a single chunk,\n+  i.e. ``arr.num_chunks == 1``. Multiple chunks will always require a copy\n+  because of pandas's contiguousness requirement.\n+\n+In these scenarios, ``to_pandas`` will be zero copy. In all other scenarios, a\n+copy will be required.\n+\n+Reducing Memory Use in ``Table.to_pandas``\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+As if this writing, pandas applies a data management strategy called\n+\"consolidation\" to collect like-typed DataFrame columns in two-dimensional\n+NumPy arrays, referred to internally as \"blocks\". We have gone to great effort\n+to construct the precise \"consolidated\" blocks so that pandas will not perform\n+any further allocation or copies after we hand off the data to\n+``pandas.DataFrame``. The obvious downside of this consolidation strategy is\n+that it forces a \"memory doubling\".\n+\n+To try to limit the potential effects of \"memory doubling\" during\n+``Table.to_pandas``, we provide a couple of options:\n+\n+* ``split_blocks=True``, when enabled ``Table.to_pandas`` produces one internal\n+  DataFrame \"block\" for each column, skipping the \"consolidation\" step. Note\n+  that many pandas operations will trigger consolidation anyway, but the peak\n+  memory use may be less than the worst case scenario of a full memory\n+  doubling. As a result of this option, we are able to do zero copy conversions\n+  of columns in the same cases where we can do zero copy with ``Array`` and\n+  ``ChunkedArray``.\n+* ``self_destruct=True``, this destroys the internal Arrow memory buffers in\n+  each column ``Table`` object as they are converted to the pandas-compatible\n+  representation, potentially releasing memory to the operating system as soon\n+  as a column is converted. Note that this renders the calling ``Table`` object\n+  unsafe for further use, and any further methods called will cause your Python\n+  process to crash.\n+\n+Used together, the call\n+\n+.. code-block:: python\n+\n+   df = table.to_pandas(split_blocks=True, self_destruct=True)\n \n Review comment:\n   good idea, done\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-14T23:10:40.207+0000",
                    "updated": "2020-01-14T23:10:40.207+0000",
                    "started": "2020-01-14T23:10:40.206+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "371962",
                    "issueId": "13198360"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198360/worklog/371964",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6067: ARROW-3789: [Python] Use common conversion path for Arrow to pandas.Series/DataFrame. Zero copy optimizations for DataFrame, add split_blocks and self_destruct options\nURL: https://github.com/apache/arrow/pull/6067#discussion_r366621729\n \n \n\n ##########\n File path: python/pyarrow/array.pxi\n ##########\n @@ -519,6 +521,15 @@ cdef class _PandasConvertible:\n         ignore_metadata : boolean, default False\n             If True, do not use the 'pandas' metadata to reconstruct the\n             DataFrame index, if present\n+        split_blocks : boolean, default False\n+            If True, generate one internal \"block\" for each column when\n+            creating a pandas.DataFrame from a RecordBatch or Table. While this\n+            can temporarily reduce memory note that various pandas operations\n+            can trigger \"consolidation\" which may balloon memory use\n+        self_destruct : boolean, default False\n+            EXPERIMENTAL: If True, attempt to deallocate memory while\n \n Review comment:\n   done\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-14T23:11:29.955+0000",
                    "updated": "2020-01-14T23:11:29.955+0000",
                    "started": "2020-01-14T23:11:29.954+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "371964",
                    "issueId": "13198360"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198360/worklog/371976",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6067: ARROW-3789: [Python] Use common conversion path for Arrow to pandas.Series/DataFrame. Zero copy optimizations for DataFrame, add split_blocks and self_destruct options\nURL: https://github.com/apache/arrow/pull/6067#discussion_r366624404\n \n \n\n ##########\n File path: python/pyarrow/table.pxi\n ##########\n @@ -183,38 +183,21 @@ cdef class ChunkedArray(_PandasConvertible):\n         return result\n \n     def _to_pandas(self, options, **kwargs):\n-        cdef:\n-            PyObject* out\n-            PandasOptions c_options = _convert_pandas_options(options)\n-            ChunkedArray array\n-\n-        if self.type.id == _Type_TIMESTAMP and self.type.unit != 'ns':\n-            # pandas only stores ns data - casting here is faster\n-            array = self.cast(timestamp('ns'))\n-        else:\n-            array = self\n-\n-        with nogil:\n-            check_status(libarrow.ConvertChunkedArrayToPandas(\n-                c_options,\n-                array.sp_chunked_array,\n-                array, &out))\n-\n-        result = pandas_api.series(wrap_array_output(out), name=self._name)\n-\n-        if isinstance(self.type, TimestampType) and self.type.tz is not None:\n-            from pyarrow.pandas_compat import make_tz_aware\n-\n-            result = make_tz_aware(result, self.type.tz)\n-\n-        return result\n+        return _array_like_to_pandas(self, options)\n \n     def __array__(self, dtype=None):\n         cdef:\n             PyObject* out\n             PandasOptions c_options\n             object values\n \n+        if self.type.id == _Type_EXTENSION:\n+            return (\n+                chunked_array(\n+                    [self.chunk(i).storage for i in range(self.num_chunks)]\n+                ).__array__(dtype)\n \n Review comment:\n   Seems it is tested here https://github.com/apache/arrow/blob/master/python/pyarrow/tests/test_extension_type.py#L394\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-14T23:20:02.520+0000",
                    "updated": "2020-01-14T23:20:02.520+0000",
                    "started": "2020-01-14T23:20:02.520+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "371976",
                    "issueId": "13198360"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 12600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@132677dd[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3fb15fa3[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4d909c51[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@78698e07[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7cd9efe6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@556dcbfd[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1c56b715[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@287b0b2e[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1b6e6718[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@20e775ab[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@92090bd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7972d8cc[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 12600,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jan 15 00:25:10 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-01-15T00:25:10.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3789/watchers",
            "watchCount": 6,
            "isWatching": false
        },
        "created": "2018-11-14T15:13:07.000+0000",
        "updated": "2020-03-10T11:29:24.000+0000",
        "timeoriginalestimate": null,
        "description": "One issue with using {{Table.to_pandas}} is that it results in a memory doubling (at least, more if there are a lot of Python objects created). It would be useful if there was an option to destroy the {{arrow::Column}} references once they've been transferred into the target data frame. This would render the {{pyarrow.Table}} object useless afterward",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 12600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Enable calling object in Table.to_pandas to \"self-destruct\" for improved memory use",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198360/comment/16968070",
                    "id": "16968070",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "There's a few things that have to happen:\r\n\r\n* Add \"self-destruct\" option that can result in the passed table's columns being deallocated as they are consumed. This should warn the user if for some reason the shared_ptr use_count is not 1, so that users will know that the self-destructing behavior is not taking place\r\n* Add \"split blocks\" option to create one block per column, to limit memory doubling to a per-column basis rather than per-data type. In the worst case, we might have a table with all columns having the same data type -- the current block creation behavior would yield memory doubling even with the column \"self-destructing\" described above\r\n* Some split blocks can be zero-copy constructed when there are no nulls\r\n* Users will need to be advised to set pandas to use a no-consolidation split block policy\r\n\r\nI'm looking at arrow_to_pandas.cc to come up with a plan to limit code duplication between the split/non-split block construction path",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-11-06T04:20:14.644+0000",
                    "updated": "2019-11-06T04:20:14.644+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13198360/comment/17015520",
                    "id": "17015520",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 6067\n[https://github.com/apache/arrow/pull/6067]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-01-15T00:25:10.506+0000",
                    "updated": "2020-01-15T00:25:10.506+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|s00hjs:",
        "customfield_12314139": null
    }
}