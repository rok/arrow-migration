{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13176013",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13176013",
    "key": "ARROW-2954",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
            "name": "pcmoritz",
            "key": "pcmoritz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Philipp Moritz",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332956",
                "id": "12332956",
                "name": "C++ - Plasma"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
            "name": "pcmoritz",
            "key": "pcmoritz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Philipp Moritz",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
            "name": "pcmoritz",
            "key": "pcmoritz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Philipp Moritz",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 1800,
            "total": 1800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 1800,
            "total": 1800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2954/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 3,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13176013/worklog/129571",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2353: ARROW-2954: [Plasma] Reduce plasma store memory usage\nURL: https://github.com/apache/arrow/pull/2353#issuecomment-409443196\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2353?src=pr&el=h1) Report\n   > Merging [#2353](https://codecov.io/gh/apache/arrow/pull/2353?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/beefaca96fc67ec0bacfc74a72a6e76729b92194?src=pr&el=desc) will **increase** coverage by `2.24%`.\n   > The diff coverage is `94.11%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2353/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/2353?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2353      +/-   ##\n   ==========================================\n   + Coverage    84.6%   86.85%   +2.24%     \n   ==========================================\n     Files         293      237      -56     \n     Lines       45211    42449    -2762     \n   ==========================================\n   - Hits        38249    36867    -1382     \n   + Misses       6933     5582    -1351     \n   + Partials       29        0      -29\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2353?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/plasma.h](https://codecov.io/gh/apache/arrow/pull/2353/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcGxhc21hLmg=) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/store.h](https://codecov.io/gh/apache/arrow/pull/2353/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvc3RvcmUuaA==) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/store.cc](https://codecov.io/gh/apache/arrow/pull/2353/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvc3RvcmUuY2M=) | `88.98% <94.11%> (-0.03%)` | :arrow_down: |\n   | [go/arrow/math/uint64.go](https://codecov.io/gh/apache/arrow/pull/2353/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjQuZ28=) | | |\n   | [go/arrow/array/bufferbuilder\\_byte.go](https://codecov.io/gh/apache/arrow/pull/2353/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlcl9ieXRlLmdv) | | |\n   | [go/arrow/array/data.go](https://codecov.io/gh/apache/arrow/pull/2353/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvZGF0YS5nbw==) | | |\n   | [go/arrow/internal/testing/tools/bits.go](https://codecov.io/gh/apache/arrow/pull/2353/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvdGVzdGluZy90b29scy9iaXRzLmdv) | | |\n   | [go/arrow/math/float64\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2353/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9mbG9hdDY0X2F2eDJfYW1kNjQuZ28=) | | |\n   | [rust/src/builder.rs](https://codecov.io/gh/apache/arrow/pull/2353/diff?src=pr&el=tree#diff-cnVzdC9zcmMvYnVpbGRlci5ycw==) | | |\n   | [go/arrow/math/uint64\\_sse4\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2353/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfc3NlNF9hbWQ2NC5nbw==) | | |\n   | ... and [50 more](https://codecov.io/gh/apache/arrow/pull/2353/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2353?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2353?src=pr&el=footer). Last update [beefaca...7853f4a](https://codecov.io/gh/apache/arrow/pull/2353?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-01T04:10:46.755+0000",
                    "updated": "2018-08-01T04:10:46.755+0000",
                    "started": "2018-08-01T04:10:46.755+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "129571",
                    "issueId": "13176013"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13176013/worklog/129572",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on issue #2353: ARROW-2954: [Plasma] Reduce plasma store memory usage\nURL: https://github.com/apache/arrow/pull/2353#issuecomment-409443228\n \n \n   +1 This is now ready to merge!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-01T04:11:01.025+0000",
                    "updated": "2018-08-01T04:11:01.025+0000",
                    "started": "2018-08-01T04:11:01.024+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "129572",
                    "issueId": "13176013"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13176013/worklog/129687",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #2353: ARROW-2954: [Plasma] Reduce plasma store memory usage\nURL: https://github.com/apache/arrow/pull/2353\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/plasma/plasma.h b/cpp/src/plasma/plasma.h\nindex 6e158071cc..11c2b2be62 100644\n--- a/cpp/src/plasma/plasma.h\n+++ b/cpp/src/plasma/plasma.h\n@@ -116,8 +116,6 @@ struct ObjectTableEntry {\n \n   ~ObjectTableEntry();\n \n-  /// Object id of this object.\n-  ObjectID object_id;\n   /// Object info like size, creation time and owner.\n   flatbuf::ObjectInfoT info;\n   /// Memory mapped file containing the object.\ndiff --git a/cpp/src/plasma/store.cc b/cpp/src/plasma/store.cc\nindex f55f3c90d6..d68f6e3a41 100644\n--- a/cpp/src/plasma/store.cc\n+++ b/cpp/src/plasma/store.cc\n@@ -125,9 +125,10 @@ const PlasmaStoreInfo* PlasmaStore::GetPlasmaStoreInfo() { return &store_info_;\n \n // If this client is not already using the object, add the client to the\n // object's list of clients, otherwise do nothing.\n-void PlasmaStore::AddToClientObjectIds(ObjectTableEntry* entry, Client* client) {\n+void PlasmaStore::AddToClientObjectIds(const ObjectID& object_id, ObjectTableEntry* entry,\n+                                       Client* client) {\n   // Check if this client is already using the object.\n-  if (client->object_ids.find(entry->object_id) != client->object_ids.end()) {\n+  if (client->object_ids.find(object_id) != client->object_ids.end()) {\n     return;\n   }\n   // If there are no other clients using this object, notify the eviction policy\n@@ -135,14 +136,14 @@ void PlasmaStore::AddToClientObjectIds(ObjectTableEntry* entry, Client* client)\n   if (entry->ref_count == 0) {\n     // Tell the eviction policy that this object is being used.\n     std::vector<ObjectID> objects_to_evict;\n-    eviction_policy_.BeginObjectAccess(entry->object_id, &objects_to_evict);\n+    eviction_policy_.BeginObjectAccess(object_id, &objects_to_evict);\n     DeleteObjects(objects_to_evict);\n   }\n   // Increase reference count.\n   entry->ref_count++;\n \n   // Add object id to the list of object ids that this client is using.\n-  client->object_ids.insert(entry->object_id);\n+  client->object_ids.insert(object_id);\n }\n \n // Create a new object buffer in the hash table.\n@@ -204,7 +205,6 @@ PlasmaError PlasmaStore::CreateObject(const ObjectID& object_id, int64_t data_si\n     assert(fd != -1);\n   }\n   auto entry = std::unique_ptr<ObjectTableEntry>(new ObjectTableEntry());\n-  entry->object_id = object_id;\n   entry->info.object_id = object_id.binary();\n   entry->info.data_size = data_size;\n   entry->info.metadata_size = metadata_size;\n@@ -233,7 +233,7 @@ PlasmaError PlasmaStore::CreateObject(const ObjectID& object_id, int64_t data_si\n   // eviction policy does not have an opportunity to evict the object.\n   eviction_policy_.ObjectCreated(object_id);\n   // Record that this client is using this object.\n-  AddToClientObjectIds(store_info_.objects[object_id].get(), client);\n+  AddToClientObjectIds(object_id, store_info_.objects[object_id].get(), client);\n   return PlasmaError::OK;\n }\n \n@@ -331,7 +331,7 @@ void PlasmaStore::UpdateObjectGetRequests(const ObjectID& object_id) {\n     get_req->num_satisfied += 1;\n     // Record the fact that this client will be using this object and will\n     // be responsible for releasing this object.\n-    AddToClientObjectIds(entry, get_req->client);\n+    AddToClientObjectIds(object_id, entry, get_req->client);\n \n     // If this get request is done, reply to the client.\n     if (get_req->num_satisfied == get_req->num_objects_to_wait_for) {\n@@ -365,7 +365,7 @@ void PlasmaStore::ProcessGetRequest(Client* client,\n       get_req->num_satisfied += 1;\n       // If necessary, record that this client is using this object. In the case\n       // where entry == NULL, this will be called from SealObject.\n-      AddToClientObjectIds(entry, client);\n+      AddToClientObjectIds(object_id, entry, client);\n     } else {\n       // Add a placeholder plasma object to the get request to indicate that the\n       // object is not present. This will be parsed by the client. We set the\n@@ -390,8 +390,9 @@ void PlasmaStore::ProcessGetRequest(Client* client,\n   }\n }\n \n-int PlasmaStore::RemoveFromClientObjectIds(ObjectTableEntry* entry, Client* client) {\n-  auto it = client->object_ids.find(entry->object_id);\n+int PlasmaStore::RemoveFromClientObjectIds(const ObjectID& object_id,\n+                                           ObjectTableEntry* entry, Client* client) {\n+  auto it = client->object_ids.find(object_id);\n   if (it != client->object_ids.end()) {\n     client->object_ids.erase(it);\n     // Decrease reference count.\n@@ -400,16 +401,16 @@ int PlasmaStore::RemoveFromClientObjectIds(ObjectTableEntry* entry, Client* clie\n     // If no more clients are using this object, notify the eviction policy\n     // that the object is no longer being used.\n     if (entry->ref_count == 0) {\n-      if (deletion_cache_.count(entry->object_id) == 0) {\n+      if (deletion_cache_.count(object_id) == 0) {\n         // Tell the eviction policy that this object is no longer being used.\n         std::vector<ObjectID> objects_to_evict;\n-        eviction_policy_.EndObjectAccess(entry->object_id, &objects_to_evict);\n+        eviction_policy_.EndObjectAccess(object_id, &objects_to_evict);\n         DeleteObjects(objects_to_evict);\n       } else {\n         // Above code does not really delete an object. Instead, it just put an\n         // object to LRU cache which will be cleaned when the memory is not enough.\n-        deletion_cache_.erase(entry->object_id);\n-        DeleteObjects({entry->object_id});\n+        deletion_cache_.erase(object_id);\n+        DeleteObjects({object_id});\n       }\n     }\n     // Return 1 to indicate that the client was removed.\n@@ -424,7 +425,7 @@ void PlasmaStore::ReleaseObject(const ObjectID& object_id, Client* client) {\n   auto entry = GetObjectTableEntry(&store_info_, object_id);\n   ARROW_CHECK(entry != nullptr);\n   // Remove the client from the object's array of clients.\n-  ARROW_CHECK(RemoveFromClientObjectIds(entry, client) == 1);\n+  ARROW_CHECK(RemoveFromClientObjectIds(object_id, entry, client) == 1);\n }\n \n // Check if an object is present.\n@@ -554,7 +555,7 @@ void PlasmaStore::DisconnectClient(int client_fd) {\n   ARROW_LOG(INFO) << \"Disconnecting client on fd \" << client_fd;\n   // Release all the objects that the client was using.\n   auto client = it->second.get();\n-  std::vector<ObjectTableEntry*> sealed_objects;\n+  std::unordered_map<ObjectID, ObjectTableEntry*> sealed_objects;\n   for (const auto& object_id : client->object_ids) {\n     auto it = store_info_.objects.find(object_id);\n     if (it == store_info_.objects.end()) {\n@@ -564,7 +565,7 @@ void PlasmaStore::DisconnectClient(int client_fd) {\n     if (it->second->state == ObjectState::PLASMA_SEALED) {\n       // Add sealed objects to a temporary list of object IDs. Do not perform\n       // the remove here, since it potentially modifies the object_ids table.\n-      sealed_objects.push_back(it->second.get());\n+      sealed_objects[it->first] = it->second.get();\n     } else {\n       // Abort unsealed object.\n       AbortObject(it->first, client);\n@@ -572,7 +573,7 @@ void PlasmaStore::DisconnectClient(int client_fd) {\n   }\n \n   for (const auto& entry : sealed_objects) {\n-    RemoveFromClientObjectIds(entry, client);\n+    RemoveFromClientObjectIds(entry.first, entry.second, client);\n   }\n \n   if (client->notification_fd > 0) {\ndiff --git a/cpp/src/plasma/store.h b/cpp/src/plasma/store.h\nindex 40412a8d6a..4b83143de2 100644\n--- a/cpp/src/plasma/store.h\n+++ b/cpp/src/plasma/store.h\n@@ -180,13 +180,15 @@ class PlasmaStore {\n \n   void PushNotification(ObjectInfoT* object_notification, int client_fd);\n \n-  void AddToClientObjectIds(ObjectTableEntry* entry, Client* client);\n+  void AddToClientObjectIds(const ObjectID& object_id, ObjectTableEntry* entry,\n+                            Client* client);\n \n   void ReturnFromGet(GetRequest* get_req);\n \n   void UpdateObjectGetRequests(const ObjectID& object_id);\n \n-  int RemoveFromClientObjectIds(ObjectTableEntry* entry, Client* client);\n+  int RemoveFromClientObjectIds(const ObjectID& object_id, ObjectTableEntry* entry,\n+                                Client* client);\n \n   /// Event loop of the plasma store.\n   EventLoop* loop_;\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-01T13:56:13.414+0000",
                    "updated": "2018-08-01T13:56:13.414+0000",
                    "started": "2018-08-01T13:56:13.413+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "129687",
                    "issueId": "13176013"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 1800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@26ddb18b[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@35b820fd[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@22ecb8e6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@56a7cb8e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1ee7aa8d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@47257fb6[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@49d43c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@685a9400[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4bcaf844[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@277ef644[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@69d83ea3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@551e4d0c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 1800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Aug 01 13:56:07 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-08-01T13:56:07.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2954/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-08-01T03:19:29.000+0000",
        "updated": "2018-08-01T13:56:13.000+0000",
        "timeoriginalestimate": null,
        "description": "This is the first part of\u00a0ARROW-2953, i.e. the duplicated storage of the object id both in the key and the value of the object hash table.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "0.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 1800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Plasma] Store object_id only once in object table",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13176013/comment/16565357",
                    "id": "16565357",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2353\n[https://github.com/apache/arrow/pull/2353]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-08-01T13:56:07.446+0000",
                    "updated": "2018-08-01T13:56:07.446+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3wjvz:",
        "customfield_12314139": null
    }
}