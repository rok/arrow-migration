{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13246743",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246743",
    "key": "ARROW-6021",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "aggregateprogress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6021/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 16,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246743/worklog/281556",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4931: ARROW-6021: [Java] Extract copyFrom and copyFromSafe methods to ValueVector interface\nURL: https://github.com/apache/arrow/pull/4931\n \n \n   Currently we have copyFrom and copyFromSafe methods in fixed-width and variable-width vectors. Extracting them to the common super interface will make it much more convenient to use them, and avoid unnecessary if-else statements.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T07:39:22.523+0000",
                    "updated": "2019-07-24T07:39:22.523+0000",
                    "started": "2019-07-24T07:39:22.523+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "281556",
                    "issueId": "13246743"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246743/worklog/281838",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4931: ARROW-6021: [Java] Extract copyFrom and copyFromSafe methods to ValueVector interface\nURL: https://github.com/apache/arrow/pull/4931#issuecomment-514584759\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4931?src=pr&el=h1) Report\n   > Merging [#4931](https://codecov.io/gh/apache/arrow/pull/4931?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/ff8c63b23aacd51170dd52697806fa8343ee4cfb?src=pr&el=desc) will **increase** coverage by `1.17%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4931/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4931?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4931      +/-   ##\n   ==========================================\n   + Coverage   88.51%   89.69%   +1.17%     \n   ==========================================\n     Files         908      547     -361     \n     Lines      115478    73353   -42125     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       102218    65795   -36423     \n   + Misses      12898     7558    -5340     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4931?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/csv/reader.h](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvcmVhZGVyLmg=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [cpp/src/arrow/csv/reader.cc](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvcmVhZGVyLmNj) | `0% <0%> (-92.9%)` | :arrow_down: |\n   | [cpp/src/arrow/adapters/orc/adapter\\_util.cc](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hZGFwdGVycy9vcmMvYWRhcHRlcl91dGlsLmNj) | `15.74% <0%> (-64.97%)` | :arrow_down: |\n   | [cpp/src/arrow/util/cpu-info.h](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2NwdS1pbmZvLmg=) | `0% <0%> (-50%)` | :arrow_down: |\n   | [cpp/src/arrow/csv/options.h](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3Yvb3B0aW9ucy5o) | `66.66% <0%> (-33.34%)` | :arrow_down: |\n   | [cpp/src/arrow/extension\\_type.cc](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9leHRlbnNpb25fdHlwZS5jYw==) | `66.66% <0%> (-26.67%)` | :arrow_down: |\n   | [cpp/src/parquet/column\\_scanner.cc](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2NvbHVtbl9zY2FubmVyLmNj) | `55% <0%> (-25%)` | :arrow_down: |\n   | [cpp/src/arrow/vendored/xxhash/xxhash.c](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy92ZW5kb3JlZC94eGhhc2gveHhoYXNoLmM=) | `52.79% <0%> (-20.82%)` | :arrow_down: |\n   | [cpp/src/arrow/adapters/orc/adapter.cc](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hZGFwdGVycy9vcmMvYWRhcHRlci5jYw==) | `53.21% <0%> (-20.19%)` | :arrow_down: |\n   | [cpp/src/arrow/sparse\\_tensor.cc](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9zcGFyc2VfdGVuc29yLmNj) | `73.8% <0%> (-17.86%)` | :arrow_down: |\n   | ... and [426 more](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4931?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4931?src=pr&el=footer). Last update [ff8c63b...2510031](https://codecov.io/gh/apache/arrow/pull/4931?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T10:56:46.369+0000",
                    "updated": "2019-07-24T10:56:46.369+0000",
                    "started": "2019-07-24T10:56:46.368+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "281838",
                    "issueId": "13246743"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246743/worklog/284042",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #4931: ARROW-6021: [Java] Extract copyFrom and copyFromSafe methods to ValueVector interface\nURL: https://github.com/apache/arrow/pull/4931#discussion_r308075578\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/complex/AbstractContainerVector.java\n ##########\n @@ -112,4 +112,12 @@ public ListVector addOrGetList(String name) {\n   public UnionVector addOrGetUnion(String name) {\n     return addOrGet(name, FieldType.nullable(MinorType.UNION.getType()), UnionVector.class);\n   }\n+\n+  @Override\n+  public void copyFrom(int fromIndex, int thisIndex, ValueVector from) {\n \n Review comment:\n   exception if not supported ?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-29T06:50:48.851+0000",
                    "updated": "2019-07-29T06:50:48.851+0000",
                    "started": "2019-07-29T06:50:48.851+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284042",
                    "issueId": "13246743"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246743/worklog/284043",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #4931: ARROW-6021: [Java] Extract copyFrom and copyFromSafe methods to ValueVector interface\nURL: https://github.com/apache/arrow/pull/4931#discussion_r308075184\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n ##########\n @@ -1287,50 +1287,50 @@ public static ArrowBuf set(ArrowBuf buffer, BufferAllocator allocator,\n    * @param thisIndex position to copy to in this vector\n    * @param from source vector\n    */\n-  public void copyFrom(int fromIndex, int thisIndex, BaseVariableWidthVector from) {\n+  public void copyFrom(int fromIndex, int thisIndex, ValueVector from) {\n     if (from.isNull(fromIndex)) {\n       fillHoles(thisIndex);\n       BitVectorHelper.setValidityBit(this.validityBuffer, thisIndex, 0);\n       final int copyStart = offsetBuffer.getInt(thisIndex * OFFSET_WIDTH);\n       offsetBuffer.setInt((thisIndex + 1) * OFFSET_WIDTH, copyStart);\n     } else {\n-      final int start = from.offsetBuffer.getInt(fromIndex * OFFSET_WIDTH);\n-      final int end = from.offsetBuffer.getInt((fromIndex + 1) * OFFSET_WIDTH);\n+      final int start = from.getOffsetBuffer().getInt(fromIndex * OFFSET_WIDTH);\n+      final int end = from.getOffsetBuffer().getInt((fromIndex + 1) * OFFSET_WIDTH);\n       final int length = end - start;\n       fillHoles(thisIndex);\n       BitVectorHelper.setValidityBit(this.validityBuffer, thisIndex, 1);\n       final int copyStart = offsetBuffer.getInt(thisIndex * OFFSET_WIDTH);\n-      from.valueBuffer.getBytes(start, this.valueBuffer, copyStart, length);\n+      from.getDataBuffer().getBytes(start, this.valueBuffer, copyStart, length);\n       offsetBuffer.setInt((thisIndex + 1) * OFFSET_WIDTH, copyStart + length);\n     }\n     lastSet = thisIndex;\n   }\n \n   /**\n-   * Same as {@link #copyFrom(int, int, BaseVariableWidthVector)} except that\n+   * Same as {@link #copyFrom(int, int, ValueVector)} except that\n    * it handles the case when the capacity of the vector needs to be expanded\n    * before copy.\n    *\n    * @param fromIndex position to copy from in source vector\n    * @param thisIndex position to copy to in this vector\n    * @param from source vector\n    */\n-  public void copyFromSafe(int fromIndex, int thisIndex, BaseVariableWidthVector from) {\n+  public void copyFromSafe(int fromIndex, int thisIndex, ValueVector from) {\n \n Review comment:\n   things can go bad if the caller passes a fixed-width vector in the 'from'.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-29T06:50:49.077+0000",
                    "updated": "2019-07-29T06:50:49.077+0000",
                    "started": "2019-07-29T06:50:49.076+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284043",
                    "issueId": "13246743"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246743/worklog/284045",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #4931: ARROW-6021: [Java] Extract copyFrom and copyFromSafe methods to ValueVector interface\nURL: https://github.com/apache/arrow/pull/4931#discussion_r308074486\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseValueVector.java\n ##########\n @@ -213,5 +213,13 @@ public static ArrowBuf transferBuffer(final ArrowBuf srcBuffer, final BufferAllo\n     final ReferenceManager referenceManager = srcBuffer.getReferenceManager();\n     return referenceManager.transferOwnership(srcBuffer, targetAllocator).getTransferredBuffer();\n   }\n+\n+  @Override\n+  public void copyFrom(int fromIndex, int thisIndex, ValueVector from) {\n \n Review comment:\n   should the default throw an Unsupported exception ?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-29T06:50:49.224+0000",
                    "updated": "2019-07-29T06:50:49.224+0000",
                    "started": "2019-07-29T06:50:49.224+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284045",
                    "issueId": "13246743"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246743/worklog/284044",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #4931: ARROW-6021: [Java] Extract copyFrom and copyFromSafe methods to ValueVector interface\nURL: https://github.com/apache/arrow/pull/4931#discussion_r308074248\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/UnionVector.java\n ##########\n @@ -649,4 +649,12 @@ public boolean equals(int index, ValueVector to, int toIndex) {\n       }\n       return leftVector.equals(index, rightVector, toIndex);\n     }\n+\n+    @Override\n+    public void copyFrom(int fromIndex, int thisIndex, ValueVector from) {\n \n Review comment:\n   there's already an impl of copyFrom in UnionVector, right ?\r\n   \r\n   https://github.com/apache/arrow/blob/master/java/vector/src/main/codegen/templates/UnionVector.java#L367\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-29T06:50:49.224+0000",
                    "updated": "2019-07-29T06:50:49.224+0000",
                    "started": "2019-07-29T06:50:49.223+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284044",
                    "issueId": "13246743"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246743/worklog/284716",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4931: ARROW-6021: [Java] Extract copyFrom and copyFromSafe methods to ValueVector interface\nURL: https://github.com/apache/arrow/pull/4931#discussion_r308539106\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/UnionVector.java\n ##########\n @@ -649,4 +649,12 @@ public boolean equals(int index, ValueVector to, int toIndex) {\n       }\n       return leftVector.equals(index, rightVector, toIndex);\n     }\n+\n+    @Override\n+    public void copyFrom(int fromIndex, int thisIndex, ValueVector from) {\n \n Review comment:\n   Nice catch. Thank you @pravindra \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-30T05:34:47.493+0000",
                    "updated": "2019-07-30T05:34:47.493+0000",
                    "started": "2019-07-30T05:34:47.493+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284716",
                    "issueId": "13246743"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246743/worklog/284719",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4931: ARROW-6021: [Java] Extract copyFrom and copyFromSafe methods to ValueVector interface\nURL: https://github.com/apache/arrow/pull/4931#discussion_r308539197\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseValueVector.java\n ##########\n @@ -213,5 +213,13 @@ public static ArrowBuf transferBuffer(final ArrowBuf srcBuffer, final BufferAllo\n     final ReferenceManager referenceManager = srcBuffer.getReferenceManager();\n     return referenceManager.transferOwnership(srcBuffer, targetAllocator).getTransferredBuffer();\n   }\n+\n+  @Override\n+  public void copyFrom(int fromIndex, int thisIndex, ValueVector from) {\n \n Review comment:\n   Thanks for the good suggestion. Throwing an exception is better.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-30T05:35:09.592+0000",
                    "updated": "2019-07-30T05:35:09.592+0000",
                    "started": "2019-07-30T05:35:09.592+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284719",
                    "issueId": "13246743"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246743/worklog/284722",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4931: ARROW-6021: [Java] Extract copyFrom and copyFromSafe methods to ValueVector interface\nURL: https://github.com/apache/arrow/pull/4931#issuecomment-514584759\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4931?src=pr&el=h1) Report\n   > Merging [#4931](https://codecov.io/gh/apache/arrow/pull/4931?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/171c3f709bbad4de989d5b10c707dcbc40c34405?src=pr&el=desc) will **increase** coverage by `2.13%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4931/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4931?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4931      +/-   ##\n   ==========================================\n   + Coverage    87.5%   89.63%   +2.13%     \n   ==========================================\n     Files         998      664     -334     \n     Lines      141869    98021   -43848     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       124146    87866   -36280     \n   + Misses      17361    10155    -7206     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4931?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/json/converter.cc](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NvbnZlcnRlci5jYw==) | `90.53% <0%> (-1.78%)` | :arrow_down: |\n   | [cpp/src/arrow/json/chunked-builder.cc](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NodW5rZWQtYnVpbGRlci5jYw==) | `79.91% <0%> (-1.68%)` | :arrow_down: |\n   | [cpp/src/arrow/util/thread-pool-test.cc](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZC1wb29sLXRlc3QuY2M=) | `97.66% <0%> (-0.94%)` | :arrow_down: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [js/src/util/fn.ts](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvZm4udHM=) | | |\n   | [go/arrow/array/bufferbuilder.go](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlci5nbw==) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [rust/datafusion/src/execution/projection.rs](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vcHJvamVjdGlvbi5ycw==) | | |\n   | [rust/datafusion/src/execution/filter.rs](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZmlsdGVyLnJz) | | |\n   | ... and [328 more](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4931?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4931?src=pr&el=footer). Last update [171c3f7...e17978b](https://codecov.io/gh/apache/arrow/pull/4931?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-30T05:38:17.314+0000",
                    "updated": "2019-07-30T05:38:17.314+0000",
                    "started": "2019-07-30T05:38:17.314+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284722",
                    "issueId": "13246743"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246743/worklog/284723",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4931: ARROW-6021: [Java] Extract copyFrom and copyFromSafe methods to ValueVector interface\nURL: https://github.com/apache/arrow/pull/4931#discussion_r308540070\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n ##########\n @@ -1287,50 +1287,50 @@ public static ArrowBuf set(ArrowBuf buffer, BufferAllocator allocator,\n    * @param thisIndex position to copy to in this vector\n    * @param from source vector\n    */\n-  public void copyFrom(int fromIndex, int thisIndex, BaseVariableWidthVector from) {\n+  public void copyFrom(int fromIndex, int thisIndex, ValueVector from) {\n     if (from.isNull(fromIndex)) {\n       fillHoles(thisIndex);\n       BitVectorHelper.setValidityBit(this.validityBuffer, thisIndex, 0);\n       final int copyStart = offsetBuffer.getInt(thisIndex * OFFSET_WIDTH);\n       offsetBuffer.setInt((thisIndex + 1) * OFFSET_WIDTH, copyStart);\n     } else {\n-      final int start = from.offsetBuffer.getInt(fromIndex * OFFSET_WIDTH);\n-      final int end = from.offsetBuffer.getInt((fromIndex + 1) * OFFSET_WIDTH);\n+      final int start = from.getOffsetBuffer().getInt(fromIndex * OFFSET_WIDTH);\n+      final int end = from.getOffsetBuffer().getInt((fromIndex + 1) * OFFSET_WIDTH);\n       final int length = end - start;\n       fillHoles(thisIndex);\n       BitVectorHelper.setValidityBit(this.validityBuffer, thisIndex, 1);\n       final int copyStart = offsetBuffer.getInt(thisIndex * OFFSET_WIDTH);\n-      from.valueBuffer.getBytes(start, this.valueBuffer, copyStart, length);\n+      from.getDataBuffer().getBytes(start, this.valueBuffer, copyStart, length);\n       offsetBuffer.setInt((thisIndex + 1) * OFFSET_WIDTH, copyStart + length);\n     }\n     lastSet = thisIndex;\n   }\n \n   /**\n-   * Same as {@link #copyFrom(int, int, BaseVariableWidthVector)} except that\n+   * Same as {@link #copyFrom(int, int, ValueVector)} except that\n    * it handles the case when the capacity of the vector needs to be expanded\n    * before copy.\n    *\n    * @param fromIndex position to copy from in source vector\n    * @param thisIndex position to copy to in this vector\n    * @param from source vector\n    */\n-  public void copyFromSafe(int fromIndex, int thisIndex, BaseVariableWidthVector from) {\n+  public void copyFromSafe(int fromIndex, int thisIndex, ValueVector from) {\n \n Review comment:\n   Good question.\r\n   Things will go wrong is the source and target are of different vector types. Even if both are  fixed-width vectors, things can go wrong (e.g. from a IntVector to a Float4Vector). \r\n   \r\n   One solution is to check types each time, however, this may have performance penalty, as copyFrom is a frequently called operation. So current assumption is that the caller should make sure the source and target are of the same type. \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-30T05:40:12.303+0000",
                    "updated": "2019-07-30T05:40:12.303+0000",
                    "started": "2019-07-30T05:40:12.302+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284723",
                    "issueId": "13246743"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246743/worklog/284724",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4931: ARROW-6021: [Java] Extract copyFrom and copyFromSafe methods to ValueVector interface\nURL: https://github.com/apache/arrow/pull/4931#discussion_r308540126\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/complex/AbstractContainerVector.java\n ##########\n @@ -112,4 +112,12 @@ public ListVector addOrGetList(String name) {\n   public UnionVector addOrGetUnion(String name) {\n     return addOrGet(name, FieldType.nullable(MinorType.UNION.getType()), UnionVector.class);\n   }\n+\n+  @Override\n+  public void copyFrom(int fromIndex, int thisIndex, ValueVector from) {\n \n Review comment:\n   Revised. Thanks for the good suggestion.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-30T05:40:26.163+0000",
                    "updated": "2019-07-30T05:40:26.163+0000",
                    "started": "2019-07-30T05:40:26.163+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284724",
                    "issueId": "13246743"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246743/worklog/284750",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4931: ARROW-6021: [Java] Extract copyFrom and copyFromSafe methods to ValueVector interface\nURL: https://github.com/apache/arrow/pull/4931#issuecomment-514584759\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4931?src=pr&el=h1) Report\n   > Merging [#4931](https://codecov.io/gh/apache/arrow/pull/4931?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/b071f6b08107831766f9ecda5b46a89011f00a23?src=pr&el=desc) will **increase** coverage by `2.13%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4931/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4931?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4931      +/-   ##\n   ==========================================\n   + Coverage    87.5%   89.64%   +2.13%     \n   ==========================================\n     Files         998      664     -334     \n     Lines      142085    98021   -44064     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       124336    87872   -36464     \n   + Misses      17387    10149    -7238     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4931?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [js/src/util/fn.ts](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvZm4udHM=) | | |\n   | [go/arrow/array/bufferbuilder.go](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlci5nbw==) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [rust/datafusion/src/execution/projection.rs](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vcHJvamVjdGlvbi5ycw==) | | |\n   | [rust/datafusion/src/execution/filter.rs](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZmlsdGVyLnJz) | | |\n   | [rust/arrow/src/csv/writer.rs](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY3N2L3dyaXRlci5ycw==) | | |\n   | [rust/datafusion/src/bin/main.rs](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9iaW4vbWFpbi5ycw==) | | |\n   | [go/arrow/ipc/file\\_reader.go](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaXBjL2ZpbGVfcmVhZGVyLmdv) | | |\n   | ... and [327 more](https://codecov.io/gh/apache/arrow/pull/4931/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4931?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4931?src=pr&el=footer). Last update [b071f6b...9cd2596](https://codecov.io/gh/apache/arrow/pull/4931?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-30T07:17:02.496+0000",
                    "updated": "2019-07-30T07:17:02.496+0000",
                    "started": "2019-07-30T07:17:02.495+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284750",
                    "issueId": "13246743"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246743/worklog/285612",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #4931: ARROW-6021: [Java] Extract copyFrom and copyFromSafe methods to ValueVector interface\nURL: https://github.com/apache/arrow/pull/4931#discussion_r309115492\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n ##########\n @@ -1287,50 +1287,50 @@ public static ArrowBuf set(ArrowBuf buffer, BufferAllocator allocator,\n    * @param thisIndex position to copy to in this vector\n    * @param from source vector\n    */\n-  public void copyFrom(int fromIndex, int thisIndex, BaseVariableWidthVector from) {\n+  public void copyFrom(int fromIndex, int thisIndex, ValueVector from) {\n     if (from.isNull(fromIndex)) {\n       fillHoles(thisIndex);\n       BitVectorHelper.setValidityBit(this.validityBuffer, thisIndex, 0);\n       final int copyStart = offsetBuffer.getInt(thisIndex * OFFSET_WIDTH);\n       offsetBuffer.setInt((thisIndex + 1) * OFFSET_WIDTH, copyStart);\n     } else {\n-      final int start = from.offsetBuffer.getInt(fromIndex * OFFSET_WIDTH);\n-      final int end = from.offsetBuffer.getInt((fromIndex + 1) * OFFSET_WIDTH);\n+      final int start = from.getOffsetBuffer().getInt(fromIndex * OFFSET_WIDTH);\n+      final int end = from.getOffsetBuffer().getInt((fromIndex + 1) * OFFSET_WIDTH);\n       final int length = end - start;\n       fillHoles(thisIndex);\n       BitVectorHelper.setValidityBit(this.validityBuffer, thisIndex, 1);\n       final int copyStart = offsetBuffer.getInt(thisIndex * OFFSET_WIDTH);\n-      from.valueBuffer.getBytes(start, this.valueBuffer, copyStart, length);\n+      from.getDataBuffer().getBytes(start, this.valueBuffer, copyStart, length);\n       offsetBuffer.setInt((thisIndex + 1) * OFFSET_WIDTH, copyStart + length);\n     }\n     lastSet = thisIndex;\n   }\n \n   /**\n-   * Same as {@link #copyFrom(int, int, BaseVariableWidthVector)} except that\n+   * Same as {@link #copyFrom(int, int, ValueVector)} except that\n    * it handles the case when the capacity of the vector needs to be expanded\n    * before copy.\n    *\n    * @param fromIndex position to copy from in source vector\n    * @param thisIndex position to copy to in this vector\n    * @param from source vector\n    */\n-  public void copyFromSafe(int fromIndex, int thisIndex, BaseVariableWidthVector from) {\n+  public void copyFromSafe(int fromIndex, int thisIndex, ValueVector from) {\n \n Review comment:\n   can we add something cheap, like checking the minorType ?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-31T09:11:19.782+0000",
                    "updated": "2019-07-31T09:11:19.782+0000",
                    "started": "2019-07-31T09:11:19.781+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "285612",
                    "issueId": "13246743"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246743/worklog/285718",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4931: ARROW-6021: [Java] Extract copyFrom and copyFromSafe methods to ValueVector interface\nURL: https://github.com/apache/arrow/pull/4931#discussion_r309193892\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n ##########\n @@ -1287,50 +1287,50 @@ public static ArrowBuf set(ArrowBuf buffer, BufferAllocator allocator,\n    * @param thisIndex position to copy to in this vector\n    * @param from source vector\n    */\n-  public void copyFrom(int fromIndex, int thisIndex, BaseVariableWidthVector from) {\n+  public void copyFrom(int fromIndex, int thisIndex, ValueVector from) {\n     if (from.isNull(fromIndex)) {\n       fillHoles(thisIndex);\n       BitVectorHelper.setValidityBit(this.validityBuffer, thisIndex, 0);\n       final int copyStart = offsetBuffer.getInt(thisIndex * OFFSET_WIDTH);\n       offsetBuffer.setInt((thisIndex + 1) * OFFSET_WIDTH, copyStart);\n     } else {\n-      final int start = from.offsetBuffer.getInt(fromIndex * OFFSET_WIDTH);\n-      final int end = from.offsetBuffer.getInt((fromIndex + 1) * OFFSET_WIDTH);\n+      final int start = from.getOffsetBuffer().getInt(fromIndex * OFFSET_WIDTH);\n+      final int end = from.getOffsetBuffer().getInt((fromIndex + 1) * OFFSET_WIDTH);\n       final int length = end - start;\n       fillHoles(thisIndex);\n       BitVectorHelper.setValidityBit(this.validityBuffer, thisIndex, 1);\n       final int copyStart = offsetBuffer.getInt(thisIndex * OFFSET_WIDTH);\n-      from.valueBuffer.getBytes(start, this.valueBuffer, copyStart, length);\n+      from.getDataBuffer().getBytes(start, this.valueBuffer, copyStart, length);\n       offsetBuffer.setInt((thisIndex + 1) * OFFSET_WIDTH, copyStart + length);\n     }\n     lastSet = thisIndex;\n   }\n \n   /**\n-   * Same as {@link #copyFrom(int, int, BaseVariableWidthVector)} except that\n+   * Same as {@link #copyFrom(int, int, ValueVector)} except that\n    * it handles the case when the capacity of the vector needs to be expanded\n    * before copy.\n    *\n    * @param fromIndex position to copy from in source vector\n    * @param thisIndex position to copy to in this vector\n    * @param from source vector\n    */\n-  public void copyFromSafe(int fromIndex, int thisIndex, BaseVariableWidthVector from) {\n+  public void copyFromSafe(int fromIndex, int thisIndex, ValueVector from) {\n \n Review comment:\n   Good suggestion. Thank you @pravindra \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-31T12:34:59.190+0000",
                    "updated": "2019-07-31T12:34:59.190+0000",
                    "started": "2019-07-31T12:34:59.189+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "285718",
                    "issueId": "13246743"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246743/worklog/286490",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #4931: ARROW-6021: [Java] Extract copyFrom and copyFromSafe methods to ValueVector interface\nURL: https://github.com/apache/arrow/pull/4931\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-01T07:11:41.398+0000",
                    "updated": "2019-08-01T07:11:41.398+0000",
                    "started": "2019-08-01T07:11:41.398+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "286490",
                    "issueId": "13246743"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246743/worklog/286493",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on issue #4931: ARROW-6021: [Java] Extract copyFrom and copyFromSafe methods to ValueVector interface\nURL: https://github.com/apache/arrow/pull/4931#issuecomment-517152394\n \n \n   thanks for the change, @liyafan82 \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-01T07:12:03.564+0000",
                    "updated": "2019-08-01T07:12:03.564+0000",
                    "started": "2019-08-01T07:12:03.564+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "286493",
                    "issueId": "13246743"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 9000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@79a896cf[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1f4c2701[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5f8c9ae9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2186da36[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@f7fcdee[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@16fd5902[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2d1dd2e6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3addfa19[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4bbc5011[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3775252d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@74bc5bc7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@21647a7b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9000,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Aug 01 07:11:42 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-08-01T07:11:42.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6021/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-07-24T07:33:34.000+0000",
        "updated": "2019-08-01T07:12:03.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently we have copyFrom and copyFromSafe methods in fixed-width and variable-width vectors. Extracting them to the common super interface will make it much more convenient to use them, and avoid unnecessary if-else statements.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Extract copyFrom and copyFromSafe methods to ValueVector interface",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13246743/comment/16897825",
                    "id": "16897825",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "body": "Issue resolved by pull request 4931\n[https://github.com/apache/arrow/pull/4931]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "created": "2019-08-01T07:11:42.405+0000",
                    "updated": "2019-08-01T07:11:42.405+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z04yuw:",
        "customfield_12314139": null
    }
}