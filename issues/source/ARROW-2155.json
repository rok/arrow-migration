{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13138493",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138493",
    "key": "ARROW-2155",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2155/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7862b010[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@46fd9360[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7d0091a3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@574c7bf0[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@796db7fb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@13847a85[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6af06cdf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5ed7098a[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4a11afc4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7af1b451[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@138eb944[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@757369e6[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Feb 15 15:10:04 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-02-15T15:09:59.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2155/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2018-02-14T14:00:33.000+0000",
        "updated": "2018-02-15T15:10:04.000+0000",
        "timeoriginalestimate": null,
        "description": "I'd expect it to return a mutable buffer:\r\n{code:python}\r\n>>> pa.frombuffer(bytearray(10)).is_mutable\r\nFalse\r\n{code}",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] pa.frombuffer(bytearray) returns immutable Buffer",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138493/comment/16364211",
                    "id": "16364211",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Agreed. I would expect this to respect the {{PyBuf_WRITABLE}} flag",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-02-14T15:08:35.752+0000",
                    "updated": "2018-02-14T15:08:35.752+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138493/comment/16364340",
                    "id": "16364340",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou opened a new pull request #1607: ARROW-2155: [Python] frombuffer() should respect mutability of argument\nURL: https://github.com/apache/arrow/pull/1607\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-14T16:09:25.441+0000",
                    "updated": "2018-02-14T16:09:25.441+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138493/comment/16364349",
                    "id": "16364349",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1607: ARROW-2155: [Python] frombuffer() should respect mutability of argument\nURL: https://github.com/apache/arrow/pull/1607#discussion_r168226882\n \n \n\n ##########\n File path: python/pyarrow/io.pxi\n ##########\n @@ -802,12 +802,12 @@ def frombuffer(object obj):\n     Construct an Arrow buffer from a Python bytes object\n     \"\"\"\n     cdef shared_ptr[CBuffer] buf\n-    try:\n-        memoryview(obj)\n-        buf.reset(new PyBuffer(obj))\n-        return pyarrow_wrap_buffer(buf)\n-    except TypeError:\n+    buf.reset(new PyBuffer(obj))\n+    if buf.get().data() == NULL:\n+        # XXX should be TypeError?  Can we find a way to propagate the\n \n Review comment:\n   @wesm What do you think about this? ValueError doesn't sound right here.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-14T16:16:52.460+0000",
                    "updated": "2018-02-14T16:16:52.460+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138493/comment/16364416",
                    "id": "16364416",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou opened a new pull request #1608: ARROW-2155: [Python] frombuffer() should respect mutability of argument (alternative solution)\nURL: https://github.com/apache/arrow/pull/1608\n \n \n   Also raise TypeError instead of ValueError for invalid arguments to frombuffer()\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-14T16:55:36.984+0000",
                    "updated": "2018-02-14T16:55:36.984+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138493/comment/16364417",
                    "id": "16364417",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1607: ARROW-2155: [Python] frombuffer() should respect mutability of argument\nURL: https://github.com/apache/arrow/pull/1607#discussion_r168240705\n \n \n\n ##########\n File path: python/pyarrow/io.pxi\n ##########\n @@ -802,12 +802,12 @@ def frombuffer(object obj):\n     Construct an Arrow buffer from a Python bytes object\n     \"\"\"\n     cdef shared_ptr[CBuffer] buf\n-    try:\n-        memoryview(obj)\n-        buf.reset(new PyBuffer(obj))\n-        return pyarrow_wrap_buffer(buf)\n-    except TypeError:\n+    buf.reset(new PyBuffer(obj))\n+    if buf.get().data() == NULL:\n+        # XXX should be TypeError?  Can we find a way to propagate the\n \n Review comment:\n   I opened PR #1607 for a TypeError-based solution.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-14T16:56:07.554+0000",
                    "updated": "2018-02-14T16:56:07.554+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138493/comment/16364750",
                    "id": "16364750",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1608: ARROW-2155: [Python] frombuffer() should respect mutability of argument (alternative solution)\nURL: https://github.com/apache/arrow/pull/1608#discussion_r168303091\n \n \n\n ##########\n File path: cpp/src/arrow/python/common.cc\n ##########\n @@ -47,22 +48,37 @@ MemoryPool* get_memory_pool() {\n // ----------------------------------------------------------------------\n // PyBuffer\n \n-PyBuffer::PyBuffer(PyObject* obj) : Buffer(nullptr, 0), obj_(nullptr) {\n-  if (PyObject_CheckBuffer(obj)) {\n-    obj_ = PyMemoryView_FromObject(obj);\n-    Py_buffer* buffer = PyMemoryView_GET_BUFFER(obj_);\n-    data_ = reinterpret_cast<const uint8_t*>(buffer->buf);\n-    size_ = buffer->len;\n-    capacity_ = buffer->len;\n-    is_mutable_ = false;\n+PyBuffer::PyBuffer() : Buffer(nullptr, 0) {}\n+\n+PyBuffer::PyBuffer(PyObject* obj) : Buffer(nullptr, 0) {\n+  // Cannot propagate error upwards\n+  (void)Init(obj);\n \n Review comment:\n   This suggests we should make the ctors private and add a static alternative constructor `Status PyBuffer::FromPyObject(PyObject* obj, std::shared_ptr<Buffer>* out)` or something. This can be declared as `@staticmethod` in Cython\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-14T20:41:57.422+0000",
                    "updated": "2018-02-14T20:41:57.422+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138493/comment/16364883",
                    "id": "16364883",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1608: ARROW-2155: [Python] frombuffer() should respect mutability of argument (alternative solution)\nURL: https://github.com/apache/arrow/pull/1608#discussion_r168334217\n \n \n\n ##########\n File path: cpp/src/arrow/python/common.cc\n ##########\n @@ -47,22 +48,37 @@ MemoryPool* get_memory_pool() {\n // ----------------------------------------------------------------------\n // PyBuffer\n \n-PyBuffer::PyBuffer(PyObject* obj) : Buffer(nullptr, 0), obj_(nullptr) {\n-  if (PyObject_CheckBuffer(obj)) {\n-    obj_ = PyMemoryView_FromObject(obj);\n-    Py_buffer* buffer = PyMemoryView_GET_BUFFER(obj_);\n-    data_ = reinterpret_cast<const uint8_t*>(buffer->buf);\n-    size_ = buffer->len;\n-    capacity_ = buffer->len;\n-    is_mutable_ = false;\n+PyBuffer::PyBuffer() : Buffer(nullptr, 0) {}\n+\n+PyBuffer::PyBuffer(PyObject* obj) : Buffer(nullptr, 0) {\n+  // Cannot propagate error upwards\n+  (void)Init(obj);\n \n Review comment:\n   From what I can see the explicit constructor is required by the PyBytesReader constructor implementation:\r\n   ```\r\n   PyBytesReader::PyBytesReader(PyObject* obj)\r\n       : io::BufferReader(std::make_shared<PyBuffer>(obj)) {}\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-14T22:42:38.261+0000",
                    "updated": "2018-02-14T22:42:38.261+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138493/comment/16364915",
                    "id": "16364915",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1608: ARROW-2155: [Python] frombuffer() should respect mutability of argument (alternative solution)\nURL: https://github.com/apache/arrow/pull/1608#discussion_r168339620\n \n \n\n ##########\n File path: cpp/src/arrow/python/common.cc\n ##########\n @@ -47,22 +48,37 @@ MemoryPool* get_memory_pool() {\n // ----------------------------------------------------------------------\n // PyBuffer\n \n-PyBuffer::PyBuffer(PyObject* obj) : Buffer(nullptr, 0), obj_(nullptr) {\n-  if (PyObject_CheckBuffer(obj)) {\n-    obj_ = PyMemoryView_FromObject(obj);\n-    Py_buffer* buffer = PyMemoryView_GET_BUFFER(obj_);\n-    data_ = reinterpret_cast<const uint8_t*>(buffer->buf);\n-    size_ = buffer->len;\n-    capacity_ = buffer->len;\n-    is_mutable_ = false;\n+PyBuffer::PyBuffer() : Buffer(nullptr, 0) {}\n+\n+PyBuffer::PyBuffer(PyObject* obj) : Buffer(nullptr, 0) {\n+  // Cannot propagate error upwards\n+  (void)Init(obj);\n \n Review comment:\n   I see. Then `PyBytesReader` will need to change, too (since making a `PyBuffer` can fail). Let me know if I can help\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-14T23:07:43.096+0000",
                    "updated": "2018-02-14T23:07:43.096+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138493/comment/16365413",
                    "id": "16365413",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1608: ARROW-2155: [Python] frombuffer() should respect mutability of argument (alternative solution)\nURL: https://github.com/apache/arrow/pull/1608#discussion_r168447869\n \n \n\n ##########\n File path: cpp/src/arrow/python/common.cc\n ##########\n @@ -47,22 +48,37 @@ MemoryPool* get_memory_pool() {\n // ----------------------------------------------------------------------\n // PyBuffer\n \n-PyBuffer::PyBuffer(PyObject* obj) : Buffer(nullptr, 0), obj_(nullptr) {\n-  if (PyObject_CheckBuffer(obj)) {\n-    obj_ = PyMemoryView_FromObject(obj);\n-    Py_buffer* buffer = PyMemoryView_GET_BUFFER(obj_);\n-    data_ = reinterpret_cast<const uint8_t*>(buffer->buf);\n-    size_ = buffer->len;\n-    capacity_ = buffer->len;\n-    is_mutable_ = false;\n+PyBuffer::PyBuffer() : Buffer(nullptr, 0) {}\n+\n+PyBuffer::PyBuffer(PyObject* obj) : Buffer(nullptr, 0) {\n+  // Cannot propagate error upwards\n+  (void)Init(obj);\n \n Review comment:\n   Ok, done. As a side effect, this removes the `PyBytesReader` class which is not needed anymore (you can simply construct a `BufferReader` from the given `PyBuffer` pointer).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-15T11:25:33.277+0000",
                    "updated": "2018-02-15T11:25:33.277+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138493/comment/16365430",
                    "id": "16365430",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou closed pull request #1607: ARROW-2155: [Python] frombuffer() should respect mutability of argument\nURL: https://github.com/apache/arrow/pull/1607\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/python/common.cc b/cpp/src/arrow/python/common.cc\nindex 14a8ae6fd..2699d51ba 100644\n--- a/cpp/src/arrow/python/common.cc\n+++ b/cpp/src/arrow/python/common.cc\n@@ -23,6 +23,7 @@\n \n #include \"arrow/memory_pool.h\"\n #include \"arrow/status.h\"\n+#include \"arrow/util/logging.h\"\n \n namespace arrow {\n namespace py {\n@@ -47,20 +48,25 @@ MemoryPool* get_memory_pool() {\n // ----------------------------------------------------------------------\n // PyBuffer\n \n-PyBuffer::PyBuffer(PyObject* obj) : Buffer(nullptr, 0), obj_(nullptr) {\n-  if (PyObject_CheckBuffer(obj)) {\n-    obj_ = PyMemoryView_FromObject(obj);\n-    Py_buffer* buffer = PyMemoryView_GET_BUFFER(obj_);\n-    data_ = reinterpret_cast<const uint8_t*>(buffer->buf);\n-    size_ = buffer->len;\n-    capacity_ = buffer->len;\n-    is_mutable_ = false;\n+PyBuffer::PyBuffer(PyObject* obj) : Buffer(nullptr, 0) {\n+  if (!PyObject_GetBuffer(obj, &py_buf_, PyBUF_ANY_CONTIGUOUS)) {\n+    data_ = reinterpret_cast<const uint8_t*>(py_buf_.buf);\n+    DCHECK(data_ != nullptr);\n+    size_ = py_buf_.len;\n+    capacity_ = py_buf_.len;\n+    is_mutable_ = !py_buf_.readonly;\n+  } else {\n+    // Cannot propagate error directly, caller should check the data_\n+    // field for null\n+    PyErr_Clear();\n   }\n }\n \n PyBuffer::~PyBuffer() {\n-  PyAcquireGIL lock;\n-  Py_XDECREF(obj_);\n+  if (data_ != nullptr) {\n+    PyAcquireGIL lock;\n+    PyBuffer_Release(&py_buf_);\n+  }\n }\n \n Status CheckPyError(StatusCode code) {\ndiff --git a/cpp/src/arrow/python/common.h b/cpp/src/arrow/python/common.h\nindex b1e0888af..59d2c4808 100644\n--- a/cpp/src/arrow/python/common.h\n+++ b/cpp/src/arrow/python/common.h\n@@ -142,13 +142,13 @@ class ARROW_EXPORT PyBuffer : public Buffer {\n  public:\n   /// Note that the GIL must be held when calling the PyBuffer constructor.\n   ///\n-  /// While memoryview objects support multi-demensional buffers, PyBuffer only supports\n+  /// While memoryview objects support multi-dimensional buffers, PyBuffer only supports\n   /// one-dimensional byte buffers.\n   explicit PyBuffer(PyObject* obj);\n   ~PyBuffer();\n \n  private:\n-  PyObject* obj_;\n+  Py_buffer py_buf_;\n };\n \n }  // namespace py\ndiff --git a/python/pyarrow/io.pxi b/python/pyarrow/io.pxi\nindex bd508cf57..2d9c7f413 100644\n--- a/python/pyarrow/io.pxi\n+++ b/python/pyarrow/io.pxi\n@@ -802,12 +802,12 @@ def frombuffer(object obj):\n     Construct an Arrow buffer from a Python bytes object\n     \"\"\"\n     cdef shared_ptr[CBuffer] buf\n-    try:\n-        memoryview(obj)\n-        buf.reset(new PyBuffer(obj))\n-        return pyarrow_wrap_buffer(buf)\n-    except TypeError:\n+    buf.reset(new PyBuffer(obj))\n+    if buf.get().data() == NULL:\n+        # XXX should be TypeError?  Can we find a way to propagate the\n+        # original error instead?\n         raise ValueError('Must pass object that implements buffer protocol')\n+    return pyarrow_wrap_buffer(buf)\n \n \n cdef get_reader(object source, shared_ptr[RandomAccessFile]* reader):\ndiff --git a/python/pyarrow/tests/test_io.py b/python/pyarrow/tests/test_io.py\nindex da26b101d..fd3744c18 100644\n--- a/python/pyarrow/tests/test_io.py\n+++ b/python/pyarrow/tests/test_io.py\n@@ -132,6 +132,7 @@ def test_buffer_bytes():\n \n     buf = pa.frombuffer(val)\n     assert isinstance(buf, pa.Buffer)\n+    assert not buf.is_mutable\n \n     result = buf.to_pybytes()\n \n@@ -143,6 +144,7 @@ def test_buffer_memoryview():\n \n     buf = pa.frombuffer(val)\n     assert isinstance(buf, pa.Buffer)\n+    assert not buf.is_mutable\n \n     result = memoryview(buf)\n \n@@ -154,13 +156,19 @@ def test_buffer_bytearray():\n \n     buf = pa.frombuffer(val)\n     assert isinstance(buf, pa.Buffer)\n+    assert buf.is_mutable\n \n     result = bytearray(buf)\n \n     assert result == val\n \n \n-def test_buffer_numpy():\n+def test_buffer_invalid():\n+    with pytest.raises(ValueError, match=\"buffer protocol\"):\n+        pa.frombuffer(None)\n+\n+\n+def test_buffer_to_numpy():\n     # Make sure creating a numpy array from an arrow buffer works\n     byte_array = bytearray(20)\n     byte_array[0] = 42\n@@ -170,6 +178,19 @@ def test_buffer_numpy():\n     assert array.base == buf\n \n \n+def test_buffer_from_numpy():\n+    # C-contiguous\n+    arr = np.arange(12, dtype=np.int8).reshape((3, 4))\n+    buf = pa.frombuffer(arr)\n+    assert buf.to_pybytes() == arr.tobytes()\n+    # F-contiguous; note strides informations is lost\n+    buf = pa.frombuffer(arr.T)\n+    assert buf.to_pybytes() == arr.tobytes()\n+    # Non-contiguous\n+    with pytest.raises(ValueError, match=\"buffer protocol\"):\n+        buf = pa.frombuffer(arr.T[::2])\n+\n+\n def test_allocate_buffer():\n     buf = pa.allocate_buffer(100)\n     assert buf.size == 100\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-15T11:43:30.581+0000",
                    "updated": "2018-02-15T11:43:30.581+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138493/comment/16365516",
                    "id": "16365516",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on issue #1608: ARROW-2155: [Python] frombuffer() should respect mutability of argument\nURL: https://github.com/apache/arrow/pull/1608#issuecomment-365926963\n \n \n   AppVeyor build at https://ci.appveyor.com/project/pitrou/arrow/build/1.0.86\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-15T13:28:31.618+0000",
                    "updated": "2018-02-15T13:28:31.618+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138493/comment/16365695",
                    "id": "16365695",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1608: ARROW-2155: [Python] frombuffer() should respect mutability of argument\nURL: https://github.com/apache/arrow/pull/1608#discussion_r168503098\n \n \n\n ##########\n File path: cpp/src/arrow/python/common.cc\n ##########\n @@ -47,22 +48,37 @@ MemoryPool* get_memory_pool() {\n // ----------------------------------------------------------------------\n // PyBuffer\n \n-PyBuffer::PyBuffer(PyObject* obj) : Buffer(nullptr, 0), obj_(nullptr) {\n-  if (PyObject_CheckBuffer(obj)) {\n-    obj_ = PyMemoryView_FromObject(obj);\n-    Py_buffer* buffer = PyMemoryView_GET_BUFFER(obj_);\n-    data_ = reinterpret_cast<const uint8_t*>(buffer->buf);\n-    size_ = buffer->len;\n-    capacity_ = buffer->len;\n-    is_mutable_ = false;\n+PyBuffer::PyBuffer() : Buffer(nullptr, 0) {}\n+\n+PyBuffer::PyBuffer(PyObject* obj) : Buffer(nullptr, 0) {\n+  // Cannot propagate error upwards\n+  (void)Init(obj);\n \n Review comment:\n   SGTM\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-15T15:08:17.279+0000",
                    "updated": "2018-02-15T15:08:17.279+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138493/comment/16365696",
                    "id": "16365696",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1608: ARROW-2155: [Python] frombuffer() should respect mutability of argument\nURL: https://github.com/apache/arrow/pull/1608#issuecomment-365955604\n \n \n   +1, thanks @pitrou!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-15T15:09:42.627+0000",
                    "updated": "2018-02-15T15:09:42.627+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138493/comment/16365697",
                    "id": "16365697",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1608\n[https://github.com/apache/arrow/pull/1608]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-02-15T15:09:59.767+0000",
                    "updated": "2018-02-15T15:09:59.767+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13138493/comment/16365698",
                    "id": "16365698",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1608: ARROW-2155: [Python] frombuffer() should respect mutability of argument\nURL: https://github.com/apache/arrow/pull/1608\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/python/common.cc b/cpp/src/arrow/python/common.cc\nindex 14a8ae6fd..1ded88071 100644\n--- a/cpp/src/arrow/python/common.cc\n+++ b/cpp/src/arrow/python/common.cc\n@@ -23,6 +23,7 @@\n \n #include \"arrow/memory_pool.h\"\n #include \"arrow/status.h\"\n+#include \"arrow/util/logging.h\"\n \n namespace arrow {\n namespace py {\n@@ -47,22 +48,39 @@ MemoryPool* get_memory_pool() {\n // ----------------------------------------------------------------------\n // PyBuffer\n \n-PyBuffer::PyBuffer(PyObject* obj) : Buffer(nullptr, 0), obj_(nullptr) {\n-  if (PyObject_CheckBuffer(obj)) {\n-    obj_ = PyMemoryView_FromObject(obj);\n-    Py_buffer* buffer = PyMemoryView_GET_BUFFER(obj_);\n-    data_ = reinterpret_cast<const uint8_t*>(buffer->buf);\n-    size_ = buffer->len;\n-    capacity_ = buffer->len;\n-    is_mutable_ = false;\n+PyBuffer::PyBuffer() : Buffer(nullptr, 0) {}\n+\n+Status PyBuffer::Init(PyObject* obj) {\n+  if (!PyObject_GetBuffer(obj, &py_buf_, PyBUF_ANY_CONTIGUOUS)) {\n+    data_ = reinterpret_cast<const uint8_t*>(py_buf_.buf);\n+    DCHECK(data_ != nullptr);\n+    size_ = py_buf_.len;\n+    capacity_ = py_buf_.len;\n+    is_mutable_ = !py_buf_.readonly;\n+    return Status::OK();\n+  } else {\n+    return Status(StatusCode::PythonError, \"\");\n   }\n }\n \n+Status PyBuffer::FromPyObject(PyObject* obj, std::shared_ptr<Buffer>* out) {\n+  PyBuffer* buf = new PyBuffer();\n+  std::shared_ptr<Buffer> res(buf);\n+  RETURN_NOT_OK(buf->Init(obj));\n+  *out = res;\n+  return Status::OK();\n+}\n+\n PyBuffer::~PyBuffer() {\n-  PyAcquireGIL lock;\n-  Py_XDECREF(obj_);\n+  if (data_ != nullptr) {\n+    PyAcquireGIL lock;\n+    PyBuffer_Release(&py_buf_);\n+  }\n }\n \n+// ----------------------------------------------------------------------\n+// Python exception -> Status\n+\n Status CheckPyError(StatusCode code) {\n   if (PyErr_Occurred()) {\n     PyObject* exc_type = nullptr;\ndiff --git a/cpp/src/arrow/python/common.h b/cpp/src/arrow/python/common.h\nindex b1e0888af..269385c1a 100644\n--- a/cpp/src/arrow/python/common.h\n+++ b/cpp/src/arrow/python/common.h\n@@ -18,6 +18,7 @@\n #ifndef ARROW_PYTHON_COMMON_H\n #define ARROW_PYTHON_COMMON_H\n \n+#include <memory>\n #include <string>\n \n #include \"arrow/python/config.h\"\n@@ -140,15 +141,17 @@ ARROW_EXPORT MemoryPool* get_memory_pool();\n \n class ARROW_EXPORT PyBuffer : public Buffer {\n  public:\n-  /// Note that the GIL must be held when calling the PyBuffer constructor.\n-  ///\n-  /// While memoryview objects support multi-demensional buffers, PyBuffer only supports\n+  /// While memoryview objects support multi-dimensional buffers, PyBuffer only supports\n   /// one-dimensional byte buffers.\n-  explicit PyBuffer(PyObject* obj);\n   ~PyBuffer();\n \n+  static Status FromPyObject(PyObject* obj, std::shared_ptr<Buffer>* out);\n+\n  private:\n-  PyObject* obj_;\n+  PyBuffer();\n+  Status Init(PyObject*);\n+\n+  Py_buffer py_buf_;\n };\n \n }  // namespace py\ndiff --git a/cpp/src/arrow/python/io.cc b/cpp/src/arrow/python/io.cc\nindex 2cff04608..801a32574 100644\n--- a/cpp/src/arrow/python/io.cc\n+++ b/cpp/src/arrow/python/io.cc\n@@ -149,14 +149,11 @@ Status PyReadableFile::Read(int64_t nbytes, int64_t* bytes_read, void* out) {\n Status PyReadableFile::Read(int64_t nbytes, std::shared_ptr<Buffer>* out) {\n   PyAcquireGIL lock;\n \n-  PyObject* bytes_obj = NULL;\n-  ARROW_RETURN_NOT_OK(file_->Read(nbytes, &bytes_obj));\n-  DCHECK(bytes_obj != NULL);\n-\n-  *out = std::make_shared<PyBuffer>(bytes_obj);\n-  Py_XDECREF(bytes_obj);\n+  OwnedRef bytes_obj;\n+  ARROW_RETURN_NOT_OK(file_->Read(nbytes, bytes_obj.ref()));\n+  DCHECK(bytes_obj.obj() != NULL);\n \n-  return Status::OK();\n+  return PyBuffer::FromPyObject(bytes_obj.obj(), out);\n }\n \n Status PyReadableFile::ReadAt(int64_t position, int64_t nbytes, int64_t* bytes_read,\n@@ -219,13 +216,5 @@ Status PyOutputStream::Write(const void* data, int64_t nbytes) {\n   return file_->Write(data, nbytes);\n }\n \n-// ----------------------------------------------------------------------\n-// A readable file that is backed by a PyBuffer\n-\n-PyBytesReader::PyBytesReader(PyObject* obj)\n-    : io::BufferReader(std::make_shared<PyBuffer>(obj)) {}\n-\n-PyBytesReader::~PyBytesReader() {}\n-\n }  // namespace py\n }  // namespace arrow\ndiff --git a/cpp/src/arrow/python/io.h b/cpp/src/arrow/python/io.h\nindex 0632d28fa..648f6de06 100644\n--- a/cpp/src/arrow/python/io.h\n+++ b/cpp/src/arrow/python/io.h\n@@ -79,13 +79,6 @@ class ARROW_EXPORT PyOutputStream : public io::OutputStream {\n   int64_t position_;\n };\n \n-// A zero-copy reader backed by a PyBuffer object\n-class ARROW_EXPORT PyBytesReader : public io::BufferReader {\n- public:\n-  explicit PyBytesReader(PyObject* obj);\n-  virtual ~PyBytesReader();\n-};\n-\n // TODO(wesm): seekable output files\n \n }  // namespace py\ndiff --git a/cpp/src/arrow/python/python-test.cc b/cpp/src/arrow/python/python-test.cc\nindex d9919ee49..bcf89a4f6 100644\n--- a/cpp/src/arrow/python/python-test.cc\n+++ b/cpp/src/arrow/python/python-test.cc\n@@ -33,7 +33,14 @@\n namespace arrow {\n namespace py {\n \n-TEST(PyBuffer, InvalidInputObject) { PyBuffer buffer(Py_None); }\n+TEST(PyBuffer, InvalidInputObject) {\n+  std::shared_ptr<Buffer> res;\n+  PyObject* input = Py_None;\n+  auto old_refcnt = Py_REFCNT(input);\n+  ASSERT_RAISES(PythonError, PyBuffer::FromPyObject(input, &res));\n+  PyErr_Clear();\n+  ASSERT_EQ(old_refcnt, Py_REFCNT(input));\n+}\n \n class DecimalTest : public ::testing::Test {\n  public:\ndiff --git a/python/pyarrow/includes/libarrow.pxd b/python/pyarrow/includes/libarrow.pxd\nindex 2e83f0701..81cc4d276 100644\n--- a/python/pyarrow/includes/libarrow.pxd\n+++ b/python/pyarrow/includes/libarrow.pxd\n@@ -894,7 +894,8 @@ cdef extern from \"arrow/python/api.h\" namespace \"arrow::py\" nogil:\n         \" arrow::py::get_memory_pool\"()\n \n     cdef cppclass PyBuffer(CBuffer):\n-        PyBuffer(object o)\n+        @staticmethod\n+        CStatus FromPyObject(object obj, shared_ptr[CBuffer]* out)\n \n     cdef cppclass PyReadableFile(RandomAccessFile):\n         PyReadableFile(object fo)\n@@ -902,9 +903,6 @@ cdef extern from \"arrow/python/api.h\" namespace \"arrow::py\" nogil:\n     cdef cppclass PyOutputStream(OutputStream):\n         PyOutputStream(object fo)\n \n-    cdef cppclass PyBytesReader(CBufferReader):\n-        PyBytesReader(object fo)\n-\n     cdef struct PandasOptions:\n         c_bool strings_to_categorical\n         c_bool zero_copy_only\ndiff --git a/python/pyarrow/io.pxi b/python/pyarrow/io.pxi\nindex bd508cf57..b0996f85e 100644\n--- a/python/pyarrow/io.pxi\n+++ b/python/pyarrow/io.pxi\n@@ -802,12 +802,8 @@ def frombuffer(object obj):\n     Construct an Arrow buffer from a Python bytes object\n     \"\"\"\n     cdef shared_ptr[CBuffer] buf\n-    try:\n-        memoryview(obj)\n-        buf.reset(new PyBuffer(obj))\n-        return pyarrow_wrap_buffer(buf)\n-    except TypeError:\n-        raise ValueError('Must pass object that implements buffer protocol')\n+    check_status(PyBuffer.FromPyObject(obj, &buf))\n+    return pyarrow_wrap_buffer(buf)\n \n \n cdef get_reader(object source, shared_ptr[RandomAccessFile]* reader):\ndiff --git a/python/pyarrow/tests/test_io.py b/python/pyarrow/tests/test_io.py\nindex da26b101d..0947cb7c7 100644\n--- a/python/pyarrow/tests/test_io.py\n+++ b/python/pyarrow/tests/test_io.py\n@@ -104,7 +104,7 @@ def test_bytes_reader():\n \n \n def test_bytes_reader_non_bytes():\n-    with pytest.raises(ValueError):\n+    with pytest.raises(TypeError):\n         pa.BufferReader(u('some sample data'))\n \n \n@@ -132,6 +132,7 @@ def test_buffer_bytes():\n \n     buf = pa.frombuffer(val)\n     assert isinstance(buf, pa.Buffer)\n+    assert not buf.is_mutable\n \n     result = buf.to_pybytes()\n \n@@ -143,6 +144,7 @@ def test_buffer_memoryview():\n \n     buf = pa.frombuffer(val)\n     assert isinstance(buf, pa.Buffer)\n+    assert not buf.is_mutable\n \n     result = memoryview(buf)\n \n@@ -154,13 +156,20 @@ def test_buffer_bytearray():\n \n     buf = pa.frombuffer(val)\n     assert isinstance(buf, pa.Buffer)\n+    assert buf.is_mutable\n \n     result = bytearray(buf)\n \n     assert result == val\n \n \n-def test_buffer_numpy():\n+def test_buffer_invalid():\n+    with pytest.raises(TypeError,\n+                       match=\"(bytes-like object|buffer interface)\"):\n+        pa.frombuffer(None)\n+\n+\n+def test_buffer_to_numpy():\n     # Make sure creating a numpy array from an arrow buffer works\n     byte_array = bytearray(20)\n     byte_array[0] = 42\n@@ -170,6 +179,19 @@ def test_buffer_numpy():\n     assert array.base == buf\n \n \n+def test_buffer_from_numpy():\n+    # C-contiguous\n+    arr = np.arange(12, dtype=np.int8).reshape((3, 4))\n+    buf = pa.frombuffer(arr)\n+    assert buf.to_pybytes() == arr.tobytes()\n+    # F-contiguous; note strides informations is lost\n+    buf = pa.frombuffer(arr.T)\n+    assert buf.to_pybytes() == arr.tobytes()\n+    # Non-contiguous\n+    with pytest.raises(ValueError, match=\"not contiguous\"):\n+        buf = pa.frombuffer(arr.T[::2])\n+\n+\n def test_allocate_buffer():\n     buf = pa.allocate_buffer(100)\n     assert buf.size == 100\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-15T15:10:04.195+0000",
                    "updated": "2018-02-15T15:10:04.195+0000"
                }
            ],
            "maxResults": 15,
            "total": 15,
            "startAt": 0
        },
        "customfield_12311820": "0|i3q6h3:",
        "customfield_12314139": null
    }
}