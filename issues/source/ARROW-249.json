{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "12994652",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/12994652",
    "key": "ARROW-249",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343066",
                "id": "12343066",
                "description": "",
                "name": "0.11.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-10-08"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12477446",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12477446",
                "type": {
                    "id": "12310040",
                    "name": "Required",
                    "inward": "is required by",
                    "outward": "requires",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310040"
                },
                "outwardIssue": {
                    "id": "12996471",
                    "key": "ARROW-258",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12996471",
                    "fields": {
                        "summary": "[Format] clarify definition of Buffer in context of RPC, IPC, File",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jnadeau",
            "name": "jnadeau",
            "key": "jnadeau",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Jacques Nadeau",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334621",
                "id": "12334621",
                "name": "FlightRPC"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 26400,
            "total": 26400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 26400,
            "total": 26400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-249/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 48,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12994652/worklog/108400",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jacques-n opened a new pull request #2102: ARROW-249 [JAVA] Flight GRPC Implementation\nURL: https://github.com/apache/arrow/pull/2102\n \n \n   - A grpc defined protocol (flight.proto)\r\n   - A Java implementation of the GRPC-based FlightService framework\r\n   - An Example Java implementation of a FlightService that provides an in-memory store for Flight streams\r\n   - A short demo script to show how to use the FlightService from Java and Python\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-04T00:02:06.067+0000",
                    "updated": "2018-06-04T00:02:06.067+0000",
                    "started": "2018-06-04T00:02:06.066+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "108400",
                    "issueId": "12994652"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12994652/worklog/108405",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2102: ARROW-249: [JAVA] Flight GRPC Implementation\nURL: https://github.com/apache/arrow/pull/2102#issuecomment-394206902\n \n \n   Sweet! I will try to give some more detailed comments this week per our discussion on the last sync call. I hope to see a C++ implementation of this in the next couple months so we can push RPC into the integration test suite -- I may be able to find some time this summer to hack on it, would like to get a feel for the GRPC internals\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-04T00:46:29.203+0000",
                    "updated": "2018-06-04T00:46:29.203+0000",
                    "started": "2018-06-04T00:46:29.202+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "108405",
                    "issueId": "12994652"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12994652/worklog/125098",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jacques-n commented on issue #2102: ARROW-249: [JAVA] Flight GRPC Implementation\nURL: https://github.com/apache/arrow/pull/2102#issuecomment-406336556\n \n \n   Any feedback on this?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-19T16:27:06.332+0000",
                    "updated": "2018-07-19T16:27:06.332+0000",
                    "started": "2018-07-19T16:27:06.332+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125098",
                    "issueId": "12994652"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12994652/worklog/125099",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2102: ARROW-249: [JAVA] Flight GRPC Implementation\nURL: https://github.com/apache/arrow/pull/2102#issuecomment-406337931\n \n \n   I'll spend some time in the next few days. Sorry, have been totally buried in the 0.10.0 push\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-19T16:31:36.735+0000",
                    "updated": "2018-07-19T16:31:36.735+0000",
                    "started": "2018-07-19T16:31:36.735+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125099",
                    "issueId": "12994652"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12994652/worklog/127044",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2102: ARROW-249: [JAVA] Flight GRPC Implementation\nURL: https://github.com/apache/arrow/pull/2102#issuecomment-407622015\n \n \n   We're nearly out of the woods on 0.10.0. I have this next on deck once the hot potatoes there are dealt with\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-25T03:28:20.600+0000",
                    "updated": "2018-07-25T03:28:20.600+0000",
                    "started": "2018-07-25T03:28:20.599+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "127044",
                    "issueId": "12994652"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12994652/worklog/133046",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2102: ARROW-249: [JAVA] Flight GRPC Implementation\nURL: https://github.com/apache/arrow/pull/2102#issuecomment-411821756\n \n \n   OK. 0.10.0 is finally out. Going to spend some time reviewing this today\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-09T16:42:22.314+0000",
                    "updated": "2018-08-09T16:42:22.314+0000",
                    "started": "2018-08-09T16:42:22.313+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "133046",
                    "issueId": "12994652"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12994652/worklog/133418",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2102: ARROW-249: [JAVA] Flight GRPC Implementation\nURL: https://github.com/apache/arrow/pull/2102#discussion_r209117922\n \n \n\n ##########\n File path: java/flight/src/main/java/org/apache/arrow/flight/ArrowMessage.java\n ##########\n @@ -0,0 +1,314 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.arrow.flight;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.nio.ByteBuffer;\n+import java.util.List;\n+import org.apache.arrow.flatbuf.Message;\n+import org.apache.arrow.flatbuf.MessageHeader;\n+import org.apache.arrow.flatbuf.RecordBatch;\n+import org.apache.arrow.flight.grpc.AddWritableBuffer;\n+import org.apache.arrow.flight.grpc.GetReadableBuffer;\n+import org.apache.arrow.flight.impl.Flight.FlightData;\n+import org.apache.arrow.flight.impl.Flight.FlightDescriptor;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.ipc.message.ArrowRecordBatch;\n+import org.apache.arrow.vector.ipc.message.MessageSerializer;\n+import org.apache.arrow.vector.types.pojo.Schema;\n+\n+import com.google.common.base.Preconditions;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.Iterables;\n+import com.google.common.io.ByteStreams;\n+import com.google.flatbuffers.FlatBufferBuilder;\n+import com.google.protobuf.ByteString;\n+import com.google.protobuf.CodedInputStream;\n+import com.google.protobuf.CodedOutputStream;\n+import com.google.protobuf.WireFormat;\n+\n+import io.grpc.Drainable;\n+import io.grpc.MethodDescriptor;\n+import io.grpc.MethodDescriptor.Marshaller;\n+import io.grpc.internal.ReadableBuffer;\n+import io.grpc.protobuf.ProtoUtils;\n+import io.netty.buffer.ArrowBuf;\n+import io.netty.buffer.ByteBuf;\n+import io.netty.buffer.ByteBufInputStream;\n+import io.netty.buffer.CompositeByteBuf;\n+\n+/**\n+ * The in-memory representation of FlightData used to manage a stream of Arrow messages.\n+ */\n+class ArrowMessage {\n \n Review comment:\n   I guess this file will be somewhat affected by the recent refactor\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-10T01:03:42.686+0000",
                    "updated": "2018-08-10T01:03:42.686+0000",
                    "started": "2018-08-10T01:03:42.685+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "133418",
                    "issueId": "12994652"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12994652/worklog/133419",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2102: ARROW-249: [JAVA] Flight GRPC Implementation\nURL: https://github.com/apache/arrow/pull/2102#discussion_r209118290\n \n \n\n ##########\n File path: java/flight/src/main/java/org/apache/arrow/flight/Criteria.java\n ##########\n @@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.arrow.flight;\n+\n+import org.apache.arrow.flight.impl.Flight;\n+\n+public class Criteria {\n \n Review comment:\n   Not clear what this is supposed to do\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-10T01:03:42.729+0000",
                    "updated": "2018-08-10T01:03:42.729+0000",
                    "started": "2018-08-10T01:03:42.728+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "133419",
                    "issueId": "12994652"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12994652/worklog/133420",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2102: ARROW-249: [JAVA] Flight GRPC Implementation\nURL: https://github.com/apache/arrow/pull/2102#discussion_r209119504\n \n \n\n ##########\n File path: java/flight/src/main/java/org/apache/arrow/flight/grpc/AddWritableBuffer.java\n ##########\n @@ -0,0 +1,115 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.arrow.flight.grpc;\n+\n+import java.io.OutputStream;\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.Field;\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.util.List;\n+\n+import io.netty.buffer.ByteBuf;\n+\n+/**\n+ * Allow a user to add a ByteBuf based InputStream directly into GRPC WritableBuffer to avoid an\n+ * extra copy. This could be solved in GRPC by adding a ByteBufListable interface on InputStream and\n+ * letting BufferChainOutputStream take adavantage of it.\n+ */\n \n Review comment:\n   Dragons in here\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-10T01:03:42.747+0000",
                    "updated": "2018-08-10T01:03:42.747+0000",
                    "started": "2018-08-10T01:03:42.747+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "133420",
                    "issueId": "12994652"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12994652/worklog/133421",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2102: ARROW-249: [JAVA] Flight GRPC Implementation\nURL: https://github.com/apache/arrow/pull/2102#discussion_r209118078\n \n \n\n ##########\n File path: java/flight/src/main/java/org/apache/arrow/flight/ArrowMessage.java\n ##########\n @@ -0,0 +1,314 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.arrow.flight;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.nio.ByteBuffer;\n+import java.util.List;\n+import org.apache.arrow.flatbuf.Message;\n+import org.apache.arrow.flatbuf.MessageHeader;\n+import org.apache.arrow.flatbuf.RecordBatch;\n+import org.apache.arrow.flight.grpc.AddWritableBuffer;\n+import org.apache.arrow.flight.grpc.GetReadableBuffer;\n+import org.apache.arrow.flight.impl.Flight.FlightData;\n+import org.apache.arrow.flight.impl.Flight.FlightDescriptor;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.ipc.message.ArrowRecordBatch;\n+import org.apache.arrow.vector.ipc.message.MessageSerializer;\n+import org.apache.arrow.vector.types.pojo.Schema;\n+\n+import com.google.common.base.Preconditions;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.Iterables;\n+import com.google.common.io.ByteStreams;\n+import com.google.flatbuffers.FlatBufferBuilder;\n+import com.google.protobuf.ByteString;\n+import com.google.protobuf.CodedInputStream;\n+import com.google.protobuf.CodedOutputStream;\n+import com.google.protobuf.WireFormat;\n+\n+import io.grpc.Drainable;\n+import io.grpc.MethodDescriptor;\n+import io.grpc.MethodDescriptor.Marshaller;\n+import io.grpc.internal.ReadableBuffer;\n+import io.grpc.protobuf.ProtoUtils;\n+import io.netty.buffer.ArrowBuf;\n+import io.netty.buffer.ByteBuf;\n+import io.netty.buffer.ByteBufInputStream;\n+import io.netty.buffer.CompositeByteBuf;\n+\n+/**\n+ * The in-memory representation of FlightData used to manage a stream of Arrow messages.\n+ */\n+class ArrowMessage {\n+\n+  private static final int DESCRIPTOR_TAG = (FlightData.FLIGHT_DESCRIPTOR_FIELD_NUMBER << 3) | WireFormat.WIRETYPE_LENGTH_DELIMITED;\n+  private static final int BODY_TAG = (FlightData.DATA_BODY_FIELD_NUMBER << 3) | WireFormat.WIRETYPE_LENGTH_DELIMITED;\n+  private static final int HEADER_TAG = (FlightData.DATA_HEADER_FIELD_NUMBER << 3) | WireFormat.WIRETYPE_LENGTH_DELIMITED;\n+\n+  private static Marshaller<FlightData> NO_BODY_MARSHALLER = ProtoUtils.marshaller(FlightData.getDefaultInstance());\n+\n+  public static enum HeaderType {\n+    NONE,\n+    SCHEMA,\n+    DICTIONARY_BATCH,\n+    RECORD_BATCH,\n+    TENSOR\n+    ;\n+\n+    public static HeaderType getHeader(byte b) {\n+      switch(b) {\n+      case 0: return NONE;\n+      case 1: return SCHEMA;\n+      case 2: return DICTIONARY_BATCH;\n+      case 3: return RECORD_BATCH;\n+      case 4: return TENSOR;\n+      default:\n+        throw new UnsupportedOperationException(\"unknown type: \" + b);\n+      }\n+    }\n+\n+  }\n+  private final FlightDescriptor descriptor;\n+  private final Message message;\n+  private final List<ArrowBuf> bufs;\n+\n+  public ArrowMessage(FlightDescriptor descriptor, Schema schema) {\n+    FlatBufferBuilder builder = new FlatBufferBuilder();\n+    int schemaOffset = schema.getSchema(builder);\n+    ByteBuffer serializedMessage = MessageSerializer.serializeMessage(builder, MessageHeader.Schema, schemaOffset, 0);\n+    //serializedMessage.flip();\n+    message = Message.getRootAsMessage(serializedMessage);\n+    bufs = ImmutableList.of();\n+    this.descriptor = descriptor;\n+  }\n+\n+  public ArrowMessage(ArrowRecordBatch batch) {\n+    FlatBufferBuilder builder = new FlatBufferBuilder();\n+    int batchOffset = batch.writeTo(builder);\n+    ByteBuffer serializedMessage = MessageSerializer.serializeMessage(builder, MessageHeader.RecordBatch, batchOffset, batch.computeBodyLength());\n+    this.message = Message.getRootAsMessage(serializedMessage);\n+    this.bufs = ImmutableList.copyOf(batch.getBuffers());\n+    this.descriptor = null;\n+  }\n+\n+  private ArrowMessage(FlightDescriptor descriptor, Message message, ArrowBuf buf) {\n+    this.message = message;\n+    this.descriptor = descriptor;\n+    this.bufs = buf == null ? ImmutableList.of() : ImmutableList.of(buf);\n+  }\n+\n+  public FlightDescriptor getDescriptor() {\n+    return descriptor;\n+  }\n+\n+  public HeaderType getMessageType() {\n+    return HeaderType.getHeader(message.headerType());\n+  }\n+\n+  public Message asSchemaMessage() {\n+    return message;\n+  }\n+\n+  public Schema asSchema() {\n+    Preconditions.checkArgument(bufs.size() == 0);\n+    Preconditions.checkArgument(getMessageType() == HeaderType.SCHEMA);\n+    org.apache.arrow.flatbuf.Schema schema = new org.apache.arrow.flatbuf.Schema();\n+    message.header(schema);\n+    return Schema.convertSchema(schema);\n+  }\n+\n+  public ArrowRecordBatch asRecordBatch() throws IOException {\n+    Preconditions.checkArgument(bufs.size() == 1, \"A batch can only be consumed if it contains a single ArrowBuf.\");\n+    Preconditions.checkArgument(getMessageType() == HeaderType.RECORD_BATCH);\n+    RecordBatch recordBatch = new RecordBatch();\n+    message.header(recordBatch);\n+    ArrowBuf underlying = bufs.get(0);\n+    ArrowRecordBatch batch = MessageSerializer.deserializeRecordBatch(recordBatch, underlying);\n+    return batch;\n+  }\n+\n+  public Iterable<ArrowBuf> getBufs(){\n+    return Iterables.unmodifiableIterable(bufs);\n+  }\n+\n+  private static ArrowMessage frame(BufferAllocator allocator, final InputStream stream) {\n+\n+    try {\n+      FlightDescriptor descriptor = null;\n+      Message header = null;\n+      ArrowBuf body = null;\n+      while(stream.available() > 0) {\n+        int tag = readRawVarint32(stream);\n+        switch(tag) {\n+\n+        case DESCRIPTOR_TAG: {\n+          int size = readRawVarint32(stream);\n+          byte[] bytes = new byte[size];\n+          ByteStreams.readFully(stream, bytes);\n+          descriptor = FlightDescriptor.parseFrom(bytes);\n+          break;\n+        }\n+        case HEADER_TAG: {\n+          int size = readRawVarint32(stream);\n+          byte[] bytes = new byte[size];\n+          ByteStreams.readFully(stream, bytes);\n+          header = Message.getRootAsMessage(ByteBuffer.wrap(bytes));\n+          break;\n+        }\n+        case BODY_TAG:\n+          if(body != null) {\n+            // only read last body.\n+            body.release();\n+            body = null;\n+          }\n+          int size = readRawVarint32(stream);\n+          body = allocator.buffer(size);\n+          ReadableBuffer readableBuffer = GetReadableBuffer.getReadableBuffer(stream);\n+          if(readableBuffer != null) {\n+            readableBuffer.readBytes(body.nioBuffer(0, size));\n+          } else {\n+            byte[] heapBytes = new byte[size];\n+            ByteStreams.readFully(stream, heapBytes);\n+            body.writeBytes(heapBytes);\n+          }\n+          body.writerIndex(size);\n+          break;\n+\n+        default:\n+          // ignore unknown fields.\n+        }\n+      }\n+\n+      return new ArrowMessage(descriptor, header, body);\n+    } catch (Exception ioe) {\n+      throw new RuntimeException(ioe);\n+    }\n+\n+  }\n+\n+  private static int readRawVarint32(InputStream is) throws IOException {\n+    int firstByte = is.read();\n+    return CodedInputStream.readRawVarint32(firstByte, is);\n+  }\n+\n+  /**\n+   * Convert the ArrowMessage to an InputStream.\n+   * @return\n+   */\n+  private InputStream asInputStream(BufferAllocator allocator) {\n+    try {\n+\n+      final ByteString bytes = ByteString.copyFrom(message.getByteBuffer(), message.getByteBuffer().remaining());\n+\n+\n+      if(getMessageType() == HeaderType.SCHEMA) {\n+\n+        final FlightData.Builder builder = FlightData.newBuilder()\n+            .setDataHeader(bytes);\n+\n+        if(descriptor != null) {\n+          builder.setFlightDescriptor(descriptor);\n+        }\n+\n+        Preconditions.checkArgument(bufs.isEmpty());\n+        return NO_BODY_MARSHALLER.stream(builder.build());\n+      }\n+\n+      Preconditions.checkArgument(getMessageType() == HeaderType.RECORD_BATCH);\n+      Preconditions.checkArgument(!bufs.isEmpty());\n+      Preconditions.checkArgument(descriptor == null, \"Descriptor should only be included in the schema message.\");\n+\n+      ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+      CodedOutputStream cos = CodedOutputStream.newInstance(baos);\n+      cos.writeBytes(FlightData.DATA_HEADER_FIELD_NUMBER, bytes);\n+      cos.writeTag(FlightData.DATA_BODY_FIELD_NUMBER, WireFormat.WIRETYPE_LENGTH_DELIMITED);\n \n Review comment:\n   Protobuf in C++ has similarly named interfaces; it probably won't be too bad to do this there\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-10T01:03:42.800+0000",
                    "updated": "2018-08-10T01:03:42.800+0000",
                    "started": "2018-08-10T01:03:42.800+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "133421",
                    "issueId": "12994652"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12994652/worklog/133422",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2102: ARROW-249: [JAVA] Flight GRPC Implementation\nURL: https://github.com/apache/arrow/pull/2102#discussion_r209120233\n \n \n\n ##########\n File path: java/flight/src/main/protobuf/flight.proto\n ##########\n @@ -0,0 +1,111 @@\n+syntax = \"proto3\";\n+\n+option java_package = \"org.apache.arrow.flight.impl\";\n+\n+service FlightService {\n+\n+  // get a list of available streams.\n+  rpc ListFlights(Criteria) returns (stream FlightGetInfo) {}\n+  \n+    // get a list of available streams.\n+  rpc GetFlightInfo(FlightDescriptor) returns (FlightGetInfo) {}\n+  \n+  // get stream data.\n+  rpc DoGet(Ticket) returns (stream FlightData) {}\n+\n+  // create or append a stream. \n+  rpc DoPut(stream FlightData) returns (PutResult) {}\n+  \n+  rpc DoAction(Action) returns (Result) {}\n+  \n+  rpc ListActions(Empty) returns (stream ActionType) {}\n+  \n+}\n+\n+message Empty {}\n+\n+message ActionType {\n+  string type = 1;\n+  string description = 2;\n+}\n+\n+message Criteria {\n+  // TODO: criteria pattern to be added.\n+  int64 slice_target = 1;  \n+}\n+\n+message Action {\n+  string type = 1;\n+  bytes body = 2;\n+}\n+\n+message Result {\n+  string type = 1;\n+  bytes body = 2;\n+}\n+\n+message FlightDescriptor {\n+  enum DescriptorType {\n+    UNKNOWN = 0;\n+    PATH = 1;\n+    CMD = 2;\n+  }\n+  \n+  DescriptorType type = 1;\n+  string cmd = 2;\n+  repeated string path = 3;\n+}\n+\n+message FlightGetInfo {\n+  // schema of the dataset as described in Schema.fbs::Schema\n+  bytes schema = 1;\n+  \n+  FlightDescriptor flight_descriptor = 2;\n+  \n+  repeated FlightEndpoint endpoint = 3;\n+  \n+  uint64 total_records = 4;\n \n Review comment:\n   This is called `length` in other parts of Arrow, could also call `total_rows`. not sure how important it is to standardize the terminology\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-10T01:03:42.827+0000",
                    "updated": "2018-08-10T01:03:42.827+0000",
                    "started": "2018-08-10T01:03:42.827+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "133422",
                    "issueId": "12994652"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12994652/worklog/133424",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2102: ARROW-249: [JAVA] Flight GRPC Implementation\nURL: https://github.com/apache/arrow/pull/2102#discussion_r209119617\n \n \n\n ##########\n File path: java/flight/src/main/protobuf/flight.proto\n ##########\n @@ -0,0 +1,111 @@\n+syntax = \"proto3\";\n+\n+option java_package = \"org.apache.arrow.flight.impl\";\n+\n+service FlightService {\n+\n+  // get a list of available streams.\n+  rpc ListFlights(Criteria) returns (stream FlightGetInfo) {}\n+  \n+    // get a list of available streams.\n+  rpc GetFlightInfo(FlightDescriptor) returns (FlightGetInfo) {}\n+  \n+  // get stream data.\n+  rpc DoGet(Ticket) returns (stream FlightData) {}\n+\n+  // create or append a stream. \n+  rpc DoPut(stream FlightData) returns (PutResult) {}\n+  \n+  rpc DoAction(Action) returns (Result) {}\n+  \n+  rpc ListActions(Empty) returns (stream ActionType) {}\n+  \n+}\n+\n+message Empty {}\n+\n+message ActionType {\n \n Review comment:\n   Is the thinking to make it easy to add new actions?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-10T01:03:42.880+0000",
                    "updated": "2018-08-10T01:03:42.880+0000",
                    "started": "2018-08-10T01:03:42.880+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "133424",
                    "issueId": "12994652"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12994652/worklog/133423",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2102: ARROW-249: [JAVA] Flight GRPC Implementation\nURL: https://github.com/apache/arrow/pull/2102#discussion_r209120371\n \n \n\n ##########\n File path: java/flight/src/main/protobuf/flight.proto\n ##########\n @@ -0,0 +1,111 @@\n+syntax = \"proto3\";\n+\n+option java_package = \"org.apache.arrow.flight.impl\";\n+\n+service FlightService {\n+\n+  // get a list of available streams.\n+  rpc ListFlights(Criteria) returns (stream FlightGetInfo) {}\n+  \n+    // get a list of available streams.\n+  rpc GetFlightInfo(FlightDescriptor) returns (FlightGetInfo) {}\n+  \n+  // get stream data.\n+  rpc DoGet(Ticket) returns (stream FlightData) {}\n+\n+  // create or append a stream. \n+  rpc DoPut(stream FlightData) returns (PutResult) {}\n+  \n+  rpc DoAction(Action) returns (Result) {}\n+  \n+  rpc ListActions(Empty) returns (stream ActionType) {}\n+  \n+}\n+\n+message Empty {}\n+\n+message ActionType {\n+  string type = 1;\n+  string description = 2;\n+}\n+\n+message Criteria {\n+  // TODO: criteria pattern to be added.\n+  int64 slice_target = 1;  \n+}\n+\n+message Action {\n+  string type = 1;\n+  bytes body = 2;\n+}\n+\n+message Result {\n+  string type = 1;\n+  bytes body = 2;\n+}\n+\n+message FlightDescriptor {\n+  enum DescriptorType {\n+    UNKNOWN = 0;\n+    PATH = 1;\n+    CMD = 2;\n+  }\n+  \n+  DescriptorType type = 1;\n+  string cmd = 2;\n+  repeated string path = 3;\n+}\n+\n+message FlightGetInfo {\n+  // schema of the dataset as described in Schema.fbs::Schema\n+  bytes schema = 1;\n+  \n+  FlightDescriptor flight_descriptor = 2;\n+  \n+  repeated FlightEndpoint endpoint = 3;\n \n Review comment:\n   Does this mean that a flight could come from multiple servers (each of which has a different part of the dataset, kind of a bit-torrent type approach), or multiple servers can provide the whole flight (in a highly available scenario)?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-10T01:03:42.880+0000",
                    "updated": "2018-08-10T01:03:42.880+0000",
                    "started": "2018-08-10T01:03:42.879+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "133423",
                    "issueId": "12994652"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12994652/worklog/133425",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2102: ARROW-249: [JAVA] Flight GRPC Implementation\nURL: https://github.com/apache/arrow/pull/2102#discussion_r209120528\n \n \n\n ##########\n File path: java/flight/src/main/protobuf/flight.proto\n ##########\n @@ -0,0 +1,111 @@\n+syntax = \"proto3\";\n+\n+option java_package = \"org.apache.arrow.flight.impl\";\n+\n+service FlightService {\n+\n+  // get a list of available streams.\n+  rpc ListFlights(Criteria) returns (stream FlightGetInfo) {}\n+  \n+    // get a list of available streams.\n+  rpc GetFlightInfo(FlightDescriptor) returns (FlightGetInfo) {}\n+  \n+  // get stream data.\n+  rpc DoGet(Ticket) returns (stream FlightData) {}\n+\n+  // create or append a stream. \n+  rpc DoPut(stream FlightData) returns (PutResult) {}\n+  \n+  rpc DoAction(Action) returns (Result) {}\n+  \n+  rpc ListActions(Empty) returns (stream ActionType) {}\n+  \n+}\n+\n+message Empty {}\n+\n+message ActionType {\n+  string type = 1;\n+  string description = 2;\n+}\n+\n+message Criteria {\n+  // TODO: criteria pattern to be added.\n+  int64 slice_target = 1;  \n+}\n+\n+message Action {\n+  string type = 1;\n+  bytes body = 2;\n+}\n+\n+message Result {\n+  string type = 1;\n+  bytes body = 2;\n+}\n+\n+message FlightDescriptor {\n+  enum DescriptorType {\n+    UNKNOWN = 0;\n+    PATH = 1;\n+    CMD = 2;\n+  }\n+  \n+  DescriptorType type = 1;\n+  string cmd = 2;\n+  repeated string path = 3;\n+}\n+\n+message FlightGetInfo {\n+  // schema of the dataset as described in Schema.fbs::Schema\n+  bytes schema = 1;\n+  \n+  FlightDescriptor flight_descriptor = 2;\n+  \n+  repeated FlightEndpoint endpoint = 3;\n+  \n+  uint64 total_records = 4;\n+  uint64 total_bytes = 5;\n+}\n+\n+message FlightPutRequest {\n+  FlightDescriptor flight_descriptor = 1;\n+  \n+  // schema of the dataset as described in Schema.fbs::Schema\n+  bytes schema = 2;\n+  \n+  int32 ticket_count = 3;\n+}\n+\n+message FlightPutInstruction {\n+  repeated Ticket ticket = 1;\n+}\n+\n+message FlightEndpoint {\n+  Ticket ticket = 1;\n+  Location location = 2;\n+}\n+\n+message Location {\n+  string host = 1;\n+  int32 port = 2;\n+}\n+\n+// An opaque, split identifier.\n+message Ticket {\n \n Review comment:\n   Is the only way to get a ticket to use GetFlightInfo?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-10T01:03:42.893+0000",
                    "updated": "2018-08-10T01:03:42.893+0000",
                    "started": "2018-08-10T01:03:42.893+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "133425",
                    "issueId": "12994652"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12994652/worklog/133426",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2102: ARROW-249: [JAVA] Flight GRPC Implementation\nURL: https://github.com/apache/arrow/pull/2102#discussion_r209119985\n \n \n\n ##########\n File path: java/flight/src/main/protobuf/flight.proto\n ##########\n @@ -0,0 +1,111 @@\n+syntax = \"proto3\";\n+\n+option java_package = \"org.apache.arrow.flight.impl\";\n+\n+service FlightService {\n+\n+  // get a list of available streams.\n+  rpc ListFlights(Criteria) returns (stream FlightGetInfo) {}\n+  \n+    // get a list of available streams.\n+  rpc GetFlightInfo(FlightDescriptor) returns (FlightGetInfo) {}\n+  \n+  // get stream data.\n+  rpc DoGet(Ticket) returns (stream FlightData) {}\n+\n+  // create or append a stream. \n+  rpc DoPut(stream FlightData) returns (PutResult) {}\n+  \n+  rpc DoAction(Action) returns (Result) {}\n+  \n+  rpc ListActions(Empty) returns (stream ActionType) {}\n+  \n+}\n+\n+message Empty {}\n+\n+message ActionType {\n+  string type = 1;\n+  string description = 2;\n+}\n+\n+message Criteria {\n+  // TODO: criteria pattern to be added.\n+  int64 slice_target = 1;  \n+}\n+\n+message Action {\n+  string type = 1;\n+  bytes body = 2;\n+}\n+\n+message Result {\n+  string type = 1;\n+  bytes body = 2;\n+}\n+\n+message FlightDescriptor {\n+  enum DescriptorType {\n+    UNKNOWN = 0;\n+    PATH = 1;\n+    CMD = 2;\n+  }\n+  \n+  DescriptorType type = 1;\n \n Review comment:\n   What's the difference between PATH and CMD?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-10T01:03:42.895+0000",
                    "updated": "2018-08-10T01:03:42.895+0000",
                    "started": "2018-08-10T01:03:42.894+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "133426",
                    "issueId": "12994652"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12994652/worklog/133427",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2102: ARROW-249: [JAVA] Flight GRPC Implementation\nURL: https://github.com/apache/arrow/pull/2102#discussion_r209120108\n \n \n\n ##########\n File path: java/flight/src/main/protobuf/flight.proto\n ##########\n @@ -0,0 +1,111 @@\n+syntax = \"proto3\";\n+\n+option java_package = \"org.apache.arrow.flight.impl\";\n+\n+service FlightService {\n+\n+  // get a list of available streams.\n+  rpc ListFlights(Criteria) returns (stream FlightGetInfo) {}\n+  \n+    // get a list of available streams.\n+  rpc GetFlightInfo(FlightDescriptor) returns (FlightGetInfo) {}\n+  \n+  // get stream data.\n+  rpc DoGet(Ticket) returns (stream FlightData) {}\n+\n+  // create or append a stream. \n+  rpc DoPut(stream FlightData) returns (PutResult) {}\n+  \n+  rpc DoAction(Action) returns (Result) {}\n+  \n+  rpc ListActions(Empty) returns (stream ActionType) {}\n+  \n+}\n+\n+message Empty {}\n+\n+message ActionType {\n+  string type = 1;\n+  string description = 2;\n+}\n+\n+message Criteria {\n+  // TODO: criteria pattern to be added.\n+  int64 slice_target = 1;  \n+}\n+\n+message Action {\n+  string type = 1;\n+  bytes body = 2;\n+}\n+\n+message Result {\n+  string type = 1;\n+  bytes body = 2;\n+}\n+\n+message FlightDescriptor {\n \n Review comment:\n   How is authorization handled? Does that happen when a client connects to the service? What if a client can only see a redacted schema based on their security credentials?\r\n   \r\n   I don't think Arrow Flight is going to be able to deal directly with auth, but we might add an optional security token field to the protos \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-10T01:03:42.898+0000",
                    "updated": "2018-08-10T01:03:42.898+0000",
                    "started": "2018-08-10T01:03:42.898+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "133427",
                    "issueId": "12994652"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12994652/worklog/137969",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on a change in pull request #2102: ARROW-249: [JAVA] Flight GRPC Implementation\nURL: https://github.com/apache/arrow/pull/2102#discussion_r212751447\n \n \n\n ##########\n File path: java/flight/src/main/java/org/apache/arrow/flight/VectorRoot.java\n ##########\n @@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.arrow.flight;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.VectorSchemaRoot;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.Schema;\n+\n+import com.google.common.collect.ImmutableList;\n+\n+public class VectorRoot extends VectorSchemaRoot {\n \n Review comment:\n   What's the difference between this class and VectorSchemaRoot?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-24T20:49:08.598+0000",
                    "updated": "2018-08-24T20:49:08.598+0000",
                    "started": "2018-08-24T20:49:08.598+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "137969",
                    "issueId": "12994652"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12994652/worklog/137976",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on a change in pull request #2102: ARROW-249: [JAVA] Flight GRPC Implementation\nURL: https://github.com/apache/arrow/pull/2102#discussion_r212752900\n \n \n\n ##########\n File path: java/flight/src/main/protobuf/flight.proto\n ##########\n @@ -0,0 +1,111 @@\n+syntax = \"proto3\";\n+\n+option java_package = \"org.apache.arrow.flight.impl\";\n+\n+service FlightService {\n+\n+  // get a list of available streams.\n+  rpc ListFlights(Criteria) returns (stream FlightGetInfo) {}\n+  \n+    // get a list of available streams.\n+  rpc GetFlightInfo(FlightDescriptor) returns (FlightGetInfo) {}\n+  \n+  // get stream data.\n+  rpc DoGet(Ticket) returns (stream FlightData) {}\n+\n+  // create or append a stream. \n+  rpc DoPut(stream FlightData) returns (PutResult) {}\n+  \n+  rpc DoAction(Action) returns (Result) {}\n+  \n+  rpc ListActions(Empty) returns (stream ActionType) {}\n+  \n+}\n+\n+message Empty {}\n+\n+message ActionType {\n+  string type = 1;\n+  string description = 2;\n+}\n+\n+message Criteria {\n \n Review comment:\n   Would you explain this a bit?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-24T20:55:54.215+0000",
                    "updated": "2018-08-24T20:55:54.215+0000",
                    "started": "2018-08-24T20:55:54.214+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "137976",
                    "issueId": "12994652"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12994652/worklog/137977",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on a change in pull request #2102: ARROW-249: [JAVA] Flight GRPC Implementation\nURL: https://github.com/apache/arrow/pull/2102#discussion_r212753502\n \n \n\n ##########\n File path: java/flight/src/main/protobuf/flight.proto\n ##########\n @@ -0,0 +1,111 @@\n+syntax = \"proto3\";\n+\n+option java_package = \"org.apache.arrow.flight.impl\";\n+\n+service FlightService {\n+\n+  // get a list of available streams.\n+  rpc ListFlights(Criteria) returns (stream FlightGetInfo) {}\n+  \n+    // get a list of available streams.\n+  rpc GetFlightInfo(FlightDescriptor) returns (FlightGetInfo) {}\n+  \n+  // get stream data.\n+  rpc DoGet(Ticket) returns (stream FlightData) {}\n+\n+  // create or append a stream. \n+  rpc DoPut(stream FlightData) returns (PutResult) {}\n+  \n+  rpc DoAction(Action) returns (Result) {}\n+  \n+  rpc ListActions(Empty) returns (stream ActionType) {}\n+  \n+}\n+\n+message Empty {}\n+\n+message ActionType {\n+  string type = 1;\n+  string description = 2;\n+}\n+\n+message Criteria {\n+  // TODO: criteria pattern to be added.\n+  int64 slice_target = 1;  \n+}\n+\n+message Action {\n+  string type = 1;\n+  bytes body = 2;\n+}\n+\n+message Result {\n+  string type = 1;\n+  bytes body = 2;\n+}\n+\n+message FlightDescriptor {\n \n Review comment:\n   It is not very clear to me what is the meaning of this class. Would you mind elaborating a bit?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-24T20:58:29.732+0000",
                    "updated": "2018-08-24T20:58:29.732+0000",
                    "started": "2018-08-24T20:58:29.731+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "137977",
                    "issueId": "12994652"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12994652/worklog/137978",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "icexelloss commented on a change in pull request #2102: ARROW-249: [JAVA] Flight GRPC Implementation\nURL: https://github.com/apache/arrow/pull/2102#discussion_r212753730\n \n \n\n ##########\n File path: java/flight/src/main/protobuf/flight.proto\n ##########\n @@ -0,0 +1,111 @@\n+syntax = \"proto3\";\n+\n+option java_package = \"org.apache.arrow.flight.impl\";\n+\n+service FlightService {\n+\n+  // get a list of available streams.\n+  rpc ListFlights(Criteria) returns (stream FlightGetInfo) {}\n+  \n+    // get a list of available streams.\n+  rpc GetFlightInfo(FlightDescriptor) returns (FlightGetInfo) {}\n+  \n+  // get stream data.\n+  rpc DoGet(Ticket) returns (stream FlightData) {}\n+\n+  // create or append a stream. \n+  rpc DoPut(stream FlightData) returns (PutResult) {}\n+  \n+  rpc DoAction(Action) returns (Result) {}\n+  \n+  rpc ListActions(Empty) returns (stream ActionType) {}\n+  \n+}\n+\n+message Empty {}\n+\n+message ActionType {\n+  string type = 1;\n+  string description = 2;\n+}\n+\n+message Criteria {\n+  // TODO: criteria pattern to be added.\n+  int64 slice_target = 1;  \n+}\n+\n+message Action {\n+  string type = 1;\n+  bytes body = 2;\n+}\n+\n+message Result {\n+  string type = 1;\n+  bytes body = 2;\n+}\n+\n+message FlightDescriptor {\n+  enum DescriptorType {\n+    UNKNOWN = 0;\n+    PATH = 1;\n+    CMD = 2;\n+  }\n+  \n+  DescriptorType type = 1;\n+  string cmd = 2;\n+  repeated string path = 3;\n+}\n+\n+message FlightGetInfo {\n+  // schema of the dataset as described in Schema.fbs::Schema\n+  bytes schema = 1;\n+  \n+  FlightDescriptor flight_descriptor = 2;\n+  \n+  repeated FlightEndpoint endpoint = 3;\n+  \n+  uint64 total_records = 4;\n+  uint64 total_bytes = 5;\n+}\n+\n+message FlightPutRequest {\n+  FlightDescriptor flight_descriptor = 1;\n+  \n+  // schema of the dataset as described in Schema.fbs::Schema\n+  bytes schema = 2;\n+  \n+  int32 ticket_count = 3;\n+}\n+\n+message FlightPutInstruction {\n \n Review comment:\n   What's this message used for?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-24T20:59:34.182+0000",
                    "updated": "2018-08-24T20:59:34.182+0000",
                    "started": "2018-08-24T20:59:34.182+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "137978",
                    "issueId": "12994652"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 26400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@790e25b3[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7adfe760[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@53d1be28[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@56b0b7d5[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3ece1996[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3464cd75[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6a9a152f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@39c719b6[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@778ba5b1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6596d150[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5f9f93a0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5e142b4c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 26400,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Sep 25 23:04:24 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-09-25T23:04:23.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-249/watchers",
            "watchCount": 7,
            "isWatching": false
        },
        "created": "2016-08-03T18:04:33.000+0000",
        "updated": "2018-09-25T23:04:32.000+0000",
        "timeoriginalestimate": null,
        "description": "In addition to memory maps / shared memory, we should be able to assemble one or more Arrow arrays in a memory block suitable for sending over the wire with GRPC (http://www.grpc.io/). This can be similarly adapted to other messaging / RPC frameworks. \n\nWe can continue to use Flatbuffers for the metadata serialization. ",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "7h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 26400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Flight] Define GRPC IDL / wire protocol for messaging with Arrow data",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12994652/comment/15418020",
                    "id": "15418020",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=julienledem",
                        "name": "julienledem",
                        "key": "julienledem",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10445",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10445",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10445",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10445"
                        },
                        "displayName": "Julien Le Dem",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Some requirements for the RPC layer:\n - When receiving a message we need to be able to address the buffer where the message is directly from the RPC layer without copying it.\n - when sending a message, we need to be able to point to several Arrow buffers and have them sent directly (one after the other) with no copy as well.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=julienledem",
                        "name": "julienledem",
                        "key": "julienledem",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10445",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10445",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10445",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10445"
                        },
                        "displayName": "Julien Le Dem",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2016-08-11T22:03:07.078+0000",
                    "updated": "2016-08-11T22:03:07.078+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12994652/comment/15418045",
                    "id": "15418045",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Agreed. I do not know enough about GRPC to know how much protobuf overhead there is on receipt. If this returns a buffer of bytes in the deserialized protobuf then this can be accessed via Flatbuffers with zero copy. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2016-08-11T22:27:54.490+0000",
                    "updated": "2016-08-11T22:27:54.490+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12994652/comment/15418072",
                    "id": "15418072",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jnadeau",
                        "name": "jnadeau",
                        "key": "jnadeau",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Jacques Nadeau",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "I remember some from Kudu team (maybe [~tlipcon] or [~jdcryans]?) mentioned something about how they had to customize the GRPC for a sidecar data batch and see some mention of it here: https://github.com/grpc/grpc-java/issues/1054. I wonder if they could share any insights.\n\nWe implemented something custom in Drill on top of Netty before GRPC was built to satisfy the need to support off-heap sideband messages but it would be nice to have someone else manage the maintenance of the layer.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jnadeau",
                        "name": "jnadeau",
                        "key": "jnadeau",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Jacques Nadeau",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2016-08-11T22:42:11.217+0000",
                    "updated": "2016-08-11T22:42:11.217+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12994652/comment/16009556",
                    "id": "16009556",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I'd like to prototype a GRPC-based client and server that sends components of an Arrow stream as a series of RPC messages according to the Arrow streaming format. See this discussion about some issues around this\n\nhttps://github.com/grpc/grpc-java/issues/1054#issuecomment-301282237\n\nIn ARROW-1008, I've refactored the \"stream reader\" and \"stream writer\" concepts to be abstract interfaces, so now we could define {{GrpcStreamWriter}} and {{GrpcStreamReader}} that would be a middleman to the underlying GRPC client/server machinery, presenting a standard stream iterator to the client side. I figure we could prototype this using protobuf messages that hold each piece of the Arrow stream (first RPC message is the schema) and see how the perf compares with a \"raw\" stream. \n\ncc [~nongli]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-05-14T00:15:29.565+0000",
                    "updated": "2017-05-14T00:15:36.903+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12994652/comment/16197330",
                    "id": "16197330",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jnadeau",
                        "name": "jnadeau",
                        "key": "jnadeau",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Jacques Nadeau",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Some key performance requirements from my perspective (note that I'm just skipping all the basic requirements):\r\n\r\n* Send N sidecar ByteBufs in addition to a structured message on the sending side, only doing a single copy: the kernel copying the ByteBuf to the socket.\r\n* Receive and pull out a single sidecar ByteBuf on the receiving-side, keeping it off heap and minimizing for its lifetime. Preferably zero copies but potentially a single copy (from a circular or rotating buffer to a final target buffer).\r\n* Support a cooperative backpressure methodology when using multiple streams on a single connection.\r\n* Handle out of direct memory situations without disrupting the connection (message failure as opposed to connection failure).\r\n\r\nI'm trying to piece together how we might do this using some less than ideal usage of the GRPC apis. Not sure how bad the shenaniganry will need to be. Note that we have something we've built up at Dremio (and before) that we've found very reliable for the performance requirements above:\r\n\r\n* https://github.com/dremio/dremio-oss/tree/master/services/base-rpc\r\n\r\nObviously, this is less well supported/contributed/featured than GRPC but used at many large scale production customers already. It doesn't do all the things that GRPC does but it does do the requirements above very well. On the flipside, it doesn't have all the client/language support, doesn't have all the security features, compression features, etc.\r\n\r\n\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jnadeau",
                        "name": "jnadeau",
                        "key": "jnadeau",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Jacques Nadeau",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2017-10-09T17:16:25.237+0000",
                    "updated": "2017-10-09T17:16:25.237+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/12994652/comment/16628032",
                    "id": "16628032",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2102\n[https://github.com/apache/arrow/pull/2102]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-09-25T23:04:24.026+0000",
                    "updated": "2018-09-25T23:04:24.026+0000"
                }
            ],
            "maxResults": 6,
            "total": 6,
            "startAt": 0
        },
        "customfield_12311820": "0|i31v7b:",
        "customfield_12314139": null
    }
}