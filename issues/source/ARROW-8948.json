{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13307470",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307470",
    "key": "ARROW-8948",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12347769",
                "id": "12347769",
                "description": "",
                "name": "1.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-07-24"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rymurr",
            "name": "rymurr",
            "key": "rymurr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Ryan Murray",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333774",
                "id": "12333774",
                "name": "Integration",
                "description": "Issues related to integration / compatibility tests between implementations"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rymurr",
            "name": "rymurr",
            "key": "rymurr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Ryan Murray",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rymurr",
            "name": "rymurr",
            "key": "rymurr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Ryan Murray",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8948/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 17,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307470/worklog/437739",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr opened a new pull request #7289:\nURL: https://github.com/apache/arrow/pull/7289\n\n\n   This addresses the integration test error where Java cannot process duplicate field names.\r\n   \r\n   This extends StructVector and VectorSchemaRoot to support duplicate field names.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-27T11:08:34.388+0000",
                    "updated": "2020-05-27T11:08:34.388+0000",
                    "started": "2020-05-27T11:08:34.388+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "437739",
                    "issueId": "13307470"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307470/worklog/437741",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7289:\nURL: https://github.com/apache/arrow/pull/7289#issuecomment-634593683\n\n\n   https://issues.apache.org/jira/browse/ARROW-8948\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-27T11:16:56.310+0000",
                    "updated": "2020-05-27T11:16:56.310+0000",
                    "started": "2020-05-27T11:16:56.310+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "437741",
                    "issueId": "13307470"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307470/worklog/438910",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #7289:\nURL: https://github.com/apache/arrow/pull/7289#discussion_r432674577\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/VectorSchemaRoot.java\n##########\n@@ -163,8 +163,22 @@ public void clear() {\n     return fieldVectors.stream().collect(Collectors.toList());\n   }\n \n+  /**\n+   * gets a vector by name.\n+   *\n+   * if name occurs multiple times this returns the first inserted entry for name\n+   */\n   public FieldVector getVector(String name) {\n\nReview comment:\n       This does change the complexity - though presumably it's not an issue unless someone has tens of thousands of columns or is repeatedly fetching vectors in a tight loop.\n\n##########\nFile path: dev/archery/archery/integration/tester_java.py\n##########\n@@ -37,7 +37,8 @@ class JavaTester(Tester):\n     FLIGHT_SERVER = True\n     FLIGHT_CLIENT = True\n \n-    JAVA_OPTS = ['-Dio.netty.tryReflectionSetAccessible=true']\n+    JAVA_OPTS = ['-Dio.netty.tryReflectionSetAccessible=true',\n+                 '-Darrow.struct.conflict.policy=CONFLICT_APPEND']\n\nReview comment:\n       If I'm not mistaken - this means the \"correct\" or \"compatible\" behavior is opt-in via a JVM flag? Are these flags clearly documented somewhere, I think we have a few others?\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/util/MapWithOrdinal.java\n##########\n@@ -45,212 +32,36 @@\n  * <p>For any instance with N items, this implementation guarantees that ordinals are in the range of [0, N). However,\n  * the ordinal assignment is dynamic and may change after an insertion or deletion. Consumers of this class are\n  * responsible for explicitly checking the ordinal corresponding to a key via\n- * {@link org.apache.arrow.vector.util.MapWithOrdinal#getOrdinal(Object)} before attempting to execute a lookup\n+ * {@link MultiMapWithOrdinal#getOrdinal(Object)} before attempting to execute a lookup\n  * with an ordinal.\n  *\n  * @param <K> key type\n  * @param <V> value type\n  */\n-public class MapWithOrdinal<K, V> implements Map<K, V> {\n-  private static final Logger logger = LoggerFactory.getLogger(MapWithOrdinal.class);\n-\n-  private final Map<K, Entry<Integer, V>> primary = new HashMap<>();\n-  private final IntObjectHashMap<V> secondary = new IntObjectHashMap<>();\n-\n-  private final Map<K, V> delegate = new Map<K, V>() {\n-    @Override\n-    public boolean isEmpty() {\n-      return size() == 0;\n-    }\n-\n-    @Override\n-    public int size() {\n-      return primary.size();\n-    }\n-\n-    @Override\n-    public boolean containsKey(Object key) {\n-      return primary.containsKey(key);\n-    }\n-\n-    @Override\n-    public boolean containsValue(Object value) {\n-      return primary.containsValue(value);\n-    }\n-\n-    @Override\n-    public V get(Object key) {\n-      Entry<Integer, V> pair = primary.get(key);\n-      if (pair != null) {\n-        return pair.getValue();\n-      }\n-      return null;\n-    }\n-\n-    @Override\n-    public V put(K key, V value) {\n-      final Entry<Integer, V> oldPair = primary.get(key);\n-      // if key exists try replacing otherwise, assign a new ordinal identifier\n-      final int ordinal = oldPair == null ? primary.size() : oldPair.getKey();\n-      primary.put(key, new AbstractMap.SimpleImmutableEntry<>(ordinal, value));\n-      secondary.put(ordinal, value);\n-      return oldPair == null ? null : oldPair.getValue();\n-    }\n-\n-    @Override\n-    public V remove(Object key) {\n-      final Entry<Integer, V> oldPair = primary.remove(key);\n-      if (oldPair != null) {\n-        final int lastOrdinal = secondary.size();\n-        final V last = secondary.get(lastOrdinal);\n-        // normalize mappings so that all numbers until primary.size() is assigned\n-        // swap the last element with the deleted one\n-        secondary.put(oldPair.getKey(), last);\n-        primary.put((K) key, new AbstractMap.SimpleImmutableEntry<>(oldPair.getKey(), last));\n-      }\n-      return oldPair == null ? null : oldPair.getValue();\n-    }\n-\n-    @Override\n-    public void putAll(Map<? extends K, ? extends V> m) {\n-      throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public void clear() {\n-      primary.clear();\n-      secondary.clear();\n-    }\n-\n-    @Override\n-    public Set<K> keySet() {\n-      return primary.keySet();\n-    }\n-\n-    @Override\n-    public Collection<V> values() {\n-      return StreamSupport.stream(secondary.entries().spliterator(), false)\n-          .map((IntObjectMap.PrimitiveEntry<V> t) -> Preconditions.checkNotNull(t).value())\n-          .collect(Collectors.toList());\n-    }\n-\n-    @Override\n-    public Set<Entry<K, V>> entrySet() {\n-      return primary.entrySet().stream()\n-          .map(entry -> new AbstractMap.SimpleImmutableEntry<>(entry.getKey(), entry.getValue().getValue()))\n-          .collect(Collectors.toSet());\n-    }\n-  };\n-\n-  /**\n-   * Returns the value corresponding to the given ordinal.\n-   *\n-   * @param id ordinal value for lookup\n-   * @return an instance of V\n-   */\n-  public V getByOrdinal(int id) {\n-    return secondary.get(id);\n-  }\n-\n-  /**\n-   * Returns the ordinal corresponding to the given key.\n-   *\n-   * @param key key for ordinal lookup\n-   * @return ordinal value corresponding to key if it exists or -1\n-   */\n-  public int getOrdinal(K key) {\n-    Entry<Integer, V> pair = primary.get(key);\n-    if (pair != null) {\n-      return pair.getKey();\n-    }\n-    return -1;\n-  }\n-\n-  @Override\n-  public int size() {\n-    return delegate.size();\n-  }\n+public interface MapWithOrdinal<K, V> {\n\nReview comment:\n       (Presumably this was for internal use only.)\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/util/MapWithOrdinal.java\n##########\n@@ -45,212 +32,36 @@\n  * <p>For any instance with N items, this implementation guarantees that ordinals are in the range of [0, N). However,\n  * the ordinal assignment is dynamic and may change after an insertion or deletion. Consumers of this class are\n  * responsible for explicitly checking the ordinal corresponding to a key via\n- * {@link org.apache.arrow.vector.util.MapWithOrdinal#getOrdinal(Object)} before attempting to execute a lookup\n+ * {@link MultiMapWithOrdinal#getOrdinal(Object)} before attempting to execute a lookup\n  * with an ordinal.\n  *\n  * @param <K> key type\n  * @param <V> value type\n  */\n-public class MapWithOrdinal<K, V> implements Map<K, V> {\n-  private static final Logger logger = LoggerFactory.getLogger(MapWithOrdinal.class);\n-\n-  private final Map<K, Entry<Integer, V>> primary = new HashMap<>();\n-  private final IntObjectHashMap<V> secondary = new IntObjectHashMap<>();\n-\n-  private final Map<K, V> delegate = new Map<K, V>() {\n-    @Override\n-    public boolean isEmpty() {\n-      return size() == 0;\n-    }\n-\n-    @Override\n-    public int size() {\n-      return primary.size();\n-    }\n-\n-    @Override\n-    public boolean containsKey(Object key) {\n-      return primary.containsKey(key);\n-    }\n-\n-    @Override\n-    public boolean containsValue(Object value) {\n-      return primary.containsValue(value);\n-    }\n-\n-    @Override\n-    public V get(Object key) {\n-      Entry<Integer, V> pair = primary.get(key);\n-      if (pair != null) {\n-        return pair.getValue();\n-      }\n-      return null;\n-    }\n-\n-    @Override\n-    public V put(K key, V value) {\n-      final Entry<Integer, V> oldPair = primary.get(key);\n-      // if key exists try replacing otherwise, assign a new ordinal identifier\n-      final int ordinal = oldPair == null ? primary.size() : oldPair.getKey();\n-      primary.put(key, new AbstractMap.SimpleImmutableEntry<>(ordinal, value));\n-      secondary.put(ordinal, value);\n-      return oldPair == null ? null : oldPair.getValue();\n-    }\n-\n-    @Override\n-    public V remove(Object key) {\n-      final Entry<Integer, V> oldPair = primary.remove(key);\n-      if (oldPair != null) {\n-        final int lastOrdinal = secondary.size();\n-        final V last = secondary.get(lastOrdinal);\n-        // normalize mappings so that all numbers until primary.size() is assigned\n-        // swap the last element with the deleted one\n-        secondary.put(oldPair.getKey(), last);\n-        primary.put((K) key, new AbstractMap.SimpleImmutableEntry<>(oldPair.getKey(), last));\n-      }\n-      return oldPair == null ? null : oldPair.getValue();\n-    }\n-\n-    @Override\n-    public void putAll(Map<? extends K, ? extends V> m) {\n-      throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public void clear() {\n-      primary.clear();\n-      secondary.clear();\n-    }\n-\n-    @Override\n-    public Set<K> keySet() {\n-      return primary.keySet();\n-    }\n-\n-    @Override\n-    public Collection<V> values() {\n-      return StreamSupport.stream(secondary.entries().spliterator(), false)\n-          .map((IntObjectMap.PrimitiveEntry<V> t) -> Preconditions.checkNotNull(t).value())\n-          .collect(Collectors.toList());\n-    }\n-\n-    @Override\n-    public Set<Entry<K, V>> entrySet() {\n-      return primary.entrySet().stream()\n-          .map(entry -> new AbstractMap.SimpleImmutableEntry<>(entry.getKey(), entry.getValue().getValue()))\n-          .collect(Collectors.toSet());\n-    }\n-  };\n-\n-  /**\n-   * Returns the value corresponding to the given ordinal.\n-   *\n-   * @param id ordinal value for lookup\n-   * @return an instance of V\n-   */\n-  public V getByOrdinal(int id) {\n-    return secondary.get(id);\n-  }\n-\n-  /**\n-   * Returns the ordinal corresponding to the given key.\n-   *\n-   * @param key key for ordinal lookup\n-   * @return ordinal value corresponding to key if it exists or -1\n-   */\n-  public int getOrdinal(K key) {\n-    Entry<Integer, V> pair = primary.get(key);\n-    if (pair != null) {\n-      return pair.getKey();\n-    }\n-    return -1;\n-  }\n-\n-  @Override\n-  public int size() {\n-    return delegate.size();\n-  }\n+public interface MapWithOrdinal<K, V> {\n\nReview comment:\n       This no longer extends the `Map<K,V>` interface - is that an acceptable break?\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/complex/AbstractStructVector.java\n##########\n@@ -196,21 +245,51 @@ protected void putChild(String name, FieldVector vector) {\n     putVector(name, vector);\n   }\n \n+  private void put(String name, FieldVector vector, boolean overwrite) {\n+    final boolean old = vectors.put(\n+        Preconditions.checkNotNull(name, \"field name cannot be null\"),\n+        Preconditions.checkNotNull(vector, \"vector cannot be null\"),\n+        overwrite\n+    );\n+    if (old) {\n+      logger.debug(\"Field [{}] mutated to [{}] \", name,\n+          vector.getClass().getSimpleName());\n+    }\n+  }\n+\n   /**\n    * Inserts the input vector into the map if it does not exist, replaces if it exists already.\n\nReview comment:\n       This docstring no longer matches the behavior.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-29T19:08:13.489+0000",
                    "updated": "2020-05-29T19:08:13.489+0000",
                    "started": "2020-05-29T19:08:13.488+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "438910",
                    "issueId": "13307470"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307470/worklog/439446",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on a change in pull request #7289:\nURL: https://github.com/apache/arrow/pull/7289#discussion_r433116448\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/util/MapWithOrdinal.java\n##########\n@@ -45,212 +32,36 @@\n  * <p>For any instance with N items, this implementation guarantees that ordinals are in the range of [0, N). However,\n  * the ordinal assignment is dynamic and may change after an insertion or deletion. Consumers of this class are\n  * responsible for explicitly checking the ordinal corresponding to a key via\n- * {@link org.apache.arrow.vector.util.MapWithOrdinal#getOrdinal(Object)} before attempting to execute a lookup\n+ * {@link MultiMapWithOrdinal#getOrdinal(Object)} before attempting to execute a lookup\n  * with an ordinal.\n  *\n  * @param <K> key type\n  * @param <V> value type\n  */\n-public class MapWithOrdinal<K, V> implements Map<K, V> {\n-  private static final Logger logger = LoggerFactory.getLogger(MapWithOrdinal.class);\n-\n-  private final Map<K, Entry<Integer, V>> primary = new HashMap<>();\n-  private final IntObjectHashMap<V> secondary = new IntObjectHashMap<>();\n-\n-  private final Map<K, V> delegate = new Map<K, V>() {\n-    @Override\n-    public boolean isEmpty() {\n-      return size() == 0;\n-    }\n-\n-    @Override\n-    public int size() {\n-      return primary.size();\n-    }\n-\n-    @Override\n-    public boolean containsKey(Object key) {\n-      return primary.containsKey(key);\n-    }\n-\n-    @Override\n-    public boolean containsValue(Object value) {\n-      return primary.containsValue(value);\n-    }\n-\n-    @Override\n-    public V get(Object key) {\n-      Entry<Integer, V> pair = primary.get(key);\n-      if (pair != null) {\n-        return pair.getValue();\n-      }\n-      return null;\n-    }\n-\n-    @Override\n-    public V put(K key, V value) {\n-      final Entry<Integer, V> oldPair = primary.get(key);\n-      // if key exists try replacing otherwise, assign a new ordinal identifier\n-      final int ordinal = oldPair == null ? primary.size() : oldPair.getKey();\n-      primary.put(key, new AbstractMap.SimpleImmutableEntry<>(ordinal, value));\n-      secondary.put(ordinal, value);\n-      return oldPair == null ? null : oldPair.getValue();\n-    }\n-\n-    @Override\n-    public V remove(Object key) {\n-      final Entry<Integer, V> oldPair = primary.remove(key);\n-      if (oldPair != null) {\n-        final int lastOrdinal = secondary.size();\n-        final V last = secondary.get(lastOrdinal);\n-        // normalize mappings so that all numbers until primary.size() is assigned\n-        // swap the last element with the deleted one\n-        secondary.put(oldPair.getKey(), last);\n-        primary.put((K) key, new AbstractMap.SimpleImmutableEntry<>(oldPair.getKey(), last));\n-      }\n-      return oldPair == null ? null : oldPair.getValue();\n-    }\n-\n-    @Override\n-    public void putAll(Map<? extends K, ? extends V> m) {\n-      throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public void clear() {\n-      primary.clear();\n-      secondary.clear();\n-    }\n-\n-    @Override\n-    public Set<K> keySet() {\n-      return primary.keySet();\n-    }\n-\n-    @Override\n-    public Collection<V> values() {\n-      return StreamSupport.stream(secondary.entries().spliterator(), false)\n-          .map((IntObjectMap.PrimitiveEntry<V> t) -> Preconditions.checkNotNull(t).value())\n-          .collect(Collectors.toList());\n-    }\n-\n-    @Override\n-    public Set<Entry<K, V>> entrySet() {\n-      return primary.entrySet().stream()\n-          .map(entry -> new AbstractMap.SimpleImmutableEntry<>(entry.getKey(), entry.getValue().getValue()))\n-          .collect(Collectors.toSet());\n-    }\n-  };\n-\n-  /**\n-   * Returns the value corresponding to the given ordinal.\n-   *\n-   * @param id ordinal value for lookup\n-   * @return an instance of V\n-   */\n-  public V getByOrdinal(int id) {\n-    return secondary.get(id);\n-  }\n-\n-  /**\n-   * Returns the ordinal corresponding to the given key.\n-   *\n-   * @param key key for ordinal lookup\n-   * @return ordinal value corresponding to key if it exists or -1\n-   */\n-  public int getOrdinal(K key) {\n-    Entry<Integer, V> pair = primary.get(key);\n-    if (pair != null) {\n-      return pair.getKey();\n-    }\n-    return -1;\n-  }\n-\n-  @Override\n-  public int size() {\n-    return delegate.size();\n-  }\n+public interface MapWithOrdinal<K, V> {\n\nReview comment:\n       I felt it was acceptable to break from `Map` as it is internal and only used by `Struct`s. I surmise that the intention was for this class to be a more generic utility and that need never materialised\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-01T08:51:57.208+0000",
                    "updated": "2020-06-01T08:51:57.208+0000",
                    "started": "2020-06-01T08:51:57.208+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439446",
                    "issueId": "13307470"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307470/worklog/439449",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on a change in pull request #7289:\nURL: https://github.com/apache/arrow/pull/7289#discussion_r433118490\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/complex/AbstractStructVector.java\n##########\n@@ -196,21 +245,51 @@ protected void putChild(String name, FieldVector vector) {\n     putVector(name, vector);\n   }\n \n+  private void put(String name, FieldVector vector, boolean overwrite) {\n+    final boolean old = vectors.put(\n+        Preconditions.checkNotNull(name, \"field name cannot be null\"),\n+        Preconditions.checkNotNull(vector, \"vector cannot be null\"),\n+        overwrite\n+    );\n+    if (old) {\n+      logger.debug(\"Field [{}] mutated to [{}] \", name,\n+          vector.getClass().getSimpleName());\n+    }\n+  }\n+\n   /**\n    * Inserts the input vector into the map if it does not exist, replaces if it exists already.\n\nReview comment:\n       fixed, thanks!\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-01T08:56:15.622+0000",
                    "updated": "2020-06-01T08:56:15.622+0000",
                    "started": "2020-06-01T08:56:15.621+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439449",
                    "issueId": "13307470"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307470/worklog/439454",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on a change in pull request #7289:\nURL: https://github.com/apache/arrow/pull/7289#discussion_r433127439\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/VectorSchemaRoot.java\n##########\n@@ -163,8 +163,22 @@ public void clear() {\n     return fieldVectors.stream().collect(Collectors.toList());\n   }\n \n+  /**\n+   * gets a vector by name.\n+   *\n+   * if name occurs multiple times this returns the first inserted entry for name\n+   */\n   public FieldVector getVector(String name) {\n\nReview comment:\n       Agreed, this now matches with the `Schema` implementation. I think we should either:\r\n    i) deprecate the `name` based methods\r\n    ii) document that these methods are unsuitable for tight loops.\r\n   Any thoughts on which is more sensible?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-01T09:16:21.114+0000",
                    "updated": "2020-06-01T09:16:21.114+0000",
                    "started": "2020-06-01T09:16:21.114+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439454",
                    "issueId": "13307470"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307470/worklog/439459",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on a change in pull request #7289:\nURL: https://github.com/apache/arrow/pull/7289#discussion_r433132611\n\n\n\n##########\nFile path: dev/archery/archery/integration/tester_java.py\n##########\n@@ -37,7 +37,8 @@ class JavaTester(Tester):\n     FLIGHT_SERVER = True\n     FLIGHT_CLIENT = True\n \n-    JAVA_OPTS = ['-Dio.netty.tryReflectionSetAccessible=true']\n+    JAVA_OPTS = ['-Dio.netty.tryReflectionSetAccessible=true',\n+                 '-Darrow.struct.conflict.policy=CONFLICT_APPEND']\n\nReview comment:\n       Hey @lidavidm, yes the 'compatible' behaviour is opt-in. This may be controversial but through a mix of opinionated, ignorant and lazy I don't understand the value of duplicate names in a struct. Given the scope of implementing such a change fully and the unintended consequences downstream I have opted to give the library user the option to be compatible with the c++ IPC or maintain backwards compatibility with Java. I am happy to hear what the community thinks, especially if this approach is seen as too heavy handed.\r\n   \r\n   This flag wasn't document anywhere so I have added a note to the 'Java Properties' section in the Java README.md.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-01T09:28:17.003+0000",
                    "updated": "2020-06-01T09:28:17.003+0000",
                    "started": "2020-06-01T09:28:17.003+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439459",
                    "issueId": "13307470"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307470/worklog/439502",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #7289:\nURL: https://github.com/apache/arrow/pull/7289#discussion_r433211806\n\n\n\n##########\nFile path: dev/archery/archery/integration/tester_java.py\n##########\n@@ -37,7 +37,8 @@ class JavaTester(Tester):\n     FLIGHT_SERVER = True\n     FLIGHT_CLIENT = True\n \n-    JAVA_OPTS = ['-Dio.netty.tryReflectionSetAccessible=true']\n+    JAVA_OPTS = ['-Dio.netty.tryReflectionSetAccessible=true',\n+                 '-Darrow.struct.conflict.policy=CONFLICT_APPEND']\n\nReview comment:\n       I think as long as it's easily controllable in code (so a single application can work with both behaviors) and well-documented, that should be OK. I dislike only having global flags, but that's not the case here. (And having global flags can be useful to tweak the behavior of an application that's otherwise agnostic to the default behavior.)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-01T12:44:40.468+0000",
                    "updated": "2020-06-01T12:44:40.468+0000",
                    "started": "2020-06-01T12:44:40.467+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439502",
                    "issueId": "13307470"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307470/worklog/439917",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7289:\nURL: https://github.com/apache/arrow/pull/7289#discussion_r433647053\n\n\n\n##########\nFile path: java/README.md\n##########\n@@ -80,8 +80,12 @@ variable are set, the system property takes precedence.\n \n ## Java Properties\n \n-For java 9 or later, should set \"-Dio.netty.tryReflectionSetAccessible=true\".\n+ * For java 9 or later, should set \"-Dio.netty.tryReflectionSetAccessible=true\".\n This fixes `java.lang.UnsupportedOperationException: sun.misc.Unsafe or java.nio.DirectByteBuffer.(long, int) not available`. thrown by netty.\n+ * To support duplicate fields in a `StructVector` enable \"-Darrow.struct.conflict.policy=CONFLICT_APPEND\".\n\nReview comment:\n       we've been using the policy that java properties should also be settable via environment variable (I believe in some context environment variables are easier to set).\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-02T06:27:32.713+0000",
                    "updated": "2020-06-02T06:27:32.713+0000",
                    "started": "2020-06-02T06:27:32.713+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439917",
                    "issueId": "13307470"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307470/worklog/439918",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7289:\nURL: https://github.com/apache/arrow/pull/7289#discussion_r433647662\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/VectorSchemaRoot.java\n##########\n@@ -54,7 +54,7 @@\n   private Schema schema;\n   private int rowCount;\n   private final List<FieldVector> fieldVectors;\n-  private final Map<String, FieldVector> fieldVectorsMap = new HashMap<>();\n+  private final Map<Field, FieldVector> fieldVectorsMap = new LinkedHashMap<>();\n\nReview comment:\n       is there a reason no to change this to a Map<String, List<FieldVector>>?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-02T06:29:06.954+0000",
                    "updated": "2020-06-02T06:29:06.954+0000",
                    "started": "2020-06-02T06:29:06.954+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439918",
                    "issueId": "13307470"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307470/worklog/439919",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #7289:\nURL: https://github.com/apache/arrow/pull/7289#discussion_r433648119\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/complex/AbstractStructVector.java\n##########\n@@ -40,11 +40,64 @@\n public abstract class AbstractStructVector extends AbstractContainerVector {\n   private static final org.slf4j.Logger logger = org.slf4j.LoggerFactory.getLogger(AbstractContainerVector.class);\n \n+  private static final ConflictPolicy DEFAULT_CONFLICT_POLICY;\n   // Maintains a map with key as field name and value is the vector itself\n-  private final MapWithOrdinal<String, FieldVector> vectors = new MapWithOrdinal<>();\n+  private final PromotableMultiMapWithOrdinal<String, FieldVector> vectors;\n+  protected final boolean allowConflictPolicyChanges;\n+  private ConflictPolicy conflictPolicy;\n \n-  protected AbstractStructVector(String name, BufferAllocator allocator, CallBack callBack) {\n+\n+  static {\n+    String conflictPolicyStr = System.getProperty(\"arrow.struct.conflict.policy\", \"CONFLICT_REPLACE\");\n\nReview comment:\n       if you move the enum above this block, are you able to access the CONFLICT_REPLACE enum directly, to use it instead oa constant here?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-02T06:30:22.404+0000",
                    "updated": "2020-06-02T06:30:22.404+0000",
                    "started": "2020-06-02T06:30:22.403+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439919",
                    "issueId": "13307470"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307470/worklog/439998",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on a change in pull request #7289:\nURL: https://github.com/apache/arrow/pull/7289#discussion_r433727618\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/VectorSchemaRoot.java\n##########\n@@ -54,7 +54,7 @@\n   private Schema schema;\n   private int rowCount;\n   private final List<FieldVector> fieldVectors;\n-  private final Map<String, FieldVector> fieldVectorsMap = new HashMap<>();\n+  private final Map<Field, FieldVector> fieldVectorsMap = new LinkedHashMap<>();\n\nReview comment:\n       I didn't want to lose the type information. This still allows you to address Field(\"x\", int) compared to Field(\"x\", long).\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-02T09:02:30.661+0000",
                    "updated": "2020-06-02T09:02:30.661+0000",
                    "started": "2020-06-02T09:02:30.661+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "439998",
                    "issueId": "13307470"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307470/worklog/440006",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on a change in pull request #7289:\nURL: https://github.com/apache/arrow/pull/7289#discussion_r433729726\n\n\n\n##########\nFile path: java/README.md\n##########\n@@ -80,8 +80,12 @@ variable are set, the system property takes precedence.\n \n ## Java Properties\n \n-For java 9 or later, should set \"-Dio.netty.tryReflectionSetAccessible=true\".\n+ * For java 9 or later, should set \"-Dio.netty.tryReflectionSetAccessible=true\".\n This fixes `java.lang.UnsupportedOperationException: sun.misc.Unsafe or java.nio.DirectByteBuffer.(long, int) not available`. thrown by netty.\n+ * To support duplicate fields in a `StructVector` enable \"-Darrow.struct.conflict.policy=CONFLICT_APPEND\".\n\nReview comment:\n       done!\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-02T09:06:04.137+0000",
                    "updated": "2020-06-02T09:06:04.137+0000",
                    "started": "2020-06-02T09:06:04.137+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "440006",
                    "issueId": "13307470"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307470/worklog/440007",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on a change in pull request #7289:\nURL: https://github.com/apache/arrow/pull/7289#discussion_r433730068\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/complex/AbstractStructVector.java\n##########\n@@ -40,11 +40,64 @@\n public abstract class AbstractStructVector extends AbstractContainerVector {\n   private static final org.slf4j.Logger logger = org.slf4j.LoggerFactory.getLogger(AbstractContainerVector.class);\n \n+  private static final ConflictPolicy DEFAULT_CONFLICT_POLICY;\n   // Maintains a map with key as field name and value is the vector itself\n-  private final MapWithOrdinal<String, FieldVector> vectors = new MapWithOrdinal<>();\n+  private final PromotableMultiMapWithOrdinal<String, FieldVector> vectors;\n+  protected final boolean allowConflictPolicyChanges;\n+  private ConflictPolicy conflictPolicy;\n \n-  protected AbstractStructVector(String name, BufferAllocator allocator, CallBack callBack) {\n+\n+  static {\n+    String conflictPolicyStr = System.getProperty(\"arrow.struct.conflict.policy\", \"CONFLICT_REPLACE\");\n\nReview comment:\n       fixed\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-02T09:06:37.109+0000",
                    "updated": "2020-06-02T09:06:37.109+0000",
                    "started": "2020-06-02T09:06:37.109+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "440007",
                    "issueId": "13307470"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307470/worklog/443848",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #7289:\nURL: https://github.com/apache/arrow/pull/7289#issuecomment-642135635\n\n\n   @rymurr @lidavidm @emkornfield is this good to go now?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-10T16:56:19.304+0000",
                    "updated": "2020-06-10T16:56:19.304+0000",
                    "started": "2020-06-10T16:56:19.304+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "443848",
                    "issueId": "13307470"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307470/worklog/443894",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #7289:\nURL: https://github.com/apache/arrow/pull/7289#issuecomment-642168659\n\n\n   I am good with this.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-10T17:59:23.498+0000",
                    "updated": "2020-06-10T17:59:23.498+0000",
                    "started": "2020-06-10T17:59:23.497+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "443894",
                    "issueId": "13307470"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307470/worklog/443902",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson closed pull request #7289:\nURL: https://github.com/apache/arrow/pull/7289\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-10T18:06:45.505+0000",
                    "updated": "2020-06-10T18:06:45.505+0000",
                    "started": "2020-06-10T18:06:45.504+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "443902",
                    "issueId": "13307470"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 10200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5a33ef7e[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@f63b17[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@14ca46e8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2555f9e5[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@112dfb23[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@785ef034[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3e6504d1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@34755829[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4a7f4967[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@452fdf4c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@53fa18b4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4dd0a6f2[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10200,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jun 10 18:06:34 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-06-10T18:06:34.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8948/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-05-26T15:20:33.000+0000",
        "updated": "2020-06-10T18:06:46.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java][Integration] enable duplicate field names integration tests",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13307470/comment/17132579",
                    "id": "17132579",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 7289\n[https://github.com/apache/arrow/pull/7289]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2020-06-10T18:06:34.308+0000",
                    "updated": "2020-06-10T18:06:34.308+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0f688:",
        "customfield_12314139": null
    }
}