{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13337497",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337497",
    "key": "ARROW-10405",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349493",
                "id": "12349493",
                "description": "",
                "name": "4.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-04-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
            "name": "rokm",
            "key": "rokm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Rok Mihevc",
            "active": true,
            "timeZone": "Europe/Amsterdam"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10405/votes",
            "votes": 1,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 19,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337497/worklog/559421",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok opened a new pull request #9606:\nURL: https://github.com/apache/arrow/pull/9606\n\n\n   This is to resolve [ARROW-10405](https://issues.apache.org/jira/browse/ARROW-10405).\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-01T15:41:53.391+0000",
                    "updated": "2021-03-01T15:41:53.391+0000",
                    "started": "2021-03-01T15:41:53.390+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "559421",
                    "issueId": "13337497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337497/worklog/559422",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9606:\nURL: https://github.com/apache/arrow/pull/9606#issuecomment-788045846\n\n\n   https://issues.apache.org/jira/browse/ARROW-10405\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-01T15:42:28.891+0000",
                    "updated": "2021-03-01T15:42:28.891+0000",
                    "started": "2021-03-01T15:42:28.890+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "559422",
                    "issueId": "13337497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337497/worklog/560087",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #9606:\nURL: https://github.com/apache/arrow/pull/9606#discussion_r585819882\n\n\n\n##########\nFile path: r/tests/testthat/test-Array.R\n##########\n@@ -727,6 +727,15 @@ test_that(\"[ accepts Arrays and otherwise handles bad input\", {\n   )\n })\n \n+test_that(\"[ %in% looks up string key in dictionary\", {\n+  a1 <- Array$create(as.factor(c(\"A\", \"B\", \"C\")))\n+  a2 <- DictionaryArray$create(c(0L, 1L, 2L), c(4.5, 3.2, 1.1))\n+  arrow:::call_function(\"is_in_meta_binary\", a1, Array$create(\"B\"))\n+  arrow:::call_function(\"is_in_meta_binary\", a1, Array$create(\"D\"))\n+  arrow:::call_function(\"is_in_meta_binary\", a2, Array$create(3.2))\n\nReview comment:\n       Shouldn't you check return values here?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-02T18:48:07.151+0000",
                    "updated": "2021-03-02T18:48:07.151+0000",
                    "started": "2021-03-02T18:48:07.151+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "560087",
                    "issueId": "13337497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337497/worklog/560747",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on a change in pull request #9606:\nURL: https://github.com/apache/arrow/pull/9606#discussion_r586896681\n\n\n\n##########\nFile path: r/tests/testthat/test-Array.R\n##########\n@@ -727,6 +727,15 @@ test_that(\"[ accepts Arrays and otherwise handles bad input\", {\n   )\n })\n \n+test_that(\"[ %in% looks up string key in dictionary\", {\n+  a1 <- Array$create(as.factor(c(\"A\", \"B\", \"C\")))\n+  a2 <- DictionaryArray$create(c(0L, 1L, 2L), c(4.5, 3.2, 1.1))\n+  arrow:::call_function(\"is_in_meta_binary\", a1, Array$create(\"B\"))\n+  arrow:::call_function(\"is_in_meta_binary\", a1, Array$create(\"D\"))\n+  arrow:::call_function(\"is_in_meta_binary\", a2, Array$create(3.2))\n\nReview comment:\n       I was looking to test for errors but the added check is better. Adding.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-03T23:49:52.910+0000",
                    "updated": "2021-03-03T23:49:52.910+0000",
                    "started": "2021-03-03T23:49:52.910+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "560747",
                    "issueId": "13337497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337497/worklog/560749",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #9606:\nURL: https://github.com/apache/arrow/pull/9606#issuecomment-790159420\n\n\n   > Thanks for doing this. Can you add tests on the C++ side? I expect tests for `IsIn` and `IndexIn`, with non-trivial dictionary arrays, also in cases where not all dictionary values are referred by indices.\r\n   \r\n   Added for string and float32 types. Should we check more?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-03T23:50:50.544+0000",
                    "updated": "2021-03-03T23:50:50.544+0000",
                    "started": "2021-03-03T23:50:50.543+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "560749",
                    "issueId": "13337497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337497/worklog/560759",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #9606:\nURL: https://github.com/apache/arrow/pull/9606#discussion_r586922616\n\n\n\n##########\nFile path: r/tests/testthat/test-Array.R\n##########\n@@ -723,6 +723,17 @@ test_that(\"[ accepts Arrays and otherwise handles bad input\", {\n   )\n })\n \n+test_that(\"[ %in% looks up string key in dictionary\", {\n\nReview comment:\n       ```suggestion\r\n   test_that(\"%in% works on dictionary arrays\", {\r\n   ```\n\n##########\nFile path: r/tests/testthat/test-Array.R\n##########\n@@ -723,6 +723,17 @@ test_that(\"[ accepts Arrays and otherwise handles bad input\", {\n   )\n })\n \n+test_that(\"[ %in% looks up string key in dictionary\", {\n+  a1 <- Array$create(as.factor(c(\"A\", \"B\", \"C\")))\n+  a2 <- DictionaryArray$create(c(0L, 1L, 2L), c(4.5, 3.2, 1.1))\n+  b1 <- Array$create(c(FALSE, TRUE, FALSE))\n+  b2 <- Array$create(c(FALSE, FALSE, FALSE))\n+  expect_equal(b1, arrow:::call_function(\"is_in_meta_binary\", a1, Array$create(\"B\")))\n+  expect_equal(b2, arrow:::call_function(\"is_in_meta_binary\", a1, Array$create(\"D\")))\n+  expect_equal(b1, arrow:::call_function(\"is_in_meta_binary\", a2, Array$create(3.2)))\n+  expect_error(arrow:::call_function(\"is_in_meta_binary\", a2, Array$create(\"B\")))\n\nReview comment:\n       I would write these as e.g. `expect_equal(a1 %in% \"B\", b1)` etc.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-04T00:42:43.177+0000",
                    "updated": "2021-03-04T00:42:43.177+0000",
                    "started": "2021-03-04T00:42:43.177+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "560759",
                    "issueId": "13337497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337497/worklog/560918",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #9606:\nURL: https://github.com/apache/arrow/pull/9606#discussion_r587386055\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_set_lookup_test.cc\n##########\n@@ -280,6 +320,28 @@ class TestIndexInKernel : public ::testing::Test {\n     ASSERT_OK(actual.chunked_array()->ValidateFull());\n     AssertChunkedEqual(*expected, *actual.chunked_array());\n   }\n+\n+  void CheckIndexInDictionary(const std::shared_ptr<DataType>& type,\n+                              const std::shared_ptr<DataType>& index_type,\n+                              const std::string& input_dictionary_json,\n+                              const std::string& input_index_json,\n+                              const std::string& value_set_json,\n+                              const std::string& expected_json, bool skip_nulls = false) {\n+    auto dict_type = dictionary(index_type, type);\n+    auto indices = ArrayFromJSON(index_type, input_index_json);\n+    auto dict = ArrayFromJSON(type, value_set_json);\n\nReview comment:\n       Should be `input_dictionary_json` as well.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_set_lookup_test.cc\n##########\n@@ -72,6 +72,27 @@ void CheckIsInChunked(const std::shared_ptr<ChunkedArray>& input,\n   AssertChunkedEqual(*expected, *actual);\n }\n \n+void CheckIsInDictionary(const std::shared_ptr<DataType>& type,\n+                         const std::shared_ptr<DataType>& index_type,\n+                         const std::string& input_dictionary_json,\n+                         const std::string& input_index_json,\n+                         const std::string& value_set_json,\n+                         const std::string& expected_json, bool skip_nulls = false) {\n+  auto dict_type = dictionary(index_type, type);\n+  auto indices = ArrayFromJSON(index_type, input_index_json);\n+  auto dict = ArrayFromJSON(type, value_set_json);\n\nReview comment:\n       This should use `input_dictionary_json`, not `value_set_json`.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_set_lookup_test.cc\n##########\n@@ -231,6 +252,25 @@ TEST_F(TestIsInKernel, Decimal) {\n             /*skip_nulls=*/true);\n }\n \n+TEST_F(TestIsInKernel, DictionaryArray) {\n+  for (auto index_ty : all_dictionary_index_types()) {\n+    CheckIsInDictionary(/*type=*/utf8(),\n+                        /*index_type=*/index_ty,\n+                        /*input_dictionary_json=*/R\"([\"A\", \"B\", \"C\", \"D\"])\",\n+                        /*input_index_json=*/\"[1, 2, null, 0]\",\n+                        /*value_set_json=*/R\"([\"A\", \"B\", \"C\"])\",\n+                        /*expected_json=*/\"[true, true, false, true]\",\n+                        /*skip_nulls=*/false);\n+    CheckIsInDictionary(/*type=*/float32(),\n\nReview comment:\n       Consider adding the following tests:\r\n   ```c++\r\n       // With nulls and skip_nulls=false\r\n       CheckIsInDictionary(/*type=*/utf8(),\r\n                           /*index_type=*/index_ty,\r\n                           /*input_dictionary_json=*/R\"([\"A\", \"B\", \"C\", \"D\"])\",\r\n                           /*input_index_json=*/\"[1, 3, null, 0, 1]\",\r\n                           /*value_set_json=*/R\"([\"C\", \"B\", \"A\", null])\",\r\n                           /*expected_json=*/\"[true, false, true, true, true]\",\r\n                           /*skip_nulls=*/false);\r\n       CheckIsInDictionary(/*type=*/utf8(),\r\n                           /*index_type=*/index_ty,\r\n                           /*input_dictionary_json=*/R\"([\"A\", null, \"C\", \"D\"])\",\r\n                           /*input_index_json=*/\"[1, 3, null, 0, 1]\",\r\n                           /*value_set_json=*/R\"([\"C\", \"B\", \"A\", null])\",\r\n                           /*expected_json=*/\"[true, false, true, true, true]\",\r\n                           /*skip_nulls=*/false);\r\n       CheckIsInDictionary(/*type=*/utf8(),\r\n                           /*index_type=*/index_ty,\r\n                           /*input_dictionary_json=*/R\"([\"A\", null, \"C\", \"D\"])\",\r\n                           /*input_index_json=*/\"[1, 3, null, 0, 1]\",\r\n                           /*value_set_json=*/R\"([\"C\", \"B\", \"A\"])\",\r\n                           /*expected_json=*/\"[false, false, false, true, false]\",\r\n                           /*skip_nulls=*/false);\r\n   \r\n       // With nulls and skip_nulls=true\r\n       CheckIsInDictionary(/*type=*/utf8(),\r\n                           /*index_type=*/index_ty,\r\n                           /*input_dictionary_json=*/R\"([\"A\", \"B\", \"C\", \"D\"])\",\r\n                           /*input_index_json=*/\"[1, 3, null, 0, 1]\",\r\n                           /*value_set_json=*/R\"([\"C\", \"B\", \"A\", null])\",\r\n                           /*expected_json=*/\"[true, false, false, true, true]\",\r\n                           /*skip_nulls=*/true);\r\n       CheckIsInDictionary(/*type=*/utf8(),\r\n                           /*index_type=*/index_ty,\r\n                           /*input_dictionary_json=*/R\"([\"A\", null, \"C\", \"D\"])\",\r\n                           /*input_index_json=*/\"[1, 3, null, 0, 1]\",\r\n                           /*value_set_json=*/R\"([\"C\", \"B\", \"A\", null])\",\r\n                           /*expected_json=*/\"[false, false, false, true, false]\",\r\n                           /*skip_nulls=*/true);\r\n       CheckIsInDictionary(/*type=*/utf8(),\r\n                           /*index_type=*/index_ty,\r\n                           /*input_dictionary_json=*/R\"([\"A\", null, \"C\", \"D\"])\",\r\n                           /*input_index_json=*/\"[1, 3, null, 0, 1]\",\r\n                           /*value_set_json=*/R\"([\"C\", \"B\", \"A\"])\",\r\n                           /*expected_json=*/\"[false, false, false, true, false]\",\r\n                           /*skip_nulls=*/true);\r\n   ```\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_set_lookup_test.cc\n##########\n@@ -583,6 +645,25 @@ TEST_F(TestIndexInKernel, Decimal) {\n                /*skip_nulls=*/true);\n }\n \n+TEST_F(TestIndexInKernel, DictionaryArray) {\n+  for (auto index_ty : all_dictionary_index_types()) {\n+    CheckIndexInDictionary(/*type=*/utf8(),\n+                           /*index_type=*/index_ty,\n+                           /*input_dictionary_json=*/R\"([\"A\", \"B\", \"C\", \"D\"])\",\n+                           /*input_index_json=*/\"[1, 2, null, 0]\",\n+                           /*value_set_json=*/R\"([\"A\", \"B\", \"C\"])\",\n+                           /*expected_json=*/\"[1, 2, null, 0]\",\n+                           /*skip_nulls=*/false);\n+    CheckIndexInDictionary(/*type=*/float32(),\n\nReview comment:\n       As above, can you add non-trivial tests with nulls?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-04T11:28:17.248+0000",
                    "updated": "2021-03-04T11:28:17.248+0000",
                    "started": "2021-03-04T11:28:17.247+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "560918",
                    "issueId": "13337497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337497/worklog/560919",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #9606:\nURL: https://github.com/apache/arrow/pull/9606#issuecomment-790546124\n\n\n   Also note that the current implementation (in `scalar_set_lookup.cc`) is suboptimal as it decodes the dictionary array and runs the set lookup for each decoded dictionary value. It would be more efficient to compute and cache lookup results for distinct dictionary elements. That can be for a later JIRA, though.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-04T11:29:21.534+0000",
                    "updated": "2021-03-04T11:29:21.534+0000",
                    "started": "2021-03-04T11:29:21.534+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "560919",
                    "issueId": "13337497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337497/worklog/561102",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on a change in pull request #9606:\nURL: https://github.com/apache/arrow/pull/9606#discussion_r587790691\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_set_lookup_test.cc\n##########\n@@ -72,6 +72,27 @@ void CheckIsInChunked(const std::shared_ptr<ChunkedArray>& input,\n   AssertChunkedEqual(*expected, *actual);\n }\n \n+void CheckIsInDictionary(const std::shared_ptr<DataType>& type,\n+                         const std::shared_ptr<DataType>& index_type,\n+                         const std::string& input_dictionary_json,\n+                         const std::string& input_index_json,\n+                         const std::string& value_set_json,\n+                         const std::string& expected_json, bool skip_nulls = false) {\n+  auto dict_type = dictionary(index_type, type);\n+  auto indices = ArrayFromJSON(index_type, input_index_json);\n+  auto dict = ArrayFromJSON(type, value_set_json);\n\nReview comment:\n       Ugh, thanks for catching that. Fixed.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-04T20:07:53.449+0000",
                    "updated": "2021-03-04T20:07:53.449+0000",
                    "started": "2021-03-04T20:07:53.448+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "561102",
                    "issueId": "13337497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337497/worklog/561103",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on a change in pull request #9606:\nURL: https://github.com/apache/arrow/pull/9606#discussion_r587790806\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_set_lookup_test.cc\n##########\n@@ -231,6 +252,25 @@ TEST_F(TestIsInKernel, Decimal) {\n             /*skip_nulls=*/true);\n }\n \n+TEST_F(TestIsInKernel, DictionaryArray) {\n+  for (auto index_ty : all_dictionary_index_types()) {\n+    CheckIsInDictionary(/*type=*/utf8(),\n+                        /*index_type=*/index_ty,\n+                        /*input_dictionary_json=*/R\"([\"A\", \"B\", \"C\", \"D\"])\",\n+                        /*input_index_json=*/\"[1, 2, null, 0]\",\n+                        /*value_set_json=*/R\"([\"A\", \"B\", \"C\"])\",\n+                        /*expected_json=*/\"[true, true, false, true]\",\n+                        /*skip_nulls=*/false);\n+    CheckIsInDictionary(/*type=*/float32(),\n\nReview comment:\n       Added.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-04T20:08:06.470+0000",
                    "updated": "2021-03-04T20:08:06.470+0000",
                    "started": "2021-03-04T20:08:06.470+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "561103",
                    "issueId": "13337497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337497/worklog/562618",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #9606:\nURL: https://github.com/apache/arrow/pull/9606#discussion_r589770069\n\n\n\n##########\nFile path: r/tests/testthat/test-Array.R\n##########\n@@ -723,6 +723,17 @@ test_that(\"[ accepts Arrays and otherwise handles bad input\", {\n   )\n })\n \n+test_that(\"[ %in% looks up string key in dictionary\", {\n+  a1 <- Array$create(as.factor(c(\"A\", \"B\", \"C\")))\n+  a2 <- DictionaryArray$create(c(0L, 1L, 2L), c(4.5, 3.2, 1.1))\n+  b1 <- Array$create(c(FALSE, TRUE, FALSE))\n+  b2 <- Array$create(c(FALSE, FALSE, FALSE))\n+  expect_equal(b1, arrow:::call_function(\"is_in_meta_binary\", a1, Array$create(\"B\")))\n+  expect_equal(b2, arrow:::call_function(\"is_in_meta_binary\", a1, Array$create(\"D\")))\n+  expect_equal(b1, arrow:::call_function(\"is_in_meta_binary\", a2, Array$create(3.2)))\n+  expect_error(arrow:::call_function(\"is_in_meta_binary\", a2, Array$create(\"B\")))\n\nReview comment:\n       @jonkeane reminds me that `%in%` isn't an option here due to R's method dispatch quirks. So what I suggested won't work.\r\n   \r\n   In that case, keep these as they are, but (1) drop the `arrow:::` (not needed in the test suite, it evals in the package namespace) and (2) switch the order of arguments so that the expected result is second.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-08T21:44:59.287+0000",
                    "updated": "2021-03-08T21:44:59.287+0000",
                    "started": "2021-03-08T21:44:59.287+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "562618",
                    "issueId": "13337497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337497/worklog/562676",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on a change in pull request #9606:\nURL: https://github.com/apache/arrow/pull/9606#discussion_r589811906\n\n\n\n##########\nFile path: r/tests/testthat/test-Array.R\n##########\n@@ -723,6 +723,17 @@ test_that(\"[ accepts Arrays and otherwise handles bad input\", {\n   )\n })\n \n+test_that(\"[ %in% looks up string key in dictionary\", {\n+  a1 <- Array$create(as.factor(c(\"A\", \"B\", \"C\")))\n+  a2 <- DictionaryArray$create(c(0L, 1L, 2L), c(4.5, 3.2, 1.1))\n+  b1 <- Array$create(c(FALSE, TRUE, FALSE))\n+  b2 <- Array$create(c(FALSE, FALSE, FALSE))\n+  expect_equal(b1, arrow:::call_function(\"is_in_meta_binary\", a1, Array$create(\"B\")))\n+  expect_equal(b2, arrow:::call_function(\"is_in_meta_binary\", a1, Array$create(\"D\")))\n+  expect_equal(b1, arrow:::call_function(\"is_in_meta_binary\", a2, Array$create(3.2)))\n+  expect_error(arrow:::call_function(\"is_in_meta_binary\", a2, Array$create(\"B\")))\n\nReview comment:\n       I was just about to ask about this. @jonkeane told me about this quirk.\r\n   I've proposed a new [`is_in`](https://github.com/apache/arrow/pull/9606/files#diff-9d33f036186210a1076f3adc590e0cc60a0b65556cefdbd15e6d26aa105f7d76R120) function. If it doesn't make sense for consistency we can scrap it.\r\n   Is there a plan to create aliases for calling call_function at some point?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-08T22:59:39.090+0000",
                    "updated": "2021-03-08T22:59:39.090+0000",
                    "started": "2021-03-08T22:59:39.089+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "562676",
                    "issueId": "13337497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337497/worklog/562702",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #9606:\nURL: https://github.com/apache/arrow/pull/9606#discussion_r589822176\n\n\n\n##########\nFile path: r/tests/testthat/test-Array.R\n##########\n@@ -723,6 +723,17 @@ test_that(\"[ accepts Arrays and otherwise handles bad input\", {\n   )\n })\n \n+test_that(\"[ %in% looks up string key in dictionary\", {\n+  a1 <- Array$create(as.factor(c(\"A\", \"B\", \"C\")))\n+  a2 <- DictionaryArray$create(c(0L, 1L, 2L), c(4.5, 3.2, 1.1))\n+  b1 <- Array$create(c(FALSE, TRUE, FALSE))\n+  b2 <- Array$create(c(FALSE, FALSE, FALSE))\n+  expect_equal(b1, arrow:::call_function(\"is_in_meta_binary\", a1, Array$create(\"B\")))\n+  expect_equal(b2, arrow:::call_function(\"is_in_meta_binary\", a1, Array$create(\"D\")))\n+  expect_equal(b1, arrow:::call_function(\"is_in_meta_binary\", a2, Array$create(3.2)))\n+  expect_error(arrow:::call_function(\"is_in_meta_binary\", a2, Array$create(\"B\")))\n\nReview comment:\n       Within the context of a dplyr method, we can do nonstandard evaluation and map anything we want to the appropriate arrow compute functions, and we do that. But when using R's standard evaluation, we can only define arrow methods where the R function is defined as a generic. We do this for (most) arithmetic and logical operations, for example. However, `%in%` is not defined that way (nor is `match()`, the lower-level function it calls), so we can't. \r\n   \r\n   I'm ok with adding an `is_in()` function, though I'm also ok with not doing it as I don't think it will get used much. What do you think @jonkeane @ianmcook ?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-08T23:20:43.796+0000",
                    "updated": "2021-03-08T23:20:43.796+0000",
                    "started": "2021-03-08T23:20:43.796+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "562702",
                    "issueId": "13337497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337497/worklog/562730",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #9606:\nURL: https://github.com/apache/arrow/pull/9606#discussion_r589835066\n\n\n\n##########\nFile path: r/tests/testthat/test-Array.R\n##########\n@@ -723,6 +723,17 @@ test_that(\"[ accepts Arrays and otherwise handles bad input\", {\n   )\n })\n \n+test_that(\"[ %in% looks up string key in dictionary\", {\n+  a1 <- Array$create(as.factor(c(\"A\", \"B\", \"C\")))\n+  a2 <- DictionaryArray$create(c(0L, 1L, 2L), c(4.5, 3.2, 1.1))\n+  b1 <- Array$create(c(FALSE, TRUE, FALSE))\n+  b2 <- Array$create(c(FALSE, FALSE, FALSE))\n+  expect_equal(b1, arrow:::call_function(\"is_in_meta_binary\", a1, Array$create(\"B\")))\n+  expect_equal(b2, arrow:::call_function(\"is_in_meta_binary\", a1, Array$create(\"D\")))\n+  expect_equal(b1, arrow:::call_function(\"is_in_meta_binary\", a2, Array$create(3.2)))\n+  expect_error(arrow:::call_function(\"is_in_meta_binary\", a2, Array$create(\"B\")))\n\nReview comment:\n       I think adding `is_in()` is a good idea, especially since it'll give us a nice place to document this particular quirk\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-08T23:50:21.465+0000",
                    "updated": "2021-03-08T23:50:21.465+0000",
                    "started": "2021-03-08T23:50:21.465+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "562730",
                    "issueId": "13337497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337497/worklog/562733",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #9606:\nURL: https://github.com/apache/arrow/pull/9606#discussion_r589835937\n\n\n\n##########\nFile path: r/tests/testthat/test-Array.R\n##########\n@@ -723,6 +723,17 @@ test_that(\"[ accepts Arrays and otherwise handles bad input\", {\n   )\n })\n \n+test_that(\"[ %in% looks up string key in dictionary\", {\n+  a1 <- Array$create(as.factor(c(\"A\", \"B\", \"C\")))\n+  a2 <- DictionaryArray$create(c(0L, 1L, 2L), c(4.5, 3.2, 1.1))\n+  b1 <- Array$create(c(FALSE, TRUE, FALSE))\n+  b2 <- Array$create(c(FALSE, FALSE, FALSE))\n+  expect_equal(b1, arrow:::call_function(\"is_in_meta_binary\", a1, Array$create(\"B\")))\n+  expect_equal(b2, arrow:::call_function(\"is_in_meta_binary\", a1, Array$create(\"D\")))\n+  expect_equal(b1, arrow:::call_function(\"is_in_meta_binary\", a2, Array$create(3.2)))\n+  expect_error(arrow:::call_function(\"is_in_meta_binary\", a2, Array$create(\"B\")))\n\nReview comment:\n       It should be documented along with `match_arrow()`, which as it turns out mentions the same quirk https://github.com/apache/arrow/blob/master/r/R/compute.R#L88\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-08T23:52:30.886+0000",
                    "updated": "2021-03-08T23:52:30.886+0000",
                    "started": "2021-03-08T23:52:30.885+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "562733",
                    "issueId": "13337497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337497/worklog/563120",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on a change in pull request #9606:\nURL: https://github.com/apache/arrow/pull/9606#discussion_r590453356\n\n\n\n##########\nFile path: r/tests/testthat/test-Array.R\n##########\n@@ -723,6 +723,17 @@ test_that(\"[ accepts Arrays and otherwise handles bad input\", {\n   )\n })\n \n+test_that(\"[ %in% looks up string key in dictionary\", {\n+  a1 <- Array$create(as.factor(c(\"A\", \"B\", \"C\")))\n+  a2 <- DictionaryArray$create(c(0L, 1L, 2L), c(4.5, 3.2, 1.1))\n+  b1 <- Array$create(c(FALSE, TRUE, FALSE))\n+  b2 <- Array$create(c(FALSE, FALSE, FALSE))\n+  expect_equal(b1, arrow:::call_function(\"is_in_meta_binary\", a1, Array$create(\"B\")))\n+  expect_equal(b2, arrow:::call_function(\"is_in_meta_binary\", a1, Array$create(\"D\")))\n+  expect_equal(b1, arrow:::call_function(\"is_in_meta_binary\", a2, Array$create(3.2)))\n+  expect_error(arrow:::call_function(\"is_in_meta_binary\", a2, Array$create(\"B\")))\n\nReview comment:\n       I added [some doc text](https://github.com/apache/arrow/pull/9606/files#diff-9d33f036186210a1076f3adc590e0cc60a0b65556cefdbd15e6d26aa105f7d76R112) to `is_in`. It's a bit of copy-pasta, please review.\r\n   \r\n   Shall we also add something to the [r/NEWS.md](https://github.com/apache/arrow/blob/master/r/NEWS.md)?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-09T15:09:12.470+0000",
                    "updated": "2021-03-09T15:09:12.470+0000",
                    "started": "2021-03-09T15:09:12.470+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "563120",
                    "issueId": "13337497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337497/worklog/563135",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #9606:\nURL: https://github.com/apache/arrow/pull/9606#issuecomment-794048467\n\n\n   @nealrichardson I'll let you review the R changes and give the final merge.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-09T15:29:42.426+0000",
                    "updated": "2021-03-09T15:29:42.426+0000",
                    "started": "2021-03-09T15:29:42.426+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "563135",
                    "issueId": "13337497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337497/worklog/563491",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #9606:\nURL: https://github.com/apache/arrow/pull/9606#discussion_r591032048\n\n\n\n##########\nFile path: r/tests/testthat/test-Array.R\n##########\n@@ -723,6 +723,17 @@ test_that(\"[ accepts Arrays and otherwise handles bad input\", {\n   )\n })\n \n+test_that(\"[ %in% looks up string key in dictionary\", {\n+  a1 <- Array$create(as.factor(c(\"A\", \"B\", \"C\")))\n+  a2 <- DictionaryArray$create(c(0L, 1L, 2L), c(4.5, 3.2, 1.1))\n+  b1 <- Array$create(c(FALSE, TRUE, FALSE))\n+  b2 <- Array$create(c(FALSE, FALSE, FALSE))\n+  expect_equal(b1, arrow:::call_function(\"is_in_meta_binary\", a1, Array$create(\"B\")))\n+  expect_equal(b2, arrow:::call_function(\"is_in_meta_binary\", a1, Array$create(\"D\")))\n+  expect_equal(b1, arrow:::call_function(\"is_in_meta_binary\", a2, Array$create(3.2)))\n+  expect_error(arrow:::call_function(\"is_in_meta_binary\", a2, Array$create(\"B\")))\n\nReview comment:\n       > Shall we also add something to the r/NEWS.md?\r\n   \r\n   Yeah probably, but I'll come back to that before the release, we're a little backed up on changelog updates already.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-10T04:45:32.683+0000",
                    "updated": "2021-03-10T04:45:32.683+0000",
                    "started": "2021-03-10T04:45:32.683+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "563491",
                    "issueId": "13337497"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337497/worklog/563492",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson closed pull request #9606:\nURL: https://github.com/apache/arrow/pull/9606\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-10T04:46:36.189+0000",
                    "updated": "2021-03-10T04:46:36.189+0000",
                    "started": "2021-03-10T04:46:36.189+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "563492",
                    "issueId": "13337497"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 11400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@40961bef[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@64506315[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@44d5b437[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@23fa2f73[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7311b24[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@57cc9edc[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3ed1ec1e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4c22dd00[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4345079b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@704c5b51[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@414ce85a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1bdcf7ae[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 11400,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Mar 10 04:46:22 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-03-10T04:46:22.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10405/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2020-10-27T18:52:54.000+0000",
        "updated": "2021-03-10T04:46:37.000+0000",
        "timeoriginalestimate": null,
        "description": "Repro in R:\r\n\r\n{code}\r\n> a1 <- Array$create(c(\"A\", \"B\", \"C\"))\r\n> a2 <- Array$create(as.factor(c(\"A\", \"B\", \"C\")))\r\n> a1\r\nArray\r\n<string>\r\n[\r\n  \"A\",\r\n  \"B\",\r\n  \"C\"\r\n]\r\n> a2\r\nDictionaryArray\r\n<dictionary<values=string, indices=int8>>\r\n\r\n-- dictionary:\r\n  [\r\n    \"A\",\r\n    \"B\",\r\n    \"C\"\r\n  ]\r\n-- indices:\r\n  [\r\n    0,\r\n    1,\r\n    2\r\n  ]\r\n> arrow:::call_function(\"is_in_meta_binary\", a1, Array$create(\"B\"))\r\n<pointer: 0x5575885e9070>\r\n> arrow:::call_function(\"is_in_meta_binary\", a2, Array$create(\"B\"))\r\nError in compute__CallFunction(function_name, args, options) : \r\n  Invalid: Array type didn't match type of values set: dictionary<values=string, indices=int8, ordered=0> vs string\r\n{code}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 11400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] IsIn kernel should be able to lookup dictionary in string",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337497/comment/17291231",
                    "id": "17291231",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "FYI, there is some belief that this has been taken care of by the updated \"dispatch best\" work (ARROW-8919) so this might just be a matter of adding a test case or confirming the behavior.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-02-25T21:25:22.390+0000",
                    "updated": "2021-02-25T21:25:22.390+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337497/comment/17293030",
                    "id": "17293030",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
                        "name": "rokm",
                        "key": "rokm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Rok Mihevc",
                        "active": true,
                        "timeZone": "Europe/Amsterdam"
                    },
                    "body": "[~westonpace]\u00a0indeed just removing pre-dispatch checks works. I'm not sure how that would be performance wise so I'm adding another pre-check for now.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
                        "name": "rokm",
                        "key": "rokm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Rok Mihevc",
                        "active": true,
                        "timeZone": "Europe/Amsterdam"
                    },
                    "created": "2021-03-01T17:07:29.842+0000",
                    "updated": "2021-03-01T17:07:29.842+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337497/comment/17298528",
                    "id": "17298528",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 9606\n[https://github.com/apache/arrow/pull/9606]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-03-10T04:46:22.672+0000",
                    "updated": "2021-03-10T04:46:22.672+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|z0k1zc:",
        "customfield_12314139": null
    }
}