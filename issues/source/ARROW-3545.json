{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13192334",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192334",
    "key": "ARROW-3545",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 4800,
            "total": 4800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 4800,
            "total": 4800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3545/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 8,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192334/worklog/176867",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on issue #3220: ARROW-3545: [C++/Python] Use \"field\" terminology with StructType, specify behavior with duplicate field names\nURL: https://github.com/apache/arrow/pull/3220#issuecomment-448492176\n \n \n   I like this.\r\n   GLib and Ruby already use \"field\" instead of \"child\": https://github.com/apache/arrow/blob/master/c_glib/arrow-glib/composite-data-type.h#L85-L97\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-19T07:10:02.007+0000",
                    "updated": "2018-12-19T07:10:02.007+0000",
                    "started": "2018-12-19T07:10:02.007+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "176867",
                    "issueId": "13192334"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192334/worklog/176938",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #3220: ARROW-3545: [C++/Python] Use \"field\" terminology with StructType, specify behavior with duplicate field names\nURL: https://github.com/apache/arrow/pull/3220#discussion_r242884745\n \n \n\n ##########\n File path: cpp/src/arrow/type.h\n ##########\n @@ -515,9 +515,16 @@ class ARROW_EXPORT StructType : public NestedType {\n   std::string name() const override { return \"struct\"; }\n \n   /// Returns null if name not found\n+  std::shared_ptr<Field> GetFieldByName(const std::string& name) const;\n+\n+  /// Returns -1 if name not found or if there are multiple fields having the\n+  /// same name\n+  int GetFieldIndex(const std::string& name) const;\n+\n+  ARROW_DEPRECATED(\"Use GetFieldByName\")\n   std::shared_ptr<Field> GetChildByName(const std::string& name) const;\n \n-  /// Returns -1 if name not found\n+  ARROW_DEPRECATED(\"Use GetChildIndex\")\n \n Review comment:\n   ```suggestion\r\n      ARROW_DEPRECATED(\"Use GetFieldIndex\")\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-19T11:37:34.873+0000",
                    "updated": "2018-12-19T11:37:34.873+0000",
                    "started": "2018-12-19T11:37:34.872+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "176938",
                    "issueId": "13192334"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192334/worklog/176939",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #3220: ARROW-3545: [C++/Python] Use \"field\" terminology with StructType, specify behavior with duplicate field names\nURL: https://github.com/apache/arrow/pull/3220#discussion_r242884745\n \n \n\n ##########\n File path: cpp/src/arrow/type.h\n ##########\n @@ -515,9 +515,16 @@ class ARROW_EXPORT StructType : public NestedType {\n   std::string name() const override { return \"struct\"; }\n \n   /// Returns null if name not found\n+  std::shared_ptr<Field> GetFieldByName(const std::string& name) const;\n+\n+  /// Returns -1 if name not found or if there are multiple fields having the\n+  /// same name\n+  int GetFieldIndex(const std::string& name) const;\n+\n+  ARROW_DEPRECATED(\"Use GetFieldByName\")\n   std::shared_ptr<Field> GetChildByName(const std::string& name) const;\n \n-  /// Returns -1 if name not found\n+  ARROW_DEPRECATED(\"Use GetChildIndex\")\n \n Review comment:\n   ```suggestion\r\n     ARROW_DEPRECATED(\"Use GetFieldIndex\")\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-19T11:37:50.610+0000",
                    "updated": "2018-12-19T11:37:50.610+0000",
                    "started": "2018-12-19T11:37:50.609+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "176939",
                    "issueId": "13192334"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192334/worklog/176954",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #3220: ARROW-3545: [C++/Python] Use \"field\" terminology with StructType, specify behavior with duplicate field names\nURL: https://github.com/apache/arrow/pull/3220#discussion_r242898313\n \n \n\n ##########\n File path: python/pyarrow/lib.pxd\n ##########\n @@ -65,7 +65,9 @@ cdef class StructType(DataType):\n     cdef:\n         const CStructType* struct_type\n \n-    cdef Field child_by_name(self, name)\n+    cpdef Field child_by_name(self, name)\n+    cpdef Field field(self, int i)\n+    cpdef Field field_by_name(self, name)\n \n Review comment:\n   I'm not sure it's useful to expose these to Python (\"cpdef\").\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-19T12:30:21.617+0000",
                    "updated": "2018-12-19T12:30:21.617+0000",
                    "started": "2018-12-19T12:30:21.616+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "176954",
                    "issueId": "13192334"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192334/worklog/177012",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #3220: ARROW-3545: [C++/Python] Use \"field\" terminology with StructType, specify behavior with duplicate field names\nURL: https://github.com/apache/arrow/pull/3220#discussion_r242931819\n \n \n\n ##########\n File path: python/pyarrow/lib.pxd\n ##########\n @@ -65,7 +65,9 @@ cdef class StructType(DataType):\n     cdef:\n         const CStructType* struct_type\n \n-    cdef Field child_by_name(self, name)\n+    cpdef Field child_by_name(self, name)\n+    cpdef Field field(self, int i)\n+    cpdef Field field_by_name(self, name)\n \n Review comment:\n   I guess the status quo is using `__getitem__` to access the children. I'll revert this change for now (easier to add APIs later than take them away)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-19T14:20:00.324+0000",
                    "updated": "2018-12-19T14:20:00.324+0000",
                    "started": "2018-12-19T14:20:00.323+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "177012",
                    "issueId": "13192334"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192334/worklog/177206",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #3220: ARROW-3545: [C++/Python] Use \"field\" terminology with StructType, specify behavior with duplicate field names\nURL: https://github.com/apache/arrow/pull/3220\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/array.cc b/cpp/src/arrow/array.cc\nindex ff94aa2a1e..f1e98bb2f1 100644\n--- a/cpp/src/arrow/array.cc\n+++ b/cpp/src/arrow/array.cc\n@@ -394,7 +394,7 @@ std::shared_ptr<Array> StructArray::field(int i) const {\n }\n \n std::shared_ptr<Array> StructArray::GetFieldByName(const std::string& name) const {\n-  int i = struct_type()->GetChildIndex(name);\n+  int i = struct_type()->GetFieldIndex(name);\n   return i == -1 ? nullptr : field(i);\n }\n \ndiff --git a/cpp/src/arrow/type-test.cc b/cpp/src/arrow/type-test.cc\nindex e0a10690c2..83c1f5602a 100644\n--- a/cpp/src/arrow/type-test.cc\n+++ b/cpp/src/arrow/type-test.cc\n@@ -446,7 +446,7 @@ TEST(TestStructType, Basics) {\n   // TODO(wesm): out of bounds for field(...)\n }\n \n-TEST(TestStructType, GetChildByName) {\n+TEST(TestStructType, GetFieldByName) {\n   auto f0 = field(\"f0\", int32());\n   auto f1 = field(\"f1\", uint8(), false);\n   auto f2 = field(\"f2\", utf8());\n@@ -455,17 +455,17 @@ TEST(TestStructType, GetChildByName) {\n   StructType struct_type({f0, f1, f2, f3});\n   std::shared_ptr<Field> result;\n \n-  result = struct_type.GetChildByName(\"f1\");\n+  result = struct_type.GetFieldByName(\"f1\");\n   ASSERT_EQ(f1, result);\n \n-  result = struct_type.GetChildByName(\"f3\");\n+  result = struct_type.GetFieldByName(\"f3\");\n   ASSERT_EQ(f3, result);\n \n-  result = struct_type.GetChildByName(\"not-found\");\n+  result = struct_type.GetFieldByName(\"not-found\");\n   ASSERT_EQ(result, nullptr);\n }\n \n-TEST(TestStructType, GetChildIndex) {\n+TEST(TestStructType, GetFieldIndex) {\n   auto f0 = field(\"f0\", int32());\n   auto f1 = field(\"f1\", uint8(), false);\n   auto f2 = field(\"f2\", utf8());\n@@ -473,11 +473,21 @@ TEST(TestStructType, GetChildIndex) {\n \n   StructType struct_type({f0, f1, f2, f3});\n \n-  ASSERT_EQ(0, struct_type.GetChildIndex(f0->name()));\n-  ASSERT_EQ(1, struct_type.GetChildIndex(f1->name()));\n-  ASSERT_EQ(2, struct_type.GetChildIndex(f2->name()));\n-  ASSERT_EQ(3, struct_type.GetChildIndex(f3->name()));\n-  ASSERT_EQ(-1, struct_type.GetChildIndex(\"not-found\"));\n+  ASSERT_EQ(0, struct_type.GetFieldIndex(f0->name()));\n+  ASSERT_EQ(1, struct_type.GetFieldIndex(f1->name()));\n+  ASSERT_EQ(2, struct_type.GetFieldIndex(f2->name()));\n+  ASSERT_EQ(3, struct_type.GetFieldIndex(f3->name()));\n+  ASSERT_EQ(-1, struct_type.GetFieldIndex(\"not-found\"));\n+}\n+\n+TEST(TestStructType, GetFieldIndexDuplicates) {\n+  auto f0 = field(\"f0\", int32());\n+  auto f1 = field(\"f1\", int64());\n+  auto f2 = field(\"f1\", utf8());\n+  StructType struct_type({f0, f1, f2});\n+\n+  ASSERT_EQ(0, struct_type.GetFieldIndex(\"f0\"));\n+  ASSERT_EQ(-1, struct_type.GetFieldIndex(\"f1\"));\n }\n \n TEST(TypesTest, TestDecimal128Small) {\ndiff --git a/cpp/src/arrow/type.cc b/cpp/src/arrow/type.cc\nindex 5f1ca8d7b0..97e6e7c54a 100644\n--- a/cpp/src/arrow/type.cc\n+++ b/cpp/src/arrow/type.cc\n@@ -232,18 +232,37 @@ std::string StructType::ToString() const {\n   return s.str();\n }\n \n-std::shared_ptr<Field> StructType::GetChildByName(const std::string& name) const {\n-  int i = GetChildIndex(name);\n+std::shared_ptr<Field> StructType::GetFieldByName(const std::string& name) const {\n+  int i = GetFieldIndex(name);\n   return i == -1 ? nullptr : children_[i];\n }\n \n-int StructType::GetChildIndex(const std::string& name) const {\n+int StructType::GetFieldIndex(const std::string& name) const {\n   if (children_.size() > 0 && name_to_index_.size() == 0) {\n     for (size_t i = 0; i < children_.size(); ++i) {\n       name_to_index_[children_[i]->name()] = static_cast<int>(i);\n     }\n   }\n \n+  if (name_to_index_.size() < children_.size()) {\n+    // There are duplicate field names. Refuse to guess\n+    int counts = 0;\n+    int last_observed_index = -1;\n+    for (size_t i = 0; i < children_.size(); ++i) {\n+      if (children_[i]->name() == name) {\n+        ++counts;\n+        last_observed_index = static_cast<int>(i);\n+      }\n+    }\n+\n+    if (counts == 1) {\n+      return last_observed_index;\n+    } else {\n+      // Duplicate or not found\n+      return -1;\n+    }\n+  }\n+\n   auto it = name_to_index_.find(name);\n   if (it == name_to_index_.end()) {\n     return -1;\n@@ -252,6 +271,14 @@ int StructType::GetChildIndex(const std::string& name) const {\n   }\n }\n \n+std::shared_ptr<Field> StructType::GetChildByName(const std::string& name) const {\n+  return GetFieldByName(name);\n+}\n+\n+int StructType::GetChildIndex(const std::string& name) const {\n+  return GetFieldIndex(name);\n+}\n+\n // ----------------------------------------------------------------------\n // DictionaryType\n \ndiff --git a/cpp/src/arrow/type.h b/cpp/src/arrow/type.h\nindex 9694202b97..a1e0e80ff1 100644\n--- a/cpp/src/arrow/type.h\n+++ b/cpp/src/arrow/type.h\n@@ -515,9 +515,16 @@ class ARROW_EXPORT StructType : public NestedType {\n   std::string name() const override { return \"struct\"; }\n \n   /// Returns null if name not found\n+  std::shared_ptr<Field> GetFieldByName(const std::string& name) const;\n+\n+  /// Returns -1 if name not found or if there are multiple fields having the\n+  /// same name\n+  int GetFieldIndex(const std::string& name) const;\n+\n+  ARROW_DEPRECATED(\"Use GetFieldByName\")\n   std::shared_ptr<Field> GetChildByName(const std::string& name) const;\n \n-  /// Returns -1 if name not found\n+  ARROW_DEPRECATED(\"Use GetChildIndex\")\n   int GetChildIndex(const std::string& name) const;\n \n  private:\ndiff --git a/python/pyarrow/includes/libarrow.pxd b/python/pyarrow/includes/libarrow.pxd\nindex 61517e4f09..f4629af061 100644\n--- a/python/pyarrow/includes/libarrow.pxd\n+++ b/python/pyarrow/includes/libarrow.pxd\n@@ -276,8 +276,8 @@ cdef extern from \"arrow/api.h\" namespace \"arrow\" nogil:\n     cdef cppclass CStructType\" arrow::StructType\"(CDataType):\n         CStructType(const vector[shared_ptr[CField]]& fields)\n \n-        shared_ptr[CField] GetChildByName(const c_string& name)\n-        int GetChildIndex(const c_string& name)\n+        shared_ptr[CField] GetFieldByName(const c_string& name)\n+        int GetFieldIndex(const c_string& name)\n \n     cdef cppclass CUnionType\" arrow::UnionType\"(CDataType):\n         CUnionType(const vector[shared_ptr[CField]]& fields,\ndiff --git a/python/pyarrow/lib.pxd b/python/pyarrow/lib.pxd\nindex 3e628263ba..d829d6a0c5 100644\n--- a/python/pyarrow/lib.pxd\n+++ b/python/pyarrow/lib.pxd\n@@ -65,7 +65,8 @@ cdef class StructType(DataType):\n     cdef:\n         const CStructType* struct_type\n \n-    cdef Field child_by_name(self, name)\n+    cdef Field field(self, int i)\n+    cdef Field field_by_name(self, name)\n \n \n cdef class DictionaryType(DataType):\ndiff --git a/python/pyarrow/scalar.pxi b/python/pyarrow/scalar.pxi\nindex a2a133beb4..fd3f58072d 100644\n--- a/python/pyarrow/scalar.pxi\n+++ b/python/pyarrow/scalar.pxi\n@@ -470,7 +470,7 @@ cdef class StructValue(ArrayValue):\n             int index\n \n         type = <CStructType*> self.type.type\n-        index = type.GetChildIndex(tobytes(key))\n+        index = type.GetFieldIndex(tobytes(key))\n \n         if index < 0:\n             raise KeyError(key)\ndiff --git a/python/pyarrow/tests/test_types.py b/python/pyarrow/tests/test_types.py\nindex 310656d86f..4dd4155402 100644\n--- a/python/pyarrow/tests/test_types.py\n+++ b/python/pyarrow/tests/test_types.py\n@@ -231,9 +231,12 @@ def test_list_type():\n \n \n def test_struct_type():\n-    fields = [pa.field('a', pa.int64()),\n-              pa.field('a', pa.int32()),\n-              pa.field('b', pa.int32())]\n+    fields = [\n+        # Duplicate field name on purpose\n+        pa.field('a', pa.int64()),\n+        pa.field('a', pa.int32()),\n+        pa.field('b', pa.int32())\n+    ]\n     ty = pa.struct(fields)\n \n     assert len(ty) == ty.num_children == 3\n@@ -243,11 +246,17 @@ def test_struct_type():\n     with pytest.raises(IndexError):\n         assert ty[3]\n \n-    assert ty['a'] == ty[1]\n     assert ty['b'] == ty[2]\n+\n+    # Duplicate\n+    with pytest.raises(KeyError):\n+        ty['a']\n+\n+    # Not found\n     with pytest.raises(KeyError):\n         ty['c']\n \n+    # Neither integer nor string\n     with pytest.raises(TypeError):\n         ty[None]\n \ndiff --git a/python/pyarrow/types.pxi b/python/pyarrow/types.pxi\nindex d367a8a856..29b2a1ea3c 100644\n--- a/python/pyarrow/types.pxi\n+++ b/python/pyarrow/types.pxi\n@@ -213,13 +213,19 @@ cdef class StructType(DataType):\n         DataType.init(self, type)\n         self.struct_type = <const CStructType*> type.get()\n \n-    cdef Field child_by_name(self, name):\n+    cdef Field field(self, int i):\n+        \"\"\"\n+        Alias for child(i)\n+        \"\"\"\n+        return self.child(i)\n+\n+    cdef Field field_by_name(self, name):\n         \"\"\"\n         Access a child field by its name rather than the column index.\n         \"\"\"\n         cdef shared_ptr[CField] field\n \n-        field = self.struct_type.GetChildByName(tobytes(name))\n+        field = self.struct_type.GetFieldByName(tobytes(name))\n         if field == nullptr:\n             raise KeyError(name)\n \n@@ -234,7 +240,7 @@ cdef class StructType(DataType):\n \n     def __getitem__(self, i):\n         if isinstance(i, six.string_types):\n-            return self.child_by_name(i)\n+            return self.field_by_name(i)\n         elif isinstance(i, six.integer_types):\n             return self.child(i)\n         else:\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-19T21:51:26.711+0000",
                    "updated": "2018-12-19T21:51:26.711+0000",
                    "started": "2018-12-19T21:51:26.710+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "177206",
                    "issueId": "13192334"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192334/worklog/177809",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #3220: ARROW-3545: [C++/Python] Use \"field\" terminology with StructType, specify behavior with duplicate field names\nURL: https://github.com/apache/arrow/pull/3220#discussion_r243456023\n \n \n\n ##########\n File path: cpp/src/arrow/type.h\n ##########\n @@ -515,9 +515,16 @@ class ARROW_EXPORT StructType : public NestedType {\n   std::string name() const override { return \"struct\"; }\n \n   /// Returns null if name not found\n+  std::shared_ptr<Field> GetFieldByName(const std::string& name) const;\n+\n+  /// Returns -1 if name not found or if there are multiple fields having the\n+  /// same name\n+  int GetFieldIndex(const std::string& name) const;\n+\n+  ARROW_DEPRECATED(\"Use GetFieldByName\")\n   std::shared_ptr<Field> GetChildByName(const std::string& name) const;\n \n-  /// Returns -1 if name not found\n+  ARROW_DEPRECATED(\"Use GetChildIndex\")\n \n Review comment:\n   We must apply this change. This is a typo.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-21T00:03:38.656+0000",
                    "updated": "2018-12-21T00:03:38.656+0000",
                    "started": "2018-12-21T00:03:38.656+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "177809",
                    "issueId": "13192334"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192334/worklog/177811",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #3220: ARROW-3545: [C++/Python] Use \"field\" terminology with StructType, specify behavior with duplicate field names\nURL: https://github.com/apache/arrow/pull/3220#discussion_r243456520\n \n \n\n ##########\n File path: cpp/src/arrow/type.h\n ##########\n @@ -515,9 +515,16 @@ class ARROW_EXPORT StructType : public NestedType {\n   std::string name() const override { return \"struct\"; }\n \n   /// Returns null if name not found\n+  std::shared_ptr<Field> GetFieldByName(const std::string& name) const;\n+\n+  /// Returns -1 if name not found or if there are multiple fields having the\n+  /// same name\n+  int GetFieldIndex(const std::string& name) const;\n+\n+  ARROW_DEPRECATED(\"Use GetFieldByName\")\n   std::shared_ptr<Field> GetChildByName(const std::string& name) const;\n \n-  /// Returns -1 if name not found\n+  ARROW_DEPRECATED(\"Use GetChildIndex\")\n \n Review comment:\n   #3238\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-21T00:06:45.009+0000",
                    "updated": "2018-12-21T00:06:45.009+0000",
                    "started": "2018-12-21T00:06:45.008+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "177811",
                    "issueId": "13192334"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 4800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5543b054[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@565241f3[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@202e6cfd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6437fcd2[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@447e712c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@11898346[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@42134c0e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1999e9f2[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2ed91cfc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@731739d2[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2b3c7882[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7dbcd26e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 4800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Dec 19 21:58:30 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-12-19T21:58:30.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3545/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-10-17T18:34:45.000+0000",
        "updated": "2018-12-21T00:06:45.000+0000",
        "timeoriginalestimate": null,
        "description": "See discussion in https://github.com/apache/arrow/pull/2754",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 4800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++/Python] Normalize child/field terminology with StructType",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192334/comment/16705367",
                    "id": "16705367",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Better to do API changes early (though I guess we'll keep compatibility aliases). [~kszucs]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-11-30T22:37:53.022+0000",
                    "updated": "2018-11-30T22:37:53.022+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192334/comment/16725373",
                    "id": "16725373",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 3220\n[https://github.com/apache/arrow/pull/3220]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-12-19T21:58:30.890+0000",
                    "updated": "2018-12-19T21:58:30.890+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|i3zbpz:",
        "customfield_12314139": null
    }
}