{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13336941",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336941",
    "key": "ARROW-10378",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=drusso",
            "name": "drusso",
            "key": "drusso",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=drusso&avatarId=43921",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=drusso&avatarId=43921",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=drusso&avatarId=43921",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=drusso&avatarId=43921"
            },
            "displayName": "Daniel Russo",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=drusso",
            "name": "drusso",
            "key": "drusso",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=drusso&avatarId=43921",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=drusso&avatarId=43921",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=drusso&avatarId=43921",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=drusso&avatarId=43921"
            },
            "displayName": "Daniel Russo",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=drusso",
            "name": "drusso",
            "key": "drusso",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=drusso&avatarId=43921",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=drusso&avatarId=43921",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=drusso&avatarId=43921",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=drusso&avatarId=43921"
            },
            "displayName": "Daniel Russo",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 5400,
            "total": 5400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 5400,
            "total": 5400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10378/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 9,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336941/worklog/506822",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #8556:\nURL: https://github.com/apache/arrow/pull/8556#issuecomment-720276815\n\n\n   I've been away for a few days, I'll review this in the evening GMT+2, as I worked on the initial `take_list()`\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-03T13:49:28.430+0000",
                    "updated": "2020-11-03T13:49:28.430+0000",
                    "started": "2020-11-03T13:49:28.430+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "506822",
                    "issueId": "13336941"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336941/worklog/508127",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #8556:\nURL: https://github.com/apache/arrow/pull/8556#discussion_r518033636\n\n\n\n##########\nFile path: rust/arrow/src/compute/util.rs\n##########\n@@ -100,41 +99,55 @@ pub(super) fn compare_option_bitmap(\n /// Where a list array has indices `[0,2,5,10]`, taking indices of `[2,0]` returns\n /// an array of the indices `[5..10, 0..2]` and offsets `[0,5,7]` (5 elements and 2\n /// elements)\n-pub(super) fn take_value_indices_from_list(\n+pub(super) fn take_value_indices_from_list<IndexType, OffsetType>(\n     values: &ArrayRef,\n-    indices: &UInt32Array,\n-) -> (UInt32Array, Vec<i32>) {\n+    indices: &PrimitiveArray<IndexType>,\n+) -> Result<(PrimitiveArray<OffsetType>, Vec<OffsetType::Native>)>\n+where\n+    IndexType: ArrowNumericType,\n+    IndexType::Native: ToPrimitive,\n+    OffsetType: ArrowNumericType,\n+    OffsetType::Native: OffsetSizeTrait + Add + Zero + One,\n+    PrimitiveArray<OffsetType>: From<Vec<Option<OffsetType::Native>>>,\n+{\n     // TODO: benchmark this function, there might be a faster unsafe alternative\n     // get list array's offsets\n-    let list: &ListArray = values.as_any().downcast_ref::<ListArray>().unwrap();\n-    let offsets: Vec<u32> = (0..=list.len())\n-        .map(|i| list.value_offset(i) as u32)\n-        .collect();\n+    let list = values\n+        .as_any()\n+        .downcast_ref::<GenericListArray<OffsetType::Native>>()\n+        .unwrap();\n+    let offsets: Vec<OffsetType::Native> =\n+        (0..=list.len()).map(|i| list.value_offset(i)).collect();\n+\n     let mut new_offsets = Vec::with_capacity(indices.len());\n     let mut values = Vec::new();\n-    let mut current_offset = 0;\n+    let mut current_offset = OffsetType::Native::zero();\n     // add first offset\n-    new_offsets.push(0);\n+    new_offsets.push(OffsetType::Native::zero());\n     // compute the value indices, and set offsets accordingly\n     for i in 0..indices.len() {\n         if indices.is_valid(i) {\n-            let ix = indices.value(i) as usize;\n+            let ix = ToPrimitive::to_usize(&indices.value(i)).ok_or_else(|| {\n+                ArrowError::ComputeError(\"Cast to usize failed\".to_string())\n+            })?;\n             let start = offsets[ix];\n             let end = offsets[ix + 1];\n-            current_offset += (end - start) as i32;\n+            current_offset = current_offset + (end - start);\n             new_offsets.push(current_offset);\n+\n+            let mut curr = start;\n+\n             // if start == end, this slot is empty\n-            if start != end {\n\nReview comment:\n       is there a reason to change this loop from a `collect`?\n\n##########\nFile path: rust/arrow/src/compute/kernels/take.rs\n##########\n@@ -195,15 +217,21 @@ where\n \n     let null_slice = null_buf.data_mut();\n \n-    let new_values: Vec<T::Native> = (0..data_len)\n-        .map(|i| {\n-            let index = indices.value(i) as usize;\n-            if array.is_null(index) {\n-                bit_util::unset_bit(null_slice, i);\n-            }\n-            array.value(index)\n-        })\n-        .collect();\n+    let mut new_values: Vec<T::Native> = Vec::with_capacity(data_len);\n+    let mut i = 0;\n+    while i < data_len {\n\nReview comment:\n       I wonder if there was any particular reason to rewrite this (at least to me) Rust idomatic `map` to a `while` loop?\r\n   \r\n   It seems like you could perhaps do something like this (untested) if you wanted to keep the same loop structure and only change the index calculation:\r\n   \r\n   ```\r\n       let new_values: Vec<T::Native> = (0..data_len)\r\n           .map(|i| {\r\n               let index = ToPrimitive::to_usize(&indices.value(i)).ok_or_else(|| {\r\n                 ArrowError::ComputeError(\"Cast to usize failed\".to_string())\r\n               })?;\r\n               if array.is_null(index) {\r\n                   bit_util::unset_bit(null_slice, i);\r\n               }\r\n               Ok(array.value(index))\r\n           })\r\n           .collect::<Result<Vec<_>>()?;\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-05T13:04:42.953+0000",
                    "updated": "2020-11-05T13:04:42.953+0000",
                    "started": "2020-11-05T13:04:42.953+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "508127",
                    "issueId": "13336941"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336941/worklog/508553",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "drusso commented on a change in pull request #8556:\nURL: https://github.com/apache/arrow/pull/8556#discussion_r518923411\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/take.rs\n##########\n@@ -195,15 +217,21 @@ where\n \n     let null_slice = null_buf.data_mut();\n \n-    let new_values: Vec<T::Native> = (0..data_len)\n-        .map(|i| {\n-            let index = indices.value(i) as usize;\n-            if array.is_null(index) {\n-                bit_util::unset_bit(null_slice, i);\n-            }\n-            array.value(index)\n-        })\n-        .collect();\n+    let mut new_values: Vec<T::Native> = Vec::with_capacity(data_len);\n+    let mut i = 0;\n+    while i < data_len {\n\nReview comment:\n       I initially implemented this just as you wrote, but I opted for the `while` since it makes a non-negligible difference in the benchmarks. \r\n   \r\n   I believe the while loop and the original `::collect::Vec<T::Native>()` version show equivalent performance \u2013 it's the while loop vs. `::collect::<Result<Vec<_>>()?` where there's difference. \r\n   \r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-06T18:16:56.813+0000",
                    "updated": "2020-11-06T18:16:56.813+0000",
                    "started": "2020-11-06T18:16:56.813+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "508553",
                    "issueId": "13336941"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336941/worklog/508554",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "drusso commented on a change in pull request #8556:\nURL: https://github.com/apache/arrow/pull/8556#discussion_r518923411\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/take.rs\n##########\n@@ -195,15 +217,21 @@ where\n \n     let null_slice = null_buf.data_mut();\n \n-    let new_values: Vec<T::Native> = (0..data_len)\n-        .map(|i| {\n-            let index = indices.value(i) as usize;\n-            if array.is_null(index) {\n-                bit_util::unset_bit(null_slice, i);\n-            }\n-            array.value(index)\n-        })\n-        .collect();\n+    let mut new_values: Vec<T::Native> = Vec::with_capacity(data_len);\n+    let mut i = 0;\n+    while i < data_len {\n\nReview comment:\n       I initially implemented this just as you wrote, but I opted for the `while` since it makes a non-negligible difference in the benchmarks. \r\n   \r\n   I believe the while loop and the original `::collect::Vec<T::Native>()` version show equivalent performance \u2013 it's the while loop vs. `::collect::<Result<Vec<_>>()?` where there's a difference. \r\n   \r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-06T18:17:29.814+0000",
                    "updated": "2020-11-06T18:17:29.814+0000",
                    "started": "2020-11-06T18:17:29.814+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "508554",
                    "issueId": "13336941"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336941/worklog/508559",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "drusso commented on a change in pull request #8556:\nURL: https://github.com/apache/arrow/pull/8556#discussion_r518926998\n\n\n\n##########\nFile path: rust/arrow/src/compute/util.rs\n##########\n@@ -100,41 +99,55 @@ pub(super) fn compare_option_bitmap(\n /// Where a list array has indices `[0,2,5,10]`, taking indices of `[2,0]` returns\n /// an array of the indices `[5..10, 0..2]` and offsets `[0,5,7]` (5 elements and 2\n /// elements)\n-pub(super) fn take_value_indices_from_list(\n+pub(super) fn take_value_indices_from_list<IndexType, OffsetType>(\n     values: &ArrayRef,\n-    indices: &UInt32Array,\n-) -> (UInt32Array, Vec<i32>) {\n+    indices: &PrimitiveArray<IndexType>,\n+) -> Result<(PrimitiveArray<OffsetType>, Vec<OffsetType::Native>)>\n+where\n+    IndexType: ArrowNumericType,\n+    IndexType::Native: ToPrimitive,\n+    OffsetType: ArrowNumericType,\n+    OffsetType::Native: OffsetSizeTrait + Add + Zero + One,\n+    PrimitiveArray<OffsetType>: From<Vec<Option<OffsetType::Native>>>,\n+{\n     // TODO: benchmark this function, there might be a faster unsafe alternative\n     // get list array's offsets\n-    let list: &ListArray = values.as_any().downcast_ref::<ListArray>().unwrap();\n-    let offsets: Vec<u32> = (0..=list.len())\n-        .map(|i| list.value_offset(i) as u32)\n-        .collect();\n+    let list = values\n+        .as_any()\n+        .downcast_ref::<GenericListArray<OffsetType::Native>>()\n+        .unwrap();\n+    let offsets: Vec<OffsetType::Native> =\n+        (0..=list.len()).map(|i| list.value_offset(i)).collect();\n+\n     let mut new_offsets = Vec::with_capacity(indices.len());\n     let mut values = Vec::new();\n-    let mut current_offset = 0;\n+    let mut current_offset = OffsetType::Native::zero();\n     // add first offset\n-    new_offsets.push(0);\n+    new_offsets.push(OffsetType::Native::zero());\n     // compute the value indices, and set offsets accordingly\n     for i in 0..indices.len() {\n         if indices.is_valid(i) {\n-            let ix = indices.value(i) as usize;\n+            let ix = ToPrimitive::to_usize(&indices.value(i)).ok_or_else(|| {\n+                ArrowError::ComputeError(\"Cast to usize failed\".to_string())\n+            })?;\n             let start = offsets[ix];\n             let end = offsets[ix + 1];\n-            current_offset += (end - start) as i32;\n+            current_offset = current_offset + (end - start);\n             new_offsets.push(current_offset);\n+\n+            let mut curr = start;\n+\n             // if start == end, this slot is empty\n-            if start != end {\n\nReview comment:\n       Yes, because `(start..end)` would be a range of `OffsetType::Native`, we can't iterate over the range without an implementation of `std::iter::Step` \u2013 but we can't use it because it's still part of the nightly experimental API. \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-06T18:23:52.162+0000",
                    "updated": "2020-11-06T18:23:52.162+0000",
                    "started": "2020-11-06T18:23:52.162+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "508559",
                    "issueId": "13336941"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336941/worklog/508561",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #8556:\nURL: https://github.com/apache/arrow/pull/8556#discussion_r518934329\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/take.rs\n##########\n@@ -195,15 +217,21 @@ where\n \n     let null_slice = null_buf.data_mut();\n \n-    let new_values: Vec<T::Native> = (0..data_len)\n-        .map(|i| {\n-            let index = indices.value(i) as usize;\n-            if array.is_null(index) {\n-                bit_util::unset_bit(null_slice, i);\n-            }\n-            array.value(index)\n-        })\n-        .collect();\n+    let mut new_values: Vec<T::Native> = Vec::with_capacity(data_len);\n+    let mut i = 0;\n+    while i < data_len {\n\nReview comment:\n       that makes sense -- it might be worth mentioning that in comments somewhere (`// use while loop for performance`)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-06T18:38:08.096+0000",
                    "updated": "2020-11-06T18:38:08.096+0000",
                    "started": "2020-11-06T18:38:08.096+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "508561",
                    "issueId": "13336941"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336941/worklog/508572",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "drusso commented on a change in pull request #8556:\nURL: https://github.com/apache/arrow/pull/8556#discussion_r518962602\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/take.rs\n##########\n@@ -195,15 +217,21 @@ where\n \n     let null_slice = null_buf.data_mut();\n \n-    let new_values: Vec<T::Native> = (0..data_len)\n-        .map(|i| {\n-            let index = indices.value(i) as usize;\n-            if array.is_null(index) {\n-                bit_util::unset_bit(null_slice, i);\n-            }\n-            array.value(index)\n-        })\n-        .collect();\n+    let mut new_values: Vec<T::Native> = Vec::with_capacity(data_len);\n+    let mut i = 0;\n+    while i < data_len {\n\nReview comment:\n       Added in f60e629. \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-06T19:36:07.027+0000",
                    "updated": "2020-11-06T19:36:07.027+0000",
                    "started": "2020-11-06T19:36:07.027+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "508572",
                    "issueId": "13336941"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336941/worklog/508742",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #8556:\nURL: https://github.com/apache/arrow/pull/8556#discussion_r519166695\n\n\n\n##########\nFile path: rust/arrow/src/compute/util.rs\n##########\n@@ -100,41 +99,55 @@ pub(super) fn compare_option_bitmap(\n /// Where a list array has indices `[0,2,5,10]`, taking indices of `[2,0]` returns\n /// an array of the indices `[5..10, 0..2]` and offsets `[0,5,7]` (5 elements and 2\n /// elements)\n-pub(super) fn take_value_indices_from_list(\n+pub(super) fn take_value_indices_from_list<IndexType, OffsetType>(\n     values: &ArrayRef,\n-    indices: &UInt32Array,\n-) -> (UInt32Array, Vec<i32>) {\n+    indices: &PrimitiveArray<IndexType>,\n+) -> Result<(PrimitiveArray<OffsetType>, Vec<OffsetType::Native>)>\n+where\n+    IndexType: ArrowNumericType,\n+    IndexType::Native: ToPrimitive,\n+    OffsetType: ArrowNumericType,\n+    OffsetType::Native: OffsetSizeTrait + Add + Zero + One,\n+    PrimitiveArray<OffsetType>: From<Vec<Option<OffsetType::Native>>>,\n+{\n     // TODO: benchmark this function, there might be a faster unsafe alternative\n     // get list array's offsets\n-    let list: &ListArray = values.as_any().downcast_ref::<ListArray>().unwrap();\n-    let offsets: Vec<u32> = (0..=list.len())\n-        .map(|i| list.value_offset(i) as u32)\n-        .collect();\n+    let list = values\n+        .as_any()\n+        .downcast_ref::<GenericListArray<OffsetType::Native>>()\n+        .unwrap();\n+    let offsets: Vec<OffsetType::Native> =\n+        (0..=list.len()).map(|i| list.value_offset(i)).collect();\n+\n     let mut new_offsets = Vec::with_capacity(indices.len());\n     let mut values = Vec::new();\n-    let mut current_offset = 0;\n+    let mut current_offset = OffsetType::Native::zero();\n     // add first offset\n-    new_offsets.push(0);\n+    new_offsets.push(OffsetType::Native::zero());\n     // compute the value indices, and set offsets accordingly\n     for i in 0..indices.len() {\n         if indices.is_valid(i) {\n-            let ix = indices.value(i) as usize;\n+            let ix = ToPrimitive::to_usize(&indices.value(i)).ok_or_else(|| {\n+                ArrowError::ComputeError(\"Cast to usize failed\".to_string())\n+            })?;\n             let start = offsets[ix];\n             let end = offsets[ix + 1];\n-            current_offset += (end - start) as i32;\n+            current_offset = current_offset + (end - start);\n\nReview comment:\n       I probably did this in response to a clippy lint, but it's fine as we have more lints to fix at some point\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-07T11:19:57.611+0000",
                    "updated": "2020-11-07T11:19:57.611+0000",
                    "started": "2020-11-07T11:19:57.611+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "508742",
                    "issueId": "13336941"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336941/worklog/508743",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me closed pull request #8556:\nURL: https://github.com/apache/arrow/pull/8556\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-07T11:23:11.078+0000",
                    "updated": "2020-11-07T11:23:11.078+0000",
                    "started": "2020-11-07T11:23:11.078+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "508743",
                    "issueId": "13336941"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 5400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7243dff5[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@52470b3f[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@11ab432d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7bdfbcd4[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7446a385[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5524691a[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1e5deab8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1862ccbb[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@59791eb9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2fe3c035[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5e1af75b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5013ef37[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 5400,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Nov 07 11:23:03 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-11-07T11:23:03.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10378/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-10-23T14:51:33.000+0000",
        "updated": "2020-11-07T11:23:12.000+0000",
        "timeoriginalestimate": null,
        "description": "The {{take()}} kernel currently supports arrays with the {{List}}\u00a0type ([here|https://github.com/apache/arrow/blob/eea8d352bf3196a29c1ccf5e6c7342913916048a/rust/arrow/src/compute/kernels/take.rs#L130]), but not {{LargeList}}. Update {{take()}}\u00a0to support {{LargeList}}.\u00a0\r\n\r\n\u00a0\r\n\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 5400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Update take() kernel with support for large lists",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336941/comment/17227779",
                    "id": "17227779",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "body": "Issue resolved by pull request 8556\n[https://github.com/apache/arrow/pull/8556]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "created": "2020-11-07T11:23:03.191+0000",
                    "updated": "2020-11-07T11:23:03.191+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0jyjs:",
        "customfield_12314139": null
    }
}