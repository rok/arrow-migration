{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13119531",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531",
    "key": "ARROW-1837",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344925",
                "id": "12344925",
                "description": "",
                "name": "0.14.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-07-04"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "columnar-format-1.0",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "1.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
            "name": "emkornfield@gmail.com",
            "key": "emkornfield@gmail.com",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Micah Kornfield",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 16800,
            "total": 16800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 16800,
            "total": 16800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1837/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 29,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/worklog/251622",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4432: ARROW-1837: [Java][Integration] Fix unsigned round trip integration tests\nURL: https://github.com/apache/arrow/pull/4432\n \n \n   - Show unsigned values can be round-tripped between java and C++\r\n     in integration tests.  This doesn't fully fix the problem because\r\n     the UInt* APIs are mostly wrong because they can't represent the\r\n     full range of unsigned values (return types are all too small\r\n     because java only has signed types).\r\n   \r\n   - While I was at it, I fixed the issue with no batches.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-31T08:21:11.348+0000",
                    "updated": "2019-05-31T08:21:11.348+0000",
                    "started": "2019-05-31T08:21:11.347+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "251622",
                    "issueId": "13119531"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/worklog/251669",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4432: ARROW-1837: [Java][Integration] Fix unsigned round trip integration tests\nURL: https://github.com/apache/arrow/pull/4432#issuecomment-497652205\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4432?src=pr&el=h1) Report\n   > :exclamation: No coverage uploaded for pull request base (`master@fcbcccb`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4432/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4432?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff            @@\n   ##             master    #4432   +/-   ##\n   =========================================\n     Coverage          ?   89.44%           \n   =========================================\n     Files             ?      642           \n     Lines             ?    89438           \n     Branches          ?        0           \n   =========================================\n     Hits              ?    79998           \n     Misses            ?     9440           \n     Partials          ?        0\n   ```\n   \n   \n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4432?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4432?src=pr&el=footer). Last update [fcbcccb...dcea791](https://codecov.io/gh/apache/arrow/pull/4432?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-31T09:56:50.374+0000",
                    "updated": "2019-05-31T09:56:50.374+0000",
                    "started": "2019-05-31T09:56:50.374+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "251669",
                    "issueId": "13119531"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/worklog/251834",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4432: ARROW-1837: [Java][Integration] Fix unsigned round trip integration tests\nURL: https://github.com/apache/arrow/pull/4432#issuecomment-497749042\n \n \n   Awesome, thanks @emkornfield! @pravindra or @siddharthteotia could you review the Java changes?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-31T15:21:42.227+0000",
                    "updated": "2019-05-31T15:21:42.227+0000",
                    "started": "2019-05-31T15:21:42.226+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "251834",
                    "issueId": "13119531"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/worklog/253152",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4432: ARROW-1837: [Java][Integration] Fix unsigned round trip integration tests\nURL: https://github.com/apache/arrow/pull/4432#issuecomment-498302455\n \n \n   Rebased. Java reviewers (@jacques-n, @pravindra, or @siddharthteotia), could you take a look? Thanks\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-03T15:20:55.263+0000",
                    "updated": "2019-06-03T15:20:55.263+0000",
                    "started": "2019-06-03T15:20:55.263+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "253152",
                    "issueId": "13119531"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/worklog/253221",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on pull request #4432: ARROW-1837: [Java][Integration] Fix unsigned round trip integration tests\nURL: https://github.com/apache/arrow/pull/4432#discussion_r289950622\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/UInt1Vector.java\n ##########\n @@ -62,6 +64,23 @@ public MinorType getMinorType() {\n    |          vector value retrieval methods                        |\n    |                                                                |\n    *----------------------------------------------------------------*/\n+  /**\n+   * Given a data buffer, get the value stored at a particular position\n+   * in the vector.\n+   *\n+   * <p>To avoid overflow, the returned type is one step up from the signed\n+   * type.\n+   *\n+   * <p>This method should not be used externally.\n \n Review comment:\n   i am not sure what this means :) why is the method public but not usable externally..\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-03T17:25:14.892+0000",
                    "updated": "2019-06-03T17:25:14.892+0000",
                    "started": "2019-06-03T17:25:14.892+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "253221",
                    "issueId": "13119531"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/worklog/253222",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on pull request #4432: ARROW-1837: [Java][Integration] Fix unsigned round trip integration tests\nURL: https://github.com/apache/arrow/pull/4432#discussion_r289950042\n \n \n\n ##########\n File path: java/tools/src/main/java/org/apache/arrow/tools/StreamToFile.java\n ##########\n @@ -42,13 +42,12 @@ public static void convert(InputStream in, OutputStream out) throws IOException\n     BufferAllocator allocator = new RootAllocator(Integer.MAX_VALUE);\n     try (ArrowStreamReader reader = new ArrowStreamReader(in, allocator)) {\n       VectorSchemaRoot root = reader.getVectorSchemaRoot();\n-      // load the first batch before instantiating the writer so that we have any dictionaries\n-      if (!reader.loadNextBatch()) {\n-        throw new IOException(\"Unable to read first record batch\");\n-      }\n+      // load the first batch before instantiating the writer so that we have any dictionaries.\n \n Review comment:\n   same here.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-03T17:25:14.894+0000",
                    "updated": "2019-06-03T17:25:14.894+0000",
                    "started": "2019-06-03T17:25:14.893+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "253222",
                    "issueId": "13119531"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/worklog/253223",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on pull request #4432: ARROW-1837: [Java][Integration] Fix unsigned round trip integration tests\nURL: https://github.com/apache/arrow/pull/4432#discussion_r289949871\n \n \n\n ##########\n File path: java/tools/src/main/java/org/apache/arrow/tools/FileToStream.java\n ##########\n @@ -44,12 +44,11 @@ public static void convert(FileInputStream in, OutputStream out) throws IOExcept\n     try (ArrowFileReader reader = new ArrowFileReader(in.getChannel(), allocator)) {\n       VectorSchemaRoot root = reader.getVectorSchemaRoot();\n       // load the first batch before instantiating the writer so that we have any dictionaries\n-      if (!reader.loadNextBatch()) {\n-        throw new IOException(\"Unable to read first record batch\");\n-      }\n+      // only writeBatches if we loaded one in the first palce.\n+      boolean writeBatches = reader.loadNextBatch();\n \n Review comment:\n   is this not different from the behavior earlier - we would have thrown exception earlier for zero batches vs what it looks like proceeding silently now?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-03T17:25:14.954+0000",
                    "updated": "2019-06-03T17:25:14.954+0000",
                    "started": "2019-06-03T17:25:14.954+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "253223",
                    "issueId": "13119531"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/worklog/253224",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jacques-n commented on pull request #4432: ARROW-1837: [Java][Integration] Fix unsigned round trip integration tests\nURL: https://github.com/apache/arrow/pull/4432#discussion_r289908655\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/UInt1Vector.java\n ##########\n @@ -62,6 +64,23 @@ public MinorType getMinorType() {\n    |          vector value retrieval methods                        |\n    |                                                                |\n    *----------------------------------------------------------------*/\n+  /**\n+   * Given a data buffer, get the value stored at a particular position\n+   * in the vector.\n+   *\n+   * <p>To avoid overflow, the returned type is one step up from the signed\n+   * type.\n+   *\n+   * <p>This method should not be used externally.\n+   *\n+   * @param buffer data buffer\n+   * @param index position of the element.\n+   * @return value stored at the index.\n+   */\n+  public static short getNoOverflow(final ArrowBuf buffer, final int index) {\n \n Review comment:\n   why public if this should not be used externally?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-03T17:29:38.835+0000",
                    "updated": "2019-06-03T17:29:38.835+0000",
                    "started": "2019-06-03T17:29:38.834+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "253224",
                    "issueId": "13119531"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/worklog/253225",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jacques-n commented on pull request #4432: ARROW-1837: [Java][Integration] Fix unsigned round trip integration tests\nURL: https://github.com/apache/arrow/pull/4432#discussion_r289909427\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/UInt2Vector.java\n ##########\n @@ -63,6 +65,23 @@ public MinorType getMinorType() {\n    |                                                                |\n    *----------------------------------------------------------------*/\n \n+  /**\n+   * Given a data buffer, get the value stored at a particular position\n+   * in the vector.\n+   *\n+   * <p>To avoid overflow, the returned type is one step up from the signed\n+   * type.\n+   *\n+   * <p>This method should not be used externally.\n+   *\n+   * @param buffer data buffer\n+   * @param index position of the element.\n+   * @return value stored at the index.\n+   */\n+  public static int getNoOverflow(final ArrowBuf buffer, final int index) {\n \n Review comment:\n   you can return char here. it is an unsigned 2 byte value.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-03T17:29:38.973+0000",
                    "updated": "2019-06-03T17:29:38.973+0000",
                    "started": "2019-06-03T17:29:38.972+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "253225",
                    "issueId": "13119531"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/worklog/253226",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jacques-n commented on pull request #4432: ARROW-1837: [Java][Integration] Fix unsigned round trip integration tests\nURL: https://github.com/apache/arrow/pull/4432#discussion_r289909245\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/UInt1Vector.java\n ##########\n @@ -107,6 +126,20 @@ public Byte getObject(int index) {\n     }\n   }\n \n+  /**\n+   * Returns the value stored at index without the potential for overflow.\n+   *\n+   * @param index   position of element\n+   * @return element at given index\n+   */\n+  public Short getObjectNoOverflow(int index) {\n+    if (isSet(index) == 0) {\n \n Review comment:\n   isn't there some new pattern about these where we optionally check isSet?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-03T17:29:39.046+0000",
                    "updated": "2019-06-03T17:29:39.046+0000",
                    "started": "2019-06-03T17:29:39.046+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "253226",
                    "issueId": "13119531"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/worklog/253229",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4432: ARROW-1837: [Java][Integration] Fix unsigned round trip integration tests\nURL: https://github.com/apache/arrow/pull/4432#issuecomment-497652205\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4432?src=pr&el=h1) Report\n   > :exclamation: No coverage uploaded for pull request base (`master@4dda722`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4432/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4432?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff            @@\n   ##             master    #4432   +/-   ##\n   =========================================\n     Coverage          ?   89.46%           \n   =========================================\n     Files             ?      644           \n     Lines             ?    89513           \n     Branches          ?        0           \n   =========================================\n     Hits              ?    80085           \n     Misses            ?     9428           \n     Partials          ?        0\n   ```\n   \n   \n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4432?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4432?src=pr&el=footer). Last update [4dda722...fb29381](https://codecov.io/gh/apache/arrow/pull/4432?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-03T17:40:59.982+0000",
                    "updated": "2019-06-03T17:40:59.982+0000",
                    "started": "2019-06-03T17:40:59.981+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "253229",
                    "issueId": "13119531"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/worklog/253528",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4432: ARROW-1837: [Java][Integration] Fix unsigned round trip integration tests\nURL: https://github.com/apache/arrow/pull/4432#discussion_r290122960\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/UInt1Vector.java\n ##########\n @@ -62,6 +64,23 @@ public MinorType getMinorType() {\n    |          vector value retrieval methods                        |\n    |                                                                |\n    *----------------------------------------------------------------*/\n+  /**\n+   * Given a data buffer, get the value stored at a particular position\n+   * in the vector.\n+   *\n+   * <p>To avoid overflow, the returned type is one step up from the signed\n+   * type.\n+   *\n+   * <p>This method should not be used externally.\n \n Review comment:\n   this was copy and paste the real intent was only to use for integration tests.  I've updated it.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-04T04:39:10.134+0000",
                    "updated": "2019-06-04T04:39:10.134+0000",
                    "started": "2019-06-04T04:39:10.133+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "253528",
                    "issueId": "13119531"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/worklog/253529",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4432: ARROW-1837: [Java][Integration] Fix unsigned round trip integration tests\nURL: https://github.com/apache/arrow/pull/4432#discussion_r290122989\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/UInt1Vector.java\n ##########\n @@ -62,6 +64,23 @@ public MinorType getMinorType() {\n    |          vector value retrieval methods                        |\n    |                                                                |\n    *----------------------------------------------------------------*/\n+  /**\n+   * Given a data buffer, get the value stored at a particular position\n+   * in the vector.\n+   *\n+   * <p>To avoid overflow, the returned type is one step up from the signed\n+   * type.\n+   *\n+   * <p>This method should not be used externally.\n+   *\n+   * @param buffer data buffer\n+   * @param index position of the element.\n+   * @return value stored at the index.\n+   */\n+  public static short getNoOverflow(final ArrowBuf buffer, final int index) {\n \n Review comment:\n   this was copy and paste the real intent was only to use for integration tests.  I've updated it. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-04T04:39:19.729+0000",
                    "updated": "2019-06-04T04:39:19.729+0000",
                    "started": "2019-06-04T04:39:19.728+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "253529",
                    "issueId": "13119531"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/worklog/253530",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4432: ARROW-1837: [Java][Integration] Fix unsigned round trip integration tests\nURL: https://github.com/apache/arrow/pull/4432#discussion_r290123052\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/UInt2Vector.java\n ##########\n @@ -63,6 +65,23 @@ public MinorType getMinorType() {\n    |                                                                |\n    *----------------------------------------------------------------*/\n \n+  /**\n+   * Given a data buffer, get the value stored at a particular position\n+   * in the vector.\n+   *\n+   * <p>To avoid overflow, the returned type is one step up from the signed\n+   * type.\n+   *\n+   * <p>This method should not be used externally.\n+   *\n+   * @param buffer data buffer\n+   * @param index position of the element.\n+   * @return value stored at the index.\n+   */\n+  public static int getNoOverflow(final ArrowBuf buffer, final int index) {\n \n Review comment:\n   Good point.  Removed the method entirely.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-04T04:39:39.933+0000",
                    "updated": "2019-06-04T04:39:39.933+0000",
                    "started": "2019-06-04T04:39:39.932+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "253530",
                    "issueId": "13119531"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/worklog/253531",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4432: ARROW-1837: [Java][Integration] Fix unsigned round trip integration tests\nURL: https://github.com/apache/arrow/pull/4432#discussion_r290123995\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/UInt1Vector.java\n ##########\n @@ -107,6 +126,20 @@ public Byte getObject(int index) {\n     }\n   }\n \n+  /**\n+   * Returns the value stored at index without the potential for overflow.\n+   *\n+   * @param index   position of element\n+   * @return element at given index\n+   */\n+  public Short getObjectNoOverflow(int index) {\n+    if (isSet(index) == 0) {\n \n Review comment:\n   that is for the primitive types.  getObject is supposed to return null if the bitmap isn't set (and wasn't changed with the PR you are referring to).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-04T04:46:37.166+0000",
                    "updated": "2019-06-04T04:46:37.166+0000",
                    "started": "2019-06-04T04:46:37.165+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "253531",
                    "issueId": "13119531"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/worklog/253532",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4432: ARROW-1837: [Java][Integration] Fix unsigned round trip integration tests\nURL: https://github.com/apache/arrow/pull/4432#discussion_r290124019\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/UInt2Vector.java\n ##########\n @@ -63,6 +65,23 @@ public MinorType getMinorType() {\n    |                                                                |\n    *----------------------------------------------------------------*/\n \n+  /**\n+   * Given a data buffer, get the value stored at a particular position\n+   * in the vector.\n+   *\n+   * <p>To avoid overflow, the returned type is one step up from the signed\n+   * type.\n+   *\n+   * <p>This method should not be used externally.\n+   *\n+   * @param buffer data buffer\n+   * @param index position of the element.\n+   * @return value stored at the index.\n+   */\n+  public static int getNoOverflow(final ArrowBuf buffer, final int index) {\n \n Review comment:\n   Actually just changed it to get\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-04T04:46:48.194+0000",
                    "updated": "2019-06-04T04:46:48.194+0000",
                    "started": "2019-06-04T04:46:48.193+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "253532",
                    "issueId": "13119531"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/worklog/253534",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4432: ARROW-1837: [Java][Integration] Fix unsigned round trip integration tests\nURL: https://github.com/apache/arrow/pull/4432#discussion_r290124500\n \n \n\n ##########\n File path: java/tools/src/main/java/org/apache/arrow/tools/FileToStream.java\n ##########\n @@ -44,12 +44,11 @@ public static void convert(FileInputStream in, OutputStream out) throws IOExcept\n     try (ArrowFileReader reader = new ArrowFileReader(in.getChannel(), allocator)) {\n       VectorSchemaRoot root = reader.getVectorSchemaRoot();\n       // load the first batch before instantiating the writer so that we have any dictionaries\n-      if (!reader.loadNextBatch()) {\n-        throw new IOException(\"Unable to read first record batch\");\n-      }\n+      // only writeBatches if we loaded one in the first palce.\n+      boolean writeBatches = reader.loadNextBatch();\n \n Review comment:\n   Yes, this is intentional.  This was discussed on the ML, we think it is reasonable to have a schema without batches.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-04T04:50:24.094+0000",
                    "updated": "2019-06-04T04:50:24.094+0000",
                    "started": "2019-06-04T04:50:24.093+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "253534",
                    "issueId": "13119531"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/worklog/253535",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4432: ARROW-1837: [Java][Integration] Fix unsigned round trip integration tests\nURL: https://github.com/apache/arrow/pull/4432#discussion_r290124524\n \n \n\n ##########\n File path: java/tools/src/main/java/org/apache/arrow/tools/StreamToFile.java\n ##########\n @@ -42,13 +42,12 @@ public static void convert(InputStream in, OutputStream out) throws IOException\n     BufferAllocator allocator = new RootAllocator(Integer.MAX_VALUE);\n     try (ArrowStreamReader reader = new ArrowStreamReader(in, allocator)) {\n       VectorSchemaRoot root = reader.getVectorSchemaRoot();\n-      // load the first batch before instantiating the writer so that we have any dictionaries\n-      if (!reader.loadNextBatch()) {\n-        throw new IOException(\"Unable to read first record batch\");\n-      }\n+      // load the first batch before instantiating the writer so that we have any dictionaries.\n \n Review comment:\n   See above.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-04T04:50:34.543+0000",
                    "updated": "2019-06-04T04:50:34.543+0000",
                    "started": "2019-06-04T04:50:34.543+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "253535",
                    "issueId": "13119531"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/worklog/253536",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #4432: ARROW-1837: [Java][Integration] Fix unsigned round trip integration tests\nURL: https://github.com/apache/arrow/pull/4432#issuecomment-498520222\n \n \n   @jacques-n  @praveenbingo I think I responded/fixed all your feedback.  Thank you for the review.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-04T04:51:36.221+0000",
                    "updated": "2019-06-04T04:51:36.221+0000",
                    "started": "2019-06-04T04:51:36.220+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "253536",
                    "issueId": "13119531"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/worklog/253550",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "praveenbingo commented on pull request #4432: ARROW-1837: [Java][Integration] Fix unsigned round trip integration tests\nURL: https://github.com/apache/arrow/pull/4432#discussion_r290137261\n \n \n\n ##########\n File path: java/tools/src/main/java/org/apache/arrow/tools/FileToStream.java\n ##########\n @@ -44,12 +44,11 @@ public static void convert(FileInputStream in, OutputStream out) throws IOExcept\n     try (ArrowFileReader reader = new ArrowFileReader(in.getChannel(), allocator)) {\n       VectorSchemaRoot root = reader.getVectorSchemaRoot();\n       // load the first batch before instantiating the writer so that we have any dictionaries\n-      if (!reader.loadNextBatch()) {\n-        throw new IOException(\"Unable to read first record batch\");\n-      }\n+      // only writeBatches if we loaded one in the first palce.\n+      boolean writeBatches = reader.loadNextBatch();\n \n Review comment:\n   would it not be better to do that in a different method? I am not sure if existing clients depend on this for validation?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-04T06:05:12.821+0000",
                    "updated": "2019-06-04T06:05:12.821+0000",
                    "started": "2019-06-04T06:05:12.820+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "253550",
                    "issueId": "13119531"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 16800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@c7eb0c[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6b591bbe[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6a79bac4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@495ec8de[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7b6f2cbb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6389a9da[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@440190f5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7ba6b893[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@792e59a8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@57c7e82e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1f095c1b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@51a51d49[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 16800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jun 05 02:20:08 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-06-05T02:20:08.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1837/watchers",
            "watchCount": 7,
            "isWatching": false
        },
        "created": "2017-11-19T21:58:03.000+0000",
        "updated": "2019-06-05T02:20:22.000+0000",
        "timeoriginalestimate": null,
        "description": "I believe this was introduced recently (perhaps in the refactors), but there was a problem where the integration tests weren't being properly run that hid the error from us\r\n\r\nsee https://github.com/apache/arrow/pull/1294#issuecomment-345553066",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 16800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/attachment/12907785",
                "id": "12907785",
                "filename": "generated_primitive.json",
                "author": {
                    "self": "https://issues.apache.org/jira/rest/api/2/user?username=alphalfalfa",
                    "name": "alphalfalfa",
                    "key": "alphalfalfa",
                    "avatarUrls": {
                        "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                        "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                        "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                        "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                    },
                    "displayName": "Jingyuan Wang",
                    "active": true,
                    "timeZone": "America/New_York"
                },
                "created": "2018-01-25T23:14:06.204+0000",
                "size": 50598,
                "mimeType": "application/json",
                "content": "https://issues.apache.org/jira/secure/attachment/12907785/generated_primitive.json"
            }
        ],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Unable to read unsigned integers outside signed range for bit width in integration tests",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/comment/16340222",
                    "id": "16340222",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alphalfalfa",
                        "name": "alphalfalfa",
                        "key": "alphalfalfa",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Jingyuan Wang",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Wes mentioned in the GitHub issue page:\r\n\r\n------\u00a0\r\n\r\nI found the problem -- one of the primitive integration test files was being clobbered and not run, which was suppressing a failure that should have been raised a long time ago.\r\n\r\nIn the meantime, there was also a regression from the Java refactor, and we are no longer able to fully read unsigned integer types anymore. I will hack the integration tests for now and open a JIRA about fixing,\r\n\r\nhere's an example of trying to read a\u00a0{{uint16}}\u00a0vector:\r\n\r\n{{16:49:51.051 [main] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8 Error accessing files Numeric value (65350) out of range of Java short at [Source: /tmp/tmpwgopllpl/generated_primitive.json; line: 1111, column: 18] 16:49:51.065 [main] ERROR org.apache.arrow.tools.Integration - Error accessing files com.fasterxml.jackson.core.JsonParseException: Numeric value (65350) out of range of Java short}}\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alphalfalfa",
                        "name": "alphalfalfa",
                        "key": "alphalfalfa",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Jingyuan Wang",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-01-25T22:35:42.011+0000",
                    "updated": "2018-01-25T22:35:42.011+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/comment/16340263",
                    "id": "16340263",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alphalfalfa",
                        "name": "alphalfalfa",
                        "key": "alphalfalfa",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Jingyuan Wang",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "a more complete stack trace\r\n\r\n{code:none}\r\nError accessing files\r\nNumeric value (65350) out of range of Java short\r\n at [Source: /tmp/tmp7z9ijgqc/generated_primitive.json; line: 783, column: 18]\r\n17:46:40.350 [main] ERROR org.apache.arrow.tools.Integration - Error accessing files\r\ncom.fasterxml.jackson.core.JsonParseException: Numeric value (65350) out of range of Java short\r\n at [Source: /tmp/tmp7z9ijgqc/generated_primitive.json; line: 783, column: 18]\r\n\tat com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1586)\r\n\tat com.fasterxml.jackson.core.JsonParser.getShortValue(JsonParser.java:1075)\r\n\tat org.apache.arrow.vector.ipc.JsonFileReader$BufferHelper$3.read(JsonFileReader.java:248)\r\n\tat org.apache.arrow.vector.ipc.JsonFileReader$BufferReader.readBuffer(JsonFileReader.java:199)\r\n\tat org.apache.arrow.vector.ipc.JsonFileReader.readIntoBuffer(JsonFileReader.java:491)\r\n\tat org.apache.arrow.vector.ipc.JsonFileReader.readFromJsonIntoVector(JsonFileReader.java:539)\r\n\tat org.apache.arrow.vector.ipc.JsonFileReader.read(JsonFileReader.java:180)\r\n\tat org.apache.arrow.tools.Integration$Command$3.execute(Integration.java:196)\r\n\tat org.apache.arrow.tools.Integration.run(Integration.java:114)\r\n\tat org.apache.arrow.tools.Integration.main(Integration.java:65)\r\n\tSuppressed: java.lang.IllegalStateException: Memory was leaked by query. Memory leaked: (1148)\r\nAllocator(ROOT) 0/1148/1148/2147483647 (res/actual/peak/limit)\r\n\r\n\t\tat org.apache.arrow.memory.BaseAllocator.close(BaseAllocator.java:406)\r\n\t\tat org.apache.arrow.tools.Integration$Command$3.execute(Integration.java:220)\r\n\t\t... 2 common frames omitted\r\n{code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alphalfalfa",
                        "name": "alphalfalfa",
                        "key": "alphalfalfa",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Jingyuan Wang",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-01-25T23:11:56.056+0000",
                    "updated": "2018-01-25T23:11:56.056+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/comment/16340275",
                    "id": "16340275",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alphalfalfa",
                        "name": "alphalfalfa",
                        "key": "alphalfalfa",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Jingyuan Wang",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "In the defined Java Vector types, there are two 16-bit types: SmallInt and UInt2. The first one is associated with signed short (Java does not support unsigned short) and the latter is associated with char/Character. I need to look at the code a bit more to understand how these two types are determined to use.\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alphalfalfa",
                        "name": "alphalfalfa",
                        "key": "alphalfalfa",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Jingyuan Wang",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-01-25T23:19:47.731+0000",
                    "updated": "2018-01-25T23:19:47.731+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/comment/16340464",
                    "id": "16340464",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Since Java doesn't have unsigned integer values, I presume that we'll want to return them in {{getObject}} as a larger signed integer object for now \u2013 as long as unsigned values sent from other applications can be understood correctly. So a {{UInt2Vector}}\u00a0would return {{int}} values, {{UInt4Vector}} return {{long}} values, and so forth (would {{UInt8}} have to return {{BigInteger}}?)\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-01-26T02:15:10.323+0000",
                    "updated": "2018-01-26T02:15:10.323+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/comment/16341439",
                    "id": "16341439",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alphalfalfa",
                        "name": "alphalfalfa",
                        "key": "alphalfalfa",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Jingyuan Wang",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "For Java 8 & 9, Integer and Long can partially handle unsigned values, but looks highly inconvenient. The example I found is to assign the value by parsing a string.\u00a0\r\n\r\nI agree with you on your proposal of promoting unsigned values to to a wider type when retrieved. But I also think this might require other Java developers their opinions as currently UInt2Vector return char/Character. I am not sure about if this vector has any necessary use cases. If so, it is at least confusing\u00a0if not wrong.\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alphalfalfa",
                        "name": "alphalfalfa",
                        "key": "alphalfalfa",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Jingyuan Wang",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-01-26T19:01:42.987+0000",
                    "updated": "2018-01-26T19:01:42.987+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/comment/16344472",
                    "id": "16344472",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alphalfalfa",
                        "name": "alphalfalfa",
                        "key": "alphalfalfa",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Jingyuan Wang",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "[~icexelloss], any opinion on whether UInt2Vector should return char/Character?\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alphalfalfa",
                        "name": "alphalfalfa",
                        "key": "alphalfalfa",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Jingyuan Wang",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-01-30T04:07:46.228+0000",
                    "updated": "2018-01-30T04:07:46.228+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/comment/16345174",
                    "id": "16345174",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=icexelloss",
                        "name": "icexelloss",
                        "key": "icexelloss",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Li Jin",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "We can check with\u00a0Dremio\u00a0folks whether those are being used. If not we are free to change the them. cc [~siddteotia]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=icexelloss",
                        "name": "icexelloss",
                        "key": "icexelloss",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Li Jin",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-30T14:58:09.340+0000",
                    "updated": "2018-01-30T14:58:09.340+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/comment/16356266",
                    "id": "16356266",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Moving this to 0.10.0. Maybe we can deal with unsigned integers in Java in the next release cycle",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-02-08T00:09:09.988+0000",
                    "updated": "2018-02-08T00:09:09.988+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/comment/16510130",
                    "id": "16510130",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "[~jnadeau] [~siddteotia] any thoughts on what would be involved with better supporting unsigned integers in Java? I think they need to be supported. I'm moving this issue to 0.11 so it does not block 0.10",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-06-12T20:09:04.983+0000",
                    "updated": "2018-06-12T20:09:04.983+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/comment/16852493",
                    "id": "16852493",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "[~emkornfield@gmail.com] if you are interested in unsigned integers this would benefit from some attention",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-05-31T00:36:15.723+0000",
                    "updated": "2019-05-31T00:36:15.723+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13119531/comment/16856270",
                    "id": "16856270",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 4432\n[https://github.com/apache/arrow/pull/4432]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-06-05T02:20:08.553+0000",
                    "updated": "2019-06-05T02:20:08.553+0000"
                }
            ],
            "maxResults": 11,
            "total": 11,
            "startAt": 0
        },
        "customfield_12311820": "0|i3mza7:",
        "customfield_12314139": null
    }
}