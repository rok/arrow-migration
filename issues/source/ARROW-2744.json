{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13168279",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13168279",
    "key": "ARROW-2744",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "parquet",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12538216",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12538216",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13171188",
                    "key": "PARQUET-1346",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13171188",
                    "fields": {
                        "summary": "[C++] Protect against null values data in empty Arrow array",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=adaitche",
            "name": "adaitche",
            "key": "adaitche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Anton Daitche",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=adaitche",
            "name": "adaitche",
            "key": "adaitche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Anton Daitche",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 6000,
            "total": 6000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6000,
            "total": 6000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2744/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 10,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13168279/worklog/121485",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou opened a new pull request #2243: ARROW-2744: [C++] Avoid creating list arrays with a null values buffer\nURL: https://github.com/apache/arrow/pull/2243\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-10T17:11:10.031+0000",
                    "updated": "2018-07-10T17:11:10.031+0000",
                    "started": "2018-07-10T17:11:10.030+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "121485",
                    "issueId": "13168279"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13168279/worklog/121572",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2243: ARROW-2744: [C++] Avoid creating list arrays with a null values buffer\nURL: https://github.com/apache/arrow/pull/2243#issuecomment-403959412\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2243?src=pr&el=h1) Report\n   > Merging [#2243](https://codecov.io/gh/apache/arrow/pull/2243?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/a096eb12ee0af9bdb2ac02ea3ef913a139f2d948?src=pr&el=desc) will **increase** coverage by `2.4%`.\n   > The diff coverage is `59.52%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2243/graphs/tree.svg?token=LpTCFbqVT1&src=pr&width=650&height=150)](https://codecov.io/gh/apache/arrow/pull/2243?src=pr&el=tree)\n   \n   ```diff\n   @@           Coverage Diff            @@\n   ##           master   #2243     +/-   ##\n   ========================================\n   + Coverage    84.2%   86.6%   +2.4%     \n   ========================================\n     Files         288     232     -56     \n     Lines       44069   41349   -2720     \n   ========================================\n   - Hits        37107   35812   -1295     \n   + Misses       6931    5537   -1394     \n   + Partials       31       0     -31\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2243?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/builder.cc](https://codecov.io/gh/apache/arrow/pull/2243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9idWlsZGVyLmNj) | `82.03% <100%> (+0.1%)` | :arrow_up: |\n   | [cpp/src/arrow/array-test.cc](https://codecov.io/gh/apache/arrow/pull/2243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS10ZXN0LmNj) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/ipc/test-common.h](https://codecov.io/gh/apache/arrow/pull/2243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pcGMvdGVzdC1jb21tb24uaA==) | `93.13% <100%> (+0.01%)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_parquet.py](https://codecov.io/gh/apache/arrow/pull/2243/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9wYXJxdWV0LnB5) | `96.97% <100%> (+0.01%)` | :arrow_up: |\n   | [cpp/src/arrow/array.cc](https://codecov.io/gh/apache/arrow/pull/2243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS5jYw==) | `85.97% <37.03%> (-1.37%)` | :arrow_down: |\n   | [go/arrow/array/bufferbuilder\\_numeric.gen.go](https://codecov.io/gh/apache/arrow/pull/2243/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlcl9udW1lcmljLmdlbi5nbw==) | | |\n   | [go/arrow/math/int64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2243/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9hbWQ2NC5nbw==) | | |\n   | [go/arrow/internal/bitutil/bitutil.go](https://codecov.io/gh/apache/arrow/pull/2243/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvYml0dXRpbC9iaXR1dGlsLmdv) | | |\n   | [go/arrow/array/data.go](https://codecov.io/gh/apache/arrow/pull/2243/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvZGF0YS5nbw==) | | |\n   | ... and [53 more](https://codecov.io/gh/apache/arrow/pull/2243/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2243?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2243?src=pr&el=footer). Last update [a096eb1...6136ecd](https://codecov.io/gh/apache/arrow/pull/2243?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-10T20:43:53.837+0000",
                    "updated": "2018-07-10T20:43:53.837+0000",
                    "started": "2018-07-10T20:43:53.836+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "121572",
                    "issueId": "13168279"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13168279/worklog/125083",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #2243: ARROW-2744: [C++] Avoid creating list arrays with a null values buffer\nURL: https://github.com/apache/arrow/pull/2243#issuecomment-406330356\n \n \n   @wesm \r\n   \r\n   > As a matter of usability, I don't know that we should expect all public API users to create a length-0 buffer when there is no data.\r\n   \r\n   I don't think this PR is doing that, except in `Array::Validate`.\r\n   \r\n   > I believe that code that interacts with the buffers in an array needs to treat length-0 and null equivalently.\r\n   \r\n   I agree. The parquet-cpp issue was already fixed in https://github.com/apache/parquet-cpp/pull/474\r\n   \r\n   However, I think it's also safer to ensure that we don't generate such buffers unwillingly. I don't think it was deliberate for `ListBuilder` and `StructBuilder` to create null buffers for arrays with 0 child values.\r\n   \r\n   > So any way you slice it, some code will have to deal with the null buffer case.\r\n   \r\n   Yes, I agree for validity bitmaps code will have to deal with it. For actual values it is a bit unexpected, though (at least the person who wrote the parquet-cpp code clearly didn't expect it :-)).\r\n   \r\n   > My gut feeling is that we should allow the null buffers and document the issue well so that users can defend themselves from untrusted data.\r\n   \r\n   Where would you document it? in ArrayData?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-19T16:06:47.890+0000",
                    "updated": "2018-07-19T16:06:47.890+0000",
                    "started": "2018-07-19T16:06:47.890+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125083",
                    "issueId": "13168279"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13168279/worklog/125084",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou edited a comment on issue #2243: ARROW-2744: [C++] Avoid creating list arrays with a null values buffer\nURL: https://github.com/apache/arrow/pull/2243#issuecomment-406330356\n \n \n   @wesm \r\n   \r\n   > As a matter of usability, I don't know that we should expect all public API users to create a length-0 buffer when there is no data.\r\n   \r\n   I don't think this PR is doing that, except in `ValidateArray` (which can actually be helpful for users encountering this kind of issue).\r\n   \r\n   > I believe that code that interacts with the buffers in an array needs to treat length-0 and null equivalently.\r\n   \r\n   I agree. The parquet-cpp issue was already fixed in https://github.com/apache/parquet-cpp/pull/474\r\n   \r\n   However, I think it's also safer to ensure that we don't generate such buffers unwillingly. I don't think it was deliberate for `ListBuilder` and `StructBuilder` to create null buffers for arrays with 0 child values.\r\n   \r\n   > So any way you slice it, some code will have to deal with the null buffer case.\r\n   \r\n   Yes, I agree for validity bitmaps code will have to deal with it. For actual values it is a bit unexpected, though (at least the person who wrote the parquet-cpp code clearly didn't expect it :-)).\r\n   \r\n   > My gut feeling is that we should allow the null buffers and document the issue well so that users can defend themselves from untrusted data.\r\n   \r\n   Where would you document it? in ArrayData?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-19T16:07:33.849+0000",
                    "updated": "2018-07-19T16:07:33.849+0000",
                    "started": "2018-07-19T16:07:33.848+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125084",
                    "issueId": "13168279"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13168279/worklog/125133",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2243: ARROW-2744: [C++] Avoid creating list arrays with a null values buffer\nURL: https://github.com/apache/arrow/pull/2243#issuecomment-406353914\n \n \n   > I don't think this PR is doing that, except in ValidateArray (which can actually be helpful for users encountering this kind of issue).\r\n   \r\n   What would you say to adding an option to `ValidateArray` about checking for null buffers? I agree that being able to easily check is valuable, even if it isn't strictly \"wrong\". \r\n   \r\n   > However, I think it's also safer to ensure that we don't generate such buffers unwillingly. I don't think it was deliberate for ListBuilder and StructBuilder to create null buffers for arrays with 0 child values.\r\n   \r\n   Agreed\r\n   \r\n   > Where would you document it? in ArrayData?\r\n   \r\n   I think in the APIs where `std::shared_ptr<Buffer>` is returned, like `PrimitiveArray<T>::values()`. These are already \"advanced\" APIs in that they do not account for a slice offset\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-19T17:27:00.985+0000",
                    "updated": "2018-07-19T17:27:00.985+0000",
                    "started": "2018-07-19T17:27:00.984+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125133",
                    "issueId": "13168279"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13168279/worklog/125147",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2243: ARROW-2744: [C++] Avoid creating list arrays with a null values buffer\nURL: https://github.com/apache/arrow/pull/2243#issuecomment-406359059\n \n \n   On this\r\n   \r\n   > What would you say to adding an option to `ValidateArray` about checking for null buffers? I agree that being able to easily check is valuable, even if it isn't strictly \"wrong\". \r\n   \r\n   I'm OK with doing this later. I'll give this another review and merge since I don't think it does anything problematic\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-19T17:44:54.427+0000",
                    "updated": "2018-07-19T17:44:54.427+0000",
                    "started": "2018-07-19T17:44:54.427+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125147",
                    "issueId": "13168279"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13168279/worklog/125148",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2243: ARROW-2744: [C++] Avoid creating list arrays with a null values buffer\nURL: https://github.com/apache/arrow/pull/2243#issuecomment-406359380\n \n \n   Shoot I think we need to get ARROW-2822 https://github.com/apache/arrow/pull/2239 in first. Let me see if that's ready to merge\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-19T17:45:59.400+0000",
                    "updated": "2018-07-19T17:45:59.400+0000",
                    "started": "2018-07-19T17:45:59.399+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125148",
                    "issueId": "13168279"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13168279/worklog/125946",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #2243: ARROW-2744: [C++] Avoid creating list arrays with a null values buffer\nURL: https://github.com/apache/arrow/pull/2243#issuecomment-406998915\n \n \n   This has conflicts now, I'm gonna rebase.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-23T09:36:45.122+0000",
                    "updated": "2018-07-23T09:36:45.122+0000",
                    "started": "2018-07-23T09:36:45.121+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125946",
                    "issueId": "13168279"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13168279/worklog/125980",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on issue #2243: ARROW-2744: [C++] Avoid creating list arrays with a null values buffer\nURL: https://github.com/apache/arrow/pull/2243#issuecomment-403959412\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2243?src=pr&el=h1) Report\n   > Merging [#2243](https://codecov.io/gh/apache/arrow/pull/2243?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/d42a7d778ad23c0a9847421345ed1208eca75c70?src=pr&el=desc) will **increase** coverage by `2.44%`.\n   > The diff coverage is `54.05%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2243/graphs/tree.svg?width=650&height=150&token=LpTCFbqVT1&src=pr)](https://codecov.io/gh/apache/arrow/pull/2243?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2243      +/-   ##\n   ==========================================\n   + Coverage   84.34%   86.78%   +2.44%     \n   ==========================================\n     Files         281      237      -44     \n     Lines       43760    41931    -1829     \n   ==========================================\n   - Hits        36909    36390     -519     \n   + Misses       6820     5541    -1279     \n   + Partials       31        0      -31\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2243?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/array-test.cc](https://codecov.io/gh/apache/arrow/pull/2243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS10ZXN0LmNj) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_parquet.py](https://codecov.io/gh/apache/arrow/pull/2243/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9wYXJxdWV0LnB5) | `96.97% <100%> (+0.01%)` | :arrow_up: |\n   | [cpp/src/arrow/ipc/test-common.h](https://codecov.io/gh/apache/arrow/pull/2243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pcGMvdGVzdC1jb21tb24uaA==) | `93.13% <100%> (+0.01%)` | :arrow_up: |\n   | [cpp/src/arrow/builder.cc](https://codecov.io/gh/apache/arrow/pull/2243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9idWlsZGVyLmNj) | `79.76% <100%> (+0.09%)` | :arrow_up: |\n   | [cpp/src/arrow/array.cc](https://codecov.io/gh/apache/arrow/pull/2243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS5jYw==) | `85.97% <37.03%> (-1.37%)` | :arrow_down: |\n   | [go/arrow/internal/testing/tools/bits.go](https://codecov.io/gh/apache/arrow/pull/2243/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvdGVzdGluZy90b29scy9iaXRzLmdv) | | |\n   | [go/arrow/internal/bitutil/bitutil.go](https://codecov.io/gh/apache/arrow/pull/2243/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvYml0dXRpbC9iaXR1dGlsLmdv) | | |\n   | [go/arrow/memory/checked\\_allocator.go](https://codecov.io/gh/apache/arrow/pull/2243/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L2NoZWNrZWRfYWxsb2NhdG9yLmdv) | | |\n   | [go/arrow/datatype\\_numeric.gen.go](https://codecov.io/gh/apache/arrow/pull/2243/diff?src=pr&el=tree#diff-Z28vYXJyb3cvZGF0YXR5cGVfbnVtZXJpYy5nZW4uZ28=) | | |\n   | ... and [40 more](https://codecov.io/gh/apache/arrow/pull/2243/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2243?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2243?src=pr&el=footer). Last update [d42a7d7...715189a](https://codecov.io/gh/apache/arrow/pull/2243?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-23T11:09:57.369+0000",
                    "updated": "2018-07-23T11:09:57.369+0000",
                    "started": "2018-07-23T11:09:57.368+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "125980",
                    "issueId": "13168279"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13168279/worklog/126304",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #2243: ARROW-2744: [C++] Avoid creating list arrays with a null values buffer\nURL: https://github.com/apache/arrow/pull/2243\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/array-test.cc b/cpp/src/arrow/array-test.cc\nindex 44270d1fc2..df6051e3d0 100644\n--- a/cpp/src/arrow/array-test.cc\n+++ b/cpp/src/arrow/array-test.cc\n@@ -2919,6 +2919,8 @@ TEST_F(TestListArray, TestAppendNull) {\n \n   auto values = result_->values();\n   ASSERT_EQ(0, values->length());\n+  // Values buffer should be non-null\n+  ASSERT_NE(nullptr, values->data()->buffers[1]);\n }\n \n void ValidateBasicListArray(const ListArray* result, const vector<int32_t>& values,\ndiff --git a/cpp/src/arrow/array.cc b/cpp/src/arrow/array.cc\nindex fb6ccafafe..6222e37faf 100644\n--- a/cpp/src/arrow/array.cc\n+++ b/cpp/src/arrow/array.cc\n@@ -664,12 +664,30 @@ namespace internal {\n struct ValidateVisitor {\n   Status Visit(const NullArray&) { return Status::OK(); }\n \n-  Status Visit(const PrimitiveArray&) { return Status::OK(); }\n+  Status Visit(const PrimitiveArray& array) {\n+    if (array.data()->buffers.size() != 2) {\n+      return Status::Invalid(\"number of buffers was != 2\");\n+    }\n+    if (array.values() == nullptr) {\n+      return Status::Invalid(\"values was null\");\n+    }\n+    return Status::OK();\n+  }\n \n-  Status Visit(const Decimal128Array&) { return Status::OK(); }\n+  Status Visit(const Decimal128Array& array) {\n+    if (array.data()->buffers.size() != 2) {\n+      return Status::Invalid(\"number of buffers was != 2\");\n+    }\n+    if (array.values() == nullptr) {\n+      return Status::Invalid(\"values was null\");\n+    }\n+    return Status::OK();\n+  }\n \n-  Status Visit(const BinaryArray&) {\n-    // TODO(wesm): what to do here?\n+  Status Visit(const BinaryArray& array) {\n+    if (array.data()->buffers.size() != 3) {\n+      return Status::Invalid(\"number of buffers was != 3\");\n+    }\n     return Status::OK();\n   }\n \n@@ -688,24 +706,24 @@ struct ValidateVisitor {\n          << \" isn't large enough for length: \" << array.length();\n       return Status::Invalid(ss.str());\n     }\n+\n+    if (!array.values()) {\n+      return Status::Invalid(\"values was null\");\n+    }\n+\n     const int32_t last_offset = array.value_offset(array.length());\n-    if (last_offset > 0) {\n-      if (!array.values()) {\n-        return Status::Invalid(\"last offset was non-zero and values was null\");\n-      }\n-      if (array.values()->length() != last_offset) {\n-        std::stringstream ss;\n-        ss << \"Final offset invariant not equal to values length: \" << last_offset\n-           << \"!=\" << array.values()->length();\n-        return Status::Invalid(ss.str());\n-      }\n+    if (array.values()->length() != last_offset) {\n+      std::stringstream ss;\n+      ss << \"Final offset invariant not equal to values length: \" << last_offset\n+         << \"!=\" << array.values()->length();\n+      return Status::Invalid(ss.str());\n+    }\n \n-      const Status child_valid = ValidateArray(*array.values());\n-      if (!child_valid.ok()) {\n-        std::stringstream ss;\n-        ss << \"Child array invalid: \" << child_valid.ToString();\n-        return Status::Invalid(ss.str());\n-      }\n+    const Status child_valid = ValidateArray(*array.values());\n+    if (!child_valid.ok()) {\n+      std::stringstream ss;\n+      ss << \"Child array invalid: \" << child_valid.ToString();\n+      return Status::Invalid(ss.str());\n     }\n \n     int32_t prev_offset = array.value_offset(0);\ndiff --git a/cpp/src/arrow/builder.cc b/cpp/src/arrow/builder.cc\nindex 1b77945263..152f1fc260 100644\n--- a/cpp/src/arrow/builder.cc\n+++ b/cpp/src/arrow/builder.cc\n@@ -54,6 +54,7 @@ Status TrimBuffer(const int64_t bytes_filled, ResizableBuffer* buffer) {\n     // zero the padding\n     buffer->ZeroPadding();\n   } else {\n+    // Null buffers are allowed in place of 0-byte buffers\n     DCHECK_EQ(bytes_filled, 0);\n   }\n   return Status::OK();\n@@ -1336,6 +1337,10 @@ Status ListBuilder::FinishInternal(std::shared_ptr<ArrayData>* out) {\n   if (values_) {\n     items = values_->data();\n   } else {\n+    if (value_builder_->length() == 0) {\n+      // Try to make sure we get a non-null values buffer (ARROW-2744)\n+      RETURN_NOT_OK(value_builder_->Resize(0));\n+    }\n     RETURN_NOT_OK(value_builder_->FinishInternal(&items));\n   }\n \n@@ -1632,6 +1637,10 @@ Status StructBuilder::FinishInternal(std::shared_ptr<ArrayData>* out) {\n \n   (*out)->child_data.resize(field_builders_.size());\n   for (size_t i = 0; i < field_builders_.size(); ++i) {\n+    if (length_ == 0) {\n+      // Try to make sure the child buffers are initialized\n+      RETURN_NOT_OK(field_builders_[i]->Resize(0));\n+    }\n     RETURN_NOT_OK(field_builders_[i]->FinishInternal(&(*out)->child_data[i]));\n   }\n \ndiff --git a/cpp/src/arrow/ipc/test-common.h b/cpp/src/arrow/ipc/test-common.h\nindex 2f0237ed26..4e9fab17c4 100644\n--- a/cpp/src/arrow/ipc/test-common.h\n+++ b/cpp/src/arrow/ipc/test-common.h\n@@ -100,6 +100,7 @@ Status MakeRandomInt32Array(int64_t length, bool include_nulls, MemoryPool* pool\n   std::shared_ptr<PoolBuffer> data;\n   RETURN_NOT_OK(test::MakeRandomInt32PoolBuffer(length, pool, &data));\n   Int32Builder builder(int32(), pool);\n+  RETURN_NOT_OK(builder.Init(length));\n   if (include_nulls) {\n     std::shared_ptr<PoolBuffer> valid_bytes;\n     RETURN_NOT_OK(test::MakeRandomBytePoolBuffer(length, pool, &valid_bytes));\n@@ -127,6 +128,7 @@ Status MakeRandomListArray(const std::shared_ptr<Array>& child_array, int num_li\n   std::vector<int32_t> offsets(\n       num_lists + 1, 0);  // +1 so we can shift for nulls. See partial sum below.\n   const uint32_t seed = static_cast<uint32_t>(child_array->length());\n+\n   if (num_lists > 0) {\n     test::rand_uniform_int(num_lists, seed, 0, max_list_size, list_sizes.data());\n     // make sure sizes are consistent with null\ndiff --git a/python/pyarrow/tests/test_parquet.py b/python/pyarrow/tests/test_parquet.py\nindex fec65b93cb..23c9e3029c 100644\n--- a/python/pyarrow/tests/test_parquet.py\n+++ b/python/pyarrow/tests/test_parquet.py\n@@ -158,7 +158,7 @@ def test_pandas_parquet_2_0_rountrip(tmpdir, chunk_size):\n \n \n @parquet\n-def test_chunked_table_write(tmpdir):\n+def test_chunked_table_write():\n     # ARROW-232\n     df = alltypes_sample(size=10)\n \n@@ -176,7 +176,7 @@ def test_chunked_table_write(tmpdir):\n \n \n @parquet\n-def test_empty_table_roundtrip(tmpdir):\n+def test_empty_table_roundtrip():\n     df = alltypes_sample(size=10)\n     # The nanosecond->us conversion is a nuisance, so we just avoid it here\n     del df['datetime']\n@@ -192,6 +192,14 @@ def test_empty_table_roundtrip(tmpdir):\n     _check_roundtrip(table, version='2.0')\n \n \n+@parquet\n+def test_empty_lists_table_roundtrip():\n+    # ARROW-2744: Shouldn't crash when writing an array of empty lists\n+    arr = pa.array([[], []], type=pa.list_(pa.int32()))\n+    table = pa.Table.from_arrays([arr], [\"A\"])\n+    _check_roundtrip(table)\n+\n+\n @parquet\n def test_pandas_parquet_datetime_tz():\n     import pyarrow.parquet as pq\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-07-23T21:08:43.180+0000",
                    "updated": "2018-07-23T21:08:43.180+0000",
                    "started": "2018-07-23T21:08:43.180+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "126304",
                    "issueId": "13168279"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 6000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6c32dfaa[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@56725d71[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2ce6c2c8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@683b8bf0[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@57a8c319[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1d706b7b[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@79a0a9f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@334a7597[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@22ebc8ec[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3cde5479[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6b476f8f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@bc149bd[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6000,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Jul 23 21:08:37 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-07-23T21:08:37.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2744/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2018-06-26T07:39:41.000+0000",
        "updated": "2018-07-23T21:08:43.000+0000",
        "timeoriginalestimate": null,
        "description": "When writing a ListArray which contains only empty lists to Parquet, Pyarrow crashes. Here is a minimal code snippet which reproduces the crash:\r\n{code:java}\r\nimport pyarrow as pa\r\nfrom pyarrow import parquet as pq\r\n\r\narray = pa.array([[]], type=pa.list_(pa.int32()))\r\ntable = pa.Table.from_arrays([array], [\"A\"])\r\npq.write_table(table, \"tmp.parq\"){code}\r\nWhen the ListArray has at least one non-empty list, the issue disappears.\r\n\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Writing to parquet crashes when writing a ListArray of empty lists ",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": "Python Version: 3.6.3 (Anaconda)\r\nOS: OSX and Linux",
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13168279/comment/16523605",
                    "id": "16523605",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Thanks for reporting here. I can definitely reproduce on git master.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-06-26T11:42:29.243+0000",
                    "updated": "2018-06-26T11:42:29.243+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13168279/comment/16523889",
                    "id": "16523889",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "The gdb backtrace:\r\n{code}\r\n#0  0x00007f09b40fa770 in arrow::Buffer::data (this=0x0) at ../src/arrow/buffer.h:119\r\n#1  0x00007f09a8685155 in parquet::arrow::(anonymous namespace)::ArrowColumnWriter::TypedWriteBatch<parquet::DataType<(parquet::Type::type)1>, arrow::Int32Type> (\r\n    this=0x7ffd577fc660, array=..., num_levels=2, def_levels=0x18d2d40, rep_levels=0x1730f40) at /home/antoine/parquet-cpp/src/parquet/arrow/writer.cc:415\r\n#2  0x00007f09a8680a37 in parquet::arrow::(anonymous namespace)::ArrowColumnWriter::Write (this=0x7ffd577fc660, data=...)\r\n    at /home/antoine/parquet-cpp/src/parquet/arrow/writer.cc:895\r\n#3  0x00007f09a867d6b8 in parquet::arrow::(anonymous namespace)::ArrowColumnWriter::Write (this=0x7ffd577fc660, data=..., offset=0, size=2)\r\n    at /home/antoine/parquet-cpp/src/parquet/arrow/writer.cc:341\r\n#4  0x00007f09a868adb9 in parquet::arrow::FileWriter::Impl::WriteColumnChunk (this=0x1ad7830, data=..., offset=0, size=2)\r\n    at /home/antoine/parquet-cpp/src/parquet/arrow/writer.cc:995\r\n#5  0x00007f09a868114d in parquet::arrow::FileWriter::WriteColumnChunk (this=0x1c1b0d0, data=..., offset=0, size=2)\r\n    at /home/antoine/parquet-cpp/src/parquet/arrow/writer.cc:1025\r\n#6  0x00007f09a8681a85 in parquet::arrow::FileWriter::WriteTable (this=0x1c1b0d0, table=..., chunk_size=2)\r\n    at /home/antoine/parquet-cpp/src/parquet/arrow/writer.cc:1100\r\n[...]\r\n{code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-06-26T15:47:40.759+0000",
                    "updated": "2018-06-26T15:47:40.759+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13168279/comment/16523926",
                    "id": "16523926",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Here is the crux of the issue;\r\n{code}\r\n>>> arr = pa.array([[]], type=pa.list_(pa.int32()))\r\n>>> arr.buffers()\r\n[<pyarrow.lib.Buffer at 0x7f1b7f68f0d8>,\r\n <pyarrow.lib.Buffer at 0x7f1b7f68f998>,\r\n None,\r\n None]\r\n>>> arr = pa.array([[1]], type=pa.list_(pa.int32()))\r\n>>> arr.buffers()\r\n[<pyarrow.lib.Buffer at 0x7f1b93163378>,\r\n <pyarrow.lib.Buffer at 0x7f1b7ee387d8>,\r\n <pyarrow.lib.Buffer at 0x7f1b7ee38998>,\r\n <pyarrow.lib.Buffer at 0x7f1b7ee385a8>]\r\n{code}\r\n\r\nWe have two solutions:\r\n# Fix parquet-cpp so that it accepts null data buffers\r\n# Fix pyarrow so that it never generates list arrays with empty data buffers\r\n\r\nIn general this issue with buffers possibly being null (or None in Python) seems to regularly crop up in various places.\r\n[~wesmckinn], what do you think?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-06-26T16:13:51.514+0000",
                    "updated": "2018-06-26T16:14:15.632+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13168279/comment/16523971",
                    "id": "16523971",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Perhaps one clean way of solving this would be to add a Normalize feature to ArrayData such that:\r\n * all buffers except buffers[0] must be non-null\r\n * if a buffer is null (with index > 0, i.e. not the null bitmap), it is replaced with an empty buffer\r\n * normalizing is run recursively on child data\r\n\r\nCreating an Array from an ArrayData would automatically normalize the ArrayData.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-06-26T16:50:47.098+0000",
                    "updated": "2018-06-26T16:50:47.098+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13168279/comment/16525164",
                    "id": "16525164",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "When trying the normalization idea, it turns out that some places rely on null data buffers in an array:\r\n* feather, notably for null arrays (but not only it seems)\r\n* conversion from Numpy struct arrays, because it eases rechunking of the null bitmap\r\n\r\nAnother issue with the normalization issue is that we're changing user-supplied data without being asked to, which may lead to surprising bugs/issues.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-06-27T14:48:19.551+0000",
                    "updated": "2018-06-27T14:48:19.551+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13168279/comment/16525698",
                    "id": "16525698",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "This is a tricky problem, since auto-normalizing would also have microperformance implications that might be undesirable. \r\n\r\nIn some cases, null is actually an acceptable value. For example: consider a nullable array with all non-null values. We (currently) consider it acceptable for the validity bitmap to be null in this case. \r\n\r\nThis problem has come up enough that I think we should continue to investigate all of the nuances so we know how best to proceed. With your proposed solutions, changing pyarrow to not yield lists with null buffers seems like a reasonable fix. We should also fix parquet-cpp to not segfault on a null buffer. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-06-27T22:42:26.487+0000",
                    "updated": "2018-06-27T22:42:26.487+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13168279/comment/16553409",
                    "id": "16553409",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2243\n[https://github.com/apache/arrow/pull/2243]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-07-23T21:08:37.068+0000",
                    "updated": "2018-07-23T21:08:37.068+0000"
                }
            ],
            "maxResults": 7,
            "total": 7,
            "startAt": 0
        },
        "customfield_12311820": "0|i3v8hz:",
        "customfield_12314139": null
    }
}