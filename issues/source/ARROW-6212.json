{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13250274",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250274",
    "key": "ARROW-6212",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "aggregateprogress": {
            "progress": 8400,
            "total": 8400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 8400,
            "total": 8400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6212/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 14,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250274/worklog/293106",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #5066: ARROW-6212: [Java] Support vector rank operation\nURL: https://github.com/apache/arrow/pull/5066\n \n \n   Given an unsorted vector, we want to get the index of the ith smallest element in the vector. This function is supported by the rank operation. \r\n   \r\n   We provide an implementation that gets the index with the desired rank, without sorting the vector (the vector is left intact), and the implementation takes O(n) time, where n is the vector length.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-12T12:18:48.576+0000",
                    "updated": "2019-08-12T12:18:48.576+0000",
                    "started": "2019-08-12T12:18:48.576+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293106",
                    "issueId": "13250274"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250274/worklog/293166",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5066: ARROW-6212: [Java] Support vector rank operation\nURL: https://github.com/apache/arrow/pull/5066#issuecomment-520445380\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5066?src=pr&el=h1) Report\n   > Merging [#5066](https://codecov.io/gh/apache/arrow/pull/5066?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/93688e8c1fa2f22d46394c548a9edbd3d2d7c62d?src=pr&el=desc) will **increase** coverage by `2.1%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5066/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5066?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #5066      +/-   ##\n   ==========================================\n   + Coverage   87.61%   89.71%    +2.1%     \n   ==========================================\n     Files        1009      670     -339     \n     Lines      144081    99567   -44514     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       126230    89330   -36900     \n   + Misses      17489    10237    -7252     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5066?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/json/converter.cc](https://codecov.io/gh/apache/arrow/pull/5066/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NvbnZlcnRlci5jYw==) | `90.05% <0%> (-1.76%)` | :arrow_down: |\n   | [cpp/src/arrow/json/chunked-builder.cc](https://codecov.io/gh/apache/arrow/pull/5066/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NodW5rZWQtYnVpbGRlci5jYw==) | `79.91% <0%> (-1.68%)` | :arrow_down: |\n   | [cpp/src/arrow/vendored/xxhash/xxhash.c](https://codecov.io/gh/apache/arrow/pull/5066/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy92ZW5kb3JlZC94eGhhc2gveHhoYXNoLmM=) | `73.6% <0%> (-0.38%)` | :arrow_down: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/5066/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/5066/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [js/src/util/fn.ts](https://codecov.io/gh/apache/arrow/pull/5066/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvZm4udHM=) | | |\n   | [go/arrow/array/bufferbuilder.go](https://codecov.io/gh/apache/arrow/pull/5066/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlci5nbw==) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/5066/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [rust/datafusion/src/execution/projection.rs](https://codecov.io/gh/apache/arrow/pull/5066/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vcHJvamVjdGlvbi5ycw==) | | |\n   | [rust/datafusion/src/execution/filter.rs](https://codecov.io/gh/apache/arrow/pull/5066/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZmlsdGVyLnJz) | | |\n   | ... and [335 more](https://codecov.io/gh/apache/arrow/pull/5066/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5066?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5066?src=pr&el=footer). Last update [93688e8...942cbfc](https://codecov.io/gh/apache/arrow/pull/5066?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-12T14:21:39.223+0000",
                    "updated": "2019-08-12T14:21:39.223+0000",
                    "started": "2019-08-12T14:21:39.222+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293166",
                    "issueId": "13250274"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250274/worklog/293581",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5066: ARROW-6212: [Java] Support vector rank operation\nURL: https://github.com/apache/arrow/pull/5066#discussion_r313213700\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/rank/VectorRank.java\n ##########\n @@ -0,0 +1,107 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.rank;\n+\n+import java.util.stream.IntStream;\n+\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * Utility for calculating ranks of vector elements.\n+ * @param <V> the vector type\n+ */\n+public class VectorRank<V extends ValueVector> {\n+\n+  private VectorValueComparator<V> comparator;\n+\n+  /**\n+   * Vector indices.\n+   */\n+  private IntVector indices;\n+\n+  private final BufferAllocator allocator;\n+\n+  /**\n+   * Constructs a vector rank utility.\n+   * @param allocator the allocator to use.\n+   */\n+  public VectorRank(BufferAllocator allocator) {\n+    this.allocator = allocator;\n+  }\n+\n+  /**\n \n Review comment:\n   https://lemire.me/blog/2017/06/21/top-speed-for-top-k-queries/ seems to indicate that using a heap might be faster and probably more member efficient for extrema values.  Up to you if you want to change the algorithm.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-13T04:14:26.383+0000",
                    "updated": "2019-08-13T04:14:26.383+0000",
                    "started": "2019-08-13T04:14:26.382+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293581",
                    "issueId": "13250274"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250274/worklog/293582",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5066: ARROW-6212: [Java] Support vector rank operation\nURL: https://github.com/apache/arrow/pull/5066#discussion_r313213803\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/rank/VectorRank.java\n ##########\n @@ -0,0 +1,107 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.rank;\n+\n+import java.util.stream.IntStream;\n+\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * Utility for calculating ranks of vector elements.\n+ * @param <V> the vector type\n+ */\n+public class VectorRank<V extends ValueVector> {\n+\n+  private VectorValueComparator<V> comparator;\n+\n+  /**\n+   * Vector indices.\n+   */\n+  private IntVector indices;\n+\n+  private final BufferAllocator allocator;\n+\n+  /**\n+   * Constructs a vector rank utility.\n+   * @param allocator the allocator to use.\n+   */\n+  public VectorRank(BufferAllocator allocator) {\n+    this.allocator = allocator;\n+  }\n+\n+  /**\n+   * Given a rank r, gets the index of the element that is the rth smallest in the vector.\n+   * The operation is performed without changing the vector, and takes O(n) time,\n+   * where n is the length of the vector.\n+   * @param vector the vector from which to get the element index.\n+   * @param comparator the criteria for vector element comparison.\n+   * @param rank the rank to determine.\n+   * @return the element index with the given rank.\n+   */\n+  public int rank(V vector, VectorValueComparator<V> comparator, int rank) {\n+    Preconditions.checkArgument(rank >= 0 && rank < vector.getValueCount());\n+    try {\n+      indices = new IntVector(\"index vector\", allocator);\n+      indices.allocateNew(vector.getValueCount());\n+      IntStream.range(0, vector.getValueCount()).forEach(i -> indices.set(i, i));\n+\n+      comparator.attachVector(vector);\n+      this.comparator = comparator;\n+\n+      int pos = getRank(0, vector.getValueCount() - 1, rank);\n+      return indices.get(pos);\n+    } finally {\n+      indices.close();\n+    }\n+  }\n+\n+  private int getRank(int low, int high, int rank) {\n+    int mid = partition(low, high);\n+    if (mid < rank) {\n+      return getRank(mid + 1, high, rank);\n+    } else if (mid > rank) {\n+      return getRank(low, mid - 1, rank);\n+    } else {\n+      // mid == rank\n+      return mid;\n+    }\n+  }\n+\n+  private int partition(int low, int high) {\n \n Review comment:\n   Can we factor out the common quicksort partitioning?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-13T04:15:18.715+0000",
                    "updated": "2019-08-13T04:15:18.715+0000",
                    "started": "2019-08-13T04:15:18.714+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293582",
                    "issueId": "13250274"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250274/worklog/293603",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #5066: ARROW-6212: [Java] Support vector rank operation\nURL: https://github.com/apache/arrow/pull/5066#discussion_r313218674\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/rank/VectorRank.java\n ##########\n @@ -0,0 +1,107 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.rank;\n+\n+import java.util.stream.IntStream;\n+\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * Utility for calculating ranks of vector elements.\n+ * @param <V> the vector type\n+ */\n+public class VectorRank<V extends ValueVector> {\n+\n+  private VectorValueComparator<V> comparator;\n+\n+  /**\n+   * Vector indices.\n+   */\n+  private IntVector indices;\n+\n+  private final BufferAllocator allocator;\n+\n+  /**\n+   * Constructs a vector rank utility.\n+   * @param allocator the allocator to use.\n+   */\n+  public VectorRank(BufferAllocator allocator) {\n+    this.allocator = allocator;\n+  }\n+\n+  /**\n \n Review comment:\n   @emkornfield thanks for the suggested reference. \r\n   A heap is good for the top k problem. However, this is a different problem from top k. \r\n   We do not need to find top k elements. We only need to find the kth smallest value.\r\n   \r\n   Using a top k algorithm for this problem is an over-kill: top k algorithm requires k * log(n) time, while this algorithm requires O(n). \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-13T04:50:01.602+0000",
                    "updated": "2019-08-13T04:50:01.602+0000",
                    "started": "2019-08-13T04:50:01.601+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293603",
                    "issueId": "13250274"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250274/worklog/293604",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #5066: ARROW-6212: [Java] Support vector rank operation\nURL: https://github.com/apache/arrow/pull/5066#discussion_r313218901\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/rank/VectorRank.java\n ##########\n @@ -0,0 +1,107 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.rank;\n+\n+import java.util.stream.IntStream;\n+\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * Utility for calculating ranks of vector elements.\n+ * @param <V> the vector type\n+ */\n+public class VectorRank<V extends ValueVector> {\n+\n+  private VectorValueComparator<V> comparator;\n+\n+  /**\n+   * Vector indices.\n+   */\n+  private IntVector indices;\n+\n+  private final BufferAllocator allocator;\n+\n+  /**\n+   * Constructs a vector rank utility.\n+   * @param allocator the allocator to use.\n+   */\n+  public VectorRank(BufferAllocator allocator) {\n+    this.allocator = allocator;\n+  }\n+\n+  /**\n \n Review comment:\n   To some extent, this algorithm also finds the top k elements. However, it does not contain information about the relative order of the k elements. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-13T04:51:31.324+0000",
                    "updated": "2019-08-13T04:51:31.324+0000",
                    "started": "2019-08-13T04:51:31.324+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293604",
                    "issueId": "13250274"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250274/worklog/293605",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #5066: ARROW-6212: [Java] Support vector rank operation\nURL: https://github.com/apache/arrow/pull/5066#discussion_r313218950\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/rank/VectorRank.java\n ##########\n @@ -0,0 +1,107 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.rank;\n+\n+import java.util.stream.IntStream;\n+\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * Utility for calculating ranks of vector elements.\n+ * @param <V> the vector type\n+ */\n+public class VectorRank<V extends ValueVector> {\n+\n+  private VectorValueComparator<V> comparator;\n+\n+  /**\n+   * Vector indices.\n+   */\n+  private IntVector indices;\n+\n+  private final BufferAllocator allocator;\n+\n+  /**\n+   * Constructs a vector rank utility.\n+   * @param allocator the allocator to use.\n+   */\n+  public VectorRank(BufferAllocator allocator) {\n+    this.allocator = allocator;\n+  }\n+\n+  /**\n+   * Given a rank r, gets the index of the element that is the rth smallest in the vector.\n+   * The operation is performed without changing the vector, and takes O(n) time,\n+   * where n is the length of the vector.\n+   * @param vector the vector from which to get the element index.\n+   * @param comparator the criteria for vector element comparison.\n+   * @param rank the rank to determine.\n+   * @return the element index with the given rank.\n+   */\n+  public int rank(V vector, VectorValueComparator<V> comparator, int rank) {\n+    Preconditions.checkArgument(rank >= 0 && rank < vector.getValueCount());\n+    try {\n+      indices = new IntVector(\"index vector\", allocator);\n+      indices.allocateNew(vector.getValueCount());\n+      IntStream.range(0, vector.getValueCount()).forEach(i -> indices.set(i, i));\n+\n+      comparator.attachVector(vector);\n+      this.comparator = comparator;\n+\n+      int pos = getRank(0, vector.getValueCount() - 1, rank);\n+      return indices.get(pos);\n+    } finally {\n+      indices.close();\n+    }\n+  }\n+\n+  private int getRank(int low, int high, int rank) {\n+    int mid = partition(low, high);\n+    if (mid < rank) {\n+      return getRank(mid + 1, high, rank);\n+    } else if (mid > rank) {\n+      return getRank(low, mid - 1, rank);\n+    } else {\n+      // mid == rank\n+      return mid;\n+    }\n+  }\n+\n+  private int partition(int low, int high) {\n \n Review comment:\n   Good suggestion. I will do the refactoring. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-13T04:51:52.212+0000",
                    "updated": "2019-08-13T04:51:52.212+0000",
                    "started": "2019-08-13T04:51:52.212+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293605",
                    "issueId": "13250274"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250274/worklog/293609",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5066: ARROW-6212: [Java] Support vector rank operation\nURL: https://github.com/apache/arrow/pull/5066#discussion_r313220018\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/rank/VectorRank.java\n ##########\n @@ -0,0 +1,107 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.rank;\n+\n+import java.util.stream.IntStream;\n+\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * Utility for calculating ranks of vector elements.\n+ * @param <V> the vector type\n+ */\n+public class VectorRank<V extends ValueVector> {\n+\n+  private VectorValueComparator<V> comparator;\n+\n+  /**\n+   * Vector indices.\n+   */\n+  private IntVector indices;\n+\n+  private final BufferAllocator allocator;\n+\n+  /**\n+   * Constructs a vector rank utility.\n+   * @param allocator the allocator to use.\n+   */\n+  public VectorRank(BufferAllocator allocator) {\n+    this.allocator = allocator;\n+  }\n+\n+  /**\n \n Review comment:\n   Like I said I think it is OK to keep this as is.  Note that the complexity analysis is the same for top-N is essentially the same.\r\n   \r\n   Partition based is O(N). Using a heap is O(lg(k)*N + k).  For small k, lg(K) is effectively a constant.  Based on the benchmarks, it seems that do to processor effects it can be more efficient.  For thinks like median quick-select is probably better. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-13T04:59:01.375+0000",
                    "updated": "2019-08-13T04:59:01.375+0000",
                    "started": "2019-08-13T04:59:01.375+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293609",
                    "issueId": "13250274"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250274/worklog/293746",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #5066: ARROW-6212: [Java] Support vector rank operation\nURL: https://github.com/apache/arrow/pull/5066#discussion_r313286779\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/rank/VectorRank.java\n ##########\n @@ -0,0 +1,107 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.rank;\n+\n+import java.util.stream.IntStream;\n+\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * Utility for calculating ranks of vector elements.\n+ * @param <V> the vector type\n+ */\n+public class VectorRank<V extends ValueVector> {\n+\n+  private VectorValueComparator<V> comparator;\n+\n+  /**\n+   * Vector indices.\n+   */\n+  private IntVector indices;\n+\n+  private final BufferAllocator allocator;\n+\n+  /**\n+   * Constructs a vector rank utility.\n+   * @param allocator the allocator to use.\n+   */\n+  public VectorRank(BufferAllocator allocator) {\n+    this.allocator = allocator;\n+  }\n+\n+  /**\n \n Review comment:\n   Thanks for the clarification. I think the top n algorithm in the document is also interesting and practical. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-13T08:56:25.283+0000",
                    "updated": "2019-08-13T08:56:25.283+0000",
                    "started": "2019-08-13T08:56:25.283+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293746",
                    "issueId": "13250274"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250274/worklog/293824",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5066: ARROW-6212: [Java] Support vector rank operation\nURL: https://github.com/apache/arrow/pull/5066#issuecomment-520445380\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5066?src=pr&el=h1) Report\n   > Merging [#5066](https://codecov.io/gh/apache/arrow/pull/5066?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/1a3eab50ea49414494d4f7ed91d1e2e3a6f8919f?src=pr&el=desc) will **increase** coverage by `2.1%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5066/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5066?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #5066      +/-   ##\n   ==========================================\n   + Coverage   87.61%   89.71%    +2.1%     \n   ==========================================\n     Files        1009      670     -339     \n     Lines      144082    99567   -44515     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       126232    89329   -36903     \n   + Misses      17488    10238    -7250     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5066?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/json/converter.cc](https://codecov.io/gh/apache/arrow/pull/5066/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NvbnZlcnRlci5jYw==) | `90.05% <0%> (-1.76%)` | :arrow_down: |\n   | [cpp/src/arrow/json/chunked-builder.cc](https://codecov.io/gh/apache/arrow/pull/5066/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NodW5rZWQtYnVpbGRlci5jYw==) | `79.91% <0%> (-1.68%)` | :arrow_down: |\n   | [python/pyarrow/tests/test\\_parquet.py](https://codecov.io/gh/apache/arrow/pull/5066/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9wYXJxdWV0LnB5) | `96.4% <0%> (-0.07%)` | :arrow_down: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/5066/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/5066/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [js/src/util/fn.ts](https://codecov.io/gh/apache/arrow/pull/5066/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvZm4udHM=) | | |\n   | [go/arrow/array/bufferbuilder.go](https://codecov.io/gh/apache/arrow/pull/5066/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlci5nbw==) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/5066/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [rust/datafusion/src/execution/projection.rs](https://codecov.io/gh/apache/arrow/pull/5066/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vcHJvamVjdGlvbi5ycw==) | | |\n   | [rust/datafusion/src/execution/filter.rs](https://codecov.io/gh/apache/arrow/pull/5066/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZmlsdGVyLnJz) | | |\n   | ... and [333 more](https://codecov.io/gh/apache/arrow/pull/5066/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5066?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5066?src=pr&el=footer). Last update [1a3eab5...ff1b621](https://codecov.io/gh/apache/arrow/pull/5066?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-13T11:36:47.576+0000",
                    "updated": "2019-08-13T11:36:47.576+0000",
                    "started": "2019-08-13T11:36:47.576+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293824",
                    "issueId": "13250274"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250274/worklog/294475",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5066: ARROW-6212: [Java] Support vector rank operation\nURL: https://github.com/apache/arrow/pull/5066#discussion_r313713421\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/rank/VectorRank.java\n ##########\n @@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.rank;\n+\n+import java.util.stream.IntStream;\n+\n+import org.apache.arrow.algorithm.sort.IndexSorter;\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * Utility for calculating ranks of vector elements.\n+ * @param <V> the vector type\n+ */\n+public class VectorRank<V extends ValueVector> {\n+\n+  private VectorValueComparator<V> comparator;\n+\n+  /**\n+   * Vector indices.\n+   */\n+  private IntVector indices;\n+\n+  private final BufferAllocator allocator;\n+\n+  /**\n+   * Constructs a vector rank utility.\n+   * @param allocator the allocator to use.\n+   */\n+  public VectorRank(BufferAllocator allocator) {\n+    this.allocator = allocator;\n+  }\n+\n+  /**\n+   * Given a rank r, gets the index of the element that is the rth smallest in the vector.\n+   * The operation is performed without changing the vector, and takes O(n) time,\n+   * where n is the length of the vector.\n+   * @param vector the vector from which to get the element index.\n+   * @param comparator the criteria for vector element comparison.\n+   * @param rank the rank to determine.\n+   * @return the element index with the given rank.\n+   */\n+  public int rank(V vector, VectorValueComparator<V> comparator, int rank) {\n \n Review comment:\n   ```suggestion\r\n     public int indexAtRank(V vector, VectorValueComparator<V> comparator, int rank) {\r\n   ```\r\n   I think this name might make it clearer that the index is returned?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T05:55:14.122+0000",
                    "updated": "2019-08-14T05:55:14.122+0000",
                    "started": "2019-08-14T05:55:14.121+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294475",
                    "issueId": "13250274"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250274/worklog/294541",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #5066: ARROW-6212: [Java] Support vector rank operation\nURL: https://github.com/apache/arrow/pull/5066#discussion_r313734037\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/rank/VectorRank.java\n ##########\n @@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.rank;\n+\n+import java.util.stream.IntStream;\n+\n+import org.apache.arrow.algorithm.sort.IndexSorter;\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * Utility for calculating ranks of vector elements.\n+ * @param <V> the vector type\n+ */\n+public class VectorRank<V extends ValueVector> {\n+\n+  private VectorValueComparator<V> comparator;\n+\n+  /**\n+   * Vector indices.\n+   */\n+  private IntVector indices;\n+\n+  private final BufferAllocator allocator;\n+\n+  /**\n+   * Constructs a vector rank utility.\n+   * @param allocator the allocator to use.\n+   */\n+  public VectorRank(BufferAllocator allocator) {\n+    this.allocator = allocator;\n+  }\n+\n+  /**\n+   * Given a rank r, gets the index of the element that is the rth smallest in the vector.\n+   * The operation is performed without changing the vector, and takes O(n) time,\n+   * where n is the length of the vector.\n+   * @param vector the vector from which to get the element index.\n+   * @param comparator the criteria for vector element comparison.\n+   * @param rank the rank to determine.\n+   * @return the element index with the given rank.\n+   */\n+  public int rank(V vector, VectorValueComparator<V> comparator, int rank) {\n \n Review comment:\n   Sure. This method name is much clearer. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T07:18:00.266+0000",
                    "updated": "2019-08-14T07:18:00.266+0000",
                    "started": "2019-08-14T07:18:00.266+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294541",
                    "issueId": "13250274"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250274/worklog/295976",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #5066: ARROW-6212: [Java] Support vector rank operation\nURL: https://github.com/apache/arrow/pull/5066#issuecomment-521864313\n \n \n   +1, thank you.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-16T02:43:22.532+0000",
                    "updated": "2019-08-16T02:43:22.532+0000",
                    "started": "2019-08-16T02:43:22.532+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "295976",
                    "issueId": "13250274"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250274/worklog/295977",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5066: ARROW-6212: [Java] Support vector rank operation\nURL: https://github.com/apache/arrow/pull/5066\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-16T02:44:04.358+0000",
                    "updated": "2019-08-16T02:44:04.358+0000",
                    "started": "2019-08-16T02:44:04.358+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "295977",
                    "issueId": "13250274"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 8400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2a866c36[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@41d655e9[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1f9e7b99[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6c941c9e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@25eecea3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@210f9799[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4da16292[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@11de754[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5255aa02[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@fbb5c8e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@49c80a19[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@27016333[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 8400,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Aug 16 02:43:57 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-08-16T02:43:57.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6212/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-08-12T12:14:43.000+0000",
        "updated": "2019-08-16T02:44:04.000+0000",
        "timeoriginalestimate": null,
        "description": "Given an unsorted vector, we want to get the index of the ith smallest element in the vector. This function is supported by the rank operation.\u00a0\r\n\r\nWe provide an implementation\u00a0that gets the index with the\u00a0desired rank, without sorting the vector (the vector is left intact), and the implementation takes O( n )\u00a0time, where n is the vector length.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 8400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Support vector rank operation",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250274/comment/16908650",
                    "id": "16908650",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 5066\n[https://github.com/apache/arrow/pull/5066]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-08-16T02:43:57.350+0000",
                    "updated": "2019-08-16T02:43:57.350+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z05kmg:",
        "customfield_12314139": null
    }
}