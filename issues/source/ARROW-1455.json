{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13099486",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13099486",
    "key": "ARROW-1455",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=heimir",
            "name": "heimir",
            "key": "heimir",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=heimir&avatarId=32651",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=heimir&avatarId=32651",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=heimir&avatarId=32651",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=heimir&avatarId=32651"
            },
            "displayName": "Heimir Thor Sverrisson",
            "active": true,
            "timeZone": "America/Denver"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1455/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@9e2309[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@56f0d1b4[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7f10864e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2fbd9569[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6f35efe6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5a30a88a[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@21696774[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@62bcb8ed[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@22b62183[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7d9da9a7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@172533a7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@10d98a7e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Nov 01 02:54:17 UTC 2017",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2017-11-01T02:54:16.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1455/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2017-09-03T21:35:50.000+0000",
        "updated": "2017-11-01T02:54:17.000+0000",
        "timeoriginalestimate": null,
        "description": "Introducing the Dask stack into Arrow's CI might be a bit heavyweight at the moment, but we can add a testing set up in https://github.com/apache/arrow/tree/master/python/testing so that this can be validated on an ad hoc basis in a reproducible way.\n\nsee also ARROW-1417",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Add Dockerfile for validating Dask integration outside of usual CI",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13099486/comment/16151988",
                    "id": "16151988",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fjetter",
                        "name": "fjetter",
                        "key": "fjetter",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Florian Jetter",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Maybe we could still add it to the CI but allow failures: https://docs.travis-ci.com/user/customizing-the-build#Rows-that-are-Allowed-to-Fail",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fjetter",
                        "name": "fjetter",
                        "key": "fjetter",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Florian Jetter",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-09-03T22:09:05.186+0000",
                    "updated": "2017-09-03T22:09:05.186+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13099486/comment/16219122",
                    "id": "16219122",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "heimir-sverrisson opened a new pull request #1249: ARROW-1455 [Python] Add Dockerfile for validating Dask integration\nURL: https://github.com/apache/arrow/pull/1249\n \n \n   A Docker container is created with all the dependencies needed to pull down the Dask code from Github and install it locally, together with Arrow, to run an integration test.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-25T17:22:19.525+0000",
                    "updated": "2017-10-25T17:22:19.525+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13099486/comment/16219125",
                    "id": "16219125",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1249: ARROW-1455 [Python] Add Dockerfile for validating Dask integration\nURL: https://github.com/apache/arrow/pull/1249#issuecomment-339405716\n \n \n   We should not check in data files in to the git repo, so we will need to handle test data in some other way. We will also want to collect the Python-related integration tests someplace Python-specific. I will review in more detail when I can\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-25T17:24:10.987+0000",
                    "updated": "2017-10-25T17:24:10.987+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13099486/comment/16219127",
                    "id": "16219127",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1249: ARROW-1455 [Python] Add Dockerfile for validating Dask integration\nURL: https://github.com/apache/arrow/pull/1249#issuecomment-339405716\n \n \n   We should not check data files in to the git repo, so we will need to handle test data in some other way. We will also want to collect the Python-related integration tests someplace Python-specific. I will review in more detail when I can\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-25T17:24:20.794+0000",
                    "updated": "2017-10-25T17:24:20.794+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13099486/comment/16220491",
                    "id": "16220491",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "heimir-sverrisson commented on issue #1249: ARROW-1455 [Python] Add Dockerfile for validating Dask integration\nURL: https://github.com/apache/arrow/pull/1249#issuecomment-339680682\n \n \n   @wesm I've removed the data files, added code to generate test data and moved the test to `arrow/python/testing`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-26T14:17:09.359+0000",
                    "updated": "2017-10-26T14:17:09.359+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13099486/comment/16225344",
                    "id": "16225344",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "heimir-sverrisson commented on a change in pull request #1249: ARROW-1455 [Python] Add Dockerfile for validating Dask integration\nURL: https://github.com/apache/arrow/pull/1249#discussion_r147772050\n \n \n\n ##########\n File path: dev/dask_integration/Dockerfile\n ##########\n @@ -0,0 +1,88 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+FROM ubuntu:14.04\n+ADD . /apache-arrow\n+WORKDIR /apache-arrow\n+# Basic OS utilities\n+RUN apt-get update && apt-get install -y \\\n+        wget \\\n+        git \\\n+        gcc \\\n+        g++\n+# This will install conda in /home/ubuntu/miniconda\n+RUN wget -O /tmp/miniconda.sh \\\n+    https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n+    bash /tmp/miniconda.sh -b -p /home/ubuntu/miniconda && \\\n+    rm /tmp/miniconda.sh\n+# Create Conda environment\n+ENV PATH=\"/home/ubuntu/miniconda/bin:${PATH}\"\n+RUN conda create -y -q -n test-environment \\\n+    python=3.6\n \n Review comment:\n   I did try to, but the image in that file `cpcloud86/impala:metastore` does not even exist any more! Do you want me to try `cpcloud86/impala:latest` instead?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-30T17:16:11.664+0000",
                    "updated": "2017-10-30T17:16:11.664+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13099486/comment/16225345",
                    "id": "16225345",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "heimir-sverrisson commented on a change in pull request #1249: ARROW-1455 [Python] Add Dockerfile for validating Dask integration\nURL: https://github.com/apache/arrow/pull/1249#discussion_r147772188\n \n \n\n ##########\n File path: dev/dask_integration/dask_integration.sh\n ##########\n @@ -0,0 +1,45 @@\n+#!/usr/bin/env bash\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# Set up environment and working directory\n+cd /apache-arrow\n+\n+export ARROW_BUILD_TYPE=release\n+export ARROW_HOME=$(pwd)/dist\n+export PARQUET_HOME=$(pwd)/dist\n+CONDA_BASE=/home/ubuntu/miniconda\n+export LD_LIBRARY_PATH=$(pwd)/dist/lib:${CONDA_BASE}/lib:${LD_LIBRARY_PATH}\n+\n+# Allow for --user Python installation inside Docker\n+export HOME=$(pwd)\n+\n+# Clean up and get the dask master branch from github\n+rm -rf dask .local\n+export GIT_COMMITTER_NAME=\"Nobody\"\n+export GIT_COMMITTER_EMAIL=\"nobody@nowhere.com\"\n+git clone https://github.com/dask/dask.git\n+pushd dask\n+pip install --user -e .[complete]\n+# Verify integrity of the installed dask dataframe code\n+py.test dask/dataframe/tests/test_dataframe.py\n \n Review comment:\n   It's now been added.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-30T17:16:33.980+0000",
                    "updated": "2017-10-30T17:16:33.980+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13099486/comment/16225349",
                    "id": "16225349",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "heimir-sverrisson commented on a change in pull request #1249: ARROW-1455 [Python] Add Dockerfile for validating Dask integration\nURL: https://github.com/apache/arrow/pull/1249#discussion_r147772381\n \n \n\n ##########\n File path: dev/README.md\n ##########\n @@ -113,3 +113,53 @@ Studio 2015):\n ```\n dev/release/verify-release-candidate.bat apache-arrow-0.7.0.tar.gz\n ```\n+\n+## Creating API documentation\n+\n+The generation of API documentation for `C++`, `C Glib`, `Python` \n+and `Java` has been Dockerized. To generate the API documentation\n+run the following command:\n+\n+```shell\n+bash dev/gen_apidocs.sh\n+```\n+\n+This script assumes that the `parquet-cpp` Git repository \n+https://github.com/apache/parquet-cpp has been cloned\n+besides the Arrow repository and a `dist` directory can be created\n+at the same level by the current user. Please note that most of the\n+software must be built in order to create the documentation, so this\n+step may take some time to run, especially the first time around as the\n+Docker container will also have to be built.\n+\n+After successfully creating the API documentation the website can be\n+run locally to browse the API documentation from the top level\n+`Documentation` menu. To run the website issue the command:\n+\n+```shell\n+bash dev/run_site.sh\n+```\n+\n+The local URL for the website running inside the docker container\n+will be shown as `Server address:` in the output of the command.\n+To stop the server press `Ctrl-C` in that window.\n \n Review comment:\n   OK - I missed this change.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-30T17:17:14.085+0000",
                    "updated": "2017-10-30T17:17:14.085+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13099486/comment/16225351",
                    "id": "16225351",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "heimir-sverrisson commented on a change in pull request #1249: ARROW-1455 [Python] Add Dockerfile for validating Dask integration\nURL: https://github.com/apache/arrow/pull/1249#discussion_r147772476\n \n \n\n ##########\n File path: dev/README.md\n ##########\n @@ -113,3 +113,53 @@ Studio 2015):\n ```\n dev/release/verify-release-candidate.bat apache-arrow-0.7.0.tar.gz\n ```\n+\n+## Creating API documentation\n+\n+The generation of API documentation for `C++`, `C Glib`, `Python` \n+and `Java` has been Dockerized. To generate the API documentation\n+run the following command:\n+\n+```shell\n+bash dev/gen_apidocs.sh\n+```\n+\n+This script assumes that the `parquet-cpp` Git repository \n+https://github.com/apache/parquet-cpp has been cloned\n+besides the Arrow repository and a `dist` directory can be created\n+at the same level by the current user. Please note that most of the\n+software must be built in order to create the documentation, so this\n+step may take some time to run, especially the first time around as the\n+Docker container will also have to be built.\n+\n+After successfully creating the API documentation the website can be\n+run locally to browse the API documentation from the top level\n+`Documentation` menu. To run the website issue the command:\n+\n+```shell\n+bash dev/run_site.sh\n+```\n+\n+The local URL for the website running inside the docker container\n+will be shown as `Server address:` in the output of the command.\n+To stop the server press `Ctrl-C` in that window.\n+\n+## Testing Dask integration\n \n Review comment:\n   Done\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-30T17:17:26.433+0000",
                    "updated": "2017-10-30T17:17:26.433+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13099486/comment/16225360",
                    "id": "16225360",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1249: ARROW-1455 [Python] Add Dockerfile for validating Dask integration\nURL: https://github.com/apache/arrow/pull/1249#discussion_r147774125\n \n \n\n ##########\n File path: dev/dask_integration/Dockerfile\n ##########\n @@ -0,0 +1,88 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+FROM ubuntu:14.04\n+ADD . /apache-arrow\n+WORKDIR /apache-arrow\n+# Basic OS utilities\n+RUN apt-get update && apt-get install -y \\\n+        wget \\\n+        git \\\n+        gcc \\\n+        g++\n+# This will install conda in /home/ubuntu/miniconda\n+RUN wget -O /tmp/miniconda.sh \\\n+    https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n+    bash /tmp/miniconda.sh -b -p /home/ubuntu/miniconda && \\\n+    rm /tmp/miniconda.sh\n+# Create Conda environment\n+ENV PATH=\"/home/ubuntu/miniconda/bin:${PATH}\"\n+RUN conda create -y -q -n test-environment \\\n+    python=3.6\n \n Review comment:\n   I think `java8-1` is the new latest tag https://github.com/apache/arrow/pull/1031#issuecomment-337780245 cc @cpcloud. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-30T17:22:49.270+0000",
                    "updated": "2017-10-30T17:22:49.270+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13099486/comment/16226912",
                    "id": "16226912",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "heimir-sverrisson commented on a change in pull request #1249: ARROW-1455 [Python] Add Dockerfile for validating Dask integration\nURL: https://github.com/apache/arrow/pull/1249#discussion_r148017829\n \n \n\n ##########\n File path: dev/dask_integration/Dockerfile\n ##########\n @@ -0,0 +1,88 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+FROM ubuntu:14.04\n+ADD . /apache-arrow\n+WORKDIR /apache-arrow\n+# Basic OS utilities\n+RUN apt-get update && apt-get install -y \\\n+        wget \\\n+        git \\\n+        gcc \\\n+        g++\n+# This will install conda in /home/ubuntu/miniconda\n+RUN wget -O /tmp/miniconda.sh \\\n+    https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n+    bash /tmp/miniconda.sh -b -p /home/ubuntu/miniconda && \\\n+    rm /tmp/miniconda.sh\n+# Create Conda environment\n+ENV PATH=\"/home/ubuntu/miniconda/bin:${PATH}\"\n+RUN conda create -y -q -n test-environment \\\n+    python=3.6\n \n Review comment:\n   Decided in offline discussion to not use the impala dockerfile\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-31T14:45:45.273+0000",
                    "updated": "2017-10-31T14:45:45.273+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13099486/comment/16226921",
                    "id": "16226921",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1249: ARROW-1455 [Python] Add Dockerfile for validating Dask integration\nURL: https://github.com/apache/arrow/pull/1249#discussion_r148019214\n \n \n\n ##########\n File path: dev/dask_integration/Dockerfile\n ##########\n @@ -0,0 +1,88 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+FROM ubuntu:14.04\n+ADD . /apache-arrow\n+WORKDIR /apache-arrow\n+# Basic OS utilities\n+RUN apt-get update && apt-get install -y \\\n+        wget \\\n+        git \\\n+        gcc \\\n+        g++\n+# This will install conda in /home/ubuntu/miniconda\n+RUN wget -O /tmp/miniconda.sh \\\n+    https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n+    bash /tmp/miniconda.sh -b -p /home/ubuntu/miniconda && \\\n+    rm /tmp/miniconda.sh\n+# Create Conda environment\n+ENV PATH=\"/home/ubuntu/miniconda/bin:${PATH}\"\n+RUN conda create -y -q -n test-environment \\\n+    python=3.6\n \n Review comment:\n   To relay the contents of this discussion here, the Docker image with Impala on it is very heavyweight at the moment, so we would need to do a fair bit of refactoring to create a a new base image for the HDFS testing image that can be shared with this one. I think it would be useful to do in the future as we add more Docker-based integration testing with downstream Arrow users\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-31T14:50:07.428+0000",
                    "updated": "2017-10-31T14:50:07.428+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13099486/comment/16233595",
                    "id": "16233595",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1249\n[https://github.com/apache/arrow/pull/1249]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-11-01T02:54:16.898+0000",
                    "updated": "2017-11-01T02:54:16.898+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13099486/comment/16233596",
                    "id": "16233596",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1249: ARROW-1455 [Python] Add Dockerfile for validating Dask integration\nURL: https://github.com/apache/arrow/pull/1249\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/dev/dask_integration.sh b/dev/dask_integration.sh\nnew file mode 100755\nindex 000000000..d344328b6\n--- /dev/null\n+++ b/dev/dask_integration.sh\n@@ -0,0 +1,21 @@\n+#!/usr/bin/env bash\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# Pass the service name to run_docker_compose.sh\n+# Which validates environment and runs the service\n+exec \"$(dirname ${BASH_SOURCE})\"/run_docker_compose.sh dask_integration\ndiff --git a/dev/dask_integration/Dockerfile b/dev/dask_integration/Dockerfile\nnew file mode 100644\nindex 000000000..f72ef8ca0\n--- /dev/null\n+++ b/dev/dask_integration/Dockerfile\n@@ -0,0 +1,88 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+FROM ubuntu:14.04\n+ADD . /apache-arrow\n+WORKDIR /apache-arrow\n+# Basic OS utilities\n+RUN apt-get update && apt-get install -y \\\n+        wget \\\n+        git \\\n+        gcc \\\n+        g++\n+# This will install conda in /home/ubuntu/miniconda\n+RUN wget -O /tmp/miniconda.sh \\\n+    https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n+    bash /tmp/miniconda.sh -b -p /home/ubuntu/miniconda && \\\n+    rm /tmp/miniconda.sh\n+# Create Conda environment\n+ENV PATH=\"/home/ubuntu/miniconda/bin:${PATH}\"\n+RUN conda create -y -q -n test-environment \\\n+    python=3.6\n+# Install dependencies\n+RUN conda install -c conda-forge \\\n+    numpy \\\n+    pandas \\\n+    bcolz \\\n+    blosc \\\n+    bokeh \\\n+    boto3 \\\n+    chest \\\n+    cloudpickle \\\n+    coverage \\\n+    cytoolz \\\n+    distributed \\\n+    graphviz \\\n+    h5py \\\n+    ipython \\\n+    partd \\\n+    psutil \\\n+    \"pytest<=3.1.1\" \\\n+    scikit-image \\\n+    scikit-learn \\\n+    scipy \\\n+    sqlalchemy \\\n+    toolz\n+# install pytables from defaults for now\n+RUN conda install pytables\n+\n+RUN pip install -q git+https://github.com/dask/partd --upgrade --no-deps\n+RUN pip install -q git+https://github.com/dask/zict --upgrade --no-deps\n+RUN pip install -q git+https://github.com/dask/distributed --upgrade --no-deps\n+RUN pip install -q git+https://github.com/mrocklin/sparse --upgrade --no-deps\n+RUN pip install -q git+https://github.com/dask/s3fs --upgrade --no-deps\n+\n+RUN conda install -q -c conda-forge numba cython\n+RUN pip install -q git+https://github.com/dask/fastparquet\n+\n+RUN pip install -q \\\n+    cachey \\\n+    graphviz \\\n+    moto \\\n+    pyarrow \\\n+    --upgrade --no-deps\n+\n+RUN pip install -q \\\n+    cityhash \\\n+    flake8 \\\n+    mmh3 \\\n+    pandas_datareader \\\n+    pytest-xdist \\\n+    xxhash \\\n+    pycodestyle\n+\n+CMD arrow/dev/dask_integration/dask_integration.sh\n+\ndiff --git a/dev/dask_integration/dask_integration.sh b/dev/dask_integration/dask_integration.sh\nnew file mode 100755\nindex 000000000..f5a24e462\n--- /dev/null\n+++ b/dev/dask_integration/dask_integration.sh\n@@ -0,0 +1,49 @@\n+#!/usr/bin/env bash\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# Set up environment and working directory\n+cd /apache-arrow\n+\n+export ARROW_BUILD_TYPE=release\n+export ARROW_HOME=$(pwd)/dist\n+export PARQUET_HOME=$(pwd)/dist\n+CONDA_BASE=/home/ubuntu/miniconda\n+export LD_LIBRARY_PATH=$(pwd)/dist/lib:${CONDA_BASE}/lib:${LD_LIBRARY_PATH}\n+\n+# Allow for --user Python installation inside Docker\n+export HOME=$(pwd)\n+\n+# Clean up and get the dask master branch from github\n+rm -rf dask .local\n+export GIT_COMMITTER_NAME=\"Nobody\"\n+export GIT_COMMITTER_EMAIL=\"nobody@nowhere.com\"\n+git clone https://github.com/dask/dask.git\n+pushd dask\n+pip install --user -e .[complete]\n+# Verify integrity of the installed dask dataframe code\n+py.test dask/dataframe/tests/test_dataframe.py\n+popd\n+\n+# Run the integration test\n+pushd arrow/python/testing\n+py.test dask_tests\n+popd\n+\n+pushd dask/dask/dataframe/io\n+py.test tests/test_parquet.py\n+popd\ndiff --git a/dev/docker-compose.yml b/dev/docker-compose.yml\nindex 7bd2cd441..4b9014894 100644\n--- a/dev/docker-compose.yml\n+++ b/dev/docker-compose.yml\n@@ -28,3 +28,8 @@ services:\n     - \"4000:4000\"\n     volumes:\n      - ../..:/apache-arrow\n+  dask_integration:\n+    build: \n+      context: dask_integration\n+    volumes:\n+     - ../..:/apache-arrow\ndiff --git a/dev/run_docker_compose.sh b/dev/run_docker_compose.sh\nindex f46879ed1..681a3a75f 100755\n--- a/dev/run_docker_compose.sh\n+++ b/dev/run_docker_compose.sh\n@@ -37,4 +37,4 @@ fi\n \n GID=$(id -g ${USERNAME})\n docker-compose -f arrow/dev/docker-compose.yml run \\\n-               -u \"${UID}:${GID}\" \"${1}\"\n+               --rm -u \"${UID}:${GID}\" \"${1}\"\ndiff --git a/python/testing/README.md b/python/testing/README.md\nindex 07970a231..0ebeec4a1 100644\n--- a/python/testing/README.md\n+++ b/python/testing/README.md\n@@ -23,4 +23,26 @@\n \n ```shell\n ./test_hdfs.sh\n-```\n\\ No newline at end of file\n+```\n+\n+## Testing Dask integration\n+\n+Initial integration testing with Dask has been Dockerized.\n+To invoke the test run the following command in the `arrow`\n+root-directory:\n+\n+```shell\n+bash dev/dask_integration.sh\n+```\n+\n+This script will create a `dask` directory on the same level as\n+`arrow`. It will clone the Dask project from Github into `dask`\n+and do a Python `--user` install. The Docker code will use the parent\n+directory of `arrow` as `$HOME` and that's where Python will\n+install `dask` into a `.local` directory.\n+\n+The output of the Docker session will contain the results of tests\n+of the Dask dataframe followed by the single integration test that\n+now exists for Arrow. That test creates a set of `csv`-files and then\n+does parallel reading of `csv`-files into a Dask dataframe. The code\n+for this test resides here in the `dask_test` directory.\ndiff --git a/python/testing/dask_tests/test_dask_integration.py b/python/testing/dask_tests/test_dask_integration.py\nnew file mode 100644\nindex 000000000..e67834878\n--- /dev/null\n+++ b/python/testing/dask_tests/test_dask_integration.py\n@@ -0,0 +1,51 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+from datetime import date, timedelta\n+import csv\n+from random import randint\n+import dask.dataframe as dd\n+import pyarrow as pa\n+\n+def make_datafiles(tmpdir, prefix='data', num_files=20):\n+    rowcount = 5000\n+    fieldnames = ['date', 'temperature', 'dewpoint']\n+    start_date = date(1900, 1, 1)\n+    for i in range(num_files):\n+        filename = '{0}/{1}-{2}.csv'.format(tmpdir, prefix, i)\n+        with open(filename, 'w') as outcsv:\n+            writer = csv.DictWriter(outcsv, fieldnames)\n+            writer.writeheader()\n+            the_date = start_date\n+            for _ in range(rowcount):\n+                temperature = randint(-10, 35)\n+                dewpoint = temperature - randint(0, 10)\n+                writer.writerow({'date': the_date, 'temperature': temperature,\n+                                 'dewpoint': dewpoint})\n+                the_date += timedelta(days=1)\n+\n+def test_dask_file_read(tmpdir):\n+    prefix = 'data'\n+    make_datafiles(tmpdir, prefix)\n+    # Read all datafiles in parallel\n+    datafiles = '{0}/{1}-*.csv'.format(tmpdir, prefix)\n+    dask_df = dd.read_csv(datafiles)\n+    # Convert Dask dataframe to Arrow table\n+    table = pa.Table.from_pandas(dask_df.compute())\n+    # Second column (1) is temperature\n+    dask_temp = int(1000 * dask_df['temperature'].mean().compute())\n+    arrow_temp = int(1000 * table[1].to_pandas().mean())\n+    assert dask_temp == arrow_temp\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-01T02:54:17.717+0000",
                    "updated": "2017-11-01T02:54:17.717+0000"
                }
            ],
            "maxResults": 14,
            "total": 14,
            "startAt": 0
        },
        "customfield_12311820": "0|i3jlgv:",
        "customfield_12314139": null
    }
}