{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13200370",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200370",
    "key": "ARROW-3870",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 2400,
            "total": 2400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 2400,
            "total": 2400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3870/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 4,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200370/worklog/171261",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm opened a new pull request #3064: ARROW-3870: [C++] Add Peek to InputStream abstract interface\nURL: https://github.com/apache/arrow/pull/3064\n \n \n   Default implementation returns a 0-length `arrow::util::string_view`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-01T01:13:54.765+0000",
                    "updated": "2018-12-01T01:13:54.765+0000",
                    "started": "2018-12-01T01:13:54.764+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "171261",
                    "issueId": "13200370"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200370/worklog/171333",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #3064: ARROW-3870: [C++] Add Peek to InputStream abstract interface\nURL: https://github.com/apache/arrow/pull/3064#issuecomment-443479586\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3064?src=pr&el=h1) Report\n   > Merging [#3064](https://codecov.io/gh/apache/arrow/pull/3064?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/2bc4d95b3192316b91bbd9687208ef669bcf704c?src=pr&el=desc) will **increase** coverage by `1.12%`.\n   > The diff coverage is `100%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3064/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3064?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff            @@\n   ##           master   #3064      +/-   ##\n   =========================================\n   + Coverage   87.07%   88.2%   +1.12%     \n   =========================================\n     Files         489     431      -58     \n     Lines       69160   65462    -3698     \n   =========================================\n   - Hits        60222   57739    -2483     \n   + Misses       8837    7723    -1114     \n   + Partials      101       0     -101\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3064?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/io/memory.h](https://codecov.io/gh/apache/arrow/pull/3064/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9tZW1vcnkuaA==) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/io/interfaces.h](https://codecov.io/gh/apache/arrow/pull/3064/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9pbnRlcmZhY2VzLmg=) | `90% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/io/io-file-test.cc](https://codecov.io/gh/apache/arrow/pull/3064/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9pby1maWxlLXRlc3QuY2M=) | `94.84% <100%> (+0.04%)` | :arrow_up: |\n   | [cpp/src/arrow/io/memory.cc](https://codecov.io/gh/apache/arrow/pull/3064/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9tZW1vcnkuY2M=) | `89.41% <100%> (+0.19%)` | :arrow_up: |\n   | [cpp/src/arrow/io/interfaces.cc](https://codecov.io/gh/apache/arrow/pull/3064/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9pbnRlcmZhY2VzLmNj) | `55% <100%> (+5%)` | :arrow_up: |\n   | [cpp/src/arrow/io/io-memory-test.cc](https://codecov.io/gh/apache/arrow/pull/3064/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9pby1tZW1vcnktdGVzdC5jYw==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/thirdparty/ae/ae.c](https://codecov.io/gh/apache/arrow/pull/3064/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9hZS9hZS5j) | `72.03% <0%> (-0.95%)` | :arrow_down: |\n   | [cpp/src/arrow/python/deserialize.cc](https://codecov.io/gh/apache/arrow/pull/3064/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vZGVzZXJpYWxpemUuY2M=) | `91.7% <0%> (\u00f8)` | :arrow_up: |\n   | [go/arrow/array/table.go](https://codecov.io/gh/apache/arrow/pull/3064/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvdGFibGUuZ28=) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3064/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | ... and [59 more](https://codecov.io/gh/apache/arrow/pull/3064/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3064?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3064?src=pr&el=footer). Last update [2bc4d95...6d9b411](https://codecov.io/gh/apache/arrow/pull/3064?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-02T04:05:19.503+0000",
                    "updated": "2018-12-02T04:05:19.503+0000",
                    "started": "2018-12-02T04:05:19.502+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "171333",
                    "issueId": "13200370"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200370/worklog/171334",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3064: ARROW-3870: [C++] Add Peek to InputStream abstract interface\nURL: https://github.com/apache/arrow/pull/3064#issuecomment-443480247\n \n \n   +1\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-02T04:20:46.216+0000",
                    "updated": "2018-12-02T04:20:46.216+0000",
                    "started": "2018-12-02T04:20:46.216+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "171334",
                    "issueId": "13200370"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200370/worklog/171335",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #3064: ARROW-3870: [C++] Add Peek to InputStream abstract interface\nURL: https://github.com/apache/arrow/pull/3064\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/io/buffered.h b/cpp/src/arrow/io/buffered.h\nindex e7302589dd..e4374ba807 100644\n--- a/cpp/src/arrow/io/buffered.h\n+++ b/cpp/src/arrow/io/buffered.h\n@@ -100,10 +100,6 @@ class ARROW_EXPORT BufferedInputStream : public InputStream {\n   static Status Create(std::shared_ptr<InputStream> raw, int64_t buffer_size,\n                        MemoryPool* pool, std::shared_ptr<BufferedInputStream>* out);\n \n-  /// \\brief Return string_view to buffered bytes, up to the indicated\n-  /// number. View becomes invalid after any operation on file\n-  util::string_view Peek(int64_t nbytes) const;\n-\n   /// \\brief Resize internal read buffer; calls to Read(...) will read at least\n   /// \\param[in] new_buffer_size the new read buffer size\n   /// \\return Status\n@@ -124,6 +120,7 @@ class ARROW_EXPORT BufferedInputStream : public InputStream {\n   std::shared_ptr<InputStream> raw() const;\n \n   // InputStream APIs\n+  util::string_view Peek(int64_t nbytes) const override;\n   Status Close() override;\n   bool closed() const override;\n \ndiff --git a/cpp/src/arrow/io/interfaces.cc b/cpp/src/arrow/io/interfaces.cc\nindex ccabd47599..94e8fe6f43 100644\n--- a/cpp/src/arrow/io/interfaces.cc\n+++ b/cpp/src/arrow/io/interfaces.cc\n@@ -22,6 +22,7 @@\n #include <mutex>\n \n #include \"arrow/status.h\"\n+#include \"arrow/util/string_view.h\"\n \n namespace arrow {\n namespace io {\n@@ -33,6 +34,10 @@ Status InputStream::Advance(int64_t nbytes) {\n   return Read(nbytes, &temp);\n }\n \n+util::string_view InputStream::Peek(int64_t ARROW_ARG_UNUSED(nbytes)) const {\n+  return util::string_view(nullptr, 0);\n+}\n+\n bool InputStream::supports_zero_copy() const { return false; }\n \n struct RandomAccessFile::RandomAccessFileImpl {\ndiff --git a/cpp/src/arrow/io/interfaces.h b/cpp/src/arrow/io/interfaces.h\nindex b6ba59bd24..7104affaed 100644\n--- a/cpp/src/arrow/io/interfaces.h\n+++ b/cpp/src/arrow/io/interfaces.h\n@@ -24,6 +24,7 @@\n #include <vector>\n \n #include \"arrow/util/macros.h\"\n+#include \"arrow/util/string_view.h\"\n #include \"arrow/util/visibility.h\"\n \n namespace arrow {\n@@ -121,6 +122,13 @@ class ARROW_EXPORT InputStream : virtual public FileInterface, virtual public Re\n   /// \\return Status\n   Status Advance(int64_t nbytes);\n \n+  /// \\brief Return string_view to any buffered bytes, up to the indicated\n+  /// number. View becomes invalid after any operation on file. If the\n+  /// InputStream is unbuffered, returns 0-length string_view\n+  /// \\param[in] nbytes the maximum number of bytes to see\n+  /// \\return arrow::util::string_view\n+  virtual util::string_view Peek(int64_t nbytes) const;\n+\n   /// \\brief Return true if InputStream is capable of zero copy Buffer reads\n   virtual bool supports_zero_copy() const;\n \ndiff --git a/cpp/src/arrow/io/io-file-test.cc b/cpp/src/arrow/io/io-file-test.cc\nindex afe2c60718..6081005a8f 100644\n--- a/cpp/src/arrow/io/io-file-test.cc\n+++ b/cpp/src/arrow/io/io-file-test.cc\n@@ -345,6 +345,15 @@ TEST_F(TestReadableFile, FromFileDescriptor) {\n   ASSERT_TRUE(FileIsClosed(fd));\n }\n \n+TEST_F(TestReadableFile, Peek) {\n+  MakeTestFile();\n+  OpenFile();\n+\n+  // Cannot peek\n+  auto view = file_->Peek(4);\n+  ASSERT_EQ(0, view.size());\n+}\n+\n TEST_F(TestReadableFile, SeekTellSize) {\n   MakeTestFile();\n   OpenFile();\ndiff --git a/cpp/src/arrow/io/io-memory-test.cc b/cpp/src/arrow/io/io-memory-test.cc\nindex fa90c1f141..cb8a8b52c4 100644\n--- a/cpp/src/arrow/io/io-memory-test.cc\n+++ b/cpp/src/arrow/io/io-memory-test.cc\n@@ -161,6 +161,21 @@ TEST(TestBufferReader, Seeking) {\n   ASSERT_EQ(pos, 10);\n }\n \n+TEST(TestBufferReader, Peek) {\n+  std::string data = \"data123456\";\n+\n+  BufferReader reader(std::make_shared<Buffer>(data));\n+\n+  auto view = reader.Peek(4);\n+\n+  ASSERT_EQ(4, view.size());\n+  ASSERT_EQ(data.substr(0, 4), view.to_string());\n+\n+  view = reader.Peek(20);\n+  ASSERT_EQ(data.size(), view.size());\n+  ASSERT_EQ(data, view.to_string());\n+}\n+\n TEST(TestBufferReader, RetainParentReference) {\n   // ARROW-387\n   std::string data = \"data123456\";\ndiff --git a/cpp/src/arrow/io/memory.cc b/cpp/src/arrow/io/memory.cc\nindex 8a79f6bb94..6afafbc25d 100644\n--- a/cpp/src/arrow/io/memory.cc\n+++ b/cpp/src/arrow/io/memory.cc\n@@ -287,6 +287,12 @@ Status BufferReader::Tell(int64_t* position) const {\n   return Status::OK();\n }\n \n+util::string_view BufferReader::Peek(int64_t nbytes) const {\n+  const int64_t bytes_available = std::min(nbytes, size_ - position_);\n+  return util::string_view(reinterpret_cast<const char*>(data_) + position_,\n+                           static_cast<size_t>(bytes_available));\n+}\n+\n bool BufferReader::supports_zero_copy() const { return true; }\n \n Status BufferReader::ReadAt(int64_t position, int64_t nbytes, int64_t* bytes_read,\ndiff --git a/cpp/src/arrow/io/memory.h b/cpp/src/arrow/io/memory.h\nindex 7b29800762..928ed10bf9 100644\n--- a/cpp/src/arrow/io/memory.h\n+++ b/cpp/src/arrow/io/memory.h\n@@ -140,6 +140,10 @@ class ARROW_EXPORT BufferReader : public RandomAccessFile {\n   // Zero copy read\n   Status Read(int64_t nbytes, std::shared_ptr<Buffer>* out) override;\n \n+  util::string_view Peek(int64_t nbytes) const override;\n+\n+  bool supports_zero_copy() const override;\n+\n   Status ReadAt(int64_t position, int64_t nbytes, int64_t* bytes_read,\n                 void* out) override;\n   Status ReadAt(int64_t position, int64_t nbytes, std::shared_ptr<Buffer>* out) override;\n@@ -147,8 +151,6 @@ class ARROW_EXPORT BufferReader : public RandomAccessFile {\n   Status GetSize(int64_t* size) override;\n   Status Seek(int64_t position) override;\n \n-  bool supports_zero_copy() const override;\n-\n   std::shared_ptr<Buffer> buffer() const { return buffer_; }\n \n  protected:\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-02T04:21:09.967+0000",
                    "updated": "2018-12-02T04:21:09.967+0000",
                    "started": "2018-12-02T04:21:09.967+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "171335",
                    "issueId": "13200370"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 2400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3aed6c24[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@14d98f0c[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@58105984[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@690c65[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@10a5d411[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@75cb7df0[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2f4dc6b4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@670ffd1c[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5934b8b0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@77be7a9b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@36076abe[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2e78867f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 2400,
        "customfield_12312520": null,
        "customfield_12312521": "Sun Dec 02 04:20:58 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-12-02T04:20:58.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3870/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-11-24T17:10:14.000+0000",
        "updated": "2018-12-02T04:21:09.000+0000",
        "timeoriginalestimate": null,
        "description": "Some InputStream sources support lookahead without advancing the stream, like BufferReader and BufferedInputStream. This is used in Parquet's internal IO APIs, so it would be useful to be able to remove these after a deprecation cycle\r\n\r\nhttps://github.com/apache/arrow/blob/master/cpp/src/parquet/util/memory.h#L375\r\n\r\nIf an InputStream does not support Peek, the returned {{string_view}} would have zero size. \r\n\r\nAnother option is to have {{Peek}} return {{Status}}, so that NotImplemented can be returned. I would prefer to return 0-length if the operation is not supported",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 2400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Add Peek to InputStream API",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200370/comment/16697891",
                    "id": "16697891",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Sounds like a nice addition to me. I'm fine with returning an empty read as well.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-11-24T17:12:19.250+0000",
                    "updated": "2018-11-24T17:12:19.250+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13200370/comment/16706094",
                    "id": "16706094",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 3064\n[https://github.com/apache/arrow/pull/3064]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-12-02T04:20:58.981+0000",
                    "updated": "2018-12-02T04:20:58.981+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|s00tu8:",
        "customfield_12314139": null
    }
}