{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13257438",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257438",
    "key": "ARROW-6605",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 4800,
            "total": 4800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 4800,
            "total": 4800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6605/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 9,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257438/worklog/314610",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5429: ARROW-6605: [C++] Add recursion depth control to fs::Selector\nURL: https://github.com/apache/arrow/pull/5429\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-18T19:50:44.706+0000",
                    "updated": "2019-09-18T19:50:44.706+0000",
                    "started": "2019-09-18T19:50:44.706+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "314610",
                    "issueId": "13257438"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257438/worklog/315122",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5429: ARROW-6605: [C++] Add recursion depth control to fs::Selector\nURL: https://github.com/apache/arrow/pull/5429#discussion_r326232969\n \n \n\n ##########\n File path: cpp/src/arrow/filesystem/test_util.cc\n ##########\n @@ -646,6 +647,114 @@ void GenericFileSystemTest::TestGetTargetStatsSelector(FileSystem* fs) {\n   ASSERT_RAISES(IOError, fs->GetTargetStats(s, &stats));\n }\n \n+using ::testing::ElementsAre;\n+\n+FileStats File(std::string path) {\n+  FileStats st;\n+  st.set_type(FileType::File);\n+  st.set_path(path);\n+  return st;\n+}\n+\n+FileStats Dir(std::string path) {\n+  FileStats st;\n+  st.set_type(FileType::Directory);\n+  st.set_path(path);\n+  return st;\n+}\n+\n+// Utility functions to help testing/debugging\n+std::ostream& operator<<(std::ostream& os, const FileStats& stats) {\n+  return os << \"FileStats(\" << stats.type() << \", \" << stats.path() << \")\";\n+}\n+\n+bool operator==(const FileStats& lhs, const FileStats& rhs) {\n \n Review comment:\n   We can probably put this in the public API, but it must compare size and mtime as well.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T15:18:42.157+0000",
                    "updated": "2019-09-19T15:18:42.157+0000",
                    "started": "2019-09-19T15:18:42.156+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "315122",
                    "issueId": "13257438"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257438/worklog/315123",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5429: ARROW-6605: [C++] Add recursion depth control to fs::Selector\nURL: https://github.com/apache/arrow/pull/5429#discussion_r326232359\n \n \n\n ##########\n File path: cpp/src/arrow/filesystem/test_util.cc\n ##########\n @@ -646,6 +647,114 @@ void GenericFileSystemTest::TestGetTargetStatsSelector(FileSystem* fs) {\n   ASSERT_RAISES(IOError, fs->GetTargetStats(s, &stats));\n }\n \n+using ::testing::ElementsAre;\n \n Review comment:\n   Put all utility stuff somewhere near the top of the file?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T15:18:42.227+0000",
                    "updated": "2019-09-19T15:18:42.227+0000",
                    "started": "2019-09-19T15:18:42.227+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "315123",
                    "issueId": "13257438"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257438/worklog/315124",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5429: ARROW-6605: [C++] Add recursion depth control to fs::Selector\nURL: https://github.com/apache/arrow/pull/5429#discussion_r326231874\n \n \n\n ##########\n File path: cpp/src/arrow/filesystem/test_util.cc\n ##########\n @@ -646,6 +647,114 @@ void GenericFileSystemTest::TestGetTargetStatsSelector(FileSystem* fs) {\n   ASSERT_RAISES(IOError, fs->GetTargetStats(s, &stats));\n }\n \n+using ::testing::ElementsAre;\n+\n+FileStats File(std::string path) {\n+  FileStats st;\n+  st.set_type(FileType::File);\n+  st.set_path(path);\n+  return st;\n+}\n+\n+FileStats Dir(std::string path) {\n+  FileStats st;\n+  st.set_type(FileType::Directory);\n+  st.set_path(path);\n+  return st;\n+}\n+\n+// Utility functions to help testing/debugging\n+std::ostream& operator<<(std::ostream& os, const FileStats& stats) {\n \n Review comment:\n   Why not put this in the public API?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T15:18:42.240+0000",
                    "updated": "2019-09-19T15:18:42.240+0000",
                    "started": "2019-09-19T15:18:42.240+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "315124",
                    "issueId": "13257438"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257438/worklog/315125",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5429: ARROW-6605: [C++] Add recursion depth control to fs::Selector\nURL: https://github.com/apache/arrow/pull/5429#discussion_r326233906\n \n \n\n ##########\n File path: cpp/src/arrow/filesystem/test_util.cc\n ##########\n @@ -646,6 +647,114 @@ void GenericFileSystemTest::TestGetTargetStatsSelector(FileSystem* fs) {\n   ASSERT_RAISES(IOError, fs->GetTargetStats(s, &stats));\n }\n \n+using ::testing::ElementsAre;\n+\n+FileStats File(std::string path) {\n+  FileStats st;\n+  st.set_type(FileType::File);\n+  st.set_path(path);\n+  return st;\n+}\n+\n+FileStats Dir(std::string path) {\n+  FileStats st;\n+  st.set_type(FileType::Directory);\n+  st.set_path(path);\n+  return st;\n+}\n+\n+// Utility functions to help testing/debugging\n+std::ostream& operator<<(std::ostream& os, const FileStats& stats) {\n+  return os << \"FileStats(\" << stats.type() << \", \" << stats.path() << \")\";\n+}\n+\n+bool operator==(const FileStats& lhs, const FileStats& rhs) {\n+  return lhs.type() == rhs.type() && lhs.path() == rhs.path();\n+}\n+\n+void GetSortedStats(FileSystem* fs, Selector s, std::vector<FileStats>& stats) {\n+  ASSERT_OK(fs->GetTargetStats(s, &stats));\n+  SortStats(&stats);\n+}\n+\n+void GenericFileSystemTest::TestGetTargetStatsSelectorWithRecursion(FileSystem* fs) {\n+  ASSERT_OK(fs->CreateDir(\"01/02/03/04\"));\n+  ASSERT_OK(fs->CreateDir(\"AA\"));\n+  CreateFile(fs, \"00.file\", \"00\");\n+  CreateFile(fs, \"01/01.file\", \"01\");\n+  CreateFile(fs, \"AA/AA.file\", \"aa\");\n+  CreateFile(fs, \"01/02/02.file\", \"02\");\n+  CreateFile(fs, \"01/02/03/03.file\", \"03\");\n+  CreateFile(fs, \"01/02/03/04/04.file\", \"04\");\n+\n+  std::vector<FileStats> stats;\n+  Selector s;\n+\n+  s.base_dir = \"\";\n+  s.recursive = false;\n+\n+  ASSERT_OK(fs->GetTargetStats(s, &stats));\n+  SortStats(&stats);\n+  EXPECT_THAT(stats, ElementsAre(File(\"00.file\"), Dir(\"01\"), Dir(\"AA\")));\n+\n+  // recursive should prevail on max_recursion\n+  s.max_recursion = 9000;\n+  GetSortedStats(fs, s, stats);\n+  EXPECT_THAT(stats, ElementsAre(File(\"00.file\"), Dir(\"01\"), Dir(\"AA\")));\n+\n+  // recursive but no traversal\n+  s.recursive = true;\n+  s.max_recursion = 0;\n+  GetSortedStats(fs, s, stats);\n+  EXPECT_THAT(stats, ElementsAre(File(\"00.file\"), Dir(\"01\"), Dir(\"AA\")));\n+\n+  s.recursive = true;\n+  s.max_recursion = 1;\n+  GetSortedStats(fs, s, stats);\n+  EXPECT_THAT(stats, ElementsAre(File(\"00.file\"), Dir(\"01\"), File(\"01/01.file\"),\n+                                 Dir(\"01/02\"), Dir(\"AA\"), File(\"AA/AA.file\")));\n+\n+  s.recursive = true;\n+  s.max_recursion = 2;\n+  GetSortedStats(fs, s, stats);\n+  EXPECT_THAT(stats, ElementsAre(File(\"00.file\"), Dir(\"01\"), File(\"01/01.file\"),\n+                                 Dir(\"01/02\"), File(\"01/02/02.file\"), Dir(\"01/02/03\"),\n+                                 Dir(\"AA\"), File(\"AA/AA.file\")));\n+\n+  s.base_dir = \"AA\";\n \n Review comment:\n   Perhaps cut down a bit on the number of similar tests here? For something like S3 the roundtrips are a bit slow.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T15:18:42.489+0000",
                    "updated": "2019-09-19T15:18:42.489+0000",
                    "started": "2019-09-19T15:18:42.489+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "315125",
                    "issueId": "13257438"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257438/worklog/315246",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5429: ARROW-6605: [C++] Add recursion depth control to fs::Selector\nURL: https://github.com/apache/arrow/pull/5429#discussion_r326338109\n \n \n\n ##########\n File path: cpp/src/arrow/filesystem/test_util.cc\n ##########\n @@ -646,6 +647,114 @@ void GenericFileSystemTest::TestGetTargetStatsSelector(FileSystem* fs) {\n   ASSERT_RAISES(IOError, fs->GetTargetStats(s, &stats));\n }\n \n+using ::testing::ElementsAre;\n+\n+FileStats File(std::string path) {\n+  FileStats st;\n+  st.set_type(FileType::File);\n+  st.set_path(path);\n+  return st;\n+}\n+\n+FileStats Dir(std::string path) {\n+  FileStats st;\n+  st.set_type(FileType::Directory);\n+  st.set_path(path);\n+  return st;\n+}\n+\n+// Utility functions to help testing/debugging\n+std::ostream& operator<<(std::ostream& os, const FileStats& stats) {\n+  return os << \"FileStats(\" << stats.type() << \", \" << stats.path() << \")\";\n+}\n+\n+bool operator==(const FileStats& lhs, const FileStats& rhs) {\n+  return lhs.type() == rhs.type() && lhs.path() == rhs.path();\n+}\n+\n+void GetSortedStats(FileSystem* fs, Selector s, std::vector<FileStats>& stats) {\n+  ASSERT_OK(fs->GetTargetStats(s, &stats));\n+  SortStats(&stats);\n+}\n+\n+void GenericFileSystemTest::TestGetTargetStatsSelectorWithRecursion(FileSystem* fs) {\n+  ASSERT_OK(fs->CreateDir(\"01/02/03/04\"));\n+  ASSERT_OK(fs->CreateDir(\"AA\"));\n+  CreateFile(fs, \"00.file\", \"00\");\n+  CreateFile(fs, \"01/01.file\", \"01\");\n+  CreateFile(fs, \"AA/AA.file\", \"aa\");\n+  CreateFile(fs, \"01/02/02.file\", \"02\");\n+  CreateFile(fs, \"01/02/03/03.file\", \"03\");\n+  CreateFile(fs, \"01/02/03/04/04.file\", \"04\");\n+\n+  std::vector<FileStats> stats;\n+  Selector s;\n+\n+  s.base_dir = \"\";\n+  s.recursive = false;\n+\n+  ASSERT_OK(fs->GetTargetStats(s, &stats));\n+  SortStats(&stats);\n+  EXPECT_THAT(stats, ElementsAre(File(\"00.file\"), Dir(\"01\"), Dir(\"AA\")));\n+\n+  // recursive should prevail on max_recursion\n+  s.max_recursion = 9000;\n+  GetSortedStats(fs, s, stats);\n+  EXPECT_THAT(stats, ElementsAre(File(\"00.file\"), Dir(\"01\"), Dir(\"AA\")));\n+\n+  // recursive but no traversal\n+  s.recursive = true;\n+  s.max_recursion = 0;\n+  GetSortedStats(fs, s, stats);\n+  EXPECT_THAT(stats, ElementsAre(File(\"00.file\"), Dir(\"01\"), Dir(\"AA\")));\n+\n+  s.recursive = true;\n+  s.max_recursion = 1;\n+  GetSortedStats(fs, s, stats);\n+  EXPECT_THAT(stats, ElementsAre(File(\"00.file\"), Dir(\"01\"), File(\"01/01.file\"),\n+                                 Dir(\"01/02\"), Dir(\"AA\"), File(\"AA/AA.file\")));\n+\n+  s.recursive = true;\n+  s.max_recursion = 2;\n+  GetSortedStats(fs, s, stats);\n+  EXPECT_THAT(stats, ElementsAre(File(\"00.file\"), Dir(\"01\"), File(\"01/01.file\"),\n+                                 Dir(\"01/02\"), File(\"01/02/02.file\"), Dir(\"01/02/03\"),\n+                                 Dir(\"AA\"), File(\"AA/AA.file\")));\n+\n+  s.base_dir = \"AA\";\n \n Review comment:\n   I think it's better to keep the tests and disable some for s3, if possible\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T19:08:04.429+0000",
                    "updated": "2019-09-19T19:08:04.429+0000",
                    "started": "2019-09-19T19:08:04.429+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "315246",
                    "issueId": "13257438"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257438/worklog/315678",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5429: ARROW-6605: [C++][Filesystem] Add recursion depth control to fs::Selector\nURL: https://github.com/apache/arrow/pull/5429#discussion_r326636980\n \n \n\n ##########\n File path: cpp/src/arrow/filesystem/test_util.cc\n ##########\n @@ -646,6 +647,114 @@ void GenericFileSystemTest::TestGetTargetStatsSelector(FileSystem* fs) {\n   ASSERT_RAISES(IOError, fs->GetTargetStats(s, &stats));\n }\n \n+using ::testing::ElementsAre;\n+\n+FileStats File(std::string path) {\n+  FileStats st;\n+  st.set_type(FileType::File);\n+  st.set_path(path);\n+  return st;\n+}\n+\n+FileStats Dir(std::string path) {\n+  FileStats st;\n+  st.set_type(FileType::Directory);\n+  st.set_path(path);\n+  return st;\n+}\n+\n+// Utility functions to help testing/debugging\n+std::ostream& operator<<(std::ostream& os, const FileStats& stats) {\n+  return os << \"FileStats(\" << stats.type() << \", \" << stats.path() << \")\";\n+}\n+\n+bool operator==(const FileStats& lhs, const FileStats& rhs) {\n+  return lhs.type() == rhs.type() && lhs.path() == rhs.path();\n+}\n+\n+void GetSortedStats(FileSystem* fs, Selector s, std::vector<FileStats>& stats) {\n+  ASSERT_OK(fs->GetTargetStats(s, &stats));\n+  SortStats(&stats);\n+}\n+\n+void GenericFileSystemTest::TestGetTargetStatsSelectorWithRecursion(FileSystem* fs) {\n+  ASSERT_OK(fs->CreateDir(\"01/02/03/04\"));\n+  ASSERT_OK(fs->CreateDir(\"AA\"));\n+  CreateFile(fs, \"00.file\", \"00\");\n+  CreateFile(fs, \"01/01.file\", \"01\");\n+  CreateFile(fs, \"AA/AA.file\", \"aa\");\n+  CreateFile(fs, \"01/02/02.file\", \"02\");\n+  CreateFile(fs, \"01/02/03/03.file\", \"03\");\n+  CreateFile(fs, \"01/02/03/04/04.file\", \"04\");\n+\n+  std::vector<FileStats> stats;\n+  Selector s;\n+\n+  s.base_dir = \"\";\n+  s.recursive = false;\n+\n+  ASSERT_OK(fs->GetTargetStats(s, &stats));\n+  SortStats(&stats);\n+  EXPECT_THAT(stats, ElementsAre(File(\"00.file\"), Dir(\"01\"), Dir(\"AA\")));\n+\n+  // recursive should prevail on max_recursion\n+  s.max_recursion = 9000;\n+  GetSortedStats(fs, s, stats);\n+  EXPECT_THAT(stats, ElementsAre(File(\"00.file\"), Dir(\"01\"), Dir(\"AA\")));\n+\n+  // recursive but no traversal\n+  s.recursive = true;\n+  s.max_recursion = 0;\n+  GetSortedStats(fs, s, stats);\n+  EXPECT_THAT(stats, ElementsAre(File(\"00.file\"), Dir(\"01\"), Dir(\"AA\")));\n+\n+  s.recursive = true;\n+  s.max_recursion = 1;\n+  GetSortedStats(fs, s, stats);\n+  EXPECT_THAT(stats, ElementsAre(File(\"00.file\"), Dir(\"01\"), File(\"01/01.file\"),\n+                                 Dir(\"01/02\"), Dir(\"AA\"), File(\"AA/AA.file\")));\n+\n+  s.recursive = true;\n+  s.max_recursion = 2;\n+  GetSortedStats(fs, s, stats);\n+  EXPECT_THAT(stats, ElementsAre(File(\"00.file\"), Dir(\"01\"), File(\"01/01.file\"),\n+                                 Dir(\"01/02\"), File(\"01/02/02.file\"), Dir(\"01/02/03\"),\n+                                 Dir(\"AA\"), File(\"AA/AA.file\")));\n+\n+  s.base_dir = \"AA\";\n \n Review comment:\n   I removed 2 redundant checks\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-20T13:49:34.398+0000",
                    "updated": "2019-09-20T13:49:34.398+0000",
                    "started": "2019-09-20T13:49:34.398+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "315678",
                    "issueId": "13257438"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257438/worklog/315730",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5429: ARROW-6605: [C++][Filesystem] Add recursion depth control to fs::Selector\nURL: https://github.com/apache/arrow/pull/5429#issuecomment-533592283\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5429?src=pr&el=h1) Report\n   > Merging [#5429](https://codecov.io/gh/apache/arrow/pull/5429?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/f19ee70888bd56d78a3bb11afa549d800656bc75?src=pr&el=desc) will **increase** coverage by `0.56%`.\n   > The diff coverage is `100%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5429/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5429?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #5429      +/-   ##\n   ==========================================\n   + Coverage   88.62%   89.18%   +0.56%     \n   ==========================================\n     Files         958      766     -192     \n     Lines      127400   111998   -15402     \n     Branches     1495        0    -1495     \n   ==========================================\n   - Hits       112912    99890   -13022     \n   + Misses      14123    12108    -2015     \n   + Partials      365        0     -365\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5429?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/filesystem/test\\_util.h](https://codecov.io/gh/apache/arrow/pull/5429/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9maWxlc3lzdGVtL3Rlc3RfdXRpbC5o) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/filesystem/s3fs.cc](https://codecov.io/gh/apache/arrow/pull/5429/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9maWxlc3lzdGVtL3MzZnMuY2M=) | `88.67% <100%> (+0.01%)` | :arrow_up: |\n   | [cpp/src/arrow/filesystem/mockfs.cc](https://codecov.io/gh/apache/arrow/pull/5429/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9maWxlc3lzdGVtL21vY2tmcy5jYw==) | `94.64% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/filesystem/localfs.cc](https://codecov.io/gh/apache/arrow/pull/5429/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9maWxlc3lzdGVtL2xvY2FsZnMuY2M=) | `95.68% <100%> (+0.03%)` | :arrow_up: |\n   | [cpp/src/arrow/filesystem/filesystem.cc](https://codecov.io/gh/apache/arrow/pull/5429/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9maWxlc3lzdGVtL2ZpbGVzeXN0ZW0uY2M=) | `85% <100%> (+4.49%)` | :arrow_up: |\n   | [cpp/src/arrow/filesystem/filesystem.h](https://codecov.io/gh/apache/arrow/pull/5429/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9maWxlc3lzdGVtL2ZpbGVzeXN0ZW0uaA==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/filesystem/test\\_util.cc](https://codecov.io/gh/apache/arrow/pull/5429/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9maWxlc3lzdGVtL3Rlc3RfdXRpbC5jYw==) | `99.48% <100%> (+0.06%)` | :arrow_up: |\n   | [cpp/src/arrow/filesystem/s3\\_internal.h](https://codecov.io/gh/apache/arrow/pull/5429/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9maWxlc3lzdGVtL3MzX2ludGVybmFsLmg=) | `90.74% <0%> (-3.71%)` | :arrow_down: |\n   | [cpp/src/arrow/csv/column\\_builder.cc](https://codecov.io/gh/apache/arrow/pull/5429/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvY29sdW1uX2J1aWxkZXIuY2M=) | `95.54% <0%> (-1.49%)` | :arrow_down: |\n   | [cpp/src/plasma/thirdparty/ae/ae.c](https://codecov.io/gh/apache/arrow/pull/5429/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9hZS9hZS5j) | `70.75% <0%> (-0.95%)` | :arrow_down: |\n   | ... and [203 more](https://codecov.io/gh/apache/arrow/pull/5429/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5429?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5429?src=pr&el=footer). Last update [f19ee70...08e8b48](https://codecov.io/gh/apache/arrow/pull/5429?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-20T15:07:40.928+0000",
                    "updated": "2019-09-20T15:07:40.928+0000",
                    "started": "2019-09-20T15:07:40.927+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "315730",
                    "issueId": "13257438"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257438/worklog/316634",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5429: ARROW-6605: [C++][Filesystem] Add recursion depth control to fs::Selector\nURL: https://github.com/apache/arrow/pull/5429\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-23T12:42:40.578+0000",
                    "updated": "2019-09-23T12:42:40.578+0000",
                    "started": "2019-09-23T12:42:40.578+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "316634",
                    "issueId": "13257438"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 4800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@30540be4[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@534e3ed4[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@392a9bba[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1bb0aad5[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7b5a47fe[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5f3d3df0[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@32278ae6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@2cdf7875[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@513bfa7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3377d048[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3d890c7a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6ac2c76e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 4800,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Sep 23 12:42:39 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-09-23T12:42:39.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6605/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2019-09-18T17:20:20.000+0000",
        "updated": "2019-09-23T12:42:40.000+0000",
        "timeoriginalestimate": null,
        "description": "This is similar to the recursive options, but also control the depth.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 4800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Add recursion depth control to fs::Selector",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257438/comment/16932695",
                    "id": "16932695",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Do you expect it to be necessary for the dataset work?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-09-18T17:28:50.878+0000",
                    "updated": "2019-09-18T17:28:50.878+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257438/comment/16935808",
                    "id": "16935808",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
                        "name": "fsaintjacques",
                        "key": "fsaintjacques",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
                        },
                        "displayName": "Francois Saint-Jacques",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 5429\n[https://github.com/apache/arrow/pull/5429]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
                        "name": "fsaintjacques",
                        "key": "fsaintjacques",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
                        },
                        "displayName": "Francois Saint-Jacques",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-09-23T12:42:39.926+0000",
                    "updated": "2019-09-23T12:42:39.926+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z06rtc:",
        "customfield_12314139": null
    }
}