{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13111560",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111560",
    "key": "ARROW-1719",
    "fields": {
        "parent": {
            "id": "13099860",
            "key": "ARROW-1463",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13099860",
            "fields": {
                "summary": "[JAVA] Restructure ValueVector hierarchy to minimize compile-time generated code",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                    "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                    "name": "Resolved",
                    "id": "5",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                    "id": "4",
                    "description": "An improvement or enhancement to an existing feature or task.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                    "name": "Improvement",
                    "subtask": false,
                    "avatarId": 21140
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=icexelloss",
            "name": "icexelloss",
            "key": "icexelloss",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Li Jin",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=icexelloss",
            "name": "icexelloss",
            "key": "icexelloss",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Li Jin",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=icexelloss",
            "name": "icexelloss",
            "key": "icexelloss",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Li Jin",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1719/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3414f73a[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2c2d502f[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2a4e6a09[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6c24eb47[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@79c72827[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4730c902[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1e77fdcf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@55c25395[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1504df1a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@54bd6c61[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@75857abc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@321cc162[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Sun Dec 03 21:43:13 UTC 2017",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2017-12-03T21:43:11.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1719/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2017-10-23T22:55:32.000+0000",
        "updated": "2019-06-03T12:45:23.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Remove accessor/mutator ",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111560/comment/16271370",
                    "id": "16271370",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss opened a new pull request #1374: ARROW-1719: [Java] Remove accessor and mutator interface\nURL: https://github.com/apache/arrow/pull/1374\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-29T19:11:34.787+0000",
                    "updated": "2017-11-29T19:11:34.787+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111560/comment/16271373",
                    "id": "16271373",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on issue #1374: ARROW-1719: [Java] Remove accessor and mutator interface\nURL: https://github.com/apache/arrow/pull/1374#issuecomment-347964820\n \n \n   cc @BryanCutler \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-29T19:12:27.442+0000",
                    "updated": "2017-11-29T19:12:27.442+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111560/comment/16271414",
                    "id": "16271414",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "BryanCutler commented on a change in pull request #1374: ARROW-1719: [Java] Remove accessor and mutator interface\nURL: https://github.com/apache/arrow/pull/1374#discussion_r153892561\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestVectorReAlloc.java\n ##########\n @@ -130,7 +130,7 @@ public void testMapType() {\n       assertEquals(512, vector.getValueCapacity());\n \n       try {\n-        vector.getAccessor().getObject(513);\n+        vector.getObject(513);\n \n Review comment:\n   Wow, this test should not have been passing...\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-29T19:35:33.618+0000",
                    "updated": "2017-11-29T19:35:33.618+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111560/comment/16271966",
                    "id": "16271966",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on issue #1374: ARROW-1719: [Java] Remove accessor and mutator interface\nURL: https://github.com/apache/arrow/pull/1374#issuecomment-348051643\n \n \n   cc @siddharthteotia.\r\n   \r\n   Can you also take a look please? Thanks!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-30T01:18:35.198+0000",
                    "updated": "2017-11-30T01:18:35.198+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111560/comment/16271967",
                    "id": "16271967",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on issue #1374: ARROW-1719: [Java] Remove accessor and mutator interface\nURL: https://github.com/apache/arrow/pull/1374#issuecomment-348051713\n \n \n   Thanks @BryanCutler for the review!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-30T01:19:00.150+0000",
                    "updated": "2017-11-30T01:19:00.150+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111560/comment/16275051",
                    "id": "16275051",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on issue #1374: ARROW-1719: [Java] Remove accessor and mutator interface\nURL: https://github.com/apache/arrow/pull/1374#issuecomment-348625566\n \n \n   +1\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-01T21:59:57.311+0000",
                    "updated": "2017-12-01T21:59:57.311+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111560/comment/16276110",
                    "id": "16276110",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1374\n[https://github.com/apache/arrow/pull/1374]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-12-03T21:43:11.130+0000",
                    "updated": "2017-12-03T21:43:11.130+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111560/comment/16276111",
                    "id": "16276111",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1374: ARROW-1719: [Java] Remove accessor and mutator interface\nURL: https://github.com/apache/arrow/pull/1374\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/java/vector/src/main/codegen/templates/ComplexWriters.java b/java/vector/src/main/codegen/templates/ComplexWriters.java\nindex 98672d54c..4a1545a17 100644\n--- a/java/vector/src/main/codegen/templates/ComplexWriters.java\n+++ b/java/vector/src/main/codegen/templates/ComplexWriters.java\n@@ -79,17 +79,17 @@ protected int idx() {\n \n   public void write(${minor.class?cap_first}Holder h) {\n     mutator.addSafe(idx(), h);\n-    vector.getMutator().setValueCount(idx()+1);\n+    vector.setValueCount(idx()+1);\n   }\n \n   public void write(${minor.class?cap_first}Holder h) {\n     mutator.addSafe(idx(), h);\n-    vector.getMutator().setValueCount(idx()+1);\n+    vector.setValueCount(idx()+1);\n   }\n \n   public void write${minor.class}(<#list fields as field>${field.type} ${field.name}<#if field_has_next>, </#if></#list>) {\n     mutator.addSafe(idx(), <#list fields as field>${field.name}<#if field_has_next>, </#if></#list>);\n-    vector.getMutator().setValueCount(idx()+1);\n+    vector.setValueCount(idx()+1);\n   }\n \n   public void setPosition(int idx) {\ndiff --git a/java/vector/src/main/codegen/templates/UnionVector.java b/java/vector/src/main/codegen/templates/UnionVector.java\nindex 501933f8f..60cd24dcc 100644\n--- a/java/vector/src/main/codegen/templates/UnionVector.java\n+++ b/java/vector/src/main/codegen/templates/UnionVector.java\n@@ -416,18 +416,6 @@ public void copyValueSafe(int from, int to) {\n     }\n   }\n \n-  @Override\n-  @Deprecated\n-  public Accessor getAccessor() {\n-    throw new UnsupportedOperationException(\"Accessor is not supported for reading from UNION\");\n-  }\n-\n-  @Override\n-  @Deprecated\n-  public Mutator getMutator() {\n-    throw new UnsupportedOperationException(\"Mutator is not supported for writing to UNION\");\n-  }\n-\n   @Override\n   public FieldReader getReader() {\n     if (reader == null) {\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/BaseDataValueVector.java b/java/vector/src/main/java/org/apache/arrow/vector/BaseDataValueVector.java\nindex 6d9eb1db0..80675135e 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/BaseDataValueVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/BaseDataValueVector.java\n@@ -99,7 +99,7 @@ public TransferPair getTransferPair(String ref, BufferAllocator allocator, CallB\n \n   @Override\n   public int getBufferSize() {\n-    if (getAccessor().getValueCount() == 0) {\n+    if (getValueCount() == 0) {\n       return 0;\n     }\n     return data.writerIndex();\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/BaseFixedWidthVector.java b/java/vector/src/main/java/org/apache/arrow/vector/BaseFixedWidthVector.java\nindex cc056904a..77026d4e5 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/BaseFixedWidthVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/BaseFixedWidthVector.java\n@@ -91,19 +91,6 @@ public BaseFixedWidthVector(final String name, final BufferAllocator allocator,\n    * the top class as of now is not a good idea.\n    */\n \n-\n-  @Override\n-  @Deprecated\n-  public Mutator getMutator() {\n-    throw new UnsupportedOperationException(\"Mutator is not supported for writing to vector\");\n-  }\n-\n-  @Override\n-  @Deprecated\n-  public Accessor getAccessor() {\n-    throw new UnsupportedOperationException(\"Accessor is not supported for reading from vector\");\n-  }\n-\n   /**\n    * Get the memory address of buffer that manages the validity\n    * (NULL or NON-NULL nature) of elements in the vector.\n@@ -711,6 +698,7 @@ private void splitAndTransferValidityBuffer(int startIndex, int length,\n    *\n    * @return the number of null elements.\n    */\n+  @Override\n   public int getNullCount() {\n     return BitVectorHelper.getNullCount(validityBuffer, valueCount);\n   }\n@@ -721,6 +709,7 @@ public int getNullCount() {\n    *\n    * @return valueCount for the vector\n    */\n+  @Override\n   public int getValueCount() {\n     return valueCount;\n   }\n@@ -730,6 +719,7 @@ public int getValueCount() {\n    *\n    * @param valueCount  value count to set\n    */\n+  @Override\n   public void setValueCount(int valueCount) {\n     this.valueCount = valueCount;\n     final int currentValueCapacity = getValueCapacity();\n@@ -789,6 +779,7 @@ public boolean isSafe(int index) {\n    * @param index  position of element\n    * @return true if element at given index is null, false otherwise\n    */\n+  @Override\n   public boolean isNull(int index) {\n     return (isSet(index) == 0);\n   }\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/BaseValueVector.java b/java/vector/src/main/java/org/apache/arrow/vector/BaseValueVector.java\nindex fc0ab3e59..6418ea4f8 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/BaseValueVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/BaseValueVector.java\n@@ -68,42 +68,6 @@ public TransferPair getTransferPair(BufferAllocator allocator) {\n     return getTransferPair(name, allocator);\n   }\n \n-  public abstract static class BaseAccessor implements ValueVector.Accessor {\n-    protected BaseAccessor() {\n-    }\n-\n-    @Override\n-    public boolean isNull(int index) {\n-      return false;\n-    }\n-\n-    @Override\n-    // override this in case your implementation is faster, see BitVector\n-    public int getNullCount() {\n-      int nullCount = 0;\n-      for (int i = 0; i < getValueCount(); i++) {\n-        if (isNull(i)) {\n-          nullCount++;\n-        }\n-      }\n-      return nullCount;\n-    }\n-  }\n-\n-  public abstract static class BaseMutator implements ValueVector.Mutator {\n-    protected BaseMutator() {\n-    }\n-\n-    @Override\n-    public void generateTestData(int values) {\n-    }\n-\n-    //TODO: consider making mutator stateless(if possible) on another issue.\n-    @Override\n-    public void reset() {\n-    }\n-  }\n-\n   @Override\n   public Iterator<ValueVector> iterator() {\n     return Collections.emptyIterator();\n@@ -136,33 +100,6 @@ protected ArrowBuf releaseBuffer(ArrowBuf buffer) {\n     return buffer;\n   }\n \n-  @Override\n-  public int getValueCount() {\n-    return getAccessor().getValueCount();\n-  }\n-\n-  @Override\n-  public void setValueCount(int valueCount) {\n-    getMutator().setValueCount(valueCount);\n-  }\n-\n-  @Override\n-\n-  public Object getObject(int index) {\n-    return getAccessor().getObject(index);\n-  }\n-\n-  @Override\n-\n-  public int getNullCount() {\n-    return getAccessor().getNullCount();\n-  }\n-\n-  @Override\n-  public boolean isNull(int index) {\n-    return getAccessor().isNull(index);\n-  }\n-\n   /* number of bytes for the validity buffer for the given valueCount */\n   protected static int getValidityBufferSizeFromCount(final int valueCount) {\n     return (int) Math.ceil(valueCount / 8.0);\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java b/java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\nindex b515586bc..98820a236 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n@@ -90,18 +90,6 @@ public BaseVariableWidthVector(final String name, final BufferAllocator allocato\n    * the top class as of now is not a good idea.\n    */\n \n-  @Override\n-  @Deprecated\n-  public VariableWidthMutator getMutator() {\n-    throw new UnsupportedOperationException(\"Mutator is not supported for writing into vector\");\n-  }\n-\n-  @Override\n-  @Deprecated\n-  public VariableWidthAccessor getAccessor() {\n-    throw new UnsupportedOperationException(\"Accessor is not supported for reading from vector\");\n-  }\n-\n   /**\n    * Get buffer that manages the validity (NULL or NON-NULL nature) of\n    * elements in the vector. Consider it as a buffer for internal bit vector\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/ValueVector.java b/java/vector/src/main/java/org/apache/arrow/vector/ValueVector.java\nindex 0d3acf164..e77c1b127 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/ValueVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/ValueVector.java\n@@ -135,18 +135,6 @@\n    */\n   TransferPair makeTransferPair(ValueVector target);\n \n-  /**\n-   * @return an {@link org.apache.arrow.vector.ValueVector.Accessor accessor} that is used to read from this vector\n-   * instance.\n-   */\n-  Accessor getAccessor();\n-\n-  /**\n-   * @return an {@link org.apache.arrow.vector.ValueVector.Mutator mutator} that is used to write to this vector\n-   * instance.\n-   */\n-  Mutator getMutator();\n-\n   /**\n    * @return a {@link org.apache.arrow.vector.complex.reader.FieldReader field reader} that supports reading values\n    * from this vector.\n@@ -160,7 +148,7 @@\n \n   /**\n    * Returns the number of bytes that is used by this vector if it holds the given number\n-   * of values. The result will be the same as if Mutator.setValueCount() were called, followed\n+   * of values. The result will be the same as if setValueCount() were called, followed\n    * by calling getBufferSize(), but without any of the closing side-effects that setValueCount()\n    * implies wrt finishing off the population of a vector. Some operations might wish to use\n    * this to determine how much memory has been used by a vector so far, even though it is\n@@ -182,91 +170,56 @@\n    */\n   ArrowBuf[] getBuffers(boolean clear);\n \n-  /**\n-   * An abstraction that is used to read from this vector instance.\n-   */\n-  interface Accessor {\n-    /**\n-     * Get the Java Object representation of the element at the specified position. Useful for testing.\n-     *\n-     * @param index Index of the value to get\n-     * @return the friendly java type\n-     */\n-    Object getObject(int index);\n-\n-    /**\n-     * @return the number of values that is stored in this vector.\n-     */\n-    int getValueCount();\n-\n-    /**\n-     * @param index the index to check for nullity\n-     * @return true if the value at the given index is null, false otherwise.\n-     */\n-    boolean isNull(int index);\n-\n-    /**\n-     * @return the number of null values\n-     */\n-    int getNullCount();\n-  }\n-\n-  /**\n-   * An abstraction that is used to write into this vector instance.\n-   */\n-  interface Mutator {\n-    /**\n-     * Sets the number of values that is stored in this vector to the given value count.\n-     *\n-     * @param valueCount value count to set.\n-     */\n-    void setValueCount(int valueCount);\n-\n-    /**\n-     * Resets the mutator to pristine state.\n-     */\n-    void reset();\n-\n-    /**\n-     * @param values the number of values to generate\n-     * @deprecated this has nothing to do with value vector abstraction and should be removed.\n-     */\n-    @Deprecated\n-    void generateTestData(int values);\n-  }\n-\n   /**\n    * Gets the underlying buffer associated with validity vector\n    *\n    * @return buffer\n    */\n-  public ArrowBuf getValidityBuffer();\n+  ArrowBuf getValidityBuffer();\n \n   /**\n    * Gets the underlying buffer associated with data vector\n    *\n    * @return buffer\n    */\n-  public ArrowBuf getDataBuffer();\n+  ArrowBuf getDataBuffer();\n \n   /**\n    * Gets the underlying buffer associated with offset vector\n    *\n    * @return buffer\n    */\n-  public ArrowBuf getOffsetBuffer();\n+  ArrowBuf getOffsetBuffer();\n \n-  /* temporarily add these methods here until we remove other vectors\n-   * (non-nullable) which are under ValueVector hierarchy and still\n-   * use the mutator/accessor interfaces.\n+  /**\n+   * Gets the number of values\n+   * @return\n    */\n-  public int getValueCount();\n+  int getValueCount();\n \n-  public void setValueCount(int valueCount);\n+  /**\n+   * Set number of values in the vector\n+   * @return\n+   */\n+  void setValueCount(int valueCount);\n \n-  public Object getObject(int index);\n+  /**\n+   * Get friendly type object from the vector\n+   * @param index\n+   * @return\n+   */\n+  Object getObject(int index);\n \n-  public int getNullCount();\n+  /**\n+   * Returns number of null elements in the vector\n+   * @return\n+   */\n+  int getNullCount();\n \n-  public boolean isNull(int index);\n+  /**\n+   * Check whether an element in the vector is null\n+   * @param index\n+   * @return\n+   */\n+  boolean isNull(int index);\n }\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/VariableWidthVector.java b/java/vector/src/main/java/org/apache/arrow/vector/VariableWidthVector.java\nindex 04c00b7c8..593d4dcea 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/VariableWidthVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/VariableWidthVector.java\n@@ -35,17 +35,5 @@\n    */\n   int getByteCapacity();\n \n-  VariableWidthMutator getMutator();\n-\n-  VariableWidthAccessor getAccessor();\n-\n-  interface VariableWidthAccessor extends Accessor {\n-    int getValueLength(int index);\n-  }\n-\n   int getCurrentSizeInBytes();\n-\n-  interface VariableWidthMutator extends Mutator {\n-    void setValueLengthSafe(int index, int length);\n-  }\n }\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/VectorSchemaRoot.java b/java/vector/src/main/java/org/apache/arrow/vector/VectorSchemaRoot.java\nindex 196393fb9..3fd33d66d 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/VectorSchemaRoot.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/VectorSchemaRoot.java\n@@ -140,7 +140,7 @@ public String contentToTSVString() {\n     for (int i = 0; i < rowCount; i++) {\n       row.clear();\n       for (FieldVector v : fieldVectors) {\n-        row.add(v.getAccessor().getObject(i));\n+        row.add(v.getObject(i));\n       }\n       printRow(sb, row);\n     }\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/ZeroVector.java b/java/vector/src/main/java/org/apache/arrow/vector/ZeroVector.java\nindex 0ab3a7b68..962a1c947 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/ZeroVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/ZeroVector.java\n@@ -60,41 +60,6 @@ public void copyValueSafe(int from, int to) {\n     }\n   };\n \n-  private final Accessor defaultAccessor = new Accessor() {\n-    @Override\n-    public Object getObject(int index) {\n-      return null;\n-    }\n-\n-    @Override\n-    public int getValueCount() {\n-      return 0;\n-    }\n-\n-    @Override\n-    public boolean isNull(int index) {\n-      return true;\n-    }\n-\n-    @Override\n-    public int getNullCount() {\n-      return 0;\n-    }\n-  };\n-\n-  private final Mutator defaultMutator = new Mutator() {\n-    @Override\n-    public void setValueCount(int valueCount) {\n-    }\n-\n-    @Override\n-    public void reset() {\n-    }\n-\n-    @Override\n-    public void generateTestData(int values) {\n-    }\n-  };\n \n   public ZeroVector() {\n   }\n@@ -186,16 +151,6 @@ public TransferPair makeTransferPair(ValueVector target) {\n     return defaultPair;\n   }\n \n-  @Override\n-  public Accessor getAccessor() {\n-    return defaultAccessor;\n-  }\n-\n-  @Override\n-  public Mutator getMutator() {\n-    return defaultMutator;\n-  }\n-\n   @Override\n   public FieldReader getReader() {\n     return NullReader.INSTANCE;\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/complex/BaseRepeatedValueVector.java b/java/vector/src/main/java/org/apache/arrow/vector/complex/BaseRepeatedValueVector.java\nindex 4648d0789..a9221f2f6 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/complex/BaseRepeatedValueVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/complex/BaseRepeatedValueVector.java\n@@ -277,16 +277,4 @@ public void setValueCount(int valueCount) {\n             offsetBuffer.getInt(valueCount * OFFSET_WIDTH);\n     vector.setValueCount(childValueCount);\n   }\n-\n-  @Override\n-  @Deprecated\n-  public RepeatedAccessor getAccessor() {\n-    throw new UnsupportedOperationException(\"Accessor is not supported for reading from LIST.\");\n-  }\n-\n-  @Override\n-  @Deprecated\n-  public RepeatedMutator getMutator() {\n-    throw new UnsupportedOperationException(\"Mutator is not supported for writing to LIST\");\n-  }\n }\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/complex/FixedSizeListVector.java b/java/vector/src/main/java/org/apache/arrow/vector/complex/FixedSizeListVector.java\nindex 774a10dbf..93a8127cf 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/complex/FixedSizeListVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/complex/FixedSizeListVector.java\n@@ -150,18 +150,6 @@ private void setReaderAndWriterIndex() {\n     throw new UnsupportedOperationException(\"There are no inner vectors. Use getFieldBuffers\");\n   }\n \n-  @Override\n-  @Deprecated\n-  public Accessor getAccessor() {\n-    throw new UnsupportedOperationException(\"Accessor is not supported for reading from vector\");\n-  }\n-\n-  @Override\n-  @Deprecated\n-  public Mutator getMutator() {\n-    throw new UnsupportedOperationException(\"Mutator is not supported for writing to vector\");\n-  }\n-\n   @Override\n   public UnionFixedSizeListReader getReader() {\n     return reader;\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/complex/MapVector.java b/java/vector/src/main/java/org/apache/arrow/vector/complex/MapVector.java\nindex 075ae83ea..72cc29f30 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/complex/MapVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/complex/MapVector.java\n@@ -497,16 +497,4 @@ public void setValueCount(int valueCount) {\n   public void reset() {\n     valueCount = 0;\n   }\n-\n-  @Override\n-  @Deprecated\n-  public Accessor getAccessor() {\n-    throw new UnsupportedOperationException(\"Accessor is not supported for reading from Nullable MAP\");\n-  }\n-\n-  @Override\n-  @Deprecated\n-  public Mutator getMutator() {\n-    throw new UnsupportedOperationException(\"Mutator is not supported for writing to Nullable MAP\");\n-  }\n }\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/complex/NonNullableMapVector.java b/java/vector/src/main/java/org/apache/arrow/vector/complex/NonNullableMapVector.java\nindex cc3ac4148..1cd7b70d7 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/complex/NonNullableMapVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/complex/NonNullableMapVector.java\n@@ -252,16 +252,6 @@ public int compare(@Nullable ValueVector left, @Nullable ValueVector right) {\n     return natural.min(getChildren()).getValueCapacity();\n   }\n \n-  @Override\n-  public Accessor getAccessor() {\n-    throw new UnsupportedOperationException(\"accessor is not needed for MAP\");\n-  }\n-\n-  @Override\n-  public Mutator getMutator() {\n-    throw new UnsupportedOperationException(\"mutator is not needed for MAP\");\n-  }\n-\n   @Override\n   public Object getObject(int index) {\n     Map<String, Object> vv = new JsonStringHashMap<>();\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/complex/RepeatedValueVector.java b/java/vector/src/main/java/org/apache/arrow/vector/complex/RepeatedValueVector.java\nindex 91147c663..364011729 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/complex/RepeatedValueVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/complex/RepeatedValueVector.java\n@@ -41,43 +41,4 @@\n    * @return the underlying data vector or null if none exists.\n    */\n   ValueVector getDataVector();\n-\n-  @Override\n-  RepeatedAccessor getAccessor();\n-\n-  @Override\n-  RepeatedMutator getMutator();\n-\n-  interface RepeatedAccessor extends ValueVector.Accessor {\n-    /**\n-     * The result includes empty, null valued cells.\n-     *\n-     * @return total number of cells that vector contains.\n-     */\n-    int getInnerValueCount();\n-\n-\n-    /**\n-     * @param index the index of the value for which we want the size\n-     * @return number of cells that the value at the given index contains.\n-     */\n-    int getInnerValueCountAt(int index);\n-\n-    /**\n-     * @param index value index\n-     * @return true if the value at the given index is empty, false otherwise.\n-     */\n-    boolean isEmpty(int index);\n-  }\n-\n-  interface RepeatedMutator extends ValueVector.Mutator {\n-\n-    /**\n-     * Starts a new value that is a container of cells.\n-     *\n-     * @param index index of new value to start\n-     * @return index into the child vector\n-     */\n-    int startNewValue(int index);\n-  }\n }\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/complex/impl/UnionFixedSizeListReader.java b/java/vector/src/main/java/org/apache/arrow/vector/complex/impl/UnionFixedSizeListReader.java\nindex 4ad2f6f5f..56ae379dc 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/complex/impl/UnionFixedSizeListReader.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/complex/impl/UnionFixedSizeListReader.java\n@@ -80,7 +80,7 @@ public void read(int index, UnionHolder holder) {\n       }\n     }\n     holder.reader = data.getReader();\n-    holder.isSet = vector.getAccessor().isNull(idx()) ? 0 : 1;\n+    holder.isSet = vector.isNull(idx()) ? 0 : 1;\n   }\n \n   @Override\ndiff --git a/java/vector/src/test/java/org/apache/arrow/vector/TestVectorReAlloc.java b/java/vector/src/test/java/org/apache/arrow/vector/TestVectorReAlloc.java\nindex c0df4881f..1b13c2ed9 100644\n--- a/java/vector/src/test/java/org/apache/arrow/vector/TestVectorReAlloc.java\n+++ b/java/vector/src/test/java/org/apache/arrow/vector/TestVectorReAlloc.java\n@@ -130,7 +130,7 @@ public void testMapType() {\n       assertEquals(512, vector.getValueCapacity());\n \n       try {\n-        vector.getAccessor().getObject(513);\n+        vector.getObject(513);\n         Assert.fail(\"Expected out of bounds exception\");\n       } catch (Exception e) {\n         // ok\ndiff --git a/java/vector/src/test/java/org/apache/arrow/vector/ipc/BaseFileTest.java b/java/vector/src/test/java/org/apache/arrow/vector/ipc/BaseFileTest.java\nindex 3514acaa2..f52c697f6 100644\n--- a/java/vector/src/test/java/org/apache/arrow/vector/ipc/BaseFileTest.java\n+++ b/java/vector/src/test/java/org/apache/arrow/vector/ipc/BaseFileTest.java\n@@ -34,11 +34,9 @@\n import org.apache.arrow.vector.TimeMilliVector;\n import org.apache.arrow.vector.VarBinaryVector;\n import org.apache.arrow.vector.VarCharVector;\n-import org.apache.arrow.vector.ValueVector.Accessor;\n import org.apache.arrow.vector.VectorSchemaRoot;\n import org.apache.arrow.vector.complex.ListVector;\n import org.apache.arrow.vector.complex.MapVector;\n-import org.apache.arrow.vector.complex.MapVector;\n import org.apache.arrow.vector.complex.impl.ComplexWriterImpl;\n import org.apache.arrow.vector.complex.impl.UnionListWriter;\n import org.apache.arrow.vector.complex.reader.FieldReader;\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-03T21:43:13.312+0000",
                    "updated": "2017-12-03T21:43:13.312+0000"
                }
            ],
            "maxResults": 8,
            "total": 8,
            "startAt": 0
        },
        "customfield_12311820": "0|i3lm7j:",
        "customfield_12314139": null
    }
}