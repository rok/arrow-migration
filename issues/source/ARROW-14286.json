{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13405976",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405976",
    "key": "ARROW-14286",
    "fields": {
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "parquet",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12624459",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12624459",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13404503",
                    "key": "ARROW-14196",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404503",
                    "fields": {
                        "summary": "[C++][Parquet] Default to compliant nested types in Parquet writer",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/3",
                            "description": "This issue is being actively worked on at the moment by the assignee.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/inprogress.png",
                            "name": "In Progress",
                            "id": "3",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/4",
                                "id": 4,
                                "key": "indeterminate",
                                "colorName": "yellow",
                                "name": "In Progress"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "name": "Open",
            "id": "1",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                "id": 2,
                "key": "new",
                "colorName": "blue-gray",
                "name": "To Do"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "aggregateprogress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14286/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 11,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405976/worklog/664063",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #11385:\nURL: https://github.com/apache/arrow/pull/11385#issuecomment-941013899\n\n\n   This is a bit hacky solution; not sure it is robust enough to be accepted (or the best approach). \r\n   Currently, the mapping from string column name to parquet field index is done on the Python side. This is based on the FileMetaData.SchemaDescriptor, iterating through the columns and getting the dotted path of each column. The problem is that at this point, there is no easy way to know (AFAIK) if the column (ColumnDescriptor) is for a list type or not, to be able to also construct the shorter version of the dotted path. \r\n   \r\n   So therefore I did this on the C++ level, but by just by exposing a \"shorter\" dotted path in addition to the default one that excludes the list inner elements. \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-12T13:28:44.322+0000",
                    "updated": "2021-10-12T13:28:44.322+0000",
                    "started": "2021-10-12T13:28:44.322+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "664063",
                    "issueId": "13405976"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405976/worklog/664064",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11385:\nURL: https://github.com/apache/arrow/pull/11385#issuecomment-941014085\n\n\n   https://issues.apache.org/jira/browse/ARROW-14286\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-12T13:28:48.120+0000",
                    "updated": "2021-10-12T13:28:48.120+0000",
                    "started": "2021-10-12T13:28:48.120+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "664064",
                    "issueId": "13405976"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405976/worklog/664067",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #11385:\nURL: https://github.com/apache/arrow/pull/11385#discussion_r727138162\n\n\n\n##########\nFile path: python/pyarrow/tests/parquet/test_parquet_file.py\n##########\n@@ -274,3 +274,75 @@ def test_pre_buffer(pre_buffer):\n     buf.seek(0)\n     pf = pq.ParquetFile(buf, pre_buffer=pre_buffer)\n     assert pf.read().num_rows == N\n+\n+\n+def test_column_selection(tempdir):\n+    # create a table with nested types\n+    inner = pa.field('inner', pa.int64())\n+    middle = pa.field('middle', pa.struct([inner]))\n+    fields = [\n+        pa.field('basic', pa.int32()),\n+        pa.field(\n+            'list', pa.list_(pa.field('item', pa.int32()))\n+        ),\n+        pa.field(\n+            'struct', pa.struct([middle, pa.field('inner2', pa.int64())])\n+        ),\n+        pa.field(\n+            'list-struct', pa.list_(pa.field(\n+                'item', pa.struct([\n+                    pa.field('inner1', pa.int64()),\n+                    pa.field('inner2', pa.int64())\n+                ])\n+            ))\n+        ),\n+        pa.field('basic2', pa.int64()),\n+    ]\n+    arrs = [\n+        [0], [[1, 2]], [{\"middle\": {\"inner\": 3}, \"inner2\": 4}],\n+        [[{\"inner1\": 5, \"inner2\": 6}, {\"inner1\": 7, \"inner2\": 8}]], [9]]\n+    table = pa.table(arrs, schema=pa.schema(fields))\n+\n+    path = str(tempdir / 'test.parquet')\n+    pq.write_table(table, path)\n+    pf = pq.ParquetFile(path)\n+\n+    # default selecting all columns\n+    result1 = pf.read()\n+    assert result1.equals(table)\n+\n+    # selecting with columns names\n+    result2 = pf.read(columns=[\"basic\", \"basic2\"])\n+    assert result2.equals(table.select([\"basic\", \"basic2\"]))\n+\n+    result3 = pf.read(columns=[\"list\", \"struct\", \"basic2\"])\n+    assert result3.equals(table.select([\"list\", \"struct\", \"basic2\"]))\n+\n+    # using dotted paths\n+    result4 = pf.read(columns=[\"struct.middle.inner\"])\n+    expected4 = pa.table({\"struct\": [{\"middle\": {\"inner\": 3}}]})\n+    assert result4.equals(expected4)\n+\n+    result5 = pf.read(columns=[\"struct.inner2\"])\n+    expected5 = pa.table({\"struct\": [{\"inner2\": 4}]})\n+    assert result5.equals(expected5)\n+\n+    result6 = pf.read(\n+        columns=[\"list\", \"struct.middle.inner\", \"struct.inner2\"]\n+    )\n+    assert result6.equals(table.select([\"list\", \"struct\"]))\n+\n+    # dotted paths for lists with or without list.item\n+\n+    # result7 = pf.read(columns=[\"list-struct.list.item.inner1\"])\n+    # expected7 = pa.table({\"list-struct\": [[{\"inner1\": 5}, {\"inner1\": 7}]]})\n+    # assert result7.equals(expected7)\n+\n+    # result7b = pf.read(columns=[\"list-struct.inner1\"])\n+    # assert result7b.equals(expected7)\n\nReview comment:\n       This are actually the tests being enabled by this PR. But they are currently still segfaulting, as they need https://github.com/apache/arrow/pull/11351 to work properly.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-12T13:29:30.280+0000",
                    "updated": "2021-10-12T13:29:30.280+0000",
                    "started": "2021-10-12T13:29:30.280+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "664067",
                    "issueId": "13405976"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405976/worklog/664068",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #11385:\nURL: https://github.com/apache/arrow/pull/11385#discussion_r727139239\n\n\n\n##########\nFile path: cpp/src/parquet/schema.cc\n##########\n@@ -73,6 +73,29 @@ std::shared_ptr<ColumnPath> ColumnPath::FromNode(const Node& node) {\n   return std::make_shared<ColumnPath>(std::move(path));\n }\n \n+std::shared_ptr<ColumnPath> ColumnPath::ShortFromNode(const Node& node) {\n+  // Build the path in reverse order as we traverse the nodes to the top\n+  std::vector<std::string> rpath_;\n+  const Node* cursor = &node;\n+  while (cursor->parent()) {\n+    if (cursor->is_group()) {\n+      auto group = dynamic_cast<const GroupNode*>(cursor);\n+      // If we have a parent list node, remove the names of the two direct\n+      // child nodes (list.element)\n+      if (group->logical_type()->is_list()) {\n+        rpath_.pop_back();\n+        rpath_.pop_back();\n\nReview comment:\n       Will every list column always have the logical type set on reading? Or does that depend on how the Parquet file was created?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-12T13:30:35.795+0000",
                    "updated": "2021-10-12T13:30:35.795+0000",
                    "started": "2021-10-12T13:30:35.794+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "664068",
                    "issueId": "13405976"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405976/worklog/664290",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11385:\nURL: https://github.com/apache/arrow/pull/11385#discussion_r727443596\n\n\n\n##########\nFile path: cpp/src/parquet/schema.cc\n##########\n@@ -73,6 +73,29 @@ std::shared_ptr<ColumnPath> ColumnPath::FromNode(const Node& node) {\n   return std::make_shared<ColumnPath>(std::move(path));\n }\n \n+std::shared_ptr<ColumnPath> ColumnPath::ShortFromNode(const Node& node) {\n+  // Build the path in reverse order as we traverse the nodes to the top\n+  std::vector<std::string> rpath_;\n+  const Node* cursor = &node;\n+  while (cursor->parent()) {\n+    if (cursor->is_group()) {\n+      auto group = dynamic_cast<const GroupNode*>(cursor);\n+      // If we have a parent list node, remove the names of the two direct\n+      // child nodes (list.element)\n+      if (group->logical_type()->is_list()) {\n+        rpath_.pop_back();\n+        rpath_.pop_back();\n\nReview comment:\n       that depends on how the parquet file was written.  I haven't checked parquet-mr, but I believe new files should follow the 3-level encoding with logical type (others might just have a repeated node).\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-12T19:51:00.596+0000",
                    "updated": "2021-10-12T19:51:00.596+0000",
                    "started": "2021-10-12T19:51:00.595+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "664290",
                    "issueId": "13405976"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405976/worklog/664452",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11385:\nURL: https://github.com/apache/arrow/pull/11385#discussion_r727665157\n\n\n\n##########\nFile path: python/pyarrow/tests/parquet/test_parquet_file.py\n##########\n@@ -274,3 +274,75 @@ def test_pre_buffer(pre_buffer):\n     buf.seek(0)\n     pf = pq.ParquetFile(buf, pre_buffer=pre_buffer)\n     assert pf.read().num_rows == N\n+\n+\n+def test_column_selection(tempdir):\n+    # create a table with nested types\n+    inner = pa.field('inner', pa.int64())\n+    middle = pa.field('middle', pa.struct([inner]))\n+    fields = [\n+        pa.field('basic', pa.int32()),\n+        pa.field(\n+            'list', pa.list_(pa.field('item', pa.int32()))\n+        ),\n+        pa.field(\n+            'struct', pa.struct([middle, pa.field('inner2', pa.int64())])\n+        ),\n+        pa.field(\n+            'list-struct', pa.list_(pa.field(\n+                'item', pa.struct([\n+                    pa.field('inner1', pa.int64()),\n+                    pa.field('inner2', pa.int64())\n+                ])\n+            ))\n+        ),\n+        pa.field('basic2', pa.int64()),\n+    ]\n+    arrs = [\n+        [0], [[1, 2]], [{\"middle\": {\"inner\": 3}, \"inner2\": 4}],\n+        [[{\"inner1\": 5, \"inner2\": 6}, {\"inner1\": 7, \"inner2\": 8}]], [9]]\n+    table = pa.table(arrs, schema=pa.schema(fields))\n+\n+    path = str(tempdir / 'test.parquet')\n+    pq.write_table(table, path)\n+    pf = pq.ParquetFile(path)\n+\n+    # default selecting all columns\n+    result1 = pf.read()\n+    assert result1.equals(table)\n+\n+    # selecting with columns names\n+    result2 = pf.read(columns=[\"basic\", \"basic2\"])\n+    assert result2.equals(table.select([\"basic\", \"basic2\"]))\n+\n+    result3 = pf.read(columns=[\"list\", \"struct\", \"basic2\"])\n+    assert result3.equals(table.select([\"list\", \"struct\", \"basic2\"]))\n+\n+    # using dotted paths\n+    result4 = pf.read(columns=[\"struct.middle.inner\"])\n+    expected4 = pa.table({\"struct\": [{\"middle\": {\"inner\": 3}}]})\n+    assert result4.equals(expected4)\n+\n+    result5 = pf.read(columns=[\"struct.inner2\"])\n+    expected5 = pa.table({\"struct\": [{\"inner2\": 4}]})\n+    assert result5.equals(expected5)\n+\n+    result6 = pf.read(\n+        columns=[\"list\", \"struct.middle.inner\", \"struct.inner2\"]\n+    )\n+    assert result6.equals(table.select([\"list\", \"struct\"]))\n+\n+    # dotted paths for lists with or without list.item\n+\n+    # result7 = pf.read(columns=[\"list-struct.list.item.inner1\"])\n+    # expected7 = pa.table({\"list-struct\": [[{\"inner1\": 5}, {\"inner1\": 7}]]})\n+    # assert result7.equals(expected7)\n+\n+    # result7b = pf.read(columns=[\"list-struct.inner1\"])\n+    # assert result7b.equals(expected7)\n\nReview comment:\n       its been merged now.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-13T03:12:12.756+0000",
                    "updated": "2021-10-13T03:12:12.756+0000",
                    "started": "2021-10-13T03:12:12.755+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "664452",
                    "issueId": "13405976"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405976/worklog/664453",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11385:\nURL: https://github.com/apache/arrow/pull/11385#discussion_r727666537\n\n\n\n##########\nFile path: python/pyarrow/_parquet.pyx\n##########\n@@ -997,14 +1001,21 @@ cdef class ParquetReader(_Weakrefable):\n         cdef:\n\nReview comment:\n       should we start using return annotations to indicate what these function returns.  I don't know if it breaks any library clients by changing this to return a lit of tuple.  Is this technically a private interface?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-13T03:16:44.006+0000",
                    "updated": "2021-10-13T03:16:44.006+0000",
                    "started": "2021-10-13T03:16:44.005+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "664453",
                    "issueId": "13405976"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405976/worklog/664455",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11385:\nURL: https://github.com/apache/arrow/pull/11385#discussion_r727669334\n\n\n\n##########\nFile path: cpp/src/parquet/schema.cc\n##########\n@@ -73,6 +73,29 @@ std::shared_ptr<ColumnPath> ColumnPath::FromNode(const Node& node) {\n   return std::make_shared<ColumnPath>(std::move(path));\n }\n \n+std::shared_ptr<ColumnPath> ColumnPath::ShortFromNode(const Node& node) {\n+  // Build the path in reverse order as we traverse the nodes to the top\n+  std::vector<std::string> rpath_;\n+  const Node* cursor = &node;\n+  while (cursor->parent()) {\n+    if (cursor->is_group()) {\n+      auto group = dynamic_cast<const GroupNode*>(cursor);\n+      // If we have a parent list node, remove the names of the two direct\n+      // child nodes (list.element)\n+      if (group->logical_type()->is_list()) {\n+        rpath_.pop_back();\n+        rpath_.pop_back();\n\nReview comment:\n       https://github.com/apache/parquet-format/blob/master/LogicalTypes.md#backward-compatibility-rules is probably what we need to cover.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-13T03:24:45.217+0000",
                    "updated": "2021-10-13T03:24:45.217+0000",
                    "started": "2021-10-13T03:24:45.217+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "664455",
                    "issueId": "13405976"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405976/worklog/664982",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11385:\nURL: https://github.com/apache/arrow/pull/11385#discussion_r727443596\n\n\n\n##########\nFile path: cpp/src/parquet/schema.cc\n##########\n@@ -73,6 +73,29 @@ std::shared_ptr<ColumnPath> ColumnPath::FromNode(const Node& node) {\n   return std::make_shared<ColumnPath>(std::move(path));\n }\n \n+std::shared_ptr<ColumnPath> ColumnPath::ShortFromNode(const Node& node) {\n+  // Build the path in reverse order as we traverse the nodes to the top\n+  std::vector<std::string> rpath_;\n+  const Node* cursor = &node;\n+  while (cursor->parent()) {\n+    if (cursor->is_group()) {\n+      auto group = dynamic_cast<const GroupNode*>(cursor);\n+      // If we have a parent list node, remove the names of the two direct\n+      // child nodes (list.element)\n+      if (group->logical_type()->is_list()) {\n+        rpath_.pop_back();\n+        rpath_.pop_back();\n\nReview comment:\n       that depends on how the parquet file was written.  I haven't checked parquet-mr, but I believe new files should follow the 3-level encoding with logical type (others might just have a repeated node).\n\n##########\nFile path: python/pyarrow/tests/parquet/test_parquet_file.py\n##########\n@@ -274,3 +274,75 @@ def test_pre_buffer(pre_buffer):\n     buf.seek(0)\n     pf = pq.ParquetFile(buf, pre_buffer=pre_buffer)\n     assert pf.read().num_rows == N\n+\n+\n+def test_column_selection(tempdir):\n+    # create a table with nested types\n+    inner = pa.field('inner', pa.int64())\n+    middle = pa.field('middle', pa.struct([inner]))\n+    fields = [\n+        pa.field('basic', pa.int32()),\n+        pa.field(\n+            'list', pa.list_(pa.field('item', pa.int32()))\n+        ),\n+        pa.field(\n+            'struct', pa.struct([middle, pa.field('inner2', pa.int64())])\n+        ),\n+        pa.field(\n+            'list-struct', pa.list_(pa.field(\n+                'item', pa.struct([\n+                    pa.field('inner1', pa.int64()),\n+                    pa.field('inner2', pa.int64())\n+                ])\n+            ))\n+        ),\n+        pa.field('basic2', pa.int64()),\n+    ]\n+    arrs = [\n+        [0], [[1, 2]], [{\"middle\": {\"inner\": 3}, \"inner2\": 4}],\n+        [[{\"inner1\": 5, \"inner2\": 6}, {\"inner1\": 7, \"inner2\": 8}]], [9]]\n+    table = pa.table(arrs, schema=pa.schema(fields))\n+\n+    path = str(tempdir / 'test.parquet')\n+    pq.write_table(table, path)\n+    pf = pq.ParquetFile(path)\n+\n+    # default selecting all columns\n+    result1 = pf.read()\n+    assert result1.equals(table)\n+\n+    # selecting with columns names\n+    result2 = pf.read(columns=[\"basic\", \"basic2\"])\n+    assert result2.equals(table.select([\"basic\", \"basic2\"]))\n+\n+    result3 = pf.read(columns=[\"list\", \"struct\", \"basic2\"])\n+    assert result3.equals(table.select([\"list\", \"struct\", \"basic2\"]))\n+\n+    # using dotted paths\n+    result4 = pf.read(columns=[\"struct.middle.inner\"])\n+    expected4 = pa.table({\"struct\": [{\"middle\": {\"inner\": 3}}]})\n+    assert result4.equals(expected4)\n+\n+    result5 = pf.read(columns=[\"struct.inner2\"])\n+    expected5 = pa.table({\"struct\": [{\"inner2\": 4}]})\n+    assert result5.equals(expected5)\n+\n+    result6 = pf.read(\n+        columns=[\"list\", \"struct.middle.inner\", \"struct.inner2\"]\n+    )\n+    assert result6.equals(table.select([\"list\", \"struct\"]))\n+\n+    # dotted paths for lists with or without list.item\n+\n+    # result7 = pf.read(columns=[\"list-struct.list.item.inner1\"])\n+    # expected7 = pa.table({\"list-struct\": [[{\"inner1\": 5}, {\"inner1\": 7}]]})\n+    # assert result7.equals(expected7)\n+\n+    # result7b = pf.read(columns=[\"list-struct.inner1\"])\n+    # assert result7b.equals(expected7)\n\nReview comment:\n       its been merged now.\n\n##########\nFile path: python/pyarrow/_parquet.pyx\n##########\n@@ -997,14 +1001,21 @@ cdef class ParquetReader(_Weakrefable):\n         cdef:\n\nReview comment:\n       should we start using return annotations to indicate what these function returns.  I don't know if it breaks any library clients by changing this to return a lit of tuple.  Is this technically a private interface?\n\n##########\nFile path: cpp/src/parquet/schema.cc\n##########\n@@ -73,6 +73,29 @@ std::shared_ptr<ColumnPath> ColumnPath::FromNode(const Node& node) {\n   return std::make_shared<ColumnPath>(std::move(path));\n }\n \n+std::shared_ptr<ColumnPath> ColumnPath::ShortFromNode(const Node& node) {\n+  // Build the path in reverse order as we traverse the nodes to the top\n+  std::vector<std::string> rpath_;\n+  const Node* cursor = &node;\n+  while (cursor->parent()) {\n+    if (cursor->is_group()) {\n+      auto group = dynamic_cast<const GroupNode*>(cursor);\n+      // If we have a parent list node, remove the names of the two direct\n+      // child nodes (list.element)\n+      if (group->logical_type()->is_list()) {\n+        rpath_.pop_back();\n+        rpath_.pop_back();\n\nReview comment:\n       https://github.com/apache/parquet-format/blob/master/LogicalTypes.md#backward-compatibility-rules is probably what we need to cover.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-13T18:33:25.252+0000",
                    "updated": "2021-10-13T18:33:25.252+0000",
                    "started": "2021-10-13T18:33:25.251+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "664982",
                    "issueId": "13405976"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405976/worklog/665738",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #11385:\nURL: https://github.com/apache/arrow/pull/11385#discussion_r729128250\n\n\n\n##########\nFile path: cpp/src/parquet/schema.cc\n##########\n@@ -73,6 +73,29 @@ std::shared_ptr<ColumnPath> ColumnPath::FromNode(const Node& node) {\n   return std::make_shared<ColumnPath>(std::move(path));\n }\n \n+std::shared_ptr<ColumnPath> ColumnPath::ShortFromNode(const Node& node) {\n+  // Build the path in reverse order as we traverse the nodes to the top\n+  std::vector<std::string> rpath_;\n+  const Node* cursor = &node;\n+  while (cursor->parent()) {\n+    if (cursor->is_group()) {\n+      auto group = dynamic_cast<const GroupNode*>(cursor);\n+      // If we have a parent list node, remove the names of the two direct\n+      // child nodes (list.element)\n+      if (group->logical_type()->is_list()) {\n+        rpath_.pop_back();\n+        rpath_.pop_back();\n\nReview comment:\n       Hmm, that's difficult to test if we can't write such files. Or do we have some test files for that? How do we test those special cases in our reading code? \r\n   Looking at the parquet-testing repo, there is a special case (https://github.com/apache/parquet-testing/blob/master/data/repeated_no_annotation.parquet), but that's with a struct inside the list inside a list, with no logical type annotation.\r\n   \r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-14T16:00:53.055+0000",
                    "updated": "2021-10-14T16:00:53.055+0000",
                    "started": "2021-10-14T16:00:53.055+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "665738",
                    "issueId": "13405976"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405976/worklog/766096",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on PR #11385:\nURL: https://github.com/apache/arrow/pull/11385#issuecomment-1117483134\n\n   @jorisvandenbossche What should the future of this PR be? Do you want to push it forward?\n\n\n",
                    "created": "2022-05-04T15:21:35.349+0000",
                    "updated": "2022-05-04T15:21:35.349+0000",
                    "started": "2022-05-04T15:21:35.349+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "766096",
                    "issueId": "13405976"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 6600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@572dd280[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1b35f9a8[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@73fb4f68[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@47b71006[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@21573cf5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3254adbf[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1bfd3492[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@643530cb[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7c1d182c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6b336b45[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@19188b15[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@54664395[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6600,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Aug 26 16:05:52 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14286/watchers",
            "watchCount": 3,
            "isWatching": true
        },
        "created": "2021-10-11T15:40:59.000+0000",
        "updated": "2022-08-26T16:19:23.000+0000",
        "timeoriginalestimate": null,
        "description": "Subtask for ARROW-14196.\r\n\r\nCurrently, if you have a list column, where the list elements itself are nested items (eg a list of structs), selecting a subset of that list column requires something like {{columns=[\"columnA.list.item.subfield\"]}}. While this \"list.item\" is superfluous, since a list always contains a single child. So ideally we allow to specify this as {{columns=[\"columnA.subfield\"]}}. \r\n\r\nThis also avoids relying on the exact name of the list item (item vs element), for which the default differs between Parquet and Arrow.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python][Parquet] Allow to select columns of a list field without requiring the list component names",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13405976/comment/17585509",
                    "id": "17585509",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=toddfarmer",
                        "name": "toddfarmer",
                        "key": "JIRAUSER288796",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39935",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39935",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39935",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39935"
                        },
                        "displayName": "Todd Farmer",
                        "active": true,
                        "timeZone": "America/Boise"
                    },
                    "body": "This issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned per [project policy|https://arrow.apache.org/docs/dev/developers/bug_reports.html#issue-assignment]. Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=toddfarmer",
                        "name": "toddfarmer",
                        "key": "JIRAUSER288796",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39935",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39935",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39935",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39935"
                        },
                        "displayName": "Todd Farmer",
                        "active": true,
                        "timeZone": "America/Boise"
                    },
                    "created": "2022-08-26T16:05:52.882+0000",
                    "updated": "2022-08-26T16:19:23.335+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0vquw:",
        "customfield_12314139": null
    }
}