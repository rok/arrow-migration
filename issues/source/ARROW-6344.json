{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13252792",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252792",
    "key": "ARROW-6344",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pprudhvi",
            "name": "pprudhvi",
            "key": "pprudhvi",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Prudhvi Porandla",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334626",
                "id": "12334626",
                "name": "C++ - Gandiva"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pprudhvi",
            "name": "pprudhvi",
            "key": "pprudhvi",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Prudhvi Porandla",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pprudhvi",
            "name": "pprudhvi",
            "key": "pprudhvi",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Prudhvi Porandla",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 28200,
            "total": 28200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 28200,
            "total": 28200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6344/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 53,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252792/worklog/304236",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pprudhvi commented on pull request #5236: ARROW-6344: [C++][Gandiva] Handle multibyte characters in substring function\nURL: https://github.com/apache/arrow/pull/5236\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-30T12:55:00.935+0000",
                    "updated": "2019-08-30T12:55:00.935+0000",
                    "started": "2019-08-30T12:55:00.935+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304236",
                    "issueId": "13252792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252792/worklog/304412",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5236: ARROW-6344: [C++][Gandiva] Handle multibyte characters in substring function\nURL: https://github.com/apache/arrow/pull/5236#discussion_r319596778\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/string_ops.cc\n ##########\n @@ -191,38 +191,57 @@ VAR_LEN_TYPES(IS_NOT_NULL, isnotnull)\n #undef IS_NOT_NULL\n \n FORCE_INLINE\n-const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_len,\n-                                    int64 offset64, int64 length, int32* out_len) {\n-  if (length <= 0 || input == nullptr || in_len <= 0) {\n-    *out_len = 0;\n+const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_data_len,\n+                                    int64 offset64, int64 length, int32* out_data_len) {\n+  if (length <= 0 || input == nullptr || in_data_len <= 0) {\n+    *out_data_len = 0;\n     return \"\";\n   }\n \n+  int32 num_in_chars;  // num of chars in input string\n+  int32* char_start =\n+      reinterpret_cast<int32*>(malloc(in_data_len * 4));  // stores start index of chars\n+\n+  int32 curr_char_pos = 0;\n+  char curr_char_num_bytes = 0;\n+\n+  char_start[curr_char_pos] = 0;\n+  for (int32 i = 0; i < in_data_len; i = i + curr_char_num_bytes) {\n+    curr_char_num_bytes = utf8_char_length(input[i]);\n+    char_start[curr_char_pos + 1] = char_start[curr_char_pos] + curr_char_num_bytes;\n+    ++curr_char_pos;\n+  }\n+\n+  num_in_chars = curr_char_pos;\n+\n   int32 offset = static_cast<int32>(offset64);\n-  int32 startIndex = offset - 1;  // offset is 1 for first char\n+  int32 from_char = offset - 1;  // offset is 1 for first char\n   if (offset < 0) {\n-    startIndex = in_len + offset;\n+    from_char = num_in_chars + offset;\n   } else if (offset == 0) {\n-    startIndex = 0;\n+    from_char = 0;\n   }\n \n-  if (startIndex < 0 || startIndex >= in_len) {\n-    *out_len = 0;\n+  if (from_char < 0 || from_char >= num_in_chars) {\n+    *out_data_len = 0;\n     return \"\";\n   }\n \n-  *out_len = static_cast<int32>(length);\n-  if (length > in_len - startIndex) {\n-    *out_len = in_len - startIndex;\n+  int32 num_out_chars = static_cast<int32>(length);\n+  if (length > num_in_chars - from_char) {\n+    num_out_chars = num_in_chars - from_char;\n   }\n \n-  char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, *out_len));\n+  *out_data_len = char_start[num_out_chars + from_char] - char_start[from_char];\n+  char* ret =\n+      reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, *out_data_len));\n   if (ret == nullptr) {\n     gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output string\");\n-    *out_len = 0;\n+    *out_data_len = 0;\n \n Review comment:\n   memory leak of `char_start`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-30T17:22:36.207+0000",
                    "updated": "2019-08-30T17:22:36.207+0000",
                    "started": "2019-08-30T17:22:36.207+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304412",
                    "issueId": "13252792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252792/worklog/304413",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5236: ARROW-6344: [C++][Gandiva] Handle multibyte characters in substring function\nURL: https://github.com/apache/arrow/pull/5236#discussion_r319600917\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/string_ops.cc\n ##########\n @@ -191,38 +191,57 @@ VAR_LEN_TYPES(IS_NOT_NULL, isnotnull)\n #undef IS_NOT_NULL\n \n FORCE_INLINE\n-const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_len,\n-                                    int64 offset64, int64 length, int32* out_len) {\n-  if (length <= 0 || input == nullptr || in_len <= 0) {\n-    *out_len = 0;\n+const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_data_len,\n+                                    int64 offset64, int64 length, int32* out_data_len) {\n+  if (length <= 0 || input == nullptr || in_data_len <= 0) {\n+    *out_data_len = 0;\n     return \"\";\n   }\n \n+  int32 num_in_chars;  // num of chars in input string\n+  int32* char_start =\n \n Review comment:\n   Can't this problem be solve in O(1) temporary data?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-30T17:22:36.318+0000",
                    "updated": "2019-08-30T17:22:36.318+0000",
                    "started": "2019-08-30T17:22:36.318+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304413",
                    "issueId": "13252792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252792/worklog/304414",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5236: ARROW-6344: [C++][Gandiva] Handle multibyte characters in substring function\nURL: https://github.com/apache/arrow/pull/5236#discussion_r319600468\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/string_ops.cc\n ##########\n @@ -191,38 +191,57 @@ VAR_LEN_TYPES(IS_NOT_NULL, isnotnull)\n #undef IS_NOT_NULL\n \n FORCE_INLINE\n-const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_len,\n-                                    int64 offset64, int64 length, int32* out_len) {\n-  if (length <= 0 || input == nullptr || in_len <= 0) {\n-    *out_len = 0;\n+const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_data_len,\n+                                    int64 offset64, int64 length, int32* out_data_len) {\n+  if (length <= 0 || input == nullptr || in_data_len <= 0) {\n+    *out_data_len = 0;\n     return \"\";\n   }\n \n+  int32 num_in_chars;  // num of chars in input string\n+  int32* char_start =\n+      reinterpret_cast<int32*>(malloc(in_data_len * 4));  // stores start index of chars\n+\n+  int32 curr_char_pos = 0;\n+  char curr_char_num_bytes = 0;\n+\n+  char_start[curr_char_pos] = 0;\n+  for (int32 i = 0; i < in_data_len; i = i + curr_char_num_bytes) {\n \n Review comment:\n   There's a potential out of bound issue if the in_data_len = 2^31 -1 and the last utf8 byte is the start of a glyph with more that 1 character. Also, this is an infinite loop (+ out of bound buffer write) if it encounters a single invalid byte.\r\n   \r\n   Disclaimer, I haven't tested this.\r\n   \r\n   ```C++\r\n   \r\n   int32_t start_pos, end_pos = -1;\r\n   \r\n   int32_t n_glyphs = 0;\r\n   int64_t pos = 0;\r\n   while (pos < static_cast<int64_t>(in_data_len)) {\r\n     if (n_glyphs == offset) start_pos = pos;\r\n     if (n_glyphs - offset + 1 == length) end_pos = pos; \r\n   \r\n     n_glyphs++;\r\n     int64_t glyph_len = utf8_char_length(input[pos])\r\n     // Skip invalid glyphs.\r\n     if (glyph_len == 0) {\r\n       // should it decrease n_glyphs?\r\n       glyph_len = 1;\r\n     }\r\n     pos += glyph_len;\r\n   }\r\n   \r\n   // [start_post, end_pos) contains what you want.\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-30T17:22:36.363+0000",
                    "updated": "2019-08-30T17:22:36.363+0000",
                    "started": "2019-08-30T17:22:36.363+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304414",
                    "issueId": "13252792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252792/worklog/304415",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5236: ARROW-6344: [C++][Gandiva] Handle multibyte characters in substring function\nURL: https://github.com/apache/arrow/pull/5236#discussion_r319597165\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/string_ops.cc\n ##########\n @@ -191,38 +191,57 @@ VAR_LEN_TYPES(IS_NOT_NULL, isnotnull)\n #undef IS_NOT_NULL\n \n FORCE_INLINE\n-const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_len,\n-                                    int64 offset64, int64 length, int32* out_len) {\n-  if (length <= 0 || input == nullptr || in_len <= 0) {\n-    *out_len = 0;\n+const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_data_len,\n+                                    int64 offset64, int64 length, int32* out_data_len) {\n+  if (length <= 0 || input == nullptr || in_data_len <= 0) {\n \n Review comment:\n   I'd also do a sanity check on offset, e.g. offset >= 0, and offset < in_data_len.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-30T17:22:36.399+0000",
                    "updated": "2019-08-30T17:22:36.399+0000",
                    "started": "2019-08-30T17:22:36.398+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304415",
                    "issueId": "13252792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252792/worklog/304416",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5236: ARROW-6344: [C++][Gandiva] Handle multibyte characters in substring function\nURL: https://github.com/apache/arrow/pull/5236#discussion_r319596728\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/string_ops.cc\n ##########\n @@ -191,38 +191,57 @@ VAR_LEN_TYPES(IS_NOT_NULL, isnotnull)\n #undef IS_NOT_NULL\n \n FORCE_INLINE\n-const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_len,\n-                                    int64 offset64, int64 length, int32* out_len) {\n-  if (length <= 0 || input == nullptr || in_len <= 0) {\n-    *out_len = 0;\n+const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_data_len,\n+                                    int64 offset64, int64 length, int32* out_data_len) {\n+  if (length <= 0 || input == nullptr || in_data_len <= 0) {\n+    *out_data_len = 0;\n     return \"\";\n   }\n \n+  int32 num_in_chars;  // num of chars in input string\n+  int32* char_start =\n+      reinterpret_cast<int32*>(malloc(in_data_len * 4));  // stores start index of chars\n+\n+  int32 curr_char_pos = 0;\n+  char curr_char_num_bytes = 0;\n+\n+  char_start[curr_char_pos] = 0;\n+  for (int32 i = 0; i < in_data_len; i = i + curr_char_num_bytes) {\n+    curr_char_num_bytes = utf8_char_length(input[i]);\n+    char_start[curr_char_pos + 1] = char_start[curr_char_pos] + curr_char_num_bytes;\n+    ++curr_char_pos;\n+  }\n+\n+  num_in_chars = curr_char_pos;\n+\n   int32 offset = static_cast<int32>(offset64);\n-  int32 startIndex = offset - 1;  // offset is 1 for first char\n+  int32 from_char = offset - 1;  // offset is 1 for first char\n   if (offset < 0) {\n-    startIndex = in_len + offset;\n+    from_char = num_in_chars + offset;\n   } else if (offset == 0) {\n-    startIndex = 0;\n+    from_char = 0;\n   }\n \n-  if (startIndex < 0 || startIndex >= in_len) {\n-    *out_len = 0;\n+  if (from_char < 0 || from_char >= num_in_chars) {\n+    *out_data_len = 0;\n \n Review comment:\n   memory leak of `char_start`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-30T17:22:36.403+0000",
                    "updated": "2019-08-30T17:22:36.403+0000",
                    "started": "2019-08-30T17:22:36.403+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304416",
                    "issueId": "13252792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252792/worklog/304431",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5236: ARROW-6344: [C++][Gandiva] Handle multibyte characters in substring function\nURL: https://github.com/apache/arrow/pull/5236#discussion_r319600917\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/string_ops.cc\n ##########\n @@ -191,38 +191,57 @@ VAR_LEN_TYPES(IS_NOT_NULL, isnotnull)\n #undef IS_NOT_NULL\n \n FORCE_INLINE\n-const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_len,\n-                                    int64 offset64, int64 length, int32* out_len) {\n-  if (length <= 0 || input == nullptr || in_len <= 0) {\n-    *out_len = 0;\n+const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_data_len,\n+                                    int64 offset64, int64 length, int32* out_data_len) {\n+  if (length <= 0 || input == nullptr || in_data_len <= 0) {\n+    *out_data_len = 0;\n     return \"\";\n   }\n \n+  int32 num_in_chars;  // num of chars in input string\n+  int32* char_start =\n \n Review comment:\n   Can't this problem be solved in O(1) temporary data?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-30T17:34:37.058+0000",
                    "updated": "2019-08-30T17:34:37.058+0000",
                    "started": "2019-08-30T17:34:37.058+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304431",
                    "issueId": "13252792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252792/worklog/304432",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5236: ARROW-6344: [C++][Gandiva] Handle multibyte characters in substring function\nURL: https://github.com/apache/arrow/pull/5236#discussion_r319610755\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/string_ops.cc\n ##########\n @@ -191,38 +191,57 @@ VAR_LEN_TYPES(IS_NOT_NULL, isnotnull)\n #undef IS_NOT_NULL\n \n FORCE_INLINE\n-const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_len,\n-                                    int64 offset64, int64 length, int32* out_len) {\n-  if (length <= 0 || input == nullptr || in_len <= 0) {\n-    *out_len = 0;\n+const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_data_len,\n+                                    int64 offset64, int64 length, int32* out_data_len) {\n+  if (length <= 0 || input == nullptr || in_data_len <= 0) {\n+    *out_data_len = 0;\n     return \"\";\n   }\n \n+  int32 num_in_chars;  // num of chars in input string\n+  int32* char_start =\n+      reinterpret_cast<int32*>(malloc(in_data_len * 4));  // stores start index of chars\n \n Review comment:\n   For future reference, you shouldn't use malloc, but gdv_fn_context_arena_malloc\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-30T17:35:11.950+0000",
                    "updated": "2019-08-30T17:35:11.950+0000",
                    "started": "2019-08-30T17:35:11.949+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304432",
                    "issueId": "13252792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252792/worklog/304483",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pprudhvi commented on pull request #5236: ARROW-6344: [C++][Gandiva] Handle multibyte characters in substring function\nURL: https://github.com/apache/arrow/pull/5236#discussion_r319623302\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/string_ops.cc\n ##########\n @@ -191,38 +191,57 @@ VAR_LEN_TYPES(IS_NOT_NULL, isnotnull)\n #undef IS_NOT_NULL\n \n FORCE_INLINE\n-const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_len,\n-                                    int64 offset64, int64 length, int32* out_len) {\n-  if (length <= 0 || input == nullptr || in_len <= 0) {\n-    *out_len = 0;\n+const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_data_len,\n+                                    int64 offset64, int64 length, int32* out_data_len) {\n+  if (length <= 0 || input == nullptr || in_data_len <= 0) {\n \n Review comment:\n   offset need not be positive.  offset > in_data_len is handled.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-30T18:11:02.396+0000",
                    "updated": "2019-08-30T18:11:02.396+0000",
                    "started": "2019-08-30T18:11:02.395+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304483",
                    "issueId": "13252792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252792/worklog/304498",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pprudhvi commented on pull request #5236: ARROW-6344: [C++][Gandiva] Handle multibyte characters in substring function\nURL: https://github.com/apache/arrow/pull/5236#discussion_r319628700\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/string_ops.cc\n ##########\n @@ -191,38 +191,57 @@ VAR_LEN_TYPES(IS_NOT_NULL, isnotnull)\n #undef IS_NOT_NULL\n \n FORCE_INLINE\n-const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_len,\n-                                    int64 offset64, int64 length, int32* out_len) {\n-  if (length <= 0 || input == nullptr || in_len <= 0) {\n-    *out_len = 0;\n+const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_data_len,\n+                                    int64 offset64, int64 length, int32* out_data_len) {\n+  if (length <= 0 || input == nullptr || in_data_len <= 0) {\n+    *out_data_len = 0;\n     return \"\";\n   }\n \n+  int32 num_in_chars;  // num of chars in input string\n+  int32* char_start =\n \n Review comment:\n   yes, should go over input bytes twice though since offset can be negative.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-30T18:26:44.340+0000",
                    "updated": "2019-08-30T18:26:44.340+0000",
                    "started": "2019-08-30T18:26:44.339+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304498",
                    "issueId": "13252792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252792/worklog/304503",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5236: ARROW-6344: [C++][Gandiva] Handle multibyte characters in substring function\nURL: https://github.com/apache/arrow/pull/5236#discussion_r319629124\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/string_ops.cc\n ##########\n @@ -191,38 +191,57 @@ VAR_LEN_TYPES(IS_NOT_NULL, isnotnull)\n #undef IS_NOT_NULL\n \n FORCE_INLINE\n-const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_len,\n-                                    int64 offset64, int64 length, int32* out_len) {\n-  if (length <= 0 || input == nullptr || in_len <= 0) {\n-    *out_len = 0;\n+const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_data_len,\n+                                    int64 offset64, int64 length, int32* out_data_len) {\n+  if (length <= 0 || input == nullptr || in_data_len <= 0) {\n+    *out_data_len = 0;\n     return \"\";\n   }\n \n+  int32 num_in_chars;  // num of chars in input string\n+  int32* char_start =\n \n Review comment:\n   what does it mean for the offset to be negative.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-30T18:28:01.382+0000",
                    "updated": "2019-08-30T18:28:01.382+0000",
                    "started": "2019-08-30T18:28:01.382+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304503",
                    "issueId": "13252792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252792/worklog/304504",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pprudhvi commented on pull request #5236: ARROW-6344: [C++][Gandiva] Handle multibyte characters in substring function\nURL: https://github.com/apache/arrow/pull/5236#discussion_r319629887\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/string_ops.cc\n ##########\n @@ -191,38 +191,57 @@ VAR_LEN_TYPES(IS_NOT_NULL, isnotnull)\n #undef IS_NOT_NULL\n \n FORCE_INLINE\n-const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_len,\n-                                    int64 offset64, int64 length, int32* out_len) {\n-  if (length <= 0 || input == nullptr || in_len <= 0) {\n-    *out_len = 0;\n+const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_data_len,\n+                                    int64 offset64, int64 length, int32* out_data_len) {\n+  if (length <= 0 || input == nullptr || in_data_len <= 0) {\n+    *out_data_len = 0;\n     return \"\";\n   }\n \n+  int32 num_in_chars;  // num of chars in input string\n+  int32* char_start =\n \n Review comment:\n   negative offsets are counted from string end. For example, substr('arrow', -3, 3) = 'row'\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-30T18:30:10.055+0000",
                    "updated": "2019-08-30T18:30:10.055+0000",
                    "started": "2019-08-30T18:30:10.055+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304504",
                    "issueId": "13252792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252792/worklog/304507",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pprudhvi commented on pull request #5236: ARROW-6344: [C++][Gandiva] Handle multibyte characters in substring function\nURL: https://github.com/apache/arrow/pull/5236#discussion_r319630666\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/string_ops.cc\n ##########\n @@ -191,38 +191,57 @@ VAR_LEN_TYPES(IS_NOT_NULL, isnotnull)\n #undef IS_NOT_NULL\n \n FORCE_INLINE\n-const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_len,\n-                                    int64 offset64, int64 length, int32* out_len) {\n-  if (length <= 0 || input == nullptr || in_len <= 0) {\n-    *out_len = 0;\n+const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_data_len,\n+                                    int64 offset64, int64 length, int32* out_data_len) {\n+  if (length <= 0 || input == nullptr || in_data_len <= 0) {\n+    *out_data_len = 0;\n     return \"\";\n   }\n \n+  int32 num_in_chars;  // num of chars in input string\n+  int32* char_start =\n+      reinterpret_cast<int32*>(malloc(in_data_len * 4));  // stores start index of chars\n \n Review comment:\n   right. I need not free the memory if I use gdv_fn_context_arena_malloc, correct?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-30T18:32:13.484+0000",
                    "updated": "2019-08-30T18:32:13.484+0000",
                    "started": "2019-08-30T18:32:13.484+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304507",
                    "issueId": "13252792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252792/worklog/304511",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pprudhvi commented on pull request #5236: ARROW-6344: [C++][Gandiva] Handle multibyte characters in substring function\nURL: https://github.com/apache/arrow/pull/5236#discussion_r319633382\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/string_ops.cc\n ##########\n @@ -191,38 +191,57 @@ VAR_LEN_TYPES(IS_NOT_NULL, isnotnull)\n #undef IS_NOT_NULL\n \n FORCE_INLINE\n-const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_len,\n-                                    int64 offset64, int64 length, int32* out_len) {\n-  if (length <= 0 || input == nullptr || in_len <= 0) {\n-    *out_len = 0;\n+const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_data_len,\n+                                    int64 offset64, int64 length, int32* out_data_len) {\n+  if (length <= 0 || input == nullptr || in_data_len <= 0) {\n+    *out_data_len = 0;\n     return \"\";\n   }\n \n+  int32 num_in_chars;  // num of chars in input string\n+  int32* char_start =\n+      reinterpret_cast<int32*>(malloc(in_data_len * 4));  // stores start index of chars\n+\n+  int32 curr_char_pos = 0;\n+  char curr_char_num_bytes = 0;\n+\n+  char_start[curr_char_pos] = 0;\n+  for (int32 i = 0; i < in_data_len; i = i + curr_char_num_bytes) {\n \n Review comment:\n   you're right but this will happen if the input string is half a billion characters wide\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-30T18:40:23.555+0000",
                    "updated": "2019-08-30T18:40:23.555+0000",
                    "started": "2019-08-30T18:40:23.555+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304511",
                    "issueId": "13252792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252792/worklog/304512",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pprudhvi commented on pull request #5236: ARROW-6344: [C++][Gandiva] Handle multibyte characters in substring function\nURL: https://github.com/apache/arrow/pull/5236#discussion_r319633988\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/string_ops.cc\n ##########\n @@ -191,38 +191,57 @@ VAR_LEN_TYPES(IS_NOT_NULL, isnotnull)\n #undef IS_NOT_NULL\n \n FORCE_INLINE\n-const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_len,\n-                                    int64 offset64, int64 length, int32* out_len) {\n-  if (length <= 0 || input == nullptr || in_len <= 0) {\n-    *out_len = 0;\n+const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_data_len,\n+                                    int64 offset64, int64 length, int32* out_data_len) {\n+  if (length <= 0 || input == nullptr || in_data_len <= 0) {\n+    *out_data_len = 0;\n     return \"\";\n   }\n \n+  int32 num_in_chars;  // num of chars in input string\n+  int32* char_start =\n+      reinterpret_cast<int32*>(malloc(in_data_len * 4));  // stores start index of chars\n+\n+  int32 curr_char_pos = 0;\n+  char curr_char_num_bytes = 0;\n+\n+  char_start[curr_char_pos] = 0;\n+  for (int32 i = 0; i < in_data_len; i = i + curr_char_num_bytes) {\n+    curr_char_num_bytes = utf8_char_length(input[i]);\n+    char_start[curr_char_pos + 1] = char_start[curr_char_pos] + curr_char_num_bytes;\n+    ++curr_char_pos;\n+  }\n+\n+  num_in_chars = curr_char_pos;\n+\n   int32 offset = static_cast<int32>(offset64);\n-  int32 startIndex = offset - 1;  // offset is 1 for first char\n+  int32 from_char = offset - 1;  // offset is 1 for first char\n   if (offset < 0) {\n-    startIndex = in_len + offset;\n+    from_char = num_in_chars + offset;\n   } else if (offset == 0) {\n-    startIndex = 0;\n+    from_char = 0;\n   }\n \n-  if (startIndex < 0 || startIndex >= in_len) {\n-    *out_len = 0;\n+  if (from_char < 0 || from_char >= num_in_chars) {\n+    *out_data_len = 0;\n \n Review comment:\n   fixed. thanks for noticing\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-30T18:42:00.478+0000",
                    "updated": "2019-08-30T18:42:00.478+0000",
                    "started": "2019-08-30T18:42:00.477+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304512",
                    "issueId": "13252792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252792/worklog/304513",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pprudhvi commented on pull request #5236: ARROW-6344: [C++][Gandiva] Handle multibyte characters in substring function\nURL: https://github.com/apache/arrow/pull/5236#discussion_r319634055\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/string_ops.cc\n ##########\n @@ -191,38 +191,57 @@ VAR_LEN_TYPES(IS_NOT_NULL, isnotnull)\n #undef IS_NOT_NULL\n \n FORCE_INLINE\n-const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_len,\n-                                    int64 offset64, int64 length, int32* out_len) {\n-  if (length <= 0 || input == nullptr || in_len <= 0) {\n-    *out_len = 0;\n+const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_data_len,\n+                                    int64 offset64, int64 length, int32* out_data_len) {\n+  if (length <= 0 || input == nullptr || in_data_len <= 0) {\n+    *out_data_len = 0;\n     return \"\";\n   }\n \n+  int32 num_in_chars;  // num of chars in input string\n+  int32* char_start =\n+      reinterpret_cast<int32*>(malloc(in_data_len * 4));  // stores start index of chars\n+\n+  int32 curr_char_pos = 0;\n+  char curr_char_num_bytes = 0;\n+\n+  char_start[curr_char_pos] = 0;\n+  for (int32 i = 0; i < in_data_len; i = i + curr_char_num_bytes) {\n+    curr_char_num_bytes = utf8_char_length(input[i]);\n+    char_start[curr_char_pos + 1] = char_start[curr_char_pos] + curr_char_num_bytes;\n+    ++curr_char_pos;\n+  }\n+\n+  num_in_chars = curr_char_pos;\n+\n   int32 offset = static_cast<int32>(offset64);\n-  int32 startIndex = offset - 1;  // offset is 1 for first char\n+  int32 from_char = offset - 1;  // offset is 1 for first char\n   if (offset < 0) {\n-    startIndex = in_len + offset;\n+    from_char = num_in_chars + offset;\n   } else if (offset == 0) {\n-    startIndex = 0;\n+    from_char = 0;\n   }\n \n-  if (startIndex < 0 || startIndex >= in_len) {\n-    *out_len = 0;\n+  if (from_char < 0 || from_char >= num_in_chars) {\n+    *out_data_len = 0;\n     return \"\";\n   }\n \n-  *out_len = static_cast<int32>(length);\n-  if (length > in_len - startIndex) {\n-    *out_len = in_len - startIndex;\n+  int32 num_out_chars = static_cast<int32>(length);\n+  if (length > num_in_chars - from_char) {\n+    num_out_chars = num_in_chars - from_char;\n   }\n \n-  char* ret = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, *out_len));\n+  *out_data_len = char_start[num_out_chars + from_char] - char_start[from_char];\n+  char* ret =\n+      reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, *out_data_len));\n   if (ret == nullptr) {\n     gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output string\");\n-    *out_len = 0;\n+    *out_data_len = 0;\n \n Review comment:\n   fixed\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-30T18:42:10.652+0000",
                    "updated": "2019-08-30T18:42:10.652+0000",
                    "started": "2019-08-30T18:42:10.652+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304513",
                    "issueId": "13252792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252792/worklog/304514",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5236: ARROW-6344: [C++][Gandiva] Handle multibyte characters in substring function\nURL: https://github.com/apache/arrow/pull/5236#discussion_r319634582\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/string_ops.cc\n ##########\n @@ -191,38 +191,57 @@ VAR_LEN_TYPES(IS_NOT_NULL, isnotnull)\n #undef IS_NOT_NULL\n \n FORCE_INLINE\n-const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_len,\n-                                    int64 offset64, int64 length, int32* out_len) {\n-  if (length <= 0 || input == nullptr || in_len <= 0) {\n-    *out_len = 0;\n+const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_data_len,\n+                                    int64 offset64, int64 length, int32* out_data_len) {\n+  if (length <= 0 || input == nullptr || in_data_len <= 0) {\n+    *out_data_len = 0;\n     return \"\";\n   }\n \n+  int32 num_in_chars;  // num of chars in input string\n+  int32* char_start =\n+      reinterpret_cast<int32*>(malloc(in_data_len * 4));  // stores start index of chars\n \n Review comment:\n   I'm not sure.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-30T18:43:42.951+0000",
                    "updated": "2019-08-30T18:43:42.951+0000",
                    "started": "2019-08-30T18:43:42.950+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304514",
                    "issueId": "13252792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252792/worklog/304515",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5236: ARROW-6344: [C++][Gandiva] Handle multibyte characters in substring function\nURL: https://github.com/apache/arrow/pull/5236#discussion_r319634728\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/string_ops.cc\n ##########\n @@ -191,38 +191,57 @@ VAR_LEN_TYPES(IS_NOT_NULL, isnotnull)\n #undef IS_NOT_NULL\n \n FORCE_INLINE\n-const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_len,\n-                                    int64 offset64, int64 length, int32* out_len) {\n-  if (length <= 0 || input == nullptr || in_len <= 0) {\n-    *out_len = 0;\n+const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_data_len,\n+                                    int64 offset64, int64 length, int32* out_data_len) {\n+  if (length <= 0 || input == nullptr || in_data_len <= 0) {\n+    *out_data_len = 0;\n     return \"\";\n   }\n \n+  int32 num_in_chars;  // num of chars in input string\n+  int32* char_start =\n \n Review comment:\n   going over data twice is cheaper than memory allocation.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-30T18:44:13.235+0000",
                    "updated": "2019-08-30T18:44:13.235+0000",
                    "started": "2019-08-30T18:44:13.234+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304515",
                    "issueId": "13252792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252792/worklog/305552",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pprudhvi commented on pull request #5236: ARROW-6344: [C++][Gandiva] Handle multibyte characters in substring function\nURL: https://github.com/apache/arrow/pull/5236#discussion_r320228521\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/string_ops.cc\n ##########\n @@ -191,38 +191,57 @@ VAR_LEN_TYPES(IS_NOT_NULL, isnotnull)\n #undef IS_NOT_NULL\n \n FORCE_INLINE\n-const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_len,\n-                                    int64 offset64, int64 length, int32* out_len) {\n-  if (length <= 0 || input == nullptr || in_len <= 0) {\n-    *out_len = 0;\n+const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_data_len,\n+                                    int64 offset64, int64 length, int32* out_data_len) {\n+  if (length <= 0 || input == nullptr || in_data_len <= 0) {\n+    *out_data_len = 0;\n     return \"\";\n   }\n \n+  int32 num_in_chars;  // num of chars in input string\n+  int32* char_start =\n \n Review comment:\n   done. thanks for reviewing\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-03T11:45:52.335+0000",
                    "updated": "2019-09-03T11:45:52.335+0000",
                    "started": "2019-09-03T11:45:52.334+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "305552",
                    "issueId": "13252792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252792/worklog/306074",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pprudhvi commented on pull request #5236: ARROW-6344: [C++][Gandiva] Handle multibyte characters in substring function\nURL: https://github.com/apache/arrow/pull/5236#discussion_r320586098\n \n \n\n ##########\n File path: cpp/src/gandiva/precompiled/string_ops.cc\n ##########\n @@ -191,38 +191,57 @@ VAR_LEN_TYPES(IS_NOT_NULL, isnotnull)\n #undef IS_NOT_NULL\n \n FORCE_INLINE\n-const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_len,\n-                                    int64 offset64, int64 length, int32* out_len) {\n-  if (length <= 0 || input == nullptr || in_len <= 0) {\n-    *out_len = 0;\n+const char* substr_utf8_int64_int64(int64 context, const char* input, int32 in_data_len,\n+                                    int64 offset64, int64 length, int32* out_data_len) {\n+  if (length <= 0 || input == nullptr || in_data_len <= 0) {\n+    *out_data_len = 0;\n     return \"\";\n   }\n \n+  int32 num_in_chars;  // num of chars in input string\n+  int32* char_start =\n+      reinterpret_cast<int32*>(malloc(in_data_len * 4));  // stores start index of chars\n+\n+  int32 curr_char_pos = 0;\n+  char curr_char_num_bytes = 0;\n+\n+  char_start[curr_char_pos] = 0;\n+  for (int32 i = 0; i < in_data_len; i = i + curr_char_num_bytes) {\n \n Review comment:\n   updated. please take a look\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-04T06:10:07.210+0000",
                    "updated": "2019-09-04T06:10:07.210+0000",
                    "started": "2019-09-04T06:10:07.209+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "306074",
                    "issueId": "13252792"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 28200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@14f69272[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@69eecfc3[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1a1dfa[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1f954aed[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@430ccd38[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@187c88be[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@48d9b386[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7d2e5a52[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@586e3dc2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@24ab7709[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@216ba599[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2e98972c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 28200,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Sep 13 21:01:21 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-09-13T21:01:21.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6344/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-08-24T09:06:18.000+0000",
        "updated": "2019-09-13T22:17:38.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "7h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 28200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Gandiva] substring does not handle multibyte characters",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13252792/comment/16929532",
                    "id": "16929532",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 5236\n[https://github.com/apache/arrow/pull/5236]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-09-13T21:01:21.688+0000",
                    "updated": "2019-09-13T21:01:21.688+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z06014:",
        "customfield_12314139": null
    }
}