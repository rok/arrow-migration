{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13424182",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424182",
    "key": "ARROW-15415",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351550",
                "id": "12351550",
                "name": "9.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-08-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350712",
                "id": "12350712",
                "description": "",
                "name": "6.0.1",
                "archived": false,
                "released": true,
                "releaseDate": "2021-11-18"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12631813",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12631813",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13392209",
                    "key": "ARROW-13470",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13392209",
                    "fields": {
                        "summary": "Build fails on windows with ARROW_PYTHON=ON",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            },
            {
                "id": "12631814",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12631814",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13407491",
                    "key": "ARROW-14393",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407491",
                    "fields": {
                        "summary": "[C++] GTest linking errors during the source release verification",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/1",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/blocker.svg",
                            "name": "Blocker",
                            "id": "1"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            },
            {
                "id": "12632657",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12632657",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13361221",
                    "key": "ARROW-11796",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13361221",
                    "fields": {
                        "summary": "[C++] Test, fix, and document debug builds with vcpkg packages",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/3",
                            "id": "3",
                            "description": "A task that needs to be done.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21148&avatarType=issuetype",
                            "name": "Task",
                            "subtask": false,
                            "avatarId": 21148
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
            "name": "kou",
            "key": "kou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
            },
            "displayName": "Kouhei Sutou",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332532",
                "id": "12332532",
                "name": "Documentation"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
            "name": "willjones127",
            "key": "willjones127",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Will Jones",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
            "name": "willjones127",
            "key": "willjones127",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Will Jones",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 21600,
            "total": 21600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 21600,
            "total": 21600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15415/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 36,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424182/worklog/713252",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 opened a new pull request #12230:\nURL: https://github.com/apache/arrow/pull/12230\n\n\n   This fixes various issues I encountered while trying to create a debug build on Windows using MSVC and vcpkg:\r\n   \r\n    * Python debug and release libraries are passed, but our Cmake scripts only expect one or the other. This is the same issue reported in ARROW-13470\r\n    * Since vcpkg upgraded gtest to 1.11.0, there is again a mismatch between the bundled gtest and the vcpkg versions. So we get the same error as was found in ARROW-14393. The only reason it was using bundled gtest was a carveout for an issue with Conda (does it even apply anymore?), so I made that if-statement more specific so it didn't interfere with vcpkg dependencies.\r\n    * Thrift could not find debug static libraries, because it was missing the \"d\" suffix. It should be libthriftmdd.lib, but was finding libthriftmd.lib.\r\n    * Additionally, the recommended clcache program from our Windows developer docs is no longer maintained. I found its dependency pyuv doesn't install on Windows anymore, and is also no longer maintained. I've dropped mention of it from the docs.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-22T19:46:20.600+0000",
                    "updated": "2022-01-22T19:46:20.600+0000",
                    "started": "2022-01-22T19:46:20.599+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "713252",
                    "issueId": "13424182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424182/worklog/713253",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12230:\nURL: https://github.com/apache/arrow/pull/12230#issuecomment-1019346664\n\n\n   https://issues.apache.org/jira/browse/ARROW-15415\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-22T19:46:43.269+0000",
                    "updated": "2022-01-22T19:46:43.269+0000",
                    "started": "2022-01-22T19:46:43.268+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "713253",
                    "issueId": "13424182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424182/worklog/713254",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on a change in pull request #12230:\nURL: https://github.com/apache/arrow/pull/12230#discussion_r790178468\n\n\n\n##########\nFile path: cpp/cmake_modules/BuildUtils.cmake\n##########\n@@ -370,7 +370,7 @@ function(ADD_ARROW_LIB LIB_NAME)\n \n     target_link_libraries(${LIB_NAME}_shared\n                           LINK_PUBLIC\n-                          \"$<BUILD_INTERFACE:${ARG_SHARED_LINK_LIBS}>\"\n+                          ${ARG_SHARED_LINK_LIBS}\n\nReview comment:\n       TODO: This works on my machine, but there's probably a reason `BUILD_INTERFACE` was there. \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-22T19:47:15.783+0000",
                    "updated": "2022-01-22T19:47:15.783+0000",
                    "started": "2022-01-22T19:47:15.783+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "713254",
                    "issueId": "13424182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424182/worklog/713665",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #12230:\nURL: https://github.com/apache/arrow/pull/12230#issuecomment-1019979433\n\n\n   There is a fork of clcache at https://github.com/Nuitka/clcache/ . Note we use clcache on AppVeyor, so it still works, presumably. See e.g. https://ci.appveyor.com/project/ApacheSoftwareFoundation/arrow/builds/42300017/job/imhh1jrmclhooba9#L2859\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-24T11:07:29.904+0000",
                    "updated": "2022-01-24T11:07:29.904+0000",
                    "started": "2022-01-24T11:07:29.903+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "713665",
                    "issueId": "13424182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424182/worklog/713666",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #12230:\nURL: https://github.com/apache/arrow/pull/12230#issuecomment-1019980182\n\n\n   cc @kou \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-24T11:08:24.226+0000",
                    "updated": "2022-01-24T11:08:24.226+0000",
                    "started": "2022-01-24T11:08:24.226+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "713666",
                    "issueId": "13424182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424182/worklog/714045",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #12230:\nURL: https://github.com/apache/arrow/pull/12230#discussion_r791168359\n\n\n\n##########\nFile path: cpp/cmake_modules/BuildUtils.cmake\n##########\n@@ -370,7 +370,7 @@ function(ADD_ARROW_LIB LIB_NAME)\n \n     target_link_libraries(${LIB_NAME}_shared\n                           LINK_PUBLIC\n-                          \"$<BUILD_INTERFACE:${ARG_SHARED_LINK_LIBS}>\"\n+                          ${ARG_SHARED_LINK_LIBS}\n\nReview comment:\n       It exports too much libraries to `ArrowTargets.cmake`. See also: 8ab1493c810ae354ce085c2c2052676f349b168a\r\n   \r\n   What build error was solved by this change?\r\n   Could you show build log for this?\n\n##########\nFile path: cpp/cmake_modules/ThirdpartyToolchain.cmake\n##########\n@@ -79,7 +79,7 @@ set(ARROW_THIRDPARTY_DEPENDENCIES\n # supported when building with MSVC because of the way that\n # conda-forge packages have 4 variants of the libraries packaged\n # together\n-if(MSVC AND \"${GTest_SOURCE}\" STREQUAL \"\")\n+if(MSVC AND \"${GTest_SOURCE}\" STREQUAL \"\" AND \"${ARROW_DEPENDENCY_SOURCE}\" STREQUAL \"CONDA\")\n\nReview comment:\n       Could you show full build log on error?\r\n   I think that avoiding old header and new library mix is the real fix.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-24T21:34:09.868+0000",
                    "updated": "2022-01-24T21:34:09.868+0000",
                    "started": "2022-01-24T21:34:09.868+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "714045",
                    "issueId": "13424182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424182/worklog/714053",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on a change in pull request #12230:\nURL: https://github.com/apache/arrow/pull/12230#discussion_r791176066\n\n\n\n##########\nFile path: cpp/cmake_modules/BuildUtils.cmake\n##########\n@@ -370,7 +370,7 @@ function(ADD_ARROW_LIB LIB_NAME)\n \n     target_link_libraries(${LIB_NAME}_shared\n                           LINK_PUBLIC\n-                          \"$<BUILD_INTERFACE:${ARG_SHARED_LINK_LIBS}>\"\n+                          ${ARG_SHARED_LINK_LIBS}\n\nReview comment:\n       I can show a full log later, but I've described what I was seeing in this Jira comment: https://issues.apache.org/jira/browse/ARROW-13470?focusedCommentId=17480335\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-24T21:45:49.892+0000",
                    "updated": "2022-01-24T21:45:49.892+0000",
                    "started": "2022-01-24T21:45:49.892+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "714053",
                    "issueId": "13424182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424182/worklog/714063",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on a change in pull request #12230:\nURL: https://github.com/apache/arrow/pull/12230#discussion_r791188585\n\n\n\n##########\nFile path: cpp/cmake_modules/BuildUtils.cmake\n##########\n@@ -370,7 +370,7 @@ function(ADD_ARROW_LIB LIB_NAME)\n \n     target_link_libraries(${LIB_NAME}_shared\n                           LINK_PUBLIC\n-                          \"$<BUILD_INTERFACE:${ARG_SHARED_LINK_LIBS}>\"\n+                          ${ARG_SHARED_LINK_LIBS}\n\nReview comment:\n       Build error:\r\n   \r\n   ```\r\n   [build] [381/559] Linking CXX shared library debug\\arrow_python.dll\r\n   [build] FAILED: debug/arrow_python.dll debug/arrow_python.lib \r\n   [build] cmd.exe /C \"cd . && \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe\" -E vs_link_dll --intdir=src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir --rc=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100190~1.0\\x64\\rc.exe --mt=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100190~1.0\\x64\\mt.exe --manifests  -- C:\\PROGRA~1\\MICROS~4\\2022\\COMMUN~1\\VC\\Tools\\MSVC\\1430~1.307\\bin\\Hostx64\\x64\\link.exe /nologo src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\arrow_to_pandas.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\benchmark.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\common.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\datetime.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\decimal.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\deserialize.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\extension_type.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\helpers.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\inference.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\init.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\io.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\ipc.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\numpy_convert.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\numpy_to_arrow.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\python_to_arrow.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\pyarrow.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\serialize.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\csv.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\filesystem.cc.obj  /out:debug\\arrow_python.dll /implib:debug\\arrow_python.lib /pdb:debug\\arrow_python.pdb /dll /version:700.0 /machine:x64  /NODEFAULTLIB:LIBCMT /debug /INCREMENTAL -Wl,--version-script=C:/Users/voltron/arrow/cpp/src/arrow/symbols.map  debug\\arrow.lib  optimized.lib  C:\\Users\\voltron\\AppData\\Local\\Programs\\Python\\Python310\\libs\\python310.lib  debug.lib  C:\\Users\\voltron\\AppData\\Local\\Programs\\Python\\Python310\\libs\\python310_d.lib  ..\\..\\vcpkg_installed\\x64-windows\\lib\\brotlienc.lib  ..\\..\\vcpkg_installed\\x64-windows\\lib\\brotlidec.lib  ..\\..\\vcpkg_installed\\x64-windows\\lib\\brotlicommon.lib  ..\\..\\vcpkg_installed\\x64-windows\\debug\\lib\\utf8proc.lib  ..\\..\\vcpkg_installed\\x64-windows\\debug\\lib\\re2.lib  mimalloc_ep\\src\\mimalloc_ep\\lib\\mimalloc-1.7\\mimalloc-static-debug.lib  ws2_32.lib  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib  && cmd.exe /C \"cd /D C:\\Users\\voltron\\arrow\\cpp\\build\\user-python-debug-windows\\src\\arrow\\python && C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -noprofile -executionpolicy Bypass -file C:/Users/voltron/arrow/vcpkg/scripts/buildsystems/msbuild/applocal.ps1 -targetBinary C:/Users/voltron/arrow/cpp/build/user-python-debug-windows/debug/arrow_python.dll -installedDir C:/Users/voltron/arrow/cpp/vcpkg_installed/x64-windows/debug/bin -OutVariable out\"\"\r\n   [build] LINK Pass 1: command \"C:\\PROGRA~1\\MICROS~4\\2022\\COMMUN~1\\VC\\Tools\\MSVC\\1430~1.307\\bin\\Hostx64\\x64\\link.exe /nologo src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\arrow_to_pandas.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\benchmark.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\common.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\datetime.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\decimal.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\deserialize.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\extension_type.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\helpers.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\inference.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\init.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\io.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\ipc.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\numpy_convert.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\numpy_to_arrow.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\python_to_arrow.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\pyarrow.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\serialize.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\csv.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\filesystem.cc.obj /out:debug\\arrow_python.dll /implib:debug\\arrow_python.lib /pdb:debug\\arrow_python.pdb /dll /version:700.0 /machine:x64 /NODEFAULTLIB:LIBCMT /debug /INCREMENTAL -Wl,--version-script=C:/Users/voltron/arrow/cpp/src/arrow/symbols.map debug\\arrow.lib optimized.lib C:\\Users\\voltron\\AppData\\Local\\Programs\\Python\\Python310\\libs\\python310.lib debug.lib C:\\Users\\voltron\\AppData\\Local\\Programs\\Python\\Python310\\libs\\python310_d.lib ..\\..\\vcpkg_installed\\x64-windows\\lib\\brotlienc.lib ..\\..\\vcpkg_installed\\x64-windows\\lib\\brotlidec.lib ..\\..\\vcpkg_installed\\x64-windows\\lib\\brotlicommon.lib ..\\..\\vcpkg_installed\\x64-windows\\debug\\lib\\utf8proc.lib ..\\..\\vcpkg_installed\\x64-windows\\debug\\lib\\re2.lib mimalloc_ep\\src\\mimalloc_ep\\lib\\mimalloc-1.7\\mimalloc-static-debug.lib ws2_32.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir/intermediate.manifest src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir/manifest.res\" failed (exit code 1104) with the following output:\r\n   [build] LINK : warning LNK4044: unrecognized option '/Wl,--version-script=C:/Users/voltron/arrow/cpp/src/arrow/symbols.map'; ignored\r\n   [build] LINK : fatal error LNK1104: cannot open file 'optimized.lib'\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-24T22:05:31.107+0000",
                    "updated": "2022-01-24T22:05:31.107+0000",
                    "started": "2022-01-24T22:05:31.107+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "714063",
                    "issueId": "13424182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424182/worklog/714066",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on a change in pull request #12230:\nURL: https://github.com/apache/arrow/pull/12230#discussion_r791190317\n\n\n\n##########\nFile path: cpp/cmake_modules/ThirdpartyToolchain.cmake\n##########\n@@ -79,7 +79,7 @@ set(ARROW_THIRDPARTY_DEPENDENCIES\n # supported when building with MSVC because of the way that\n # conda-forge packages have 4 variants of the libraries packaged\n # together\n-if(MSVC AND \"${GTest_SOURCE}\" STREQUAL \"\")\n+if(MSVC AND \"${GTest_SOURCE}\" STREQUAL \"\" AND \"${ARROW_DEPENDENCY_SOURCE}\" STREQUAL \"CONDA\")\n\nReview comment:\n       Here's the build error:\r\n   \r\n   ```\r\n   [build] [2/174] Linking CXX shared library debug\\arrow_testing.dll\r\n   [build] FAILED: debug/arrow_testing.dll debug/arrow_testing.lib \r\n   [build] cmd.exe /C \"cd . && \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe\" -E vs_link_dll --intdir=src\\arrow\\CMakeFiles\\arrow_testing_shared.dir --rc=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100190~1.0\\x64\\rc.exe --mt=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100190~1.0\\x64\\mt.exe --manifests  -- C:\\PROGRA~1\\MICROS~4\\2022\\COMMUN~1\\VC\\Tools\\MSVC\\1430~1.307\\bin\\Hostx64\\x64\\link.exe /nologo src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\io\\test_common.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\ipc\\test_common.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\testing\\json_integration.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\testing\\json_internal.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\testing\\gtest_util.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\testing\\random.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\testing\\generator.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\testing\\util.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\csv\\test_common.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\compute\\exec\\test_util.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\filesystem\\test_util.cc.obj  /out:debug\\arrow_testing.dll /implib:debug\\arrow_testing.lib /pdb:debug\\arrow_testing.pdb /dll /version:700.0 /machine:x64  /NODEFAULTLIB:LIBCMT /debug /INCREMENTAL  debug\\arrow.lib  googletest_ep-prefix\\lib\\gtestd.lib  ..\\..\\vcpkg_installed\\x64-windows\\lib\\brotlienc.lib  ..\\..\\vcpkg_installed\\x64-windows\\lib\\brotlidec.lib  ..\\..\\vcpkg_installed\\x64-windows\\lib\\brotlicommon.lib  ..\\..\\vcpkg_installed\\x64-windows\\debug\\lib\\utf8proc.lib  ..\\..\\vcpkg_installed\\x64-windows\\debug\\lib\\re2.lib  mimalloc_ep\\src\\mimalloc_ep\\lib\\mimalloc-1.7\\mimalloc-static-debug.lib  ws2_32.lib  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib  && cmd.exe /C \"cd /D C:\\Users\\voltron\\arrow\\cpp\\build\\user-python-debug-windows\\src\\arrow && C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -noprofile -executionpolicy Bypass -file C:/Users/voltron/arrow/vcpkg/scripts/buildsystems/msbuild/applocal.ps1 -targetBinary C:/Users/voltron/arrow/cpp/build/user-python-debug-windows/debug/arrow_testing.dll -installedDir C:/Users/voltron/arrow/cpp/vcpkg_installed/x64-windows/debug/bin -OutVariable out\"\"\r\n   [build] LINK Pass 1: command \"C:\\PROGRA~1\\MICROS~4\\2022\\COMMUN~1\\VC\\Tools\\MSVC\\1430~1.307\\bin\\Hostx64\\x64\\link.exe /nologo src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\io\\test_common.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\ipc\\test_common.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\testing\\json_integration.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\testing\\json_internal.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\testing\\gtest_util.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\testing\\random.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\testing\\generator.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\testing\\util.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\csv\\test_common.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\compute\\exec\\test_util.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\filesystem\\test_util.cc.obj /out:debug\\arrow_testing.dll /implib:debug\\arrow_testing.lib /pdb:debug\\arrow_testing.pdb /dll /version:700.0 /machine:x64 /NODEFAULTLIB:LIBCMT /debug /INCREMENTAL debug\\arrow.lib googletest_ep-prefix\\lib\\gtestd.lib ..\\..\\vcpkg_installed\\x64-windows\\lib\\brotlienc.lib ..\\..\\vcpkg_installed\\x64-windows\\lib\\brotlidec.lib ..\\..\\vcpkg_installed\\x64-windows\\lib\\brotlicommon.lib ..\\..\\vcpkg_installed\\x64-windows\\debug\\lib\\utf8proc.lib ..\\..\\vcpkg_installed\\x64-windows\\debug\\lib\\re2.lib mimalloc_ep\\src\\mimalloc_ep\\lib\\mimalloc-1.7\\mimalloc-static-debug.lib ws2_32.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\\arrow\\CMakeFiles\\arrow_testing_shared.dir/intermediate.manifest src\\arrow\\CMakeFiles\\arrow_testing_shared.dir/manifest.res\" failed (exit code 1120) with the following output:\r\n   [build]    Creating library debug\\arrow_testing.lib and object debug\\arrow_testing.exp\r\n   [build] gtest_util.cc.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) class testing::AssertionResult __cdecl testing::internal::CmpHelperEQ(char const *,char const *,__int64,__int64)\" (__imp_?CmpHelperEQ@internal@testing@@YA?AVAssertionResult@2@PEBD0_J1@Z) referenced in function \"public: static class testing::AssertionResult __cdecl testing::internal::EqHelper::Compare(char const *,char const *,__int64,__int64)\" (?Compare@EqHelper@internal@testing@@SA?AVAssertionResult@3@PEBD0_J1@Z)\r\n   [build] test_util.cc.obj : error LNK2001: unresolved external symbol \"__declspec(dllimport) class testing::AssertionResult __cdecl testing::internal::CmpHelperEQ(char const *,char const *,__int64,__int64)\" (__imp_?CmpHelperEQ@internal@testing@@YA?AVAssertionResult@2@PEBD0_J1@Z)\r\n   [build] test_util.cc.obj : error LNK2001: unresolved external symbol \"__declspec(dllimport) class testing::AssertionResult __cdecl testing::internal::CmpHelperEQ(char const *,char const *,__int64,__int64)\" (__imp_?CmpHelperEQ@internal@testing@@YA?AVAssertionResult@2@PEBD0_J1@Z)\r\n   [build] test_util.cc.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) void __cdecl testing::internal2::PrintBytesInObjectTo(unsigned char const *,unsigned __int64,class std::basic_ostream<char,struct std::char_traits<char> > *)\" (__imp_?PrintBytesInObjectTo@internal2@testing@@YAXPEBE_KPEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z) referenced in function \"public: static void __cdecl testing::internal2::TypeWithoutFormatter<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class arrow::compute::ExecNode *> > >,2>::PrintValue(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class arrow::compute::ExecNode *> > > const &,class std::basic_ostream<char,struct std::char_traits<char> > *)\" (?PrintValue@?$TypeWithoutFormatter@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVExecNode@compute@arrow@@@std@@@std@@@std@@$01@internal2@testing@@SAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVExecNode@compute@arrow@@@std@@@std@@@std@@PEAV?$basic_ostream@DU?$char_traits@D@std@@@5@@Z)\r\n   [build] test_util.cc.obj : error LNK2001: unresolved external symbol \"__declspec(dllimport) void __cdecl testing::internal2::PrintBytesInObjectTo(unsigned char const *,unsigned __int64,class std::basic_ostream<char,struct std::char_traits<char> > *)\" (__imp_?PrintBytesInObjectTo@internal2@testing@@YAXPEBE_KPEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z)\r\n   [build] debug\\arrow_testing.dll : fatal error LNK1120: 2 unresolved externals\r\n   ```\r\n   \r\n   And then here's the config log:\r\n   \r\n   ```\r\n   [main] Configuring folder: arrow \r\n   [proc] Executing command: \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.EXE\" -DARROW_GANDIVA=OFF -DARROW_FILESYSTEM=ON -DARROW_S3=OFF -DARROW_HDFS=OFF -DARROW_PLASMA=OFF -DARROW_FLIGHT=OFF -DARROW_BUILD_INTEGRATION=ON -DARROW_BUILD_TESTS=ON -DARROW_EXTRA_ERROR_CONTEXT=ON -DCMAKE_BUILD_TYPE=Debug -DARROW_BUILD_STATIC=OFF -DARROW_PYTHON=ON -DARROW_ENGINE=ON -DARROW_MIMALLOC=ON -DARROW_PARQUET=ON -DARROW_WITH_BROTLI=ON -DARROW_WITH_BZ2=ON -DARROW_WITH_LZ4=ON -DARROW_WITH_RE2=ON -DARROW_WITH_SNAPPY=ON -DARROW_WITH_UTF8PROC=ON -DARROW_WITH_ZLIB=ON -DARROW_WITH_ZSTD=ON -DARROW_COMPUTE=ON -DARROW_CSV=ON -DARROW_DATASET=ON -DARROW_JSON=ON -DARROW_INSTALL_NAME_RPATH=OFF -DCMAKE_INSTALL_PREFIX=c:/Users/voltron/arrow/cpp/build/user-python-debug-windows/dist -DARROW_DEPENDENCY_SOURCE=VCPKG -DVCPKG_TARGET_TRIPLET=x64-windows -DA=x64 -Hc:/Users/voltron/arrow/cpp -Bc:/Users/voltron/arrow/cpp/build/user-python-debug-windows -G Ninja\r\n   [cmake] -- Building using CMake version: 3.21.21080301-MSVC_2\r\n   [cmake] -- Using vcpkg to find dependencies\r\n   [cmake] -- Using CMAKE_TOOLCHAIN_FILE: C:/Users/voltron/arrow/vcpkg/scripts/buildsystems/vcpkg.cmake\r\n   [cmake] -- Using VCPKG_ROOT: C:/Users/voltron/arrow/vcpkg\r\n   [cmake] -- Looking for installed packages in C:/Users/voltron/arrow/cpp/vcpkg_installed\r\n   [cmake] -- Using vcpkg installed libraries directory: C:/Users/voltron/arrow/cpp/vcpkg_installed\r\n   [cmake] -- Using VCPKG_TARGET_TRIPLET: x64-windows\r\n   [cmake] -- Using VCPKG_BUILD_TYPE: debug\r\n   [cmake] -- Using VCPKG_LIBRARY_LINKAGE: static\r\n   [cmake] -- Running vcpkg install\r\n   [cmake] Detecting compiler hash for triplet x64-windows...\r\n   [cmake] All requested packages are currently installed.\r\n   [cmake] Restored 0 packages from C:\\Users\\voltron\\AppData\\Local\\vcpkg\\archives in 145.7 us. Use --debug to see more details.\r\n   [cmake] \r\n   [cmake] Total elapsed time: 3.479 s\r\n   [cmake] \r\n   [cmake] The package abseil provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(absl CONFIG REQUIRED)\r\n   [cmake]     # Note: 125 target(s) were omitted.\r\n   [cmake]     target_link_libraries(main PRIVATE absl::any absl::base absl::bits absl::city)\r\n   [cmake] \r\n   [cmake] The package zlib is compatible with built-in CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(ZLIB REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE ZLIB::ZLIB)\r\n   [cmake] \r\n   [cmake] The package aws-sdk-cpp:x64-windows provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(AWSSDK CONFIG COMPONENTS core dynamodb kinesis s3 REQUIRED)\r\n   [cmake]     target_include_directories(main PRIVATE ${AWSSDK_INCLUDE_DIRS})\r\n   [cmake]     target_link_libraries(main PRIVATE ${AWSSDK_LIBRARIES})\r\n   [cmake] \r\n   [cmake] The package benchmark provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(benchmark CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE benchmark::benchmark benchmark::benchmark_main)\r\n   [cmake] \r\n   [cmake] The package boost is compatible with built-in CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(Boost REQUIRED [COMPONENTS <libs>...])\r\n   [cmake]     target_link_libraries(main PRIVATE Boost::boost Boost::<lib1> Boost::<lib2> ...)\r\n   [cmake] \r\n   [cmake] The package openssl is compatible with built-in CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(OpenSSL REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE OpenSSL::SSL OpenSSL::Crypto)\r\n   [cmake] \r\n   [cmake] The package brotli provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(unofficial-brotli CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE unofficial::brotli::brotlidec unofficial::brotli::brotlienc unofficial::brotli::brotlicommon)\r\n   [cmake] \r\n   [cmake] The package bzip2 is compatible with built-in CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(BZip2 REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE BZip2::BZip2)\r\n   [cmake] \r\n   [cmake] The package c-ares provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(c-ares CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE c-ares::cares c-ares::cares_shared c-ares::cares_static)\r\n   [cmake] \r\n   [cmake] The package curl provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(CURL CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE CURL::libcurl)\r\n   [cmake] \r\n   [cmake] The package flatbuffers provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(Flatbuffers CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE flatbuffers::flatbuffers)\r\n   [cmake] \r\n   [cmake] The package gflags provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(gflags CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE gflags::gflags)\r\n   [cmake] \r\n   [cmake] The package glog provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(glog CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE glog::glog)\r\n   [cmake] \r\n   [cmake] The package google-cloud-cpp provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(google_cloud_cpp_common CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE google_cloud_cpp_common google-cloud-cpp::common)\r\n   [cmake] \r\n   [cmake]     find_package(google_cloud_cpp_storage CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE CURL::libcurl google-cloud-cpp::storage google-cloud-cpp::experimental-storage-grpc)\r\n   [cmake] \r\n   [cmake] The package re2 provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(re2 CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE re2::re2)\r\n   [cmake] \r\n   [cmake] The package protobuf provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(protobuf CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE protobuf::libprotoc protobuf::libprotobuf protobuf::libprotobuf-lite)\r\n   [cmake] \r\n   [cmake] The package grpc provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(gRPC CONFIG REQUIRED)\r\n   [cmake]     # Note: 8 target(s) were omitted.\r\n   [cmake]     target_link_libraries(main PRIVATE gRPC::gpr gRPC::upb gRPC::grpc gRPC::grpc++)\r\n   [cmake] \r\n   [cmake]     find_package(modules CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE re2::re2 c-ares::cares)\r\n   [cmake] \r\n   [cmake] The package gtest provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(GTest CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE GTest::gmock GTest::gtest GTest::gmock_main GTest::gtest_main)\r\n   [cmake] \r\n   [cmake] The package lz4 provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(lz4 CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE lz4::lz4)\r\n   [cmake] \r\n   [cmake] The package zstd provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(zstd CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE zstd::libzstd_shared)\r\n   [cmake] \r\n   [cmake] The package snappy provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(Snappy CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE Snappy::snappy)\r\n   [cmake] \r\n   [cmake] The package orc does not provide CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(protobuf CONFIG REQUIRED)\r\n   [cmake]     find_package(ZLIB REQUIRED)\r\n   [cmake]     find_package(Snappy CONFIG REQUIRED)\r\n   [cmake] \r\n   [cmake]     find_library(LZ4_LIBRARY NAMES lz4d lz4)\r\n   [cmake]     find_library(ZSTD_LIBRARY NAMES zstd)\r\n   [cmake]     find_library(ORC_LIBRARY NAMES orc)\r\n   [cmake] \r\n   [cmake]     target_link_libraries(main PRIVATE ${ORC_LIBRARY} protobuf::libprotoc protobuf::libprotobuf Snappy::snappy ${LZ4_LIBRARY} ${ZSTD_LIBRARY} ZLIB::ZLIB)\r\n   [cmake] \r\n   [cmake] The package rapidjson provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(RapidJSON CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE rapidjson)\r\n   [cmake] \r\n   [cmake] The package sqlite3 provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(unofficial-sqlite3 CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE unofficial::sqlite3::sqlite3)\r\n   [cmake] \r\n   [cmake] The package thrift provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(Thrift CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE thrift::thrift thriftz::thriftz thriftnb::thriftnb)\r\n   [cmake] \r\n   [cmake] The package utf8proc provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(unofficial-utf8proc CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE utf8proc)\r\n   [cmake] \r\n   [cmake] -- Running vcpkg install - done\r\n   [cmake] -- Arrow version: 7.0.0 (full: '7.0.0-SNAPSHOT')\r\n   [cmake] -- Arrow SO version: 700 (full: 700.0.0)\r\n   [cmake] -- clang-tidy 12 not found\r\n   [cmake] -- clang-format 12 not found\r\n   [cmake] -- Could NOT find ClangTools (missing: CLANG_FORMAT_BIN CLANG_TIDY_BIN) \r\n   [cmake] -- infer not found\r\n   [cmake] -- Found Python3: C:/Users/voltron/AppData/Local/Programs/Python/Python310/python.exe (found version \"3.10.1\") found components: Interpreter \r\n   [cmake] -- Found cpplint executable at C:/Users/voltron/arrow/cpp/build-support/cpplint.py\r\n   [cmake] -- System processor: AMD64\r\n   [cmake] -- Arrow build warning level: CHECKIN\r\n   [cmake] Configured for DEBUG build (set with cmake -DCMAKE_BUILD_TYPE={release,debug,...})\r\n   [cmake] -- Build Type: DEBUG\r\n   [cmake] -- Using SYSTEM approach to find dependencies\r\n   [cmake] -- ARROW_ABSL_BUILD_VERSION: 20210324.2\r\n   [cmake] -- ARROW_ABSL_BUILD_SHA256_CHECKSUM: 59b862f50e710277f8ede96f083a5bb8d7c9595376146838b9580be90374ee1f\r\n   [cmake] -- ARROW_AWSSDK_BUILD_VERSION: 1.8.133\r\n   [cmake] -- ARROW_AWSSDK_BUILD_SHA256_CHECKSUM: d6c495bc06be5e21dac716571305d77437e7cfd62a2226b8fe48d9ab5785a8d6\r\n   [cmake] -- ARROW_AWS_CHECKSUMS_BUILD_VERSION: v0.1.12\r\n   [cmake] -- ARROW_AWS_CHECKSUMS_BUILD_SHA256_CHECKSUM: 394723034b81cc7cd528401775bc7aca2b12c7471c92350c80a0e2fb9d2909fe\r\n   [cmake] -- ARROW_AWS_C_COMMON_BUILD_VERSION: v0.6.9\r\n   [cmake] -- ARROW_AWS_C_COMMON_BUILD_SHA256_CHECKSUM: 928a3e36f24d1ee46f9eec360ec5cebfe8b9b8994fe39d4fa74ff51aebb12717\r\n   [cmake] -- ARROW_AWS_C_EVENT_STREAM_BUILD_VERSION: v0.1.5\r\n   [cmake] -- ARROW_AWS_C_EVENT_STREAM_BUILD_SHA256_CHECKSUM: f1b423a487b5d6dca118bfc0d0c6cc596dc476b282258a3228e73a8f730422d4\r\n   [cmake] -- ARROW_BOOST_BUILD_VERSION: 1.75.0\r\n   [cmake] -- ARROW_BOOST_BUILD_SHA256_CHECKSUM: cb97b36e2295a321c34851e0455bc2630ad6c691d4f9f589170066cd11c835b4\r\n   [cmake] -- ARROW_BROTLI_BUILD_VERSION: v1.0.9\r\n   [cmake] -- ARROW_BROTLI_BUILD_SHA256_CHECKSUM: f9e8d81d0405ba66d181529af42a3354f838c939095ff99930da6aa9cdf6fe46\r\n   [cmake] -- ARROW_BZIP2_BUILD_VERSION: 1.0.8\r\n   [cmake] -- ARROW_BZIP2_BUILD_SHA256_CHECKSUM: ab5a03176ee106d3f0fa90e381da478ddae405918153cca248e682cd0c4a2269\r\n   [cmake] -- ARROW_CARES_BUILD_VERSION: 1.17.2\r\n   [cmake] -- ARROW_CARES_BUILD_SHA256_CHECKSUM: 4803c844ce20ce510ef0eb83f8ea41fa24ecaae9d280c468c582d2bb25b3913d\r\n   [cmake] -- ARROW_CRC32C_BUILD_VERSION: 1.1.2\r\n   [cmake] -- ARROW_CRC32C_BUILD_SHA256_CHECKSUM: ac07840513072b7fcebda6e821068aa04889018f24e10e46181068fb214d7e56\r\n   [cmake] -- ARROW_GBENCHMARK_BUILD_VERSION: v1.6.0\r\n   [cmake] -- ARROW_GBENCHMARK_BUILD_SHA256_CHECKSUM: 1f71c72ce08d2c1310011ea6436b31e39ccab8c2db94186d26657d41747c85d6\r\n   [cmake] -- ARROW_GFLAGS_BUILD_VERSION: v2.2.2\r\n   [cmake] -- ARROW_GFLAGS_BUILD_SHA256_CHECKSUM: 34af2f15cf7367513b352bdcd2493ab14ce43692d2dcd9dfc499492966c64dcf\r\n   [cmake] -- ARROW_GLOG_BUILD_VERSION: v0.5.0\r\n   [cmake] -- ARROW_GLOG_BUILD_SHA256_CHECKSUM: eede71f28371bf39aa69b45de23b329d37214016e2055269b3b5e7cfd40b59f5\r\n   [cmake] -- ARROW_GOOGLE_CLOUD_CPP_BUILD_VERSION: v1.31.1\r\n   [cmake] -- ARROW_GOOGLE_CLOUD_CPP_BUILD_SHA256_CHECKSUM: dc7cbf95b506a84b48cf71e0462985d262183edeaabdacaaee2109852394a609\r\n   [cmake] -- ARROW_GRPC_BUILD_VERSION: v1.35.0\r\n   [cmake] -- ARROW_GRPC_BUILD_SHA256_CHECKSUM: 27dd2fc5c9809ddcde8eb6fa1fa278a3486566dfc28335fca13eb8df8bd3b958\r\n   [cmake] -- ARROW_GTEST_BUILD_VERSION: 1.11.0\r\n   [cmake] -- ARROW_GTEST_BUILD_SHA256_CHECKSUM: b4870bf121ff7795ba20d20bcdd8627b8e088f2d1dab299a031c1034eddc93d5\r\n   [cmake] -- ARROW_JEMALLOC_BUILD_VERSION: 5.2.1\r\n   [cmake] -- ARROW_JEMALLOC_BUILD_SHA256_CHECKSUM: 34330e5ce276099e2e8950d9335db5a875689a4c6a56751ef3b1d8c537f887f6\r\n   [cmake] -- ARROW_LZ4_BUILD_VERSION: 8f61d8eb7c6979769a484cde8df61ff7c4c77765\r\n   [cmake] -- ARROW_LZ4_BUILD_SHA256_CHECKSUM: 5b072d848f2f93fddb97e1143e22c1bd7fa19fc8431ee69e21758190a88125b4\r\n   [cmake] -- ARROW_MIMALLOC_BUILD_VERSION: v1.7.3\r\n   [cmake] -- ARROW_MIMALLOC_BUILD_SHA256_CHECKSUM: 0f987bda01ca9df87ec90e9d98c63fa893ee61f3cca565e5ca5ed744fdcc5109\r\n   [cmake] -- ARROW_NLOHMANN_JSON_BUILD_VERSION: v3.10.2\r\n   [cmake] -- ARROW_NLOHMANN_JSON_BUILD_SHA256_CHECKSUM: 081ed0f9f89805c2d96335c3acfa993b39a0a5b4b4cef7edb68dd2210a13458c\r\n   [cmake] -- ARROW_OPENTELEMETRY_BUILD_VERSION: v1.1.0\r\n   [cmake] -- ARROW_OPENTELEMETRY_BUILD_SHA256_CHECKSUM: f8fd3adddd47be382dc79c19d7e7efcf86a0dfbb5a237db6e0618dbb7eb8e058\r\n   [cmake] -- ARROW_OPENTELEMETRY_PROTO_BUILD_VERSION: v0.11.0\r\n   [cmake] -- ARROW_OPENTELEMETRY_PROTO_BUILD_SHA256_CHECKSUM: 985367f8905e91018e636cbf0d83ab3f834b665c4f5899a27d10cae9657710e2\r\n   [cmake] -- ARROW_ORC_BUILD_VERSION: 1.7.2\r\n   [cmake] -- ARROW_ORC_BUILD_SHA256_CHECKSUM: ef39bae755116fecb07fb4334656f984ba8ce7cdb1c64de078d3ed186b286007\r\n   [cmake] -- ARROW_PROTOBUF_BUILD_VERSION: v3.18.1\r\n   [cmake] -- ARROW_PROTOBUF_BUILD_SHA256_CHECKSUM: b8ab9bbdf0c6968cf20060794bc61e231fae82aaf69d6e3577c154181991f576\r\n   [cmake] -- ARROW_RAPIDJSON_BUILD_VERSION: 1a803826f1197b5e30703afe4b9c0e7dd48074f5\r\n   [cmake] -- ARROW_RAPIDJSON_BUILD_SHA256_CHECKSUM: 0b6b780b6c534bfb0b23d29910bfe361e486bcfeaf106db8bc8995792072905a\r\n   [cmake] -- ARROW_RE2_BUILD_VERSION: 2021-11-01\r\n   [cmake] -- ARROW_RE2_BUILD_SHA256_CHECKSUM: 8c45f7fba029ab41f2a7e6545058d9eec94eef97ce70df58e92d85cfc08b4669\r\n   [cmake] -- ARROW_SNAPPY_BUILD_VERSION: 1.1.9\r\n   [cmake] -- ARROW_SNAPPY_BUILD_SHA256_CHECKSUM: 75c1fbb3d618dd3a0483bff0e26d0a92b495bbe5059c8b4f1c962b478b6e06e7\r\n   [cmake] -- ARROW_SNAPPY_OLD_BUILD_VERSION: 1.1.8\r\n   [cmake] -- ARROW_SNAPPY_OLD_BUILD_SHA256_CHECKSUM: 16b677f07832a612b0836178db7f374e414f94657c138e6993cbfc5dcc58651f\r\n   [cmake] -- ARROW_THRIFT_BUILD_VERSION: 0.13.0\r\n   [cmake] -- ARROW_THRIFT_BUILD_SHA256_CHECKSUM: 7ad348b88033af46ce49148097afe354d513c1fca7c607b59c33ebb6064b5179\r\n   [cmake] -- ARROW_UTF8PROC_BUILD_VERSION: v2.7.0\r\n   [cmake] -- ARROW_UTF8PROC_BUILD_SHA256_CHECKSUM: 4bb121e297293c0fd55f08f83afab6d35d48f0af4ecc07523ad8ec99aa2b12a1\r\n   [cmake] -- ARROW_XSIMD_BUILD_VERSION: aeec9c872c8b475dedd7781336710f2dd2666cb2\r\n   [cmake] -- ARROW_XSIMD_BUILD_SHA256_CHECKSUM: 0a841e6c8acf216150e4fc19fca8e29fbab9614b56ac7b96e56019264ca27b26\r\n   [cmake] -- ARROW_ZLIB_BUILD_VERSION: 1.2.11\r\n   [cmake] -- ARROW_ZLIB_BUILD_SHA256_CHECKSUM: c3e5e9fdd5004dcb542feda5ee4f0ff0744628baf8ed2dd5d66f8ca1197cb1a1\r\n   [cmake] -- ARROW_ZSTD_BUILD_VERSION: v1.5.1\r\n   [cmake] -- ARROW_ZSTD_BUILD_SHA256_CHECKSUM: dc05773342b28f11658604381afd22cb0a13e8ba17ff2bd7516df377060c18dd\r\n   [cmake] -- Boost include dir: C:/Users/voltron/arrow/cpp/vcpkg_installed/x64-windows/include\r\n   [cmake] -- Boost libraries: Boost::system;Boost::filesystem\r\n   [cmake] -- Providing CMake module for Snappy\r\n   [cmake] -- Providing CMake module for Brotli\r\n   [cmake] -- Building without OpenSSL support. Minimum OpenSSL version 1.0.2 required.\r\n   [cmake] -- Providing CMake module for Thrift\r\n   [cmake] -- Building (vendored) mimalloc from source\r\n   [cmake] -- Building gtest from source\r\n   [cmake] -- RapidJSON found. Headers: C:/Users/voltron/arrow/cpp/vcpkg_installed/x64-windows/share/rapidjson/../../include\r\n   [cmake] -- Building xsimd from source\r\n   [cmake] -- Providing CMake module for Lz4\r\n   [cmake] -- Using ZSTD_ROOT: C:/Users/voltron/arrow/cpp/vcpkg_installed/x64-windows\r\n   [cmake] -- Providing CMake module for zstd\r\n   [cmake] -- Providing CMake module for re2Alt\r\n   [cmake] -- Providing CMake module for utf8proc\r\n   [cmake] -- Found hdfs.h at: C:/Users/voltron/arrow/cpp/thirdparty/hadoop/include/hdfs.h\r\n   [cmake] -- All bundled static libraries: mimalloc::mimalloc\r\n   [cmake] -- CMAKE_C_FLAGS: /DWIN32 /D_WINDOWS /W3  /W3 /EHsc /wd5105 /bigobj /utf-8 /W3 /wd4365 /wd4267 /wd4838 /WX /wd4800 /wd4996 /wd4065  \r\n   [cmake] -- CMAKE_CXX_FLAGS:  /DWIN32 /D_WINDOWS  /GR /EHsc /D_SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING  /W3 /EHsc /wd5105 /bigobj /utf-8 /W3 /wd4365 /wd4267 /wd4838 /WX /wd4800 /wd4996 /wd4065  \r\n   [cmake] -- Could NOT find Backtrace (missing: Backtrace_LIBRARY Backtrace_INCLUDE_DIR) \r\n   [cmake] -- Found Python3: C:/Users/voltron/AppData/Local/Programs/Python/Python310/python.exe (found version \"3.10.1\") found components: Interpreter Development NumPy Development.Module Development.Embed \r\n   [cmake] -- ---------------------------------------------------------------------\r\n   [cmake] -- Arrow version:                                 7.0.0-SNAPSHOT\r\n   [cmake] -- \r\n   [cmake] -- Build configuration summary:\r\n   [cmake] --   Generator: Ninja\r\n   [cmake] --   Build type: DEBUG\r\n   [cmake] --   Source directory: C:/Users/voltron/arrow/cpp\r\n   [cmake] --   Install prefix: C:/Users/voltron/arrow/cpp/build/user-python-debug-windows/dist\r\n   [cmake] -- \r\n   [cmake] -- Compile and link options:\r\n   [cmake] -- \r\n   [cmake] --   ARROW_CXXFLAGS=\"\" [default=\"\"]\r\n   [cmake] --       Compiler flags to append when compiling Arrow\r\n   [cmake] --   ARROW_BUILD_STATIC=OFF [default=ON]\r\n   [cmake] --       Build static libraries\r\n   [cmake] --   ARROW_BUILD_SHARED=ON [default=ON]\r\n   [cmake] --       Build shared libraries\r\n   [cmake] --   ARROW_PACKAGE_KIND=\"\" [default=\"\"]\r\n   [cmake] --       Arbitrary string that identifies the kind of package\r\n   [cmake] --       (for informational purposes)\r\n   [cmake] --   ARROW_GIT_ID=f585a470539d61cbc237b66a1851149d28adc176 [default=\"\"]\r\n   [cmake] --       The Arrow git commit id (if any)\r\n   [cmake] --   ARROW_GIT_DESCRIPTION=apache-arrow-7.0.0.dev-505-gf585a4705 [default=\"\"]\r\n   [cmake] --       The Arrow git commit description (if any)\r\n   [cmake] --   ARROW_NO_DEPRECATED_API=OFF [default=OFF]\r\n   [cmake] --       Exclude deprecated APIs from build\r\n   [cmake] --   ARROW_USE_CCACHE=ON [default=ON]\r\n   [cmake] --       Use ccache when compiling (if available)\r\n   [cmake] --   ARROW_USE_LD_GOLD=OFF [default=OFF]\r\n   [cmake] --       Use ld.gold for linking on Linux (if available)\r\n   [cmake] --   ARROW_USE_PRECOMPILED_HEADERS=OFF [default=OFF]\r\n   [cmake] --       Use precompiled headers when compiling\r\n   [cmake] --   ARROW_SIMD_LEVEL=SSE4_2 [default=NONE|SSE4_2|AVX2|AVX512|NEON|DEFAULT]\r\n   [cmake] --       Compile-time SIMD optimization level\r\n   [cmake] --   ARROW_RUNTIME_SIMD_LEVEL=MAX [default=NONE|SSE4_2|AVX2|AVX512|MAX]\r\n   [cmake] --       Max runtime SIMD optimization level\r\n   [cmake] --   ARROW_ARMV8_ARCH=armv8-a [default=armv8-a|armv8-a+crc+crypto]\r\n   [cmake] --       Arm64 arch and extensions\r\n   [cmake] --   ARROW_ALTIVEC=ON [default=ON]\r\n   [cmake] --       Build with Altivec if compiler has support\r\n   [cmake] --   ARROW_RPATH_ORIGIN=OFF [default=OFF]\r\n   [cmake] --       Build Arrow libraries with RATH set to $ORIGIN\r\n   [cmake] --   ARROW_INSTALL_NAME_RPATH=OFF [default=ON]\r\n   [cmake] --       Build Arrow libraries with install_name set to @rpath\r\n   [cmake] --   ARROW_GGDB_DEBUG=ON [default=ON]\r\n   [cmake] --       Pass -ggdb flag to debug builds\r\n   [cmake] -- \r\n   [cmake] -- Test and benchmark options:\r\n   [cmake] -- \r\n   [cmake] --   ARROW_BUILD_EXAMPLES=OFF [default=OFF]\r\n   [cmake] --       Build the Arrow examples\r\n   [cmake] --   ARROW_BUILD_TESTS=ON [default=OFF]\r\n   [cmake] --       Build the Arrow googletest unit tests\r\n   [cmake] --   ARROW_ENABLE_TIMING_TESTS=ON [default=ON]\r\n   [cmake] --       Enable timing-sensitive tests\r\n   [cmake] --   ARROW_BUILD_INTEGRATION=ON [default=OFF]\r\n   [cmake] --       Build the Arrow integration test executables\r\n   [cmake] --   ARROW_BUILD_BENCHMARKS=OFF [default=OFF]\r\n   [cmake] --       Build the Arrow micro benchmarks\r\n   [cmake] --   ARROW_BUILD_BENCHMARKS_REFERENCE=OFF [default=OFF]\r\n   [cmake] --       Build the Arrow micro reference benchmarks\r\n   [cmake] --   ARROW_BUILD_OPENMP_BENCHMARKS=OFF [default=OFF]\r\n   [cmake] --       Build the Arrow benchmarks that rely on OpenMP\r\n   [cmake] --   ARROW_BUILD_DETAILED_BENCHMARKS=OFF [default=OFF]\r\n   [cmake] --       Build benchmarks that do a longer exploration of performance\r\n   [cmake] --   ARROW_TEST_LINKAGE=shared [default=shared|static]\r\n   [cmake] --       Linkage of Arrow libraries with unit tests executables.\r\n   [cmake] --   ARROW_FUZZING=OFF [default=OFF]\r\n   [cmake] --       Build Arrow Fuzzing executables\r\n   [cmake] --   ARROW_LARGE_MEMORY_TESTS=OFF [default=OFF]\r\n   [cmake] --       Enable unit tests which use large memory\r\n   [cmake] -- \r\n   [cmake] -- Lint options:\r\n   [cmake] -- \r\n   [cmake] --   ARROW_ONLY_LINT=OFF [default=OFF]\r\n   [cmake] --       Only define the lint and check-format targets\r\n   [cmake] --   ARROW_VERBOSE_LINT=OFF [default=OFF]\r\n   [cmake] --       If off, 'quiet' flags will be passed to linting tools\r\n   [cmake] --   ARROW_GENERATE_COVERAGE=OFF [default=OFF]\r\n   [cmake] --       Build with C++ code coverage enabled\r\n   [cmake] -- \r\n   [cmake] -- Checks options:\r\n   [cmake] -- \r\n   [cmake] --   ARROW_TEST_MEMCHECK=OFF [default=OFF]\r\n   [cmake] --       Run the test suite using valgrind --tool=memcheck\r\n   [cmake] --   ARROW_USE_ASAN=OFF [default=OFF]\r\n   [cmake] --       Enable Address Sanitizer checks\r\n   [cmake] --   ARROW_USE_TSAN=OFF [default=OFF]\r\n   [cmake] --       Enable Thread Sanitizer checks\r\n   [cmake] --   ARROW_USE_UBSAN=OFF [default=OFF]\r\n   [cmake] --       Enable Undefined Behavior sanitizer checks\r\n   [cmake] -- \r\n   [cmake] -- Project component options:\r\n   [cmake] -- \r\n   [cmake] --   ARROW_BUILD_UTILITIES=OFF [default=OFF]\r\n   [cmake] --       Build Arrow commandline utilities\r\n   [cmake] --   ARROW_COMPUTE=ON [default=OFF]\r\n   [cmake] --       Build the Arrow Compute Modules\r\n   [cmake] --   ARROW_CSV=ON [default=OFF]\r\n   [cmake] --       Build the Arrow CSV Parser Module\r\n   [cmake] --   ARROW_CUDA=OFF [default=OFF]\r\n   [cmake] --       Build the Arrow CUDA extensions (requires CUDA toolkit)\r\n   [cmake] --   ARROW_DATASET=ON [default=OFF]\r\n   [cmake] --       Build the Arrow Dataset Modules\r\n   [cmake] --   ARROW_ENGINE=ON [default=OFF]\r\n   [cmake] --       Build the Arrow Execution Engine\r\n   [cmake] --   ARROW_FILESYSTEM=ON [default=OFF]\r\n   [cmake] --       Build the Arrow Filesystem Layer\r\n   [cmake] --   ARROW_FLIGHT=OFF [default=OFF]\r\n   [cmake] --       Build the Arrow Flight RPC System (requires GRPC, Protocol Buffers)\r\n   [cmake] --   ARROW_FLIGHT_SQL=OFF [default=OFF]\r\n   [cmake] --       Build the Arrow Flight SQL extension\r\n   [cmake] --   ARROW_GANDIVA=OFF [default=OFF]\r\n   [cmake] --       Build the Gandiva libraries\r\n   [cmake] --   ARROW_GCS=OFF [default=OFF]\r\n   [cmake] --       Build Arrow with GCS support (requires the GCloud SDK for C++)\r\n   [cmake] --   ARROW_HDFS=ON [default=OFF]\r\n   [cmake] --       Build the Arrow HDFS bridge\r\n   [cmake] --   ARROW_HIVESERVER2=OFF [default=OFF]\r\n   [cmake] --       Build the HiveServer2 client and Arrow adapter\r\n   [cmake] --   ARROW_IPC=ON [default=ON]\r\n   [cmake] --       Build the Arrow IPC extensions\r\n   [cmake] --   ARROW_JEMALLOC=OFF [default=OFF]\r\n   [cmake] --       Build the Arrow jemalloc-based allocator\r\n   [cmake] --   ARROW_JNI=OFF [default=OFF]\r\n   [cmake] --       Build the Arrow JNI lib\r\n   [cmake] --   ARROW_JSON=ON [default=OFF]\r\n   [cmake] --       Build Arrow with JSON support (requires RapidJSON)\r\n   [cmake] --   ARROW_MIMALLOC=ON [default=OFF]\r\n   [cmake] --       Build the Arrow mimalloc-based allocator\r\n   [cmake] --   ARROW_PARQUET=ON [default=OFF]\r\n   [cmake] --       Build the Parquet libraries\r\n   [cmake] --   ARROW_ORC=OFF [default=OFF]\r\n   [cmake] --       Build the Arrow ORC adapter\r\n   [cmake] --   ARROW_PLASMA=OFF [default=OFF]\r\n   [cmake] --       Build the plasma object store along with Arrow\r\n   [cmake] --   ARROW_PLASMA_JAVA_CLIENT=OFF [default=OFF]\r\n   [cmake] --       Build the plasma object store java client\r\n   [cmake] --   ARROW_PYTHON=ON [default=OFF]\r\n   [cmake] --       Build the Arrow CPython extensions\r\n   [cmake] --   ARROW_S3=OFF [default=OFF]\r\n   [cmake] --       Build Arrow with S3 support (requires the AWS SDK for C++)\r\n   [cmake] --   ARROW_SKYHOOK=OFF [default=OFF]\r\n   [cmake] --       Build the Skyhook libraries\r\n   [cmake] --   ARROW_TENSORFLOW=OFF [default=OFF]\r\n   [cmake] --       Build Arrow with TensorFlow support enabled\r\n   [cmake] --   ARROW_TESTING=ON [default=OFF]\r\n   [cmake] --       Build the Arrow testing libraries\r\n   [cmake] -- \r\n   [cmake] -- Thirdparty toolchain options:\r\n   [cmake] -- \r\n   [cmake] --   ARROW_DEPENDENCY_SOURCE=SYSTEM [default=AUTO|BUNDLED|SYSTEM|CONDA|VCPKG|BREW]\r\n   [cmake] --       Method to use for acquiring arrow's build dependencies\r\n   [cmake] --   ARROW_VERBOSE_THIRDPARTY_BUILD=OFF [default=OFF]\r\n   [cmake] --       Show output from ExternalProjects rather than just logging to files\r\n   [cmake] --   ARROW_DEPENDENCY_USE_SHARED=ON [default=ON]\r\n   [cmake] --       Link to shared libraries\r\n   [cmake] --   ARROW_BOOST_USE_SHARED=ON [default=ON]\r\n   [cmake] --       Rely on boost shared libraries where relevant\r\n   [cmake] --   ARROW_BROTLI_USE_SHARED=ON [default=ON]\r\n   [cmake] --       Rely on Brotli shared libraries where relevant\r\n   [cmake] --   ARROW_BZ2_USE_SHARED=ON [default=ON]\r\n   [cmake] --       Rely on Bz2 shared libraries where relevant\r\n   [cmake] --   ARROW_GFLAGS_USE_SHARED=ON [default=ON]\r\n   [cmake] --       Rely on GFlags shared libraries where relevant\r\n   [cmake] --   ARROW_GRPC_USE_SHARED=ON [default=ON]\r\n   [cmake] --       Rely on gRPC shared libraries where relevant\r\n   [cmake] --   ARROW_LZ4_USE_SHARED=ON [default=ON]\r\n   [cmake] --       Rely on lz4 shared libraries where relevant\r\n   [cmake] --   ARROW_OPENSSL_USE_SHARED=ON [default=ON]\r\n   [cmake] --       Rely on OpenSSL shared libraries where relevant\r\n   [cmake] --   ARROW_PROTOBUF_USE_SHARED=ON [default=ON]\r\n   [cmake] --       Rely on Protocol Buffers shared libraries where relevant\r\n   [cmake] --   ARROW_THRIFT_USE_SHARED=OFF [default=OFF]\r\n   [cmake] --       Rely on thrift shared libraries where relevant\r\n   [cmake] --   ARROW_UTF8PROC_USE_SHARED=ON [default=ON]\r\n   [cmake] --       Rely on utf8proc shared libraries where relevant\r\n   [cmake] --   ARROW_SNAPPY_USE_SHARED=ON [default=ON]\r\n   [cmake] --       Rely on snappy shared libraries where relevant\r\n   [cmake] --   ARROW_UTF8PROC_USE_SHARED=ON [default=ON]\r\n   [cmake] --       Rely on utf8proc shared libraries where relevant\r\n   [cmake] --   ARROW_ZSTD_USE_SHARED=ON [default=ON]\r\n   [cmake] --       Rely on zstd shared libraries where relevant\r\n   [cmake] --   ARROW_USE_GLOG=OFF [default=OFF]\r\n   [cmake] --       Build libraries with glog support for pluggable logging\r\n   [cmake] --   ARROW_WITH_BACKTRACE=ON [default=ON]\r\n   [cmake] --       Build with backtrace support\r\n   [cmake] --   ARROW_WITH_OPENTELEMETRY=OFF [default=OFF]\r\n   [cmake] --       Build libraries with OpenTelemetry support for distributed tracing\r\n   [cmake] --   ARROW_WITH_BROTLI=ON [default=OFF]\r\n   [cmake] --       Build with Brotli compression\r\n   [cmake] --   ARROW_WITH_BZ2=ON [default=OFF]\r\n   [cmake] --       Build with BZ2 compression\r\n   [cmake] --   ARROW_WITH_LZ4=ON [default=OFF]\r\n   [cmake] --       Build with lz4 compression\r\n   [cmake] --   ARROW_WITH_SNAPPY=ON [default=OFF]\r\n   [cmake] --       Build with Snappy compression\r\n   [cmake] --   ARROW_WITH_ZLIB=ON [default=OFF]\r\n   [cmake] --       Build with zlib compression\r\n   [cmake] --   ARROW_WITH_ZSTD=ON [default=OFF]\r\n   [cmake] --       Build with zstd compression\r\n   [cmake] --   ARROW_WITH_UTF8PROC=ON [default=ON]\r\n   [cmake] --       Build with support for Unicode properties using the utf8proc library\r\n   [cmake] --       (only used if ARROW_COMPUTE is ON or ARROW_GANDIVA is ON)\r\n   [cmake] --   ARROW_WITH_RE2=ON [default=ON]\r\n   [cmake] --       Build with support for regular expressions using the re2 library\r\n   [cmake] --       (only used if ARROW_COMPUTE or ARROW_GANDIVA is ON)\r\n   [cmake] -- \r\n   [cmake] -- MSVC options:\r\n   [cmake] -- \r\n   [cmake] --   MSVC_LINK_VERBOSE=OFF [default=OFF]\r\n   [cmake] --       Pass verbose linking options when linking libraries and executables\r\n   [cmake] --   BROTLI_MSVC_STATIC_LIB_SUFFIX=-static [default=\"-static\"]\r\n   [cmake] --       Brotli static lib suffix used on Windows with MSVC\r\n   [cmake] --   PROTOBUF_MSVC_STATIC_LIB_SUFFIX=\"\" [default=\"\"]\r\n   [cmake] --       Protobuf static lib suffix used on Windows with MSVC\r\n   [cmake] --   RE2_MSVC_STATIC_LIB_SUFFIX=_static [default=\"_static\"]\r\n   [cmake] --       re2 static lib suffix used on Windows with MSVC\r\n   [cmake] --   SNAPPY_MSVC_STATIC_LIB_SUFFIX=\"\" [default=\"\"]\r\n   [cmake] --       Snappy static lib suffix used on Windows with MSVC\r\n   [cmake] --   LZ4_MSVC_STATIC_LIB_SUFFIX=\"\" [default=\"_static\"]\r\n   [cmake] --       Lz4 static lib suffix used on Windows with MSVC\r\n   [cmake] --   ZSTD_MSVC_STATIC_LIB_SUFFIX=_static [default=\"_static\"]\r\n   [cmake] --       ZStd static lib suffix used on Windows with MSVC\r\n   [cmake] --   ARROW_USE_STATIC_CRT=OFF [default=OFF]\r\n   [cmake] --       Build Arrow with statically linked CRT\r\n   [cmake] -- \r\n   [cmake] -- Parquet options:\r\n   [cmake] -- \r\n   [cmake] --   PARQUET_MINIMAL_DEPENDENCY=OFF [default=OFF]\r\n   [cmake] --       Depend only on Thirdparty headers to build libparquet.\r\n   [cmake] --       Always OFF if building binaries\r\n   [cmake] --   PARQUET_BUILD_EXECUTABLES=OFF [default=OFF]\r\n   [cmake] --       Build the Parquet executable CLI tools. Requires static libraries to be built.\r\n   [cmake] --   PARQUET_BUILD_EXAMPLES=OFF [default=OFF]\r\n   [cmake] --       Build the Parquet examples. Requires static libraries to be built.\r\n   [cmake] --   PARQUET_REQUIRE_ENCRYPTION=OFF [default=OFF]\r\n   [cmake] --       Build support for encryption. Fail if OpenSSL is not found\r\n   [cmake] -- \r\n   [cmake] -- Gandiva options:\r\n   [cmake] -- \r\n   [cmake] --   ARROW_GANDIVA_JAVA=OFF [default=OFF]\r\n   [cmake] --       Build the Gandiva JNI wrappers\r\n   [cmake] --   ARROW_GANDIVA_STATIC_LIBSTDCPP=OFF [default=OFF]\r\n   [cmake] --       Include -static-libstdc++ -static-libgcc when linking with\r\n   [cmake] --       Gandiva static libraries\r\n   [cmake] --   ARROW_GANDIVA_PC_CXX_FLAGS=\"\" [default=\"\"]\r\n   [cmake] --       Compiler flags to append when pre-compiling Gandiva operations\r\n   [cmake] -- \r\n   [cmake] -- Advanced developer options:\r\n   [cmake] -- \r\n   [cmake] --   ARROW_EXTRA_ERROR_CONTEXT=ON [default=OFF]\r\n   [cmake] --       Compile with extra error context (line numbers, code)\r\n   [cmake] --   ARROW_OPTIONAL_INSTALL=OFF [default=OFF]\r\n   [cmake] --       If enabled install ONLY targets that have already been built. Please be\r\n   [cmake] --       advised that if this is enabled 'install' will fail silently on components\r\n   [cmake] --       that have not been built\r\n   [cmake] --   Outputting build configuration summary to C:/Users/voltron/arrow/cpp/build/user-python-debug-windows/cmake_summary.json\r\n   [cmake] -- Configuring done\r\n   [cmake] -- Generating done\r\n   [cmake] -- Build files have been written to: C:/Users/voltron/arrow/cpp/build/user-python-debug-windows\r\n   [cpptools] The build configurations generated do not contain the active build configuration. Using 'DEBUG' for CMAKE_BUILD_TYPE instead of 'Debug' to ensure that IntelliSense configurations can be found\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-24T22:08:16.960+0000",
                    "updated": "2022-01-24T22:08:16.960+0000",
                    "started": "2022-01-24T22:08:16.960+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "714066",
                    "issueId": "13424182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424182/worklog/714848",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #12230:\nURL: https://github.com/apache/arrow/pull/12230#discussion_r791168359\n\n\n\n##########\nFile path: cpp/cmake_modules/BuildUtils.cmake\n##########\n@@ -370,7 +370,7 @@ function(ADD_ARROW_LIB LIB_NAME)\n \n     target_link_libraries(${LIB_NAME}_shared\n                           LINK_PUBLIC\n-                          \"$<BUILD_INTERFACE:${ARG_SHARED_LINK_LIBS}>\"\n+                          ${ARG_SHARED_LINK_LIBS}\n\nReview comment:\n       It exports too much libraries to `ArrowTargets.cmake`. See also: 8ab1493c810ae354ce085c2c2052676f349b168a\r\n   \r\n   What build error was solved by this change?\r\n   Could you show build log for this?\n\n##########\nFile path: cpp/cmake_modules/ThirdpartyToolchain.cmake\n##########\n@@ -79,7 +79,7 @@ set(ARROW_THIRDPARTY_DEPENDENCIES\n # supported when building with MSVC because of the way that\n # conda-forge packages have 4 variants of the libraries packaged\n # together\n-if(MSVC AND \"${GTest_SOURCE}\" STREQUAL \"\")\n+if(MSVC AND \"${GTest_SOURCE}\" STREQUAL \"\" AND \"${ARROW_DEPENDENCY_SOURCE}\" STREQUAL \"CONDA\")\n\nReview comment:\n       Could you show full build log on error?\r\n   I think that avoiding old header and new library mix is the real fix.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-25T16:52:08.049+0000",
                    "updated": "2022-01-25T16:52:08.049+0000",
                    "started": "2022-01-25T16:52:08.049+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "714848",
                    "issueId": "13424182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424182/worklog/714894",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on a change in pull request #12230:\nURL: https://github.com/apache/arrow/pull/12230#discussion_r791176066\n\n\n\n##########\nFile path: cpp/cmake_modules/BuildUtils.cmake\n##########\n@@ -370,7 +370,7 @@ function(ADD_ARROW_LIB LIB_NAME)\n \n     target_link_libraries(${LIB_NAME}_shared\n                           LINK_PUBLIC\n-                          \"$<BUILD_INTERFACE:${ARG_SHARED_LINK_LIBS}>\"\n+                          ${ARG_SHARED_LINK_LIBS}\n\nReview comment:\n       I can show a full log later, but I've described what I was seeing in this Jira comment: https://issues.apache.org/jira/browse/ARROW-13470?focusedCommentId=17480335\n\n##########\nFile path: cpp/cmake_modules/BuildUtils.cmake\n##########\n@@ -370,7 +370,7 @@ function(ADD_ARROW_LIB LIB_NAME)\n \n     target_link_libraries(${LIB_NAME}_shared\n                           LINK_PUBLIC\n-                          \"$<BUILD_INTERFACE:${ARG_SHARED_LINK_LIBS}>\"\n+                          ${ARG_SHARED_LINK_LIBS}\n\nReview comment:\n       Build error:\r\n   \r\n   ```\r\n   [build] [381/559] Linking CXX shared library debug\\arrow_python.dll\r\n   [build] FAILED: debug/arrow_python.dll debug/arrow_python.lib \r\n   [build] cmd.exe /C \"cd . && \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe\" -E vs_link_dll --intdir=src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir --rc=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100190~1.0\\x64\\rc.exe --mt=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100190~1.0\\x64\\mt.exe --manifests  -- C:\\PROGRA~1\\MICROS~4\\2022\\COMMUN~1\\VC\\Tools\\MSVC\\1430~1.307\\bin\\Hostx64\\x64\\link.exe /nologo src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\arrow_to_pandas.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\benchmark.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\common.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\datetime.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\decimal.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\deserialize.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\extension_type.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\helpers.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\inference.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\init.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\io.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\ipc.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\numpy_convert.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\numpy_to_arrow.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\python_to_arrow.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\pyarrow.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\serialize.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\csv.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\filesystem.cc.obj  /out:debug\\arrow_python.dll /implib:debug\\arrow_python.lib /pdb:debug\\arrow_python.pdb /dll /version:700.0 /machine:x64  /NODEFAULTLIB:LIBCMT /debug /INCREMENTAL -Wl,--version-script=C:/Users/voltron/arrow/cpp/src/arrow/symbols.map  debug\\arrow.lib  optimized.lib  C:\\Users\\voltron\\AppData\\Local\\Programs\\Python\\Python310\\libs\\python310.lib  debug.lib  C:\\Users\\voltron\\AppData\\Local\\Programs\\Python\\Python310\\libs\\python310_d.lib  ..\\..\\vcpkg_installed\\x64-windows\\lib\\brotlienc.lib  ..\\..\\vcpkg_installed\\x64-windows\\lib\\brotlidec.lib  ..\\..\\vcpkg_installed\\x64-windows\\lib\\brotlicommon.lib  ..\\..\\vcpkg_installed\\x64-windows\\debug\\lib\\utf8proc.lib  ..\\..\\vcpkg_installed\\x64-windows\\debug\\lib\\re2.lib  mimalloc_ep\\src\\mimalloc_ep\\lib\\mimalloc-1.7\\mimalloc-static-debug.lib  ws2_32.lib  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib  && cmd.exe /C \"cd /D C:\\Users\\voltron\\arrow\\cpp\\build\\user-python-debug-windows\\src\\arrow\\python && C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -noprofile -executionpolicy Bypass -file C:/Users/voltron/arrow/vcpkg/scripts/buildsystems/msbuild/applocal.ps1 -targetBinary C:/Users/voltron/arrow/cpp/build/user-python-debug-windows/debug/arrow_python.dll -installedDir C:/Users/voltron/arrow/cpp/vcpkg_installed/x64-windows/debug/bin -OutVariable out\"\"\r\n   [build] LINK Pass 1: command \"C:\\PROGRA~1\\MICROS~4\\2022\\COMMUN~1\\VC\\Tools\\MSVC\\1430~1.307\\bin\\Hostx64\\x64\\link.exe /nologo src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\arrow_to_pandas.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\benchmark.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\common.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\datetime.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\decimal.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\deserialize.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\extension_type.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\helpers.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\inference.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\init.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\io.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\ipc.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\numpy_convert.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\numpy_to_arrow.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\python_to_arrow.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\pyarrow.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\serialize.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\csv.cc.obj src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir\\filesystem.cc.obj /out:debug\\arrow_python.dll /implib:debug\\arrow_python.lib /pdb:debug\\arrow_python.pdb /dll /version:700.0 /machine:x64 /NODEFAULTLIB:LIBCMT /debug /INCREMENTAL -Wl,--version-script=C:/Users/voltron/arrow/cpp/src/arrow/symbols.map debug\\arrow.lib optimized.lib C:\\Users\\voltron\\AppData\\Local\\Programs\\Python\\Python310\\libs\\python310.lib debug.lib C:\\Users\\voltron\\AppData\\Local\\Programs\\Python\\Python310\\libs\\python310_d.lib ..\\..\\vcpkg_installed\\x64-windows\\lib\\brotlienc.lib ..\\..\\vcpkg_installed\\x64-windows\\lib\\brotlidec.lib ..\\..\\vcpkg_installed\\x64-windows\\lib\\brotlicommon.lib ..\\..\\vcpkg_installed\\x64-windows\\debug\\lib\\utf8proc.lib ..\\..\\vcpkg_installed\\x64-windows\\debug\\lib\\re2.lib mimalloc_ep\\src\\mimalloc_ep\\lib\\mimalloc-1.7\\mimalloc-static-debug.lib ws2_32.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir/intermediate.manifest src\\arrow\\python\\CMakeFiles\\arrow_python_shared.dir/manifest.res\" failed (exit code 1104) with the following output:\r\n   [build] LINK : warning LNK4044: unrecognized option '/Wl,--version-script=C:/Users/voltron/arrow/cpp/src/arrow/symbols.map'; ignored\r\n   [build] LINK : fatal error LNK1104: cannot open file 'optimized.lib'\r\n   ```\n\n##########\nFile path: cpp/cmake_modules/ThirdpartyToolchain.cmake\n##########\n@@ -79,7 +79,7 @@ set(ARROW_THIRDPARTY_DEPENDENCIES\n # supported when building with MSVC because of the way that\n # conda-forge packages have 4 variants of the libraries packaged\n # together\n-if(MSVC AND \"${GTest_SOURCE}\" STREQUAL \"\")\n+if(MSVC AND \"${GTest_SOURCE}\" STREQUAL \"\" AND \"${ARROW_DEPENDENCY_SOURCE}\" STREQUAL \"CONDA\")\n\nReview comment:\n       Here's the build error:\r\n   \r\n   ```\r\n   [build] [2/174] Linking CXX shared library debug\\arrow_testing.dll\r\n   [build] FAILED: debug/arrow_testing.dll debug/arrow_testing.lib \r\n   [build] cmd.exe /C \"cd . && \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.exe\" -E vs_link_dll --intdir=src\\arrow\\CMakeFiles\\arrow_testing_shared.dir --rc=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100190~1.0\\x64\\rc.exe --mt=C:\\PROGRA~2\\WI3CF2~1\\10\\bin\\100190~1.0\\x64\\mt.exe --manifests  -- C:\\PROGRA~1\\MICROS~4\\2022\\COMMUN~1\\VC\\Tools\\MSVC\\1430~1.307\\bin\\Hostx64\\x64\\link.exe /nologo src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\io\\test_common.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\ipc\\test_common.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\testing\\json_integration.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\testing\\json_internal.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\testing\\gtest_util.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\testing\\random.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\testing\\generator.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\testing\\util.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\csv\\test_common.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\compute\\exec\\test_util.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\filesystem\\test_util.cc.obj  /out:debug\\arrow_testing.dll /implib:debug\\arrow_testing.lib /pdb:debug\\arrow_testing.pdb /dll /version:700.0 /machine:x64  /NODEFAULTLIB:LIBCMT /debug /INCREMENTAL  debug\\arrow.lib  googletest_ep-prefix\\lib\\gtestd.lib  ..\\..\\vcpkg_installed\\x64-windows\\lib\\brotlienc.lib  ..\\..\\vcpkg_installed\\x64-windows\\lib\\brotlidec.lib  ..\\..\\vcpkg_installed\\x64-windows\\lib\\brotlicommon.lib  ..\\..\\vcpkg_installed\\x64-windows\\debug\\lib\\utf8proc.lib  ..\\..\\vcpkg_installed\\x64-windows\\debug\\lib\\re2.lib  mimalloc_ep\\src\\mimalloc_ep\\lib\\mimalloc-1.7\\mimalloc-static-debug.lib  ws2_32.lib  kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib  && cmd.exe /C \"cd /D C:\\Users\\voltron\\arrow\\cpp\\build\\user-python-debug-windows\\src\\arrow && C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -noprofile -executionpolicy Bypass -file C:/Users/voltron/arrow/vcpkg/scripts/buildsystems/msbuild/applocal.ps1 -targetBinary C:/Users/voltron/arrow/cpp/build/user-python-debug-windows/debug/arrow_testing.dll -installedDir C:/Users/voltron/arrow/cpp/vcpkg_installed/x64-windows/debug/bin -OutVariable out\"\"\r\n   [build] LINK Pass 1: command \"C:\\PROGRA~1\\MICROS~4\\2022\\COMMUN~1\\VC\\Tools\\MSVC\\1430~1.307\\bin\\Hostx64\\x64\\link.exe /nologo src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\io\\test_common.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\ipc\\test_common.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\testing\\json_integration.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\testing\\json_internal.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\testing\\gtest_util.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\testing\\random.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\testing\\generator.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\testing\\util.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\csv\\test_common.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\compute\\exec\\test_util.cc.obj src\\arrow\\CMakeFiles\\arrow_testing_shared.dir\\filesystem\\test_util.cc.obj /out:debug\\arrow_testing.dll /implib:debug\\arrow_testing.lib /pdb:debug\\arrow_testing.pdb /dll /version:700.0 /machine:x64 /NODEFAULTLIB:LIBCMT /debug /INCREMENTAL debug\\arrow.lib googletest_ep-prefix\\lib\\gtestd.lib ..\\..\\vcpkg_installed\\x64-windows\\lib\\brotlienc.lib ..\\..\\vcpkg_installed\\x64-windows\\lib\\brotlidec.lib ..\\..\\vcpkg_installed\\x64-windows\\lib\\brotlicommon.lib ..\\..\\vcpkg_installed\\x64-windows\\debug\\lib\\utf8proc.lib ..\\..\\vcpkg_installed\\x64-windows\\debug\\lib\\re2.lib mimalloc_ep\\src\\mimalloc_ep\\lib\\mimalloc-1.7\\mimalloc-static-debug.lib ws2_32.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\\arrow\\CMakeFiles\\arrow_testing_shared.dir/intermediate.manifest src\\arrow\\CMakeFiles\\arrow_testing_shared.dir/manifest.res\" failed (exit code 1120) with the following output:\r\n   [build]    Creating library debug\\arrow_testing.lib and object debug\\arrow_testing.exp\r\n   [build] gtest_util.cc.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) class testing::AssertionResult __cdecl testing::internal::CmpHelperEQ(char const *,char const *,__int64,__int64)\" (__imp_?CmpHelperEQ@internal@testing@@YA?AVAssertionResult@2@PEBD0_J1@Z) referenced in function \"public: static class testing::AssertionResult __cdecl testing::internal::EqHelper::Compare(char const *,char const *,__int64,__int64)\" (?Compare@EqHelper@internal@testing@@SA?AVAssertionResult@3@PEBD0_J1@Z)\r\n   [build] test_util.cc.obj : error LNK2001: unresolved external symbol \"__declspec(dllimport) class testing::AssertionResult __cdecl testing::internal::CmpHelperEQ(char const *,char const *,__int64,__int64)\" (__imp_?CmpHelperEQ@internal@testing@@YA?AVAssertionResult@2@PEBD0_J1@Z)\r\n   [build] test_util.cc.obj : error LNK2001: unresolved external symbol \"__declspec(dllimport) class testing::AssertionResult __cdecl testing::internal::CmpHelperEQ(char const *,char const *,__int64,__int64)\" (__imp_?CmpHelperEQ@internal@testing@@YA?AVAssertionResult@2@PEBD0_J1@Z)\r\n   [build] test_util.cc.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) void __cdecl testing::internal2::PrintBytesInObjectTo(unsigned char const *,unsigned __int64,class std::basic_ostream<char,struct std::char_traits<char> > *)\" (__imp_?PrintBytesInObjectTo@internal2@testing@@YAXPEBE_KPEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z) referenced in function \"public: static void __cdecl testing::internal2::TypeWithoutFormatter<class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class arrow::compute::ExecNode *> > >,2>::PrintValue(class std::_Vector_iterator<class std::_Vector_val<struct std::_Simple_types<class arrow::compute::ExecNode *> > > const &,class std::basic_ostream<char,struct std::char_traits<char> > *)\" (?PrintValue@?$TypeWithoutFormatter@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVExecNode@compute@arrow@@@std@@@std@@@std@@$01@internal2@testing@@SAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@PEAVExecNode@compute@arrow@@@std@@@std@@@std@@PEAV?$basic_ostream@DU?$char_traits@D@std@@@5@@Z)\r\n   [build] test_util.cc.obj : error LNK2001: unresolved external symbol \"__declspec(dllimport) void __cdecl testing::internal2::PrintBytesInObjectTo(unsigned char const *,unsigned __int64,class std::basic_ostream<char,struct std::char_traits<char> > *)\" (__imp_?PrintBytesInObjectTo@internal2@testing@@YAXPEBE_KPEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z)\r\n   [build] debug\\arrow_testing.dll : fatal error LNK1120: 2 unresolved externals\r\n   ```\r\n   \r\n   And then here's the config log:\r\n   \r\n   ```\r\n   [main] Configuring folder: arrow \r\n   [proc] Executing command: \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\bin\\cmake.EXE\" -DARROW_GANDIVA=OFF -DARROW_FILESYSTEM=ON -DARROW_S3=OFF -DARROW_HDFS=OFF -DARROW_PLASMA=OFF -DARROW_FLIGHT=OFF -DARROW_BUILD_INTEGRATION=ON -DARROW_BUILD_TESTS=ON -DARROW_EXTRA_ERROR_CONTEXT=ON -DCMAKE_BUILD_TYPE=Debug -DARROW_BUILD_STATIC=OFF -DARROW_PYTHON=ON -DARROW_ENGINE=ON -DARROW_MIMALLOC=ON -DARROW_PARQUET=ON -DARROW_WITH_BROTLI=ON -DARROW_WITH_BZ2=ON -DARROW_WITH_LZ4=ON -DARROW_WITH_RE2=ON -DARROW_WITH_SNAPPY=ON -DARROW_WITH_UTF8PROC=ON -DARROW_WITH_ZLIB=ON -DARROW_WITH_ZSTD=ON -DARROW_COMPUTE=ON -DARROW_CSV=ON -DARROW_DATASET=ON -DARROW_JSON=ON -DARROW_INSTALL_NAME_RPATH=OFF -DCMAKE_INSTALL_PREFIX=c:/Users/voltron/arrow/cpp/build/user-python-debug-windows/dist -DARROW_DEPENDENCY_SOURCE=VCPKG -DVCPKG_TARGET_TRIPLET=x64-windows -DA=x64 -Hc:/Users/voltron/arrow/cpp -Bc:/Users/voltron/arrow/cpp/build/user-python-debug-windows -G Ninja\r\n   [cmake] -- Building using CMake version: 3.21.21080301-MSVC_2\r\n   [cmake] -- Using vcpkg to find dependencies\r\n   [cmake] -- Using CMAKE_TOOLCHAIN_FILE: C:/Users/voltron/arrow/vcpkg/scripts/buildsystems/vcpkg.cmake\r\n   [cmake] -- Using VCPKG_ROOT: C:/Users/voltron/arrow/vcpkg\r\n   [cmake] -- Looking for installed packages in C:/Users/voltron/arrow/cpp/vcpkg_installed\r\n   [cmake] -- Using vcpkg installed libraries directory: C:/Users/voltron/arrow/cpp/vcpkg_installed\r\n   [cmake] -- Using VCPKG_TARGET_TRIPLET: x64-windows\r\n   [cmake] -- Using VCPKG_BUILD_TYPE: debug\r\n   [cmake] -- Using VCPKG_LIBRARY_LINKAGE: static\r\n   [cmake] -- Running vcpkg install\r\n   [cmake] Detecting compiler hash for triplet x64-windows...\r\n   [cmake] All requested packages are currently installed.\r\n   [cmake] Restored 0 packages from C:\\Users\\voltron\\AppData\\Local\\vcpkg\\archives in 145.7 us. Use --debug to see more details.\r\n   [cmake] \r\n   [cmake] Total elapsed time: 3.479 s\r\n   [cmake] \r\n   [cmake] The package abseil provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(absl CONFIG REQUIRED)\r\n   [cmake]     # Note: 125 target(s) were omitted.\r\n   [cmake]     target_link_libraries(main PRIVATE absl::any absl::base absl::bits absl::city)\r\n   [cmake] \r\n   [cmake] The package zlib is compatible with built-in CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(ZLIB REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE ZLIB::ZLIB)\r\n   [cmake] \r\n   [cmake] The package aws-sdk-cpp:x64-windows provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(AWSSDK CONFIG COMPONENTS core dynamodb kinesis s3 REQUIRED)\r\n   [cmake]     target_include_directories(main PRIVATE ${AWSSDK_INCLUDE_DIRS})\r\n   [cmake]     target_link_libraries(main PRIVATE ${AWSSDK_LIBRARIES})\r\n   [cmake] \r\n   [cmake] The package benchmark provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(benchmark CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE benchmark::benchmark benchmark::benchmark_main)\r\n   [cmake] \r\n   [cmake] The package boost is compatible with built-in CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(Boost REQUIRED [COMPONENTS <libs>...])\r\n   [cmake]     target_link_libraries(main PRIVATE Boost::boost Boost::<lib1> Boost::<lib2> ...)\r\n   [cmake] \r\n   [cmake] The package openssl is compatible with built-in CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(OpenSSL REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE OpenSSL::SSL OpenSSL::Crypto)\r\n   [cmake] \r\n   [cmake] The package brotli provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(unofficial-brotli CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE unofficial::brotli::brotlidec unofficial::brotli::brotlienc unofficial::brotli::brotlicommon)\r\n   [cmake] \r\n   [cmake] The package bzip2 is compatible with built-in CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(BZip2 REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE BZip2::BZip2)\r\n   [cmake] \r\n   [cmake] The package c-ares provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(c-ares CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE c-ares::cares c-ares::cares_shared c-ares::cares_static)\r\n   [cmake] \r\n   [cmake] The package curl provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(CURL CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE CURL::libcurl)\r\n   [cmake] \r\n   [cmake] The package flatbuffers provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(Flatbuffers CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE flatbuffers::flatbuffers)\r\n   [cmake] \r\n   [cmake] The package gflags provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(gflags CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE gflags::gflags)\r\n   [cmake] \r\n   [cmake] The package glog provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(glog CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE glog::glog)\r\n   [cmake] \r\n   [cmake] The package google-cloud-cpp provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(google_cloud_cpp_common CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE google_cloud_cpp_common google-cloud-cpp::common)\r\n   [cmake] \r\n   [cmake]     find_package(google_cloud_cpp_storage CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE CURL::libcurl google-cloud-cpp::storage google-cloud-cpp::experimental-storage-grpc)\r\n   [cmake] \r\n   [cmake] The package re2 provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(re2 CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE re2::re2)\r\n   [cmake] \r\n   [cmake] The package protobuf provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(protobuf CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE protobuf::libprotoc protobuf::libprotobuf protobuf::libprotobuf-lite)\r\n   [cmake] \r\n   [cmake] The package grpc provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(gRPC CONFIG REQUIRED)\r\n   [cmake]     # Note: 8 target(s) were omitted.\r\n   [cmake]     target_link_libraries(main PRIVATE gRPC::gpr gRPC::upb gRPC::grpc gRPC::grpc++)\r\n   [cmake] \r\n   [cmake]     find_package(modules CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE re2::re2 c-ares::cares)\r\n   [cmake] \r\n   [cmake] The package gtest provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(GTest CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE GTest::gmock GTest::gtest GTest::gmock_main GTest::gtest_main)\r\n   [cmake] \r\n   [cmake] The package lz4 provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(lz4 CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE lz4::lz4)\r\n   [cmake] \r\n   [cmake] The package zstd provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(zstd CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE zstd::libzstd_shared)\r\n   [cmake] \r\n   [cmake] The package snappy provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(Snappy CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE Snappy::snappy)\r\n   [cmake] \r\n   [cmake] The package orc does not provide CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(protobuf CONFIG REQUIRED)\r\n   [cmake]     find_package(ZLIB REQUIRED)\r\n   [cmake]     find_package(Snappy CONFIG REQUIRED)\r\n   [cmake] \r\n   [cmake]     find_library(LZ4_LIBRARY NAMES lz4d lz4)\r\n   [cmake]     find_library(ZSTD_LIBRARY NAMES zstd)\r\n   [cmake]     find_library(ORC_LIBRARY NAMES orc)\r\n   [cmake] \r\n   [cmake]     target_link_libraries(main PRIVATE ${ORC_LIBRARY} protobuf::libprotoc protobuf::libprotobuf Snappy::snappy ${LZ4_LIBRARY} ${ZSTD_LIBRARY} ZLIB::ZLIB)\r\n   [cmake] \r\n   [cmake] The package rapidjson provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(RapidJSON CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE rapidjson)\r\n   [cmake] \r\n   [cmake] The package sqlite3 provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(unofficial-sqlite3 CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE unofficial::sqlite3::sqlite3)\r\n   [cmake] \r\n   [cmake] The package thrift provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(Thrift CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE thrift::thrift thriftz::thriftz thriftnb::thriftnb)\r\n   [cmake] \r\n   [cmake] The package utf8proc provides CMake targets:\r\n   [cmake] \r\n   [cmake]     find_package(unofficial-utf8proc CONFIG REQUIRED)\r\n   [cmake]     target_link_libraries(main PRIVATE utf8proc)\r\n   [cmake] \r\n   [cmake] -- Running vcpkg install - done\r\n   [cmake] -- Arrow version: 7.0.0 (full: '7.0.0-SNAPSHOT')\r\n   [cmake] -- Arrow SO version: 700 (full: 700.0.0)\r\n   [cmake] -- clang-tidy 12 not found\r\n   [cmake] -- clang-format 12 not found\r\n   [cmake] -- Could NOT find ClangTools (missing: CLANG_FORMAT_BIN CLANG_TIDY_BIN) \r\n   [cmake] -- infer not found\r\n   [cmake] -- Found Python3: C:/Users/voltron/AppData/Local/Programs/Python/Python310/python.exe (found version \"3.10.1\") found components: Interpreter \r\n   [cmake] -- Found cpplint executable at C:/Users/voltron/arrow/cpp/build-support/cpplint.py\r\n   [cmake] -- System processor: AMD64\r\n   [cmake] -- Arrow build warning level: CHECKIN\r\n   [cmake] Configured for DEBUG build (set with cmake -DCMAKE_BUILD_TYPE={release,debug,...})\r\n   [cmake] -- Build Type: DEBUG\r\n   [cmake] -- Using SYSTEM approach to find dependencies\r\n   [cmake] -- ARROW_ABSL_BUILD_VERSION: 20210324.2\r\n   [cmake] -- ARROW_ABSL_BUILD_SHA256_CHECKSUM: 59b862f50e710277f8ede96f083a5bb8d7c9595376146838b9580be90374ee1f\r\n   [cmake] -- ARROW_AWSSDK_BUILD_VERSION: 1.8.133\r\n   [cmake] -- ARROW_AWSSDK_BUILD_SHA256_CHECKSUM: d6c495bc06be5e21dac716571305d77437e7cfd62a2226b8fe48d9ab5785a8d6\r\n   [cmake] -- ARROW_AWS_CHECKSUMS_BUILD_VERSION: v0.1.12\r\n   [cmake] -- ARROW_AWS_CHECKSUMS_BUILD_SHA256_CHECKSUM: 394723034b81cc7cd528401775bc7aca2b12c7471c92350c80a0e2fb9d2909fe\r\n   [cmake] -- ARROW_AWS_C_COMMON_BUILD_VERSION: v0.6.9\r\n   [cmake] -- ARROW_AWS_C_COMMON_BUILD_SHA256_CHECKSUM: 928a3e36f24d1ee46f9eec360ec5cebfe8b9b8994fe39d4fa74ff51aebb12717\r\n   [cmake] -- ARROW_AWS_C_EVENT_STREAM_BUILD_VERSION: v0.1.5\r\n   [cmake] -- ARROW_AWS_C_EVENT_STREAM_BUILD_SHA256_CHECKSUM: f1b423a487b5d6dca118bfc0d0c6cc596dc476b282258a3228e73a8f730422d4\r\n   [cmake] -- ARROW_BOOST_BUILD_VERSION: 1.75.0\r\n   [cmake] -- ARROW_BOOST_BUILD_SHA256_CHECKSUM: cb97b36e2295a321c34851e0455bc2630ad6c691d4f9f589170066cd11c835b4\r\n   [cmake] -- ARROW_BROTLI_BUILD_VERSION: v1.0.9\r\n   [cmake] -- ARROW_BROTLI_BUILD_SHA256_CHECKSUM: f9e8d81d0405ba66d181529af42a3354f838c939095ff99930da6aa9cdf6fe46\r\n   [cmake] -- ARROW_BZIP2_BUILD_VERSION: 1.0.8\r\n   [cmake] -- ARROW_BZIP2_BUILD_SHA256_CHECKSUM: ab5a03176ee106d3f0fa90e381da478ddae405918153cca248e682cd0c4a2269\r\n   [cmake] -- ARROW_CARES_BUILD_VERSION: 1.17.2\r\n   [cmake] -- ARROW_CARES_BUILD_SHA256_CHECKSUM: 4803c844ce20ce510ef0eb83f8ea41fa24ecaae9d280c468c582d2bb25b3913d\r\n   [cmake] -- ARROW_CRC32C_BUILD_VERSION: 1.1.2\r\n   [cmake] -- ARROW_CRC32C_BUILD_SHA256_CHECKSUM: ac07840513072b7fcebda6e821068aa04889018f24e10e46181068fb214d7e56\r\n   [cmake] -- ARROW_GBENCHMARK_BUILD_VERSION: v1.6.0\r\n   [cmake] -- ARROW_GBENCHMARK_BUILD_SHA256_CHECKSUM: 1f71c72ce08d2c1310011ea6436b31e39ccab8c2db94186d26657d41747c85d6\r\n   [cmake] -- ARROW_GFLAGS_BUILD_VERSION: v2.2.2\r\n   [cmake] -- ARROW_GFLAGS_BUILD_SHA256_CHECKSUM: 34af2f15cf7367513b352bdcd2493ab14ce43692d2dcd9dfc499492966c64dcf\r\n   [cmake] -- ARROW_GLOG_BUILD_VERSION: v0.5.0\r\n   [cmake] -- ARROW_GLOG_BUILD_SHA256_CHECKSUM: eede71f28371bf39aa69b45de23b329d37214016e2055269b3b5e7cfd40b59f5\r\n   [cmake] -- ARROW_GOOGLE_CLOUD_CPP_BUILD_VERSION: v1.31.1\r\n   [cmake] -- ARROW_GOOGLE_CLOUD_CPP_BUILD_SHA256_CHECKSUM: dc7cbf95b506a84b48cf71e0462985d262183edeaabdacaaee2109852394a609\r\n   [cmake] -- ARROW_GRPC_BUILD_VERSION: v1.35.0\r\n   [cmake] -- ARROW_GRPC_BUILD_SHA256_CHECKSUM: 27dd2fc5c9809ddcde8eb6fa1fa278a3486566dfc28335fca13eb8df8bd3b958\r\n   [cmake] -- ARROW_GTEST_BUILD_VERSION: 1.11.0\r\n   [cmake] -- ARROW_GTEST_BUILD_SHA256_CHECKSUM: b4870bf121ff7795ba20d20bcdd8627b8e088f2d1dab299a031c1034eddc93d5\r\n   [cmake] -- ARROW_JEMALLOC_BUILD_VERSION: 5.2.1\r\n   [cmake] -- ARROW_JEMALLOC_BUILD_SHA256_CHECKSUM: 34330e5ce276099e2e8950d9335db5a875689a4c6a56751ef3b1d8c537f887f6\r\n   [cmake] -- ARROW_LZ4_BUILD_VERSION: 8f61d8eb7c6979769a484cde8df61ff7c4c77765\r\n   [cmake] -- ARROW_LZ4_BUILD_SHA256_CHECKSUM: 5b072d848f2f93fddb97e1143e22c1bd7fa19fc8431ee69e21758190a88125b4\r\n   [cmake] -- ARROW_MIMALLOC_BUILD_VERSION: v1.7.3\r\n   [cmake] -- ARROW_MIMALLOC_BUILD_SHA256_CHECKSUM: 0f987bda01ca9df87ec90e9d98c63fa893ee61f3cca565e5ca5ed744fdcc5109\r\n   [cmake] -- ARROW_NLOHMANN_JSON_BUILD_VERSION: v3.10.2\r\n   [cmake] -- ARROW_NLOHMANN_JSON_BUILD_SHA256_CHECKSUM: 081ed0f9f89805c2d96335c3acfa993b39a0a5b4b4cef7edb68dd2210a13458c\r\n   [cmake] -- ARROW_OPENTELEMETRY_BUILD_VERSION: v1.1.0\r\n   [cmake] -- ARROW_OPENTELEMETRY_BUILD_SHA256_CHECKSUM: f8fd3adddd47be382dc79c19d7e7efcf86a0dfbb5a237db6e0618dbb7eb8e058\r\n   [cmake] -- ARROW_OPENTELEMETRY_PROTO_BUILD_VERSION: v0.11.0\r\n   [cmake] -- ARROW_OPENTELEMETRY_PROTO_BUILD_SHA256_CHECKSUM: 985367f8905e91018e636cbf0d83ab3f834b665c4f5899a27d10cae9657710e2\r\n   [cmake] -- ARROW_ORC_BUILD_VERSION: 1.7.2\r\n   [cmake] -- ARROW_ORC_BUILD_SHA256_CHECKSUM: ef39bae755116fecb07fb4334656f984ba8ce7cdb1c64de078d3ed186b286007\r\n   [cmake] -- ARROW_PROTOBUF_BUILD_VERSION: v3.18.1\r\n   [cmake] -- ARROW_PROTOBUF_BUILD_SHA256_CHECKSUM: b8ab9bbdf0c6968cf20060794bc61e231fae82aaf69d6e3577c154181991f576\r\n   [cmake] -- ARROW_RAPIDJSON_BUILD_VERSION: 1a803826f1197b5e30703afe4b9c0e7dd48074f5\r\n   [cmake] -- ARROW_RAPIDJSON_BUILD_SHA256_CHECKSUM: 0b6b780b6c534bfb0b23d29910bfe361e486bcfeaf106db8bc8995792072905a\r\n   [cmake] -- ARROW_RE2_BUILD_VERSION: 2021-11-01\r\n   [cmake] -- ARROW_RE2_BUILD_SHA256_CHECKSUM: 8c45f7fba029ab41f2a7e6545058d9eec94eef97ce70df58e92d85cfc08b4669\r\n   [cmake] -- ARROW_SNAPPY_BUILD_VERSION: 1.1.9\r\n   [cmake] -- ARROW_SNAPPY_BUILD_SHA256_CHECKSUM: 75c1fbb3d618dd3a0483bff0e26d0a92b495bbe5059c8b4f1c962b478b6e06e7\r\n   [cmake] -- ARROW_SNAPPY_OLD_BUILD_VERSION: 1.1.8\r\n   [cmake] -- ARROW_SNAPPY_OLD_BUILD_SHA256_CHECKSUM: 16b677f07832a612b0836178db7f374e414f94657c138e6993cbfc5dcc58651f\r\n   [cmake] -- ARROW_THRIFT_BUILD_VERSION: 0.13.0\r\n   [cmake] -- ARROW_THRIFT_BUILD_SHA256_CHECKSUM: 7ad348b88033af46ce49148097afe354d513c1fca7c607b59c33ebb6064b5179\r\n   [cmake] -- ARROW_UTF8PROC_BUILD_VERSION: v2.7.0\r\n   [cmake] -- ARROW_UTF8PROC_BUILD_SHA256_CHECKSUM: 4bb121e297293c0fd55f08f83afab6d35d48f0af4ecc07523ad8ec99aa2b12a1\r\n   [cmake] -- ARROW_XSIMD_BUILD_VERSION: aeec9c872c8b475dedd7781336710f2dd2666cb2\r\n   [cmake] -- ARROW_XSIMD_BUILD_SHA256_CHECKSUM: 0a841e6c8acf216150e4fc19fca8e29fbab9614b56ac7b96e56019264ca27b26\r\n   [cmake] -- ARROW_ZLIB_BUILD_VERSION: 1.2.11\r\n   [cmake] -- ARROW_ZLIB_BUILD_SHA256_CHECKSUM: c3e5e9fdd5004dcb542feda5ee4f0ff0744628baf8ed2dd5d66f8ca1197cb1a1\r\n   [cmake] -- ARROW_ZSTD_BUILD_VERSION: v1.5.1\r\n   [cmake] -- ARROW_ZSTD_BUILD_SHA256_CHECKSUM: dc05773342b28f11658604381afd22cb0a13e8ba17ff2bd7516df377060c18dd\r\n   [cmake] -- Boost include dir: C:/Users/voltron/arrow/cpp/vcpkg_installed/x64-windows/include\r\n   [cmake] -- Boost libraries: Boost::system;Boost::filesystem\r\n   [cmake] -- Providing CMake module for Snappy\r\n   [cmake] -- Providing CMake module for Brotli\r\n   [cmake] -- Building without OpenSSL support. Minimum OpenSSL version 1.0.2 required.\r\n   [cmake] -- Providing CMake module for Thrift\r\n   [cmake] -- Building (vendored) mimalloc from source\r\n   [cmake] -- Building gtest from source\r\n   [cmake] -- RapidJSON found. Headers: C:/Users/voltron/arrow/cpp/vcpkg_installed/x64-windows/share/rapidjson/../../include\r\n   [cmake] -- Building xsimd from source\r\n   [cmake] -- Providing CMake module for Lz4\r\n   [cmake] -- Using ZSTD_ROOT: C:/Users/voltron/arrow/cpp/vcpkg_installed/x64-windows\r\n   [cmake] -- Providing CMake module for zstd\r\n   [cmake] -- Providing CMake module for re2Alt\r\n   [cmake] -- Providing CMake module for utf8proc\r\n   [cmake] -- Found hdfs.h at: C:/Users/voltron/arrow/cpp/thirdparty/hadoop/include/hdfs.h\r\n   [cmake] -- All bundled static libraries: mimalloc::mimalloc\r\n   [cmake] -- CMAKE_C_FLAGS: /DWIN32 /D_WINDOWS /W3  /W3 /EHsc /wd5105 /bigobj /utf-8 /W3 /wd4365 /wd4267 /wd4838 /WX /wd4800 /wd4996 /wd4065  \r\n   [cmake] -- CMAKE_CXX_FLAGS:  /DWIN32 /D_WINDOWS  /GR /EHsc /D_SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING  /W3 /EHsc /wd5105 /bigobj /utf-8 /W3 /wd4365 /wd4267 /wd4838 /WX /wd4800 /wd4996 /wd4065  \r\n   [cmake] -- Could NOT find Backtrace (missing: Backtrace_LIBRARY Backtrace_INCLUDE_DIR) \r\n   [cmake] -- Found Python3: C:/Users/voltron/AppData/Local/Programs/Python/Python310/python.exe (found version \"3.10.1\") found components: Interpreter Development NumPy Development.Module Development.Embed \r\n   [cmake] -- ---------------------------------------------------------------------\r\n   [cmake] -- Arrow version:                                 7.0.0-SNAPSHOT\r\n   [cmake] -- \r\n   [cmake] -- Build configuration summary:\r\n   [cmake] --   Generator: Ninja\r\n   [cmake] --   Build type: DEBUG\r\n   [cmake] --   Source directory: C:/Users/voltron/arrow/cpp\r\n   [cmake] --   Install prefix: C:/Users/voltron/arrow/cpp/build/user-python-debug-windows/dist\r\n   [cmake] -- \r\n   [cmake] -- Compile and link options:\r\n   [cmake] -- \r\n   [cmake] --   ARROW_CXXFLAGS=\"\" [default=\"\"]\r\n   [cmake] --       Compiler flags to append when compiling Arrow\r\n   [cmake] --   ARROW_BUILD_STATIC=OFF [default=ON]\r\n   [cmake] --       Build static libraries\r\n   [cmake] --   ARROW_BUILD_SHARED=ON [default=ON]\r\n   [cmake] --       Build shared libraries\r\n   [cmake] --   ARROW_PACKAGE_KIND=\"\" [default=\"\"]\r\n   [cmake] --       Arbitrary string that identifies the kind of package\r\n   [cmake] --       (for informational purposes)\r\n   [cmake] --   ARROW_GIT_ID=f585a470539d61cbc237b66a1851149d28adc176 [default=\"\"]\r\n   [cmake] --       The Arrow git commit id (if any)\r\n   [cmake] --   ARROW_GIT_DESCRIPTION=apache-arrow-7.0.0.dev-505-gf585a4705 [default=\"\"]\r\n   [cmake] --       The Arrow git commit description (if any)\r\n   [cmake] --   ARROW_NO_DEPRECATED_API=OFF [default=OFF]\r\n   [cmake] --       Exclude deprecated APIs from build\r\n   [cmake] --   ARROW_USE_CCACHE=ON [default=ON]\r\n   [cmake] --       Use ccache when compiling (if available)\r\n   [cmake] --   ARROW_USE_LD_GOLD=OFF [default=OFF]\r\n   [cmake] --       Use ld.gold for linking on Linux (if available)\r\n   [cmake] --   ARROW_USE_PRECOMPILED_HEADERS=OFF [default=OFF]\r\n   [cmake] --       Use precompiled headers when compiling\r\n   [cmake] --   ARROW_SIMD_LEVEL=SSE4_2 [default=NONE|SSE4_2|AVX2|AVX512|NEON|DEFAULT]\r\n   [cmake] --       Compile-time SIMD optimization level\r\n   [cmake] --   ARROW_RUNTIME_SIMD_LEVEL=MAX [default=NONE|SSE4_2|AVX2|AVX512|MAX]\r\n   [cmake] --       Max runtime SIMD optimization level\r\n   [cmake] --   ARROW_ARMV8_ARCH=armv8-a [default=armv8-a|armv8-a+crc+crypto]\r\n   [cmake] --       Arm64 arch and extensions\r\n   [cmake] --   ARROW_ALTIVEC=ON [default=ON]\r\n   [cmake] --       Build with Altivec if compiler has support\r\n   [cmake] --   ARROW_RPATH_ORIGIN=OFF [default=OFF]\r\n   [cmake] --       Build Arrow libraries with RATH set to $ORIGIN\r\n   [cmake] --   ARROW_INSTALL_NAME_RPATH=OFF [default=ON]\r\n   [cmake] --       Build Arrow libraries with install_name set to @rpath\r\n   [cmake] --   ARROW_GGDB_DEBUG=ON [default=ON]\r\n   [cmake] --       Pass -ggdb flag to debug builds\r\n   [cmake] -- \r\n   [cmake] -- Test and benchmark options:\r\n   [cmake] -- \r\n   [cmake] --   ARROW_BUILD_EXAMPLES=OFF [default=OFF]\r\n   [cmake] --       Build the Arrow examples\r\n   [cmake] --   ARROW_BUILD_TESTS=ON [default=OFF]\r\n   [cmake] --       Build the Arrow googletest unit tests\r\n   [cmake] --   ARROW_ENABLE_TIMING_TESTS=ON [default=ON]\r\n   [cmake] --       Enable timing-sensitive tests\r\n   [cmake] --   ARROW_BUILD_INTEGRATION=ON [default=OFF]\r\n   [cmake] --       Build the Arrow integration test executables\r\n   [cmake] --   ARROW_BUILD_BENCHMARKS=OFF [default=OFF]\r\n   [cmake] --       Build the Arrow micro benchmarks\r\n   [cmake] --   ARROW_BUILD_BENCHMARKS_REFERENCE=OFF [default=OFF]\r\n   [cmake] --       Build the Arrow micro reference benchmarks\r\n   [cmake] --   ARROW_BUILD_OPENMP_BENCHMARKS=OFF [default=OFF]\r\n   [cmake] --       Build the Arrow benchmarks that rely on OpenMP\r\n   [cmake] --   ARROW_BUILD_DETAILED_BENCHMARKS=OFF [default=OFF]\r\n   [cmake] --       Build benchmarks that do a longer exploration of performance\r\n   [cmake] --   ARROW_TEST_LINKAGE=shared [default=shared|static]\r\n   [cmake] --       Linkage of Arrow libraries with unit tests executables.\r\n   [cmake] --   ARROW_FUZZING=OFF [default=OFF]\r\n   [cmake] --       Build Arrow Fuzzing executables\r\n   [cmake] --   ARROW_LARGE_MEMORY_TESTS=OFF [default=OFF]\r\n   [cmake] --       Enable unit tests which use large memory\r\n   [cmake] -- \r\n   [cmake] -- Lint options:\r\n   [cmake] -- \r\n   [cmake] --   ARROW_ONLY_LINT=OFF [default=OFF]\r\n   [cmake] --       Only define the lint and check-format targets\r\n   [cmake] --   ARROW_VERBOSE_LINT=OFF [default=OFF]\r\n   [cmake] --       If off, 'quiet' flags will be passed to linting tools\r\n   [cmake] --   ARROW_GENERATE_COVERAGE=OFF [default=OFF]\r\n   [cmake] --       Build with C++ code coverage enabled\r\n   [cmake] -- \r\n   [cmake] -- Checks options:\r\n   [cmake] -- \r\n   [cmake] --   ARROW_TEST_MEMCHECK=OFF [default=OFF]\r\n   [cmake] --       Run the test suite using valgrind --tool=memcheck\r\n   [cmake] --   ARROW_USE_ASAN=OFF [default=OFF]\r\n   [cmake] --       Enable Address Sanitizer checks\r\n   [cmake] --   ARROW_USE_TSAN=OFF [default=OFF]\r\n   [cmake] --       Enable Thread Sanitizer checks\r\n   [cmake] --   ARROW_USE_UBSAN=OFF [default=OFF]\r\n   [cmake] --       Enable Undefined Behavior sanitizer checks\r\n   [cmake] -- \r\n   [cmake] -- Project component options:\r\n   [cmake] -- \r\n   [cmake] --   ARROW_BUILD_UTILITIES=OFF [default=OFF]\r\n   [cmake] --       Build Arrow commandline utilities\r\n   [cmake] --   ARROW_COMPUTE=ON [default=OFF]\r\n   [cmake] --       Build the Arrow Compute Modules\r\n   [cmake] --   ARROW_CSV=ON [default=OFF]\r\n   [cmake] --       Build the Arrow CSV Parser Module\r\n   [cmake] --   ARROW_CUDA=OFF [default=OFF]\r\n   [cmake] --       Build the Arrow CUDA extensions (requires CUDA toolkit)\r\n   [cmake] --   ARROW_DATASET=ON [default=OFF]\r\n   [cmake] --       Build the Arrow Dataset Modules\r\n   [cmake] --   ARROW_ENGINE=ON [default=OFF]\r\n   [cmake] --       Build the Arrow Execution Engine\r\n   [cmake] --   ARROW_FILESYSTEM=ON [default=OFF]\r\n   [cmake] --       Build the Arrow Filesystem Layer\r\n   [cmake] --   ARROW_FLIGHT=OFF [default=OFF]\r\n   [cmake] --       Build the Arrow Flight RPC System (requires GRPC, Protocol Buffers)\r\n   [cmake] --   ARROW_FLIGHT_SQL=OFF [default=OFF]\r\n   [cmake] --       Build the Arrow Flight SQL extension\r\n   [cmake] --   ARROW_GANDIVA=OFF [default=OFF]\r\n   [cmake] --       Build the Gandiva libraries\r\n   [cmake] --   ARROW_GCS=OFF [default=OFF]\r\n   [cmake] --       Build Arrow with GCS support (requires the GCloud SDK for C++)\r\n   [cmake] --   ARROW_HDFS=ON [default=OFF]\r\n   [cmake] --       Build the Arrow HDFS bridge\r\n   [cmake] --   ARROW_HIVESERVER2=OFF [default=OFF]\r\n   [cmake] --       Build the HiveServer2 client and Arrow adapter\r\n   [cmake] --   ARROW_IPC=ON [default=ON]\r\n   [cmake] --       Build the Arrow IPC extensions\r\n   [cmake] --   ARROW_JEMALLOC=OFF [default=OFF]\r\n   [cmake] --       Build the Arrow jemalloc-based allocator\r\n   [cmake] --   ARROW_JNI=OFF [default=OFF]\r\n   [cmake] --       Build the Arrow JNI lib\r\n   [cmake] --   ARROW_JSON=ON [default=OFF]\r\n   [cmake] --       Build Arrow with JSON support (requires RapidJSON)\r\n   [cmake] --   ARROW_MIMALLOC=ON [default=OFF]\r\n   [cmake] --       Build the Arrow mimalloc-based allocator\r\n   [cmake] --   ARROW_PARQUET=ON [default=OFF]\r\n   [cmake] --       Build the Parquet libraries\r\n   [cmake] --   ARROW_ORC=OFF [default=OFF]\r\n   [cmake] --       Build the Arrow ORC adapter\r\n   [cmake] --   ARROW_PLASMA=OFF [default=OFF]\r\n   [cmake] --       Build the plasma object store along with Arrow\r\n   [cmake] --   ARROW_PLASMA_JAVA_CLIENT=OFF [default=OFF]\r\n   [cmake] --       Build the plasma object store java client\r\n   [cmake] --   ARROW_PYTHON=ON [default=OFF]\r\n   [cmake] --       Build the Arrow CPython extensions\r\n   [cmake] --   ARROW_S3=OFF [default=OFF]\r\n   [cmake] --       Build Arrow with S3 support (requires the AWS SDK for C++)\r\n   [cmake] --   ARROW_SKYHOOK=OFF [default=OFF]\r\n   [cmake] --       Build the Skyhook libraries\r\n   [cmake] --   ARROW_TENSORFLOW=OFF [default=OFF]\r\n   [cmake] --       Build Arrow with TensorFlow support enabled\r\n   [cmake] --   ARROW_TESTING=ON [default=OFF]\r\n   [cmake] --       Build the Arrow testing libraries\r\n   [cmake] -- \r\n   [cmake] -- Thirdparty toolchain options:\r\n   [cmake] -- \r\n   [cmake] --   ARROW_DEPENDENCY_SOURCE=SYSTEM [default=AUTO|BUNDLED|SYSTEM|CONDA|VCPKG|BREW]\r\n   [cmake] --       Method to use for acquiring arrow's build dependencies\r\n   [cmake] --   ARROW_VERBOSE_THIRDPARTY_BUILD=OFF [default=OFF]\r\n   [cmake] --       Show output from ExternalProjects rather than just logging to files\r\n   [cmake] --   ARROW_DEPENDENCY_USE_SHARED=ON [default=ON]\r\n   [cmake] --       Link to shared libraries\r\n   [cmake] --   ARROW_BOOST_USE_SHARED=ON [default=ON]\r\n   [cmake] --       Rely on boost shared libraries where relevant\r\n   [cmake] --   ARROW_BROTLI_USE_SHARED=ON [default=ON]\r\n   [cmake] --       Rely on Brotli shared libraries where relevant\r\n   [cmake] --   ARROW_BZ2_USE_SHARED=ON [default=ON]\r\n   [cmake] --       Rely on Bz2 shared libraries where relevant\r\n   [cmake] --   ARROW_GFLAGS_USE_SHARED=ON [default=ON]\r\n   [cmake] --       Rely on GFlags shared libraries where relevant\r\n   [cmake] --   ARROW_GRPC_USE_SHARED=ON [default=ON]\r\n   [cmake] --       Rely on gRPC shared libraries where relevant\r\n   [cmake] --   ARROW_LZ4_USE_SHARED=ON [default=ON]\r\n   [cmake] --       Rely on lz4 shared libraries where relevant\r\n   [cmake] --   ARROW_OPENSSL_USE_SHARED=ON [default=ON]\r\n   [cmake] --       Rely on OpenSSL shared libraries where relevant\r\n   [cmake] --   ARROW_PROTOBUF_USE_SHARED=ON [default=ON]\r\n   [cmake] --       Rely on Protocol Buffers shared libraries where relevant\r\n   [cmake] --   ARROW_THRIFT_USE_SHARED=OFF [default=OFF]\r\n   [cmake] --       Rely on thrift shared libraries where relevant\r\n   [cmake] --   ARROW_UTF8PROC_USE_SHARED=ON [default=ON]\r\n   [cmake] --       Rely on utf8proc shared libraries where relevant\r\n   [cmake] --   ARROW_SNAPPY_USE_SHARED=ON [default=ON]\r\n   [cmake] --       Rely on snappy shared libraries where relevant\r\n   [cmake] --   ARROW_UTF8PROC_USE_SHARED=ON [default=ON]\r\n   [cmake] --       Rely on utf8proc shared libraries where relevant\r\n   [cmake] --   ARROW_ZSTD_USE_SHARED=ON [default=ON]\r\n   [cmake] --       Rely on zstd shared libraries where relevant\r\n   [cmake] --   ARROW_USE_GLOG=OFF [default=OFF]\r\n   [cmake] --       Build libraries with glog support for pluggable logging\r\n   [cmake] --   ARROW_WITH_BACKTRACE=ON [default=ON]\r\n   [cmake] --       Build with backtrace support\r\n   [cmake] --   ARROW_WITH_OPENTELEMETRY=OFF [default=OFF]\r\n   [cmake] --       Build libraries with OpenTelemetry support for distributed tracing\r\n   [cmake] --   ARROW_WITH_BROTLI=ON [default=OFF]\r\n   [cmake] --       Build with Brotli compression\r\n   [cmake] --   ARROW_WITH_BZ2=ON [default=OFF]\r\n   [cmake] --       Build with BZ2 compression\r\n   [cmake] --   ARROW_WITH_LZ4=ON [default=OFF]\r\n   [cmake] --       Build with lz4 compression\r\n   [cmake] --   ARROW_WITH_SNAPPY=ON [default=OFF]\r\n   [cmake] --       Build with Snappy compression\r\n   [cmake] --   ARROW_WITH_ZLIB=ON [default=OFF]\r\n   [cmake] --       Build with zlib compression\r\n   [cmake] --   ARROW_WITH_ZSTD=ON [default=OFF]\r\n   [cmake] --       Build with zstd compression\r\n   [cmake] --   ARROW_WITH_UTF8PROC=ON [default=ON]\r\n   [cmake] --       Build with support for Unicode properties using the utf8proc library\r\n   [cmake] --       (only used if ARROW_COMPUTE is ON or ARROW_GANDIVA is ON)\r\n   [cmake] --   ARROW_WITH_RE2=ON [default=ON]\r\n   [cmake] --       Build with support for regular expressions using the re2 library\r\n   [cmake] --       (only used if ARROW_COMPUTE or ARROW_GANDIVA is ON)\r\n   [cmake] -- \r\n   [cmake] -- MSVC options:\r\n   [cmake] -- \r\n   [cmake] --   MSVC_LINK_VERBOSE=OFF [default=OFF]\r\n   [cmake] --       Pass verbose linking options when linking libraries and executables\r\n   [cmake] --   BROTLI_MSVC_STATIC_LIB_SUFFIX=-static [default=\"-static\"]\r\n   [cmake] --       Brotli static lib suffix used on Windows with MSVC\r\n   [cmake] --   PROTOBUF_MSVC_STATIC_LIB_SUFFIX=\"\" [default=\"\"]\r\n   [cmake] --       Protobuf static lib suffix used on Windows with MSVC\r\n   [cmake] --   RE2_MSVC_STATIC_LIB_SUFFIX=_static [default=\"_static\"]\r\n   [cmake] --       re2 static lib suffix used on Windows with MSVC\r\n   [cmake] --   SNAPPY_MSVC_STATIC_LIB_SUFFIX=\"\" [default=\"\"]\r\n   [cmake] --       Snappy static lib suffix used on Windows with MSVC\r\n   [cmake] --   LZ4_MSVC_STATIC_LIB_SUFFIX=\"\" [default=\"_static\"]\r\n   [cmake] --       Lz4 static lib suffix used on Windows with MSVC\r\n   [cmake] --   ZSTD_MSVC_STATIC_LIB_SUFFIX=_static [default=\"_static\"]\r\n   [cmake] --       ZStd static lib suffix used on Windows with MSVC\r\n   [cmake] --   ARROW_USE_STATIC_CRT=OFF [default=OFF]\r\n   [cmake] --       Build Arrow with statically linked CRT\r\n   [cmake] -- \r\n   [cmake] -- Parquet options:\r\n   [cmake] -- \r\n   [cmake] --   PARQUET_MINIMAL_DEPENDENCY=OFF [default=OFF]\r\n   [cmake] --       Depend only on Thirdparty headers to build libparquet.\r\n   [cmake] --       Always OFF if building binaries\r\n   [cmake] --   PARQUET_BUILD_EXECUTABLES=OFF [default=OFF]\r\n   [cmake] --       Build the Parquet executable CLI tools. Requires static libraries to be built.\r\n   [cmake] --   PARQUET_BUILD_EXAMPLES=OFF [default=OFF]\r\n   [cmake] --       Build the Parquet examples. Requires static libraries to be built.\r\n   [cmake] --   PARQUET_REQUIRE_ENCRYPTION=OFF [default=OFF]\r\n   [cmake] --       Build support for encryption. Fail if OpenSSL is not found\r\n   [cmake] -- \r\n   [cmake] -- Gandiva options:\r\n   [cmake] -- \r\n   [cmake] --   ARROW_GANDIVA_JAVA=OFF [default=OFF]\r\n   [cmake] --       Build the Gandiva JNI wrappers\r\n   [cmake] --   ARROW_GANDIVA_STATIC_LIBSTDCPP=OFF [default=OFF]\r\n   [cmake] --       Include -static-libstdc++ -static-libgcc when linking with\r\n   [cmake] --       Gandiva static libraries\r\n   [cmake] --   ARROW_GANDIVA_PC_CXX_FLAGS=\"\" [default=\"\"]\r\n   [cmake] --       Compiler flags to append when pre-compiling Gandiva operations\r\n   [cmake] -- \r\n   [cmake] -- Advanced developer options:\r\n   [cmake] -- \r\n   [cmake] --   ARROW_EXTRA_ERROR_CONTEXT=ON [default=OFF]\r\n   [cmake] --       Compile with extra error context (line numbers, code)\r\n   [cmake] --   ARROW_OPTIONAL_INSTALL=OFF [default=OFF]\r\n   [cmake] --       If enabled install ONLY targets that have already been built. Please be\r\n   [cmake] --       advised that if this is enabled 'install' will fail silently on components\r\n   [cmake] --       that have not been built\r\n   [cmake] --   Outputting build configuration summary to C:/Users/voltron/arrow/cpp/build/user-python-debug-windows/cmake_summary.json\r\n   [cmake] -- Configuring done\r\n   [cmake] -- Generating done\r\n   [cmake] -- Build files have been written to: C:/Users/voltron/arrow/cpp/build/user-python-debug-windows\r\n   [cpptools] The build configurations generated do not contain the active build configuration. Using 'DEBUG' for CMAKE_BUILD_TYPE instead of 'Debug' to ensure that IntelliSense configurations can be found\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-25T16:55:39.105+0000",
                    "updated": "2022-01-25T16:55:39.105+0000",
                    "started": "2022-01-25T16:55:39.105+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "714894",
                    "issueId": "13424182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424182/worklog/768194",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 opened a new pull request, #13108:\nURL: https://github.com/apache/arrow/pull/13108\n\n   These are the changes needed for me to be able to compile Arrow with the following CMakeUserPresets entry:\r\n   \r\n   ```json\r\n   {\r\n       \"ARROW_DEPENDENCY_SOURCE\": \"VCPKG\",\r\n       \"CMAKE_BUILD_TYPE\": \"Debug\",\r\n       \"VCPKG_TARGET_TRIPLET\": \"x64-windows\",\r\n       \"VCPKG_LIBRARY_LINKAGE\": \"dynamic\",\r\n       \"ARROW_DEPENDENCY_USE_SHARED\": \"ON\",\r\n       \"ARROW_BUILD_EXAMPLES\": \"ON\"\r\n   }\r\n   ```\n\n\n",
                    "created": "2022-05-09T21:05:56.165+0000",
                    "updated": "2022-05-09T21:05:56.165+0000",
                    "started": "2022-05-09T21:05:56.164+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "768194",
                    "issueId": "13424182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424182/worklog/768195",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13108:\nURL: https://github.com/apache/arrow/pull/13108#issuecomment-1121580766\n\n   https://issues.apache.org/jira/browse/ARROW-15415\n\n\n",
                    "created": "2022-05-09T21:06:16.791+0000",
                    "updated": "2022-05-09T21:06:16.791+0000",
                    "started": "2022-05-09T21:06:16.791+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "768195",
                    "issueId": "13424182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424182/worklog/768196",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on PR #12230:\nURL: https://github.com/apache/arrow/pull/12230#issuecomment-1121581451\n\n   Closing in favor of #13108\n\n\n",
                    "created": "2022-05-09T21:07:05.070+0000",
                    "updated": "2022-05-09T21:07:05.070+0000",
                    "started": "2022-05-09T21:07:05.070+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "768196",
                    "issueId": "13424182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424182/worklog/768197",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 closed pull request #12230: ARROW-15415: [C++] Fixes for Windows Debug build\nURL: https://github.com/apache/arrow/pull/12230\n\n\n",
                    "created": "2022-05-09T21:07:07.270+0000",
                    "updated": "2022-05-09T21:07:07.270+0000",
                    "started": "2022-05-09T21:07:07.270+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "768197",
                    "issueId": "13424182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424182/worklog/768200",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on PR #13108:\nURL: https://github.com/apache/arrow/pull/13108#issuecomment-1121587787\n\n   I have been working with these changes in my local, but there is one final error I haven't been able to figure out how to fix.\r\n   \r\n   https://github.com/apache/arrow/blob/d00caa947ea53774e0e6745c857bf622457081ad/cpp/src/arrow/util/tracing.h#L64\r\n   \r\n   ```\r\n   [build] FAILED: src/arrow/CMakeFiles/arrow_shared.dir/compute/exec/tpch_node.cc.obj \r\n   [build] C:\\PROGRA~1\\MICROS~4\\2022\\COMMUN~1\\VC\\Tools\\MSVC\\1430~1.307\\bin\\Hostx64\\x64\\cl.exe  /nologo /TP -DARROW_EXPORTING -DARROW_EXTRA_ERROR_CONTEXT -DARROW_HAVE_RUNTIME_AVX2 -DARROW_HAVE_RUNTIME_AVX512 -DARROW_HAVE_RUNTIME_BMI2 -DARROW_HAVE_RUNTIME_SSE4_2 -DARROW_HAVE_SSE4_2 -DARROW_MIMALLOC -DARROW_WITH_BROTLI -DARROW_WITH_BZ2 -DARROW_WITH_LZ4 -DARROW_WITH_RE2 -DARROW_WITH_SNAPPY -DARROW_WITH_TIMING_TESTS -DARROW_WITH_UTF8PROC -DARROW_WITH_ZLIB -DARROW_WITH_ZSTD -DBOOST_ALL_DYN_LINK -DBOOST_ALL_NO_LIB -DPROTOBUF_USE_DLLS -DURI_STATIC_BUILD -D_CRT_SECURE_NO_WARNINGS -D_ENABLE_EXTENDED_ALIGNED_STORAGE -Darrow_shared_EXPORTS -IC:\\Users\\voltron\\arrow\\cpp\\build\\user-cpp-debug-mscv\\src -IC:\\Users\\voltron\\arrow\\cpp\\src -IC:\\Users\\voltron\\arrow\\cpp\\src\\generated -IC:\\Users\\voltron\\arrow\\cpp\\thirdparty\\flatbuffers\\include -IC:\\Users\\voltron\\arrow\\cpp\\vcpkg_installed\\x64-windows\\include -IC:\\Users\\voltron\\arrow\\cpp\\build\\user-cpp-debug-mscv\\mimalloc_ep\\src\\mimalloc_ep\\include\\mimalloc-1.7 -IC:\\Users\\voltron\\arrow\\cpp\\vcpkg_installed\\x64-windows\\share\\rapidjson\\..\\..\\include -IC:\\Users\\voltron\\arrow\\cpp\\build\\user-cpp-debug-mscv\\xsimd_ep\\src\\xsimd_ep-install\\include -IC:\\Users\\voltron\\arrow\\cpp\\thirdparty\\hadoop\\include /DWIN32 /D_WINDOWS  /GR /EHsc /D_SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING  /W3 /EHsc /wd5105 /bigobj /utf-8 /W3 /wd4365 /wd4267 /wd4838 /WX /wd4800 /wd4996 /wd4065   /MDd /Zi /Ob0 /Od /RTC1 /showIncludes /Fosrc\\arrow\\CMakeFiles\\arrow_shared.dir\\compute\\exec\\tpch_node.cc.obj /Fdsrc\\arrow\\CMakeFiles\\arrow_shared.dir\\ /FS -c C:\\Users\\voltron\\arrow\\cpp\\src\\arrow\\compute\\exec\\tpch_node.cc\r\n   [build] C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.30.30705\\include\\memory(3086): error C2027: use of undefined type 'arrow::internal::tracing::SpanImpl'\r\n   [build] C:\\Users\\voltron\\arrow\\cpp\\src\\arrow/util/tracing.h(30): note: see declaration of 'arrow::internal::tracing::SpanImpl'\r\n   [build] C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.30.30705\\include\\memory(3085): note: while compiling class template member function 'void std::default_delete<arrow::util::tracing::Span::Impl>::operator ()(_Ty *) noexcept const'\r\n   [build]         with\r\n   [build]         [\r\n   [build]             _Ty=arrow::util::tracing::Span::Impl\r\n   [build]         ]\r\n   [build] C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.30.30705\\include\\memory(3195): note: see reference to function template instantiation 'void std::default_delete<arrow::util::tracing::Span::Impl>::operator ()(_Ty *) noexcept const' being compiled\r\n   [build]         with\r\n   [build]         [\r\n   [build]             _Ty=arrow::util::tracing::Span::Impl\r\n   [build]         ]\r\n   [build] C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.30.30705\\include\\memory(3122): note: see reference to class template instantiation 'std::default_delete<arrow::util::tracing::Span::Impl>' being compiled\r\n   [build] C:\\Users\\voltron\\arrow\\cpp\\src\\arrow/util/tracing.h(64): note: see reference to class template instantiation 'std::unique_ptr<arrow::util::tracing::Span::Impl,std::default_delete<arrow::util::tracing::Span::Impl>>' being compiled\r\n   [build] C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.30.30705\\include\\memory(3086): error C2338: can't delete an incomplete type\r\n   [build] C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.30.30705\\include\\memory(3087): warning C4150: deletion of pointer to incomplete type 'arrow::internal::tracing::SpanImpl'; no destructor called\r\n   [build] C:\\Users\\voltron\\arrow\\cpp\\src\\arrow/util/tracing.h(30): note: see declaration of 'arrow::internal::tracing::SpanImpl'\r\n   ```\r\n   \r\n   I am able to get this to work if I change it to a `shared_ptr` instead of `unique_ptr`, but that's not actually a good idea. \r\n   \r\n   This build is configured with `ARROW_WITH_OPENTELEMETRY=OFF` (there's a completely different set of errors if I turn it on).\n\n\n",
                    "created": "2022-05-09T21:14:08.604+0000",
                    "updated": "2022-05-09T21:14:08.604+0000",
                    "started": "2022-05-09T21:14:08.604+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "768200",
                    "issueId": "13424182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424182/worklog/768202",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #13108:\nURL: https://github.com/apache/arrow/pull/13108#discussion_r868473439\n\n\n##########\ncpp/src/arrow/compute/light_array_test.cc:\n##########\n@@ -18,6 +18,7 @@\n #include \"arrow/compute/light_array.h\"\n \n #include <gtest/gtest.h>\n+#include <numeric>\n\nReview Comment:\n   +1 to this change.  I had noticed it myself but hadn't gotten around to making a PR.\n\n\n\n",
                    "created": "2022-05-09T21:17:49.323+0000",
                    "updated": "2022-05-09T21:17:49.323+0000",
                    "started": "2022-05-09T21:17:49.322+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "768202",
                    "issueId": "13424182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424182/worklog/768680",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wjones127 commented on PR #13108:\nURL: https://github.com/apache/arrow/pull/13108#issuecomment-1122795681\n\n   For the tracing impl incomplete type issue, it seemed like the fix was to make sure that any file with the line:\r\n   \r\n   ```cpp\r\n   #include \"arrow/compute/exec/exec_plan.h\" // contains #include \"arrow/util/tracing.h\"\r\n   ```\r\n   \r\n   Also has the line\r\n   \r\n   ```cpp\r\n   #include \"arrow/util/tracing_internal.h\"\r\n   ```\n\n\n",
                    "created": "2022-05-10T19:47:14.619+0000",
                    "updated": "2022-05-10T19:47:14.619+0000",
                    "started": "2022-05-10T19:47:14.619+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "768680",
                    "issueId": "13424182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424182/worklog/769586",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on PR #13108:\nURL: https://github.com/apache/arrow/pull/13108#issuecomment-1124929674\n\n   > For the tracing impl incomplete type issue, it seemed like the fix was to make sure that any file with the line:\r\n   > \r\n   > ```c++\r\n   > #include \"arrow/compute/exec/exec_plan.h\" // contains #include \"arrow/util/tracing.h\"\r\n   > ```\r\n   > \r\n   > Also has the line\r\n   > \r\n   > ```c++\r\n   > #include \"arrow/util/tracing_internal.h\"\r\n   > ```\r\n   \r\n   Hmm, isn't that a problem? `exec_plan.h` is a public API, so this means the header is not usable by applications?\n\n\n",
                    "created": "2022-05-12T12:26:19.236+0000",
                    "updated": "2022-05-12T12:26:19.236+0000",
                    "started": "2022-05-12T12:26:19.236+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "769586",
                    "issueId": "13424182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424182/worklog/769587",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on PR #13108:\nURL: https://github.com/apache/arrow/pull/13108#issuecomment-1124931344\n\n   It seems something else is implicitly using `SpanImpl::~SpanImpl`\n\n\n",
                    "created": "2022-05-12T12:27:59.729+0000",
                    "updated": "2022-05-12T12:27:59.729+0000",
                    "started": "2022-05-12T12:27:59.729+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "769587",
                    "issueId": "13424182"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 21600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3dd70772[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3fb5389c[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7b848b6e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6de32d5a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@21c4cce3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@30429052[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6fc2b2cf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1b3fcb90[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1c9bbfc0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@387f7c01[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4251e50b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@27d7c59a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 21600,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Jun 13 13:09:43 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": [
            "C++"
        ],
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-06-13T13:09:43.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15415/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2022-01-22T19:34:26.000+0000",
        "updated": "2022-06-13T13:09:43.000+0000",
        "timeoriginalestimate": null,
        "description": "While trying to create a debug build of Arrow on Windows using vcpkg and MSVC, I encountered a few issues with the current build configuration:\r\n\r\n# Python debug and release libraries are passed, but our Cmake scripts only expect one or the other. Just as reported in ARROW-13470\r\n # Since vcpkg upgraded gtest to 1.11.0, there is again a mismatch between the bundled gtest and the vcpkg versions. So we get the same error as was found in ARROW-14393\r\n # Thrift could not find debug static libraries, because it was missing the \"d\" suffix. It should be {{libthriftmdd.lib}}, but was finding {{libthriftmd.lib}}.\r\n\r\nAdditionally, the recommended {{clcache}} program from our Windows developer docs is no longer maintained. I found its dependency {{pyuv}} doesn't install on Windows anymore, and is also no longer maintained.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 21600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Cannot build debug with MSVC and vcpkg",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424182/comment/17525458",
                    "id": "17525458",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "[~kou] I don't know if you would be able to help get this to completion? Debug builds on Windows are often a bit hairy to get right.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-04-21T07:13:20.887+0000",
                    "updated": "2022-04-21T07:13:20.887+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424182/comment/17525469",
                    "id": "17525469",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "I'll take a look at this later.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2022-04-21T07:21:20.135+0000",
                    "updated": "2022-04-21T07:21:20.135+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424182/comment/17534021",
                    "id": "17534021",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
                        "name": "willjones127",
                        "key": "willjones127",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Will Jones",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "FYI I submitted a draft PR just now with some fixes I've been keeping stashed in my local copy for a while now. Doesn't solve all issues on MSVC + vcpkg, but is enough to get me a basic build.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=willjones127",
                        "name": "willjones127",
                        "key": "willjones127",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Will Jones",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-05-09T21:16:24.101+0000",
                    "updated": "2022-05-09T21:16:24.101+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424182/comment/17553570",
                    "id": "17553570",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 13108\n[https://github.com/apache/arrow/pull/13108]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-06-13T13:09:43.846+0000",
                    "updated": "2022-06-13T13:09:43.846+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|z0yufs:",
        "customfield_12314139": null
    }
}