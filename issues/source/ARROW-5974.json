{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13245659",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245659",
    "key": "ARROW-5974",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343937",
                "id": "12343937",
                "description": "",
                "name": "0.13.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-04-01"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344925",
                "id": "12344925",
                "description": "",
                "name": "0.14.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-07-04"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jordan_samuels",
            "name": "jordan_samuels",
            "key": "jordan_samuels",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Jordan Samuels",
            "active": true,
            "timeZone": "America/Chicago"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jordan_samuels",
            "name": "jordan_samuels",
            "key": "jordan_samuels",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Jordan Samuels",
            "active": true,
            "timeZone": "America/Chicago"
        },
        "aggregateprogress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5974/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 11,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245659/worklog/280924",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4923: ARROW-5974: [C++] Support reading concatenated compressed streams\nURL: https://github.com/apache/arrow/pull/4923\n \n \n   Multiple concatenated compressed streams are read back as a single decompressed stream.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-23T09:54:42.512+0000",
                    "updated": "2019-07-23T09:54:42.512+0000",
                    "started": "2019-07-23T09:54:42.512+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "280924",
                    "issueId": "13245659"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245659/worklog/282045",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4923: ARROW-5974: [C++] Support reading concatenated compressed streams\nURL: https://github.com/apache/arrow/pull/4923#discussion_r306878959\n \n \n\n ##########\n File path: cpp/src/arrow/io/compressed.cc\n ##########\n @@ -198,9 +197,10 @@ Status CompressedOutputStream::Make(util::Codec* codec,\n Status CompressedOutputStream::Make(MemoryPool* pool, util::Codec* codec,\n                                     const std::shared_ptr<OutputStream>& raw,\n                                     std::shared_ptr<CompressedOutputStream>* out) {\n+  // CAUTION: codec is not owned\n   std::shared_ptr<CompressedOutputStream> res(new CompressedOutputStream);\n-  res->impl_ = std::unique_ptr<Impl>(new Impl(pool, codec, std::move(raw)));\n-  RETURN_NOT_OK(res->impl_->Init());\n+  res->impl_ = std::unique_ptr<Impl>(new Impl(pool, std::move(raw)));\n \n Review comment:\n   ```suggestion\r\n     res->impl_.reset(new Impl(pool, std::move(raw)));\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T15:41:56.069+0000",
                    "updated": "2019-07-24T15:41:56.069+0000",
                    "started": "2019-07-24T15:41:56.069+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "282045",
                    "issueId": "13245659"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245659/worklog/282055",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4923: ARROW-5974: [C++] Support reading concatenated compressed streams\nURL: https://github.com/apache/arrow/pull/4923#discussion_r306893390\n \n \n\n ##########\n File path: cpp/src/arrow/io/compressed.cc\n ##########\n @@ -198,9 +197,10 @@ Status CompressedOutputStream::Make(util::Codec* codec,\n Status CompressedOutputStream::Make(MemoryPool* pool, util::Codec* codec,\n                                     const std::shared_ptr<OutputStream>& raw,\n                                     std::shared_ptr<CompressedOutputStream>* out) {\n+  // CAUTION: codec is not owned\n   std::shared_ptr<CompressedOutputStream> res(new CompressedOutputStream);\n-  res->impl_ = std::unique_ptr<Impl>(new Impl(pool, codec, std::move(raw)));\n-  RETURN_NOT_OK(res->impl_->Init());\n+  res->impl_ = std::unique_ptr<Impl>(new Impl(pool, std::move(raw)));\n \n Review comment:\n   +1\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T16:01:45.228+0000",
                    "updated": "2019-07-24T16:01:45.228+0000",
                    "started": "2019-07-24T16:01:45.228+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "282055",
                    "issueId": "13245659"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245659/worklog/282125",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4923: ARROW-5974: [C++] Support reading concatenated compressed streams\nURL: https://github.com/apache/arrow/pull/4923#issuecomment-514703668\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4923?src=pr&el=h1) Report\n   > :exclamation: No coverage uploaded for pull request base (`master@c930839`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n   > The diff coverage is `99.08%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4923/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4923?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff            @@\n   ##             master    #4923   +/-   ##\n   =========================================\n     Coverage          ?   89.09%           \n   =========================================\n     Files             ?      717           \n     Lines             ?   100507           \n     Branches          ?        0           \n   =========================================\n     Hits              ?    89545           \n     Misses            ?    10962           \n     Partials          ?        0\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4923?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/util/compression.h](https://codecov.io/gh/apache/arrow/pull/4923/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2NvbXByZXNzaW9uLmg=) | `100% <\u00f8> (\u00f8)` | |\n   | [cpp/src/arrow/util/compression\\_bz2.cc](https://codecov.io/gh/apache/arrow/pull/4923/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2NvbXByZXNzaW9uX2J6Mi5jYw==) | `55.72% <100%> (\u00f8)` | |\n   | [cpp/src/arrow/io/compressed.cc](https://codecov.io/gh/apache/arrow/pull/4923/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9jb21wcmVzc2VkLmNj) | `91% <100%> (\u00f8)` | |\n   | [cpp/src/arrow/util/compression\\_lz4.cc](https://codecov.io/gh/apache/arrow/pull/4923/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2NvbXByZXNzaW9uX2x6NC5jYw==) | `79.66% <100%> (\u00f8)` | |\n   | [cpp/src/arrow/util/compression-test.cc](https://codecov.io/gh/apache/arrow/pull/4923/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2NvbXByZXNzaW9uLXRlc3QuY2M=) | `99.22% <100%> (\u00f8)` | |\n   | [cpp/src/arrow/util/compression\\_zstd.cc](https://codecov.io/gh/apache/arrow/pull/4923/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2NvbXByZXNzaW9uX3pzdGQuY2M=) | `92.15% <100%> (\u00f8)` | |\n   | [cpp/src/arrow/io/compressed-test.cc](https://codecov.io/gh/apache/arrow/pull/4923/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9jb21wcmVzc2VkLXRlc3QuY2M=) | `100% <100%> (\u00f8)` | |\n   | [python/pyarrow/tests/test\\_csv.py](https://codecov.io/gh/apache/arrow/pull/4923/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9jc3YucHk=) | `98.89% <100%> (\u00f8)` | |\n   | [python/pyarrow/tests/test\\_io.py](https://codecov.io/gh/apache/arrow/pull/4923/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9pby5weQ==) | `96.9% <100%> (\u00f8)` | |\n   | [cpp/src/arrow/util/compression\\_brotli.cc](https://codecov.io/gh/apache/arrow/pull/4923/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2NvbXByZXNzaW9uX2Jyb3RsaS5jYw==) | `90.47% <100%> (\u00f8)` | |\n   | ... and [1 more](https://codecov.io/gh/apache/arrow/pull/4923/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4923?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4923?src=pr&el=footer). Last update [c930839...8ef3293](https://codecov.io/gh/apache/arrow/pull/4923?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-24T16:26:21.930+0000",
                    "updated": "2019-07-24T16:26:21.930+0000",
                    "started": "2019-07-24T16:26:21.930+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "282125",
                    "issueId": "13245659"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245659/worklog/285703",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #4923: ARROW-5974: [C++] Support reading concatenated compressed streams\nURL: https://github.com/apache/arrow/pull/4923#discussion_r309175757\n \n \n\n ##########\n File path: cpp/src/arrow/io/compressed.cc\n ##########\n @@ -330,19 +333,24 @@ class CompressedInputStream::Impl {\n \n       // At this point, no more decompressed data remains,\n       // so we need to decompress more\n-      if (decompressor_->IsFinished()) {\n-        break;\n-      }\n       // First try to read data from the decompressor\n       if (compressed_) {\n+        if (decompressor_->IsFinished()) {\n \n Review comment:\n   I spent a good 30 minutes trying to figure out the overall control flow (I fell asleep in bed!) of this loop. Maybe this warrant a refactoring/simplification? I won't mark this as blocking, but just a note that I can't comment if the change is sound.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-31T11:58:53.783+0000",
                    "updated": "2019-07-31T11:58:53.783+0000",
                    "started": "2019-07-31T11:58:53.782+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "285703",
                    "issueId": "13245659"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245659/worklog/285733",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4923: ARROW-5974: [C++] Support reading concatenated compressed streams\nURL: https://github.com/apache/arrow/pull/4923#discussion_r309203020\n \n \n\n ##########\n File path: cpp/src/arrow/io/compressed.cc\n ##########\n @@ -330,19 +333,24 @@ class CompressedInputStream::Impl {\n \n       // At this point, no more decompressed data remains,\n       // so we need to decompress more\n-      if (decompressor_->IsFinished()) {\n-        break;\n-      }\n       // First try to read data from the decompressor\n       if (compressed_) {\n+        if (decompressor_->IsFinished()) {\n \n Review comment:\n   Well, I don't think this can be simplified. Is there a particular pain point? And/or should I add some comments (where?)?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-31T12:55:05.357+0000",
                    "updated": "2019-07-31T12:55:05.357+0000",
                    "started": "2019-07-31T12:55:05.357+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "285733",
                    "issueId": "13245659"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245659/worklog/286163",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #4923: ARROW-5974: [C++] Support reading concatenated compressed streams\nURL: https://github.com/apache/arrow/pull/4923#discussion_r309397292\n \n \n\n ##########\n File path: cpp/src/arrow/io/compressed.cc\n ##########\n @@ -330,19 +333,24 @@ class CompressedInputStream::Impl {\n \n       // At this point, no more decompressed data remains,\n       // so we need to decompress more\n-      if (decompressor_->IsFinished()) {\n-        break;\n-      }\n       // First try to read data from the decompressor\n       if (compressed_) {\n+        if (decompressor_->IsFinished()) {\n \n Review comment:\n   The following patch divides the function in 2 sub-functions, which I think, makes this a lot more readable (the book keeping of properties is hidden in each method).\r\n   \r\n   ```\r\n   diff --git a/cpp/src/arrow/io/compressed.cc b/cpp/src/arrow/io/compressed.cc\r\n   index 10eaf6380..f5148172d 100644\r\n   --- a/cpp/src/arrow/io/compressed.cc\r\n   +++ b/cpp/src/arrow/io/compressed.cc\r\n   @@ -308,53 +308,24 @@ class CompressedInputStream::Impl {\r\n      Status Read(int64_t nbytes, int64_t* bytes_read, void* out) {\r\n        std::lock_guard<std::mutex> guard(lock_);\r\n    \r\n   -    *bytes_read = 0;\r\n        auto out_data = reinterpret_cast<uint8_t*>(out);\r\n    \r\n   -    while (nbytes > 0) {\r\n   -      int64_t avail = decompressed_ ? (decompressed_->size() - decompressed_pos_) : 0;\r\n   -      if (avail > 0) {\r\n   -        // Pending decompressed data is available, use it\r\n   -        avail = std::min(avail, nbytes);\r\n   -        memcpy(out_data, decompressed_->data() + decompressed_pos_, avail);\r\n   -        decompressed_pos_ += avail;\r\n   -        out_data += avail;\r\n   -        *bytes_read += avail;\r\n   -        nbytes -= avail;\r\n   -        if (decompressed_pos_ == decompressed_->size()) {\r\n   -          // Decompressed data is exhausted, release buffer\r\n   -          decompressed_.reset();\r\n   -        }\r\n   -        if (nbytes == 0) {\r\n   -          // We're done\r\n   -          break;\r\n   -        }\r\n   -      }\r\n   +    int64_t total_read = 0;\r\n   +    bool decompressor_has_data = true;\r\n    \r\n   -      // At this point, no more decompressed data remains,\r\n   -      // so we need to decompress more\r\n   -      // First try to read data from the decompressor\r\n   -      if (compressed_) {\r\n   -        if (decompressor_->IsFinished()) {\r\n   -          // We just went over the end of a previous compressed stream.\r\n   -          RETURN_NOT_OK(decompressor_->Reset());\r\n   -          fresh_decompressor_ = true;\r\n   -        }\r\n   -        RETURN_NOT_OK(DecompressData());\r\n   -      }\r\n   -      if (!decompressed_ || decompressed_->size() == 0) {\r\n   -        // Got nothing, need to read more compressed data\r\n   -        RETURN_NOT_OK(EnsureCompressedData());\r\n   -        if (compressed_pos_ == compressed_->size()) {\r\n   -          // No more data to decompress\r\n   -          if (!fresh_decompressor_) {\r\n   -            return Status::IOError(\"Truncated compressed stream\");\r\n   -          }\r\n   -          break;\r\n   -        }\r\n   -        RETURN_NOT_OK(DecompressData());\r\n   +    while (nbytes - total_read > 0 && decompressor_has_data) {\r\n   +      total_read += ReadFromDecompressed(nbytes - total_read, out_data + total_read);\r\n   +\r\n   +      if (nbytes == total_read) {\r\n   +        break;\r\n          }\r\n   +\r\n   +      // At this point, no more decompressed data remains, so we need to\r\n   +      // decompress more\r\n   +      RETURN_NOT_OK(WriteToDecompressed(&decompressor_has_data));\r\n        }\r\n   +\r\n   +    *bytes_read = total_read;\r\n        return Status::OK();\r\n      }\r\n    \r\n   @@ -371,6 +342,50 @@ class CompressedInputStream::Impl {\r\n      std::shared_ptr<InputStream> raw() const { return raw_; }\r\n    \r\n     private:\r\n   +  int64_t ReadFromDecompressed(int64_t nbytes, uint8_t* out) {\r\n   +    int64_t readable = decompressed_ ? (decompressed_->size() - decompressed_pos_) : 0;\r\n   +    int64_t read_bytes = std::min(readable, nbytes);\r\n   +\r\n   +    if (read_bytes > 0) {\r\n   +      memcpy(out, decompressed_->data() + decompressed_pos_, read_bytes);\r\n   +      decompressed_pos_ += read_bytes;\r\n   +\r\n   +      if (decompressed_pos_ == decompressed_->size()) {\r\n   +        // Decompressed data is exhausted, release buffer\r\n   +        decompressed_.reset();\r\n   +      }\r\n   +    }\r\n   +\r\n   +    return read_bytes;\r\n   +  }\r\n   +\r\n   +  Status WriteToDecompressed(bool* has_data) {\r\n   +    // First try to read data from the decompressor\r\n   +    if (compressed_) {\r\n   +      if (decompressor_->IsFinished()) {\r\n   +        // We just went over the end of a previous compressed stream.\r\n   +        RETURN_NOT_OK(decompressor_->Reset());\r\n   +        fresh_decompressor_ = true;\r\n   +      }\r\n   +      RETURN_NOT_OK(DecompressData());\r\n   +    }\r\n   +    if (!decompressed_ || decompressed_->size() == 0) {\r\n   +      // Got nothing, need to read more compressed data\r\n   +      RETURN_NOT_OK(EnsureCompressedData());\r\n   +      if (compressed_pos_ == compressed_->size()) {\r\n   +        // No more data to decompress\r\n   +        if (!fresh_decompressor_) {\r\n   +          return Status::IOError(\"Truncated compressed stream\");\r\n   +        }\r\n   +        *has_data = false;\r\n   +        return Status::OK();\r\n   +      }\r\n   +      RETURN_NOT_OK(DecompressData());\r\n   +    }\r\n   +\r\n   +    return Status::OK();\r\n   +  }\r\n   +\r\n      // Read 64 KB compressed data at a time\r\n      static const int64_t kChunkSize = 64 * 1024;\r\n      // Decompress 1 MB at a time\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-31T19:39:01.689+0000",
                    "updated": "2019-07-31T19:39:01.689+0000",
                    "started": "2019-07-31T19:39:01.689+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "286163",
                    "issueId": "13245659"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245659/worklog/286583",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4923: ARROW-5974: [C++] Support reading concatenated compressed streams\nURL: https://github.com/apache/arrow/pull/4923#discussion_r309611273\n \n \n\n ##########\n File path: cpp/src/arrow/io/compressed.cc\n ##########\n @@ -330,19 +333,24 @@ class CompressedInputStream::Impl {\n \n       // At this point, no more decompressed data remains,\n       // so we need to decompress more\n-      if (decompressor_->IsFinished()) {\n-        break;\n-      }\n       // First try to read data from the decompressor\n       if (compressed_) {\n+        if (decompressor_->IsFinished()) {\n \n Review comment:\n   Thanks! I'll apply it.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-01T09:41:05.486+0000",
                    "updated": "2019-08-01T09:41:05.486+0000",
                    "started": "2019-08-01T09:41:05.486+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "286583",
                    "issueId": "13245659"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245659/worklog/286683",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #4923: ARROW-5974: [C++] Support reading concatenated compressed streams\nURL: https://github.com/apache/arrow/pull/4923#issuecomment-517266681\n \n \n   @fsaintjacques Does this look right now?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-01T12:33:11.253+0000",
                    "updated": "2019-08-01T12:33:11.253+0000",
                    "started": "2019-08-01T12:33:11.253+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "286683",
                    "issueId": "13245659"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245659/worklog/286704",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4923: ARROW-5974: [C++] Support reading concatenated compressed streams\nURL: https://github.com/apache/arrow/pull/4923#issuecomment-514703668\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4923?src=pr&el=h1) Report\n   > Merging [#4923](https://codecov.io/gh/apache/arrow/pull/4923?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/e3ba3dedd162744bf7e506da0d977a65762674c9?src=pr&el=desc) will **increase** coverage by `1.59%`.\n   > The diff coverage is `99.27%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4923/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4923?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4923      +/-   ##\n   ==========================================\n   + Coverage   87.57%   89.16%   +1.59%     \n   ==========================================\n     Files        1002      724     -278     \n     Lines      142994   102554   -40440     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       125224    91446   -33778     \n   + Misses      17408    11108    -6300     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4923?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/util/compression.h](https://codecov.io/gh/apache/arrow/pull/4923/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2NvbXByZXNzaW9uLmg=) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/util/compression\\_bz2.cc](https://codecov.io/gh/apache/arrow/pull/4923/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2NvbXByZXNzaW9uX2J6Mi5jYw==) | `55.72% <100%> (+1.75%)` | :arrow_up: |\n   | [cpp/src/arrow/io/compressed.cc](https://codecov.io/gh/apache/arrow/pull/4923/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9jb21wcmVzc2VkLmNj) | `91.32% <100%> (+0.61%)` | :arrow_up: |\n   | [cpp/src/arrow/util/compression\\_lz4.cc](https://codecov.io/gh/apache/arrow/pull/4923/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2NvbXByZXNzaW9uX2x6NC5jYw==) | `79.66% <100%> (+0.89%)` | :arrow_up: |\n   | [cpp/src/arrow/util/compression-test.cc](https://codecov.io/gh/apache/arrow/pull/4923/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2NvbXByZXNzaW9uLXRlc3QuY2M=) | `99.22% <100%> (+0.05%)` | :arrow_up: |\n   | [cpp/src/arrow/util/compression\\_zstd.cc](https://codecov.io/gh/apache/arrow/pull/4923/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2NvbXByZXNzaW9uX3pzdGQuY2M=) | `92.15% <100%> (+0.07%)` | :arrow_up: |\n   | [cpp/src/arrow/io/compressed-test.cc](https://codecov.io/gh/apache/arrow/pull/4923/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby9jb21wcmVzc2VkLXRlc3QuY2M=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_csv.py](https://codecov.io/gh/apache/arrow/pull/4923/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9jc3YucHk=) | `98.92% <100%> (+0.3%)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_io.py](https://codecov.io/gh/apache/arrow/pull/4923/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9pby5weQ==) | `96.9% <100%> (+0.04%)` | :arrow_up: |\n   | [cpp/src/arrow/util/compression\\_brotli.cc](https://codecov.io/gh/apache/arrow/pull/4923/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2NvbXByZXNzaW9uX2Jyb3RsaS5jYw==) | `90.47% <100%> (+0.37%)` | :arrow_up: |\n   | ... and [302 more](https://codecov.io/gh/apache/arrow/pull/4923/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4923?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4923?src=pr&el=footer). Last update [e3ba3de...5823803](https://codecov.io/gh/apache/arrow/pull/4923?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-01T13:23:22.408+0000",
                    "updated": "2019-08-01T13:23:22.408+0000",
                    "started": "2019-08-01T13:23:22.407+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "286704",
                    "issueId": "13245659"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245659/worklog/286731",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #4923: ARROW-5974: [C++] Support reading concatenated compressed streams\nURL: https://github.com/apache/arrow/pull/4923\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-01T14:05:01.345+0000",
                    "updated": "2019-08-01T14:05:01.345+0000",
                    "started": "2019-08-01T14:05:01.344+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "286731",
                    "issueId": "13245659"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 6600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7012e1b9[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@43c4057f[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3a444fff[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@59484a35[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7f0c718[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@39e4df0c[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@21474478[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3a45bb87[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3b8c73d0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@240fd712[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3f70236f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@28fe2e85[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6600,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Aug 01 14:04:57 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-08-01T14:04:57.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5974/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2019-07-18T03:12:15.000+0000",
        "updated": "2019-08-01T22:39:40.000+0000",
        "timeoriginalestimate": null,
        "description": "If two gzipped files are concatenated together, the result is a valid gzip file.\u00a0 However, it appears that pyarrow.csv.read_csv will only read the portion related to the first file.\r\n\r\nIf the repro script [here|https://gist.github.com/jordansamuels/d69f1c22c58418f5dfa0785b9ecd211e]\u00a0is run, the output is:\r\n\r\n{{$ python repro.py}}\r\n{{pyarrow.csv only reads one row:}}\r\n{{ x}}\r\n{{0 1}}\r\n{{pandas reads two rows:}}\r\n{{ x}}\r\n{{0 1}}\r\n{{1 2}}\r\n{{pyarrow version: 0.14.0}}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python][C++] Enable CSV reader to read from concatenated gzip stream",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245659/comment/16887574",
                    "id": "16887574",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jordan_samuels",
                        "name": "jordan_samuels",
                        "key": "jordan_samuels",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Jordan Samuels",
                        "active": true,
                        "timeZone": "America/Chicago"
                    },
                    "body": "Confirmed same issue for 0.13.0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jordan_samuels",
                        "name": "jordan_samuels",
                        "key": "jordan_samuels",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Jordan Samuels",
                        "active": true,
                        "timeZone": "America/Chicago"
                    },
                    "created": "2019-07-18T03:13:35.879+0000",
                    "updated": "2019-07-18T03:13:35.879+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245659/comment/16887750",
                    "id": "16887750",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "I'm not sure Pandas does it deliberately. [~wesmckinn] Do you know about that?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-07-18T08:35:18.186+0000",
                    "updated": "2019-07-18T08:35:18.186+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245659/comment/16887755",
                    "id": "16887755",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "From a technical point of view, when you're concatenating several gzip files, you're creating a file with several gzip streams. Python reads all the streams as if they were a single one. Arrow doesn't.\r\n\r\nIs there a reason why you'd like to this to work?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-07-18T08:43:42.330+0000",
                    "updated": "2019-07-18T08:43:42.330+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245659/comment/16887829",
                    "id": "16887829",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jordan_samuels",
                        "name": "jordan_samuels",
                        "key": "jordan_samuels",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Jordan Samuels",
                        "active": true,
                        "timeZone": "America/Chicago"
                    },
                    "body": "[~pitrou] there are two reasons I'd like it to work.\u00a0 Generally, because it seems intuitive that reading a gzip'd file with decompression should have the same end state as gunzip'ing the file on the command line and then reading it - and this is not the case in my example.\u00a0 Also specifically, I'm working with some third party data that is evidently of this form - a vendor has concatenated gzip'd files together as .gz files, and it would be useful to be able to read them directly with read_csv directly rather than gunzip them as a separate step.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jordan_samuels",
                        "name": "jordan_samuels",
                        "key": "jordan_samuels",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Jordan Samuels",
                        "active": true,
                        "timeZone": "America/Chicago"
                    },
                    "created": "2019-07-18T10:05:53.791+0000",
                    "updated": "2019-07-18T10:05:53.791+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245659/comment/16888117",
                    "id": "16888117",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "You would need to develop a C++ interface to interpret a file-of-concatenated-gzips as a single logical stream. \r\n\r\nI don't think pandas has any specific logic about this, it's all handled by the {{gzip.GzipFile}}\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/2811464a87e6e18f5daef87ee700075ebd8a5e7d/pandas/_libs/parsers.pyx#L625",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-07-18T16:19:57.866+0000",
                    "updated": "2019-07-18T16:19:57.866+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245659/comment/16888120",
                    "id": "16888120",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I updated the JIRA to reclassify this as a new feature. PRs welcome",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-07-18T16:20:47.944+0000",
                    "updated": "2019-07-18T16:20:52.732+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13245659/comment/16898108",
                    "id": "16898108",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
                        "name": "fsaintjacques",
                        "key": "fsaintjacques",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
                        },
                        "displayName": "Francois Saint-Jacques",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 4923\n[https://github.com/apache/arrow/pull/4923]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
                        "name": "fsaintjacques",
                        "key": "fsaintjacques",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
                        },
                        "displayName": "Francois Saint-Jacques",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-08-01T14:04:57.028+0000",
                    "updated": "2019-08-01T14:04:57.028+0000"
                }
            ],
            "maxResults": 7,
            "total": 7,
            "startAt": 0
        },
        "customfield_12311820": "0|z04s6o:",
        "customfield_12314139": null
    }
}