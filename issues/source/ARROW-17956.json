{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13484870",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13484870",
    "key": "ARROW-17956",
    "fields": {
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zagto",
            "name": "zagto",
            "key": "JIRAUSER286565",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Tobias Zagorni",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/3",
            "description": "This issue is being actively worked on at the moment by the assignee.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/inprogress.png",
            "name": "In Progress",
            "id": "3",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/4",
                "id": 4,
                "key": "indeterminate",
                "colorName": "yellow",
                "name": "In Progress"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zagto",
            "name": "zagto",
            "key": "JIRAUSER286565",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Tobias Zagorni",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zagto",
            "name": "zagto",
            "key": "JIRAUSER286565",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Tobias Zagorni",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 3600,
            "total": 3600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 3600,
            "total": 3600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17956/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 6,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13484870/worklog/814494",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #14338:\nURL: https://github.com/apache/arrow/pull/14338#issuecomment-1270698647\n\n   https://issues.apache.org/jira/browse/ARROW-17956\n\n\n",
                    "created": "2022-10-06T21:06:34.063+0000",
                    "updated": "2022-10-06T21:06:34.063+0000",
                    "started": "2022-10-06T21:06:34.062+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "814494",
                    "issueId": "13484870"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13484870/worklog/814495",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #14338:\nURL: https://github.com/apache/arrow/pull/14338#issuecomment-1270698693\n\n   :warning: Ticket **has not been started in JIRA**, please click 'Start Progress'.\n\n\n",
                    "created": "2022-10-06T21:06:36.045+0000",
                    "updated": "2022-10-06T21:06:36.045+0000",
                    "started": "2022-10-06T21:06:36.045+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "814495",
                    "issueId": "13484870"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13484870/worklog/815230",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #14338:\nURL: https://github.com/apache/arrow/pull/14338#discussion_r991320041\n\n\n##########\ncpp/src/arrow/testing/random_test.cc:\n##########\n@@ -343,6 +343,47 @@ TEST(TypeSpecificTests, ListLengths) {\n   }\n }\n \n+// ARROW-17956: Two cases to cases to make sure the RandomArrayGenerator properly\n+// generates lists with nulls:\n+// - a ListArray where every member is null (null_probability 1.0). Previously the\n+//   OffsetsFromLengthsArray method used internally did not handle arrays where the first\n+//   or last element is Null, which defniedly are null for this array\n\nReview Comment:\n   \"definitely\" perhaps?\n\n\n\n##########\ncpp/src/arrow/testing/random_test.cc:\n##########\n@@ -343,6 +343,47 @@ TEST(TypeSpecificTests, ListLengths) {\n   }\n }\n \n+// ARROW-17956: Two cases to cases to make sure the RandomArrayGenerator properly\n+// generates lists with nulls:\n+// - a ListArray where every member is null (null_probability 1.0). Previously the\n+//   OffsetsFromLengthsArray method used internally did not handle arrays where the first\n+//   or last element is Null, which defniedly are null for this array\n+// - a ListArray where members are either null or have a known length (10). This is to\n+// test there is\n\nReview Comment:\n   Fix indentation/word-wrapping here?\n\n\n\n##########\ncpp/src/arrow/testing/random.cc:\n##########\n@@ -721,13 +709,11 @@ std::shared_ptr<Array> RandomArrayGenerator::ArrayOf(const Field& field, int64_t\n     for (const auto& length : *lengths) {                                            \\\n       if (length.has_value()) values_length += *length;                              \\\n     }                                                                                \\\n-    const auto force_empty_nulls =                                                   \\\n-        GetMetadata<bool>(field.metadata().get(), \"force_empty_nulls\", false);       \\\n     const auto values =                                                              \\\n         ArrayOf(*internal::checked_pointer_cast<ARRAY_TYPE::TypeClass>(field.type()) \\\n                      ->value_field(),                                                \\\n                 values_length);                                                      \\\n-    const auto offsets = OffsetsFromLengthsArray(lengths.get(), force_empty_nulls);  \\\n+    const auto offsets = OffsetsFromLengthsArray(lengths.get());                     \\\n\nReview Comment:\n   Hmm... instead of fixing `OffsetsFromLengthsArray` and ignoring `force_empty_nulls`, why not use `GenerateOffsets` or even `RandomArrayGenerator::List`?\n\n\n\n##########\ncpp/src/arrow/testing/random_test.cc:\n##########\n@@ -343,6 +343,47 @@ TEST(TypeSpecificTests, ListLengths) {\n   }\n }\n \n+// ARROW-17956: Two cases to cases to make sure the RandomArrayGenerator properly\n\nReview Comment:\n   \"Two cases to cases\"?\n\n\n\n",
                    "created": "2022-10-10T14:07:54.027+0000",
                    "updated": "2022-10-10T14:07:54.027+0000",
                    "started": "2022-10-10T14:07:54.027+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "815230",
                    "issueId": "13484870"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13484870/worklog/815258",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zagto commented on code in PR #14338:\nURL: https://github.com/apache/arrow/pull/14338#discussion_r991375472\n\n\n##########\ncpp/src/arrow/testing/random.cc:\n##########\n@@ -721,13 +709,11 @@ std::shared_ptr<Array> RandomArrayGenerator::ArrayOf(const Field& field, int64_t\n     for (const auto& length : *lengths) {                                            \\\n       if (length.has_value()) values_length += *length;                              \\\n     }                                                                                \\\n-    const auto force_empty_nulls =                                                   \\\n-        GetMetadata<bool>(field.metadata().get(), \"force_empty_nulls\", false);       \\\n     const auto values =                                                              \\\n         ArrayOf(*internal::checked_pointer_cast<ARRAY_TYPE::TypeClass>(field.type()) \\\n                      ->value_field(),                                                \\\n                 values_length);                                                      \\\n-    const auto offsets = OffsetsFromLengthsArray(lengths.get(), force_empty_nulls);  \\\n+    const auto offsets = OffsetsFromLengthsArray(lengths.get());                     \\\n\nReview Comment:\n   These don't allow limiting min_length and max_length for the individual lists, which at least some tests actually test (but without nulls), so I didn't want to break that. \n\n\n\n",
                    "created": "2022-10-10T14:51:56.991+0000",
                    "updated": "2022-10-10T14:51:56.991+0000",
                    "started": "2022-10-10T14:51:56.990+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "815258",
                    "issueId": "13484870"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13484870/worklog/815281",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #14338:\nURL: https://github.com/apache/arrow/pull/14338#discussion_r991415453\n\n\n##########\ncpp/src/arrow/testing/random.cc:\n##########\n@@ -721,13 +709,11 @@ std::shared_ptr<Array> RandomArrayGenerator::ArrayOf(const Field& field, int64_t\n     for (const auto& length : *lengths) {                                            \\\n       if (length.has_value()) values_length += *length;                              \\\n     }                                                                                \\\n-    const auto force_empty_nulls =                                                   \\\n-        GetMetadata<bool>(field.metadata().get(), \"force_empty_nulls\", false);       \\\n     const auto values =                                                              \\\n         ArrayOf(*internal::checked_pointer_cast<ARRAY_TYPE::TypeClass>(field.type()) \\\n                      ->value_field(),                                                \\\n                 values_length);                                                      \\\n-    const auto offsets = OffsetsFromLengthsArray(lengths.get(), force_empty_nulls);  \\\n+    const auto offsets = OffsetsFromLengthsArray(lengths.get());                     \\\n\nReview Comment:\n   I see. Perhaps we can reconcile all these so as to have a single workhorse function that takes all desired parameters?\n\n\n\n",
                    "created": "2022-10-10T15:29:41.088+0000",
                    "updated": "2022-10-10T15:29:41.088+0000",
                    "started": "2022-10-10T15:29:41.088+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "815281",
                    "issueId": "13484870"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13484870/worklog/815389",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zagto commented on code in PR #14338:\nURL: https://github.com/apache/arrow/pull/14338#discussion_r991693239\n\n\n##########\ncpp/src/arrow/testing/random.cc:\n##########\n@@ -721,13 +709,11 @@ std::shared_ptr<Array> RandomArrayGenerator::ArrayOf(const Field& field, int64_t\n     for (const auto& length : *lengths) {                                            \\\n       if (length.has_value()) values_length += *length;                              \\\n     }                                                                                \\\n-    const auto force_empty_nulls =                                                   \\\n-        GetMetadata<bool>(field.metadata().get(), \"force_empty_nulls\", false);       \\\n     const auto values =                                                              \\\n         ArrayOf(*internal::checked_pointer_cast<ARRAY_TYPE::TypeClass>(field.type()) \\\n                      ->value_field(),                                                \\\n                 values_length);                                                      \\\n-    const auto offsets = OffsetsFromLengthsArray(lengths.get(), force_empty_nulls);  \\\n+    const auto offsets = OffsetsFromLengthsArray(lengths.get());                     \\\n\nReview Comment:\n   That makes sense. I'll try to implement that\n\n\n\n",
                    "created": "2022-10-10T23:09:05.119+0000",
                    "updated": "2022-10-10T23:09:05.119+0000",
                    "started": "2022-10-10T23:09:05.118+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "815389",
                    "issueId": "13484870"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 3600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@44218f83[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@dae378b[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@687cbdac[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1412cd47[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@aa28e1b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@613db021[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6c21e077[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6edb6041[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7097f9d7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7c27f35c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1f6686f7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2a8a3432[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 3600,
        "customfield_12312520": null,
        "customfield_12312521": "2022-10-06 20:44:30.0",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17956/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-10-06T20:44:30.000+0000",
        "updated": "2022-10-10T23:09:05.000+0000",
        "timeoriginalestimate": null,
        "description": "There are multiple problems with the\u00a0{{OffsetsFromLengthsArray}} method:\r\n * There is an assumption that the first and last length value in the input are never null. This is not true at all for the usage of this method in GENERATE_LIST_CASE, where the input is completely randomly generated, respecting null_probability: [https://github.com/apache/arrow/blob/ed36fcd218d381bd7420f1b762a28c5feea4665f/cpp/src/arrow/testing/random.cc#L730]\r\n * The SetBit call for non-null items is off-by-one. The index variable represents the index of the next offset, which is based of the current elements length. But the validity bit should still be set for the current element\r\n * \u00a0I don't see what effect the {{force_empty_nulls}} argument should have. I think the desired effect that Null items also have a zero length is always given, based on how the method is implemented. Please correct me if I'm wrong.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 3600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] RandomArrayGenerator does not properly generate ListArrays with Nulls",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [],
            "maxResults": 0,
            "total": 0,
            "startAt": 0
        },
        "customfield_12311820": "0|z194jc:",
        "customfield_12314139": null
    }
}