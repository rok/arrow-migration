{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13423521",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423521",
    "key": "ARROW-15365",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351550",
                "id": "12351550",
                "name": "9.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-08-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "good-first-issue",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jabaribooker",
            "name": "jabaribooker",
            "key": "JIRAUSER281295",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39936",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39936",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39936",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39936"
            },
            "displayName": "Jabari Booker",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "aggregateprogress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15365/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 17,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423521/worklog/768223",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13109:\nURL: https://github.com/apache/arrow/pull/13109#issuecomment-1121687815\n\n   https://issues.apache.org/jira/browse/ARROW-15365\n\n\n",
                    "created": "2022-05-09T23:36:51.098+0000",
                    "updated": "2022-05-09T23:36:51.098+0000",
                    "started": "2022-05-09T23:36:51.098+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "768223",
                    "issueId": "13423521"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423521/worklog/769861",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #13109:\nURL: https://github.com/apache/arrow/pull/13109#discussion_r871757065\n\n\n##########\npython/pyarrow/array.pxi:\n##########\n@@ -895,7 +895,7 @@ cdef class Array(_PandasConvertible):\n             result = self.ap.Diff(deref(other.ap))\n         return frombytes(result, safe=True)\n \n-    def cast(self, object target_type, safe=True):\n+    def cast(self, object target_type, safe=True, options=None):\n\nReview Comment:\n   The redundancy between `safe` and `options` isn't great. I wonder if we can have `safe=None`, and then raise an exception if passing both `safe` and `options`?\n\n\n\n",
                    "created": "2022-05-12T19:54:27.007+0000",
                    "updated": "2022-05-12T19:54:27.007+0000",
                    "started": "2022-05-12T19:54:27.007+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "769861",
                    "issueId": "13423521"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423521/worklog/770316",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "JabariBooker commented on code in PR #13109:\nURL: https://github.com/apache/arrow/pull/13109#discussion_r872684533\n\n\n##########\npython/pyarrow/array.pxi:\n##########\n@@ -895,7 +895,7 @@ cdef class Array(_PandasConvertible):\n             result = self.ap.Diff(deref(other.ap))\n         return frombytes(result, safe=True)\n \n-    def cast(self, object target_type, safe=True):\n+    def cast(self, object target_type, safe=True, options=None):\n\nReview Comment:\n   Is this clear up usage (i.e. we want the user to either pass a value for `safe` or `options` but never both)? As it is now, if an `CastOptions` is passed, the safe parameter is just ignored.\n\n\n\n",
                    "created": "2022-05-13T18:39:16.731+0000",
                    "updated": "2022-05-13T18:39:16.731+0000",
                    "started": "2022-05-13T18:39:16.731+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "770316",
                    "issueId": "13423521"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423521/worklog/770317",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "JabariBooker commented on code in PR #13109:\nURL: https://github.com/apache/arrow/pull/13109#discussion_r872684533\n\n\n##########\npython/pyarrow/array.pxi:\n##########\n@@ -895,7 +895,7 @@ cdef class Array(_PandasConvertible):\n             result = self.ap.Diff(deref(other.ap))\n         return frombytes(result, safe=True)\n \n-    def cast(self, object target_type, safe=True):\n+    def cast(self, object target_type, safe=True, options=None):\n\nReview Comment:\n   Is this to clear up usage (i.e. we want the user to either pass a value for `safe` or `options` but never both)? As it is now, if a `CastOptions` is passed, the safe parameter is just ignored.\n\n\n\n##########\npython/pyarrow/array.pxi:\n##########\n@@ -895,7 +895,7 @@ cdef class Array(_PandasConvertible):\n             result = self.ap.Diff(deref(other.ap))\n         return frombytes(result, safe=True)\n \n-    def cast(self, object target_type, safe=True):\n+    def cast(self, object target_type, safe=True, options=None):\n\nReview Comment:\n   Is this to clear up usage (i.e. we want the user to either pass a value for `safe` or `options` but never both)? As it is now, if a `CastOptions` is passed, the `safe` parameter is just ignored.\n\n\n\n",
                    "created": "2022-05-13T18:57:37.990+0000",
                    "updated": "2022-05-13T18:57:37.990+0000",
                    "started": "2022-05-13T18:57:37.990+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "770317",
                    "issueId": "13423521"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423521/worklog/770357",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #13109:\nURL: https://github.com/apache/arrow/pull/13109#discussion_r872766220\n\n\n##########\npython/pyarrow/array.pxi:\n##########\n@@ -895,7 +895,7 @@ cdef class Array(_PandasConvertible):\n             result = self.ap.Diff(deref(other.ap))\n         return frombytes(result, safe=True)\n \n-    def cast(self, object target_type, safe=True):\n+    def cast(self, object target_type, safe=True, options=None):\n\nReview Comment:\n   Yeah, exactly - we shouldn't allow passing both ideally since they're somewhat redundant\n\n\n\n",
                    "created": "2022-05-13T20:20:32.556+0000",
                    "updated": "2022-05-13T20:20:32.556+0000",
                    "started": "2022-05-13T20:20:32.556+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "770357",
                    "issueId": "13423521"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423521/worklog/771739",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #13109:\nURL: https://github.com/apache/arrow/pull/13109#discussion_r875567732\n\n\n##########\npython/pyarrow/compute.py:\n##########\n@@ -369,10 +371,14 @@ def cast(arr, target_type, safe=True):\n     \"\"\"\n     if target_type is None:\n         raise ValueError(\"Cast target type must not be None\")\n-    if safe:\n-        options = CastOptions.safe(target_type)\n-    else:\n-        options = CastOptions.unsafe(target_type)\n+    if (safe is not None) and (options is not None):\n+        raise ValueError(\n+            \"Must past only a value for 'safe' or only a value for 'options'\")\n+    if options is None:\n+        if safe:\n\nReview Comment:\n   We will need some handling here to interpret `safe=None` as `safe=True` (now it will be interpreted as False, which explains the test failures)\n\n\n\n##########\npython/pyarrow/array.pxi:\n##########\n@@ -905,14 +905,16 @@ cdef class Array(_PandasConvertible):\n         ----------\n         target_type : DataType\n             Type to cast array to.\n-        safe : boolean, default True\n+        safe : boolean, default None\n\nReview Comment:\n   Although we changed it in the signature, I would keep it here as \"True\", because that is still the actual default behaviour if you don't specify neither of the params.\n\n\n\n",
                    "created": "2022-05-18T07:41:07.126+0000",
                    "updated": "2022-05-18T07:41:07.126+0000",
                    "started": "2022-05-18T07:41:07.126+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "771739",
                    "issueId": "13423521"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423521/worklog/773737",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on PR #13109:\nURL: https://github.com/apache/arrow/pull/13109#issuecomment-1135141706\n\n   I would still like to see a test.\n\n\n",
                    "created": "2022-05-23T21:11:17.970+0000",
                    "updated": "2022-05-23T21:11:17.970+0000",
                    "started": "2022-05-23T21:11:17.970+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "773737",
                    "issueId": "13423521"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423521/worklog/774785",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #13109:\nURL: https://github.com/apache/arrow/pull/13109#discussion_r882041136\n\n\n##########\npython/pyarrow/tests/test_compute.py:\n##########\n@@ -1702,6 +1702,18 @@ def test_logical():\n \n \n def test_cast():\n+    arr = pa.array([1, 2, 3, 4], type='int64')\n+    options = pc.CastOptions()\n+\n+    with pytest.raises(ValueError):\n+        pc.cast(arr, target_type=None)\n+\n+    with pytest.raises(ValueError):\n+        pc.cast(arr, 'int32', safe=True, options=options)\n+\n+    with pytest.raises(ValueError):\n+        pc.cast(arr, 'int32', safe=False, options=options)\n+\n\nReview Comment:\n   Thanks for testing the error cases, can we also test that the non-error case now works with cast options?\n\n\n\n",
                    "created": "2022-05-25T19:32:27.121+0000",
                    "updated": "2022-05-25T19:32:27.121+0000",
                    "started": "2022-05-25T19:32:27.120+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "774785",
                    "issueId": "13423521"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423521/worklog/776226",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #13109:\nURL: https://github.com/apache/arrow/pull/13109#discussion_r885486000\n\n\n##########\npython/pyarrow/tests/test_compute.py:\n##########\n@@ -1702,6 +1702,18 @@ def test_logical():\n \n \n def test_cast():\n+    arr = pa.array([1, 2, 3, 4], type='int64')\n+    options = pc.CastOptions()\n+\n+    with pytest.raises(ValueError):\n+        pc.cast(arr, target_type=None)\n+\n+    with pytest.raises(ValueError):\n+        pc.cast(arr, 'int32', safe=True, options=options)\n+\n+    with pytest.raises(ValueError):\n+        pc.cast(arr, 'int32', safe=False, options=options)\n+\n\nReview Comment:\n   I think we should also still test with a non-default `pc.CastOptions`, to ensure we are really testing that the options object is passed through (the test below `pc.cast(arr, 'int8', options=options)` would also pass if `options` was not specified)\n\n\n\n",
                    "created": "2022-05-31T10:44:47.132+0000",
                    "updated": "2022-05-31T10:44:47.132+0000",
                    "started": "2022-05-31T10:44:47.132+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "776226",
                    "issueId": "13423521"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423521/worklog/781831",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #13109:\nURL: https://github.com/apache/arrow/pull/13109#discussion_r898399806\n\n\n##########\npython/pyarrow/tests/test_compute.py:\n##########\n@@ -1702,13 +1702,37 @@ def test_logical():\n \n \n def test_cast():\n+    arr = pa.array([1, 2, 3, 4], type='int64')\n+    options = pc.CastOptions(pa.int8())\n+\n+    with pytest.raises(ValueError):\n+        pc.cast(arr, target_type=None)\n+\n+    with pytest.raises(ValueError):\n+        pc.cast(arr, 'int32', safe=True, options=options)\n+\n+    with pytest.raises(ValueError):\n+        pc.cast(arr, 'int32', safe=False, options=options)\n+\n+    assert pc.cast(arr, 'int8', options=options) == pa.array(\n+        [1, 2, 3, 4], type='int8')\n+\n     arr = pa.array([2 ** 63 - 1], type='int64')\n+    options = pc.CastOptions(pa.int32())\n+    allow_overflow_options = pc.CastOptions(\n+        pa.int32(), allow_int_overflow=True)\n \n     with pytest.raises(pa.ArrowInvalid):\n         pc.cast(arr, 'int32')\n \n+    with pytest.raises(pa.ArrowInvalid):\n+        pc.cast(arr, 'int32', options)\n\nReview Comment:\n   Ah - this is misleading, this is passing `safe=options`, is that what you meant to test?\n\n\n\n",
                    "created": "2022-06-15T20:42:49.955+0000",
                    "updated": "2022-06-15T20:42:49.955+0000",
                    "started": "2022-06-15T20:42:49.954+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "781831",
                    "issueId": "13423521"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423521/worklog/782152",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "JabariBooker commented on code in PR #13109:\nURL: https://github.com/apache/arrow/pull/13109#discussion_r899462686\n\n\n##########\npython/pyarrow/tests/test_compute.py:\n##########\n@@ -1702,13 +1702,37 @@ def test_logical():\n \n \n def test_cast():\n+    arr = pa.array([1, 2, 3, 4], type='int64')\n+    options = pc.CastOptions(pa.int8())\n+\n+    with pytest.raises(ValueError):\n+        pc.cast(arr, target_type=None)\n+\n+    with pytest.raises(ValueError):\n+        pc.cast(arr, 'int32', safe=True, options=options)\n+\n+    with pytest.raises(ValueError):\n+        pc.cast(arr, 'int32', safe=False, options=options)\n+\n+    assert pc.cast(arr, 'int8', options=options) == pa.array(\n+        [1, 2, 3, 4], type='int8')\n+\n     arr = pa.array([2 ** 63 - 1], type='int64')\n+    options = pc.CastOptions(pa.int32())\n+    allow_overflow_options = pc.CastOptions(\n+        pa.int32(), allow_int_overflow=True)\n \n     with pytest.raises(pa.ArrowInvalid):\n         pc.cast(arr, 'int32')\n \n+    with pytest.raises(pa.ArrowInvalid):\n+        pc.cast(arr, 'int32', options)\n\nReview Comment:\n   This was intended to ensure that passing a `CastOptions` object like this would fail in the same way `safe=options` would.\n\n\n\n",
                    "created": "2022-06-16T19:40:16.258+0000",
                    "updated": "2022-06-16T19:40:16.258+0000",
                    "started": "2022-06-16T19:40:16.257+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "782152",
                    "issueId": "13423521"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423521/worklog/782378",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #13109:\nURL: https://github.com/apache/arrow/pull/13109#discussion_r900060000\n\n\n##########\npython/pyarrow/tests/test_compute.py:\n##########\n@@ -1702,13 +1702,37 @@ def test_logical():\n \n \n def test_cast():\n+    arr = pa.array([1, 2, 3, 4], type='int64')\n+    options = pc.CastOptions(pa.int8())\n+\n+    with pytest.raises(ValueError):\n+        pc.cast(arr, target_type=None)\n+\n+    with pytest.raises(ValueError):\n+        pc.cast(arr, 'int32', safe=True, options=options)\n+\n+    with pytest.raises(ValueError):\n+        pc.cast(arr, 'int32', safe=False, options=options)\n+\n+    assert pc.cast(arr, 'int8', options=options) == pa.array(\n+        [1, 2, 3, 4], type='int8')\n+\n     arr = pa.array([2 ** 63 - 1], type='int64')\n+    options = pc.CastOptions(pa.int32())\n+    allow_overflow_options = pc.CastOptions(\n+        pa.int32(), allow_int_overflow=True)\n \n     with pytest.raises(pa.ArrowInvalid):\n         pc.cast(arr, 'int32')\n \n+    with pytest.raises(pa.ArrowInvalid):\n+        pc.cast(arr, 'int32', options)\n\nReview Comment:\n   What I mean is that even though we're passing `options`, it's getting ignored/interpreted as `safe=True` (and fails due to a value being out of range). It looks like a weird thing to test, basically. \n\n\n\n",
                    "created": "2022-06-17T12:14:26.494+0000",
                    "updated": "2022-06-17T12:14:26.494+0000",
                    "started": "2022-06-17T12:14:26.494+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "782378",
                    "issueId": "13423521"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423521/worklog/783997",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #13109:\nURL: https://github.com/apache/arrow/pull/13109#discussion_r904379120\n\n\n##########\npython/pyarrow/_compute.pyx:\n##########\n@@ -2198,7 +2198,14 @@ cdef class Expression(_Weakrefable):\n         -------\n         cast : Expression\n         \"\"\"\n-        options = CastOptions.safe(ensure_type(type))\n+        if (safe is not None) and (options is not None):\n+            raise ValueError(\n+                \"Must past only a value for 'safe' or only a value for 'options'\")\n\nReview Comment:\n   ```suggestion\r\n                   \"Must pass only a value for 'safe' or only a value for 'options'\")\r\n   ```\n\n\n\n##########\npython/pyarrow/tests/test_compute.py:\n##########\n@@ -1702,13 +1702,33 @@ def test_logical():\n \n \n def test_cast():\n+    arr = pa.array([1, 2, 3, 4], type='int64')\n+    options = pc.CastOptions(pa.int8())\n+\n+    with pytest.raises(ValueError):\n+        pc.cast(arr, target_type=None)\n+\n+    with pytest.raises(ValueError):\n+        pc.cast(arr, 'int32', safe=True, options=options)\n+\n+    with pytest.raises(ValueError):\n+        pc.cast(arr, 'int32', safe=False, options=options)\n+\n+    assert pc.cast(arr, 'int8', options=options) == pa.array(\n+        [1, 2, 3, 4], type='int8')\n+\n     arr = pa.array([2 ** 63 - 1], type='int64')\n+    allow_overflow_options = pc.CastOptions(\n+        pa.int32(), allow_int_overflow=True)\n \n     with pytest.raises(pa.ArrowInvalid):\n         pc.cast(arr, 'int32')\n \n     assert pc.cast(arr, 'int32', safe=False) == pa.array([-1], type='int32')\n \n+    assert pc.cast(arr, 'int32', options=allow_overflow_options) == pa.array(\n+        [-1], type='int32')\n\nReview Comment:\n   Now that I look at it\u2026should we make the `type` an optional argument too? It's redundant with options (either you pass `type` and `safe`, or you pass `options`)\n\n\n\n",
                    "created": "2022-06-22T23:25:58.931+0000",
                    "updated": "2022-06-22T23:25:58.931+0000",
                    "started": "2022-06-22T23:25:58.930+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "783997",
                    "issueId": "13423521"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423521/worklog/784316",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "JabariBooker commented on code in PR #13109:\nURL: https://github.com/apache/arrow/pull/13109#discussion_r905306348\n\n\n##########\npython/pyarrow/tests/test_compute.py:\n##########\n@@ -1702,13 +1702,33 @@ def test_logical():\n \n \n def test_cast():\n+    arr = pa.array([1, 2, 3, 4], type='int64')\n+    options = pc.CastOptions(pa.int8())\n+\n+    with pytest.raises(ValueError):\n+        pc.cast(arr, target_type=None)\n+\n+    with pytest.raises(ValueError):\n+        pc.cast(arr, 'int32', safe=True, options=options)\n+\n+    with pytest.raises(ValueError):\n+        pc.cast(arr, 'int32', safe=False, options=options)\n+\n+    assert pc.cast(arr, 'int8', options=options) == pa.array(\n+        [1, 2, 3, 4], type='int8')\n+\n     arr = pa.array([2 ** 63 - 1], type='int64')\n+    allow_overflow_options = pc.CastOptions(\n+        pa.int32(), allow_int_overflow=True)\n \n     with pytest.raises(pa.ArrowInvalid):\n         pc.cast(arr, 'int32')\n \n     assert pc.cast(arr, 'int32', safe=False) == pa.array([-1], type='int32')\n \n+    assert pc.cast(arr, 'int32', options=allow_overflow_options) == pa.array(\n+        [-1], type='int32')\n\nReview Comment:\n   Agreed. As it is now, you effectively pass the \"to\" type twice and error is returned if your value for `type` doesn't match that of `options.target_type`.\n\n\n\n",
                    "created": "2022-06-23T17:49:13.637+0000",
                    "updated": "2022-06-23T17:49:13.637+0000",
                    "started": "2022-06-23T17:49:13.637+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "784316",
                    "issueId": "13423521"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423521/worklog/784574",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #13109:\nURL: https://github.com/apache/arrow/pull/13109#discussion_r906005079\n\n\n##########\npython/pyarrow/_compute.pyx:\n##########\n@@ -2198,7 +2198,20 @@ cdef class Expression(_Weakrefable):\n         -------\n         cast : Expression\n         \"\"\"\n-        options = CastOptions.safe(ensure_type(type))\n+        safe_vars_passed = (safe is not None) or (type is not None)\n+\n+        if safe_vars_passed and (options is not None):\n+            raise ValueError(\"Must either pass values for 'type' and 'safe' or pass a \"\n+                             \"value for 'options'\")\n+\n+        if options is None:\n+            if type is None:\n+                raise ValueError(\n\nReview Comment:\n   Also, we can just call `ensure_type(type, allow_none=False)`. That has the added benefit that it'll take string type arguments like `\"int8\"` like it did before. (Though I guess maybe CastOptions does that same conversion.)\n\n\n\n##########\npython/pyarrow/_compute.pyx:\n##########\n@@ -2198,7 +2198,20 @@ cdef class Expression(_Weakrefable):\n         -------\n         cast : Expression\n         \"\"\"\n-        options = CastOptions.safe(ensure_type(type))\n+        safe_vars_passed = (safe is not None) or (type is not None)\n+\n+        if safe_vars_passed and (options is not None):\n+            raise ValueError(\"Must either pass values for 'type' and 'safe' or pass a \"\n+                             \"value for 'options'\")\n+\n+        if options is None:\n+            if type is None:\n+                raise ValueError(\n\nReview Comment:\n   nit, but usually Python uses TypeError for things like missing arguments (here and above)\n\n\n\n",
                    "created": "2022-06-24T12:18:22.083+0000",
                    "updated": "2022-06-24T12:18:22.083+0000",
                    "started": "2022-06-24T12:18:22.083+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "784574",
                    "issueId": "13423521"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423521/worklog/785082",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #13109:\nURL: https://github.com/apache/arrow/pull/13109#discussion_r907365385\n\n\n##########\npython/pyarrow/compute.py:\n##########\n@@ -367,12 +369,18 @@ def cast(arr, target_type, safe=True):\n     -------\n     casted : Array\n     \"\"\"\n-    if target_type is None:\n-        raise ValueError(\"Cast target type must not be None\")\n-    if safe:\n-        options = CastOptions.safe(target_type)\n-    else:\n-        options = CastOptions.unsafe(target_type)\n+    safe_vars_passed = (safe is not None) or (target_type is not None)\n+\n+    if safe_vars_passed and (options is not None):\n+        raise ValueError(\"Must either pass values for 'target_type' and 'safe'\"\n+                         \" or pass a value for 'options'\")\n+\n+    if options is None:\n+        pa.types.lib.ensure_type(target_type)\n\nReview Comment:\n   ```suggestion\r\n           type = pa.types.lib.ensure_type(target_type)\r\n   ```\n\n\n\n##########\npython/pyarrow/_compute.pyx:\n##########\n@@ -2198,7 +2198,18 @@ cdef class Expression(_Weakrefable):\n         -------\n         cast : Expression\n         \"\"\"\n-        options = CastOptions.safe(ensure_type(type))\n+        safe_vars_passed = (safe is not None) or (type is not None)\n+\n+        if safe_vars_passed and (options is not None):\n+            raise ValueError(\"Must either pass values for 'type' and 'safe' or pass a \"\n+                             \"value for 'options'\")\n+\n+        if options is None:\n+            ensure_type(type, allow_none=False)\n\nReview Comment:\n   ```suggestion\r\n               type = ensure_type(type, allow_none=False)\r\n   ```\n\n\n\n",
                    "created": "2022-06-27T13:04:33.119+0000",
                    "updated": "2022-06-27T13:04:33.119+0000",
                    "started": "2022-06-27T13:04:33.118+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "785082",
                    "issueId": "13423521"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423521/worklog/785733",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm merged PR #13109:\nURL: https://github.com/apache/arrow/pull/13109\n\n\n",
                    "created": "2022-06-28T20:44:15.226+0000",
                    "updated": "2022-06-28T20:44:15.226+0000",
                    "started": "2022-06-28T20:44:15.225+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "785733",
                    "issueId": "13423521"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 10200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@73d58698[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@cf271f2[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@170e920a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@86c0cf8[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6899c218[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2106b5e5[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@42fbfd0d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@2a982266[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@cb7bc2f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@188a89c1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5841c48[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6e64958c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10200,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jun 28 20:44:17 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-06-28T20:44:17.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15365/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2022-01-19T14:09:59.000+0000",
        "updated": "2022-06-28T20:44:17.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently, the {{pc.cast}} function has a {{safe=True/False}} option, which provides a short-cut to setting the cast options. \r\n\r\nBut the actual kernel has more detailed options that can be tuned, and this is already exposed in the CastOptions class in python (allow_int_overflow, allow_time_truncate, ...). So we should ensure that we can pass such a CastOptions object to the {{cast}} kernel directly as well.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Expose full cast options in the pyarrow.compute.cast function",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13423521/comment/17559958",
                    "id": "17559958",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 13109\n[https://github.com/apache/arrow/pull/13109]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-06-28T20:44:17.079+0000",
                    "updated": "2022-06-28T20:44:17.079+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0yqcw:",
        "customfield_12314139": null
    }
}