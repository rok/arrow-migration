{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13262055",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262055",
    "key": "ARROW-6870",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350323",
                "id": "12350323",
                "description": "",
                "name": "6.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334712",
                "id": "12334712",
                "name": "C#"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=dparu-dev",
            "name": "dparu-dev",
            "key": "dparu-dev",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Daniel Parubotchy",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=dparu-dev",
            "name": "dparu-dev",
            "key": "dparu-dev",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Daniel Parubotchy",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 33000,
            "total": 33000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 33000,
            "total": 33000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6870/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 55,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262055/worklog/327607",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dparu-dev commented on pull request #5644: ARROW-6870: [C#] Added Dictionary Array Types\nURL: https://github.com/apache/arrow/pull/5644\n \n \n   Added Dictionary Array types and builders that correspond to many of the existing Array Types that represent the arrays as dictionaries\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-14T03:22:39.775+0000",
                    "updated": "2019-10-14T03:22:39.775+0000",
                    "started": "2019-10-14T03:22:39.774+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "327607",
                    "issueId": "13262055"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262055/worklog/327608",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #5644: ARROW-6870: [C#] Added Dictionary Array Types\nURL: https://github.com/apache/arrow/pull/5644#issuecomment-541492707\n \n \n   https://issues.apache.org/jira/browse/ARROW-6870\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-14T03:31:05.301+0000",
                    "updated": "2019-10-14T03:31:05.301+0000",
                    "started": "2019-10-14T03:31:05.301+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "327608",
                    "issueId": "13262055"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262055/worklog/329634",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #5644: ARROW-6870: [C#] Added Dictionary Array Types\nURL: https://github.com/apache/arrow/pull/5644#issuecomment-543027054\n \n \n   @eerhardt do you think you will have time to review?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-17T06:33:27.541+0000",
                    "updated": "2019-10-17T06:33:27.541+0000",
                    "started": "2019-10-17T06:33:27.541+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "329634",
                    "issueId": "13262055"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262055/worklog/329970",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on issue #5644: ARROW-6870: [C#] Added Dictionary Array Types\nURL: https://github.com/apache/arrow/pull/5644#issuecomment-543241272\n \n \n   Sorry, I missed this originally. I will review it today.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-17T15:54:30.803+0000",
                    "updated": "2019-10-17T15:54:30.803+0000",
                    "started": "2019-10-17T15:54:30.803+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "329970",
                    "issueId": "13262055"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262055/worklog/330178",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on issue #5644: ARROW-6870: [C#] Added Dictionary Array Types\nURL: https://github.com/apache/arrow/pull/5644#issuecomment-543397487\n \n \n   @dparu-dev - thanks for your contribution! This is great work that will help out the .NET community using Arrow.\r\n   \r\n   Forgive my ignorance, I haven't looked deeply into the \"Dictionary\" pieces in Arrow. But can you explain why we have each individual type of DictionaryArray?\r\n   \r\n   * `Date32DictionaryArray`\r\n   * `UInt16DictionaryArray`\r\n   * `StringDictionaryArray`\r\n   * etc\r\n   \r\n   I'm looking at the other languages' implementations: C++, Java, Python. And they only have a single `DictonaryArray` type. Not one for each underlying type. Why would .NET need to be different here?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-17T22:58:35.904+0000",
                    "updated": "2019-10-17T22:58:35.904+0000",
                    "started": "2019-10-17T22:58:35.903+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "330178",
                    "issueId": "13262055"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262055/worklog/330231",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dparu-dev commented on issue #5644: ARROW-6870: [C#] Added Dictionary Array Types\nURL: https://github.com/apache/arrow/pull/5644#issuecomment-543455091\n \n \n   The specific types are basically just to make accessing builders for them easier for the most part. However StringDictionaryArray requires a separate implementation to PrimativeDictionaryArray<T> because strings are of a variable length and so we need to maintain offsets to where they start/end in the underlying buffer.\r\n   \r\n   Or I should say at least I thought we did. If the other implementations just have the one type it is entirely possible I've messed up somewhere/not understood something.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-18T02:22:02.892+0000",
                    "updated": "2019-10-18T02:22:02.892+0000",
                    "started": "2019-10-18T02:22:02.891+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "330231",
                    "issueId": "13262055"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262055/worklog/330250",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #5644: ARROW-6870: [C#] Added Dictionary Array Types\nURL: https://github.com/apache/arrow/pull/5644#issuecomment-543476929\n \n \n   @eerhardt if it it helps helps dictionary Arrays are really just a composition of two Arrays.  The dictionary array for a type, and an Integer array that indexes into the dictionaries.  I'm not sure what the best way of modeling this in C# is, but this is one area where I think the Java codebase could use some improvement (need to refresh myself on the C++ code base).\r\n   \r\n   From the IPC perspective each dictionary encoding column is tied to a dictionary with a specific \"ID\".\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-18T03:34:23.906+0000",
                    "updated": "2019-10-18T03:34:23.906+0000",
                    "started": "2019-10-18T03:34:23.904+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "330250",
                    "issueId": "13262055"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262055/worklog/330794",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on issue #5644: ARROW-6870: [C#] Added Dictionary Array Types\nURL: https://github.com/apache/arrow/pull/5644#issuecomment-543966566\n \n \n   > if it it helps helps dictionary Arrays are really just a composition of two Arrays\r\n   \r\n   I think that makes me an even firmer believer that we shouldn't have separate DictionaryArray classes for each type, but instead have a single DictionaryArray class that composes the underlying Array (which can be any concrete type).\r\n   \r\n   That is what the C++ implementation does:\r\n   \r\n   ```C++\r\n   class ARROW_EXPORT DictionaryArray : public Array {\r\n    public:\r\n     using TypeClass = DictionaryType;\r\n   \r\n     explicit DictionaryArray(const std::shared_ptr<ArrayData>& data);\r\n   \r\n     DictionaryArray(const std::shared_ptr<DataType>& type,\r\n                     const std::shared_ptr<Array>& indices,\r\n                     const std::shared_ptr<Array>& dictionary);\r\n   ```\r\n   \r\n   To create a DictionaryArray - you pass in 3 things:\r\n   \r\n   * The type\r\n   * The Indices array\r\n   * The underlying \"Data\" array\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-18T21:48:37.014+0000",
                    "updated": "2019-10-18T21:48:37.014+0000",
                    "started": "2019-10-18T21:48:37.014+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "330794",
                    "issueId": "13262055"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262055/worklog/330798",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on issue #5644: ARROW-6870: [C#] Added Dictionary Array Types\nURL: https://github.com/apache/arrow/pull/5644#issuecomment-543969803\n \n \n   > The specific types are basically just to make accessing builders for them easier for the most part.\r\n   \r\n   For this, instead users would make a \"builder\" for the underlying arrays. Say they were making a \"String\" dictionary, they would use a `StringArray.Builder`. That would be used to build up the \"values\". Then they would use a `IntXXXArray.Builder` to build up the indices. (note that the indices appear to be able to be any signed integer type, [according to the C++ code](https://github.com/apache/arrow/blob/0ac4294a2a40b5e50baf119086e40b50791098d5/cpp/src/arrow/array.cc#L895-L910))\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-18T21:55:46.027+0000",
                    "updated": "2019-10-18T21:55:46.027+0000",
                    "started": "2019-10-18T21:55:46.026+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "330798",
                    "issueId": "13262055"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262055/worklog/331114",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dparu-dev commented on issue #5644: ARROW-6870: [C#] Added Dictionary Array Types\nURL: https://github.com/apache/arrow/pull/5644#issuecomment-544298642\n \n \n   That is a fair view to take and I can alter things so we only have a single DictionaryArray type. \r\n   \r\n   My rationale though was that by just gluing existing array builders together we require users to deal with ensuring they don't include the same value multiple times themselves and by taking this approach you can treat building a DictionaryArray in the same way you would treat building a more typical Dictionary.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-20T22:17:11.182+0000",
                    "updated": "2019-10-20T22:17:11.182+0000",
                    "started": "2019-10-20T22:17:11.182+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331114",
                    "issueId": "13262055"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262055/worklog/331166",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #5644: ARROW-6870: [C#] Added Dictionary Array Types\nURL: https://github.com/apache/arrow/pull/5644#issuecomment-544334433\n \n \n   There are multiple different ways one might want to construct the actual dictionary batches (mostly involving the data-structure one uses for deduplication, Java has a couple of examples).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-21T03:26:58.155+0000",
                    "updated": "2019-10-21T03:26:58.155+0000",
                    "started": "2019-10-21T03:26:58.155+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "331166",
                    "issueId": "13262055"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262055/worklog/340325",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5644: ARROW-6870: [C#] Added Dictionary Array Types\nURL: https://github.com/apache/arrow/pull/5644#issuecomment-551368965\n \n \n   Thoughts about a way forward on this project?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-08T03:27:56.502+0000",
                    "updated": "2019-11-08T03:27:56.502+0000",
                    "started": "2019-11-08T03:27:56.502+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "340325",
                    "issueId": "13262055"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262055/worklog/380654",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #5644: ARROW-6870: [C#] Added Dictionary Array Types\nURL: https://github.com/apache/arrow/pull/5644#issuecomment-581227056\n \n \n   @eerhardt @dparu-dev ping?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-03T04:00:53.752+0000",
                    "updated": "2020-02-03T04:00:53.752+0000",
                    "started": "2020-02-03T04:00:53.752+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "380654",
                    "issueId": "13262055"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262055/worklog/381212",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on issue #5644: ARROW-6870: [C#] Added Dictionary Array Types\nURL: https://github.com/apache/arrow/pull/5644#issuecomment-581646726\n \n \n   Before this can be merged I think my above comments should be addressed. I don't think we should introduce all these new types when the other implementations are able to do it with a single `DictionaryArray` type.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-03T22:19:34.463+0000",
                    "updated": "2020-02-03T22:19:34.463+0000",
                    "started": "2020-02-03T22:19:34.462+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "381212",
                    "issueId": "13262055"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262055/worklog/414339",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5644: ARROW-6870: [C#] Added Dictionary Array Types\nURL: https://github.com/apache/arrow/pull/5644#issuecomment-607517912\n \n \n   I agree with @eerhardt's feedback -- it seems like having a simpler container would be better. I understand the desire to be able to pass either dictionary-encoded or non-dictionary-encoded versions of the same array into a function without that function knowing about whether it's dictionary-encoded or not, if that's important in C# then there may be some work to do around interfaces.\r\n   \r\n   I'm going to close this PR for the sake of our overflowing PR queue. @dparu-dev when you've addressed the feedback please reopen this PR. Thanks!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-01T22:18:37.311+0000",
                    "updated": "2020-04-01T22:18:37.311+0000",
                    "started": "2020-04-01T22:18:37.311+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "414339",
                    "issueId": "13262055"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262055/worklog/414340",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5644: ARROW-6870: [C#] Added Dictionary Array Types\nURL: https://github.com/apache/arrow/pull/5644\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-01T22:18:37.578+0000",
                    "updated": "2020-04-01T22:18:37.578+0000",
                    "started": "2020-04-01T22:18:37.578+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "414340",
                    "issueId": "13262055"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262055/worklog/610679",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "HashidaTKS opened a new pull request #10527:\nURL: https://github.com/apache/arrow/pull/10527\n\n\n   This is a implementation of `DictionaryBatch` (de)serialization for the streaming format.\r\n   \r\n   - The (de)serialization for the file format or Flight are not implemented yet\r\n   - `isDelta` is not supported yet\r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-14T13:52:34.865+0000",
                    "updated": "2021-06-14T13:52:34.865+0000",
                    "started": "2021-06-14T13:52:34.864+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "610679",
                    "issueId": "13262055"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262055/worklog/610680",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10527:\nURL: https://github.com/apache/arrow/pull/10527#issuecomment-860702579\n\n\n   https://issues.apache.org/jira/browse/ARROW-6870\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-14T13:52:58.081+0000",
                    "updated": "2021-06-14T13:52:58.081+0000",
                    "started": "2021-06-14T13:52:58.081+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "610680",
                    "issueId": "13262055"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262055/worklog/610703",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "HashidaTKS commented on pull request #10527:\nURL: https://github.com/apache/arrow/pull/10527#issuecomment-860738406\n\n\n   cc: @eerhardt \r\n   Would you please review this when you have time?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-14T14:39:17.896+0000",
                    "updated": "2021-06-14T14:39:17.896+0000",
                    "started": "2021-06-14T14:39:17.896+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "610703",
                    "issueId": "13262055"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262055/worklog/612077",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "HashidaTKS commented on a change in pull request #10527:\nURL: https://github.com/apache/arrow/pull/10527#discussion_r653778602\n\n\n\n##########\nFile path: csharp/src/Apache.Arrow/RecordBatch.cs\n##########\n@@ -29,7 +29,7 @@ public partial class RecordBatch : IDisposable\n         public int Length { get; }\n \n         private readonly IMemoryOwner<byte> _memoryOwner;\n-        private readonly IList<IArrowArray> _arrays;\n+        internal readonly IReadOnlyList<IArrowArray> _arrays;\n\nReview comment:\n       Fixed it.\r\n   \r\n   There was already a public property named `Arrays` so I named the internal property `_Arrays`.\n\n##########\nFile path: csharp/src/Apache.Arrow/Arrays/DictionaryArray.cs\n##########\n@@ -0,0 +1,67 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using System;\n+using System.IO;\n+using Apache.Arrow.Types;\n+\n+namespace Apache.Arrow\n+{\n+    public class DictionaryArray : Array\n+    {\n+        public IArrowArray Dictionary { get; }\n+        public IArrowArray Indices { get; }\n+        public ArrowBuffer IndicesBuffer => Data.Buffers[1];\n+\n+        public DictionaryArray(IArrowType dataType, int length,\n+            ArrowBuffer valueOffsetsBuffer, IArrowArray value,\n+            ArrowBuffer nullBitmapBuffer, int nullCount = 0, int offset = 0)\n+            : this(new ArrayData(dataType, length, nullCount, offset,\n+                new[] { nullBitmapBuffer, valueOffsetsBuffer }, new[] { value.Data }, value.Data.Dictionary))\n+        {\n+        }\n+\n+        public DictionaryArray(ArrayData data) : base(data)\n+        {\n+            data.EnsureBufferCount(2);\n+            data.EnsureDataType(ArrowTypeId.Dictionary);\n+\n+            var dicType = data.DataType as DictionaryType;\n+            data.Dictionary.EnsureDataType(dicType.ValueType.TypeId);\n+\n+            ArrayData indicesData = new ArrayData(dicType.IndexType, data.Length, data.NullCount, data.Offset, data.Buffers, data.Children);\n+\n+            Indices = ArrowArrayFactory.BuildArray(indicesData);\n+            Dictionary = ArrowArrayFactory.BuildArray(data.Dictionary);\n+        }\n+\n+        public DictionaryArray(IArrowType dataType, IArrowArray indicesArray, IArrowArray dictionary, bool ordered = false) :\n\nReview comment:\n       Fixed it.\n\n##########\nFile path: csharp/src/Apache.Arrow/Ipc/ArrowReaderImplementation.cs\n##########\n@@ -29,6 +29,13 @@ internal abstract class ArrowReaderImplementation : IDisposable\n     {\n         public Schema Schema { get; protected set; }\n         protected bool HasReadSchema => Schema != null;\n+        protected bool HasReadInitialDictionary { get; set; }\n\nReview comment:\n       Fixed it.\n\n##########\nFile path: csharp/src/Apache.Arrow/Ipc/ArrowReaderImplementation.cs\n##########\n@@ -29,6 +29,13 @@ internal abstract class ArrowReaderImplementation : IDisposable\n     {\n         public Schema Schema { get; protected set; }\n         protected bool HasReadSchema => Schema != null;\n+        protected bool HasReadInitialDictionary { get; set; }\n+        protected readonly DictionaryMemo _dictionaryMemo;\n+\n+        public ArrowReaderImplementation()\n+        {\n+            _dictionaryMemo = new DictionaryMemo();\n\nReview comment:\n       I have created the `LazyCreator` class and changed `DictionaryMemo _dictionaryMemo` to `LazyCreator<DictionaryMemo> _lazyDictionaryMemo`.\r\n   However, I am wondering whether this is the best way to lazy load because it need allocate a `LazyCreator` object.\r\n   Is there any other good idea?\r\n   \n\n##########\nFile path: csharp/src/Apache.Arrow/Arrays/DictionaryArray.cs\n##########\n@@ -0,0 +1,67 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using System;\n+using System.IO;\n+using Apache.Arrow.Types;\n+\n+namespace Apache.Arrow\n+{\n+    public class DictionaryArray : Array\n+    {\n+        public IArrowArray Dictionary { get; }\n+        public IArrowArray Indices { get; }\n+        public ArrowBuffer IndicesBuffer => Data.Buffers[1];\n+\n+        public DictionaryArray(IArrowType dataType, int length,\n+            ArrowBuffer valueOffsetsBuffer, IArrowArray value,\n+            ArrowBuffer nullBitmapBuffer, int nullCount = 0, int offset = 0)\n+            : this(new ArrayData(dataType, length, nullCount, offset,\n+                new[] { nullBitmapBuffer, valueOffsetsBuffer }, new[] { value.Data }, value.Data.Dictionary))\n+        {\n+        }\n+\n+        public DictionaryArray(ArrayData data) : base(data)\n+        {\n+            data.EnsureBufferCount(2);\n+            data.EnsureDataType(ArrowTypeId.Dictionary);\n+\n+            var dicType = data.DataType as DictionaryType;\n\nReview comment:\n       Fixed it.\n\n##########\nFile path: csharp/src/Apache.Arrow/Arrays/ArrayData.cs\n##########\n@@ -30,31 +30,34 @@ public sealed class ArrayData : IDisposable\n         public readonly int Offset;\n         public readonly ArrowBuffer[] Buffers;\n         public readonly ArrayData[] Children;\n+        public readonly ArrayData Dictionary; //Only used for dictionary type\n \n         public ArrayData(\n             IArrowType dataType,\n             int length, int nullCount = 0, int offset = 0,\n-            IEnumerable<ArrowBuffer> buffers = null, IEnumerable<ArrayData> children = null)\n+            IEnumerable<ArrowBuffer> buffers = null, IEnumerable<ArrayData> children = null, ArrayData dictionary = null)\n\nReview comment:\n       Fixed it.\n\n##########\nFile path: csharp/src/Apache.Arrow/Arrays/DictionaryArray.cs\n##########\n@@ -0,0 +1,67 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using System;\n+using System.IO;\n+using Apache.Arrow.Types;\n+\n+namespace Apache.Arrow\n+{\n+    public class DictionaryArray : Array\n+    {\n+        public IArrowArray Dictionary { get; }\n+        public IArrowArray Indices { get; }\n+        public ArrowBuffer IndicesBuffer => Data.Buffers[1];\n+\n+        public DictionaryArray(IArrowType dataType, int length,\n+            ArrowBuffer valueOffsetsBuffer, IArrowArray value,\n+            ArrowBuffer nullBitmapBuffer, int nullCount = 0, int offset = 0)\n+            : this(new ArrayData(dataType, length, nullCount, offset,\n+                new[] { nullBitmapBuffer, valueOffsetsBuffer }, new[] { value.Data }, value.Data.Dictionary))\n+        {\n+        }\n+\n+        public DictionaryArray(ArrayData data) : base(data)\n+        {\n+            data.EnsureBufferCount(2);\n+            data.EnsureDataType(ArrowTypeId.Dictionary);\n+\n+            var dicType = data.DataType as DictionaryType;\n+            data.Dictionary.EnsureDataType(dicType.ValueType.TypeId);\n\nReview comment:\n       added a null check.\n\n##########\nFile path: csharp/src/Apache.Arrow/Arrays/DictionaryArray.cs\n##########\n@@ -0,0 +1,67 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using System;\n+using System.IO;\n+using Apache.Arrow.Types;\n+\n+namespace Apache.Arrow\n+{\n+    public class DictionaryArray : Array\n+    {\n+        public IArrowArray Dictionary { get; }\n+        public IArrowArray Indices { get; }\n+        public ArrowBuffer IndicesBuffer => Data.Buffers[1];\n+\n+        public DictionaryArray(IArrowType dataType, int length,\n\nReview comment:\n       removed it.\n\n##########\nFile path: csharp/src/Apache.Arrow/Arrays/DictionaryArray.cs\n##########\n@@ -0,0 +1,67 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using System;\n+using System.IO;\n+using Apache.Arrow.Types;\n+\n+namespace Apache.Arrow\n+{\n+    public class DictionaryArray : Array\n+    {\n+        public IArrowArray Dictionary { get; }\n+        public IArrowArray Indices { get; }\n+        public ArrowBuffer IndicesBuffer => Data.Buffers[1];\n+\n+        public DictionaryArray(IArrowType dataType, int length,\n\nReview comment:\n       Removed it.\n\n##########\nFile path: csharp/src/Apache.Arrow/Arrays/DictionaryArray.cs\n##########\n@@ -0,0 +1,67 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using System;\n+using System.IO;\n+using Apache.Arrow.Types;\n+\n+namespace Apache.Arrow\n+{\n+    public class DictionaryArray : Array\n+    {\n+        public IArrowArray Dictionary { get; }\n+        public IArrowArray Indices { get; }\n+        public ArrowBuffer IndicesBuffer => Data.Buffers[1];\n+\n+        public DictionaryArray(IArrowType dataType, int length,\n+            ArrowBuffer valueOffsetsBuffer, IArrowArray value,\n+            ArrowBuffer nullBitmapBuffer, int nullCount = 0, int offset = 0)\n+            : this(new ArrayData(dataType, length, nullCount, offset,\n+                new[] { nullBitmapBuffer, valueOffsetsBuffer }, new[] { value.Data }, value.Data.Dictionary))\n+        {\n+        }\n+\n+        public DictionaryArray(ArrayData data) : base(data)\n+        {\n+            data.EnsureBufferCount(2);\n+            data.EnsureDataType(ArrowTypeId.Dictionary);\n+\n+            var dicType = data.DataType as DictionaryType;\n+            data.Dictionary.EnsureDataType(dicType.ValueType.TypeId);\n\nReview comment:\n       Added a null check.\n\n##########\nFile path: csharp/src/Apache.Arrow/Ipc/ArrowStreamWriter.cs\n##########\n@@ -216,10 +231,10 @@ private void CreateSelfAndChildrenFieldNodes(ArrayData data)\n             Flatbuf.FieldNode.CreateFieldNode(Builder, data.Length, data.NullCount);\n         }\n \n-        private int CountAllNodes()\n+        private int CountAllNodes(IReadOnlyDictionary<string, Field> fields)\n\nReview comment:\n       Fixed it.\n\n##########\nFile path: csharp/src/Apache.Arrow/Ipc/ArrowStreamWriter.cs\n##########\n@@ -399,6 +439,95 @@ private protected void WriteRecordBatchInternal(RecordBatch recordBatch)\n             return Tuple.Create(recordBatchBuilder, fieldNodesVectorOffset);\n         }\n \n+\n+        private protected void WriteDictionaries(RecordBatch recordBatch)\n+        {\n+            foreach (Field field in recordBatch.Schema.Fields.Values)\n+            {\n+                WriteDictionary(field);\n+            }\n+        }\n+\n+        private protected void WriteDictionary(Field field)\n+        {\n+            if (field.DataType.TypeId != ArrowTypeId.Dictionary)\n+            {\n+                if (field.DataType is NestedType nestedType)\n+                {\n+                    foreach (Field child in nestedType.Fields)\n+                    {\n+                        WriteDictionary(child);\n+                    }\n+                }\n+                return;\n+            }\n+\n+            (ArrowRecordBatchFlatBufferBuilder recordBatchBuilder, Offset<Flatbuf.DictionaryBatch> dictionaryBatchOffset) =\n+                CreateDictionaryBatchOffset(field);\n+\n+            WriteMessage(Flatbuf.MessageHeader.DictionaryBatch,\n+                dictionaryBatchOffset, recordBatchBuilder.TotalLength);\n+\n+            WriteBufferData(recordBatchBuilder.Buffers);\n+        }\n+\n+        private protected async Task WriteDictionariesAsync(RecordBatch recordBatch, CancellationToken cancellationToken = default)\n+        {\n+            foreach (Field field in recordBatch.Schema.Fields.Values)\n+            {\n+                await WriteDictionaryAsync(field, cancellationToken).ConfigureAwait(false);\n+            }\n+        }\n+\n+        private protected async Task WriteDictionaryAsync(Field field, CancellationToken cancellationToken = default)\n+        {\n+            if (field.DataType.TypeId != ArrowTypeId.Dictionary)\n+            {\n+                if (field.DataType is NestedType nestedType)\n+                {\n+                    foreach (Field child in nestedType.Fields)\n+                    {\n+                        await WriteDictionaryAsync(child, cancellationToken).ConfigureAwait(false);\n+                    }\n+                }\n+                return;\n+            }\n+\n+            (ArrowRecordBatchFlatBufferBuilder recordBatchBuilder, Offset<Flatbuf.DictionaryBatch> dictionaryBatchOffset) =\n+                CreateDictionaryBatchOffset(field);\n+\n+            await WriteMessageAsync(Flatbuf.MessageHeader.DictionaryBatch,\n+                dictionaryBatchOffset, recordBatchBuilder.TotalLength, cancellationToken).ConfigureAwait(false);\n+\n+            await WriteBufferDataAsync(recordBatchBuilder.Buffers, cancellationToken).ConfigureAwait(false);\n+        }\n+\n+        private protected Tuple<ArrowRecordBatchFlatBufferBuilder, Offset<Flatbuf.DictionaryBatch>> CreateDictionaryBatchOffset(Field field)\n\nReview comment:\n       Fixed it.\n\n##########\nFile path: csharp/src/Apache.Arrow/Ipc/DictionaryMemo.cs\n##########\n@@ -0,0 +1,113 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using System;\n+using System.Collections.Generic;\n+using Apache.Arrow.Types;\n+\n+namespace Apache.Arrow.Ipc\n+{\n+    class DictionaryMemo\n+    {\n+        private Dictionary<long, IArrowArray> _idToDictionary;\n+        private Dictionary<long, IArrowType> _idToValueType;\n+        private Dictionary<Field, long> _fieldToId;\n+\n+        public DictionaryMemo()\n+        {\n+            _idToDictionary = new Dictionary<long, IArrowArray>();\n+            _idToValueType = new Dictionary<long, IArrowType>();\n+            _fieldToId = new Dictionary<Field, long>();\n+        }\n+\n+        public IArrowType GetDictionaryType(long id)\n+        {\n+            if (!_idToValueType.TryGetValue(id, out IArrowType type))\n+            {\n+                throw new ArgumentException($\"Dictionary with id {id} not found\");\n+            }\n+            return type;\n+        }\n+\n+        public IArrowArray GetDictionary(long id)\n+        {\n+            if (!_idToDictionary.TryGetValue(id, out IArrowArray dictionary))\n+            {\n+                throw new ArgumentException($\"Dictionary with id {id} not found\");\n+            }\n+            return dictionary;\n+        }\n+\n+        public void AddField(long id, Field field)\n+        {\n+            if (_fieldToId.ContainsKey(field))\n+            {\n+                throw new ArgumentException($\"Field {field.Name} is already in Memo\");\n+            }\n+\n+            if (field.DataType.TypeId != ArrowTypeId.Dictionary)\n+            {\n+                throw new ArgumentException($\"Field type is not DictionaryType: Name={field.Name}, {field.DataType.Name}\");\n+            }\n+\n+            IArrowType valueType = ((DictionaryType)field.DataType).ValueType;\n+\n+            if (_idToValueType.TryGetValue(id, out IArrowType valueTypeInDic))\n+            {\n+                if (valueType != valueTypeInDic)\n+                {\n+                    throw new ArgumentException($\"Field type {field.DataType.Name} does not match the existing type {valueTypeInDic})\");\n+                }\n+            }\n+\n+            _fieldToId.Add(field, id);\n+            _idToValueType.Add(id, valueType);\n+        }\n+\n+        public long GetId(Field field)\n+        {\n+            if (!_fieldToId.TryGetValue(field, out long id))\n+            {\n+                throw new ArgumentException($\"Field with name {field.Name} not found\");\n+            }\n+            return id;\n+        }\n+\n+        public long GetOrAssignId(Field field)\n+        {\n+            if (!_fieldToId.TryGetValue(field, out long id))\n+            {\n+                id = _fieldToId.Count + 1;\n+                AddField(id, field);\n+            }\n+            return id;\n+        }\n+\n+        public void AddOrReplaceDictionary(long id, IArrowArray dictionary)\n+        {\n+            _idToDictionary[id] = dictionary;\n+        }\n+\n+        public void AddDictionaryDelta(long id, IArrowArray dictionary)\n\nReview comment:\n       Fixed it.\n\n##########\nFile path: csharp/src/Apache.Arrow/Arrays/ArrayData.cs\n##########\n@@ -30,10 +30,25 @@ public sealed class ArrayData : IDisposable\n         public readonly int Offset;\n         public readonly ArrowBuffer[] Buffers;\n         public readonly ArrayData[] Children;\n+        public readonly ArrayData Dictionary; //Only used for dictionary type\n \n         public ArrayData(\n             IArrowType dataType,\n             int length, int nullCount = 0, int offset = 0,\n+            IEnumerable<ArrowBuffer> buffers = null, IEnumerable<ArrayData> children = null) :\n+            this(dataType, null, length, nullCount, offset, buffers, children)\n+        { }\n+\n+        public ArrayData(\n+            IArrowType dataType,\n+            int length, int nullCount = 0, int offset = 0,\n+            ArrowBuffer[] buffers = null, ArrayData[] children = null) :\n+            this(dataType, null, length, nullCount, offset, buffers, children)\n+        { }\n+\n+        public ArrayData(\n+            IArrowType dataType, ArrayData dictionary,\n\nReview comment:\n       To avoid the ambiguity between ctors, `dictionary` is positioned the second argument...\n\n##########\nFile path: csharp/test/Apache.Arrow.Tests/ArrowStreamReaderTests.cs\n##########\n@@ -68,7 +68,7 @@ public async Task Ctor_MemoryPool_AllocatesFromPool(bool shouldLeaveOpen)\n                 ArrowStreamReader reader = new ArrowStreamReader(stream, memoryPool, shouldLeaveOpen);\n                 reader.ReadNextRecordBatch();\n \n-                Assert.Equal(1, memoryPool.Statistics.Allocations);\n+                Assert.Equal(2, memoryPool.Statistics.Allocations);\n\nReview comment:\n       Memo:\r\n   `_allocator` is called when reading dictionary batches and record batches.\r\n   The expected value of `memoryPool.Statistics.Allocations` is `2` at this context.\n\n##########\nFile path: csharp/src/Apache.Arrow/Ipc/ArrowReaderImplementation.cs\n##########\n@@ -29,6 +29,13 @@ internal abstract class ArrowReaderImplementation : IDisposable\n     {\n         public Schema Schema { get; protected set; }\n         protected bool HasReadSchema => Schema != null;\n+        protected bool HasReadInitialDictionary { get; set; }\n+        protected readonly DictionaryMemo _dictionaryMemo;\n+\n+        public ArrowReaderImplementation()\n+        {\n+            _dictionaryMemo = new DictionaryMemo();\n\nReview comment:\n       I have created a `LazyCreator` class and changed `DictionaryMemo _dictionaryMemo` to `LazyCreator<DictionaryMemo> _lazyDictionaryMemo`.\r\n   However, I am wondering whether this is the best way to lazy load because it need allocate a `LazyCreator` object.\r\n   Is there any other good idea?\r\n   \n\n##########\nFile path: csharp/src/Apache.Arrow/Arrays/ArrayData.cs\n##########\n@@ -30,10 +30,25 @@ public sealed class ArrayData : IDisposable\n         public readonly int Offset;\n         public readonly ArrowBuffer[] Buffers;\n         public readonly ArrayData[] Children;\n+        public readonly ArrayData Dictionary; //Only used for dictionary type\n \n         public ArrayData(\n             IArrowType dataType,\n             int length, int nullCount = 0, int offset = 0,\n+            IEnumerable<ArrowBuffer> buffers = null, IEnumerable<ArrayData> children = null) :\n+            this(dataType, null, length, nullCount, offset, buffers, children)\n+        { }\n+\n+        public ArrayData(\n+            IArrowType dataType,\n+            int length, int nullCount = 0, int offset = 0,\n+            ArrowBuffer[] buffers = null, ArrayData[] children = null) :\n+            this(dataType, null, length, nullCount, offset, buffers, children)\n+        { }\n+\n+        public ArrayData(\n+            IArrowType dataType, ArrayData dictionary,\n\nReview comment:\n       To avoid the ambiguity between ctors, `dictionary` is positioned to the second argument...\n\n##########\nFile path: csharp/src/Apache.Arrow/Arrays/ArrayData.cs\n##########\n@@ -30,10 +30,25 @@ public sealed class ArrayData : IDisposable\n         public readonly int Offset;\n         public readonly ArrowBuffer[] Buffers;\n         public readonly ArrayData[] Children;\n+        public readonly ArrayData Dictionary; //Only used for dictionary type\n \n         public ArrayData(\n             IArrowType dataType,\n             int length, int nullCount = 0, int offset = 0,\n+            IEnumerable<ArrowBuffer> buffers = null, IEnumerable<ArrayData> children = null) :\n+            this(dataType, null, length, nullCount, offset, buffers, children)\n+        { }\n+\n+        public ArrayData(\n+            IArrowType dataType,\n+            int length, int nullCount = 0, int offset = 0,\n+            ArrowBuffer[] buffers = null, ArrayData[] children = null) :\n+            this(dataType, null, length, nullCount, offset, buffers, children)\n+        { }\n+\n+        public ArrayData(\n+            IArrowType dataType, ArrayData dictionary,\n\nReview comment:\n       To avoid the ambiguity between ctors, `dictionary` is positioned to the second argument.\r\n   I don't think it's a very good position in term of the meaning...\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-18T21:17:37.363+0000",
                    "updated": "2021-06-18T21:17:37.363+0000",
                    "started": "2021-06-18T21:17:37.362+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "612077",
                    "issueId": "13262055"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 33000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6f971024[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@23989a81[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6aa240d4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@d899393[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@278b1753[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1c5eadf[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7919bed3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@384dbf68[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@470316bd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@693e8f90[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5de54b42[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@8860969[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 33000,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Aug 09 15:04:45 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-08-09T15:04:45.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6870/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-10-14T03:19:47.000+0000",
        "updated": "2021-08-09T15:04:49.000+0000",
        "timeoriginalestimate": null,
        "description": "The C# implementaiton of Arrow doesn't support dictionary arrays, serialization/deserialization of dictionary batches, or dictionary encoding.\r\n\r\nDictionary arrays and dictionary encoding could provide a huge performance benefit for certain data sets.\r\n\r\nI propose creating dictionary array types that correspond to the existing array types",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "9h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 33000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C#] Add Support for Dictionary Arrays and Dictionary Encoding",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13262055/comment/17396091",
                    "id": "17396091",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=eerhardt",
                        "name": "eerhardt",
                        "key": "eerhardt",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=eerhardt&avatarId=37925",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=eerhardt&avatarId=37925",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=eerhardt&avatarId=37925",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=eerhardt&avatarId=37925"
                        },
                        "displayName": "Eric Erhardt",
                        "active": true,
                        "timeZone": "America/North_Dakota/New_Salem"
                    },
                    "body": "Issue resolved by pull request 10527\n[https://github.com/apache/arrow/pull/10527]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=eerhardt",
                        "name": "eerhardt",
                        "key": "eerhardt",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=eerhardt&avatarId=37925",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=eerhardt&avatarId=37925",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=eerhardt&avatarId=37925",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=eerhardt&avatarId=37925"
                        },
                        "displayName": "Eric Erhardt",
                        "active": true,
                        "timeZone": "America/North_Dakota/New_Salem"
                    },
                    "created": "2021-08-09T15:04:45.665+0000",
                    "updated": "2021-08-09T15:04:45.665+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z07jwg:",
        "customfield_12314139": null
    }
}