{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13350906",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906",
    "key": "ARROW-11161",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "filesystem",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "2.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=nicornk",
            "name": "nicornk",
            "key": "nicornk",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Nicolas Renkamp",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=nicornk",
            "name": "nicornk",
            "key": "nicornk",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Nicolas Renkamp",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11161/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 15,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906/worklog/594658",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou opened a new pull request #10295:\nURL: https://github.com/apache/arrow/pull/10295\n\n\n   Extend the InputStream API to allow reading metadata.\r\n   \r\n   Extend the FileSystem API to allow setting metadata when creating an output stream or file.\r\n   \r\n   Implement metadata reading and writing in the S3 filesystem.\r\n   A few metadata keys are supported such as \"Content-Type\" and \"Expires\".\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-11T18:00:14.040+0000",
                    "updated": "2021-05-11T18:00:14.040+0000",
                    "started": "2021-05-11T18:00:14.039+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "594658",
                    "issueId": "13350906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906/worklog/594659",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10295:\nURL: https://github.com/apache/arrow/pull/10295#issuecomment-838918771\n\n\n   https://issues.apache.org/jira/browse/ARROW-11161\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-11T18:00:38.360+0000",
                    "updated": "2021-05-11T18:00:38.360+0000",
                    "started": "2021-05-11T18:00:38.359+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "594659",
                    "issueId": "13350906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906/worklog/594660",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10295:\nURL: https://github.com/apache/arrow/pull/10295#discussion_r630409762\n\n\n\n##########\nFile path: cpp/src/arrow/io/interfaces.h\n##########\n@@ -49,6 +49,26 @@ struct ReadRange {\n   }\n };\n \n+struct StreamMetadata {\n+  struct KeyValue {\n+    std::string key;\n+    std::string value;\n+\n+    KeyValue() = default;\n+    KeyValue(std::string key, std::string value)\n+        : key(std::move(key)), value(std::move(value)) {}\n+\n+    friend bool operator==(const KeyValue& left, const KeyValue& right) {\n+      return (left.key == right.key && left.value == right.value);\n+    }\n+    friend bool operator!=(const KeyValue& left, const KeyValue& right) {\n+      return !(left == right);\n+    }\n+  };\n+\n+  std::vector<KeyValue> items;\n+};\n\nReview comment:\n       I'm not sure about this API. Do we want to simplify this to `using StreamMetadata = std::vector<...>`? Do we want to add a `shared_ptr` somewhere to minimize copies (but I don't think this is performance-critical)?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-11T18:04:11.024+0000",
                    "updated": "2021-05-11T18:04:11.024+0000",
                    "started": "2021-05-11T18:04:11.024+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "594660",
                    "issueId": "13350906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906/worklog/594668",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #10295:\nURL: https://github.com/apache/arrow/pull/10295#issuecomment-838955600\n\n\n   There's a weird undefined reference to `std::vector<arrow::io::StreamMetadata::KeyValue, std::allocator<arrow::io::StreamMetadata::KeyValue> >::vector()` in two of the R builds...\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-11T18:26:02.608+0000",
                    "updated": "2021-05-11T18:26:02.608+0000",
                    "started": "2021-05-11T18:26:02.608+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "594668",
                    "issueId": "13350906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906/worklog/594671",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou edited a comment on pull request #10295:\nURL: https://github.com/apache/arrow/pull/10295#issuecomment-838955600\n\n\n   There's a weird undefined reference to `std::vector<arrow::io::StreamMetadata::KeyValue, std::allocator<arrow::io::StreamMetadata::KeyValue> >::vector()` in two of the R builds...\r\n   \r\n   Edit: apparently it's a [GCC bug](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=68070). Darn.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-11T18:28:50.471+0000",
                    "updated": "2021-05-11T18:28:50.471+0000",
                    "started": "2021-05-11T18:28:50.471+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "594671",
                    "issueId": "13350906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906/worklog/595468",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #10295:\nURL: https://github.com/apache/arrow/pull/10295#discussion_r631232530\n\n\n\n##########\nFile path: cpp/src/arrow/io/interfaces.h\n##########\n@@ -49,6 +49,26 @@ struct ReadRange {\n   }\n };\n \n+struct StreamMetadata {\n+  struct KeyValue {\n+    std::string key;\n+    std::string value;\n+\n+    KeyValue() = default;\n+    KeyValue(std::string key, std::string value)\n+        : key(std::move(key)), value(std::move(value)) {}\n+\n+    friend bool operator==(const KeyValue& left, const KeyValue& right) {\n+      return (left.key == right.key && left.value == right.value);\n+    }\n+    friend bool operator!=(const KeyValue& left, const KeyValue& right) {\n+      return !(left == right);\n+    }\n+  };\n+\n+  std::vector<KeyValue> items;\n+};\n\nReview comment:\n       Mostly, I'd like to reuse KeyValueMetadata unless there's a reason not to\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T17:06:36.306+0000",
                    "updated": "2021-05-12T17:06:36.306+0000",
                    "started": "2021-05-12T17:06:36.306+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595468",
                    "issueId": "13350906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906/worklog/595504",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10295:\nURL: https://github.com/apache/arrow/pull/10295#discussion_r631285489\n\n\n\n##########\nFile path: cpp/src/arrow/io/interfaces.h\n##########\n@@ -49,6 +49,26 @@ struct ReadRange {\n   }\n };\n \n+struct StreamMetadata {\n+  struct KeyValue {\n+    std::string key;\n+    std::string value;\n+\n+    KeyValue() = default;\n+    KeyValue(std::string key, std::string value)\n+        : key(std::move(key)), value(std::move(value)) {}\n+\n+    friend bool operator==(const KeyValue& left, const KeyValue& right) {\n+      return (left.key == right.key && left.value == right.value);\n+    }\n+    friend bool operator!=(const KeyValue& left, const KeyValue& right) {\n+      return !(left == right);\n+    }\n+  };\n+\n+  std::vector<KeyValue> items;\n+};\n\nReview comment:\n       Hmm, I had not thought about this. Interesting idea, I'll try it.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T18:07:46.993+0000",
                    "updated": "2021-05-12T18:07:46.993+0000",
                    "started": "2021-05-12T18:07:46.993+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595504",
                    "issueId": "13350906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906/worklog/603139",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #10295:\nURL: https://github.com/apache/arrow/pull/10295#discussion_r640771854\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/s3fs.cc\n##########\n@@ -684,6 +685,85 @@ Result<S3Model::GetObjectResult> GetObjectRange(Aws::S3::S3Client* client,\n   return OutcomeToResult(client->GetObject(req));\n }\n \n+template <typename ObjectResult>\n+std::shared_ptr<const KeyValueMetadata> GetObjectMetadata(const ObjectResult& result) {\n+  std::vector<std::string> keys, values;\n+\n+  auto push = [&](std::string k, const Aws::String& v) {\n+    if (!v.empty()) {\n+      keys.push_back(std::move(k));\n+      values.push_back(FromAwsString(v).to_string());\n+    }\n+  };\n+  auto push_datetime = [&](std::string k, const Aws::Utils::DateTime& v) {\n+    if (v != Aws::Utils::DateTime(0.0)) {\n\nReview comment:\n       I suppose this is unlikely to be a valid \"Last-Modified\" or \"Expires\" but it still looks odd\n\n##########\nFile path: cpp/src/arrow/filesystem/test_util.h\n##########\n@@ -140,6 +140,8 @@ class ARROW_TESTING_EXPORT GenericFileSystemTest {\n   virtual bool have_directory_mtimes() const { return true; }\n   // - Whether some directory tree deletion tests may fail randomly\n   virtual bool have_flaky_directory_tree_deletion() const { return false; }\n+  // - Whether the filesystem stores some metadata along files\n\nReview comment:\n       ```suggestion\r\n     // - Whether the filesystem stores some metadata alongside files\r\n   ```\n\n##########\nFile path: cpp/src/arrow/filesystem/filesystem.h\n##########\n@@ -283,13 +283,17 @@ class ARROW_EXPORT FileSystem : public std::enable_shared_from_this<FileSystem>\n   ///\n   /// If the target already exists, existing data is truncated.\n   virtual Result<std::shared_ptr<io::OutputStream>> OpenOutputStream(\n-      const std::string& path) = 0;\n+      const std::string& path,\n+      const std::shared_ptr<const KeyValueMetadata>& metadata) = 0;\n\nReview comment:\n       Nit: the produced stream will always take ownership of `metadata`, so this shouldn't be a ref\r\n   ```suggestion\r\n         std::shared_ptr<const KeyValueMetadata> metadata) = 0;\r\n   ```\n\n##########\nFile path: cpp/src/arrow/filesystem/s3fs.cc\n##########\n@@ -684,6 +685,85 @@ Result<S3Model::GetObjectResult> GetObjectRange(Aws::S3::S3Client* client,\n   return OutcomeToResult(client->GetObject(req));\n }\n \n+template <typename ObjectResult>\n+std::shared_ptr<const KeyValueMetadata> GetObjectMetadata(const ObjectResult& result) {\n+  std::vector<std::string> keys, values;\n+\n+  auto push = [&](std::string k, const Aws::String& v) {\n+    if (!v.empty()) {\n+      keys.push_back(std::move(k));\n+      values.push_back(FromAwsString(v).to_string());\n+    }\n+  };\n+  auto push_datetime = [&](std::string k, const Aws::Utils::DateTime& v) {\n+    if (v != Aws::Utils::DateTime(0.0)) {\n+      push(std::move(k), v.ToGmtString(Aws::Utils::DateFormat::ISO_8601));\n+    }\n+  };\n+\n+  keys.push_back(\"Content-Length\");\n+  values.push_back(std::to_string(result.GetContentLength()));\n+\n+  push(\"Cache-Control\", result.GetCacheControl());\n+  push(\"Content-Type\", result.GetContentType());\n+  push(\"Content-Language\", result.GetContentLanguage());\n+  push(\"ETag\", result.GetETag());\n+  push(\"VersionId\", result.GetVersionId());\n+  push_datetime(\"Last-Modified\", result.GetLastModified());\n+  push_datetime(\"Expires\", result.GetExpires());\n+  return std::make_shared<const KeyValueMetadata>(std::move(keys), std::move(values));\n+}\n+\n+template <typename ObjectRequest>\n+struct ObjectMetadataSetter {\n+  ObjectRequest* req;\n+\n\nReview comment:\n       ```suggestion\r\n   ```\n\n##########\nFile path: cpp/src/arrow/filesystem/s3fs.cc\n##########\n@@ -684,6 +685,85 @@ Result<S3Model::GetObjectResult> GetObjectRange(Aws::S3::S3Client* client,\n   return OutcomeToResult(client->GetObject(req));\n }\n \n+template <typename ObjectResult>\n+std::shared_ptr<const KeyValueMetadata> GetObjectMetadata(const ObjectResult& result) {\n+  std::vector<std::string> keys, values;\n+\n+  auto push = [&](std::string k, const Aws::String& v) {\n+    if (!v.empty()) {\n+      keys.push_back(std::move(k));\n+      values.push_back(FromAwsString(v).to_string());\n+    }\n+  };\n\nReview comment:\n       You can create a mutable KeyValueMetadata and return it from this function (`shared_ptr<T>` implicitly converts to `shared_ptr<const T>`)\r\n   ```suggestion\r\n     std::shared_ptr<KeyValueMetadata> metadata;\r\n   \r\n     auto push = [&](std::string k, const Aws::String& v) {\r\n       if (!v.empty()) {\r\n         metadata->Append(std::move(k), FromAwsString(v).to_string());\r\n       }\r\n     };\r\n   ```\n\n##########\nFile path: cpp/src/arrow/io/interfaces.cc\n##########\n@@ -105,6 +107,22 @@ Result<util::string_view> InputStream::Peek(int64_t ARROW_ARG_UNUSED(nbytes)) {\n \n bool InputStream::supports_zero_copy() const { return false; }\n \n+Result<std::shared_ptr<const KeyValueMetadata>> InputStream::ReadMetadata() {\n+  return std::shared_ptr<const KeyValueMetadata>{};\n+}\n+\n+// Default ReadMetadataAsync() implementation: simply issue the read on the context's\n+// executor\n+Future<std::shared_ptr<const KeyValueMetadata>> InputStream::ReadMetadataAsync(\n+    const IOContext& ctx) {\n+  auto self = shared_from_this();\n+  return DeferNotOk(internal::SubmitIO(ctx, [self] { return self->ReadMetadata(); }));\n\nReview comment:\n       Could you clarify ownership of `ctx`? SubmitIO makes a copy but doesn't seem to need it. If the copy is intentional, please unref the `ctx` arg\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-27T16:31:55.328+0000",
                    "updated": "2021-05-27T16:31:55.328+0000",
                    "started": "2021-05-27T16:31:55.328+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "603139",
                    "issueId": "13350906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906/worklog/603154",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10295:\nURL: https://github.com/apache/arrow/pull/10295#discussion_r640794785\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/filesystem.h\n##########\n@@ -283,13 +283,17 @@ class ARROW_EXPORT FileSystem : public std::enable_shared_from_this<FileSystem>\n   ///\n   /// If the target already exists, existing data is truncated.\n   virtual Result<std::shared_ptr<io::OutputStream>> OpenOutputStream(\n-      const std::string& path) = 0;\n+      const std::string& path,\n+      const std::shared_ptr<const KeyValueMetadata>& metadata) = 0;\n\nReview comment:\n       Not necessarily, the stream may not support it or it may convert the metadata to its own internal format.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-27T16:42:26.268+0000",
                    "updated": "2021-05-27T16:42:26.268+0000",
                    "started": "2021-05-27T16:42:26.268+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "603154",
                    "issueId": "13350906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906/worklog/603156",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10295:\nURL: https://github.com/apache/arrow/pull/10295#discussion_r640795898\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/s3fs.cc\n##########\n@@ -684,6 +685,85 @@ Result<S3Model::GetObjectResult> GetObjectRange(Aws::S3::S3Client* client,\n   return OutcomeToResult(client->GetObject(req));\n }\n \n+template <typename ObjectResult>\n+std::shared_ptr<const KeyValueMetadata> GetObjectMetadata(const ObjectResult& result) {\n+  std::vector<std::string> keys, values;\n+\n+  auto push = [&](std::string k, const Aws::String& v) {\n+    if (!v.empty()) {\n+      keys.push_back(std::move(k));\n+      values.push_back(FromAwsString(v).to_string());\n+    }\n+  };\n\nReview comment:\n       Hmm, why not.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-27T16:44:03.342+0000",
                    "updated": "2021-05-27T16:44:03.342+0000",
                    "started": "2021-05-27T16:44:03.342+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "603156",
                    "issueId": "13350906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906/worklog/603157",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10295:\nURL: https://github.com/apache/arrow/pull/10295#discussion_r640796204\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/s3fs.cc\n##########\n@@ -684,6 +685,85 @@ Result<S3Model::GetObjectResult> GetObjectRange(Aws::S3::S3Client* client,\n   return OutcomeToResult(client->GetObject(req));\n }\n \n+template <typename ObjectResult>\n+std::shared_ptr<const KeyValueMetadata> GetObjectMetadata(const ObjectResult& result) {\n+  std::vector<std::string> keys, values;\n+\n+  auto push = [&](std::string k, const Aws::String& v) {\n+    if (!v.empty()) {\n+      keys.push_back(std::move(k));\n+      values.push_back(FromAwsString(v).to_string());\n+    }\n+  };\n+  auto push_datetime = [&](std::string k, const Aws::Utils::DateTime& v) {\n+    if (v != Aws::Utils::DateTime(0.0)) {\n\nReview comment:\n       Well, this is the value returned by the AWS SDK when the information is unavailable, AFAIK.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-27T16:44:28.849+0000",
                    "updated": "2021-05-27T16:44:28.849+0000",
                    "started": "2021-05-27T16:44:28.848+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "603157",
                    "issueId": "13350906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906/worklog/603159",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10295:\nURL: https://github.com/apache/arrow/pull/10295#discussion_r640796508\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/s3fs.cc\n##########\n@@ -684,6 +685,85 @@ Result<S3Model::GetObjectResult> GetObjectRange(Aws::S3::S3Client* client,\n   return OutcomeToResult(client->GetObject(req));\n }\n \n+template <typename ObjectResult>\n+std::shared_ptr<const KeyValueMetadata> GetObjectMetadata(const ObjectResult& result) {\n+  std::vector<std::string> keys, values;\n+\n+  auto push = [&](std::string k, const Aws::String& v) {\n+    if (!v.empty()) {\n+      keys.push_back(std::move(k));\n+      values.push_back(FromAwsString(v).to_string());\n+    }\n+  };\n+  auto push_datetime = [&](std::string k, const Aws::Utils::DateTime& v) {\n+    if (v != Aws::Utils::DateTime(0.0)) {\n+      push(std::move(k), v.ToGmtString(Aws::Utils::DateFormat::ISO_8601));\n+    }\n+  };\n+\n+  keys.push_back(\"Content-Length\");\n+  values.push_back(std::to_string(result.GetContentLength()));\n+\n+  push(\"Cache-Control\", result.GetCacheControl());\n+  push(\"Content-Type\", result.GetContentType());\n+  push(\"Content-Language\", result.GetContentLanguage());\n+  push(\"ETag\", result.GetETag());\n+  push(\"VersionId\", result.GetVersionId());\n+  push_datetime(\"Last-Modified\", result.GetLastModified());\n+  push_datetime(\"Expires\", result.GetExpires());\n+  return std::make_shared<const KeyValueMetadata>(std::move(keys), std::move(values));\n+}\n+\n+template <typename ObjectRequest>\n+struct ObjectMetadataSetter {\n+  ObjectRequest* req;\n+\n\nReview comment:\n       Right :-)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-27T16:44:53.615+0000",
                    "updated": "2021-05-27T16:44:53.615+0000",
                    "started": "2021-05-27T16:44:53.615+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "603159",
                    "issueId": "13350906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906/worklog/603160",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10295:\nURL: https://github.com/apache/arrow/pull/10295#discussion_r640800919\n\n\n\n##########\nFile path: cpp/src/arrow/io/interfaces.cc\n##########\n@@ -105,6 +107,22 @@ Result<util::string_view> InputStream::Peek(int64_t ARROW_ARG_UNUSED(nbytes)) {\n \n bool InputStream::supports_zero_copy() const { return false; }\n \n+Result<std::shared_ptr<const KeyValueMetadata>> InputStream::ReadMetadata() {\n+  return std::shared_ptr<const KeyValueMetadata>{};\n+}\n+\n+// Default ReadMetadataAsync() implementation: simply issue the read on the context's\n+// executor\n+Future<std::shared_ptr<const KeyValueMetadata>> InputStream::ReadMetadataAsync(\n+    const IOContext& ctx) {\n+  auto self = shared_from_this();\n+  return DeferNotOk(internal::SubmitIO(ctx, [self] { return self->ReadMetadata(); }));\n\nReview comment:\n       `IOContext` copies are cheap, so I'm not sure there's a problem here.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-27T16:51:13.897+0000",
                    "updated": "2021-05-27T16:51:13.897+0000",
                    "started": "2021-05-27T16:51:13.896+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "603160",
                    "issueId": "13350906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906/worklog/603161",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10295:\nURL: https://github.com/apache/arrow/pull/10295#discussion_r640801703\n\n\n\n##########\nFile path: cpp/src/arrow/filesystem/filesystem.h\n##########\n@@ -283,13 +283,17 @@ class ARROW_EXPORT FileSystem : public std::enable_shared_from_this<FileSystem>\n   ///\n   /// If the target already exists, existing data is truncated.\n   virtual Result<std::shared_ptr<io::OutputStream>> OpenOutputStream(\n-      const std::string& path) = 0;\n+      const std::string& path,\n+      const std::shared_ptr<const KeyValueMetadata>& metadata) = 0;\n\nReview comment:\n       `KeyValueMetadata` is really just a glorified way of passing a collection of key-value pairs.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-27T16:52:09.480+0000",
                    "updated": "2021-05-27T16:52:09.480+0000",
                    "started": "2021-05-27T16:52:09.480+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "603161",
                    "issueId": "13350906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906/worklog/604363",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #10295:\nURL: https://github.com/apache/arrow/pull/10295\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-01T08:09:58.739+0000",
                    "updated": "2021-06-01T08:09:58.739+0000",
                    "started": "2021-06-01T08:09:58.739+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "604363",
                    "issueId": "13350906"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 9000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@8075281[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@582bda0d[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@537f001d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@550243cd[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4fd49871[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5832dddb[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@73e64128[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@343d68b2[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5fc16954[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@11d3ab72[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@50fd4761[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@f5add34[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9000,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jun 01 08:09:46 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-06-01T08:09:46.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11161/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2021-01-07T14:25:28.000+0000",
        "updated": "2021-06-01T08:10:05.000+0000",
        "timeoriginalestimate": null,
        "description": "I am using the Fileystem abstraction to write out html / text files to the local filesystem as well as s3.\r\n\r\nI noticed that when using s3_fs.open_output_stream in combination with file.write(bytes), the object that gets created has a Content-Type of 'application/xml' even tough it's plain text, which is problematic for me.\r\n\r\nHere is a minimal example:\r\n{code:java}\r\nimport boto3\r\nBUCKET = \"my-bucket\"\r\npath = f\"s3://{BUCKET}/pyarrow_encoding.txt\"\r\ns3_fs, output_path = FileSystem.from_uri(path)\r\nwith s3_fs.open_output_stream(path=output_path, compression=None) as f:\r\n    f.write('hello'.encode('UTF-8'))\r\n\r\ns3 = boto3.client('s3')\r\nresponse = s3.get_object(Bucket=BUCKET, Key='pyarrow_encoding.txt')\r\nprint(response['ContentType']) # Output: application/xml\r\nprint(response['Body'].read().decode('UTF-8')) # Output: hello\r\n\r\ns3.put_object(Bucket=BUCKET,\r\n              Key='boto3_encoding.txt',\r\n              Body='hello'.encode('UTF-8'))\r\nresponse = s3.get_object(Bucket=BUCKET, Key='boto3_encoding.txt')\r\nprint(response['ContentType']) # Output: binary/octet-stream\r\nprint(response['Body'].read().decode('UTF-8')) # Output: hello\r\n{code}\r\nI know, that the S3Filesystem implementation of pyarrow might no have mime type inference implemented, but I am wondering, why always 'application/xml' is the resulting Content-Type? Maybe this is hardcoded somewhere?\r\n\r\nOriginally, I tried this with '.html' files and also there, the objects on s3 always got the\u00a0'application/xml' Content-Type. (Please also see attachment from the s3 console)\r\n\r\n\u00a0\r\n\r\nAny help or pointer is appreciated.\u00a0\r\n\r\nThank you,\r\n\r\nNicolas",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/attachment/13018319",
                "id": "13018319",
                "filename": "boto3-metadata.png",
                "author": {
                    "self": "https://issues.apache.org/jira/rest/api/2/user?username=nicornk",
                    "name": "nicornk",
                    "key": "nicornk",
                    "avatarUrls": {
                        "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                        "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                        "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                        "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                    },
                    "displayName": "Nicolas Renkamp",
                    "active": true,
                    "timeZone": "Etc/UTC"
                },
                "created": "2021-01-07T15:23:05.251+0000",
                "size": 25908,
                "mimeType": "image/png",
                "content": "https://issues.apache.org/jira/secure/attachment/13018319/boto3-metadata.png"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/attachment/13018315",
                "id": "13018315",
                "filename": "Screen Shot 2021-01-07 at 15.23.07.png",
                "author": {
                    "self": "https://issues.apache.org/jira/rest/api/2/user?username=nicornk",
                    "name": "nicornk",
                    "key": "nicornk",
                    "avatarUrls": {
                        "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                        "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                        "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                        "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                    },
                    "displayName": "Nicolas Renkamp",
                    "active": true,
                    "timeZone": "Etc/UTC"
                },
                "created": "2021-01-07T14:25:43.876+0000",
                "size": 24749,
                "mimeType": "image/png",
                "content": "https://issues.apache.org/jira/secure/attachment/13018315/Screen+Shot+2021-01-07+at+15.23.07.png"
            }
        ],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python][C++] S3Filesystem: file Content-Type not set correctly?",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906/comment/17260566",
                    "id": "17260566",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "I had no idea S3 stored a content-type metadata about files. Can you also post a screenshot of the metadata for the boto3-created file?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-01-07T15:00:37.626+0000",
                    "updated": "2021-01-07T15:00:37.626+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906/comment/17260574",
                    "id": "17260574",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nicornk",
                        "name": "nicornk",
                        "key": "nicornk",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Nicolas Renkamp",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~apitrou]\u00a0Uploaded.\r\n\r\nYes, it was also surprising for me. My current assumption is that the c++ aws sdk that pyarrow uses has different content-type inference logic than boto3?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nicornk",
                        "name": "nicornk",
                        "key": "nicornk",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Nicolas Renkamp",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-01-07T15:24:44.557+0000",
                    "updated": "2021-01-07T15:24:44.557+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906/comment/17260579",
                    "id": "17260579",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "I don't think the C++ AWS SDK uses any inference. \"application/xml\" seems to be a default value.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-01-07T15:38:29.011+0000",
                    "updated": "2021-01-07T15:38:29.011+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906/comment/17260585",
                    "id": "17260585",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nicornk",
                        "name": "nicornk",
                        "key": "nicornk",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Nicolas Renkamp",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I am struggling to find this default value anywhere (in code as well as documentation of AWS).\r\n\r\nIs pyarrow always using multipartUpload inside S3Filesystem or does it also use PutObject for small files?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nicornk",
                        "name": "nicornk",
                        "key": "nicornk",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Nicolas Renkamp",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-01-07T15:45:12.471+0000",
                    "updated": "2021-01-07T15:45:12.471+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906/comment/17260589",
                    "id": "17260589",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "If you grep for AMZN_XML_CONTENT_TYPE in the C++ AWS SDK you'll see that it's use as a default content-type value for S3 requests. I presume that's the reason for what you're observing, though it's only a guess.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-01-07T15:48:42.211+0000",
                    "updated": "2021-01-07T15:48:55.257+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906/comment/17260590",
                    "id": "17260590",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "That said, \"binary/octet-stream\" isn't correct for a text file either...",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-01-07T15:49:35.048+0000",
                    "updated": "2021-01-07T15:49:35.048+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906/comment/17260591",
                    "id": "17260591",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "And to answer your other question, we always use multipart upload.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-01-07T15:52:32.841+0000",
                    "updated": "2021-01-07T15:52:32.841+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906/comment/17260599",
                    "id": "17260599",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nicornk",
                        "name": "nicornk",
                        "key": "nicornk",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Nicolas Renkamp",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "You are right, found it. Thanks for the hint with\u00a0AMZN_XML_CONTENT_TYPE.\r\n\r\nNow I am curious what it would set as content-type for parquet files and verified that it's also application/xml:\r\n\r\n\u00a0\r\n{code:java}\r\nimport pyarrow as pa\r\nimport pyarrow.parquet as pq\r\ntable = pa.table({'a': [1, 2], 'b': [.1, .2]})\r\npq.write_table(table, f\"s3://{BUCKET}/test.parquet\")\r\n\r\nresponse = s3.get_object(Bucket=BUCKET, Key='test.parquet')\r\nprint(response['ContentType']) # application/xml\r\nprint(response['Body'].read())\r\n{code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nicornk",
                        "name": "nicornk",
                        "key": "nicornk",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Nicolas Renkamp",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-01-07T16:01:24.263+0000",
                    "updated": "2021-01-07T16:01:24.263+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906/comment/17260608",
                    "id": "17260608",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "[~npr] Do you have opinions on this?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-01-07T16:09:46.667+0000",
                    "updated": "2021-01-07T16:09:46.667+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906/comment/17260647",
                    "id": "17260647",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "If the aws-sdk-cpp has an API for setting content type, I guess we can expose it. Though as you say, it's not clear that boto is doing the right thing either, for what that's worth.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-01-07T16:55:50.252+0000",
                    "updated": "2021-01-07T16:55:50.252+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906/comment/17261137",
                    "id": "17261137",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nicornk",
                        "name": "nicornk",
                        "key": "nicornk",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Nicolas Renkamp",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I was mainly surprised about this, I don't think that there is an immediate need to expose the content-type, at least for me. I can also switch to plain boto3 and create my own local / s3 filesystem abstraction.\r\n\r\nWould it make sense to upstream this question to AWS and ask why the different sdk's behave differently in terms of content type inference?\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nicornk",
                        "name": "nicornk",
                        "key": "nicornk",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Nicolas Renkamp",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-01-08T08:53:47.734+0000",
                    "updated": "2021-01-08T08:53:47.734+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906/comment/17261142",
                    "id": "17261142",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nicornk",
                        "name": "nicornk",
                        "key": "nicornk",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Nicolas Renkamp",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Just looked at pyfilesystem. They solved this by introducing extra_args when creating the filesystem\r\n{code:java}\r\nimport fs, fs.mirror\r\ns3fs = S3FS('example', upload_args={\"CacheControl\": \"max-age=2592000\", \"ACL\": \"public-read\"})\r\nfs.mirror.mirror('/path/to/mirror', s3fs)\r\n{code}\r\nhttps://github.com/PyFilesystem/s3fs#extraargs\r\n\r\n\u00a0\r\n\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nicornk",
                        "name": "nicornk",
                        "key": "nicornk",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Nicolas Renkamp",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-01-08T08:59:56.674+0000",
                    "updated": "2021-01-08T08:59:56.674+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13350906/comment/17354922",
                    "id": "17354922",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 10295\n[https://github.com/apache/arrow/pull/10295]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-06-01T08:09:46.633+0000",
                    "updated": "2021-06-01T08:09:46.633+0000"
                }
            ],
            "maxResults": 13,
            "total": 13,
            "startAt": 0
        },
        "customfield_12311820": "0|z0mcts:",
        "customfield_12314139": null
    }
}