{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13324088",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324088",
    "key": "ARROW-9828",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ruan",
            "name": "ruan",
            "key": "ruan",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=ruan&avatarId=46203",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=ruan&avatarId=46203",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=ruan&avatarId=46203",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=ruan&avatarId=46203"
            },
            "displayName": "Ruan Pearce-Authers",
            "active": true,
            "timeZone": "Europe/London"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12335005",
                "id": "12335005",
                "name": "Rust - DataFusion"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "aggregateprogress": {
            "progress": 23400,
            "total": 23400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 23400,
            "total": 23400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9828/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 39,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324088/worklog/524078",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "returnString opened a new pull request #8917:\nURL: https://github.com/apache/arrow/pull/8917\n\n\n   I've got a use case for this with a custom TableProvider implementation, so thought I'd give this a go :)\r\n   \r\n   This PR allows TableProviders to optionally indicate that they support handling filter expressions either:\r\n   - Inexactly, to simply optimise data retrieval in an approximate fashion; e.g. pruning in your classic chunked storage system with min/max column metadata stored per chunk\r\n   - Exactly, in which case the relevant filter plan nodes can be optimised out entirely\r\n   \r\n   Some preemptive concerns from my side:\r\n   - Most of these concepts could probably have better names, open to suggestions here.\r\n   - I'm not sure whether expressions are the correct thing to be pushing down to the provider.\r\n   - I've had to update quite a few `scan` callsites with empty filter lists. Could this be handled in a better way?\r\n   - Currently, only table scans using TableSource::FromProvider are supported, because we need a reference to the provider at optimisation time. #8910 removes the provider/named-based reference distinction entirely so I can rebase this once that's merged and add an extra test using an ordinary sql statement, rather than just a `ctx.read_table(provider)` call.\r\n   \r\n   I'd appreciate any thoughts or feedback!\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-14T19:44:17.616+0000",
                    "updated": "2020-12-14T19:44:17.616+0000",
                    "started": "2020-12-14T19:44:17.616+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "524078",
                    "issueId": "13324088"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324088/worklog/524079",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "returnString commented on pull request #8917:\nURL: https://github.com/apache/arrow/pull/8917#issuecomment-744668250\n\n\n   ...aaand a new conflict has already landed since I started writing up this post, will rebase shortly :D\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-14T19:45:21.359+0000",
                    "updated": "2020-12-14T19:45:21.359+0000",
                    "started": "2020-12-14T19:45:21.359+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "524079",
                    "issueId": "13324088"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324088/worklog/524089",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #8917:\nURL: https://github.com/apache/arrow/pull/8917#issuecomment-744675886\n\n\n   Thank you @returnString ! This looks awesome -- I will try and review it carefully tomorrow.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-14T20:00:20.937+0000",
                    "updated": "2020-12-14T20:00:20.937+0000",
                    "started": "2020-12-14T20:00:20.936+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "524089",
                    "issueId": "13324088"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324088/worklog/524093",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8917:\nURL: https://github.com/apache/arrow/pull/8917#issuecomment-744683114\n\n\n   https://issues.apache.org/jira/browse/ARROW-9828\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-14T20:13:49.693+0000",
                    "updated": "2020-12-14T20:13:49.693+0000",
                    "started": "2020-12-14T20:13:49.692+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "524093",
                    "issueId": "13324088"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324088/worklog/524096",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #8917:\nURL: https://github.com/apache/arrow/pull/8917#discussion_r542743173\n\n\n\n##########\nFile path: rust/datafusion/src/datasource/datasource.rs\n##########\n@@ -48,9 +66,19 @@ pub trait TableProvider {\n         &self,\n         projection: &Option<Vec<usize>>,\n         batch_size: usize,\n+        filters: &[Expr],\n     ) -> Result<Arc<dyn ExecutionPlan>>;\n \n     /// Returns the table Statistics\n     /// Statistics should be optional because not all data sources can provide statistics.\n     fn statistics(&self) -> Statistics;\n+\n+    /// Tests whether the table provider can make use of a filter expression\n+    /// to optimise data retrieval.\n+    fn test_filter_pushdown(\n\nReview comment:\n       Maybe `supports_filter_pushdown`?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-14T20:25:33.825+0000",
                    "updated": "2020-12-14T20:25:33.825+0000",
                    "started": "2020-12-14T20:25:33.824+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "524096",
                    "issueId": "13324088"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324088/worklog/524099",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #8917:\nURL: https://github.com/apache/arrow/pull/8917#discussion_r542747164\n\n\n\n##########\nFile path: rust/datafusion/src/datasource/datasource.rs\n##########\n@@ -34,6 +35,23 @@ pub struct Statistics {\n     pub total_byte_size: Option<usize>,\n }\n \n+/// Indicates whether and how a filter expression can be handled by a\n+/// TableProvider for table scans.\n+#[derive(Debug, Clone)]\n+pub enum TableProviderFilterPushDown {\n+    /// The expression cannot be used by the provider.\n+    Unsupported,\n+    /// The expression can be used to help minimise the data retrieved,\n+    /// but the provider cannot guarantee that all returned tuples\n\nReview comment:\n       I think those are good names and good docs as well\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-14T20:29:15.061+0000",
                    "updated": "2020-12-14T20:29:15.061+0000",
                    "started": "2020-12-14T20:29:15.061+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "524099",
                    "issueId": "13324088"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324088/worklog/524271",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #8917:\nURL: https://github.com/apache/arrow/pull/8917#issuecomment-745083848\n\n\n   FYI this will conflict with parts of #8910. IMO we should merge #8910 first, as it simplifies some of the code, making this PR easier.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-15T06:30:32.352+0000",
                    "updated": "2020-12-15T06:30:32.352+0000",
                    "started": "2020-12-15T06:30:32.352+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "524271",
                    "issueId": "13324088"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324088/worklog/524328",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "returnString commented on pull request #8917:\nURL: https://github.com/apache/arrow/pull/8917#issuecomment-745164026\n\n\n   > FYI this will conflict with parts of #8910. IMO we should merge #8910 first, as it simplifies some of the code, making this PR easier.\n   \n   Yeah definitely; like I mentioned, that's actually _required_ for this to work with ordinary query methods (not just `read_table(provider)` as the tests are using currently) because we need a reference to the provider whilst doing logical plan optimisation :)\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-15T09:25:58.985+0000",
                    "updated": "2020-12-15T09:25:58.985+0000",
                    "started": "2020-12-15T09:25:58.985+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "524328",
                    "issueId": "13324088"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324088/worklog/524473",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rdettai commented on pull request #8917:\nURL: https://github.com/apache/arrow/pull/8917#issuecomment-745333390\n\n\n   Can you take a look at [ARROW-10902](https://issues.apache.org/jira/browse/ARROW-10902). I would be very interested by your input as it is very closely related.\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-15T14:35:44.774+0000",
                    "updated": "2020-12-15T14:35:44.774+0000",
                    "started": "2020-12-15T14:35:44.773+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "524473",
                    "issueId": "13324088"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324088/worklog/524502",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rdettai commented on a change in pull request #8917:\nURL: https://github.com/apache/arrow/pull/8917#discussion_r543418383\n\n\n\n##########\nFile path: rust/datafusion/src/datasource/datasource.rs\n##########\n@@ -48,9 +66,19 @@ pub trait TableProvider {\n         &self,\n         projection: &Option<Vec<usize>>,\n         batch_size: usize,\n+        filters: &[Expr],\n\nReview comment:\n       I would be tempted to make this async in case filtering requires some IO.\n\n##########\nFile path: rust/datafusion/src/datasource/parquet.rs\n##########\n@@ -65,6 +66,7 @@ impl TableProvider for ParquetTable {\n         &self,\n         projection: &Option<Vec<usize>>,\n         batch_size: usize,\n+        _filters: &[Expr],\n\nReview comment:\n       Shouldn't we try to see how this could work with parquet and its footer metadata?\n\n##########\nFile path: rust/datafusion/src/datasource/datasource.rs\n##########\n@@ -48,9 +66,19 @@ pub trait TableProvider {\n         &self,\n         projection: &Option<Vec<usize>>,\n         batch_size: usize,\n+        filters: &[Expr],\n     ) -> Result<Arc<dyn ExecutionPlan>>;\n \n     /// Returns the table Statistics\n     /// Statistics should be optional because not all data sources can provide statistics.\n     fn statistics(&self) -> Statistics;\n+\n+    /// Tests whether the table provider can make use of a filter expression\n+    /// to optimise data retrieval.\n+    fn test_filter_pushdown(\n\nReview comment:\n       I feel this makes us evaluate the expression twice: once for testing filter support and once at scan time. Moreover, it is likely that different partitions will have different `TableProviderFilterPushDown` values. It would be great optimize out filters on that finer granularity \ud83d\ude80 But that would imply doing that optimization in the physical plan.\n\n##########\nFile path: rust/datafusion/src/datasource/datasource.rs\n##########\n@@ -34,6 +35,23 @@ pub struct Statistics {\n     pub total_byte_size: Option<usize>,\n }\n \n+/// Indicates whether and how a filter expression can be handled by a\n+/// TableProvider for table scans.\n+#[derive(Debug, Clone)]\n+pub enum TableProviderFilterPushDown {\n+    /// The expression cannot be used by the provider.\n+    Unsupported,\n+    /// The expression can be used to help minimise the data retrieved,\n+    /// but the provider cannot guarantee that all returned tuples\n\nReview comment:\n       How will the distinction between a filter that is `Unsupported` and `Inexact` be leveraged? If `TableProviderFilterPushDown` is only used to know which filter expression can be optimized out, I think that a boolean would be enough.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-15T15:10:39.289+0000",
                    "updated": "2020-12-15T15:10:39.289+0000",
                    "started": "2020-12-15T15:10:39.288+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "524502",
                    "issueId": "13324088"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324088/worklog/524534",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "returnString commented on a change in pull request #8917:\nURL: https://github.com/apache/arrow/pull/8917#discussion_r543494569\n\n\n\n##########\nFile path: rust/datafusion/src/datasource/datasource.rs\n##########\n@@ -34,6 +35,23 @@ pub struct Statistics {\n     pub total_byte_size: Option<usize>,\n }\n \n+/// Indicates whether and how a filter expression can be handled by a\n+/// TableProvider for table scans.\n+#[derive(Debug, Clone)]\n+pub enum TableProviderFilterPushDown {\n+    /// The expression cannot be used by the provider.\n+    Unsupported,\n+    /// The expression can be used to help minimise the data retrieved,\n+    /// but the provider cannot guarantee that all returned tuples\n\nReview comment:\n       This result is used to drive the logical plan optimisation. Returning `Unsupported` _or_ `Inexact` will both result in the original filter node being preserved in the plan (only `Exact` can provide optimisation guarantees that the post-hoc filtering is unecessary) but `Inexact` means that the filter expr in question will be passed to `TableProvider::scan` when creating the execution plan, whereas `Unsupported` means the provider can do nothing useful with the expr at all (relevant code is [here](https://github.com/apache/arrow/pull/8917/files#diff-5f6ab9edcef3a4b9a8eb75f641ac0930cdbae92156f056fea400e0c58218a094R354-R369)).\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-15T16:29:03.106+0000",
                    "updated": "2020-12-15T16:29:03.106+0000",
                    "started": "2020-12-15T16:29:03.106+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "524534",
                    "issueId": "13324088"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324088/worklog/524537",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "returnString commented on a change in pull request #8917:\nURL: https://github.com/apache/arrow/pull/8917#discussion_r543497080\n\n\n\n##########\nFile path: rust/datafusion/src/datasource/parquet.rs\n##########\n@@ -65,6 +66,7 @@ impl TableProvider for ParquetTable {\n         &self,\n         projection: &Option<Vec<usize>>,\n         batch_size: usize,\n+        _filters: &[Expr],\n\nReview comment:\n       I honestly know very little about the internals of Parquet and I'd like to avoid too much extra complexity in this PR, I wonder if making use of this in the various existing implementations where feasible would work better as a followup task (or even task per provider)?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-15T16:32:14.830+0000",
                    "updated": "2020-12-15T16:32:14.830+0000",
                    "started": "2020-12-15T16:32:14.829+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "524537",
                    "issueId": "13324088"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324088/worklog/524546",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "returnString commented on a change in pull request #8917:\nURL: https://github.com/apache/arrow/pull/8917#discussion_r543504211\n\n\n\n##########\nFile path: rust/datafusion/src/datasource/datasource.rs\n##########\n@@ -48,9 +66,19 @@ pub trait TableProvider {\n         &self,\n         projection: &Option<Vec<usize>>,\n         batch_size: usize,\n+        filters: &[Expr],\n\nReview comment:\n       That's an interesting idea! In my use case, the TableProvider impl interprets the filters synchronously after _asynchronously_ preparing the necessary data externally from DataFusion, but yeah, I could see that happening too.\r\n   \r\n   If we didn't make this change, I suppose implementations could still use these filters within the returned `ExecutionPlan`'s `execute` method for now to enable async use cases?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-15T16:41:09.297+0000",
                    "updated": "2020-12-15T16:41:09.297+0000",
                    "started": "2020-12-15T16:41:09.296+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "524546",
                    "issueId": "13324088"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324088/worklog/524549",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "returnString commented on a change in pull request #8917:\nURL: https://github.com/apache/arrow/pull/8917#discussion_r543504211\n\n\n\n##########\nFile path: rust/datafusion/src/datasource/datasource.rs\n##########\n@@ -48,9 +66,19 @@ pub trait TableProvider {\n         &self,\n         projection: &Option<Vec<usize>>,\n         batch_size: usize,\n+        filters: &[Expr],\n\nReview comment:\n       That's an interesting idea! In my use case, the TableProvider impl interprets the filters synchronously after _asynchronously_ preparing the necessary data externally from DataFusion, but yeah, I could see that happening too.\r\n   \r\n   If we didn't make this change, I suppose implementations could still use these filters within the returned `ExecutionPlan`'s `execute` method for now to enable async use cases?\r\n   \r\n   Edit: my main concern here would be code churn, propagating that new async-ness up through all the callsites.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-15T16:42:51.988+0000",
                    "updated": "2020-12-15T16:42:51.988+0000",
                    "started": "2020-12-15T16:42:51.988+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "524549",
                    "issueId": "13324088"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324088/worklog/524568",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "returnString commented on a change in pull request #8917:\nURL: https://github.com/apache/arrow/pull/8917#discussion_r543527000\n\n\n\n##########\nFile path: rust/datafusion/src/datasource/datasource.rs\n##########\n@@ -48,9 +66,19 @@ pub trait TableProvider {\n         &self,\n         projection: &Option<Vec<usize>>,\n         batch_size: usize,\n+        filters: &[Expr],\n     ) -> Result<Arc<dyn ExecutionPlan>>;\n \n     /// Returns the table Statistics\n     /// Statistics should be optional because not all data sources can provide statistics.\n     fn statistics(&self) -> Statistics;\n+\n+    /// Tests whether the table provider can make use of a filter expression\n+    /// to optimise data retrieval.\n+    fn test_filter_pushdown(\n\nReview comment:\n       > Maybe `supports_filter_pushdown`?\r\n   \r\n   That's definitely better, other people seem to like it as well, sold :p\r\n   \r\n   > I feel this makes us evaluate the expression twice: once for testing filter support and once at scan time. Moreover, it is likely that different partitions will have different `TableProviderFilterPushDown` values. It would be great optimize out filters on that finer granularity \ud83d\ude80 But that would imply doing that optimization in the physical plan.\r\n   \r\n   Yeah, I think this depends on whether it's preferable to:\r\n   - offer extensibility for providers, allowing them to interpret filters however they like\r\n   - promote some notion of external data chunk into an actual DataFusion concept (I need to read through your catalogue proposal doc properly!) and get providers to return a list of available chunks with their bounds, then having DataFusion perform the high-level filtering where possible, and pass that more selective list of chunk IDs back for actual data retrieval\r\n   \r\n   And personally I see pros and cons for both of those options (flexibility is cool, but sometimes dangerous).\r\n   \r\n   I'm not familiar enough with partitioning in DataFusion yet to quite understand what you mean for the different pushdown support return values across partitions; I would expect that the filter pushdown status is usually a property of the column in question? e.g. depending on whether a column tracks sufficient statistics and the provider storage mechanism allows for it\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-15T17:09:00.452+0000",
                    "updated": "2020-12-15T17:09:00.452+0000",
                    "started": "2020-12-15T17:09:00.451+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "524568",
                    "issueId": "13324088"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324088/worklog/524689",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "yordan-pavlov commented on a change in pull request #8917:\nURL: https://github.com/apache/arrow/pull/8917#discussion_r543655758\n\n\n\n##########\nFile path: rust/datafusion/src/datasource/parquet.rs\n##########\n@@ -65,6 +66,7 @@ impl TableProvider for ParquetTable {\n         &self,\n         projection: &Option<Vec<usize>>,\n         batch_size: usize,\n+        _filters: &[Expr],\n\nReview comment:\n       @returnString it's great to see someone else working on predicate push-down as well; \r\n   I have been working on this for a couple of weeks, targeting an end-to-end implementation for parquet and have done similar changes to the filter push-down optimizer but your implementation is better because of the idea for full vs partial filter push-down; in my version I have `predicate: &Option<Expr>`, but `filters: &[Expr]` should work as well;\r\n   \r\n   I think it makes sense to separate the generic support for predicate push-down to the data source from the implementation for various data sources such as parquet because each change will be fairly big so makes sense to split into smaller changes;\r\n   \r\n   regarding a parquet implementation of predicate push-down I have been working on the idea of building arrays from the min / max statistics in row groups and then reusing the existing physical expressions already implemented in datafusion; I already have the code that builds statistics arrays, next working on the expression evaluation - hopefully will have enough to start a PR in the next couple of weeks;\r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-15T20:14:46.404+0000",
                    "updated": "2020-12-15T20:14:46.404+0000",
                    "started": "2020-12-15T20:14:46.404+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "524689",
                    "issueId": "13324088"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324088/worklog/524720",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "returnString commented on a change in pull request #8917:\nURL: https://github.com/apache/arrow/pull/8917#discussion_r543706456\n\n\n\n##########\nFile path: rust/datafusion/src/datasource/parquet.rs\n##########\n@@ -65,6 +66,7 @@ impl TableProvider for ParquetTable {\n         &self,\n         projection: &Option<Vec<usize>>,\n         batch_size: usize,\n+        _filters: &[Expr],\n\nReview comment:\n       @yordan-pavlov Likewise!\r\n   \r\n   Are you broadly happy that this interface and implementation would suffice for your Parquet-specific work? My use case is an entirely external TableProvider implementation, so hopefully that's kept my assumptions to a minimum.\r\n   \r\n   If you've got time, seeing as you've been working in this area, I'd really appreciate any other thoughts you might have here :)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-15T21:41:29.761+0000",
                    "updated": "2020-12-15T21:41:29.761+0000",
                    "started": "2020-12-15T21:41:29.760+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "524720",
                    "issueId": "13324088"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324088/worklog/524736",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #8917:\nURL: https://github.com/apache/arrow/pull/8917#issuecomment-745599394\n\n\n   > #8910 removes the provider/named-based reference distinction entirely so I can rebase this once that's merged and add an extra test using an ordinary sql statement, rather than just a ctx.read_table(provider) call.\r\n   \r\n   https://github.com/apache/arrow/pull/8910 is merged\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-15T22:10:21.307+0000",
                    "updated": "2020-12-15T22:10:21.307+0000",
                    "started": "2020-12-15T22:10:21.306+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "524736",
                    "issueId": "13324088"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324088/worklog/524748",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #8917:\nURL: https://github.com/apache/arrow/pull/8917#discussion_r543730441\n\n\n\n##########\nFile path: rust/datafusion/src/datasource/datasource.rs\n##########\n@@ -48,9 +66,19 @@ pub trait TableProvider {\n         &self,\n         projection: &Option<Vec<usize>>,\n         batch_size: usize,\n+        filters: &[Expr],\n\nReview comment:\n       If we don't like passing around `&[]` all over the place, we could name `scan` --> `scan_with_filter` and add a default implementation of `scan` \r\n   \r\n   That would also have the nice benefit of keeping the signatures the same for existing TableProvider implementations. I do not feel strongly about this\n\n##########\nFile path: rust/datafusion/src/logical_plan/plan.rs\n##########\n@@ -477,17 +479,29 @@ impl LogicalPlan {\n                     LogicalPlan::TableScan {\n                         ref source,\n                         ref projection,\n+                        ref filters,\n                         ..\n-                    } => match source {\n-                        TableSource::FromContext(table_name) => write!(\n-                            f,\n-                            \"TableScan: {} projection={:?}\",\n-                            table_name, projection\n-                        ),\n-                        TableSource::FromProvider(_) => {\n-                            write!(f, \"TableScan: projection={:?}\", projection)\n+                    } => {\n+                        match source {\n+                            TableSource::FromContext(table_name) => write!(\n+                                f,\n+                                \"TableScan: {} projection={:?}\",\n+                                table_name, projection\n+                            )?,\n+                            TableSource::FromProvider(_) => {\n+                                write!(f, \"TableScan: projection={:?}\", projection)?\n+                            }\n+                        };\n+\n+                        // TODO: this probably shouldn't be conditional on a non-empty list\n\nReview comment:\n       I think it is fine to not print out filters if they aren't present\n\n##########\nFile path: rust/datafusion/src/datasource/parquet.rs\n##########\n@@ -65,6 +66,7 @@ impl TableProvider for ParquetTable {\n         &self,\n         projection: &Option<Vec<usize>>,\n         batch_size: usize,\n+        _filters: &[Expr],\n\nReview comment:\n       > I think it makes sense to separate the generic support for predicate push-down to the data source from the implementation for various data sources such as parquet because each change will be fairly big so makes sense to split into smaller changes;\r\n   \r\n   I think this approach makes a lot of sense. \r\n   \r\n   I have also been thinking about pushing predicates down into custom table providers, and FWIW I think this interface would work well for my use. \n\n##########\nFile path: rust/datafusion/src/datasource/datasource.rs\n##########\n@@ -34,6 +35,23 @@ pub struct Statistics {\n     pub total_byte_size: Option<usize>,\n }\n \n+/// Indicates whether and how a filter expression can be handled by a\n+/// TableProvider for table scans.\n+#[derive(Debug, Clone)]\n+pub enum TableProviderFilterPushDown {\n+    /// The expression cannot be used by the provider.\n+    Unsupported,\n+    /// The expression can be used to help minimise the data retrieved,\n+    /// but the provider cannot guarantee that all returned tuples\n\nReview comment:\n       I think that these names make sense as does the behavior described\n\n##########\nFile path: rust/datafusion/src/datasource/datasource.rs\n##########\n@@ -48,9 +66,19 @@ pub trait TableProvider {\n         &self,\n         projection: &Option<Vec<usize>>,\n         batch_size: usize,\n+        filters: &[Expr],\n\nReview comment:\n       I think if filtering requires IO it could be done as part of the actual Execution. \r\n   \r\n   It seems like the main benefit of removing plan nodes during planning is to avoid potentially expensive I/O that could be ruled out with Metadata queries (as @returnString  describes is his usecase) \r\n   \r\n   Thus if the system has to go and do I/O anyways to figure out if it rule out a plan node, much of the benefit of pruning such nodes from the plan seem to be lost. In that case it seems better to me to do do such pruning as part of Execution. \r\n   \r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-15T22:31:05.047+0000",
                    "updated": "2020-12-15T22:31:05.047+0000",
                    "started": "2020-12-15T22:31:05.046+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "524748",
                    "issueId": "13324088"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324088/worklog/525047",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rdettai commented on a change in pull request #8917:\nURL: https://github.com/apache/arrow/pull/8917#discussion_r544337093\n\n\n\n##########\nFile path: rust/datafusion/src/datasource/datasource.rs\n##########\n@@ -48,9 +66,19 @@ pub trait TableProvider {\n         &self,\n         projection: &Option<Vec<usize>>,\n         batch_size: usize,\n+        filters: &[Expr],\n     ) -> Result<Arc<dyn ExecutionPlan>>;\n \n     /// Returns the table Statistics\n     /// Statistics should be optional because not all data sources can provide statistics.\n     fn statistics(&self) -> Statistics;\n+\n+    /// Tests whether the table provider can make use of a filter expression\n+    /// to optimise data retrieval.\n+    fn test_filter_pushdown(\n\nReview comment:\n       > I'm not familiar enough with partitioning in DataFusion yet to quite understand what you mean for the different pushdown support return values across partitions\r\n   \r\n   Sorry, I was not very clear! Let me try to do better \ud83d\ude04 \r\n   \r\n   When the logical plan is converted, DataFusion allows the target physical plan to specify a number of partitions. This typically allows you to use that many threads (or workers) to execute your physical plan. In the context of datasources, this is often the number of files, as they can always be decoded separately and in parallel. But it could be any other relevant partitioning of your data. My point, is that you will often have the statistics at the granularity of the file <=> DataFusion partitions. \r\n   \r\n   So the workflow here will be the following:\r\n   - In the logical plan, you are evaluating the pushed-down expressions on the entire datasource (all of its files) to know if some of the expressions can be simplified out (using `supports_filter_pushdown()`). To achieve this in your TableProvider implem, you will need to merge all the statistics of your files into one that characterizes the entire datasource, then select the expressions.\r\n   - You will likely need to do the same expression pruning again at the partition level (so in the physical expression). Indeed each file will have more focused (= accurate) statistics that you will want to take advantage of, because you will likely be able to prune out more parts of the filter expression.\r\n   \r\n   My question is whether it is worth adding the complexity of trying to simplify the filtering expression here in the logical plan when it will better done at the partition level in the physical plan.\n\n##########\nFile path: rust/datafusion/src/datasource/datasource.rs\n##########\n@@ -34,6 +35,23 @@ pub struct Statistics {\n     pub total_byte_size: Option<usize>,\n }\n \n+/// Indicates whether and how a filter expression can be handled by a\n+/// TableProvider for table scans.\n+#[derive(Debug, Clone)]\n+pub enum TableProviderFilterPushDown {\n+    /// The expression cannot be used by the provider.\n+    Unsupported,\n+    /// The expression can be used to help minimise the data retrieved,\n+    /// but the provider cannot guarantee that all returned tuples\n\nReview comment:\n       I agree the names explicit! \r\n   \r\n   I am challenging whether having 3 values is necessary. `Unsupported` vs `Inexact` is something that you don't need to expose publicly here as they are used internally by the the TableProvider when they will be passed back to the `scan()` method (or not). Said otherwise, you can leave it to the the implementation of `scan()` to decide what to do with the expressions, you don't need do do it with `supports_filter_pushdown()`. Only `Exact` vs `Unsupported|Inexact` really needs to be exposed because it is used externally (by the planner)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-16T14:41:45.516+0000",
                    "updated": "2020-12-16T14:41:45.516+0000",
                    "started": "2020-12-16T14:41:45.516+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "525047",
                    "issueId": "13324088"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 23400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2dbcb716[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3d6bb8f6[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4981d46b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@29cd69a5[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4f0f5c44[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2097edb9[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6772474c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@25b09a46[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@10681fc8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@f0dd259[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7a30bcd3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5b737b79[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 23400,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Dec 19 21:38:33 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-12-19T21:38:33.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9828/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2020-08-22T15:58:41.000+0000",
        "updated": "2020-12-28T01:04:11.000+0000",
        "timeoriginalestimate": null,
        "description": "TableProvider trait should support predicate push-down, so that predicates can applied to custom storage implementations.\r\n\r\nI suggest looking at Apache Spark's org.apache.spark.sql.connector.read.SupportsPushDownFilters trait for inspiration.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 23400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] [DataFusion] TableProvider trait should support predicate push-down",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324088/comment/17248615",
                    "id": "17248615",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ruan",
                        "name": "ruan",
                        "key": "ruan",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=ruan&avatarId=46203",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=ruan&avatarId=46203",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=ruan&avatarId=46203",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=ruan&avatarId=46203"
                        },
                        "displayName": "Ruan Pearce-Authers",
                        "active": true,
                        "timeZone": "Europe/London"
                    },
                    "body": "I'm currently taking a look at a workable implementation of this. So far, my design is:\r\n * TableProvider gets a new method to test whether a given filter expr can be pushed down to the provider implementation. Possible results are:\r\n ** No - the filter is not pushed down.\r\n ** Yes, exact - the filter is added to the provider scan, and the provider can guarantee that no result rows fail the filter predicate, so the original Filter node is removed\r\n ** Yes, inexact - the filter is added to the provider scan, but the provider has only used this as a guideline to minimise retrieved data (i.e. some tuples in the result set may still not meet the filter criteria), so the original Filter node is preserved\r\n * LogicalPlan::TableScan gets an optional vec of filter expressions\r\n * The filter pushdown pass is updated to use this new TableProvider method when processing TableScan nodes, removing filters with exact support from the plan entirely and rewriting the TableScan nodes to include both exact and inexact filters for later creation of execution plans\r\n\r\nIf anyone stumbles across this and has any massive concerns with this implementation, or suggestions for improvements, let me know! Otherwise, I'll put up a PR once I have something functional.\r\n\r\nEdit: One major outstanding issue with this design is that currently, it would only handle TableSource::FromProvider.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ruan",
                        "name": "ruan",
                        "key": "ruan",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=ruan&avatarId=46203",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=ruan&avatarId=46203",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=ruan&avatarId=46203",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=ruan&avatarId=46203"
                        },
                        "displayName": "Ruan Pearce-Authers",
                        "active": true,
                        "timeZone": "Europe/London"
                    },
                    "created": "2020-12-13T16:45:21.265+0000",
                    "updated": "2020-12-13T16:57:42.336+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13324088/comment/17252276",
                    "id": "17252276",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 8917\n[https://github.com/apache/arrow/pull/8917]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-12-19T21:38:33.257+0000",
                    "updated": "2020-12-19T21:38:33.257+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z0i0a8:",
        "customfield_12314139": null
    }
}