{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13305783",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305783",
    "key": "ARROW-8853",
    "fields": {
        "parent": {
            "id": "13195735",
            "key": "ARROW-3690",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13195735",
            "fields": {
                "summary": "[Rust] Add Rust to the format integration testing",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                    "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                    "name": "Resolved",
                    "id": "5",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                    "id": "2",
                    "description": "A new feature of the product, which has yet to be developed.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                    "name": "New Feature",
                    "subtask": false,
                    "avatarId": 21141
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=carols10cents",
            "name": "carols10cents",
            "key": "carols10cents",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=carols10cents&avatarId=44235",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=carols10cents&avatarId=44235",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=carols10cents&avatarId=44235",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=carols10cents&avatarId=44235"
            },
            "displayName": "Carol Nichols",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "aggregateprogress": {
            "progress": 16200,
            "total": 16200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 16200,
            "total": 16200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8853/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 27,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305783/worklog/510375",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "carols10cents opened a new pull request #8641:\nURL: https://github.com/apache/arrow/pull/8641\n\n\n   There are some parts of the tests that should probably be part of the `arrow-flight` crate instead, but that can be done in a future PR. Everything here is in the integration tests.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-11T18:26:02.529+0000",
                    "updated": "2020-11-11T18:26:02.529+0000",
                    "started": "2020-11-11T18:26:02.529+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "510375",
                    "issueId": "13305783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305783/worklog/510377",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8641:\nURL: https://github.com/apache/arrow/pull/8641#issuecomment-725588664\n\n\n   https://issues.apache.org/jira/browse/ARROW-8853\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-11T18:31:59.371+0000",
                    "updated": "2020-11-11T18:31:59.371+0000",
                    "started": "2020-11-11T18:31:59.370+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "510377",
                    "issueId": "13305783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305783/worklog/510396",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #8641:\nURL: https://github.com/apache/arrow/pull/8641#discussion_r521574538\n\n\n\n##########\nFile path: rust/integration-testing/src/bin/flight-test-integration-client.rs\n##########\n@@ -0,0 +1,377 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+use arrow_integration_testing::{\n+    read_json_file, ArrowFile, AUTH_PASSWORD, AUTH_USERNAME,\n+};\n+\n+use arrow::datatypes::SchemaRef;\n+use arrow::record_batch::RecordBatch;\n+\n+use arrow_flight::flight_service_client::FlightServiceClient;\n+use arrow_flight::{\n+    flight_descriptor::DescriptorType, BasicAuth, FlightData, HandshakeRequest, Location,\n+    Ticket,\n+};\n+use arrow_flight::{utils::flight_data_to_arrow_batch, FlightDescriptor};\n+\n+use clap::{App, Arg};\n+use futures::{channel::mpsc, sink::SinkExt, StreamExt};\n+use prost::Message;\n+use tonic::{metadata::MetadataValue, Request, Status};\n+\n+use std::sync::Arc;\n+\n+type Error = Box<dyn std::error::Error + Send + Sync + 'static>;\n+type Result<T = (), E = Error> = std::result::Result<T, E>;\n+\n+type Client = FlightServiceClient<tonic::transport::Channel>;\n+\n+#[tokio::main]\n+async fn main() -> Result {\n+    let matches = App::new(\"rust flight-test-integration-client\")\n+        .arg(Arg::with_name(\"host\").long(\"host\").takes_value(true))\n+        .arg(Arg::with_name(\"port\").long(\"port\").takes_value(true))\n+        .arg(Arg::with_name(\"path\").long(\"path\").takes_value(true))\n+        .arg(\n+            Arg::with_name(\"scenario\")\n+                .long(\"scenario\")\n+                .takes_value(true),\n+        )\n+        .get_matches();\n+\n+    let host = matches.value_of(\"host\").expect(\"Host is required\");\n+    let port = matches.value_of(\"port\").expect(\"Port is required\");\n+\n+    match matches.value_of(\"scenario\") {\n+        Some(\"middleware\") => middleware_scenario(host, port).await?,\n+        Some(\"auth:basic_proto\") => auth_basic_proto_scenario(host, port).await?,\n+        Some(scenario_name) => unimplemented!(\"Scenario not found: {}\", scenario_name),\n+        None => {\n+            let path = matches\n+                .value_of(\"path\")\n+                .expect(\"Path is required if scenario is not specified\");\n+            integration_test_scenario(host, port, path).await?;\n+        }\n+    }\n+\n+    Ok(())\n+}\n+\n+async fn middleware_scenario(host: &str, port: &str) -> Result {\n+    let url = format!(\"http://{}:{}\", host, port);\n+    let conn = tonic::transport::Endpoint::new(url)?.connect().await?;\n+    let mut client = FlightServiceClient::with_interceptor(conn, middleware_interceptor);\n+\n+    let mut descriptor = FlightDescriptor::default();\n+    descriptor.set_type(DescriptorType::Cmd);\n+    descriptor.cmd = b\"\".to_vec();\n+\n+    // This call is expected to fail.\n+    let resp = client\n+        .get_flight_info(Request::new(descriptor.clone()))\n+        .await;\n+    match resp {\n+        Ok(_) => return Err(Box::new(Status::internal(\"Expected call to fail\"))),\n+        Err(e) => {\n+            let headers = e.metadata();\n+            let middleware_header = headers.get(\"x-middleware\");\n+            let value = middleware_header.map(|v| v.to_str().unwrap()).unwrap_or(\"\");\n+\n+            if value != \"expected value\" {\n+                let msg = format!(\n+                    \"Expected to receive header 'x-middleware: expected value', \\\n+                    but instead got: '{}'\",\n+                    value\n+                );\n+                return Err(Box::new(Status::internal(msg)));\n+            }\n+\n+            eprintln!(\"Headers received successfully on failing call.\");\n+        }\n+    }\n+\n+    // This call should succeed\n+    descriptor.cmd = b\"success\".to_vec();\n+    let resp = client.get_flight_info(Request::new(descriptor)).await?;\n+\n+    let headers = resp.metadata();\n+    let middleware_header = headers.get(\"x-middleware\");\n+    let value = middleware_header.map(|v| v.to_str().unwrap()).unwrap_or(\"\");\n+\n+    if value != \"expected value\" {\n+        let msg = format!(\n+            \"Expected to receive header 'x-middleware: expected value', \\\n+            but instead got: '{}'\",\n+            value\n+        );\n+        return Err(Box::new(Status::internal(msg)));\n+    }\n+\n+    eprintln!(\"Headers received successfully on passing call.\");\n+\n+    Ok(())\n+}\n+\n+fn middleware_interceptor(mut req: Request<()>) -> Result<Request<()>, Status> {\n+    let metadata = req.metadata_mut();\n+    metadata.insert(\"x-middleware\", \"expected value\".parse().unwrap());\n+    Ok(req)\n+}\n+\n+async fn auth_basic_proto_scenario(host: &str, port: &str) -> Result {\n+    let url = format!(\"http://{}:{}\", host, port);\n+    let mut client = FlightServiceClient::connect(url).await?;\n+\n+    let action = arrow_flight::Action::default();\n+\n+    let resp = client.do_action(Request::new(action.clone())).await;\n+    // This client is unauthenticated and should fail.\n+    match resp {\n+        Err(e) => {\n+            if e.code() != tonic::Code::Unauthenticated {\n+                return Err(Box::new(Status::internal(format!(\n+                    \"Expected UNAUTHENTICATED but got {:?}\",\n+                    e\n+                ))));\n+            }\n+        }\n+        Ok(other) => {\n+            return Err(Box::new(Status::internal(format!(\n+                \"Expected UNAUTHENTICATED but got {:?}\",\n+                other\n+            ))));\n+        }\n+    }\n+\n+    let token = authenticate(&mut client, AUTH_USERNAME, AUTH_PASSWORD)\n+        .await\n+        .expect(\"must respond successfully from handshake\");\n+\n+    let mut request = Request::new(action);\n+    let metadata = request.metadata_mut();\n+    metadata.insert_bin(\n+        \"auth-token-bin\",\n+        MetadataValue::from_bytes(token.as_bytes()),\n+    );\n+\n+    let resp = client.do_action(request).await?;\n+    let mut resp = resp.into_inner();\n+\n+    let r = resp\n+        .next()\n+        .await\n+        .expect(\"No response received\")\n+        .expect(\"Invalid response received\");\n+\n+    let body = String::from_utf8(r.body).unwrap();\n+    assert_eq!(body, AUTH_USERNAME);\n+\n+    Ok(())\n+}\n+\n+// TODO: should this be extended, abstracted, and moved out of test code and into production code?\n\nReview comment:\n       my intuition says no, as I'm assuming that there'd be different ways of implementing authentication.\r\n   I have however not used Flight, so if the basic auth scenario is always this, we could move this into `arrow-flight`.\n\n##########\nFile path: rust/integration-testing/src/bin/flight-test-integration-server.rs\n##########\n@@ -0,0 +1,634 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+use std::collections::HashMap;\n+use std::convert::TryFrom;\n+use std::net::SocketAddr;\n+use std::pin::Pin;\n+use std::sync::Arc;\n+\n+use clap::{App, Arg};\n+use futures::{channel::mpsc, sink::SinkExt, Stream, StreamExt};\n+use prost::Message;\n+use tokio::net::TcpListener;\n+use tokio::sync::Mutex;\n+use tonic::transport::Server;\n+use tonic::{metadata::MetadataMap, Request, Response, Status, Streaming};\n+\n+use arrow::{datatypes::Schema, record_batch::RecordBatch};\n+use arrow_flight::{\n+    flight_descriptor::DescriptorType, flight_service_server::FlightService,\n+    flight_service_server::FlightServiceServer, utils::flight_data_to_arrow_batch,\n+    Action, ActionType, BasicAuth, Criteria, Empty, FlightData, FlightDescriptor,\n+    FlightEndpoint, FlightInfo, HandshakeRequest, HandshakeResponse, Location, PutResult,\n+    SchemaResult, Ticket,\n+};\n+\n+use arrow_integration_testing::{AUTH_PASSWORD, AUTH_USERNAME};\n+\n+type TonicStream<T> = Pin<Box<dyn Stream<Item = T> + Send + Sync + 'static>>;\n+\n+#[derive(Debug, Clone)]\n+struct IntegrationDataset {\n+    schema: Schema,\n+    chunks: Vec<RecordBatch>,\n+}\n+\n+#[derive(Clone, Default)]\n+pub struct FlightServiceImpl {\n+    server_location: String,\n+    uploaded_chunks: Arc<Mutex<HashMap<String, IntegrationDataset>>>,\n+}\n+\n+#[tonic::async_trait]\n+impl FlightService for FlightServiceImpl {\n+    type HandshakeStream = TonicStream<Result<HandshakeResponse, Status>>;\n+    type ListFlightsStream = TonicStream<Result<FlightInfo, Status>>;\n+    type DoGetStream = TonicStream<Result<FlightData, Status>>;\n+    type DoPutStream = TonicStream<Result<PutResult, Status>>;\n+    type DoActionStream = TonicStream<Result<arrow_flight::Result, Status>>;\n+    type ListActionsStream = TonicStream<Result<ActionType, Status>>;\n+    type DoExchangeStream = TonicStream<Result<FlightData, Status>>;\n+\n+    async fn get_schema(\n+        &self,\n+        _request: Request<FlightDescriptor>,\n+    ) -> Result<Response<SchemaResult>, Status> {\n+        Err(Status::unimplemented(\"Not yet implemented\"))\n\nReview comment:\n       Are these NYI service methods due to them not being included in the integration testing?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-11T19:06:54.365+0000",
                    "updated": "2020-11-11T19:06:54.365+0000",
                    "started": "2020-11-11T19:06:54.365+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "510396",
                    "issueId": "13305783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305783/worklog/510434",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "carols10cents commented on a change in pull request #8641:\nURL: https://github.com/apache/arrow/pull/8641#discussion_r521618201\n\n\n\n##########\nFile path: rust/integration-testing/src/bin/flight-test-integration-client.rs\n##########\n@@ -0,0 +1,377 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+use arrow_integration_testing::{\n+    read_json_file, ArrowFile, AUTH_PASSWORD, AUTH_USERNAME,\n+};\n+\n+use arrow::datatypes::SchemaRef;\n+use arrow::record_batch::RecordBatch;\n+\n+use arrow_flight::flight_service_client::FlightServiceClient;\n+use arrow_flight::{\n+    flight_descriptor::DescriptorType, BasicAuth, FlightData, HandshakeRequest, Location,\n+    Ticket,\n+};\n+use arrow_flight::{utils::flight_data_to_arrow_batch, FlightDescriptor};\n+\n+use clap::{App, Arg};\n+use futures::{channel::mpsc, sink::SinkExt, StreamExt};\n+use prost::Message;\n+use tonic::{metadata::MetadataValue, Request, Status};\n+\n+use std::sync::Arc;\n+\n+type Error = Box<dyn std::error::Error + Send + Sync + 'static>;\n+type Result<T = (), E = Error> = std::result::Result<T, E>;\n+\n+type Client = FlightServiceClient<tonic::transport::Channel>;\n+\n+#[tokio::main]\n+async fn main() -> Result {\n+    let matches = App::new(\"rust flight-test-integration-client\")\n+        .arg(Arg::with_name(\"host\").long(\"host\").takes_value(true))\n+        .arg(Arg::with_name(\"port\").long(\"port\").takes_value(true))\n+        .arg(Arg::with_name(\"path\").long(\"path\").takes_value(true))\n+        .arg(\n+            Arg::with_name(\"scenario\")\n+                .long(\"scenario\")\n+                .takes_value(true),\n+        )\n+        .get_matches();\n+\n+    let host = matches.value_of(\"host\").expect(\"Host is required\");\n+    let port = matches.value_of(\"port\").expect(\"Port is required\");\n+\n+    match matches.value_of(\"scenario\") {\n+        Some(\"middleware\") => middleware_scenario(host, port).await?,\n+        Some(\"auth:basic_proto\") => auth_basic_proto_scenario(host, port).await?,\n+        Some(scenario_name) => unimplemented!(\"Scenario not found: {}\", scenario_name),\n+        None => {\n+            let path = matches\n+                .value_of(\"path\")\n+                .expect(\"Path is required if scenario is not specified\");\n+            integration_test_scenario(host, port, path).await?;\n+        }\n+    }\n+\n+    Ok(())\n+}\n+\n+async fn middleware_scenario(host: &str, port: &str) -> Result {\n+    let url = format!(\"http://{}:{}\", host, port);\n+    let conn = tonic::transport::Endpoint::new(url)?.connect().await?;\n+    let mut client = FlightServiceClient::with_interceptor(conn, middleware_interceptor);\n+\n+    let mut descriptor = FlightDescriptor::default();\n+    descriptor.set_type(DescriptorType::Cmd);\n+    descriptor.cmd = b\"\".to_vec();\n+\n+    // This call is expected to fail.\n+    let resp = client\n+        .get_flight_info(Request::new(descriptor.clone()))\n+        .await;\n+    match resp {\n+        Ok(_) => return Err(Box::new(Status::internal(\"Expected call to fail\"))),\n+        Err(e) => {\n+            let headers = e.metadata();\n+            let middleware_header = headers.get(\"x-middleware\");\n+            let value = middleware_header.map(|v| v.to_str().unwrap()).unwrap_or(\"\");\n+\n+            if value != \"expected value\" {\n+                let msg = format!(\n+                    \"Expected to receive header 'x-middleware: expected value', \\\n+                    but instead got: '{}'\",\n+                    value\n+                );\n+                return Err(Box::new(Status::internal(msg)));\n+            }\n+\n+            eprintln!(\"Headers received successfully on failing call.\");\n+        }\n+    }\n+\n+    // This call should succeed\n+    descriptor.cmd = b\"success\".to_vec();\n+    let resp = client.get_flight_info(Request::new(descriptor)).await?;\n+\n+    let headers = resp.metadata();\n+    let middleware_header = headers.get(\"x-middleware\");\n+    let value = middleware_header.map(|v| v.to_str().unwrap()).unwrap_or(\"\");\n+\n+    if value != \"expected value\" {\n+        let msg = format!(\n+            \"Expected to receive header 'x-middleware: expected value', \\\n+            but instead got: '{}'\",\n+            value\n+        );\n+        return Err(Box::new(Status::internal(msg)));\n+    }\n+\n+    eprintln!(\"Headers received successfully on passing call.\");\n+\n+    Ok(())\n+}\n+\n+fn middleware_interceptor(mut req: Request<()>) -> Result<Request<()>, Status> {\n+    let metadata = req.metadata_mut();\n+    metadata.insert(\"x-middleware\", \"expected value\".parse().unwrap());\n+    Ok(req)\n+}\n+\n+async fn auth_basic_proto_scenario(host: &str, port: &str) -> Result {\n+    let url = format!(\"http://{}:{}\", host, port);\n+    let mut client = FlightServiceClient::connect(url).await?;\n+\n+    let action = arrow_flight::Action::default();\n+\n+    let resp = client.do_action(Request::new(action.clone())).await;\n+    // This client is unauthenticated and should fail.\n+    match resp {\n+        Err(e) => {\n+            if e.code() != tonic::Code::Unauthenticated {\n+                return Err(Box::new(Status::internal(format!(\n+                    \"Expected UNAUTHENTICATED but got {:?}\",\n+                    e\n+                ))));\n+            }\n+        }\n+        Ok(other) => {\n+            return Err(Box::new(Status::internal(format!(\n+                \"Expected UNAUTHENTICATED but got {:?}\",\n+                other\n+            ))));\n+        }\n+    }\n+\n+    let token = authenticate(&mut client, AUTH_USERNAME, AUTH_PASSWORD)\n+        .await\n+        .expect(\"must respond successfully from handshake\");\n+\n+    let mut request = Request::new(action);\n+    let metadata = request.metadata_mut();\n+    metadata.insert_bin(\n+        \"auth-token-bin\",\n+        MetadataValue::from_bytes(token.as_bytes()),\n+    );\n+\n+    let resp = client.do_action(request).await?;\n+    let mut resp = resp.into_inner();\n+\n+    let r = resp\n+        .next()\n+        .await\n+        .expect(\"No response received\")\n+        .expect(\"Invalid response received\");\n+\n+    let body = String::from_utf8(r.body).unwrap();\n+    assert_eq!(body, AUTH_USERNAME);\n+\n+    Ok(())\n+}\n+\n+// TODO: should this be extended, abstracted, and moved out of test code and into production code?\n\nReview comment:\n       The C++ Flight client provides [this `Authenticate` function](https://github.com/apache/arrow/blob/cf243d4bfc496dedb21a9c155eaba10664266923/cpp/src/arrow/flight/client.cc#L977-L994) and the ability to specify a [`ClientAuthHandler`](https://github.com/apache/arrow/blob/dbeab70863c4d0cd3da800f18f7e474da624bb5f/cpp/src/arrow/flight/client_auth.h#L45-L59), but I'm not sure if that's the abstraction desired in Rust \ud83e\udd37\u200d\u2640\ufe0f \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-11T20:26:24.656+0000",
                    "updated": "2020-11-11T20:26:24.656+0000",
                    "started": "2020-11-11T20:26:24.656+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "510434",
                    "issueId": "13305783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305783/worklog/510435",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "carols10cents commented on a change in pull request #8641:\nURL: https://github.com/apache/arrow/pull/8641#discussion_r521618644\n\n\n\n##########\nFile path: rust/integration-testing/src/bin/flight-test-integration-server.rs\n##########\n@@ -0,0 +1,634 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+use std::collections::HashMap;\n+use std::convert::TryFrom;\n+use std::net::SocketAddr;\n+use std::pin::Pin;\n+use std::sync::Arc;\n+\n+use clap::{App, Arg};\n+use futures::{channel::mpsc, sink::SinkExt, Stream, StreamExt};\n+use prost::Message;\n+use tokio::net::TcpListener;\n+use tokio::sync::Mutex;\n+use tonic::transport::Server;\n+use tonic::{metadata::MetadataMap, Request, Response, Status, Streaming};\n+\n+use arrow::{datatypes::Schema, record_batch::RecordBatch};\n+use arrow_flight::{\n+    flight_descriptor::DescriptorType, flight_service_server::FlightService,\n+    flight_service_server::FlightServiceServer, utils::flight_data_to_arrow_batch,\n+    Action, ActionType, BasicAuth, Criteria, Empty, FlightData, FlightDescriptor,\n+    FlightEndpoint, FlightInfo, HandshakeRequest, HandshakeResponse, Location, PutResult,\n+    SchemaResult, Ticket,\n+};\n+\n+use arrow_integration_testing::{AUTH_PASSWORD, AUTH_USERNAME};\n+\n+type TonicStream<T> = Pin<Box<dyn Stream<Item = T> + Send + Sync + 'static>>;\n+\n+#[derive(Debug, Clone)]\n+struct IntegrationDataset {\n+    schema: Schema,\n+    chunks: Vec<RecordBatch>,\n+}\n+\n+#[derive(Clone, Default)]\n+pub struct FlightServiceImpl {\n+    server_location: String,\n+    uploaded_chunks: Arc<Mutex<HashMap<String, IntegrationDataset>>>,\n+}\n+\n+#[tonic::async_trait]\n+impl FlightService for FlightServiceImpl {\n+    type HandshakeStream = TonicStream<Result<HandshakeResponse, Status>>;\n+    type ListFlightsStream = TonicStream<Result<FlightInfo, Status>>;\n+    type DoGetStream = TonicStream<Result<FlightData, Status>>;\n+    type DoPutStream = TonicStream<Result<PutResult, Status>>;\n+    type DoActionStream = TonicStream<Result<arrow_flight::Result, Status>>;\n+    type ListActionsStream = TonicStream<Result<ActionType, Status>>;\n+    type DoExchangeStream = TonicStream<Result<FlightData, Status>>;\n+\n+    async fn get_schema(\n+        &self,\n+        _request: Request<FlightDescriptor>,\n+    ) -> Result<Response<SchemaResult>, Status> {\n+        Err(Status::unimplemented(\"Not yet implemented\"))\n\nReview comment:\n       Yes, there's nothing I can see that calls these methods in the integration tests.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-11T20:27:17.941+0000",
                    "updated": "2020-11-11T20:27:17.941+0000",
                    "started": "2020-11-11T20:27:17.940+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "510435",
                    "issueId": "13305783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305783/worklog/510440",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "carols10cents commented on pull request #8641:\nURL: https://github.com/apache/arrow/pull/8641#issuecomment-725647689\n\n\n   The archery unit tests [are failing with this error](https://github.com/apache/arrow/pull/8641/checks?check_run_id=1386664293#step:7:19):\r\n   \r\n   ```\r\n   E   ImportError: cannot import name 'HTTPHeaderDict'\r\n   ```\r\n   \r\n   [In the step before the unit tests are run, there's this](https://github.com/apache/arrow/pull/8641/checks?check_run_id=1386664293#step:6:106):\r\n   \r\n   ```\r\n   ERROR: After October 2020 you may experience errors when installing or updating packages. This is because pip will change the way that it resolves dependency conflicts.\r\n   Successfully installed MarkupSafe-1.1.1 archery attrs-20.3.0 certifi-2020.11.8 cffi-1.14.3 chardet-3.0.4 click-7.1.2 cryptography-3.2.1 defusedxml-0.6.0 deprecated-1.2.10 gitdb-4.0.5 gitpython-3.1.11 idna-2.10 importlib-metadata-2.0.0 iniconfig-1.1.1 jinja2-2.11.2 jira-2.0.0 numpy-1.18.5 oauthlib-3.1.0 packaging-20.4 pandas-0.25.3 pathlib2-2.3.5 pbr-5.5.1 pluggy-0.13.1 py-1.9.0 pycparser-2.20 pygithub-1.53 pyjwt-1.7.1 pyparsing-2.4.7 pytest-6.1.2 python-dateutil-2.8.1 python-dotenv-0.15.0 pytz-2020.4 requests-2.24.0 requests-oauthlib-1.3.0 requests-toolbelt-0.9.1 responses-0.12.0 ruamel.yaml-0.16.12 ruamel.yaml.clib-0.2.2 semver-2.13.0 six-1.15.0 smmap-3.0.4 toml-0.10.2 toolz-0.11.1 urllib3-1.26.0 wrapt-1.12.1 zipp-1.2.0\r\n   \r\n   We recommend you use --use-feature=2020-resolver to test your packages with the new resolver before it becomes the default.\r\n   \r\n   requests 2.24.0 requires urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1, but you'll have urllib3 1.26.0 which is incompatible.\r\n   ```\r\n   \r\n   I'm not very familiar with Python but given it's November this seems likely...? I'm not sure the correct way to fix this, and I don't see any open PRs about it from a quick skim?\r\n   \r\n   The [other failing test job says it's out of disk space](https://github.com/apache/arrow/pull/8641/checks?check_run_id=1386664394#step:8:1499), is there anything I can do about that?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-11T20:35:29.748+0000",
                    "updated": "2020-11-11T20:35:29.748+0000",
                    "started": "2020-11-11T20:35:29.747+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "510440",
                    "issueId": "13305783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305783/worklog/511561",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "carols10cents commented on pull request #8641:\nURL: https://github.com/apache/arrow/pull/8641#issuecomment-727048909\n\n\n   Ok, so, now the integration test job got cancelled after 360 min, and suspiciously it appears to be cancelled [during the Flight tests](https://github.com/apache/arrow/pull/8641/checks?check_run_id=1396352052#step:8:8481) after C++ -> C++ and C++ -> Java, right when I would expect C++ -> Rust to be, sooooo it's possible that it's my fault somehow. I will investigate more on Monday.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-13T21:41:39.671+0000",
                    "updated": "2020-11-13T21:41:39.671+0000",
                    "started": "2020-11-13T21:41:39.671+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "511561",
                    "issueId": "13305783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305783/worklog/511731",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #8641:\nURL: https://github.com/apache/arrow/pull/8641#discussion_r523413727\n\n\n\n##########\nFile path: rust/integration-testing/src/bin/flight-test-integration-client.rs\n##########\n@@ -0,0 +1,377 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+use arrow_integration_testing::{\n+    read_json_file, ArrowFile, AUTH_PASSWORD, AUTH_USERNAME,\n+};\n+\n+use arrow::datatypes::SchemaRef;\n+use arrow::record_batch::RecordBatch;\n+\n+use arrow_flight::flight_service_client::FlightServiceClient;\n+use arrow_flight::{\n+    flight_descriptor::DescriptorType, BasicAuth, FlightData, HandshakeRequest, Location,\n+    Ticket,\n+};\n+use arrow_flight::{utils::flight_data_to_arrow_batch, FlightDescriptor};\n+\n+use clap::{App, Arg};\n+use futures::{channel::mpsc, sink::SinkExt, StreamExt};\n+use prost::Message;\n+use tonic::{metadata::MetadataValue, Request, Status};\n+\n+use std::sync::Arc;\n+\n+type Error = Box<dyn std::error::Error + Send + Sync + 'static>;\n+type Result<T = (), E = Error> = std::result::Result<T, E>;\n+\n+type Client = FlightServiceClient<tonic::transport::Channel>;\n+\n+#[tokio::main]\n+async fn main() -> Result {\n+    let matches = App::new(\"rust flight-test-integration-client\")\n+        .arg(Arg::with_name(\"host\").long(\"host\").takes_value(true))\n+        .arg(Arg::with_name(\"port\").long(\"port\").takes_value(true))\n+        .arg(Arg::with_name(\"path\").long(\"path\").takes_value(true))\n+        .arg(\n+            Arg::with_name(\"scenario\")\n+                .long(\"scenario\")\n+                .takes_value(true),\n+        )\n+        .get_matches();\n+\n+    let host = matches.value_of(\"host\").expect(\"Host is required\");\n+    let port = matches.value_of(\"port\").expect(\"Port is required\");\n+\n+    match matches.value_of(\"scenario\") {\n+        Some(\"middleware\") => middleware_scenario(host, port).await?,\n+        Some(\"auth:basic_proto\") => auth_basic_proto_scenario(host, port).await?,\n+        Some(scenario_name) => unimplemented!(\"Scenario not found: {}\", scenario_name),\n+        None => {\n+            let path = matches\n+                .value_of(\"path\")\n+                .expect(\"Path is required if scenario is not specified\");\n+            integration_test_scenario(host, port, path).await?;\n+        }\n+    }\n+\n+    Ok(())\n+}\n+\n+async fn middleware_scenario(host: &str, port: &str) -> Result {\n+    let url = format!(\"http://{}:{}\", host, port);\n+    let conn = tonic::transport::Endpoint::new(url)?.connect().await?;\n+    let mut client = FlightServiceClient::with_interceptor(conn, middleware_interceptor);\n+\n+    let mut descriptor = FlightDescriptor::default();\n+    descriptor.set_type(DescriptorType::Cmd);\n+    descriptor.cmd = b\"\".to_vec();\n+\n+    // This call is expected to fail.\n+    let resp = client\n+        .get_flight_info(Request::new(descriptor.clone()))\n+        .await;\n+    match resp {\n+        Ok(_) => return Err(Box::new(Status::internal(\"Expected call to fail\"))),\n+        Err(e) => {\n+            let headers = e.metadata();\n+            let middleware_header = headers.get(\"x-middleware\");\n+            let value = middleware_header.map(|v| v.to_str().unwrap()).unwrap_or(\"\");\n+\n+            if value != \"expected value\" {\n+                let msg = format!(\n+                    \"Expected to receive header 'x-middleware: expected value', \\\n+                    but instead got: '{}'\",\n+                    value\n+                );\n+                return Err(Box::new(Status::internal(msg)));\n+            }\n+\n+            eprintln!(\"Headers received successfully on failing call.\");\n+        }\n+    }\n+\n+    // This call should succeed\n+    descriptor.cmd = b\"success\".to_vec();\n+    let resp = client.get_flight_info(Request::new(descriptor)).await?;\n+\n+    let headers = resp.metadata();\n+    let middleware_header = headers.get(\"x-middleware\");\n+    let value = middleware_header.map(|v| v.to_str().unwrap()).unwrap_or(\"\");\n+\n+    if value != \"expected value\" {\n+        let msg = format!(\n+            \"Expected to receive header 'x-middleware: expected value', \\\n+            but instead got: '{}'\",\n+            value\n+        );\n+        return Err(Box::new(Status::internal(msg)));\n+    }\n+\n+    eprintln!(\"Headers received successfully on passing call.\");\n+\n+    Ok(())\n+}\n+\n+fn middleware_interceptor(mut req: Request<()>) -> Result<Request<()>, Status> {\n+    let metadata = req.metadata_mut();\n+    metadata.insert(\"x-middleware\", \"expected value\".parse().unwrap());\n+    Ok(req)\n+}\n+\n+async fn auth_basic_proto_scenario(host: &str, port: &str) -> Result {\n+    let url = format!(\"http://{}:{}\", host, port);\n+    let mut client = FlightServiceClient::connect(url).await?;\n+\n+    let action = arrow_flight::Action::default();\n+\n+    let resp = client.do_action(Request::new(action.clone())).await;\n+    // This client is unauthenticated and should fail.\n+    match resp {\n+        Err(e) => {\n+            if e.code() != tonic::Code::Unauthenticated {\n+                return Err(Box::new(Status::internal(format!(\n+                    \"Expected UNAUTHENTICATED but got {:?}\",\n+                    e\n+                ))));\n+            }\n+        }\n+        Ok(other) => {\n+            return Err(Box::new(Status::internal(format!(\n+                \"Expected UNAUTHENTICATED but got {:?}\",\n+                other\n+            ))));\n+        }\n+    }\n+\n+    let token = authenticate(&mut client, AUTH_USERNAME, AUTH_PASSWORD)\n+        .await\n+        .expect(\"must respond successfully from handshake\");\n+\n+    let mut request = Request::new(action);\n+    let metadata = request.metadata_mut();\n+    metadata.insert_bin(\n+        \"auth-token-bin\",\n+        MetadataValue::from_bytes(token.as_bytes()),\n+    );\n+\n+    let resp = client.do_action(request).await?;\n+    let mut resp = resp.into_inner();\n+\n+    let r = resp\n+        .next()\n+        .await\n+        .expect(\"No response received\")\n+        .expect(\"Invalid response received\");\n+\n+    let body = String::from_utf8(r.body).unwrap();\n+    assert_eq!(body, AUTH_USERNAME);\n+\n+    Ok(())\n+}\n+\n+// TODO: should this be extended, abstracted, and moved out of test code and into production code?\n\nReview comment:\n       I think we can always add it later to the core Rust library -- for now, having code in the example that does the work that people can use / follow seems pretty good to me\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-14T12:34:44.153+0000",
                    "updated": "2020-11-14T12:34:44.153+0000",
                    "started": "2020-11-14T12:34:44.153+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "511731",
                    "issueId": "13305783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305783/worklog/511732",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #8641:\nURL: https://github.com/apache/arrow/pull/8641#issuecomment-727201387\n\n\n   Once the integration tests are passing, I think this PR is good to merge\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-14T12:35:37.324+0000",
                    "updated": "2020-11-14T12:35:37.324+0000",
                    "started": "2020-11-14T12:35:37.324+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "511732",
                    "issueId": "13305783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305783/worklog/523188",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "carols10cents commented on pull request #8641:\nURL: https://github.com/apache/arrow/pull/8641#issuecomment-743196560\n\n\n   I've decided to stop wasting CI time on this because it's not nearly ready :) Will reopen a new PR when it is.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-11T13:37:12.100+0000",
                    "updated": "2020-12-11T13:37:12.100+0000",
                    "started": "2020-12-11T13:37:12.100+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "523188",
                    "issueId": "13305783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305783/worklog/523189",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "carols10cents closed pull request #8641:\nURL: https://github.com/apache/arrow/pull/8641\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-11T13:37:15.099+0000",
                    "updated": "2020-12-11T13:37:15.099+0000",
                    "started": "2020-12-11T13:37:15.099+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "523189",
                    "issueId": "13305783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305783/worklog/523235",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #8641:\nURL: https://github.com/apache/arrow/pull/8641#issuecomment-743276173\n\n\n   Just to say that I really appreciate that you are working on this. Thank you so much  \u2764\ufe0f \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-11T15:57:51.842+0000",
                    "updated": "2020-12-11T15:57:51.842+0000",
                    "started": "2020-12-11T15:57:51.841+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "523235",
                    "issueId": "13305783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305783/worklog/529593",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "carols10cents opened a new pull request #9049:\nURL: https://github.com/apache/arrow/pull/9049\n\n\n   This PR has a few refactorings and then the main commit contains a new Flight integration test client and server \ud83c\udf89 \r\n   \r\n   The middleware scenario tests are currently skipped because they will fail until `tonic` can be updated to a version containing [a fix having to do with trailers](https://github.com/hyperium/tonic/pull/510); this is tracked in [ARROW-10961](https://issues.apache.org/jira/browse/ARROW-10961).\r\n   \r\n   Some Rust <-> Java integration tests will fail until [this PR is merged](https://github.com/apache/arrow/pull/8963); I'm happy to rebase once that goes in, but I wanted to get code review started on this. Thank you!!\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-30T18:40:06.797+0000",
                    "updated": "2020-12-30T18:40:06.797+0000",
                    "started": "2020-12-30T18:40:06.797+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529593",
                    "issueId": "13305783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305783/worklog/529600",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9049:\nURL: https://github.com/apache/arrow/pull/9049#issuecomment-752727271\n\n\n   https://issues.apache.org/jira/browse/ARROW-8853\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-30T19:09:35.663+0000",
                    "updated": "2020-12-30T19:09:35.663+0000",
                    "started": "2020-12-30T19:09:35.663+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529600",
                    "issueId": "13305783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305783/worklog/529800",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #9049:\nURL: https://github.com/apache/arrow/pull/9049#issuecomment-752956280\n\n\n   The full set of Rust CI tests did not run on this PR :(\r\n   \r\n   Can you please rebase this PR against [apache/master](https://github.com/apache/arrow) to pick up the changes in https://github.com/apache/arrow/pull/9056 so that they do? \r\n   \r\n   I apologize for the inconvenience. \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-31T13:17:38.169+0000",
                    "updated": "2020-12-31T13:17:38.169+0000",
                    "started": "2020-12-31T13:17:38.169+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529800",
                    "issueId": "13305783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305783/worklog/529825",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "carols10cents commented on pull request #9049:\nURL: https://github.com/apache/arrow/pull/9049#issuecomment-752975587\n\n\n   No problem at all, rebased! Thank you for the review \u2764\ufe0f \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-31T14:36:11.354+0000",
                    "updated": "2020-12-31T14:36:11.354+0000",
                    "started": "2020-12-31T14:36:11.354+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529825",
                    "issueId": "13305783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305783/worklog/529826",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on pull request #9049:\nURL: https://github.com/apache/arrow/pull/9049#issuecomment-752979498\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9049?src=pr&el=h1) Report\n   > Merging [#9049](https://codecov.io/gh/apache/arrow/pull/9049?src=pr&el=desc) (84d9b72) into [master](https://codecov.io/gh/apache/arrow/commit/dd5fe7095bb662236e27d3343eb82bc4375f93ef?el=desc) (dd5fe70) will **decrease** coverage by `0.77%`.\n   > The diff coverage is `0.39%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9049/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9049?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9049      +/-   ##\n   ==========================================\n   - Coverage   82.61%   81.84%   -0.78%     \n   ==========================================\n     Files         202      212      +10     \n     Lines       50052    50525     +473     \n   ==========================================\n     Hits        41350    41350              \n   - Misses       8702     9175     +473     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9049?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/arrow-flight/src/utils.rs](https://codecov.io/gh/apache/arrow/pull/9049/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy1mbGlnaHQvc3JjL3V0aWxzLnJz) | `0.00% <0.00%> (\u00f8)` | |\n   | [rust/datafusion/examples/flight\\_server.rs](https://codecov.io/gh/apache/arrow/pull/9049/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL2V4YW1wbGVzL2ZsaWdodF9zZXJ2ZXIucnM=) | `0.00% <0.00%> (\u00f8)` | |\n   | [...ion-testing/src/bin/arrow-json-integration-test.rs](https://codecov.io/gh/apache/arrow/pull/9049/diff?src=pr&el=tree#diff-cnVzdC9pbnRlZ3JhdGlvbi10ZXN0aW5nL3NyYy9iaW4vYXJyb3ctanNvbi1pbnRlZ3JhdGlvbi10ZXN0LnJz) | `0.00% <\u00f8> (\u00f8)` | |\n   | [...-testing/src/bin/flight-test-integration-client.rs](https://codecov.io/gh/apache/arrow/pull/9049/diff?src=pr&el=tree#diff-cnVzdC9pbnRlZ3JhdGlvbi10ZXN0aW5nL3NyYy9iaW4vZmxpZ2h0LXRlc3QtaW50ZWdyYXRpb24tY2xpZW50LnJz) | `0.00% <0.00%> (\u00f8)` | |\n   | [...-testing/src/bin/flight-test-integration-server.rs](https://codecov.io/gh/apache/arrow/pull/9049/diff?src=pr&el=tree#diff-cnVzdC9pbnRlZ3JhdGlvbi10ZXN0aW5nL3NyYy9iaW4vZmxpZ2h0LXRlc3QtaW50ZWdyYXRpb24tc2VydmVyLnJz) | `0.00% <0.00%> (\u00f8)` | |\n   | [...ng/src/flight\\_client\\_scenarios/auth\\_basic\\_proto.rs](https://codecov.io/gh/apache/arrow/pull/9049/diff?src=pr&el=tree#diff-cnVzdC9pbnRlZ3JhdGlvbi10ZXN0aW5nL3NyYy9mbGlnaHRfY2xpZW50X3NjZW5hcmlvcy9hdXRoX2Jhc2ljX3Byb3RvLnJz) | `0.00% <0.00%> (\u00f8)` | |\n   | [...ng/src/flight\\_client\\_scenarios/integration\\_test.rs](https://codecov.io/gh/apache/arrow/pull/9049/diff?src=pr&el=tree#diff-cnVzdC9pbnRlZ3JhdGlvbi10ZXN0aW5nL3NyYy9mbGlnaHRfY2xpZW50X3NjZW5hcmlvcy9pbnRlZ3JhdGlvbl90ZXN0LnJz) | `0.00% <0.00%> (\u00f8)` | |\n   | [...-testing/src/flight\\_client\\_scenarios/middleware.rs](https://codecov.io/gh/apache/arrow/pull/9049/diff?src=pr&el=tree#diff-cnVzdC9pbnRlZ3JhdGlvbi10ZXN0aW5nL3NyYy9mbGlnaHRfY2xpZW50X3NjZW5hcmlvcy9taWRkbGV3YXJlLnJz) | `0.00% <0.00%> (\u00f8)` | |\n   | [...integration-testing/src/flight\\_server\\_scenarios.rs](https://codecov.io/gh/apache/arrow/pull/9049/diff?src=pr&el=tree#diff-cnVzdC9pbnRlZ3JhdGlvbi10ZXN0aW5nL3NyYy9mbGlnaHRfc2VydmVyX3NjZW5hcmlvcy5ycw==) | `0.00% <0.00%> (\u00f8)` | |\n   | [...ng/src/flight\\_server\\_scenarios/auth\\_basic\\_proto.rs](https://codecov.io/gh/apache/arrow/pull/9049/diff?src=pr&el=tree#diff-cnVzdC9pbnRlZ3JhdGlvbi10ZXN0aW5nL3NyYy9mbGlnaHRfc2VydmVyX3NjZW5hcmlvcy9hdXRoX2Jhc2ljX3Byb3RvLnJz) | `0.00% <0.00%> (\u00f8)` | |\n   | ... and [18 more](https://codecov.io/gh/apache/arrow/pull/9049/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9049?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9049?src=pr&el=footer). Last update [dd5fe70...84d9b72](https://codecov.io/gh/apache/arrow/pull/9049?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-31T14:50:49.242+0000",
                    "updated": "2020-12-31T14:50:49.242+0000",
                    "started": "2020-12-31T14:50:49.242+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529826",
                    "issueId": "13305783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305783/worklog/532629",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #9049:\nURL: https://github.com/apache/arrow/pull/9049#issuecomment-756245179\n\n\n   @carols10cents this needs a rebase :)\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-07T17:03:50.870+0000",
                    "updated": "2021-01-07T17:03:50.870+0000",
                    "started": "2021-01-07T17:03:50.870+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "532629",
                    "issueId": "13305783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305783/worklog/532972",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #9049:\nURL: https://github.com/apache/arrow/pull/9049#issuecomment-756711339\n\n\n   @carols10cents  -- https://github.com/apache/arrow/pull/8963 was just merged - so hopefully after a rebase this PR will be ready too\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-08T11:40:30.981+0000",
                    "updated": "2021-01-08T11:40:30.981+0000",
                    "started": "2021-01-08T11:40:30.980+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "532972",
                    "issueId": "13305783"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305783/worklog/533261",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9049:\nURL: https://github.com/apache/arrow/pull/9049#issuecomment-752979498\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9049?src=pr&el=h1) Report\n   > Merging [#9049](https://codecov.io/gh/apache/arrow/pull/9049?src=pr&el=desc) (863420d) into [master](https://codecov.io/gh/apache/arrow/commit/a576cd71c08c3fec029d24092c407ece1775f5a6?el=desc) (a576cd7) will **decrease** coverage by `0.76%`.\n   > The diff coverage is `0.39%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9049/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9049?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9049      +/-   ##\n   ==========================================\n   - Coverage   82.57%   81.81%   -0.77%     \n   ==========================================\n     Files         204      214      +10     \n     Lines       50879    51352     +473     \n   ==========================================\n   - Hits        42014    42013       -1     \n   - Misses       8865     9339     +474     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9049?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/arrow-flight/src/utils.rs](https://codecov.io/gh/apache/arrow/pull/9049/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy1mbGlnaHQvc3JjL3V0aWxzLnJz) | `0.00% <0.00%> (\u00f8)` | |\n   | [rust/datafusion/examples/flight\\_server.rs](https://codecov.io/gh/apache/arrow/pull/9049/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL2V4YW1wbGVzL2ZsaWdodF9zZXJ2ZXIucnM=) | `0.00% <0.00%> (\u00f8)` | |\n   | [...ion-testing/src/bin/arrow-json-integration-test.rs](https://codecov.io/gh/apache/arrow/pull/9049/diff?src=pr&el=tree#diff-cnVzdC9pbnRlZ3JhdGlvbi10ZXN0aW5nL3NyYy9iaW4vYXJyb3ctanNvbi1pbnRlZ3JhdGlvbi10ZXN0LnJz) | `0.00% <\u00f8> (\u00f8)` | |\n   | [...-testing/src/bin/flight-test-integration-client.rs](https://codecov.io/gh/apache/arrow/pull/9049/diff?src=pr&el=tree#diff-cnVzdC9pbnRlZ3JhdGlvbi10ZXN0aW5nL3NyYy9iaW4vZmxpZ2h0LXRlc3QtaW50ZWdyYXRpb24tY2xpZW50LnJz) | `0.00% <0.00%> (\u00f8)` | |\n   | [...-testing/src/bin/flight-test-integration-server.rs](https://codecov.io/gh/apache/arrow/pull/9049/diff?src=pr&el=tree#diff-cnVzdC9pbnRlZ3JhdGlvbi10ZXN0aW5nL3NyYy9iaW4vZmxpZ2h0LXRlc3QtaW50ZWdyYXRpb24tc2VydmVyLnJz) | `0.00% <0.00%> (\u00f8)` | |\n   | [...ng/src/flight\\_client\\_scenarios/auth\\_basic\\_proto.rs](https://codecov.io/gh/apache/arrow/pull/9049/diff?src=pr&el=tree#diff-cnVzdC9pbnRlZ3JhdGlvbi10ZXN0aW5nL3NyYy9mbGlnaHRfY2xpZW50X3NjZW5hcmlvcy9hdXRoX2Jhc2ljX3Byb3RvLnJz) | `0.00% <0.00%> (\u00f8)` | |\n   | [...ng/src/flight\\_client\\_scenarios/integration\\_test.rs](https://codecov.io/gh/apache/arrow/pull/9049/diff?src=pr&el=tree#diff-cnVzdC9pbnRlZ3JhdGlvbi10ZXN0aW5nL3NyYy9mbGlnaHRfY2xpZW50X3NjZW5hcmlvcy9pbnRlZ3JhdGlvbl90ZXN0LnJz) | `0.00% <0.00%> (\u00f8)` | |\n   | [...-testing/src/flight\\_client\\_scenarios/middleware.rs](https://codecov.io/gh/apache/arrow/pull/9049/diff?src=pr&el=tree#diff-cnVzdC9pbnRlZ3JhdGlvbi10ZXN0aW5nL3NyYy9mbGlnaHRfY2xpZW50X3NjZW5hcmlvcy9taWRkbGV3YXJlLnJz) | `0.00% <0.00%> (\u00f8)` | |\n   | [...integration-testing/src/flight\\_server\\_scenarios.rs](https://codecov.io/gh/apache/arrow/pull/9049/diff?src=pr&el=tree#diff-cnVzdC9pbnRlZ3JhdGlvbi10ZXN0aW5nL3NyYy9mbGlnaHRfc2VydmVyX3NjZW5hcmlvcy5ycw==) | `0.00% <0.00%> (\u00f8)` | |\n   | [...ng/src/flight\\_server\\_scenarios/auth\\_basic\\_proto.rs](https://codecov.io/gh/apache/arrow/pull/9049/diff?src=pr&el=tree#diff-cnVzdC9pbnRlZ3JhdGlvbi10ZXN0aW5nL3NyYy9mbGlnaHRfc2VydmVyX3NjZW5hcmlvcy9hdXRoX2Jhc2ljX3Byb3RvLnJz) | `0.00% <0.00%> (\u00f8)` | |\n   | ... and [17 more](https://codecov.io/gh/apache/arrow/pull/9049/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9049?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9049?src=pr&el=footer). Last update [91a4ec9...863420d](https://codecov.io/gh/apache/arrow/pull/9049?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-08T22:04:22.843+0000",
                    "updated": "2021-01-08T22:04:22.843+0000",
                    "started": "2021-01-08T22:04:22.843+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "533261",
                    "issueId": "13305783"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 16200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@489fc429[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1ebd77b3[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@269ccf8b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@53692404[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@63652185[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@54bfdfda[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@149fb251[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@e4cfdc2[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@44ef8c87[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6e84cacf[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@760f074[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6e2bafb7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 16200,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Jan 09 05:37:12 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-01-09T05:37:12.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8853/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-05-19T00:41:38.000+0000",
        "updated": "2021-01-10T04:25:00.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 16200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] [Integration Testing] Enable Flight tests",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13305783/comment/17261767",
                    "id": "17261767",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "body": "Issue resolved by pull request 9049\n[https://github.com/apache/arrow/pull/9049]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "created": "2021-01-09T05:37:12.500+0000",
                    "updated": "2021-01-09T05:37:12.500+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0evtc:",
        "customfield_12314139": null
    }
}