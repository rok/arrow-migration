{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13377682",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377682",
    "key": "ARROW-12731",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 12000,
            "total": 12000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 12000,
            "total": 12000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12731/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 20,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377682/worklog/594487",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10191:\nURL: https://github.com/apache/arrow/pull/10191#issuecomment-838369425\n\n\n   https://issues.apache.org/jira/browse/ARROW-12731\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-11T12:13:39.700+0000",
                    "updated": "2021-05-11T12:13:39.700+0000",
                    "started": "2021-05-11T12:13:39.700+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "594487",
                    "issueId": "13377682"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377682/worklog/595387",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] removed a comment on pull request #10191:\nURL: https://github.com/apache/arrow/pull/10191#issuecomment-828792469\n\n\n   <!--\n     Licensed to the Apache Software Foundation (ASF) under one\n     or more contributor license agreements.  See the NOTICE file\n     distributed with this work for additional information\n     regarding copyright ownership.  The ASF licenses this file\n     to you under the Apache License, Version 2.0 (the\n     \"License\"); you may not use this file except in compliance\n     with the License.  You may obtain a copy of the License at\n   \n       http://www.apache.org/licenses/LICENSE-2.0\n   \n     Unless required by applicable law or agreed to in writing,\n     software distributed under the License is distributed on an\n     \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n     KIND, either express or implied.  See the License for the\n     specific language governing permissions and limitations\n     under the License.\n   -->\n   \n   Thanks for opening a pull request!\n   \n   If this is not a [minor PR](https://github.com/apache/arrow/blob/master/CONTRIBUTING.md#Minor-Fixes). Could you open an issue for this pull request on JIRA? https://issues.apache.org/jira/browse/ARROW\n   \n   Opening JIRAs ahead of time contributes to the [Openness](http://theapacheway.com/open/#:~:text=Openness%20allows%20new%20users%20the,must%20happen%20in%20the%20open.) of the Apache Arrow project.\n   \n   Then could you also rename pull request title in the following format?\n   \n       ARROW-${JIRA_ID}: [${COMPONENT}] ${SUMMARY}\n   \n   or\n   \n       MINOR: [${COMPONENT}] ${SUMMARY}\n   \n   See also:\n   \n     * [Other pull requests](https://github.com/apache/arrow/pulls/)\n     * [Contribution Guidelines - How to contribute patches](https://arrow.apache.org/docs/developers/contributing.html#how-to-contribute-patches)\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T14:48:50.643+0000",
                    "updated": "2021-05-12T14:48:50.643+0000",
                    "started": "2021-05-12T14:48:50.643+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595387",
                    "issueId": "13377682"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377682/worklog/595390",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] removed a comment on pull request #10191:\nURL: https://github.com/apache/arrow/pull/10191#issuecomment-837261327\n\n\n   https://issues.apache.org/jira/browse/ARROW-12371\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T14:49:40.143+0000",
                    "updated": "2021-05-12T14:49:40.143+0000",
                    "started": "2021-05-12T14:49:40.143+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595390",
                    "issueId": "13377682"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377682/worklog/595509",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #10191:\nURL: https://github.com/apache/arrow/pull/10191#discussion_r631290976\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -0,0 +1,352 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+\n+#' @include expression.R\n+NULL\n+\n+# This environment is an internal cache for things including data mask functions\n+# We'll populate it at package load time.\n+.cache <- NULL\n+init_env <- function () {\n+  .cache <<- new.env(hash = TRUE)\n+}\n+init_env()\n+\n+# nse_funcs is a list of functions that operated on (and return) Expressions\n+# These will be the basis for a data_mask inside dplyr methods\n+# and will be added to .cache at package load time\n+\n+# Start with mappings from R function name spellings\n+nse_funcs <- lapply(set_names(names(.array_function_map)), function(operator) {\n+  force(operator)\n+  function(...) build_expr(operator, ...)\n+})\n+\n+# Now add functions to that list where the mapping from R to Arrow isn't 1:1\n+# Each of these functions should have the same signature as the R function\n+# they're replacing.\n+#\n+# When to use `build_expr()` vs. `Expression$create()`?\n+#\n+# Use `build_expr()` if you need to\n+# (1) map R function names to Arrow C++ functions\n+# (2) wrap R inputs (vectors) as Array/Scalar\n+#\n+# `Expression$create()` is lower level. Most of the functions below use it\n+# because they manage the preparation of the user-provided inputs\n+# and don't need to wrap scalars\n+\n+nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n+  opts <- cast_options(safe, ...)\n+  opts$to_type <- as_type(target_type)\n+  Expression$create(\"cast\", x, options = opts)\n+}\n+\n+nse_funcs$dictionary_encode <- function(x,\n+                                        null_encoding_behavior = c(\"mask\", \"encode\")) {\n+  behavior <- toupper(match.arg(null_encoding_behavior))\n+  null_encoding_behavior <- NullEncodingBehavior[[behavior]]\n+  Expression$create(\n+    \"dictionary_encode\",\n+    x,\n+    options = list(null_encoding_behavior = null_encoding_behavior)\n+  )\n+}\n+\n+nse_funcs$between <- function(x, left, right) {\n+  x >= left & x <= right\n+}\n+\n+# as.* type casting functions\n+# as.factor() is mapped in expression.R\n+nse_funcs$as.character = function(x) {\n+  Expression$create(\"cast\", x, options = cast_options(to_type = string()))\n+}\n+nse_funcs$as.double = function(x) {\n+  Expression$create(\"cast\", x, options = cast_options(to_type = float64()))\n+}\n+nse_funcs$as.integer = function(x) {\n+  Expression$create(\n+    \"cast\",\n+    x,\n+    options = cast_options(\n+      to_type = int32(),\n+      allow_float_truncate = TRUE,\n+      allow_decimal_truncate = TRUE\n+    )\n+  )\n+}\n+nse_funcs$as.integer64 = function(x) {\n+  Expression$create(\n+    \"cast\",\n+    x,\n+    options = cast_options(\n+      to_type = int64(),\n+      allow_float_truncate = TRUE,\n+      allow_decimal_truncate = TRUE\n+    )\n+  )\n+}\n+nse_funcs$as.logical = function(x) {\n+  Expression$create(\"cast\", x, options = cast_options(to_type = boolean()))\n+}\n+nse_funcs$as.numeric = function(x) {\n+  Expression$create(\"cast\", x, options = cast_options(to_type = float64()))\n+}\n+\n+# String functions\n+nse_funcs$nchar = function(x, type = \"chars\", allowNA = FALSE, keepNA = NA) {\n+  if (allowNA) {\n+    arrow_not_supported(\"allowNA = TRUE\")\n+  }\n+  if (is.na(keepNA)) {\n+    keepNA <- !identical(type, \"width\")\n+  }\n+  if (!keepNA) {\n+    # TODO: I think there is a fill_null kernel we could use, set null to 2\n+    arrow_not_supported(\"keepNA = TRUE\")\n+  }\n+  if (identical(type, \"bytes\")) {\n+    Expression$create(\"binary_length\", x)\n+  } else {\n+    Expression$create(\"utf8_length\", x)\n+  }\n+}\n+\n+nse_funcs$str_trim = function(string, side = c(\"both\", \"left\", \"right\")) {\n+  side <- match.arg(side)\n+  trim_fun <- switch(side,\n+    left = \"utf8_ltrim_whitespace\",\n+    right = \"utf8_rtrim_whitespace\",\n+    both = \"utf8_trim_whitespace\"\n+  )\n+  Expression$create(trim_fun, string)\n+}\n+\n+nse_funcs$grepl <- function(pattern, x, ignore.case = FALSE, fixed = FALSE) {\n+  arrow_fun <- ifelse(fixed && !ignore.case, \"match_substring\", \"match_substring_regex\")\n+  Expression$create(\n+    arrow_fun,\n+    x,\n+    options = list(pattern = format_string_pattern(pattern, ignore.case, fixed))\n+  )\n+}\n\nReview comment:\n       Compared to the previous way of defining these functions, this is a lot simpler to understand, nice!\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T18:16:30.112+0000",
                    "updated": "2021-05-12T18:16:30.112+0000",
                    "started": "2021-05-12T18:16:30.112+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595509",
                    "issueId": "13377682"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377682/worklog/595517",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #10191:\nURL: https://github.com/apache/arrow/pull/10191#discussion_r631302181\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -0,0 +1,352 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+\n+#' @include expression.R\n+NULL\n+\n+# This environment is an internal cache for things including data mask functions\n+# We'll populate it at package load time.\n+.cache <- NULL\n+init_env <- function () {\n+  .cache <<- new.env(hash = TRUE)\n+}\n+init_env()\n\nReview comment:\n       I haven't installed this and tested if there is any issue here (the only circumstance I could imagine is if someone has `.cache` in their global environment already, would this assign to that or would it assign to the .cache that's in arrow's namespace?\r\n   \r\n   For {dittodb} I create the environment when the package is compiled and then populate it at run time. I haven't (yet) found where I found this pattern, but I've seen it used elsewhere too (and found someone I trusted explaining this is the best way to do something like this). https://github.com/ropensci/dittodb/blob/51d8f9e50585f7a4791fce7d8da5fea3f5c7bc5f/R/dittodb-env.R#L8\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T18:28:14.519+0000",
                    "updated": "2021-05-12T18:28:14.519+0000",
                    "started": "2021-05-12T18:28:14.519+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595517",
                    "issueId": "13377682"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377682/worklog/595522",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #10191:\nURL: https://github.com/apache/arrow/pull/10191#discussion_r631305122\n\n\n\n##########\nFile path: r/tests/testthat/test-dplyr-string-functions.R\n##########\n@@ -342,99 +342,73 @@ test_that(\"arrow_*_split_whitespace functions\", {\n       collect(),\n     tibble(x = list(c(\"Foo\\u00A0and\", \"bar\"), c(\"baz\\u2006and\\u1680qux\\u3000and\", \"quux\")))\n   )\n-\n })\n \n test_that(\"errors and warnings in string splitting\", {\n-  df <- tibble(x = c(\"Foo and bar\", \"baz and qux and quux\"))\n-\n   # These conditions generate an error, but abandon_ship() catches the error,\n-  # issues a warning, and pulls the data into R\n-  expect_warning(\n-    df %>%\n-      Table$create() %>%\n-      mutate(x = strsplit(x, \"and.*\", fixed = FALSE)) %>%\n-      collect(),\n-    regexp = \"not supported\"\n+  # issues a warning, and pulls the data into R (if computing on InMemoryDataset)\n+  # Elsewhere we test that abandon_ship() works,\n+  # so here we can just call the functions directly\n+\n+  x <- Expression$field_ref(\"x\")\n+  expect_error(\n+    nse_funcs$strsplit(x, \"and.*\", fixed = FALSE),\n+    'Regular expression matching in strsplit() not supported by Arrow',\n+    fixed = TRUE\n   )\n-  expect_warning(\n-    df %>%\n-      Table$create() %>%\n-      mutate(x = str_split(x, \"and.?\")) %>%\n-      collect()\n+  expect_error(\n+    nse_funcs$str_split(x, \"and.?\"),\n+    'Regular expression matching in str_split() not supported by Arrow',\n+    fixed = TRUE\n   )\n-  expect_warning(\n-    df %>%\n-      Table$create() %>%\n-      mutate(x = str_split(x, regex(\"and.?\"), n = 2)) %>%\n-      collect(),\n-    regexp = \"not supported\"\n+  expect_error(\n+    nse_funcs$str_split(x, regex(\"and.*\")),\n+    'Regular expression matching in str_split() not supported by Arrow',\n+    fixed = TRUE\n   )\n-  expect_warning(\n-    df %>%\n-      Table$create() %>%\n-      mutate(x = str_split(x, fixed(\"and\", ignore_case = TRUE))) %>%\n-      collect(),\n-    \"not supported\"\n+  expect_error(\n+    nse_funcs$str_split(x, fixed(\"and\", ignore_case = TRUE)),\n+    \"Case-insensitive string splitting not supported by Arrow\"\n   )\n-  expect_warning(\n-    df %>%\n-      Table$create() %>%\n-      mutate(x = str_split(x, coll(\"and.?\"))) %>%\n-      collect(),\n-    regexp = \"not supported\"\n+  expect_error(\n+    nse_funcs$str_split(x, coll(\"and.?\")),\n+    \"Pattern modifier `coll()` not supported by Arrow\",\n+    fixed = TRUE\n   )\n-  expect_warning(\n-    df %>%\n-      Table$create() %>%\n-      mutate(x = str_split(x, boundary(type = \"word\"))) %>%\n-      collect(),\n-    regexp = \"not supported\"\n+  expect_error(\n+    nse_funcs$str_split(x, boundary(type = \"word\")),\n+    \"Pattern modifier `boundary()` not supported by Arrow\",\n+    fixed = TRUE\n\nReview comment:\n       The new approach to defining these functions makes it a lot clearer what each test is testing instead of needing all the extra dplyr code; nice.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T18:32:23.953+0000",
                    "updated": "2021-05-12T18:32:23.953+0000",
                    "started": "2021-05-12T18:32:23.953+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595522",
                    "issueId": "13377682"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377682/worklog/595528",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #10191:\nURL: https://github.com/apache/arrow/pull/10191#discussion_r631308011\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -0,0 +1,352 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+\n+#' @include expression.R\n+NULL\n+\n+# This environment is an internal cache for things including data mask functions\n+# We'll populate it at package load time.\n+.cache <- NULL\n+init_env <- function () {\n+  .cache <<- new.env(hash = TRUE)\n+}\n+init_env()\n\nReview comment:\n       It's in the package namespace:\r\n   \r\n   ```\r\n   > ls(pattern = \"cache\", envir=asNamespace(\"arrow\"), all.names = TRUE)\r\n   [1] \".cache\"\r\n   ```\r\n   \r\n   I definitely lifted the pattern from Hadley at some point, maybe even from `memoise`. \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T18:36:49.237+0000",
                    "updated": "2021-05-12T18:36:49.237+0000",
                    "started": "2021-05-12T18:36:49.236+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595528",
                    "issueId": "13377682"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377682/worklog/595530",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #10191:\nURL: https://github.com/apache/arrow/pull/10191#discussion_r631304719\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -0,0 +1,352 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+\n+#' @include expression.R\n+NULL\n+\n+# This environment is an internal cache for things including data mask functions\n+# We'll populate it at package load time.\n+.cache <- NULL\n+init_env <- function () {\n+  .cache <<- new.env(hash = TRUE)\n+}\n+init_env()\n+\n+# nse_funcs is a list of functions that operated on (and return) Expressions\n+# These will be the basis for a data_mask inside dplyr methods\n+# and will be added to .cache at package load time\n+\n+# Start with mappings from R function name spellings\n+nse_funcs <- lapply(set_names(names(.array_function_map)), function(operator) {\n+  force(operator)\n+  function(...) build_expr(operator, ...)\n+})\n+\n+# Now add functions to that list where the mapping from R to Arrow isn't 1:1\n+# Each of these functions should have the same signature as the R function\n+# they're replacing.\n+#\n+# When to use `build_expr()` vs. `Expression$create()`?\n+#\n+# Use `build_expr()` if you need to\n+# (1) map R function names to Arrow C++ functions\n+# (2) wrap R inputs (vectors) as Array/Scalar\n+#\n+# `Expression$create()` is lower level. Most of the functions below use it\n+# because they manage the preparation of the user-provided inputs\n+# and don't need to wrap scalars\n+\n+nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n+  opts <- cast_options(safe, ...)\n+  opts$to_type <- as_type(target_type)\n+  Expression$create(\"cast\", x, options = opts)\n+}\n+\n+nse_funcs$dictionary_encode <- function(x,\n+                                        null_encoding_behavior = c(\"mask\", \"encode\")) {\n+  behavior <- toupper(match.arg(null_encoding_behavior))\n+  null_encoding_behavior <- NullEncodingBehavior[[behavior]]\n+  Expression$create(\n+    \"dictionary_encode\",\n+    x,\n+    options = list(null_encoding_behavior = null_encoding_behavior)\n+  )\n+}\n+\n+nse_funcs$between <- function(x, left, right) {\n+  x >= left & x <= right\n+}\n+\n+# as.* type casting functions\n+# as.factor() is mapped in expression.R\n+nse_funcs$as.character = function(x) {\n\nReview comment:\n       ```suggestion\r\n   nse_funcs$as.character <- function(x) {\r\n   ```\r\n   \r\n   One of the things I like about this is that now it because (easier) to search for these function definitions using more standard strings (I'll frequently try `as.character <- function` as a first search string if I need to find a definition)\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -0,0 +1,352 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+\n+#' @include expression.R\n+NULL\n+\n+# This environment is an internal cache for things including data mask functions\n+# We'll populate it at package load time.\n+.cache <- NULL\n+init_env <- function () {\n+  .cache <<- new.env(hash = TRUE)\n+}\n+init_env()\n+\n+# nse_funcs is a list of functions that operated on (and return) Expressions\n+# These will be the basis for a data_mask inside dplyr methods\n+# and will be added to .cache at package load time\n+\n+# Start with mappings from R function name spellings\n+nse_funcs <- lapply(set_names(names(.array_function_map)), function(operator) {\n+  force(operator)\n+  function(...) build_expr(operator, ...)\n+})\n+\n+# Now add functions to that list where the mapping from R to Arrow isn't 1:1\n+# Each of these functions should have the same signature as the R function\n+# they're replacing.\n+#\n+# When to use `build_expr()` vs. `Expression$create()`?\n+#\n+# Use `build_expr()` if you need to\n+# (1) map R function names to Arrow C++ functions\n+# (2) wrap R inputs (vectors) as Array/Scalar\n+#\n+# `Expression$create()` is lower level. Most of the functions below use it\n+# because they manage the preparation of the user-provided inputs\n+# and don't need to wrap scalars\n+\n+nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n+  opts <- cast_options(safe, ...)\n+  opts$to_type <- as_type(target_type)\n+  Expression$create(\"cast\", x, options = opts)\n+}\n+\n+nse_funcs$dictionary_encode <- function(x,\n+                                        null_encoding_behavior = c(\"mask\", \"encode\")) {\n+  behavior <- toupper(match.arg(null_encoding_behavior))\n+  null_encoding_behavior <- NullEncodingBehavior[[behavior]]\n+  Expression$create(\n+    \"dictionary_encode\",\n+    x,\n+    options = list(null_encoding_behavior = null_encoding_behavior)\n+  )\n+}\n+\n+nse_funcs$between <- function(x, left, right) {\n+  x >= left & x <= right\n+}\n+\n+# as.* type casting functions\n+# as.factor() is mapped in expression.R\n+nse_funcs$as.character = function(x) {\n+  Expression$create(\"cast\", x, options = cast_options(to_type = string()))\n+}\n+nse_funcs$as.double = function(x) {\n+  Expression$create(\"cast\", x, options = cast_options(to_type = float64()))\n+}\n+nse_funcs$as.integer = function(x) {\n\nReview comment:\n       ```suggestion\r\n   nse_funcs$as.integer <- function(x) {\r\n   ```\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -0,0 +1,352 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+\n+#' @include expression.R\n+NULL\n+\n+# This environment is an internal cache for things including data mask functions\n+# We'll populate it at package load time.\n+.cache <- NULL\n+init_env <- function () {\n+  .cache <<- new.env(hash = TRUE)\n+}\n+init_env()\n+\n+# nse_funcs is a list of functions that operated on (and return) Expressions\n+# These will be the basis for a data_mask inside dplyr methods\n+# and will be added to .cache at package load time\n+\n+# Start with mappings from R function name spellings\n+nse_funcs <- lapply(set_names(names(.array_function_map)), function(operator) {\n+  force(operator)\n+  function(...) build_expr(operator, ...)\n+})\n+\n+# Now add functions to that list where the mapping from R to Arrow isn't 1:1\n+# Each of these functions should have the same signature as the R function\n+# they're replacing.\n+#\n+# When to use `build_expr()` vs. `Expression$create()`?\n+#\n+# Use `build_expr()` if you need to\n+# (1) map R function names to Arrow C++ functions\n+# (2) wrap R inputs (vectors) as Array/Scalar\n+#\n+# `Expression$create()` is lower level. Most of the functions below use it\n+# because they manage the preparation of the user-provided inputs\n+# and don't need to wrap scalars\n+\n+nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n+  opts <- cast_options(safe, ...)\n+  opts$to_type <- as_type(target_type)\n+  Expression$create(\"cast\", x, options = opts)\n+}\n+\n+nse_funcs$dictionary_encode <- function(x,\n+                                        null_encoding_behavior = c(\"mask\", \"encode\")) {\n+  behavior <- toupper(match.arg(null_encoding_behavior))\n+  null_encoding_behavior <- NullEncodingBehavior[[behavior]]\n+  Expression$create(\n+    \"dictionary_encode\",\n+    x,\n+    options = list(null_encoding_behavior = null_encoding_behavior)\n+  )\n+}\n+\n+nse_funcs$between <- function(x, left, right) {\n+  x >= left & x <= right\n+}\n+\n+# as.* type casting functions\n+# as.factor() is mapped in expression.R\n+nse_funcs$as.character = function(x) {\n+  Expression$create(\"cast\", x, options = cast_options(to_type = string()))\n+}\n+nse_funcs$as.double = function(x) {\n+  Expression$create(\"cast\", x, options = cast_options(to_type = float64()))\n+}\n+nse_funcs$as.integer = function(x) {\n+  Expression$create(\n+    \"cast\",\n+    x,\n+    options = cast_options(\n+      to_type = int32(),\n+      allow_float_truncate = TRUE,\n+      allow_decimal_truncate = TRUE\n+    )\n+  )\n+}\n+nse_funcs$as.integer64 = function(x) {\n+  Expression$create(\n+    \"cast\",\n+    x,\n+    options = cast_options(\n+      to_type = int64(),\n+      allow_float_truncate = TRUE,\n+      allow_decimal_truncate = TRUE\n+    )\n+  )\n+}\n+nse_funcs$as.logical = function(x) {\n+  Expression$create(\"cast\", x, options = cast_options(to_type = boolean()))\n+}\n+nse_funcs$as.numeric = function(x) {\n\nReview comment:\n       ```suggestion\r\n   nse_funcs$as.numeric <- function(x) {\r\n   ```\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -0,0 +1,352 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n\nReview comment:\n       I'm not totally convinced by this myself, but another option for the name of this file could be `nse-functions` which matches the object we put them in and is slightly broader than dplyr only. Though that might hurt discoverability since I think ~everyone looking at this code will associate these with dplyr and be looking for that in the file name\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -0,0 +1,352 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+\n+#' @include expression.R\n+NULL\n+\n+# This environment is an internal cache for things including data mask functions\n+# We'll populate it at package load time.\n+.cache <- NULL\n+init_env <- function () {\n+  .cache <<- new.env(hash = TRUE)\n+}\n+init_env()\n+\n+# nse_funcs is a list of functions that operated on (and return) Expressions\n+# These will be the basis for a data_mask inside dplyr methods\n+# and will be added to .cache at package load time\n+\n+# Start with mappings from R function name spellings\n+nse_funcs <- lapply(set_names(names(.array_function_map)), function(operator) {\n+  force(operator)\n+  function(...) build_expr(operator, ...)\n+})\n+\n+# Now add functions to that list where the mapping from R to Arrow isn't 1:1\n+# Each of these functions should have the same signature as the R function\n+# they're replacing.\n+#\n+# When to use `build_expr()` vs. `Expression$create()`?\n+#\n+# Use `build_expr()` if you need to\n+# (1) map R function names to Arrow C++ functions\n+# (2) wrap R inputs (vectors) as Array/Scalar\n+#\n+# `Expression$create()` is lower level. Most of the functions below use it\n+# because they manage the preparation of the user-provided inputs\n+# and don't need to wrap scalars\n+\n+nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n+  opts <- cast_options(safe, ...)\n+  opts$to_type <- as_type(target_type)\n+  Expression$create(\"cast\", x, options = opts)\n+}\n+\n+nse_funcs$dictionary_encode <- function(x,\n+                                        null_encoding_behavior = c(\"mask\", \"encode\")) {\n+  behavior <- toupper(match.arg(null_encoding_behavior))\n+  null_encoding_behavior <- NullEncodingBehavior[[behavior]]\n+  Expression$create(\n+    \"dictionary_encode\",\n+    x,\n+    options = list(null_encoding_behavior = null_encoding_behavior)\n+  )\n+}\n+\n+nse_funcs$between <- function(x, left, right) {\n+  x >= left & x <= right\n+}\n+\n+# as.* type casting functions\n+# as.factor() is mapped in expression.R\n+nse_funcs$as.character = function(x) {\n+  Expression$create(\"cast\", x, options = cast_options(to_type = string()))\n+}\n+nse_funcs$as.double = function(x) {\n+  Expression$create(\"cast\", x, options = cast_options(to_type = float64()))\n+}\n+nse_funcs$as.integer = function(x) {\n+  Expression$create(\n+    \"cast\",\n+    x,\n+    options = cast_options(\n+      to_type = int32(),\n+      allow_float_truncate = TRUE,\n+      allow_decimal_truncate = TRUE\n+    )\n+  )\n+}\n+nse_funcs$as.integer64 = function(x) {\n+  Expression$create(\n+    \"cast\",\n+    x,\n+    options = cast_options(\n+      to_type = int64(),\n+      allow_float_truncate = TRUE,\n+      allow_decimal_truncate = TRUE\n+    )\n+  )\n+}\n+nse_funcs$as.logical = function(x) {\n+  Expression$create(\"cast\", x, options = cast_options(to_type = boolean()))\n+}\n+nse_funcs$as.numeric = function(x) {\n+  Expression$create(\"cast\", x, options = cast_options(to_type = float64()))\n+}\n+\n+# String functions\n+nse_funcs$nchar = function(x, type = \"chars\", allowNA = FALSE, keepNA = NA) {\n\nReview comment:\n       ```suggestion\r\n   nse_funcs$nchar <- function(x, type = \"chars\", allowNA = FALSE, keepNA = NA) {\r\n   ```\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -0,0 +1,352 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+\n+#' @include expression.R\n+NULL\n+\n+# This environment is an internal cache for things including data mask functions\n+# We'll populate it at package load time.\n+.cache <- NULL\n+init_env <- function () {\n+  .cache <<- new.env(hash = TRUE)\n+}\n+init_env()\n+\n+# nse_funcs is a list of functions that operated on (and return) Expressions\n+# These will be the basis for a data_mask inside dplyr methods\n+# and will be added to .cache at package load time\n+\n+# Start with mappings from R function name spellings\n+nse_funcs <- lapply(set_names(names(.array_function_map)), function(operator) {\n+  force(operator)\n+  function(...) build_expr(operator, ...)\n+})\n+\n+# Now add functions to that list where the mapping from R to Arrow isn't 1:1\n+# Each of these functions should have the same signature as the R function\n+# they're replacing.\n+#\n+# When to use `build_expr()` vs. `Expression$create()`?\n+#\n+# Use `build_expr()` if you need to\n+# (1) map R function names to Arrow C++ functions\n+# (2) wrap R inputs (vectors) as Array/Scalar\n+#\n+# `Expression$create()` is lower level. Most of the functions below use it\n+# because they manage the preparation of the user-provided inputs\n+# and don't need to wrap scalars\n+\n+nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n+  opts <- cast_options(safe, ...)\n+  opts$to_type <- as_type(target_type)\n+  Expression$create(\"cast\", x, options = opts)\n+}\n+\n+nse_funcs$dictionary_encode <- function(x,\n+                                        null_encoding_behavior = c(\"mask\", \"encode\")) {\n+  behavior <- toupper(match.arg(null_encoding_behavior))\n+  null_encoding_behavior <- NullEncodingBehavior[[behavior]]\n+  Expression$create(\n+    \"dictionary_encode\",\n+    x,\n+    options = list(null_encoding_behavior = null_encoding_behavior)\n+  )\n+}\n+\n+nse_funcs$between <- function(x, left, right) {\n+  x >= left & x <= right\n+}\n+\n+# as.* type casting functions\n+# as.factor() is mapped in expression.R\n+nse_funcs$as.character = function(x) {\n+  Expression$create(\"cast\", x, options = cast_options(to_type = string()))\n+}\n+nse_funcs$as.double = function(x) {\n+  Expression$create(\"cast\", x, options = cast_options(to_type = float64()))\n+}\n+nse_funcs$as.integer = function(x) {\n+  Expression$create(\n+    \"cast\",\n+    x,\n+    options = cast_options(\n+      to_type = int32(),\n+      allow_float_truncate = TRUE,\n+      allow_decimal_truncate = TRUE\n+    )\n+  )\n+}\n+nse_funcs$as.integer64 = function(x) {\n+  Expression$create(\n+    \"cast\",\n+    x,\n+    options = cast_options(\n+      to_type = int64(),\n+      allow_float_truncate = TRUE,\n+      allow_decimal_truncate = TRUE\n+    )\n+  )\n+}\n+nse_funcs$as.logical = function(x) {\n\nReview comment:\n       ```suggestion\r\n   nse_funcs$as.logical <- function(x) {\r\n   ```\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -0,0 +1,352 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+\n+#' @include expression.R\n+NULL\n+\n+# This environment is an internal cache for things including data mask functions\n+# We'll populate it at package load time.\n+.cache <- NULL\n+init_env <- function () {\n+  .cache <<- new.env(hash = TRUE)\n+}\n+init_env()\n+\n+# nse_funcs is a list of functions that operated on (and return) Expressions\n+# These will be the basis for a data_mask inside dplyr methods\n+# and will be added to .cache at package load time\n+\n+# Start with mappings from R function name spellings\n+nse_funcs <- lapply(set_names(names(.array_function_map)), function(operator) {\n+  force(operator)\n+  function(...) build_expr(operator, ...)\n+})\n+\n+# Now add functions to that list where the mapping from R to Arrow isn't 1:1\n+# Each of these functions should have the same signature as the R function\n+# they're replacing.\n+#\n+# When to use `build_expr()` vs. `Expression$create()`?\n+#\n+# Use `build_expr()` if you need to\n+# (1) map R function names to Arrow C++ functions\n+# (2) wrap R inputs (vectors) as Array/Scalar\n+#\n+# `Expression$create()` is lower level. Most of the functions below use it\n+# because they manage the preparation of the user-provided inputs\n+# and don't need to wrap scalars\n+\n+nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n+  opts <- cast_options(safe, ...)\n+  opts$to_type <- as_type(target_type)\n+  Expression$create(\"cast\", x, options = opts)\n+}\n+\n+nse_funcs$dictionary_encode <- function(x,\n+                                        null_encoding_behavior = c(\"mask\", \"encode\")) {\n+  behavior <- toupper(match.arg(null_encoding_behavior))\n+  null_encoding_behavior <- NullEncodingBehavior[[behavior]]\n+  Expression$create(\n+    \"dictionary_encode\",\n+    x,\n+    options = list(null_encoding_behavior = null_encoding_behavior)\n+  )\n+}\n+\n+nse_funcs$between <- function(x, left, right) {\n+  x >= left & x <= right\n+}\n+\n+# as.* type casting functions\n+# as.factor() is mapped in expression.R\n+nse_funcs$as.character = function(x) {\n+  Expression$create(\"cast\", x, options = cast_options(to_type = string()))\n+}\n+nse_funcs$as.double = function(x) {\n+  Expression$create(\"cast\", x, options = cast_options(to_type = float64()))\n+}\n+nse_funcs$as.integer = function(x) {\n+  Expression$create(\n+    \"cast\",\n+    x,\n+    options = cast_options(\n+      to_type = int32(),\n+      allow_float_truncate = TRUE,\n+      allow_decimal_truncate = TRUE\n+    )\n+  )\n+}\n+nse_funcs$as.integer64 = function(x) {\n\nReview comment:\n       ```suggestion\r\n   nse_funcs$as.integer64 <- function(x) {\r\n   ```\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -0,0 +1,352 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+\n+#' @include expression.R\n+NULL\n+\n+# This environment is an internal cache for things including data mask functions\n+# We'll populate it at package load time.\n+.cache <- NULL\n+init_env <- function () {\n+  .cache <<- new.env(hash = TRUE)\n+}\n+init_env()\n+\n+# nse_funcs is a list of functions that operated on (and return) Expressions\n+# These will be the basis for a data_mask inside dplyr methods\n+# and will be added to .cache at package load time\n+\n+# Start with mappings from R function name spellings\n+nse_funcs <- lapply(set_names(names(.array_function_map)), function(operator) {\n+  force(operator)\n+  function(...) build_expr(operator, ...)\n+})\n+\n+# Now add functions to that list where the mapping from R to Arrow isn't 1:1\n+# Each of these functions should have the same signature as the R function\n+# they're replacing.\n+#\n+# When to use `build_expr()` vs. `Expression$create()`?\n+#\n+# Use `build_expr()` if you need to\n+# (1) map R function names to Arrow C++ functions\n+# (2) wrap R inputs (vectors) as Array/Scalar\n+#\n+# `Expression$create()` is lower level. Most of the functions below use it\n+# because they manage the preparation of the user-provided inputs\n+# and don't need to wrap scalars\n+\n+nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n+  opts <- cast_options(safe, ...)\n+  opts$to_type <- as_type(target_type)\n+  Expression$create(\"cast\", x, options = opts)\n+}\n+\n+nse_funcs$dictionary_encode <- function(x,\n+                                        null_encoding_behavior = c(\"mask\", \"encode\")) {\n+  behavior <- toupper(match.arg(null_encoding_behavior))\n+  null_encoding_behavior <- NullEncodingBehavior[[behavior]]\n+  Expression$create(\n+    \"dictionary_encode\",\n+    x,\n+    options = list(null_encoding_behavior = null_encoding_behavior)\n+  )\n+}\n+\n+nse_funcs$between <- function(x, left, right) {\n+  x >= left & x <= right\n+}\n+\n+# as.* type casting functions\n+# as.factor() is mapped in expression.R\n+nse_funcs$as.character = function(x) {\n+  Expression$create(\"cast\", x, options = cast_options(to_type = string()))\n+}\n+nse_funcs$as.double = function(x) {\n+  Expression$create(\"cast\", x, options = cast_options(to_type = float64()))\n+}\n+nse_funcs$as.integer = function(x) {\n+  Expression$create(\n+    \"cast\",\n+    x,\n+    options = cast_options(\n+      to_type = int32(),\n+      allow_float_truncate = TRUE,\n+      allow_decimal_truncate = TRUE\n+    )\n+  )\n+}\n+nse_funcs$as.integer64 = function(x) {\n+  Expression$create(\n+    \"cast\",\n+    x,\n+    options = cast_options(\n+      to_type = int64(),\n+      allow_float_truncate = TRUE,\n+      allow_decimal_truncate = TRUE\n+    )\n+  )\n+}\n+nse_funcs$as.logical = function(x) {\n+  Expression$create(\"cast\", x, options = cast_options(to_type = boolean()))\n+}\n+nse_funcs$as.numeric = function(x) {\n+  Expression$create(\"cast\", x, options = cast_options(to_type = float64()))\n+}\n+\n+# String functions\n+nse_funcs$nchar = function(x, type = \"chars\", allowNA = FALSE, keepNA = NA) {\n+  if (allowNA) {\n+    arrow_not_supported(\"allowNA = TRUE\")\n+  }\n+  if (is.na(keepNA)) {\n+    keepNA <- !identical(type, \"width\")\n+  }\n+  if (!keepNA) {\n+    # TODO: I think there is a fill_null kernel we could use, set null to 2\n+    arrow_not_supported(\"keepNA = TRUE\")\n+  }\n+  if (identical(type, \"bytes\")) {\n+    Expression$create(\"binary_length\", x)\n+  } else {\n+    Expression$create(\"utf8_length\", x)\n+  }\n+}\n+\n+nse_funcs$str_trim = function(string, side = c(\"both\", \"left\", \"right\")) {\n\nReview comment:\n       ```suggestion\r\n   nse_funcs$str_trim <- function(string, side = c(\"both\", \"left\", \"right\")) {\r\n   ```\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -0,0 +1,352 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+\n+#' @include expression.R\n+NULL\n+\n+# This environment is an internal cache for things including data mask functions\n+# We'll populate it at package load time.\n+.cache <- NULL\n+init_env <- function () {\n+  .cache <<- new.env(hash = TRUE)\n+}\n+init_env()\n+\n+# nse_funcs is a list of functions that operated on (and return) Expressions\n+# These will be the basis for a data_mask inside dplyr methods\n+# and will be added to .cache at package load time\n+\n+# Start with mappings from R function name spellings\n+nse_funcs <- lapply(set_names(names(.array_function_map)), function(operator) {\n+  force(operator)\n+  function(...) build_expr(operator, ...)\n+})\n+\n+# Now add functions to that list where the mapping from R to Arrow isn't 1:1\n+# Each of these functions should have the same signature as the R function\n+# they're replacing.\n+#\n+# When to use `build_expr()` vs. `Expression$create()`?\n+#\n+# Use `build_expr()` if you need to\n+# (1) map R function names to Arrow C++ functions\n+# (2) wrap R inputs (vectors) as Array/Scalar\n+#\n+# `Expression$create()` is lower level. Most of the functions below use it\n+# because they manage the preparation of the user-provided inputs\n+# and don't need to wrap scalars\n+\n+nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n+  opts <- cast_options(safe, ...)\n+  opts$to_type <- as_type(target_type)\n+  Expression$create(\"cast\", x, options = opts)\n+}\n+\n+nse_funcs$dictionary_encode <- function(x,\n+                                        null_encoding_behavior = c(\"mask\", \"encode\")) {\n+  behavior <- toupper(match.arg(null_encoding_behavior))\n+  null_encoding_behavior <- NullEncodingBehavior[[behavior]]\n+  Expression$create(\n+    \"dictionary_encode\",\n+    x,\n+    options = list(null_encoding_behavior = null_encoding_behavior)\n+  )\n+}\n+\n+nse_funcs$between <- function(x, left, right) {\n+  x >= left & x <= right\n+}\n+\n+# as.* type casting functions\n+# as.factor() is mapped in expression.R\n+nse_funcs$as.character = function(x) {\n\nReview comment:\n       I think I got all of the instances of `=` here, but I might have missed some\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -0,0 +1,352 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+\n+#' @include expression.R\n+NULL\n+\n+# This environment is an internal cache for things including data mask functions\n+# We'll populate it at package load time.\n+.cache <- NULL\n+init_env <- function () {\n+  .cache <<- new.env(hash = TRUE)\n+}\n+init_env()\n+\n+# nse_funcs is a list of functions that operated on (and return) Expressions\n+# These will be the basis for a data_mask inside dplyr methods\n+# and will be added to .cache at package load time\n+\n+# Start with mappings from R function name spellings\n+nse_funcs <- lapply(set_names(names(.array_function_map)), function(operator) {\n+  force(operator)\n+  function(...) build_expr(operator, ...)\n+})\n+\n+# Now add functions to that list where the mapping from R to Arrow isn't 1:1\n+# Each of these functions should have the same signature as the R function\n+# they're replacing.\n+#\n+# When to use `build_expr()` vs. `Expression$create()`?\n+#\n+# Use `build_expr()` if you need to\n+# (1) map R function names to Arrow C++ functions\n+# (2) wrap R inputs (vectors) as Array/Scalar\n+#\n+# `Expression$create()` is lower level. Most of the functions below use it\n+# because they manage the preparation of the user-provided inputs\n+# and don't need to wrap scalars\n+\n+nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n+  opts <- cast_options(safe, ...)\n+  opts$to_type <- as_type(target_type)\n+  Expression$create(\"cast\", x, options = opts)\n+}\n+\n+nse_funcs$dictionary_encode <- function(x,\n+                                        null_encoding_behavior = c(\"mask\", \"encode\")) {\n+  behavior <- toupper(match.arg(null_encoding_behavior))\n+  null_encoding_behavior <- NullEncodingBehavior[[behavior]]\n+  Expression$create(\n+    \"dictionary_encode\",\n+    x,\n+    options = list(null_encoding_behavior = null_encoding_behavior)\n+  )\n+}\n+\n+nse_funcs$between <- function(x, left, right) {\n+  x >= left & x <= right\n+}\n+\n+# as.* type casting functions\n+# as.factor() is mapped in expression.R\n+nse_funcs$as.character = function(x) {\n+  Expression$create(\"cast\", x, options = cast_options(to_type = string()))\n+}\n+nse_funcs$as.double = function(x) {\n\nReview comment:\n       ```suggestion\r\n   nse_funcs$as.double <- function(x) {\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T18:37:25.176+0000",
                    "updated": "2021-05-12T18:37:25.176+0000",
                    "started": "2021-05-12T18:37:25.176+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595530",
                    "issueId": "13377682"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377682/worklog/595538",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #10191:\nURL: https://github.com/apache/arrow/pull/10191#discussion_r631317092\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -0,0 +1,352 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+\n+#' @include expression.R\n+NULL\n+\n+# This environment is an internal cache for things including data mask functions\n+# We'll populate it at package load time.\n+.cache <- NULL\n+init_env <- function () {\n+  .cache <<- new.env(hash = TRUE)\n+}\n+init_env()\n\nReview comment:\n       Yeah, I swear I got the one I used from hadley or something else in r-lib. Anyway, I also tested the nefarious (but would be stupid frustrating to debug) and it's all good:\r\n   \r\n   ```\r\n   > .cache <- \"this is my special thing\"\r\n   > library(arrow)\r\n   See arrow_info() for available features\r\n   \r\n   Attaching package: \u2018arrow\u2019\r\n   \r\n   The following object is masked from \u2018package:utils\u2019:\r\n   \r\n       timestamp\r\n   \r\n   > .cache\r\n   [1] \"this is my special thing\"\r\n   > arrow:::.cache\r\n   <environment: 0x7fd396e78f40>\r\n   > ls(arrow:::.cache)\r\n   [1] \"functions\"\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T18:50:56.363+0000",
                    "updated": "2021-05-12T18:50:56.363+0000",
                    "started": "2021-05-12T18:50:56.362+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595538",
                    "issueId": "13377682"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377682/worklog/595544",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #10191:\nURL: https://github.com/apache/arrow/pull/10191#discussion_r631320264\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -0,0 +1,352 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n\nReview comment:\n       Yeah I want to keep all of the dplyr related things namespaced (such as we can inside a flat `R/` directory)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T18:55:54.072+0000",
                    "updated": "2021-05-12T18:55:54.072+0000",
                    "started": "2021-05-12T18:55:54.072+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595544",
                    "issueId": "13377682"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377682/worklog/595545",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #10191:\nURL: https://github.com/apache/arrow/pull/10191#discussion_r631320522\n\n\n\n##########\nFile path: r/R/dplyr-functions.R\n##########\n@@ -0,0 +1,352 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+\n+#' @include expression.R\n+NULL\n+\n+# This environment is an internal cache for things including data mask functions\n+# We'll populate it at package load time.\n+.cache <- NULL\n+init_env <- function () {\n+  .cache <<- new.env(hash = TRUE)\n+}\n+init_env()\n+\n+# nse_funcs is a list of functions that operated on (and return) Expressions\n+# These will be the basis for a data_mask inside dplyr methods\n+# and will be added to .cache at package load time\n+\n+# Start with mappings from R function name spellings\n+nse_funcs <- lapply(set_names(names(.array_function_map)), function(operator) {\n+  force(operator)\n+  function(...) build_expr(operator, ...)\n+})\n+\n+# Now add functions to that list where the mapping from R to Arrow isn't 1:1\n+# Each of these functions should have the same signature as the R function\n+# they're replacing.\n+#\n+# When to use `build_expr()` vs. `Expression$create()`?\n+#\n+# Use `build_expr()` if you need to\n+# (1) map R function names to Arrow C++ functions\n+# (2) wrap R inputs (vectors) as Array/Scalar\n+#\n+# `Expression$create()` is lower level. Most of the functions below use it\n+# because they manage the preparation of the user-provided inputs\n+# and don't need to wrap scalars\n+\n+nse_funcs$cast <- function(x, target_type, safe = TRUE, ...) {\n+  opts <- cast_options(safe, ...)\n+  opts$to_type <- as_type(target_type)\n+  Expression$create(\"cast\", x, options = opts)\n+}\n+\n+nse_funcs$dictionary_encode <- function(x,\n+                                        null_encoding_behavior = c(\"mask\", \"encode\")) {\n+  behavior <- toupper(match.arg(null_encoding_behavior))\n+  null_encoding_behavior <- NullEncodingBehavior[[behavior]]\n+  Expression$create(\n+    \"dictionary_encode\",\n+    x,\n+    options = list(null_encoding_behavior = null_encoding_behavior)\n+  )\n+}\n+\n+nse_funcs$between <- function(x, left, right) {\n+  x >= left & x <= right\n+}\n+\n+# as.* type casting functions\n+# as.factor() is mapped in expression.R\n+nse_funcs$as.character = function(x) {\n\nReview comment:\n       Thanks for catching these\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T18:56:08.346+0000",
                    "updated": "2021-05-12T18:56:08.346+0000",
                    "started": "2021-05-12T18:56:08.346+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595545",
                    "issueId": "13377682"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377682/worklog/595689",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #10191:\nURL: https://github.com/apache/arrow/pull/10191#issuecomment-840146203\n\n\n   @github-actions crossbow submit -g r\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T22:58:08.839+0000",
                    "updated": "2021-05-12T22:58:08.839+0000",
                    "started": "2021-05-12T22:58:08.839+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595689",
                    "issueId": "13377682"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377682/worklog/595691",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10191:\nURL: https://github.com/apache/arrow/pull/10191#issuecomment-840146579\n\n\n   Revision: bc6e3563c91b45e15432804b75ba8f0b3a1b0575\n   \n   Submitted crossbow builds: [ursacomputing/crossbow @ actions-407](https://github.com/ursacomputing/crossbow/branches/all?query=actions-407)\n   \n   |Task|Status|\n   |----|------|\n   |conda-linux-gcc-py36-cpu-r36|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-407-azure-conda-linux-gcc-py36-cpu-r36)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-407-azure-conda-linux-gcc-py36-cpu-r36)|\n   |conda-linux-gcc-py37-cpu-r40|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-407-azure-conda-linux-gcc-py37-cpu-r40)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-407-azure-conda-linux-gcc-py37-cpu-r40)|\n   |conda-osx-clang-py36-r36|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-407-azure-conda-osx-clang-py36-r36)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-407-azure-conda-osx-clang-py36-r36)|\n   |conda-osx-clang-py37-r40|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-407-azure-conda-osx-clang-py37-r40)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-407-azure-conda-osx-clang-py37-r40)|\n   |conda-win-vs2017-py36-r36|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-407-azure-conda-win-vs2017-py36-r36)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-407-azure-conda-win-vs2017-py36-r36)|\n   |conda-win-vs2017-py37-r40|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-407-azure-conda-win-vs2017-py37-r40)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-407-azure-conda-win-vs2017-py37-r40)|\n   |homebrew-r-autobrew|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-407-github-homebrew-r-autobrew)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-407-github-homebrew-r-autobrew)|\n   |test-r-devdocs|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-407-github-test-r-devdocs)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-407-github-test-r-devdocs)|\n   |test-r-install-local|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-407-github-test-r-install-local)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-407-github-test-r-install-local)|\n   |test-r-linux-as-cran|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-407-github-test-r-linux-as-cran)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-407-github-test-r-linux-as-cran)|\n   |test-r-linux-valgrind|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-407-azure-test-r-linux-valgrind)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-407-azure-test-r-linux-valgrind)|\n   |test-r-minimal-build|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-407-azure-test-r-minimal-build)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-407-azure-test-r-minimal-build)|\n   |test-r-rhub-ubuntu-gcc-release-latest|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-407-azure-test-r-rhub-ubuntu-gcc-release-latest)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-407-azure-test-r-rhub-ubuntu-gcc-release-latest)|\n   |test-r-rocker-r-base-latest|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-407-azure-test-r-rocker-r-base-latest)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-407-azure-test-r-rocker-r-base-latest)|\n   |test-r-rstudio-r-base-3.6-bionic|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-407-azure-test-r-rstudio-r-base-3.6-bionic)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-407-azure-test-r-rstudio-r-base-3.6-bionic)|\n   |test-r-rstudio-r-base-3.6-centos7-devtoolset-8|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-407-azure-test-r-rstudio-r-base-3.6-centos7-devtoolset-8)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-407-azure-test-r-rstudio-r-base-3.6-centos7-devtoolset-8)|\n   |test-r-rstudio-r-base-3.6-centos8|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-407-azure-test-r-rstudio-r-base-3.6-centos8)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-407-azure-test-r-rstudio-r-base-3.6-centos8)|\n   |test-r-rstudio-r-base-3.6-opensuse15|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-407-azure-test-r-rstudio-r-base-3.6-opensuse15)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-407-azure-test-r-rstudio-r-base-3.6-opensuse15)|\n   |test-r-rstudio-r-base-3.6-opensuse42|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-407-azure-test-r-rstudio-r-base-3.6-opensuse42)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-407-azure-test-r-rstudio-r-base-3.6-opensuse42)|\n   |test-r-version-compatibility|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-407-github-test-r-version-compatibility)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-407-github-test-r-version-compatibility)|\n   |test-r-versions|[![Github Actions](https://github.com/ursacomputing/crossbow/workflows/Crossbow/badge.svg?branch=actions-407-github-test-r-versions)](https://github.com/ursacomputing/crossbow/actions?query=branch:actions-407-github-test-r-versions)|\n   |test-r-without-arrow|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-407-azure-test-r-without-arrow)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-407-azure-test-r-without-arrow)|\n   |test-ubuntu-18.04-r-sanitizer|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-407-azure-test-ubuntu-18.04-r-sanitizer)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-407-azure-test-ubuntu-18.04-r-sanitizer)|\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T22:59:04.393+0000",
                    "updated": "2021-05-12T22:59:04.393+0000",
                    "started": "2021-05-12T22:59:04.392+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595691",
                    "issueId": "13377682"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377682/worklog/595806",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on a change in pull request #10191:\nURL: https://github.com/apache/arrow/pull/10191#discussion_r631530324\n\n\n\n##########\nFile path: r/R/dplyr.R\n##########\n@@ -58,40 +63,36 @@ arrow_dplyr_query <- function(.data) {\n   )\n }\n \n+make_field_refs <- function(field_names) {\n+  set_names(lapply(field_names, Expression$field_ref), field_names)\n+}\n+\n #' @export\n print.arrow_dplyr_query <- function(x, ...) {\n   schm <- x$.data$schema\n-  cols <- get_field_names(x)\n-  # If cols are expressions, they won't be in the schema and will be \"\" in cols\n-  fields <- map_chr(cols, function(name) {\n+  fields <- map_chr(x$selected_columns, function(expr) {\n+    name <- expr$field_name\n     if (nzchar(name)) {\n       schm$GetFieldByName(name)$ToString()\n     } else {\n+      # It's \"\" because this is not a field_ref, it's a more complex expression\n       \"expr\"\n\nReview comment:\n       Would this also enable ARROW-12291?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-13T03:00:38.395+0000",
                    "updated": "2021-05-13T03:00:38.395+0000",
                    "started": "2021-05-13T03:00:38.395+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595806",
                    "issueId": "13377682"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377682/worklog/595808",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook commented on pull request #10191:\nURL: https://github.com/apache/arrow/pull/10191#issuecomment-840255927\n\n\n   This looks great.\r\n   \r\n   The increased dependency on Dataset means we will have to skip many more tests to make {{test-r-minimal-build}} pass.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-13T03:04:40.507+0000",
                    "updated": "2021-05-13T03:04:40.507+0000",
                    "started": "2021-05-13T03:04:40.507+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595808",
                    "issueId": "13377682"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377682/worklog/595809",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ianmcook edited a comment on pull request #10191:\nURL: https://github.com/apache/arrow/pull/10191#issuecomment-840255927\n\n\n   This looks great.\r\n   \r\n   The increased dependency on Dataset means we will have to skip many more tests to make `test-r-minimal-build` pass.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-13T03:04:53.820+0000",
                    "updated": "2021-05-13T03:04:53.820+0000",
                    "started": "2021-05-13T03:04:53.820+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595809",
                    "issueId": "13377682"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377682/worklog/596159",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #10191:\nURL: https://github.com/apache/arrow/pull/10191#discussion_r631859129\n\n\n\n##########\nFile path: r/R/dplyr.R\n##########\n@@ -58,40 +63,36 @@ arrow_dplyr_query <- function(.data) {\n   )\n }\n \n+make_field_refs <- function(field_names) {\n+  set_names(lapply(field_names, Expression$field_ref), field_names)\n+}\n+\n #' @export\n print.arrow_dplyr_query <- function(x, ...) {\n   schm <- x$.data$schema\n-  cols <- get_field_names(x)\n-  # If cols are expressions, they won't be in the schema and will be \"\" in cols\n-  fields <- map_chr(cols, function(name) {\n+  fields <- map_chr(x$selected_columns, function(expr) {\n+    name <- expr$field_name\n     if (nzchar(name)) {\n       schm$GetFieldByName(name)$ToString()\n     } else {\n+      # It's \"\" because this is not a field_ref, it's a more complex expression\n       \"expr\"\n\nReview comment:\n       Yes, indeed, this is implemented here.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-13T14:37:14.012+0000",
                    "updated": "2021-05-13T14:37:14.012+0000",
                    "started": "2021-05-13T14:37:14.012+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596159",
                    "issueId": "13377682"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377682/worklog/596163",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #10191:\nURL: https://github.com/apache/arrow/pull/10191#issuecomment-840612048\n\n\n   @github-actions crossbow submit test-r-minimal-build\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-13T14:48:02.798+0000",
                    "updated": "2021-05-13T14:48:02.798+0000",
                    "started": "2021-05-13T14:48:02.798+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596163",
                    "issueId": "13377682"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377682/worklog/596184",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10191:\nURL: https://github.com/apache/arrow/pull/10191#issuecomment-840625669\n\n\n   Revision: fa5731e898a2f111c5f91575a16619d0138f054a\n   \n   Submitted crossbow builds: [ursacomputing/crossbow @ actions-410](https://github.com/ursacomputing/crossbow/branches/all?query=actions-410)\n   \n   |Task|Status|\n   |----|------|\n   |test-r-minimal-build|[![Azure](https://dev.azure.com/ursacomputing/crossbow/_apis/build/status/ursacomputing.crossbow?branchName=actions-410-azure-test-r-minimal-build)](https://dev.azure.com/ursacomputing/crossbow/_build/latest?definitionId=1&branchName=actions-410-azure-test-r-minimal-build)|\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-13T15:07:47.428+0000",
                    "updated": "2021-05-13T15:07:47.428+0000",
                    "started": "2021-05-13T15:07:47.428+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596184",
                    "issueId": "13377682"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377682/worklog/596207",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson closed pull request #10191:\nURL: https://github.com/apache/arrow/pull/10191\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-13T15:47:40.964+0000",
                    "updated": "2021-05-13T15:47:40.964+0000",
                    "started": "2021-05-13T15:47:40.964+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596207",
                    "issueId": "13377682"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 12000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@66211017[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@be79d0a[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@78ed02ef[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4fd5df35[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@33d16c4a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3539bd9d[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@25532baf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@441e7447[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7c95f3b2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4387ce8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@388a2193[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@f81c689[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 12000,
        "customfield_12312520": null,
        "customfield_12312521": "Thu May 13 15:47:42 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-05-13T15:47:42.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12731/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-05-10T20:10:27.000+0000",
        "updated": "2021-05-13T15:47:42.000+0000",
        "timeoriginalestimate": null,
        "description": "This lets us consolidate our Expression handling code and prepares us for more query evaluation in the near future. As a bonus, it should also simplify our dplyr NSE function definition and make it easier to add and test them going forward.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 12000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Use InMemoryDataset for Table/RecordBatch in dplyr code",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377682/comment/17343958",
                    "id": "17343958",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 10191\n[https://github.com/apache/arrow/pull/10191]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-05-13T15:47:42.585+0000",
                    "updated": "2021-05-13T15:47:42.585+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0qwgo:",
        "customfield_12314139": null
    }
}