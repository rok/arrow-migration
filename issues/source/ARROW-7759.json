{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13283136",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283136",
    "key": "ARROW-7759",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12347769",
                "id": "12347769",
                "description": "",
                "name": "1.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-07-24"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "dataset",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 22800,
            "total": 22800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 22800,
            "total": 22800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7759/votes",
            "votes": 1,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 38,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283136/worklog/427058",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz opened a new pull request #7033:\nURL: https://github.com/apache/arrow/pull/7033\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-24T19:11:55.121+0000",
                    "updated": "2020-04-24T19:11:55.121+0000",
                    "started": "2020-04-24T19:11:55.121+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "427058",
                    "issueId": "13283136"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283136/worklog/427059",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7033:\nURL: https://github.com/apache/arrow/pull/7033#issuecomment-619195315\n\n\n   https://issues.apache.org/jira/browse/ARROW-7759\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-24T19:16:52.607+0000",
                    "updated": "2020-04-24T19:16:52.607+0000",
                    "started": "2020-04-24T19:16:52.607+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "427059",
                    "issueId": "13283136"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283136/worklog/427073",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #7033:\nURL: https://github.com/apache/arrow/pull/7033#issuecomment-619213038\n\n\n   @github-actions rebase\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-24T19:59:34.197+0000",
                    "updated": "2020-04-24T19:59:34.197+0000",
                    "started": "2020-04-24T19:59:34.196+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "427073",
                    "issueId": "13283136"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283136/worklog/427089",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #7033:\nURL: https://github.com/apache/arrow/pull/7033#discussion_r414852277\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_csv.h\n##########\n@@ -0,0 +1,52 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+\n+#include \"arrow/csv/options.h\"\n+#include \"arrow/dataset/file_base.h\"\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+#include \"arrow/result.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+/// \\brief A FileFormat implementation that reads from and writes to Csv files\n+class ARROW_DS_EXPORT CsvFileFormat : public FileFormat {\n+ public:\n+  csv::ParseOptions parse_options = csv::ParseOptions::Defaults();\n\nReview comment:\n       How do I provide these options? `auto fmt = std::make_shared<ds::CsvFileFormat>();` and then like `fmt.parse_options = something`?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-24T20:45:14.251+0000",
                    "updated": "2020-04-24T20:45:14.251+0000",
                    "started": "2020-04-24T20:45:14.250+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "427089",
                    "issueId": "13283136"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283136/worklog/427095",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7033:\nURL: https://github.com/apache/arrow/pull/7033#discussion_r414856596\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_csv.h\n##########\n@@ -0,0 +1,52 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+\n+#include \"arrow/csv/options.h\"\n+#include \"arrow/dataset/file_base.h\"\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+#include \"arrow/result.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+/// \\brief A FileFormat implementation that reads from and writes to Csv files\n+class ARROW_DS_EXPORT CsvFileFormat : public FileFormat {\n+ public:\n+  csv::ParseOptions parse_options = csv::ParseOptions::Defaults();\n\nReview comment:\n       fmt->parse_options.delimiter = '\\t'\r\n   \r\n   For example\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-24T20:53:56.389+0000",
                    "updated": "2020-04-24T20:53:56.389+0000",
                    "started": "2020-04-24T20:53:56.388+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "427095",
                    "issueId": "13283136"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283136/worklog/427639",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on a change in pull request #7033:\nURL: https://github.com/apache/arrow/pull/7033#discussion_r415798798\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_csv.cc\n##########\n@@ -0,0 +1,99 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/dataset/file_csv.h\"\n+\n+#include <memory>\n+#include <string>\n+\n+#include \"arrow/csv/options.h\"\n+#include \"arrow/csv/reader.h\"\n+#include \"arrow/dataset/dataset_internal.h\"\n+#include \"arrow/dataset/file_base.h\"\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/iterator.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+using internal::checked_cast;\n+using internal::checked_pointer_cast;\n+\n+static inline csv::ReadOptions default_read_options() {\n+  auto defaults = csv::ReadOptions::Defaults();\n+  defaults.use_threads = false;\n+  return defaults;\n+}\n+\n+static inline Result<std::shared_ptr<csv::StreamingReader>> OpenReader(\n+    const FileSource& source, const CsvFileFormat& format) {\n+  ARROW_ASSIGN_OR_RAISE(auto input, source.Open());\n+\n+  auto maybe_reader = csv::StreamingReader::Make(\n+      default_memory_pool(), std::move(input), default_read_options(),\n+      format.parse_options, format.convert_options);\n+  if (!maybe_reader.ok()) {\n+    return maybe_reader.status().WithMessage(\"Could not open IPC input source '\",\n\nReview comment:\n       ```suggestion\r\n       return maybe_reader.status().WithMessage(\"Could not open CSV input source '\",\r\n   ```\n\n##########\nFile path: cpp/src/arrow/dataset/file_csv.cc\n##########\n@@ -0,0 +1,99 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/dataset/file_csv.h\"\n+\n+#include <memory>\n+#include <string>\n+\n+#include \"arrow/csv/options.h\"\n+#include \"arrow/csv/reader.h\"\n+#include \"arrow/dataset/dataset_internal.h\"\n+#include \"arrow/dataset/file_base.h\"\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/iterator.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+using internal::checked_cast;\n+using internal::checked_pointer_cast;\n+\n+static inline csv::ReadOptions default_read_options() {\n+  auto defaults = csv::ReadOptions::Defaults();\n+  defaults.use_threads = false;\n\nReview comment:\n       This warrants a comment explaining why we disable threading.\n\n##########\nFile path: cpp/src/arrow/dataset/file_csv.cc\n##########\n@@ -0,0 +1,99 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/dataset/file_csv.h\"\n+\n+#include <memory>\n+#include <string>\n+\n+#include \"arrow/csv/options.h\"\n+#include \"arrow/csv/reader.h\"\n+#include \"arrow/dataset/dataset_internal.h\"\n+#include \"arrow/dataset/file_base.h\"\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/iterator.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+using internal::checked_cast;\n+using internal::checked_pointer_cast;\n+\n+static inline csv::ReadOptions default_read_options() {\n+  auto defaults = csv::ReadOptions::Defaults();\n+  defaults.use_threads = false;\n+  return defaults;\n+}\n+\n+static inline Result<std::shared_ptr<csv::StreamingReader>> OpenReader(\n+    const FileSource& source, const CsvFileFormat& format) {\n+  ARROW_ASSIGN_OR_RAISE(auto input, source.Open());\n+\n+  auto maybe_reader = csv::StreamingReader::Make(\n+      default_memory_pool(), std::move(input), default_read_options(),\n+      format.parse_options, format.convert_options);\n+  if (!maybe_reader.ok()) {\n+    return maybe_reader.status().WithMessage(\"Could not open IPC input source '\",\n+                                             source.path(), \"': \", maybe_reader.status());\n+  }\n+\n+  return std::move(maybe_reader).ValueOrDie();\n+}\n+\n+/// \\brief A ScanTask backed by an Csv file.\n+class CsvScanTask : public ScanTask {\n+ public:\n+  CsvScanTask(std::shared_ptr<const CsvFileFormat> format, FileSource source,\n+              std::shared_ptr<ScanOptions> options, std::shared_ptr<ScanContext> context)\n+      : ScanTask(std::move(options), std::move(context)),\n+        format_(std::move(format)),\n+        source_(std::move(source)) {}\n+\n+  Result<RecordBatchIterator> Execute() override {\n+    ARROW_ASSIGN_OR_RAISE(auto reader, OpenReader(source_, *format_));\n\nReview comment:\n       It's missing the column selection optimisation. While it won't save the IO, it'll save the memory and cpu time from elided  conversion.\n\n##########\nFile path: cpp/src/arrow/dataset/file_csv.cc\n##########\n@@ -0,0 +1,99 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/dataset/file_csv.h\"\n+\n+#include <memory>\n+#include <string>\n+\n+#include \"arrow/csv/options.h\"\n+#include \"arrow/csv/reader.h\"\n+#include \"arrow/dataset/dataset_internal.h\"\n+#include \"arrow/dataset/file_base.h\"\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/iterator.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+using internal::checked_cast;\n+using internal::checked_pointer_cast;\n+\n+static inline csv::ReadOptions default_read_options() {\n+  auto defaults = csv::ReadOptions::Defaults();\n+  defaults.use_threads = false;\n+  return defaults;\n+}\n+\n+static inline Result<std::shared_ptr<csv::StreamingReader>> OpenReader(\n+    const FileSource& source, const CsvFileFormat& format) {\n+  ARROW_ASSIGN_OR_RAISE(auto input, source.Open());\n+\n+  auto maybe_reader = csv::StreamingReader::Make(\n+      default_memory_pool(), std::move(input), default_read_options(),\n\nReview comment:\n       - How would you pass the Scan's memory pool?\r\n   - We'll need a \"merge\" ReadOptions like we do for parquet. See other comment.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-27T13:33:06.981+0000",
                    "updated": "2020-04-27T13:33:06.981+0000",
                    "started": "2020-04-27T13:33:06.981+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "427639",
                    "issueId": "13283136"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283136/worklog/427666",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #7033:\nURL: https://github.com/apache/arrow/pull/7033#discussion_r415887520\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_csv.h\n##########\n@@ -0,0 +1,52 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+\n+#include \"arrow/csv/options.h\"\n+#include \"arrow/dataset/file_base.h\"\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+#include \"arrow/result.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+/// \\brief A FileFormat implementation that reads from and writes to Csv files\n+class ARROW_DS_EXPORT CsvFileFormat : public FileFormat {\n+ public:\n+  csv::ParseOptions parse_options = csv::ParseOptions::Defaults();\n\nReview comment:\n       Can I set a full `csv::ParseOptions` object? We have builders for those in R already.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-27T14:59:24.316+0000",
                    "updated": "2020-04-27T14:59:24.316+0000",
                    "started": "2020-04-27T14:59:24.316+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "427666",
                    "issueId": "13283136"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283136/worklog/427695",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #7033:\nURL: https://github.com/apache/arrow/pull/7033#discussion_r415949596\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_csv.cc\n##########\n@@ -0,0 +1,99 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/dataset/file_csv.h\"\n+\n+#include <memory>\n+#include <string>\n+\n+#include \"arrow/csv/options.h\"\n+#include \"arrow/csv/reader.h\"\n+#include \"arrow/dataset/dataset_internal.h\"\n+#include \"arrow/dataset/file_base.h\"\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/iterator.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+using internal::checked_cast;\n+using internal::checked_pointer_cast;\n+\n+static inline csv::ReadOptions default_read_options() {\n+  auto defaults = csv::ReadOptions::Defaults();\n+  defaults.use_threads = false;\n+  return defaults;\n+}\n+\n+static inline Result<std::shared_ptr<csv::StreamingReader>> OpenReader(\n+    const FileSource& source, const CsvFileFormat& format) {\n+  ARROW_ASSIGN_OR_RAISE(auto input, source.Open());\n+\n+  auto maybe_reader = csv::StreamingReader::Make(\n+      default_memory_pool(), std::move(input), default_read_options(),\n+      format.parse_options, format.convert_options);\n+  if (!maybe_reader.ok()) {\n+    return maybe_reader.status().WithMessage(\"Could not open IPC input source '\",\n+                                             source.path(), \"': \", maybe_reader.status());\n+  }\n+\n+  return std::move(maybe_reader).ValueOrDie();\n+}\n+\n+/// \\brief A ScanTask backed by an Csv file.\n+class CsvScanTask : public ScanTask {\n+ public:\n+  CsvScanTask(std::shared_ptr<const CsvFileFormat> format, FileSource source,\n+              std::shared_ptr<ScanOptions> options, std::shared_ptr<ScanContext> context)\n+      : ScanTask(std::move(options), std::move(context)),\n+        format_(std::move(format)),\n+        source_(std::move(source)) {}\n+\n+  Result<RecordBatchIterator> Execute() override {\n+    ARROW_ASSIGN_OR_RAISE(auto reader, OpenReader(source_, *format_));\n\nReview comment:\n       Also, the `ScanOptions` should be used to set the `column_names`, `column_types` and `include_columns` options. Unless you prefer to let the CSV reader infer types and then convert them yourself?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-27T16:11:49.073+0000",
                    "updated": "2020-04-27T16:11:49.073+0000",
                    "started": "2020-04-27T16:11:49.073+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "427695",
                    "issueId": "13283136"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283136/worklog/427702",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7033:\nURL: https://github.com/apache/arrow/pull/7033#discussion_r415958451\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_csv.h\n##########\n@@ -0,0 +1,52 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+\n+#include \"arrow/csv/options.h\"\n+#include \"arrow/dataset/file_base.h\"\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+#include \"arrow/result.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+/// \\brief A FileFormat implementation that reads from and writes to Csv files\n+class ARROW_DS_EXPORT CsvFileFormat : public FileFormat {\n+ public:\n+  csv::ParseOptions parse_options = csv::ParseOptions::Defaults();\n\nReview comment:\n       Definitely you can set a full ParseOptions and ConvertOptions. I haven't exposed any of ReadOptions, as noted below\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-27T16:23:14.150+0000",
                    "updated": "2020-04-27T16:23:14.150+0000",
                    "started": "2020-04-27T16:23:14.150+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "427702",
                    "issueId": "13283136"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283136/worklog/427713",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7033:\nURL: https://github.com/apache/arrow/pull/7033#discussion_r415971888\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_csv.cc\n##########\n@@ -0,0 +1,99 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/dataset/file_csv.h\"\n+\n+#include <memory>\n+#include <string>\n+\n+#include \"arrow/csv/options.h\"\n+#include \"arrow/csv/reader.h\"\n+#include \"arrow/dataset/dataset_internal.h\"\n+#include \"arrow/dataset/file_base.h\"\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/iterator.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+using internal::checked_cast;\n+using internal::checked_pointer_cast;\n+\n+static inline csv::ReadOptions default_read_options() {\n+  auto defaults = csv::ReadOptions::Defaults();\n+  defaults.use_threads = false;\n+  return defaults;\n+}\n+\n+static inline Result<std::shared_ptr<csv::StreamingReader>> OpenReader(\n+    const FileSource& source, const CsvFileFormat& format) {\n+  ARROW_ASSIGN_OR_RAISE(auto input, source.Open());\n+\n+  auto maybe_reader = csv::StreamingReader::Make(\n+      default_memory_pool(), std::move(input), default_read_options(),\n+      format.parse_options, format.convert_options);\n+  if (!maybe_reader.ok()) {\n+    return maybe_reader.status().WithMessage(\"Could not open IPC input source '\",\n+                                             source.path(), \"': \", maybe_reader.status());\n+  }\n+\n+  return std::move(maybe_reader).ValueOrDie();\n+}\n+\n+/// \\brief A ScanTask backed by an Csv file.\n+class CsvScanTask : public ScanTask {\n+ public:\n+  CsvScanTask(std::shared_ptr<const CsvFileFormat> format, FileSource source,\n+              std::shared_ptr<ScanOptions> options, std::shared_ptr<ScanContext> context)\n+      : ScanTask(std::move(options), std::move(context)),\n+        format_(std::move(format)),\n+        source_(std::move(source)) {}\n+\n+  Result<RecordBatchIterator> Execute() override {\n+    ARROW_ASSIGN_OR_RAISE(auto reader, OpenReader(source_, *format_));\n\nReview comment:\n       Assembling these from `ScanOptions` is definitely a goal; the first pass just defers all this to the format. Some of `ConvertOptions` belong in the format (`null_values`, ..., `strings_can_be_null`, ...) while others such as the ones you note do not. I'll rewrite shortly\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-27T16:40:31.320+0000",
                    "updated": "2020-04-27T16:40:31.320+0000",
                    "started": "2020-04-27T16:40:31.320+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "427713",
                    "issueId": "13283136"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283136/worklog/427714",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7033:\nURL: https://github.com/apache/arrow/pull/7033#discussion_r415971988\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_csv.cc\n##########\n@@ -0,0 +1,99 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/dataset/file_csv.h\"\n+\n+#include <memory>\n+#include <string>\n+\n+#include \"arrow/csv/options.h\"\n+#include \"arrow/csv/reader.h\"\n+#include \"arrow/dataset/dataset_internal.h\"\n+#include \"arrow/dataset/file_base.h\"\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/iterator.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+using internal::checked_cast;\n+using internal::checked_pointer_cast;\n+\n+static inline csv::ReadOptions default_read_options() {\n+  auto defaults = csv::ReadOptions::Defaults();\n+  defaults.use_threads = false;\n\nReview comment:\n       will do\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-27T16:40:48.168+0000",
                    "updated": "2020-04-27T16:40:48.168+0000",
                    "started": "2020-04-27T16:40:48.168+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "427714",
                    "issueId": "13283136"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283136/worklog/427716",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7033:\nURL: https://github.com/apache/arrow/pull/7033#discussion_r415958451\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_csv.h\n##########\n@@ -0,0 +1,52 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+\n+#include \"arrow/csv/options.h\"\n+#include \"arrow/dataset/file_base.h\"\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+#include \"arrow/result.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+/// \\brief A FileFormat implementation that reads from and writes to Csv files\n+class ARROW_DS_EXPORT CsvFileFormat : public FileFormat {\n+ public:\n+  csv::ParseOptions parse_options = csv::ParseOptions::Defaults();\n\nReview comment:\n       Definitely you can set a full ParseOptions. I haven't exposed any of ReadOptions and ConvertOptions will probably need separate handling, as noted below\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-27T16:44:16.962+0000",
                    "updated": "2020-04-27T16:44:16.962+0000",
                    "started": "2020-04-27T16:44:16.961+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "427716",
                    "issueId": "13283136"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283136/worklog/427718",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7033:\nURL: https://github.com/apache/arrow/pull/7033#discussion_r415981809\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_csv.cc\n##########\n@@ -0,0 +1,99 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/dataset/file_csv.h\"\n+\n+#include <memory>\n+#include <string>\n+\n+#include \"arrow/csv/options.h\"\n+#include \"arrow/csv/reader.h\"\n+#include \"arrow/dataset/dataset_internal.h\"\n+#include \"arrow/dataset/file_base.h\"\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/iterator.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+using internal::checked_cast;\n+using internal::checked_pointer_cast;\n+\n+static inline csv::ReadOptions default_read_options() {\n+  auto defaults = csv::ReadOptions::Defaults();\n+  defaults.use_threads = false;\n+  return defaults;\n+}\n+\n+static inline Result<std::shared_ptr<csv::StreamingReader>> OpenReader(\n+    const FileSource& source, const CsvFileFormat& format) {\n+  ARROW_ASSIGN_OR_RAISE(auto input, source.Open());\n+\n+  auto maybe_reader = csv::StreamingReader::Make(\n+      default_memory_pool(), std::move(input), default_read_options(),\n\nReview comment:\n       - not currently implemented, will add\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-27T16:53:35.637+0000",
                    "updated": "2020-04-27T16:53:35.637+0000",
                    "started": "2020-04-27T16:53:35.637+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "427718",
                    "issueId": "13283136"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283136/worklog/427804",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7033:\nURL: https://github.com/apache/arrow/pull/7033#discussion_r416090623\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_csv.cc\n##########\n@@ -0,0 +1,99 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/dataset/file_csv.h\"\n+\n+#include <memory>\n+#include <string>\n+\n+#include \"arrow/csv/options.h\"\n+#include \"arrow/csv/reader.h\"\n+#include \"arrow/dataset/dataset_internal.h\"\n+#include \"arrow/dataset/file_base.h\"\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/iterator.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+using internal::checked_cast;\n+using internal::checked_pointer_cast;\n+\n+static inline csv::ReadOptions default_read_options() {\n+  auto defaults = csv::ReadOptions::Defaults();\n+  defaults.use_threads = false;\n+  return defaults;\n+}\n+\n+static inline Result<std::shared_ptr<csv::StreamingReader>> OpenReader(\n+    const FileSource& source, const CsvFileFormat& format) {\n+  ARROW_ASSIGN_OR_RAISE(auto input, source.Open());\n+\n+  auto maybe_reader = csv::StreamingReader::Make(\n+      default_memory_pool(), std::move(input), default_read_options(),\n+      format.parse_options, format.convert_options);\n+  if (!maybe_reader.ok()) {\n+    return maybe_reader.status().WithMessage(\"Could not open IPC input source '\",\n+                                             source.path(), \"': \", maybe_reader.status());\n+  }\n+\n+  return std::move(maybe_reader).ValueOrDie();\n+}\n+\n+/// \\brief A ScanTask backed by an Csv file.\n+class CsvScanTask : public ScanTask {\n+ public:\n+  CsvScanTask(std::shared_ptr<const CsvFileFormat> format, FileSource source,\n+              std::shared_ptr<ScanOptions> options, std::shared_ptr<ScanContext> context)\n+      : ScanTask(std::move(options), std::move(context)),\n+        format_(std::move(format)),\n+        source_(std::move(source)) {}\n+\n+  Result<RecordBatchIterator> Execute() override {\n+    ARROW_ASSIGN_OR_RAISE(auto reader, OpenReader(source_, *format_));\n\nReview comment:\n       PTAL. There's a subtlety resulting from the loosely typed nature of CSV: we don't know the types of columns materialized but not projected, which could lead to some very nasty errors in edge cases. For example, if filter were `\"a\"_ == \"b\"_` but only column `\"c\"` were projected then we have no information about the types of fields a, b except that they must be identical. I'm not sure what the correct solution here is\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-27T19:31:30.049+0000",
                    "updated": "2020-04-27T19:31:30.049+0000",
                    "started": "2020-04-27T19:31:30.049+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "427804",
                    "issueId": "13283136"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283136/worklog/427810",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #7033:\nURL: https://github.com/apache/arrow/pull/7033#discussion_r416093398\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_csv.cc\n##########\n@@ -0,0 +1,99 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/dataset/file_csv.h\"\n+\n+#include <memory>\n+#include <string>\n+\n+#include \"arrow/csv/options.h\"\n+#include \"arrow/csv/reader.h\"\n+#include \"arrow/dataset/dataset_internal.h\"\n+#include \"arrow/dataset/file_base.h\"\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/iterator.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+using internal::checked_cast;\n+using internal::checked_pointer_cast;\n+\n+static inline csv::ReadOptions default_read_options() {\n+  auto defaults = csv::ReadOptions::Defaults();\n+  defaults.use_threads = false;\n+  return defaults;\n+}\n+\n+static inline Result<std::shared_ptr<csv::StreamingReader>> OpenReader(\n+    const FileSource& source, const CsvFileFormat& format) {\n+  ARROW_ASSIGN_OR_RAISE(auto input, source.Open());\n+\n+  auto maybe_reader = csv::StreamingReader::Make(\n+      default_memory_pool(), std::move(input), default_read_options(),\n+      format.parse_options, format.convert_options);\n+  if (!maybe_reader.ok()) {\n+    return maybe_reader.status().WithMessage(\"Could not open IPC input source '\",\n+                                             source.path(), \"': \", maybe_reader.status());\n+  }\n+\n+  return std::move(maybe_reader).ValueOrDie();\n+}\n+\n+/// \\brief A ScanTask backed by an Csv file.\n+class CsvScanTask : public ScanTask {\n+ public:\n+  CsvScanTask(std::shared_ptr<const CsvFileFormat> format, FileSource source,\n+              std::shared_ptr<ScanOptions> options, std::shared_ptr<ScanContext> context)\n+      : ScanTask(std::move(options), std::move(context)),\n+        format_(std::move(format)),\n+        source_(std::move(source)) {}\n+\n+  Result<RecordBatchIterator> Execute() override {\n+    ARROW_ASSIGN_OR_RAISE(auto reader, OpenReader(source_, *format_));\n\nReview comment:\n       That sounds nasty indeed. The datasets layer doesn't know the type of these columns at all?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-27T19:36:03.189+0000",
                    "updated": "2020-04-27T19:36:03.189+0000",
                    "started": "2020-04-27T19:36:03.189+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "427810",
                    "issueId": "13283136"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283136/worklog/427816",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7033:\nURL: https://github.com/apache/arrow/pull/7033#discussion_r416097760\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_csv.cc\n##########\n@@ -0,0 +1,99 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/dataset/file_csv.h\"\n+\n+#include <memory>\n+#include <string>\n+\n+#include \"arrow/csv/options.h\"\n+#include \"arrow/csv/reader.h\"\n+#include \"arrow/dataset/dataset_internal.h\"\n+#include \"arrow/dataset/file_base.h\"\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/iterator.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+using internal::checked_cast;\n+using internal::checked_pointer_cast;\n+\n+static inline csv::ReadOptions default_read_options() {\n+  auto defaults = csv::ReadOptions::Defaults();\n+  defaults.use_threads = false;\n+  return defaults;\n+}\n+\n+static inline Result<std::shared_ptr<csv::StreamingReader>> OpenReader(\n+    const FileSource& source, const CsvFileFormat& format) {\n+  ARROW_ASSIGN_OR_RAISE(auto input, source.Open());\n+\n+  auto maybe_reader = csv::StreamingReader::Make(\n+      default_memory_pool(), std::move(input), default_read_options(),\n+      format.parse_options, format.convert_options);\n+  if (!maybe_reader.ok()) {\n+    return maybe_reader.status().WithMessage(\"Could not open IPC input source '\",\n+                                             source.path(), \"': \", maybe_reader.status());\n+  }\n+\n+  return std::move(maybe_reader).ValueOrDie();\n+}\n+\n+/// \\brief A ScanTask backed by an Csv file.\n+class CsvScanTask : public ScanTask {\n+ public:\n+  CsvScanTask(std::shared_ptr<const CsvFileFormat> format, FileSource source,\n+              std::shared_ptr<ScanOptions> options, std::shared_ptr<ScanContext> context)\n+      : ScanTask(std::move(options), std::move(context)),\n+        format_(std::move(format)),\n+        source_(std::move(source)) {}\n+\n+  Result<RecordBatchIterator> Execute() override {\n+    ARROW_ASSIGN_OR_RAISE(auto reader, OpenReader(source_, *format_));\n\nReview comment:\n       The type of field \"a\" can't be known without the schema from which it originates. When the filter is applied to a dataset in python or R the dataset's schema will be used to add cast expressions to the filter which will handle the necessary conversions. However in c++ we don't pass the dataset schema at scan time\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-27T19:43:11.570+0000",
                    "updated": "2020-04-27T19:43:11.570+0000",
                    "started": "2020-04-27T19:43:11.570+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "427816",
                    "issueId": "13283136"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283136/worklog/427818",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #7033:\nURL: https://github.com/apache/arrow/pull/7033#discussion_r416099536\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_csv.cc\n##########\n@@ -0,0 +1,99 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/dataset/file_csv.h\"\n+\n+#include <memory>\n+#include <string>\n+\n+#include \"arrow/csv/options.h\"\n+#include \"arrow/csv/reader.h\"\n+#include \"arrow/dataset/dataset_internal.h\"\n+#include \"arrow/dataset/file_base.h\"\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/iterator.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+using internal::checked_cast;\n+using internal::checked_pointer_cast;\n+\n+static inline csv::ReadOptions default_read_options() {\n+  auto defaults = csv::ReadOptions::Defaults();\n+  defaults.use_threads = false;\n+  return defaults;\n+}\n+\n+static inline Result<std::shared_ptr<csv::StreamingReader>> OpenReader(\n+    const FileSource& source, const CsvFileFormat& format) {\n+  ARROW_ASSIGN_OR_RAISE(auto input, source.Open());\n+\n+  auto maybe_reader = csv::StreamingReader::Make(\n+      default_memory_pool(), std::move(input), default_read_options(),\n+      format.parse_options, format.convert_options);\n+  if (!maybe_reader.ok()) {\n+    return maybe_reader.status().WithMessage(\"Could not open IPC input source '\",\n+                                             source.path(), \"': \", maybe_reader.status());\n+  }\n+\n+  return std::move(maybe_reader).ValueOrDie();\n+}\n+\n+/// \\brief A ScanTask backed by an Csv file.\n+class CsvScanTask : public ScanTask {\n+ public:\n+  CsvScanTask(std::shared_ptr<const CsvFileFormat> format, FileSource source,\n+              std::shared_ptr<ScanOptions> options, std::shared_ptr<ScanContext> context)\n+      : ScanTask(std::move(options), std::move(context)),\n+        format_(std::move(format)),\n+        source_(std::move(source)) {}\n+\n+  Result<RecordBatchIterator> Execute() override {\n+    ARROW_ASSIGN_OR_RAISE(auto reader, OpenReader(source_, *format_));\n\nReview comment:\n       So if e.g. two Parquet files in a dataset have different types for `a` or `b` (which may be a data error), that passes silently?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-27T19:46:06.838+0000",
                    "updated": "2020-04-27T19:46:06.838+0000",
                    "started": "2020-04-27T19:46:06.838+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "427818",
                    "issueId": "13283136"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283136/worklog/427830",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7033:\nURL: https://github.com/apache/arrow/pull/7033#discussion_r416110664\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_csv.cc\n##########\n@@ -0,0 +1,99 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/dataset/file_csv.h\"\n+\n+#include <memory>\n+#include <string>\n+\n+#include \"arrow/csv/options.h\"\n+#include \"arrow/csv/reader.h\"\n+#include \"arrow/dataset/dataset_internal.h\"\n+#include \"arrow/dataset/file_base.h\"\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/iterator.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+using internal::checked_cast;\n+using internal::checked_pointer_cast;\n+\n+static inline csv::ReadOptions default_read_options() {\n+  auto defaults = csv::ReadOptions::Defaults();\n+  defaults.use_threads = false;\n+  return defaults;\n+}\n+\n+static inline Result<std::shared_ptr<csv::StreamingReader>> OpenReader(\n+    const FileSource& source, const CsvFileFormat& format) {\n+  ARROW_ASSIGN_OR_RAISE(auto input, source.Open());\n+\n+  auto maybe_reader = csv::StreamingReader::Make(\n+      default_memory_pool(), std::move(input), default_read_options(),\n+      format.parse_options, format.convert_options);\n+  if (!maybe_reader.ok()) {\n+    return maybe_reader.status().WithMessage(\"Could not open IPC input source '\",\n+                                             source.path(), \"': \", maybe_reader.status());\n+  }\n+\n+  return std::move(maybe_reader).ValueOrDie();\n+}\n+\n+/// \\brief A ScanTask backed by an Csv file.\n+class CsvScanTask : public ScanTask {\n+ public:\n+  CsvScanTask(std::shared_ptr<const CsvFileFormat> format, FileSource source,\n+              std::shared_ptr<ScanOptions> options, std::shared_ptr<ScanContext> context)\n+      : ScanTask(std::move(options), std::move(context)),\n+        format_(std::move(format)),\n+        source_(std::move(source)) {}\n+\n+  Result<RecordBatchIterator> Execute() override {\n+    ARROW_ASSIGN_OR_RAISE(auto reader, OpenReader(source_, *format_));\n\nReview comment:\n       That's indeed a data error. Whether parquet or csv, in C++ this would be caught by the ScannerBuilder::Filter setter (which *does* have access to the dataset's schema), so maybe this edge case isn't interesting after all\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-27T20:04:16.818+0000",
                    "updated": "2020-04-27T20:04:16.818+0000",
                    "started": "2020-04-27T20:04:16.818+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "427830",
                    "issueId": "13283136"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283136/worklog/427856",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #7033:\nURL: https://github.com/apache/arrow/pull/7033#discussion_r416152095\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_csv.cc\n##########\n@@ -0,0 +1,99 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/dataset/file_csv.h\"\n+\n+#include <memory>\n+#include <string>\n+\n+#include \"arrow/csv/options.h\"\n+#include \"arrow/csv/reader.h\"\n+#include \"arrow/dataset/dataset_internal.h\"\n+#include \"arrow/dataset/file_base.h\"\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/iterator.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+using internal::checked_cast;\n+using internal::checked_pointer_cast;\n+\n+static inline csv::ReadOptions default_read_options() {\n+  auto defaults = csv::ReadOptions::Defaults();\n+  defaults.use_threads = false;\n+  return defaults;\n+}\n+\n+static inline Result<std::shared_ptr<csv::StreamingReader>> OpenReader(\n+    const FileSource& source, const CsvFileFormat& format) {\n+  ARROW_ASSIGN_OR_RAISE(auto input, source.Open());\n+\n+  auto maybe_reader = csv::StreamingReader::Make(\n+      default_memory_pool(), std::move(input), default_read_options(),\n+      format.parse_options, format.convert_options);\n+  if (!maybe_reader.ok()) {\n+    return maybe_reader.status().WithMessage(\"Could not open IPC input source '\",\n+                                             source.path(), \"': \", maybe_reader.status());\n+  }\n+\n+  return std::move(maybe_reader).ValueOrDie();\n+}\n+\n+/// \\brief A ScanTask backed by an Csv file.\n+class CsvScanTask : public ScanTask {\n+ public:\n+  CsvScanTask(std::shared_ptr<const CsvFileFormat> format, FileSource source,\n+              std::shared_ptr<ScanOptions> options, std::shared_ptr<ScanContext> context)\n+      : ScanTask(std::move(options), std::move(context)),\n+        format_(std::move(format)),\n+        source_(std::move(source)) {}\n+\n+  Result<RecordBatchIterator> Execute() override {\n+    ARROW_ASSIGN_OR_RAISE(auto reader, OpenReader(source_, *format_));\n\nReview comment:\n       In database systems, it is required to use a pre-determined schema when reading CSV files. If we want to support schema inference, we could use a part of a file to \"sniff\" the schema but then assume it going forward. That's a bit better than forcing people to write down the schema\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-27T21:12:00.140+0000",
                    "updated": "2020-04-27T21:12:00.140+0000",
                    "started": "2020-04-27T21:12:00.140+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "427856",
                    "issueId": "13283136"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283136/worklog/427857",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #7033:\nURL: https://github.com/apache/arrow/pull/7033#discussion_r416152095\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/file_csv.cc\n##########\n@@ -0,0 +1,99 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow/dataset/file_csv.h\"\n+\n+#include <memory>\n+#include <string>\n+\n+#include \"arrow/csv/options.h\"\n+#include \"arrow/csv/reader.h\"\n+#include \"arrow/dataset/dataset_internal.h\"\n+#include \"arrow/dataset/file_base.h\"\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/util/iterator.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+using internal::checked_cast;\n+using internal::checked_pointer_cast;\n+\n+static inline csv::ReadOptions default_read_options() {\n+  auto defaults = csv::ReadOptions::Defaults();\n+  defaults.use_threads = false;\n+  return defaults;\n+}\n+\n+static inline Result<std::shared_ptr<csv::StreamingReader>> OpenReader(\n+    const FileSource& source, const CsvFileFormat& format) {\n+  ARROW_ASSIGN_OR_RAISE(auto input, source.Open());\n+\n+  auto maybe_reader = csv::StreamingReader::Make(\n+      default_memory_pool(), std::move(input), default_read_options(),\n+      format.parse_options, format.convert_options);\n+  if (!maybe_reader.ok()) {\n+    return maybe_reader.status().WithMessage(\"Could not open IPC input source '\",\n+                                             source.path(), \"': \", maybe_reader.status());\n+  }\n+\n+  return std::move(maybe_reader).ValueOrDie();\n+}\n+\n+/// \\brief A ScanTask backed by an Csv file.\n+class CsvScanTask : public ScanTask {\n+ public:\n+  CsvScanTask(std::shared_ptr<const CsvFileFormat> format, FileSource source,\n+              std::shared_ptr<ScanOptions> options, std::shared_ptr<ScanContext> context)\n+      : ScanTask(std::move(options), std::move(context)),\n+        format_(std::move(format)),\n+        source_(std::move(source)) {}\n+\n+  Result<RecordBatchIterator> Execute() override {\n+    ARROW_ASSIGN_OR_RAISE(auto reader, OpenReader(source_, *format_));\n\nReview comment:\n       In most database systems, it is required to use a pre-determined schema when reading CSV files. If we want to support schema inference, we could use a part of a file to \"sniff\" the schema but then assume it going forward. That's a bit better than forcing people to write down the schema\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-27T21:12:13.673+0000",
                    "updated": "2020-04-27T21:12:13.673+0000",
                    "started": "2020-04-27T21:12:13.673+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "427857",
                    "issueId": "13283136"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 22800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@17caf69f[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7f7cc393[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@16ec304e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@f95195b[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@500c03e6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@144a7990[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@63d35517[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@44abd7f7[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7488efb7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@33498e4f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4a4b0edc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@50c56c0d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 22800,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Apr 30 17:50:25 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-04-30T17:50:25.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7759/watchers",
            "watchCount": 5,
            "isWatching": false
        },
        "created": "2020-02-04T03:04:03.000+0000",
        "updated": "2020-04-30T17:50:25.000+0000",
        "timeoriginalestimate": null,
        "description": "This should be a minimal implementation that binds 1-1 file and ScanTask for now. Streaming optimizations  can be done in ARROW-3410.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 22800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Dataset] Add CsvFileFormat for CSV support",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283136/comment/17029568",
                    "id": "17029568",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "[~apitrou] do you think you could take a look at this?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2020-02-04T04:29:54.969+0000",
                    "updated": "2020-02-04T04:29:54.969+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283136/comment/17029756",
                    "id": "17029756",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Right, I'm adding it to my list of bugs :-)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2020-02-04T11:00:56.281+0000",
                    "updated": "2020-02-04T11:00:56.281+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283136/comment/17040088",
                    "id": "17040088",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "I think this will require some nested parallelism support to avoid deadlocks (if e.g. the dataset scanner spawns a task that calls the CSV reader which itself calls TaskGroup::Finish).",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2020-02-19T14:22:01.781+0000",
                    "updated": "2020-02-19T14:22:01.781+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283136/comment/17096816",
                    "id": "17096816",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 7033\n[https://github.com/apache/arrow/pull/7033]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-04-30T17:50:25.744+0000",
                    "updated": "2020-04-30T17:50:25.744+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|z0b4hs:",
        "customfield_12314139": null
    }
}