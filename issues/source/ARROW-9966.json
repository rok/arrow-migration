{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13326909",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326909",
    "key": "ARROW-9966",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 7800,
            "total": 7800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 7800,
            "total": 7800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9966/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 13,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326909/worklog/481608",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao opened a new pull request #8165:\nURL: https://github.com/apache/arrow/pull/8165\n\n\n   This PR speeds up some of the aggregations in arrow by 10-60% by simplifying their logic and overall allowing the optimizer to do its work.\r\n   \r\n   The first 3 commits (up to 29754d7) simply improve the benchmark itself by:\r\n   * not taking the creation of the arrays into account, only the computation, \r\n   * moving it to another file\r\n   * adding randomness to the data to reduce spurious results due to speculative execution and others\r\n   * add case for data with nulls, since the kernels branch out on that condition\r\n   \r\n   The last 3 commits are the optimizations themselves.\r\n   \r\n   ```\r\n   sum 512                 time:   [535.66 ns 536.11 ns 536.57 ns]                     \r\n                           change: [-58.421% -58.222% -57.957%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 10 outliers among 100 measurements (10.00%)\r\n     4 (4.00%) high mild\r\n     6 (6.00%) high severe\r\n   \r\n   min 512                 time:   [766.77 ns 775.85 ns 788.35 ns]                     \r\n                           change: [-41.555% -41.017% -40.388%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 10 outliers among 100 measurements (10.00%)\r\n     4 (4.00%) high mild\r\n     6 (6.00%) high severe\r\n   \r\n   sum nulls 512           time:   [1.0968 us 1.1000 us 1.1038 us]                           \r\n                           change: [-8.9918% -7.6232% -5.7130%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 15 outliers among 100 measurements (15.00%)\r\n     3 (3.00%) high mild\r\n     12 (12.00%) high severe\r\n   \r\n   min nulls 512           time:   [1.3208 us 1.3242 us 1.3286 us]                           \r\n                           change: [-11.028% -10.240% -9.4581%] (p = 0.00 < 0.05)\r\n                           Performance has improved.\r\n   Found 11 outliers among 100 measurements (11.00%)\r\n     3 (3.00%) high mild\r\n     8 (8.00%) high severe\r\n   ```\r\n   \r\n   Command:\r\n   ```\r\n   git checkout 29754d7 && cargo bench --bench aggregate_kernels && git checkout agg_arrow && cargo bench --bench aggregate_kernels\r\n   ```\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-10T17:36:23.975+0000",
                    "updated": "2020-09-10T17:36:23.975+0000",
                    "started": "2020-09-10T17:36:23.975+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "481608",
                    "issueId": "13326909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326909/worklog/481616",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8165:\nURL: https://github.com/apache/arrow/pull/8165#issuecomment-690568469\n\n\n   https://issues.apache.org/jira/browse/ARROW-9966\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-10T17:46:46.343+0000",
                    "updated": "2020-09-10T17:46:46.343+0000",
                    "started": "2020-09-10T17:46:46.343+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "481616",
                    "issueId": "13326909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326909/worklog/482012",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #8165:\nURL: https://github.com/apache/arrow/pull/8165#discussion_r486971637\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       was the ordering here originally incorrect?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-11T11:01:54.413+0000",
                    "updated": "2020-09-11T11:01:54.413+0000",
                    "started": "2020-09-11T11:01:54.413+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "482012",
                    "issueId": "13326909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326909/worklog/482015",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8165:\nURL: https://github.com/apache/arrow/pull/8165#discussion_r486972953\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       No, but a change in the implementation of `min_max_helper` made it require the opposite. We could probably change it to keep this unchanged, but since this is so specific to this module, I did not bother.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-11T11:05:03.537+0000",
                    "updated": "2020-09-11T11:05:03.537+0000",
                    "started": "2020-09-11T11:05:03.537+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "482015",
                    "issueId": "13326909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326909/worklog/482018",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #8165:\nURL: https://github.com/apache/arrow/pull/8165#discussion_r486975818\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       No worries, happy with the change\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-11T11:11:34.193+0000",
                    "updated": "2020-09-11T11:11:34.193+0000",
                    "started": "2020-09-11T11:11:34.193+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "482018",
                    "issueId": "13326909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326909/worklog/482028",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me closed pull request #8165:\nURL: https://github.com/apache/arrow/pull/8165\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-11T11:40:24.307+0000",
                    "updated": "2020-09-11T11:40:24.307+0000",
                    "started": "2020-09-11T11:40:24.306+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "482028",
                    "issueId": "13326909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326909/worklog/482575",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8165:\nURL: https://github.com/apache/arrow/pull/8165#discussion_r486972953\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       No, but a change in the implementation of `min_max_helper` made it require the opposite. We could probably change it to keep this unchanged, but since this is so specific to this module, I did not bother.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T20:03:34.919+0000",
                    "updated": "2020-09-12T20:03:34.919+0000",
                    "started": "2020-09-12T20:03:34.919+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "482575",
                    "issueId": "13326909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326909/worklog/482827",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me closed pull request #8165:\nURL: https://github.com/apache/arrow/pull/8165\n\n\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T20:25:03.778+0000",
                    "updated": "2020-09-12T20:25:03.778+0000",
                    "started": "2020-09-12T20:25:03.778+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "482827",
                    "issueId": "13326909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326909/worklog/482901",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #8165:\nURL: https://github.com/apache/arrow/pull/8165#discussion_r486971637\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       was the ordering here originally incorrect?\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       No worries, happy with the change\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       was the ordering here originally incorrect?\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       No worries, happy with the change\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T20:30:48.803+0000",
                    "updated": "2020-09-12T20:30:48.803+0000",
                    "started": "2020-09-12T20:30:48.803+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "482901",
                    "issueId": "13326909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326909/worklog/483037",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8165:\nURL: https://github.com/apache/arrow/pull/8165#discussion_r486972953\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       No, but a change in the implementation of `min_max_helper` made it require the opposite. We could probably change it to keep this unchanged, but since this is so specific to this module, I did not bother.\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       No, but a change in the implementation of `min_max_helper` made it require the opposite. We could probably change it to keep this unchanged, but since this is so specific to this module, I did not bother.\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       No, but a change in the implementation of `min_max_helper` made it require the opposite. We could probably change it to keep this unchanged, but since this is so specific to this module, I did not bother.\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       No, but a change in the implementation of `min_max_helper` made it require the opposite. We could probably change it to keep this unchanged, but since this is so specific to this module, I did not bother.\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       No, but a change in the implementation of `min_max_helper` made it require the opposite. We could probably change it to keep this unchanged, but since this is so specific to this module, I did not bother.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T20:48:54.989+0000",
                    "updated": "2020-09-12T20:48:54.989+0000",
                    "started": "2020-09-12T20:48:54.989+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "483037",
                    "issueId": "13326909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326909/worklog/483231",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me closed pull request #8165:\nURL: https://github.com/apache/arrow/pull/8165\n\n\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T21:36:56.436+0000",
                    "updated": "2020-09-12T21:36:56.436+0000",
                    "started": "2020-09-12T21:36:56.436+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "483231",
                    "issueId": "13326909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326909/worklog/483302",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #8165:\nURL: https://github.com/apache/arrow/pull/8165#discussion_r486971637\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       was the ordering here originally incorrect?\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       No worries, happy with the change\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       was the ordering here originally incorrect?\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       No worries, happy with the change\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       was the ordering here originally incorrect?\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       No worries, happy with the change\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       was the ordering here originally incorrect?\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       No worries, happy with the change\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       was the ordering here originally incorrect?\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       No worries, happy with the change\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       was the ordering here originally incorrect?\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       No worries, happy with the change\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       was the ordering here originally incorrect?\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       No worries, happy with the change\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T21:45:03.250+0000",
                    "updated": "2020-09-12T21:45:03.250+0000",
                    "started": "2020-09-12T21:45:03.250+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "483302",
                    "issueId": "13326909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326909/worklog/483378",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8165:\nURL: https://github.com/apache/arrow/pull/8165#discussion_r486972953\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       No, but a change in the implementation of `min_max_helper` made it require the opposite. We could probably change it to keep this unchanged, but since this is so specific to this module, I did not bother.\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       No, but a change in the implementation of `min_max_helper` made it require the opposite. We could probably change it to keep this unchanged, but since this is so specific to this module, I did not bother.\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -27,40 +27,51 @@ pub fn min<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a < b)\n+    min_max_helper(array, |a, b| a > b)\n }\n \n /// Returns the maximum value in the array, according to the natural order.\n pub fn max<T>(array: &PrimitiveArray<T>) -> Option<T::Native>\n where\n     T: ArrowNumericType,\n {\n-    min_max_helper(array, |a, b| a > b)\n+    min_max_helper(array, |a, b| a < b)\n\nReview comment:\n       No, but a change in the implementation of `min_max_helper` made it require the opposite. We could probably change it to keep this unchanged, but since this is so specific to this module, I did not bother.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T21:51:01.802+0000",
                    "updated": "2020-09-12T21:51:01.802+0000",
                    "started": "2020-09-12T21:51:01.802+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "483378",
                    "issueId": "13326909"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 7800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@a193843[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5de2cd8f[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@59008be0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@12c5bbfa[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1278abf8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4b27cc14[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1625111b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@2900624e[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7ef02bfd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@bc21f5b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@35516af1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1f697c07[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 7800,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Sep 11 11:40:17 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-09-11T11:40:17.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9966/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-09-10T16:52:22.000+0000",
        "updated": "2020-09-12T21:51:02.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 7800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Speedup aggregate kernels",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13326909/comment/17194226",
                    "id": "17194226",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "body": "Issue resolved by pull request 8165\n[https://github.com/apache/arrow/pull/8165]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "created": "2020-09-11T11:40:17.178+0000",
                    "updated": "2020-09-11T11:40:17.178+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0ihns:",
        "customfield_12314139": null
    }
}