{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13269886",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269886",
    "key": "ARROW-7227",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=brillsp",
            "name": "brillsp",
            "key": "brillsp",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Zhuo Peng",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=brillsp",
            "name": "brillsp",
            "key": "brillsp",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Zhuo Peng",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=brillsp",
            "name": "brillsp",
            "key": "brillsp",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Zhuo Peng",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7227/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 28,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269886/worklog/347510",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "brills commented on issue #5804: ARROW-7227: [Python] Added a python wrapper for ConcatenateTablesWithPromotions\nURL: https://github.com/apache/arrow/pull/5804#issuecomment-557162580\n \n \n   Filed https://issues.apache.org/jira/browse/ARROW-7227\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-21T16:26:23.883+0000",
                    "updated": "2019-11-21T16:26:23.883+0000",
                    "started": "2019-11-21T16:26:23.883+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "347510",
                    "issueId": "13269886"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269886/worklog/347516",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #5804: ARROW-7227: [Python] Added a python wrapper for ConcatenateTablesWithPromotions\nURL: https://github.com/apache/arrow/pull/5804#issuecomment-557164980\n \n \n   https://issues.apache.org/jira/browse/ARROW-7227\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-21T16:31:17.976+0000",
                    "updated": "2019-11-21T16:31:17.976+0000",
                    "started": "2019-11-21T16:31:17.976+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "347516",
                    "issueId": "13269886"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269886/worklog/347846",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5804: ARROW-7227: [Python] Added a python wrapper for ConcatenateTablesWithPromotions\nURL: https://github.com/apache/arrow/pull/5804#discussion_r349392044\n \n \n\n ##########\n File path: python/pyarrow/table.pxi\n ##########\n @@ -1638,26 +1638,48 @@ def table(data, names=None, schema=None, metadata=None):\n             \"Expected pandas DataFrame, python dictionary or list of arrays\")\n \n \n-def concat_tables(tables):\n+def concat_tables(tables, with_promotion=False, MemoryPool memory_pool=None):\n \n Review comment:\n   Small nit: I might call this argument `promote=False` myself, but either way is okay.\r\n   \r\n   Do you have thoughts about what the API might look like if we permitted safe casts? \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-22T01:00:55.639+0000",
                    "updated": "2019-11-22T01:00:55.639+0000",
                    "started": "2019-11-22T01:00:55.638+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "347846",
                    "issueId": "13269886"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269886/worklog/347847",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "brills commented on pull request #5804: ARROW-7227: [Python] Added a python wrapper for ConcatenateTablesWithPromotions\nURL: https://github.com/apache/arrow/pull/5804#discussion_r349393253\n \n \n\n ##########\n File path: python/pyarrow/table.pxi\n ##########\n @@ -1638,26 +1638,48 @@ def table(data, names=None, schema=None, metadata=None):\n             \"Expected pandas DataFrame, python dictionary or list of arrays\")\n \n \n-def concat_tables(tables):\n+def concat_tables(tables, with_promotion=False, MemoryPool memory_pool=None):\n \n Review comment:\n   Do \"safe casts\" mean copy-free casts?\r\n   \r\n   Since we agreed on having an options object (probably two options object, one for concat, the other one for UnifySchema), the casting can be an option in UnifySchemaOptions?\r\n   \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-22T01:06:12.658+0000",
                    "updated": "2019-11-22T01:06:12.658+0000",
                    "started": "2019-11-22T01:06:12.658+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "347847",
                    "issueId": "13269886"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269886/worklog/347865",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "brills commented on pull request #5804: ARROW-7227: [Python] Added a python wrapper for ConcatenateTablesWithPromotions\nURL: https://github.com/apache/arrow/pull/5804#discussion_r349396927\n \n \n\n ##########\n File path: python/pyarrow/table.pxi\n ##########\n @@ -1638,26 +1638,48 @@ def table(data, names=None, schema=None, metadata=None):\n             \"Expected pandas DataFrame, python dictionary or list of arrays\")\n \n \n-def concat_tables(tables):\n+def concat_tables(tables, with_promotion=False, MemoryPool memory_pool=None):\n \n Review comment:\n   Changed to `promote`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-22T01:22:31.936+0000",
                    "updated": "2019-11-22T01:22:31.936+0000",
                    "started": "2019-11-22T01:22:31.935+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "347865",
                    "issueId": "13269886"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269886/worklog/347866",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "brills commented on pull request #5804: ARROW-7227: [Python] Added a python wrapper for ConcatenateTablesWithPromotions\nURL: https://github.com/apache/arrow/pull/5804#discussion_r349396927\n \n \n\n ##########\n File path: python/pyarrow/table.pxi\n ##########\n @@ -1638,26 +1638,48 @@ def table(data, names=None, schema=None, metadata=None):\n             \"Expected pandas DataFrame, python dictionary or list of arrays\")\n \n \n-def concat_tables(tables):\n+def concat_tables(tables, with_promotion=False, MemoryPool memory_pool=None):\n \n Review comment:\n   Changed to `promote`. I'm keeping this open so that the answer to the question can be visible.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-22T01:22:56.060+0000",
                    "updated": "2019-11-22T01:22:56.060+0000",
                    "started": "2019-11-22T01:22:56.060+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "347866",
                    "issueId": "13269886"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269886/worklog/347867",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "brills commented on issue #5804: ARROW-7227: [Python] Added a python wrapper for ConcatenateTablesWithPromotions\nURL: https://github.com/apache/arrow/pull/5804#issuecomment-557345816\n \n \n   PTAL.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-22T01:23:46.431+0000",
                    "updated": "2019-11-22T01:23:46.431+0000",
                    "started": "2019-11-22T01:23:46.431+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "347867",
                    "issueId": "13269886"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269886/worklog/348271",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on pull request #5804: ARROW-7227: [Python] Added a python wrapper for ConcatenateTablesWithPromotions\nURL: https://github.com/apache/arrow/pull/5804#discussion_r349747877\n \n \n\n ##########\n File path: python/pyarrow/table.pxi\n ##########\n @@ -1638,26 +1638,47 @@ def table(data, names=None, schema=None, metadata=None):\n             \"Expected pandas DataFrame, python dictionary or list of arrays\")\n \n \n-def concat_tables(tables):\n+def concat_tables(tables, promote=False, MemoryPool memory_pool=None):\n     \"\"\"\n-    Perform zero-copy concatenation of pyarrow.Table objects. Raises exception\n-    if all of the Table schemas are not the same\n+    Perform zero-copy concatenation of pyarrow.Table objects.\n+\n+    If promote==False, the schemas of all the Tables must be the same\n+    (modulo the metadata), otherwise an exception will be raised. The result\n+    Table will share the metadata with the first table.\n+\n+    If promote==True, columns of the same name will be concatenated.\n+    They should be of the same type, or be of type NULL, in which case it will\n+    be promoted to the type of other corresponding columns with null values\n+    filled.  If a table is missing a particular field, null values of the\n+    appropriate type will be generated to take the place of the missing field.\n+    The new schema will share the metadata with the first table. Each field in\n+    the new schema will share the metadata with the first table which has the\n+    field defined.\n \n     Parameters\n     ----------\n     tables : iterable of pyarrow.Table objects\n-    output_name : string, default None\n-      A name for the output table, if any\n+    promote: bool, default False\n+        if True, concatenate tables with null-filling and type promotion.\n+    memory_pool : MemoryPool, default None\n+        For memory allocations, if required, otherwise use default pool\n     \"\"\"\n     cdef:\n         vector[shared_ptr[CTable]] c_tables\n-        shared_ptr[CTable] c_result\n+        CResult[shared_ptr[CTable]] c_result\n+        shared_ptr[CTable] c_result_table\n+        CMemoryPool* pool = maybe_unbox_memory_pool(memory_pool)\n         Table table\n \n     for table in tables:\n         c_tables.push_back(table.sp_table)\n \n-    with nogil:\n-        check_status(ConcatenateTables(c_tables, &c_result))\n+    if promote:\n \n Review comment:\n   The whole if-block could be wrapped into `with nogil`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-22T19:03:49.754+0000",
                    "updated": "2019-11-22T19:03:49.754+0000",
                    "started": "2019-11-22T19:03:49.753+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "348271",
                    "issueId": "13269886"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269886/worklog/348380",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "brills commented on pull request #5804: ARROW-7227: [Python] Added a python wrapper for ConcatenateTablesWithPromotions\nURL: https://github.com/apache/arrow/pull/5804#discussion_r349808934\n \n \n\n ##########\n File path: python/pyarrow/table.pxi\n ##########\n @@ -1638,26 +1638,47 @@ def table(data, names=None, schema=None, metadata=None):\n             \"Expected pandas DataFrame, python dictionary or list of arrays\")\n \n \n-def concat_tables(tables):\n+def concat_tables(tables, promote=False, MemoryPool memory_pool=None):\n     \"\"\"\n-    Perform zero-copy concatenation of pyarrow.Table objects. Raises exception\n-    if all of the Table schemas are not the same\n+    Perform zero-copy concatenation of pyarrow.Table objects.\n+\n+    If promote==False, the schemas of all the Tables must be the same\n+    (modulo the metadata), otherwise an exception will be raised. The result\n+    Table will share the metadata with the first table.\n+\n+    If promote==True, columns of the same name will be concatenated.\n+    They should be of the same type, or be of type NULL, in which case it will\n+    be promoted to the type of other corresponding columns with null values\n+    filled.  If a table is missing a particular field, null values of the\n+    appropriate type will be generated to take the place of the missing field.\n+    The new schema will share the metadata with the first table. Each field in\n+    the new schema will share the metadata with the first table which has the\n+    field defined.\n \n     Parameters\n     ----------\n     tables : iterable of pyarrow.Table objects\n-    output_name : string, default None\n-      A name for the output table, if any\n+    promote: bool, default False\n+        if True, concatenate tables with null-filling and type promotion.\n+    memory_pool : MemoryPool, default None\n+        For memory allocations, if required, otherwise use default pool\n     \"\"\"\n     cdef:\n         vector[shared_ptr[CTable]] c_tables\n-        shared_ptr[CTable] c_result\n+        CResult[shared_ptr[CTable]] c_result\n+        shared_ptr[CTable] c_result_table\n+        CMemoryPool* pool = maybe_unbox_memory_pool(memory_pool)\n         Table table\n \n     for table in tables:\n         c_tables.push_back(table.sp_table)\n \n-    with nogil:\n-        check_status(ConcatenateTables(c_tables, &c_result))\n+    if promote:\n \n Review comment:\n   I think GetResultValue needs to grab nogil?\r\n   \r\n   Error compiling Cython file:\r\n   ------------------------------------------------------------\r\n   ...\r\n           c_tables.push_back(table.sp_table)\r\n   \r\n       if promote:\r\n           with nogil:\r\n               c_result = ConcatenateTablesWithPromotion(c_tables, pool)\r\n               c_result_table = GetResultValue(c_result)\r\n                                             ^\r\n   ------------------------------------------------------------\r\n   \r\n   pyarrow/table.pxi:1679:43: Calling gil-requiring function not allowed without gil\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-22T21:50:06.172+0000",
                    "updated": "2019-11-22T21:50:06.172+0000",
                    "started": "2019-11-22T21:50:06.172+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "348380",
                    "issueId": "13269886"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269886/worklog/348381",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "brills commented on pull request #5804: ARROW-7227: [Python] Added a python wrapper for ConcatenateTablesWithPromotions\nURL: https://github.com/apache/arrow/pull/5804#discussion_r349808934\n \n \n\n ##########\n File path: python/pyarrow/table.pxi\n ##########\n @@ -1638,26 +1638,47 @@ def table(data, names=None, schema=None, metadata=None):\n             \"Expected pandas DataFrame, python dictionary or list of arrays\")\n \n \n-def concat_tables(tables):\n+def concat_tables(tables, promote=False, MemoryPool memory_pool=None):\n     \"\"\"\n-    Perform zero-copy concatenation of pyarrow.Table objects. Raises exception\n-    if all of the Table schemas are not the same\n+    Perform zero-copy concatenation of pyarrow.Table objects.\n+\n+    If promote==False, the schemas of all the Tables must be the same\n+    (modulo the metadata), otherwise an exception will be raised. The result\n+    Table will share the metadata with the first table.\n+\n+    If promote==True, columns of the same name will be concatenated.\n+    They should be of the same type, or be of type NULL, in which case it will\n+    be promoted to the type of other corresponding columns with null values\n+    filled.  If a table is missing a particular field, null values of the\n+    appropriate type will be generated to take the place of the missing field.\n+    The new schema will share the metadata with the first table. Each field in\n+    the new schema will share the metadata with the first table which has the\n+    field defined.\n \n     Parameters\n     ----------\n     tables : iterable of pyarrow.Table objects\n-    output_name : string, default None\n-      A name for the output table, if any\n+    promote: bool, default False\n+        if True, concatenate tables with null-filling and type promotion.\n+    memory_pool : MemoryPool, default None\n+        For memory allocations, if required, otherwise use default pool\n     \"\"\"\n     cdef:\n         vector[shared_ptr[CTable]] c_tables\n-        shared_ptr[CTable] c_result\n+        CResult[shared_ptr[CTable]] c_result\n+        shared_ptr[CTable] c_result_table\n+        CMemoryPool* pool = maybe_unbox_memory_pool(memory_pool)\n         Table table\n \n     for table in tables:\n         c_tables.push_back(table.sp_table)\n \n-    with nogil:\n-        check_status(ConcatenateTables(c_tables, &c_result))\n+    if promote:\n \n Review comment:\n   I think GetResultValue needs to grab nogil?\r\n   \r\n   ```\r\n   Error compiling Cython file:\r\n   ------------------------------------------------------------\r\n   ...\r\n           c_tables.push_back(table.sp_table)\r\n   \r\n       if promote:\r\n           with nogil:\r\n               c_result = ConcatenateTablesWithPromotion(c_tables, pool)\r\n               c_result_table = GetResultValue(c_result)\r\n                                             ^\r\n   ------------------------------------------------------------\r\n   \r\n   pyarrow/table.pxi:1679:43: Calling gil-requiring function not allowed without gil\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-22T21:50:20.732+0000",
                    "updated": "2019-11-22T21:50:20.732+0000",
                    "started": "2019-11-22T21:50:20.732+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "348381",
                    "issueId": "13269886"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269886/worklog/348382",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "brills commented on pull request #5804: ARROW-7227: [Python] Added a python wrapper for ConcatenateTablesWithPromotions\nURL: https://github.com/apache/arrow/pull/5804#discussion_r349810203\n \n \n\n ##########\n File path: python/pyarrow/table.pxi\n ##########\n @@ -1638,26 +1638,47 @@ def table(data, names=None, schema=None, metadata=None):\n             \"Expected pandas DataFrame, python dictionary or list of arrays\")\n \n \n-def concat_tables(tables):\n+def concat_tables(tables, promote=False, MemoryPool memory_pool=None):\n     \"\"\"\n-    Perform zero-copy concatenation of pyarrow.Table objects. Raises exception\n-    if all of the Table schemas are not the same\n+    Perform zero-copy concatenation of pyarrow.Table objects.\n+\n+    If promote==False, the schemas of all the Tables must be the same\n+    (modulo the metadata), otherwise an exception will be raised. The result\n+    Table will share the metadata with the first table.\n+\n+    If promote==True, columns of the same name will be concatenated.\n+    They should be of the same type, or be of type NULL, in which case it will\n+    be promoted to the type of other corresponding columns with null values\n+    filled.  If a table is missing a particular field, null values of the\n+    appropriate type will be generated to take the place of the missing field.\n+    The new schema will share the metadata with the first table. Each field in\n+    the new schema will share the metadata with the first table which has the\n+    field defined.\n \n     Parameters\n     ----------\n     tables : iterable of pyarrow.Table objects\n-    output_name : string, default None\n-      A name for the output table, if any\n+    promote: bool, default False\n+        if True, concatenate tables with null-filling and type promotion.\n+    memory_pool : MemoryPool, default None\n+        For memory allocations, if required, otherwise use default pool\n     \"\"\"\n     cdef:\n         vector[shared_ptr[CTable]] c_tables\n-        shared_ptr[CTable] c_result\n+        CResult[shared_ptr[CTable]] c_result\n+        shared_ptr[CTable] c_result_table\n+        CMemoryPool* pool = maybe_unbox_memory_pool(memory_pool)\n         Table table\n \n     for table in tables:\n         c_tables.push_back(table.sp_table)\n \n-    with nogil:\n-        check_status(ConcatenateTables(c_tables, &c_result))\n+    if promote:\n \n Review comment:\n   hmm..\r\n   \r\n   I did find other callsites of GetResultValue with gil released though.\r\n   \r\n   But besides that, `promote` is a python bool and to get its value I guess GIL needs to be held?\r\n   \r\n   ```\r\n   Error compiling Cython file:\r\n   ------------------------------------------------------------\r\n   ...\r\n   \r\n       for table in tables:\r\n           c_tables.push_back(table.sp_table)\r\n   \r\n       with nogil:\r\n           if promote:\r\n             ^\r\n   ------------------------------------------------------------\r\n   \r\n   pyarrow/table.pxi:1677:11: Truth-testing Python object not allowed without gil\r\n   \r\n   Error compiling Cython file:\r\n   ------------------------------------------------------------\r\n   ...\r\n           c_tables.push_back(table.sp_table)\r\n   \r\n       with nogil:\r\n           if promote:\r\n                   c_result = ConcatenateTablesWithPromotion(c_tables, pool)\r\n                   c_result_table = GetResultValue(c_result)\r\n                                                 ^\r\n   ------------------------------------------------------------\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-22T21:54:04.292+0000",
                    "updated": "2019-11-22T21:54:04.292+0000",
                    "started": "2019-11-22T21:54:04.291+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "348382",
                    "issueId": "13269886"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269886/worklog/348390",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "brills commented on pull request #5804: ARROW-7227: [Python] Added a python wrapper for ConcatenateTablesWithPromotions\nURL: https://github.com/apache/arrow/pull/5804#discussion_r349816316\n \n \n\n ##########\n File path: python/pyarrow/table.pxi\n ##########\n @@ -1638,26 +1638,47 @@ def table(data, names=None, schema=None, metadata=None):\n             \"Expected pandas DataFrame, python dictionary or list of arrays\")\n \n \n-def concat_tables(tables):\n+def concat_tables(tables, promote=False, MemoryPool memory_pool=None):\n     \"\"\"\n-    Perform zero-copy concatenation of pyarrow.Table objects. Raises exception\n-    if all of the Table schemas are not the same\n+    Perform zero-copy concatenation of pyarrow.Table objects.\n+\n+    If promote==False, the schemas of all the Tables must be the same\n+    (modulo the metadata), otherwise an exception will be raised. The result\n+    Table will share the metadata with the first table.\n+\n+    If promote==True, columns of the same name will be concatenated.\n+    They should be of the same type, or be of type NULL, in which case it will\n+    be promoted to the type of other corresponding columns with null values\n+    filled.  If a table is missing a particular field, null values of the\n+    appropriate type will be generated to take the place of the missing field.\n+    The new schema will share the metadata with the first table. Each field in\n+    the new schema will share the metadata with the first table which has the\n+    field defined.\n \n     Parameters\n     ----------\n     tables : iterable of pyarrow.Table objects\n-    output_name : string, default None\n-      A name for the output table, if any\n+    promote: bool, default False\n+        if True, concatenate tables with null-filling and type promotion.\n+    memory_pool : MemoryPool, default None\n+        For memory allocations, if required, otherwise use default pool\n     \"\"\"\n     cdef:\n         vector[shared_ptr[CTable]] c_tables\n-        shared_ptr[CTable] c_result\n+        CResult[shared_ptr[CTable]] c_result\n+        shared_ptr[CTable] c_result_table\n+        CMemoryPool* pool = maybe_unbox_memory_pool(memory_pool)\n         Table table\n \n     for table in tables:\n         c_tables.push_back(table.sp_table)\n \n-    with nogil:\n-        check_status(ConcatenateTables(c_tables, &c_result))\n+    if promote:\n \n Review comment:\n   Ah. https://github.com/apache/arrow/commit/c20aaa0c1f5d6d1281850078703f08b5a6e3d4cd\r\n   \r\n   Rebased and this time it should work.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-22T22:14:33.723+0000",
                    "updated": "2019-11-22T22:14:33.723+0000",
                    "started": "2019-11-22T22:14:33.722+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "348390",
                    "issueId": "13269886"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269886/worklog/348530",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on pull request #5804: ARROW-7227: [Python] Added a python wrapper for ConcatenateTablesWithPromotions\nURL: https://github.com/apache/arrow/pull/5804#discussion_r349877528\n \n \n\n ##########\n File path: python/pyarrow/table.pxi\n ##########\n @@ -1669,26 +1669,46 @@ def table(data, names=None, schema=None, metadata=None):\n             \"Expected pandas DataFrame, python dictionary or list of arrays\")\n \n \n-def concat_tables(tables):\n+def concat_tables(tables, promote=False, MemoryPool memory_pool=None):\n     \"\"\"\n-    Perform zero-copy concatenation of pyarrow.Table objects. Raises exception\n-    if all of the Table schemas are not the same\n+    Perform zero-copy concatenation of pyarrow.Table objects.\n+\n+    If promote==False, the schemas of all the Tables must be the same\n+    (modulo the metadata), otherwise an exception will be raised. The result\n+    Table will share the metadata with the first table.\n+\n+    If promote==True, columns of the same name will be concatenated.\n+    They should be of the same type, or be of type NULL, in which case it will\n+    be promoted to the type of other corresponding columns with null values\n+    filled.  If a table is missing a particular field, null values of the\n+    appropriate type will be generated to take the place of the missing field.\n+    The new schema will share the metadata with the first table. Each field in\n+    the new schema will share the metadata with the first table which has the\n+    field defined.\n \n     Parameters\n     ----------\n     tables : iterable of pyarrow.Table objects\n-    output_name : string, default None\n-      A name for the output table, if any\n+    promote: bool, default False\n+        if True, concatenate tables with null-filling and type promotion.\n+    memory_pool : MemoryPool, default None\n+        For memory allocations, if required, otherwise use default pool\n     \"\"\"\n     cdef:\n         vector[shared_ptr[CTable]] c_tables\n-        shared_ptr[CTable] c_result\n+        shared_ptr[CTable] c_result_table\n+        CMemoryPool* pool = maybe_unbox_memory_pool(memory_pool)\n         Table table\n \n     for table in tables:\n         c_tables.push_back(table.sp_table)\n \n-    with nogil:\n-        check_status(ConcatenateTables(c_tables, &c_result))\n+    if promote:\n+        with nogil:\n \n Review comment:\n   I would still prefer to have the whole if-else inside the a `with nogil` instead of outside. Probably needs a type annotation for `promote` as suggested above.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-23T15:44:27.787+0000",
                    "updated": "2019-11-23T15:44:27.787+0000",
                    "started": "2019-11-23T15:44:27.786+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "348530",
                    "issueId": "13269886"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269886/worklog/348531",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on pull request #5804: ARROW-7227: [Python] Added a python wrapper for ConcatenateTablesWithPromotions\nURL: https://github.com/apache/arrow/pull/5804#discussion_r349877502\n \n \n\n ##########\n File path: python/pyarrow/table.pxi\n ##########\n @@ -1669,26 +1669,46 @@ def table(data, names=None, schema=None, metadata=None):\n             \"Expected pandas DataFrame, python dictionary or list of arrays\")\n \n \n-def concat_tables(tables):\n+def concat_tables(tables, promote=False, MemoryPool memory_pool=None):\n \n Review comment:\n   ```suggestion\r\n   def concat_tables(tables, bool promote=False, MemoryPool memory_pool=None):\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-23T15:44:27.793+0000",
                    "updated": "2019-11-23T15:44:27.793+0000",
                    "started": "2019-11-23T15:44:27.793+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "348531",
                    "issueId": "13269886"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269886/worklog/348587",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "brills commented on pull request #5804: ARROW-7227: [Python] Added a python wrapper for ConcatenateTablesWithPromotions\nURL: https://github.com/apache/arrow/pull/5804#discussion_r349883240\n \n \n\n ##########\n File path: python/pyarrow/table.pxi\n ##########\n @@ -1669,26 +1669,46 @@ def table(data, names=None, schema=None, metadata=None):\n             \"Expected pandas DataFrame, python dictionary or list of arrays\")\n \n \n-def concat_tables(tables):\n+def concat_tables(tables, promote=False, MemoryPool memory_pool=None):\n     \"\"\"\n-    Perform zero-copy concatenation of pyarrow.Table objects. Raises exception\n-    if all of the Table schemas are not the same\n+    Perform zero-copy concatenation of pyarrow.Table objects.\n+\n+    If promote==False, the schemas of all the Tables must be the same\n+    (modulo the metadata), otherwise an exception will be raised. The result\n+    Table will share the metadata with the first table.\n+\n+    If promote==True, columns of the same name will be concatenated.\n+    They should be of the same type, or be of type NULL, in which case it will\n+    be promoted to the type of other corresponding columns with null values\n+    filled.  If a table is missing a particular field, null values of the\n+    appropriate type will be generated to take the place of the missing field.\n+    The new schema will share the metadata with the first table. Each field in\n+    the new schema will share the metadata with the first table which has the\n+    field defined.\n \n     Parameters\n     ----------\n     tables : iterable of pyarrow.Table objects\n-    output_name : string, default None\n-      A name for the output table, if any\n+    promote: bool, default False\n+        if True, concatenate tables with null-filling and type promotion.\n+    memory_pool : MemoryPool, default None\n+        For memory allocations, if required, otherwise use default pool\n     \"\"\"\n     cdef:\n         vector[shared_ptr[CTable]] c_tables\n-        shared_ptr[CTable] c_result\n+        shared_ptr[CTable] c_result_table\n+        CMemoryPool* pool = maybe_unbox_memory_pool(memory_pool)\n         Table table\n \n     for table in tables:\n         c_tables.push_back(table.sp_table)\n \n-    with nogil:\n-        check_status(ConcatenateTables(c_tables, &c_result))\n+    if promote:\n+        with nogil:\n \n Review comment:\n   That worked. Thanks.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-23T18:16:20.937+0000",
                    "updated": "2019-11-23T18:16:20.937+0000",
                    "started": "2019-11-23T18:16:20.937+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "348587",
                    "issueId": "13269886"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269886/worklog/348637",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5804: ARROW-7227: [Python] Added a python wrapper for ConcatenateTablesWithPromotions\nURL: https://github.com/apache/arrow/pull/5804#discussion_r349899134\n \n \n\n ##########\n File path: python/pyarrow/table.pxi\n ##########\n @@ -1638,26 +1638,48 @@ def table(data, names=None, schema=None, metadata=None):\n             \"Expected pandas DataFrame, python dictionary or list of arrays\")\n \n \n-def concat_tables(tables):\n+def concat_tables(tables, with_promotion=False, MemoryPool memory_pool=None):\n \n Review comment:\n   \"Safe\" casts are ones with unambiguous / lossless conversions. For example converting from int32 to int64 is safe but int64 to int32 is unsafe. Our cast functions when `safe=True` will return errors when data loss would occur\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-24T01:54:53.441+0000",
                    "updated": "2019-11-24T01:54:53.441+0000",
                    "started": "2019-11-24T01:54:53.441+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "348637",
                    "issueId": "13269886"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269886/worklog/349756",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #5804: ARROW-7227: [Python] Added a python wrapper for ConcatenateTablesWithPromotions\nURL: https://github.com/apache/arrow/pull/5804#discussion_r350724700\n \n \n\n ##########\n File path: python/pyarrow/table.pxi\n ##########\n @@ -1669,26 +1669,44 @@ def table(data, names=None, schema=None, metadata=None):\n             \"Expected pandas DataFrame, python dictionary or list of arrays\")\n \n \n-def concat_tables(tables):\n+def concat_tables(tables, c_bool promote=False, MemoryPool memory_pool=None):\n     \"\"\"\n-    Perform zero-copy concatenation of pyarrow.Table objects. Raises exception\n-    if all of the Table schemas are not the same\n+    Perform zero-copy concatenation of pyarrow.Table objects.\n+\n+    If promote==False, the schemas of all the Tables must be the same\n+    (modulo the metadata), otherwise an exception will be raised. The result\n \n Review comment:\n   ```suggestion\r\n       (except the metadata), otherwise an exception will be raised. The result\r\n   ```\r\n   Is that correct? (As a non-native english speaker, not very familiar to this saying of \"modulo\")\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-26T13:01:49.403+0000",
                    "updated": "2019-11-26T13:01:49.403+0000",
                    "started": "2019-11-26T13:01:49.403+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "349756",
                    "issueId": "13269886"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269886/worklog/349758",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #5804: ARROW-7227: [Python] Added a python wrapper for ConcatenateTablesWithPromotions\nURL: https://github.com/apache/arrow/pull/5804#discussion_r350725209\n \n \n\n ##########\n File path: python/pyarrow/table.pxi\n ##########\n @@ -1669,26 +1669,44 @@ def table(data, names=None, schema=None, metadata=None):\n             \"Expected pandas DataFrame, python dictionary or list of arrays\")\n \n \n-def concat_tables(tables):\n+def concat_tables(tables, c_bool promote=False, MemoryPool memory_pool=None):\n     \"\"\"\n-    Perform zero-copy concatenation of pyarrow.Table objects. Raises exception\n-    if all of the Table schemas are not the same\n+    Perform zero-copy concatenation of pyarrow.Table objects.\n+\n+    If promote==False, the schemas of all the Tables must be the same\n+    (modulo the metadata), otherwise an exception will be raised. The result\n+    Table will share the metadata with the first table.\n+\n+    If promote==True, columns of the same name will be concatenated.\n+    They should be of the same type, or be of type NULL, in which case it will\n+    be promoted to the type of other corresponding columns with null values\n+    filled.  If a table is missing a particular field, null values of the\n+    appropriate type will be generated to take the place of the missing field.\n+    The new schema will share the metadata with the first table. Each field in\n+    the new schema will share the metadata with the first table which has the\n+    field defined.\n \n     Parameters\n     ----------\n     tables : iterable of pyarrow.Table objects\n-    output_name : string, default None\n-      A name for the output table, if any\n+    promote: bool, default False\n+        if True, concatenate tables with null-filling and type promotion.\n \n Review comment:\n   ```suggestion\r\n           If True, concatenate tables with null-filling and type promotion.\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-26T13:01:49.406+0000",
                    "updated": "2019-11-26T13:01:49.406+0000",
                    "started": "2019-11-26T13:01:49.406+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "349758",
                    "issueId": "13269886"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269886/worklog/349757",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #5804: ARROW-7227: [Python] Added a python wrapper for ConcatenateTablesWithPromotions\nURL: https://github.com/apache/arrow/pull/5804#discussion_r350726494\n \n \n\n ##########\n File path: python/pyarrow/table.pxi\n ##########\n @@ -1669,26 +1669,44 @@ def table(data, names=None, schema=None, metadata=None):\n             \"Expected pandas DataFrame, python dictionary or list of arrays\")\n \n \n-def concat_tables(tables):\n+def concat_tables(tables, c_bool promote=False, MemoryPool memory_pool=None):\n     \"\"\"\n-    Perform zero-copy concatenation of pyarrow.Table objects. Raises exception\n-    if all of the Table schemas are not the same\n+    Perform zero-copy concatenation of pyarrow.Table objects.\n+\n+    If promote==False, the schemas of all the Tables must be the same\n+    (modulo the metadata), otherwise an exception will be raised. The result\n+    Table will share the metadata with the first table.\n+\n+    If promote==True, columns of the same name will be concatenated.\n+    They should be of the same type, or be of type NULL, in which case it will\n+    be promoted to the type of other corresponding columns with null values\n+    filled.  If a table is missing a particular field, null values of the\n+    appropriate type will be generated to take the place of the missing field.\n+    The new schema will share the metadata with the first table. Each field in\n+    the new schema will share the metadata with the first table which has the\n \n Review comment:\n   Is this tested already on the C++ side? (the current python tests don't cover this aspect I think)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-11-26T13:01:49.406+0000",
                    "updated": "2019-11-26T13:01:49.406+0000",
                    "started": "2019-11-26T13:01:49.406+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "349757",
                    "issueId": "13269886"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269886/worklog/354483",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "brills commented on pull request #5804: ARROW-7227: [Python] Added a python wrapper for ConcatenateTablesWithPromotions\nURL: https://github.com/apache/arrow/pull/5804#discussion_r354445571\n \n \n\n ##########\n File path: python/pyarrow/table.pxi\n ##########\n @@ -1669,26 +1669,44 @@ def table(data, names=None, schema=None, metadata=None):\n             \"Expected pandas DataFrame, python dictionary or list of arrays\")\n \n \n-def concat_tables(tables):\n+def concat_tables(tables, c_bool promote=False, MemoryPool memory_pool=None):\n     \"\"\"\n-    Perform zero-copy concatenation of pyarrow.Table objects. Raises exception\n-    if all of the Table schemas are not the same\n+    Perform zero-copy concatenation of pyarrow.Table objects.\n+\n+    If promote==False, the schemas of all the Tables must be the same\n+    (modulo the metadata), otherwise an exception will be raised. The result\n+    Table will share the metadata with the first table.\n+\n+    If promote==True, columns of the same name will be concatenated.\n+    They should be of the same type, or be of type NULL, in which case it will\n+    be promoted to the type of other corresponding columns with null values\n+    filled.  If a table is missing a particular field, null values of the\n+    appropriate type will be generated to take the place of the missing field.\n+    The new schema will share the metadata with the first table. Each field in\n+    the new schema will share the metadata with the first table which has the\n \n Review comment:\n   Yes. The C++ tests are comprehensive so I only wrote a python test to cover the wiring.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-05T17:23:08.224+0000",
                    "updated": "2019-12-05T17:23:08.224+0000",
                    "started": "2019-12-05T17:23:08.223+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "354483",
                    "issueId": "13269886"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 13800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@60089e40[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@21614848[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@296cd366[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2e4ed0b[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@474eb4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@185d8ae4[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@57658d6a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@72ccbe38[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@48c46c3b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3cbac56d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@47cf114d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@50e55af2[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13800,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Dec 10 14:55:24 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-12-10T14:55:24.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7227/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-11-21T16:25:42.000+0000",
        "updated": "2019-12-10T14:55:24.000+0000",
        "timeoriginalestimate": null,
        "description": "[https://github.com/apache/arrow/pull/5534]\u00a0Introduced ConcatenateWithPromotion() to C++. Provide a Python wrapper for it.\r\n\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Provide wrappers for ConcatenateWithPromotion()",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13269886/comment/16992624",
                    "id": "16992624",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 5804\n[https://github.com/apache/arrow/pull/5804]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-12-10T14:55:24.636+0000",
                    "updated": "2019-12-10T14:55:24.636+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z08vr4:",
        "customfield_12314139": null
    }
}