{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13295276",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295276",
    "key": "ARROW-8290",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "dataset",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "aggregateprogress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8290/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 16,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295276/worklog/421291",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6913: ARROW-8290: [Python] Improve FileSystemDataset constructor\nURL: https://github.com/apache/arrow/pull/6913\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-13T12:20:20.934+0000",
                    "updated": "2020-04-13T12:20:20.934+0000",
                    "started": "2020-04-13T12:20:20.934+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "421291",
                    "issueId": "13295276"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295276/worklog/421293",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6913: ARROW-8290: [Python] Improve FileSystemDataset constructor\nURL: https://github.com/apache/arrow/pull/6913#issuecomment-612879461\n \n \n   https://issues.apache.org/jira/browse/ARROW-8290\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-13T12:31:40.923+0000",
                    "updated": "2020-04-13T12:31:40.923+0000",
                    "started": "2020-04-13T12:31:40.923+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "421293",
                    "issueId": "13295276"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295276/worklog/421328",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6913: ARROW-8290: [Python] Improve FileSystemDataset constructor\nURL: https://github.com/apache/arrow/pull/6913#discussion_r407504670\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -276,55 +276,68 @@ cdef class FileSystemDataset(Dataset):\n \n     Parameters\n     ----------\n+    paths_or_selector : Union[FileSelector, List[FileInfo]]\n+        List of files/directories to consume.\n     schema : Schema\n         The top-level schema of the DataDataset.\n-    root_partition : Expression\n-        The top-level partition of the DataDataset.\n-    file_format : FileFormat\n+    format : FileFormat\n         File format to create fragments from, currently only\n         ParquetFileFormat and IpcFileFormat are supported.\n     filesystem : FileSystem\n         The filesystem which files are from.\n-    paths_or_selector : Union[FileSelector, List[FileInfo]]\n-        List of files/directories to consume.\n-    partitions : List[Expression]\n+    partitions : List[Expression], optional\n         Attach aditional partition information for the file paths.\n+    root_partition : Expression, optional\n+        The top-level partition of the DataDataset.\n     \"\"\"\n \n     cdef:\n         CFileSystemDataset* filesystem_dataset\n \n-    def __init__(self, Schema schema not None, Expression root_partition,\n-                 FileFormat file_format not None,\n-                 FileSystem filesystem not None,\n-                 paths_or_selector, partitions):\n+    def __init__(self, paths_or_selector, schema=None, format=None,\n \n Review comment:\n   @jorisvandenbossche I think you can leave the type annotations here, just the `not None` part needs to be removed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-13T14:24:33.321+0000",
                    "updated": "2020-04-13T14:24:33.321+0000",
                    "started": "2020-04-13T14:24:33.321+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "421328",
                    "issueId": "13295276"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295276/worklog/421331",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6913: ARROW-8290: [Python] Improve FileSystemDataset constructor\nURL: https://github.com/apache/arrow/pull/6913#discussion_r407508435\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -276,55 +276,68 @@ cdef class FileSystemDataset(Dataset):\n \n     Parameters\n     ----------\n+    paths_or_selector : Union[FileSelector, List[FileInfo]]\n+        List of files/directories to consume.\n     schema : Schema\n         The top-level schema of the DataDataset.\n-    root_partition : Expression\n-        The top-level partition of the DataDataset.\n-    file_format : FileFormat\n+    format : FileFormat\n         File format to create fragments from, currently only\n         ParquetFileFormat and IpcFileFormat are supported.\n     filesystem : FileSystem\n         The filesystem which files are from.\n-    paths_or_selector : Union[FileSelector, List[FileInfo]]\n-        List of files/directories to consume.\n-    partitions : List[Expression]\n+    partitions : List[Expression], optional\n         Attach aditional partition information for the file paths.\n+    root_partition : Expression, optional\n+        The top-level partition of the DataDataset.\n     \"\"\"\n \n     cdef:\n         CFileSystemDataset* filesystem_dataset\n \n-    def __init__(self, Schema schema not None, Expression root_partition,\n-                 FileFormat file_format not None,\n-                 FileSystem filesystem not None,\n-                 paths_or_selector, partitions):\n+    def __init__(self, paths_or_selector, schema=None, format=None,\n \n Review comment:\n   The problem is then that it are positional keywords to cython. And although you can call it as keyword arg, you get all kinds of uninformative error messages once you do something wrong.\r\n   \r\n   (maybe there is a better way to do this with cython, but didn't directly figure out. There is also not much docs about this)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-13T14:31:51.884+0000",
                    "updated": "2020-04-13T14:31:51.884+0000",
                    "started": "2020-04-13T14:31:51.883+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "421331",
                    "issueId": "13295276"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295276/worklog/421333",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6913: ARROW-8290: [Python] Improve FileSystemDataset constructor\nURL: https://github.com/apache/arrow/pull/6913#discussion_r407510524\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -276,55 +276,68 @@ cdef class FileSystemDataset(Dataset):\n \n     Parameters\n     ----------\n+    paths_or_selector : Union[FileSelector, List[FileInfo]]\n+        List of files/directories to consume.\n     schema : Schema\n         The top-level schema of the DataDataset.\n-    root_partition : Expression\n-        The top-level partition of the DataDataset.\n-    file_format : FileFormat\n+    format : FileFormat\n         File format to create fragments from, currently only\n         ParquetFileFormat and IpcFileFormat are supported.\n     filesystem : FileSystem\n         The filesystem which files are from.\n-    paths_or_selector : Union[FileSelector, List[FileInfo]]\n-        List of files/directories to consume.\n-    partitions : List[Expression]\n+    partitions : List[Expression], optional\n         Attach aditional partition information for the file paths.\n+    root_partition : Expression, optional\n+        The top-level partition of the DataDataset.\n     \"\"\"\n \n     cdef:\n         CFileSystemDataset* filesystem_dataset\n \n-    def __init__(self, Schema schema not None, Expression root_partition,\n-                 FileFormat file_format not None,\n-                 FileSystem filesystem not None,\n-                 paths_or_selector, partitions):\n+    def __init__(self, paths_or_selector, schema=None, format=None,\n \n Review comment:\n   Like \"TypeError: __init__() takes exactly 6 positional arguments (1 given)\" when using all keyword arguments, but having a typo in one of them.\r\n   \r\n   This was actually the reason that I first thought that you needed to pass everything as positional arguments, because I used `format=` instead of `file_format=`, and then you get such error. And so I wanted to solve that in this PR to allow keyword arguments, to find out that the cause was actually a wrong name and that keyword arguments were already supported .. :)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-13T14:35:57.317+0000",
                    "updated": "2020-04-13T14:35:57.317+0000",
                    "started": "2020-04-13T14:35:57.317+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "421333",
                    "issueId": "13295276"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295276/worklog/421354",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6913: ARROW-8290: [Python] Improve FileSystemDataset constructor\nURL: https://github.com/apache/arrow/pull/6913#discussion_r407521876\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -276,55 +276,68 @@ cdef class FileSystemDataset(Dataset):\n \n     Parameters\n     ----------\n+    paths_or_selector : Union[FileSelector, List[FileInfo]]\n+        List of files/directories to consume.\n     schema : Schema\n         The top-level schema of the DataDataset.\n-    root_partition : Expression\n-        The top-level partition of the DataDataset.\n-    file_format : FileFormat\n+    format : FileFormat\n         File format to create fragments from, currently only\n         ParquetFileFormat and IpcFileFormat are supported.\n     filesystem : FileSystem\n         The filesystem which files are from.\n-    paths_or_selector : Union[FileSelector, List[FileInfo]]\n-        List of files/directories to consume.\n-    partitions : List[Expression]\n+    partitions : List[Expression], optional\n         Attach aditional partition information for the file paths.\n+    root_partition : Expression, optional\n+        The top-level partition of the DataDataset.\n     \"\"\"\n \n     cdef:\n         CFileSystemDataset* filesystem_dataset\n \n-    def __init__(self, Schema schema not None, Expression root_partition,\n-                 FileFormat file_format not None,\n-                 FileSystem filesystem not None,\n-                 paths_or_selector, partitions):\n+    def __init__(self, paths_or_selector, schema=None, format=None,\n \n Review comment:\n   Indeed, that's annoying. Do you wan't to report this upstream?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-13T14:57:39.653+0000",
                    "updated": "2020-04-13T14:57:39.653+0000",
                    "started": "2020-04-13T14:57:39.653+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "421354",
                    "issueId": "13295276"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295276/worklog/421355",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6913: ARROW-8290: [Python] Improve FileSystemDataset constructor\nURL: https://github.com/apache/arrow/pull/6913#discussion_r407521876\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -276,55 +276,68 @@ cdef class FileSystemDataset(Dataset):\n \n     Parameters\n     ----------\n+    paths_or_selector : Union[FileSelector, List[FileInfo]]\n+        List of files/directories to consume.\n     schema : Schema\n         The top-level schema of the DataDataset.\n-    root_partition : Expression\n-        The top-level partition of the DataDataset.\n-    file_format : FileFormat\n+    format : FileFormat\n         File format to create fragments from, currently only\n         ParquetFileFormat and IpcFileFormat are supported.\n     filesystem : FileSystem\n         The filesystem which files are from.\n-    paths_or_selector : Union[FileSelector, List[FileInfo]]\n-        List of files/directories to consume.\n-    partitions : List[Expression]\n+    partitions : List[Expression], optional\n         Attach aditional partition information for the file paths.\n+    root_partition : Expression, optional\n+        The top-level partition of the DataDataset.\n     \"\"\"\n \n     cdef:\n         CFileSystemDataset* filesystem_dataset\n \n-    def __init__(self, Schema schema not None, Expression root_partition,\n-                 FileFormat file_format not None,\n-                 FileSystem filesystem not None,\n-                 paths_or_selector, partitions):\n+    def __init__(self, paths_or_selector, schema=None, format=None,\n \n Review comment:\n   Indeed, that's annoying. Do you want to report this upstream?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-13T14:57:47.075+0000",
                    "updated": "2020-04-13T14:57:47.075+0000",
                    "started": "2020-04-13T14:57:47.075+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "421355",
                    "issueId": "13295276"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295276/worklog/421358",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6913: ARROW-8290: [Python] Improve FileSystemDataset constructor\nURL: https://github.com/apache/arrow/pull/6913#discussion_r407524860\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -276,55 +276,68 @@ cdef class FileSystemDataset(Dataset):\n \n     Parameters\n     ----------\n+    paths_or_selector : Union[FileSelector, List[FileInfo]]\n+        List of files/directories to consume.\n     schema : Schema\n         The top-level schema of the DataDataset.\n-    root_partition : Expression\n-        The top-level partition of the DataDataset.\n-    file_format : FileFormat\n+    format : FileFormat\n         File format to create fragments from, currently only\n         ParquetFileFormat and IpcFileFormat are supported.\n     filesystem : FileSystem\n         The filesystem which files are from.\n-    paths_or_selector : Union[FileSelector, List[FileInfo]]\n-        List of files/directories to consume.\n-    partitions : List[Expression]\n+    partitions : List[Expression], optional\n         Attach aditional partition information for the file paths.\n+    root_partition : Expression, optional\n+        The top-level partition of the DataDataset.\n     \"\"\"\n \n     cdef:\n         CFileSystemDataset* filesystem_dataset\n \n-    def __init__(self, Schema schema not None, Expression root_partition,\n-                 FileFormat file_format not None,\n-                 FileSystem filesystem not None,\n-                 paths_or_selector, partitions):\n+    def __init__(self, paths_or_selector, schema=None, format=None,\n+                 filesystem=None, partitions=None, root_partition=None):\n         cdef:\n             FileInfo info\n             Expression expr\n             vector[CFileInfo] c_file_infos\n             vector[shared_ptr[CExpression]] c_partitions\n             CResult[shared_ptr[CDataset]] result\n \n+        # validate required arguments\n+        for arg, class_, name in [\n+            (schema, Schema, 'schema'),\n+            (format, FileFormat, 'format'),\n+            (filesystem, FileSystem, 'filesystem')\n+        ]:\n+            if not isinstance(arg, class_):\n+                raise TypeError(\n+                    \"Argument '{0}' has incorrect type (expected {1}, \"\n+                    \"got {2})\".format(name, class_.__name__, type(arg))\n+                )\n+\n         for info in filesystem.get_file_info(paths_or_selector):\n             c_file_infos.push_back(info.unwrap())\n \n+        if partitions is None:\n+            partitions = [\n+                ScalarExpression(True) for _ in range(c_file_infos.size())]\n         for expr in partitions:\n             c_partitions.push_back(expr.unwrap())\n \n         if c_file_infos.size() != c_partitions.size():\n             raise ValueError(\n-                'The number of files resulting from paths_or_selector must be '\n-                'equal to the number of partitions.'\n+                'The number of files resulting from paths_or_selector '\n+                'must be equal to the number of partitions.'\n             )\n \n         if root_partition is None:\n             root_partition = ScalarExpression(True)\n \n         result = CFileSystemDataset.Make(\n             pyarrow_unwrap_schema(schema),\n-            root_partition.unwrap(),\n-            file_format.unwrap(),\n-            filesystem.unwrap(),\n+            (<Expression> root_partition).unwrap(),\n \n Review comment:\n   If I pass an object which is not castable to `<Expression>` then I get a segfault. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-13T15:03:10.626+0000",
                    "updated": "2020-04-13T15:03:10.626+0000",
                    "started": "2020-04-13T15:03:10.626+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "421358",
                    "issueId": "13295276"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295276/worklog/421359",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6913: ARROW-8290: [Python] Improve FileSystemDataset constructor\nURL: https://github.com/apache/arrow/pull/6913#discussion_r407524860\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -276,55 +276,68 @@ cdef class FileSystemDataset(Dataset):\n \n     Parameters\n     ----------\n+    paths_or_selector : Union[FileSelector, List[FileInfo]]\n+        List of files/directories to consume.\n     schema : Schema\n         The top-level schema of the DataDataset.\n-    root_partition : Expression\n-        The top-level partition of the DataDataset.\n-    file_format : FileFormat\n+    format : FileFormat\n         File format to create fragments from, currently only\n         ParquetFileFormat and IpcFileFormat are supported.\n     filesystem : FileSystem\n         The filesystem which files are from.\n-    paths_or_selector : Union[FileSelector, List[FileInfo]]\n-        List of files/directories to consume.\n-    partitions : List[Expression]\n+    partitions : List[Expression], optional\n         Attach aditional partition information for the file paths.\n+    root_partition : Expression, optional\n+        The top-level partition of the DataDataset.\n     \"\"\"\n \n     cdef:\n         CFileSystemDataset* filesystem_dataset\n \n-    def __init__(self, Schema schema not None, Expression root_partition,\n-                 FileFormat file_format not None,\n-                 FileSystem filesystem not None,\n-                 paths_or_selector, partitions):\n+    def __init__(self, paths_or_selector, schema=None, format=None,\n+                 filesystem=None, partitions=None, root_partition=None):\n         cdef:\n             FileInfo info\n             Expression expr\n             vector[CFileInfo] c_file_infos\n             vector[shared_ptr[CExpression]] c_partitions\n             CResult[shared_ptr[CDataset]] result\n \n+        # validate required arguments\n+        for arg, class_, name in [\n+            (schema, Schema, 'schema'),\n+            (format, FileFormat, 'format'),\n+            (filesystem, FileSystem, 'filesystem')\n+        ]:\n+            if not isinstance(arg, class_):\n+                raise TypeError(\n+                    \"Argument '{0}' has incorrect type (expected {1}, \"\n+                    \"got {2})\".format(name, class_.__name__, type(arg))\n+                )\n+\n         for info in filesystem.get_file_info(paths_or_selector):\n             c_file_infos.push_back(info.unwrap())\n \n+        if partitions is None:\n+            partitions = [\n+                ScalarExpression(True) for _ in range(c_file_infos.size())]\n         for expr in partitions:\n             c_partitions.push_back(expr.unwrap())\n \n         if c_file_infos.size() != c_partitions.size():\n             raise ValueError(\n-                'The number of files resulting from paths_or_selector must be '\n-                'equal to the number of partitions.'\n+                'The number of files resulting from paths_or_selector '\n+                'must be equal to the number of partitions.'\n             )\n \n         if root_partition is None:\n             root_partition = ScalarExpression(True)\n \n         result = CFileSystemDataset.Make(\n             pyarrow_unwrap_schema(schema),\n-            root_partition.unwrap(),\n-            file_format.unwrap(),\n-            filesystem.unwrap(),\n+            (<Expression> root_partition).unwrap(),\n \n Review comment:\n   If I pass an object which is not castable to `<Expression>` then I get a segfault, e.g. `root_partition=1`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-13T15:03:35.168+0000",
                    "updated": "2020-04-13T15:03:35.168+0000",
                    "started": "2020-04-13T15:03:35.168+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "421359",
                    "issueId": "13295276"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295276/worklog/421362",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6913: ARROW-8290: [Python] Improve FileSystemDataset constructor\nURL: https://github.com/apache/arrow/pull/6913#discussion_r407526165\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -276,55 +276,68 @@ cdef class FileSystemDataset(Dataset):\n \n     Parameters\n     ----------\n+    paths_or_selector : Union[FileSelector, List[FileInfo]]\n+        List of files/directories to consume.\n     schema : Schema\n         The top-level schema of the DataDataset.\n-    root_partition : Expression\n-        The top-level partition of the DataDataset.\n-    file_format : FileFormat\n+    format : FileFormat\n         File format to create fragments from, currently only\n         ParquetFileFormat and IpcFileFormat are supported.\n     filesystem : FileSystem\n         The filesystem which files are from.\n-    paths_or_selector : Union[FileSelector, List[FileInfo]]\n-        List of files/directories to consume.\n-    partitions : List[Expression]\n+    partitions : List[Expression], optional\n         Attach aditional partition information for the file paths.\n+    root_partition : Expression, optional\n+        The top-level partition of the DataDataset.\n     \"\"\"\n \n     cdef:\n         CFileSystemDataset* filesystem_dataset\n \n-    def __init__(self, Schema schema not None, Expression root_partition,\n-                 FileFormat file_format not None,\n-                 FileSystem filesystem not None,\n-                 paths_or_selector, partitions):\n+    def __init__(self, paths_or_selector, schema=None, format=None,\n+                 filesystem=None, partitions=None, root_partition=None):\n         cdef:\n             FileInfo info\n             Expression expr\n             vector[CFileInfo] c_file_infos\n             vector[shared_ptr[CExpression]] c_partitions\n             CResult[shared_ptr[CDataset]] result\n \n+        # validate required arguments\n+        for arg, class_, name in [\n+            (schema, Schema, 'schema'),\n+            (format, FileFormat, 'format'),\n+            (filesystem, FileSystem, 'filesystem')\n+        ]:\n+            if not isinstance(arg, class_):\n+                raise TypeError(\n+                    \"Argument '{0}' has incorrect type (expected {1}, \"\n+                    \"got {2})\".format(name, class_.__name__, type(arg))\n+                )\n+\n         for info in filesystem.get_file_info(paths_or_selector):\n             c_file_infos.push_back(info.unwrap())\n \n+        if partitions is None:\n+            partitions = [\n+                ScalarExpression(True) for _ in range(c_file_infos.size())]\n         for expr in partitions:\n             c_partitions.push_back(expr.unwrap())\n \n         if c_file_infos.size() != c_partitions.size():\n             raise ValueError(\n-                'The number of files resulting from paths_or_selector must be '\n-                'equal to the number of partitions.'\n+                'The number of files resulting from paths_or_selector '\n+                'must be equal to the number of partitions.'\n             )\n \n         if root_partition is None:\n             root_partition = ScalarExpression(True)\n \n         result = CFileSystemDataset.Make(\n             pyarrow_unwrap_schema(schema),\n-            root_partition.unwrap(),\n-            file_format.unwrap(),\n-            filesystem.unwrap(),\n+            (<Expression> root_partition).unwrap(),\n \n Review comment:\n   You change the cast to `<Expression?>` then it is raising a cannot convert type error - although it might be better to set default values before the casts.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-13T15:05:34.701+0000",
                    "updated": "2020-04-13T15:05:34.701+0000",
                    "started": "2020-04-13T15:05:34.700+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "421362",
                    "issueId": "13295276"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295276/worklog/421381",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6913: ARROW-8290: [Python] Improve FileSystemDataset constructor\nURL: https://github.com/apache/arrow/pull/6913#discussion_r407542446\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -276,55 +276,68 @@ cdef class FileSystemDataset(Dataset):\n \n     Parameters\n     ----------\n+    paths_or_selector : Union[FileSelector, List[FileInfo]]\n+        List of files/directories to consume.\n     schema : Schema\n         The top-level schema of the DataDataset.\n-    root_partition : Expression\n-        The top-level partition of the DataDataset.\n-    file_format : FileFormat\n+    format : FileFormat\n         File format to create fragments from, currently only\n         ParquetFileFormat and IpcFileFormat are supported.\n     filesystem : FileSystem\n         The filesystem which files are from.\n-    paths_or_selector : Union[FileSelector, List[FileInfo]]\n-        List of files/directories to consume.\n-    partitions : List[Expression]\n+    partitions : List[Expression], optional\n         Attach aditional partition information for the file paths.\n+    root_partition : Expression, optional\n+        The top-level partition of the DataDataset.\n     \"\"\"\n \n     cdef:\n         CFileSystemDataset* filesystem_dataset\n \n-    def __init__(self, Schema schema not None, Expression root_partition,\n-                 FileFormat file_format not None,\n-                 FileSystem filesystem not None,\n-                 paths_or_selector, partitions):\n+    def __init__(self, paths_or_selector, schema=None, format=None,\n+                 filesystem=None, partitions=None, root_partition=None):\n         cdef:\n             FileInfo info\n             Expression expr\n             vector[CFileInfo] c_file_infos\n             vector[shared_ptr[CExpression]] c_partitions\n             CResult[shared_ptr[CDataset]] result\n \n+        # validate required arguments\n+        for arg, class_, name in [\n+            (schema, Schema, 'schema'),\n+            (format, FileFormat, 'format'),\n+            (filesystem, FileSystem, 'filesystem')\n+        ]:\n+            if not isinstance(arg, class_):\n+                raise TypeError(\n+                    \"Argument '{0}' has incorrect type (expected {1}, \"\n+                    \"got {2})\".format(name, class_.__name__, type(arg))\n+                )\n+\n         for info in filesystem.get_file_info(paths_or_selector):\n             c_file_infos.push_back(info.unwrap())\n \n+        if partitions is None:\n+            partitions = [\n+                ScalarExpression(True) for _ in range(c_file_infos.size())]\n         for expr in partitions:\n             c_partitions.push_back(expr.unwrap())\n \n         if c_file_infos.size() != c_partitions.size():\n             raise ValueError(\n-                'The number of files resulting from paths_or_selector must be '\n-                'equal to the number of partitions.'\n+                'The number of files resulting from paths_or_selector '\n+                'must be equal to the number of partitions.'\n             )\n \n         if root_partition is None:\n             root_partition = ScalarExpression(True)\n \n         result = CFileSystemDataset.Make(\n             pyarrow_unwrap_schema(schema),\n-            root_partition.unwrap(),\n-            file_format.unwrap(),\n-            filesystem.unwrap(),\n+            (<Expression> root_partition).unwrap(),\n \n Review comment:\n   Ah, yes, all other keywords are validated to be of the correct class before casting, except this one, thanks for the catch!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-13T15:35:54.223+0000",
                    "updated": "2020-04-13T15:35:54.223+0000",
                    "started": "2020-04-13T15:35:54.223+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "421381",
                    "issueId": "13295276"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295276/worklog/421513",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6913: ARROW-8290: [Python] Improve FileSystemDataset constructor\nURL: https://github.com/apache/arrow/pull/6913#discussion_r407631831\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -276,55 +276,68 @@ cdef class FileSystemDataset(Dataset):\n \n     Parameters\n     ----------\n+    paths_or_selector : Union[FileSelector, List[FileInfo]]\n+        List of files/directories to consume.\n     schema : Schema\n         The top-level schema of the DataDataset.\n-    root_partition : Expression\n-        The top-level partition of the DataDataset.\n-    file_format : FileFormat\n+    format : FileFormat\n         File format to create fragments from, currently only\n         ParquetFileFormat and IpcFileFormat are supported.\n     filesystem : FileSystem\n         The filesystem which files are from.\n-    paths_or_selector : Union[FileSelector, List[FileInfo]]\n-        List of files/directories to consume.\n-    partitions : List[Expression]\n+    partitions : List[Expression], optional\n         Attach aditional partition information for the file paths.\n+    root_partition : Expression, optional\n+        The top-level partition of the DataDataset.\n     \"\"\"\n \n     cdef:\n         CFileSystemDataset* filesystem_dataset\n \n-    def __init__(self, Schema schema not None, Expression root_partition,\n-                 FileFormat file_format not None,\n-                 FileSystem filesystem not None,\n-                 paths_or_selector, partitions):\n+    def __init__(self, paths_or_selector, schema=None, format=None,\n+                 filesystem=None, partitions=None, root_partition=None):\n         cdef:\n             FileInfo info\n             Expression expr\n             vector[CFileInfo] c_file_infos\n             vector[shared_ptr[CExpression]] c_partitions\n             CResult[shared_ptr[CDataset]] result\n \n+        # validate required arguments\n+        for arg, class_, name in [\n+            (schema, Schema, 'schema'),\n+            (format, FileFormat, 'format'),\n+            (filesystem, FileSystem, 'filesystem')\n+        ]:\n+            if not isinstance(arg, class_):\n+                raise TypeError(\n+                    \"Argument '{0}' has incorrect type (expected {1}, \"\n+                    \"got {2})\".format(name, class_.__name__, type(arg))\n+                )\n+\n         for info in filesystem.get_file_info(paths_or_selector):\n             c_file_infos.push_back(info.unwrap())\n \n+        if partitions is None:\n+            partitions = [\n+                ScalarExpression(True) for _ in range(c_file_infos.size())]\n         for expr in partitions:\n             c_partitions.push_back(expr.unwrap())\n \n         if c_file_infos.size() != c_partitions.size():\n             raise ValueError(\n-                'The number of files resulting from paths_or_selector must be '\n-                'equal to the number of partitions.'\n+                'The number of files resulting from paths_or_selector '\n+                'must be equal to the number of partitions.'\n             )\n \n         if root_partition is None:\n             root_partition = ScalarExpression(True)\n \n         result = CFileSystemDataset.Make(\n             pyarrow_unwrap_schema(schema),\n-            root_partition.unwrap(),\n-            file_format.unwrap(),\n-            filesystem.unwrap(),\n+            (<Expression> root_partition).unwrap(),\n \n Review comment:\n   OK, fixed this\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-13T18:18:48.506+0000",
                    "updated": "2020-04-13T18:18:48.506+0000",
                    "started": "2020-04-13T18:18:48.506+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "421513",
                    "issueId": "13295276"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295276/worklog/421514",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6913: ARROW-8290: [Python] Improve FileSystemDataset constructor\nURL: https://github.com/apache/arrow/pull/6913#discussion_r407632104\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -276,55 +276,68 @@ cdef class FileSystemDataset(Dataset):\n \n     Parameters\n     ----------\n+    paths_or_selector : Union[FileSelector, List[FileInfo]]\n+        List of files/directories to consume.\n     schema : Schema\n         The top-level schema of the DataDataset.\n-    root_partition : Expression\n-        The top-level partition of the DataDataset.\n-    file_format : FileFormat\n+    format : FileFormat\n         File format to create fragments from, currently only\n         ParquetFileFormat and IpcFileFormat are supported.\n     filesystem : FileSystem\n         The filesystem which files are from.\n-    paths_or_selector : Union[FileSelector, List[FileInfo]]\n-        List of files/directories to consume.\n-    partitions : List[Expression]\n+    partitions : List[Expression], optional\n         Attach aditional partition information for the file paths.\n+    root_partition : Expression, optional\n+        The top-level partition of the DataDataset.\n     \"\"\"\n \n     cdef:\n         CFileSystemDataset* filesystem_dataset\n \n-    def __init__(self, Schema schema not None, Expression root_partition,\n-                 FileFormat file_format not None,\n-                 FileSystem filesystem not None,\n-                 paths_or_selector, partitions):\n+    def __init__(self, paths_or_selector, schema=None, format=None,\n \n Review comment:\n   Yes, I can do that. Need to make a small reproducer then, will put that on my to do list.\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-13T18:19:15.364+0000",
                    "updated": "2020-04-13T18:19:15.364+0000",
                    "started": "2020-04-13T18:19:15.363+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "421514",
                    "issueId": "13295276"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295276/worklog/421553",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6913: ARROW-8290: [Python] Improve FileSystemDataset constructor\nURL: https://github.com/apache/arrow/pull/6913#discussion_r407652588\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -276,55 +276,68 @@ cdef class FileSystemDataset(Dataset):\n \n     Parameters\n     ----------\n+    paths_or_selector : Union[FileSelector, List[FileInfo]]\n+        List of files/directories to consume.\n     schema : Schema\n         The top-level schema of the DataDataset.\n-    root_partition : Expression\n-        The top-level partition of the DataDataset.\n-    file_format : FileFormat\n+    format : FileFormat\n         File format to create fragments from, currently only\n         ParquetFileFormat and IpcFileFormat are supported.\n     filesystem : FileSystem\n         The filesystem which files are from.\n-    paths_or_selector : Union[FileSelector, List[FileInfo]]\n-        List of files/directories to consume.\n-    partitions : List[Expression]\n+    partitions : List[Expression], optional\n         Attach aditional partition information for the file paths.\n+    root_partition : Expression, optional\n+        The top-level partition of the DataDataset.\n     \"\"\"\n \n     cdef:\n         CFileSystemDataset* filesystem_dataset\n \n-    def __init__(self, Schema schema not None, Expression root_partition,\n-                 FileFormat file_format not None,\n-                 FileSystem filesystem not None,\n-                 paths_or_selector, partitions):\n+    def __init__(self, paths_or_selector, schema=None, format=None,\n \n Review comment:\n   @jorisvandenbossche schema, format and filesystem arguments are mandatory, please remove the default values.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-13T18:56:32.284+0000",
                    "updated": "2020-04-13T18:56:32.284+0000",
                    "started": "2020-04-13T18:56:32.284+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "421553",
                    "issueId": "13295276"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295276/worklog/421560",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6913: ARROW-8290: [Python] Improve FileSystemDataset constructor\nURL: https://github.com/apache/arrow/pull/6913#discussion_r407658961\n \n \n\n ##########\n File path: python/pyarrow/_dataset.pyx\n ##########\n @@ -276,55 +276,68 @@ cdef class FileSystemDataset(Dataset):\n \n     Parameters\n     ----------\n+    paths_or_selector : Union[FileSelector, List[FileInfo]]\n+        List of files/directories to consume.\n     schema : Schema\n         The top-level schema of the DataDataset.\n-    root_partition : Expression\n-        The top-level partition of the DataDataset.\n-    file_format : FileFormat\n+    format : FileFormat\n         File format to create fragments from, currently only\n         ParquetFileFormat and IpcFileFormat are supported.\n     filesystem : FileSystem\n         The filesystem which files are from.\n-    paths_or_selector : Union[FileSelector, List[FileInfo]]\n-        List of files/directories to consume.\n-    partitions : List[Expression]\n+    partitions : List[Expression], optional\n         Attach aditional partition information for the file paths.\n+    root_partition : Expression, optional\n+        The top-level partition of the DataDataset.\n     \"\"\"\n \n     cdef:\n         CFileSystemDataset* filesystem_dataset\n \n-    def __init__(self, Schema schema not None, Expression root_partition,\n-                 FileFormat file_format not None,\n-                 FileSystem filesystem not None,\n-                 paths_or_selector, partitions):\n+    def __init__(self, paths_or_selector, schema=None, format=None,\n \n Review comment:\n   I know it might be confusing from the signature, but I did this to ensure proper error messages (and the docstring indicates which are optional, and you will get a proper error message when not passing a value)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-13T19:08:03.385+0000",
                    "updated": "2020-04-13T19:08:03.385+0000",
                    "started": "2020-04-13T19:08:03.385+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "421560",
                    "issueId": "13295276"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295276/worklog/421572",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #6913: ARROW-8290: [Python] Improve FileSystemDataset constructor\nURL: https://github.com/apache/arrow/pull/6913\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-13T19:32:46.480+0000",
                    "updated": "2020-04-13T19:32:46.480+0000",
                    "started": "2020-04-13T19:32:46.479+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "421572",
                    "issueId": "13295276"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 9600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@208a9358[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2041db65[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@56d66187[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@786212cb[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5ffe411b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6c492858[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@9f6a60f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@61ea19b0[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4c316a0f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@691f9039[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@556595cb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@64f3214e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9600,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Apr 13 19:32:46 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-04-13T19:32:46.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8290/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2020-03-31T14:47:45.000+0000",
        "updated": "2020-04-13T19:32:46.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently, to manually create a FileSystemDataset, you can do something like:\r\n\r\n{code}\r\ndataset = ds.FileSystemDataset(\r\n        schema, None, ds.ParquetFileFormat(), pa.fs.LocalFileSystem(),\r\n        [\"data_file1.parquet\", \"data_file2.parquet\"],\r\n        [ds.field('file') == 1, ds.field('file') == 2])\r\n{code}\r\n\r\nThere are some usibility improvements we can do though:\r\n\r\n- Allow passing the arguments by name to improve readability of the calling code (now they all need to be passed positionally, due to the way they are implemented in cython as {{not None}})\r\n- I would maybe change the order of the arguments (eg start with the paths, we don't need to match the order of the C++ constructor)\r\n- Potentially allow {{partitions}} to be optional, in which case they need to be set to a list of ScalarExpression(True) values.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python][Dataset] Improve ergonomy of the FileSystemDataset constructor",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295276/comment/17071858",
                    "id": "17071858",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Small amenity: if an empty vector is passed for {{partitions}} we will populate it with {{scalar(true)}} automatically",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-03-31T14:54:40.926+0000",
                    "updated": "2020-03-31T14:54:40.926+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13295276/comment/17082612",
                    "id": "17082612",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "Issue resolved by pull request 6913\n[https://github.com/apache/arrow/pull/6913]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2020-04-13T19:32:46.467+0000",
                    "updated": "2020-04-13T19:32:46.467+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z0d4fc:",
        "customfield_12314139": null
    }
}