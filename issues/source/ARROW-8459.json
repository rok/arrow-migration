{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13298384",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298384",
    "key": "ARROW-8459",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/5",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/trivial.svg",
            "name": "Trivial",
            "id": "5"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334506",
                "id": "12334506",
                "name": "Developer Tools"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "aggregateprogress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8459/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 17,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298384/worklog/613491",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs opened a new pull request #10571:\nURL: https://github.com/apache/arrow/pull/10571\n\n\n   - [x] bump cmake-format's version to the latest one\r\n   - [x] port `run-cmake-format.py` script to archery\r\n   - [x] support `archery lint --cmake-format` format checks without reformatting the files in-place\r\n   - [x] support `archery lint --cmake-format --fix` for actually reformat the files \r\n   - [x] reformat the cmake files\r\n   \r\n   I assume we may need tune the options a little bit, so feel free to experiment with the values defined in `cmake-format.py` then re-run `archery-lint --cmake-format --fix`.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-22T13:42:56.429+0000",
                    "updated": "2021-06-22T13:42:56.429+0000",
                    "started": "2021-06-22T13:42:56.429+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "613491",
                    "issueId": "13298384"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298384/worklog/613492",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10571:\nURL: https://github.com/apache/arrow/pull/10571#issuecomment-865996231\n\n\n   https://issues.apache.org/jira/browse/ARROW-8459\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-22T13:43:55.480+0000",
                    "updated": "2021-06-22T13:43:55.480+0000",
                    "started": "2021-06-22T13:43:55.480+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "613492",
                    "issueId": "13298384"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298384/worklog/613493",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #10571:\nURL: https://github.com/apache/arrow/pull/10571#discussion_r656241594\n\n\n\n##########\nFile path: cpp/cmake_modules/DefineOptions.cmake\n##########\n@@ -104,33 +112,36 @@ if(\"${CMAKE_SOURCE_DIR}\" STREQUAL \"${CMAKE_CURRENT_SOURCE_DIR}\")\n   define_option(ARROW_USE_PRECOMPILED_HEADERS \"Use precompiled headers when compiling\"\n                 OFF)\n \n-  define_option_string(ARROW_SIMD_LEVEL\n-                       \"Compile-time SIMD optimization level\"\n-                       \"SSE4_2\" # default to SSE4.2\n-                       \"NONE\"\n-                       \"SSE4_2\"\n-                       \"AVX2\"\n-                       \"AVX512\")\n-\n-  define_option_string(ARROW_RUNTIME_SIMD_LEVEL\n-                       \"Max runtime SIMD optimization level\"\n-                       \"MAX\" # default to max supported by compiler\n-                       \"NONE\"\n-                       \"SSE4_2\"\n-                       \"AVX2\"\n-                       \"AVX512\"\n-                       \"MAX\")\n+  define_option_string(\n\nReview comment:\n       I think we can alter this tabulation behavior using https://cmake-format.readthedocs.io/en/latest/configopts.html#min-prefix-chars\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-22T13:50:21.891+0000",
                    "updated": "2021-06-22T13:50:21.891+0000",
                    "started": "2021-06-22T13:50:21.890+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "613493",
                    "issueId": "13298384"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298384/worklog/613528",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10571:\nURL: https://github.com/apache/arrow/pull/10571#discussion_r656313383\n\n\n\n##########\nFile path: dev/archery/archery/utils/lint.py\n##########\n@@ -90,20 +91,75 @@ def cpp_linter(src, build_dir, clang_format=True, cpplint=True,\n \n \n class CMakeFormat(Command):\n-    def __init__(self, cmake_format_bin):\n-        self.bin = cmake_format_bin\n+\n+    # TODO(kszucs): check cmake_format version\n+    def __init__(self, paths, cmake_format_bin=None):\n+        self.check_version()\n+        self.bin = default_bin(cmake_format_bin, \"cmake-format\")\n+        self.paths = paths\n+\n+    @classmethod\n+    def from_patterns(cls, base_path, include_patterns, exclude_patterns):\n+        paths = {\n+            str(path.as_posix())\n+            for pattern in include_patterns\n+            for path in base_path.glob(pattern)\n+        }\n+        for pattern in exclude_patterns:\n+            pattern = (base_path / pattern).as_posix()\n+            paths -= set(fnmatch.filter(paths, str(pattern)))\n+        return cls(paths)\n+\n+    @staticmethod\n+    def check_version():\n+        try:\n+            # cmake_format is part of the cmakelang package\n+            import cmakelang\n+        except ImportError:\n+            raise ImportError(\n+                \"Please install archery using: `pip install dev/archery[lint]`\"\n+            )\n+        # pin a specific version of cmake_format, must be updated in setup.py\n+        if cmakelang.__version__ != \"0.6.13\":\n+            raise LintValidationException(\n+                \"Wrong version of cmake_format is detected. \"\n+                \"Please reinstall it using `pip install dev/archery[lint]`\"\n+            )\n+\n+    def check(self):\n+        return self.run(\"-l\", \"error\", \"--check\", *self.paths, check=False)\n+\n+    def fix(self):\n+        return self.run(\"--in-place\", *self.paths, check=False)\n \n \n def cmake_linter(src, fix=False):\n-    \"\"\" Run cmake-format.py on all CMakeFiles.txt \"\"\"\n+    \"\"\"\n+    Run cmake-format on all CMakeFiles.txt\n+    \"\"\"\n     logger.info(\"Running cmake-format linters\")\n \n-    if not fix:\n-        logger.warn(\"run-cmake-format modifies files, regardless of --fix\")\n+    cmake_format = CMakeFormat.from_patterns(\n+        src.path,\n+        include_patterns=[\n+            'ci/**/*.cmake',\n+            'cpp/CMakeLists.txt',\n+            'cpp/src/**/CMakeLists.txt',\n+            'cpp/cmake_modules/*.cmake',\n+            'go/**/CMakeLists.txt',\n+            'java/**/CMakeLists.txt',\n+            'matlab/**/CMakeLists.txt',\n+        ],\n\nReview comment:\n       We have cmake files in `python` as well, no?\n\n##########\nFile path: dev/archery/archery/utils/lint.py\n##########\n@@ -90,20 +91,75 @@ def cpp_linter(src, build_dir, clang_format=True, cpplint=True,\n \n \n class CMakeFormat(Command):\n-    def __init__(self, cmake_format_bin):\n-        self.bin = cmake_format_bin\n+\n+    # TODO(kszucs): check cmake_format version\n\nReview comment:\n       I don't know if you can do it in this PR?\n\n##########\nFile path: dev/archery/archery/utils/lint.py\n##########\n@@ -90,20 +91,75 @@ def cpp_linter(src, build_dir, clang_format=True, cpplint=True,\n \n \n class CMakeFormat(Command):\n-    def __init__(self, cmake_format_bin):\n-        self.bin = cmake_format_bin\n+\n+    # TODO(kszucs): check cmake_format version\n+    def __init__(self, paths, cmake_format_bin=None):\n+        self.check_version()\n+        self.bin = default_bin(cmake_format_bin, \"cmake-format\")\n+        self.paths = paths\n+\n+    @classmethod\n+    def from_patterns(cls, base_path, include_patterns, exclude_patterns):\n+        paths = {\n+            str(path.as_posix())\n+            for pattern in include_patterns\n+            for path in base_path.glob(pattern)\n+        }\n+        for pattern in exclude_patterns:\n+            pattern = (base_path / pattern).as_posix()\n+            paths -= set(fnmatch.filter(paths, str(pattern)))\n+        return cls(paths)\n+\n+    @staticmethod\n+    def check_version():\n+        try:\n+            # cmake_format is part of the cmakelang package\n+            import cmakelang\n+        except ImportError:\n+            raise ImportError(\n+                \"Please install archery using: `pip install dev/archery[lint]`\"\n+            )\n+        # pin a specific version of cmake_format, must be updated in setup.py\n+        if cmakelang.__version__ != \"0.6.13\":\n+            raise LintValidationException(\n+                \"Wrong version of cmake_format is detected. \"\n+                \"Please reinstall it using `pip install dev/archery[lint]`\"\n+            )\n+\n+    def check(self):\n+        return self.run(\"-l\", \"error\", \"--check\", *self.paths, check=False)\n+\n+    def fix(self):\n+        return self.run(\"--in-place\", *self.paths, check=False)\n \n \n def cmake_linter(src, fix=False):\n-    \"\"\" Run cmake-format.py on all CMakeFiles.txt \"\"\"\n+    \"\"\"\n+    Run cmake-format on all CMakeFiles.txt\n+    \"\"\"\n     logger.info(\"Running cmake-format linters\")\n \n-    if not fix:\n-        logger.warn(\"run-cmake-format modifies files, regardless of --fix\")\n+    cmake_format = CMakeFormat.from_patterns(\n+        src.path,\n+        include_patterns=[\n+            'ci/**/*.cmake',\n+            'cpp/CMakeLists.txt',\n+            'cpp/src/**/CMakeLists.txt',\n+            'cpp/cmake_modules/*.cmake',\n+            'go/**/CMakeLists.txt',\n+            'java/**/CMakeLists.txt',\n+            'matlab/**/CMakeLists.txt',\n+        ],\n+        exclude_patterns=[\n+            'cpp/cmake_modules/FindNumPy.cmake',\n+            'cpp/cmake_modules/FindPythonLibsNew.cmake',\n+            'cpp/cmake_modules/UseCython.cmake',\n+            'cpp/src/arrow/util/config.h.cmake',\n+        ]\n\nReview comment:\n       Do you know the reasons for these exclusions?\n\n##########\nFile path: dev/archery/archery/utils/lint.py\n##########\n@@ -90,20 +91,75 @@ def cpp_linter(src, build_dir, clang_format=True, cpplint=True,\n \n \n class CMakeFormat(Command):\n-    def __init__(self, cmake_format_bin):\n-        self.bin = cmake_format_bin\n+\n+    # TODO(kszucs): check cmake_format version\n\nReview comment:\n       Wait, it seems done already below. Perhaps just remove this TODO?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-22T15:06:23.885+0000",
                    "updated": "2021-06-22T15:06:23.885+0000",
                    "started": "2021-06-22T15:06:23.885+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "613528",
                    "issueId": "13298384"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298384/worklog/613530",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #10571:\nURL: https://github.com/apache/arrow/pull/10571#discussion_r656316975\n\n\n\n##########\nFile path: dev/archery/archery/utils/lint.py\n##########\n@@ -90,20 +91,75 @@ def cpp_linter(src, build_dir, clang_format=True, cpplint=True,\n \n \n class CMakeFormat(Command):\n-    def __init__(self, cmake_format_bin):\n-        self.bin = cmake_format_bin\n+\n+    # TODO(kszucs): check cmake_format version\n+    def __init__(self, paths, cmake_format_bin=None):\n+        self.check_version()\n+        self.bin = default_bin(cmake_format_bin, \"cmake-format\")\n+        self.paths = paths\n+\n+    @classmethod\n+    def from_patterns(cls, base_path, include_patterns, exclude_patterns):\n+        paths = {\n+            str(path.as_posix())\n+            for pattern in include_patterns\n+            for path in base_path.glob(pattern)\n+        }\n+        for pattern in exclude_patterns:\n+            pattern = (base_path / pattern).as_posix()\n+            paths -= set(fnmatch.filter(paths, str(pattern)))\n+        return cls(paths)\n+\n+    @staticmethod\n+    def check_version():\n+        try:\n+            # cmake_format is part of the cmakelang package\n+            import cmakelang\n+        except ImportError:\n+            raise ImportError(\n+                \"Please install archery using: `pip install dev/archery[lint]`\"\n+            )\n+        # pin a specific version of cmake_format, must be updated in setup.py\n+        if cmakelang.__version__ != \"0.6.13\":\n+            raise LintValidationException(\n+                \"Wrong version of cmake_format is detected. \"\n+                \"Please reinstall it using `pip install dev/archery[lint]`\"\n+            )\n+\n+    def check(self):\n+        return self.run(\"-l\", \"error\", \"--check\", *self.paths, check=False)\n+\n+    def fix(self):\n+        return self.run(\"--in-place\", *self.paths, check=False)\n \n \n def cmake_linter(src, fix=False):\n-    \"\"\" Run cmake-format.py on all CMakeFiles.txt \"\"\"\n+    \"\"\"\n+    Run cmake-format on all CMakeFiles.txt\n+    \"\"\"\n     logger.info(\"Running cmake-format linters\")\n \n-    if not fix:\n-        logger.warn(\"run-cmake-format modifies files, regardless of --fix\")\n+    cmake_format = CMakeFormat.from_patterns(\n+        src.path,\n+        include_patterns=[\n+            'ci/**/*.cmake',\n+            'cpp/CMakeLists.txt',\n+            'cpp/src/**/CMakeLists.txt',\n+            'cpp/cmake_modules/*.cmake',\n+            'go/**/CMakeLists.txt',\n+            'java/**/CMakeLists.txt',\n+            'matlab/**/CMakeLists.txt',\n+        ],\n\nReview comment:\n       Those haven't been checked earlier either https://github.com/apache/arrow/blob/master/run-cmake-format.py#L29\r\n   I think we could simply use a global pattern with an exclusion list rather.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-22T15:08:58.306+0000",
                    "updated": "2021-06-22T15:08:58.306+0000",
                    "started": "2021-06-22T15:08:58.306+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "613530",
                    "issueId": "13298384"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298384/worklog/613532",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #10571:\nURL: https://github.com/apache/arrow/pull/10571#discussion_r656317284\n\n\n\n##########\nFile path: dev/archery/archery/utils/lint.py\n##########\n@@ -90,20 +91,75 @@ def cpp_linter(src, build_dir, clang_format=True, cpplint=True,\n \n \n class CMakeFormat(Command):\n-    def __init__(self, cmake_format_bin):\n-        self.bin = cmake_format_bin\n+\n+    # TODO(kszucs): check cmake_format version\n+    def __init__(self, paths, cmake_format_bin=None):\n+        self.check_version()\n+        self.bin = default_bin(cmake_format_bin, \"cmake-format\")\n+        self.paths = paths\n+\n+    @classmethod\n+    def from_patterns(cls, base_path, include_patterns, exclude_patterns):\n+        paths = {\n+            str(path.as_posix())\n+            for pattern in include_patterns\n+            for path in base_path.glob(pattern)\n+        }\n+        for pattern in exclude_patterns:\n+            pattern = (base_path / pattern).as_posix()\n+            paths -= set(fnmatch.filter(paths, str(pattern)))\n+        return cls(paths)\n+\n+    @staticmethod\n+    def check_version():\n+        try:\n+            # cmake_format is part of the cmakelang package\n+            import cmakelang\n+        except ImportError:\n+            raise ImportError(\n+                \"Please install archery using: `pip install dev/archery[lint]`\"\n+            )\n+        # pin a specific version of cmake_format, must be updated in setup.py\n+        if cmakelang.__version__ != \"0.6.13\":\n+            raise LintValidationException(\n+                \"Wrong version of cmake_format is detected. \"\n+                \"Please reinstall it using `pip install dev/archery[lint]`\"\n+            )\n+\n+    def check(self):\n+        return self.run(\"-l\", \"error\", \"--check\", *self.paths, check=False)\n+\n+    def fix(self):\n+        return self.run(\"--in-place\", *self.paths, check=False)\n \n \n def cmake_linter(src, fix=False):\n-    \"\"\" Run cmake-format.py on all CMakeFiles.txt \"\"\"\n+    \"\"\"\n+    Run cmake-format on all CMakeFiles.txt\n+    \"\"\"\n     logger.info(\"Running cmake-format linters\")\n \n-    if not fix:\n-        logger.warn(\"run-cmake-format modifies files, regardless of --fix\")\n+    cmake_format = CMakeFormat.from_patterns(\n+        src.path,\n+        include_patterns=[\n+            'ci/**/*.cmake',\n+            'cpp/CMakeLists.txt',\n+            'cpp/src/**/CMakeLists.txt',\n+            'cpp/cmake_modules/*.cmake',\n+            'go/**/CMakeLists.txt',\n+            'java/**/CMakeLists.txt',\n+            'matlab/**/CMakeLists.txt',\n+        ],\n+        exclude_patterns=[\n+            'cpp/cmake_modules/FindNumPy.cmake',\n+            'cpp/cmake_modules/FindPythonLibsNew.cmake',\n+            'cpp/cmake_modules/UseCython.cmake',\n+            'cpp/src/arrow/util/config.h.cmake',\n+        ]\n\nReview comment:\n       Ported from the previous script, I assume these files are vendored.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-22T15:09:16.942+0000",
                    "updated": "2021-06-22T15:09:16.942+0000",
                    "started": "2021-06-22T15:09:16.942+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "613532",
                    "issueId": "13298384"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298384/worklog/613534",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #10571:\nURL: https://github.com/apache/arrow/pull/10571#discussion_r656317284\n\n\n\n##########\nFile path: dev/archery/archery/utils/lint.py\n##########\n@@ -90,20 +91,75 @@ def cpp_linter(src, build_dir, clang_format=True, cpplint=True,\n \n \n class CMakeFormat(Command):\n-    def __init__(self, cmake_format_bin):\n-        self.bin = cmake_format_bin\n+\n+    # TODO(kszucs): check cmake_format version\n+    def __init__(self, paths, cmake_format_bin=None):\n+        self.check_version()\n+        self.bin = default_bin(cmake_format_bin, \"cmake-format\")\n+        self.paths = paths\n+\n+    @classmethod\n+    def from_patterns(cls, base_path, include_patterns, exclude_patterns):\n+        paths = {\n+            str(path.as_posix())\n+            for pattern in include_patterns\n+            for path in base_path.glob(pattern)\n+        }\n+        for pattern in exclude_patterns:\n+            pattern = (base_path / pattern).as_posix()\n+            paths -= set(fnmatch.filter(paths, str(pattern)))\n+        return cls(paths)\n+\n+    @staticmethod\n+    def check_version():\n+        try:\n+            # cmake_format is part of the cmakelang package\n+            import cmakelang\n+        except ImportError:\n+            raise ImportError(\n+                \"Please install archery using: `pip install dev/archery[lint]`\"\n+            )\n+        # pin a specific version of cmake_format, must be updated in setup.py\n+        if cmakelang.__version__ != \"0.6.13\":\n+            raise LintValidationException(\n+                \"Wrong version of cmake_format is detected. \"\n+                \"Please reinstall it using `pip install dev/archery[lint]`\"\n+            )\n+\n+    def check(self):\n+        return self.run(\"-l\", \"error\", \"--check\", *self.paths, check=False)\n+\n+    def fix(self):\n+        return self.run(\"--in-place\", *self.paths, check=False)\n \n \n def cmake_linter(src, fix=False):\n-    \"\"\" Run cmake-format.py on all CMakeFiles.txt \"\"\"\n+    \"\"\"\n+    Run cmake-format on all CMakeFiles.txt\n+    \"\"\"\n     logger.info(\"Running cmake-format linters\")\n \n-    if not fix:\n-        logger.warn(\"run-cmake-format modifies files, regardless of --fix\")\n+    cmake_format = CMakeFormat.from_patterns(\n+        src.path,\n+        include_patterns=[\n+            'ci/**/*.cmake',\n+            'cpp/CMakeLists.txt',\n+            'cpp/src/**/CMakeLists.txt',\n+            'cpp/cmake_modules/*.cmake',\n+            'go/**/CMakeLists.txt',\n+            'java/**/CMakeLists.txt',\n+            'matlab/**/CMakeLists.txt',\n+        ],\n+        exclude_patterns=[\n+            'cpp/cmake_modules/FindNumPy.cmake',\n+            'cpp/cmake_modules/FindPythonLibsNew.cmake',\n+            'cpp/cmake_modules/UseCython.cmake',\n+            'cpp/src/arrow/util/config.h.cmake',\n+        ]\n\nReview comment:\n       Ported from the previous script, I assume these files are vendored or generated.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-22T15:09:33.094+0000",
                    "updated": "2021-06-22T15:09:33.094+0000",
                    "started": "2021-06-22T15:09:33.094+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "613534",
                    "issueId": "13298384"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298384/worklog/613535",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #10571:\nURL: https://github.com/apache/arrow/pull/10571#discussion_r656317818\n\n\n\n##########\nFile path: dev/archery/archery/utils/lint.py\n##########\n@@ -90,20 +91,75 @@ def cpp_linter(src, build_dir, clang_format=True, cpplint=True,\n \n \n class CMakeFormat(Command):\n-    def __init__(self, cmake_format_bin):\n-        self.bin = cmake_format_bin\n+\n+    # TODO(kszucs): check cmake_format version\n\nReview comment:\n       Yep, thanks for spotting that!\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-22T15:09:47.166+0000",
                    "updated": "2021-06-22T15:09:47.166+0000",
                    "started": "2021-06-22T15:09:47.166+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "613535",
                    "issueId": "13298384"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298384/worklog/613787",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #10571:\nURL: https://github.com/apache/arrow/pull/10571#discussion_r656721780\n\n\n\n##########\nFile path: dev/archery/archery/utils/lint.py\n##########\n@@ -90,20 +91,75 @@ def cpp_linter(src, build_dir, clang_format=True, cpplint=True,\n \n \n class CMakeFormat(Command):\n-    def __init__(self, cmake_format_bin):\n-        self.bin = cmake_format_bin\n+\n+    # TODO(kszucs): check cmake_format version\n+    def __init__(self, paths, cmake_format_bin=None):\n+        self.check_version()\n+        self.bin = default_bin(cmake_format_bin, \"cmake-format\")\n+        self.paths = paths\n+\n+    @classmethod\n+    def from_patterns(cls, base_path, include_patterns, exclude_patterns):\n+        paths = {\n+            str(path.as_posix())\n+            for pattern in include_patterns\n+            for path in base_path.glob(pattern)\n+        }\n+        for pattern in exclude_patterns:\n+            pattern = (base_path / pattern).as_posix()\n+            paths -= set(fnmatch.filter(paths, str(pattern)))\n+        return cls(paths)\n+\n+    @staticmethod\n+    def check_version():\n+        try:\n+            # cmake_format is part of the cmakelang package\n+            import cmakelang\n+        except ImportError:\n+            raise ImportError(\n+                \"Please install archery using: `pip install dev/archery[lint]`\"\n+            )\n+        # pin a specific version of cmake_format, must be updated in setup.py\n+        if cmakelang.__version__ != \"0.6.13\":\n+            raise LintValidationException(\n+                \"Wrong version of cmake_format is detected. \"\n+                \"Please reinstall it using `pip install dev/archery[lint]`\"\n+            )\n+\n+    def check(self):\n+        return self.run(\"-l\", \"error\", \"--check\", *self.paths, check=False)\n+\n+    def fix(self):\n+        return self.run(\"--in-place\", *self.paths, check=False)\n \n \n def cmake_linter(src, fix=False):\n-    \"\"\" Run cmake-format.py on all CMakeFiles.txt \"\"\"\n+    \"\"\"\n+    Run cmake-format on all CMakeFiles.txt\n+    \"\"\"\n     logger.info(\"Running cmake-format linters\")\n \n-    if not fix:\n-        logger.warn(\"run-cmake-format modifies files, regardless of --fix\")\n+    cmake_format = CMakeFormat.from_patterns(\n+        src.path,\n+        include_patterns=[\n+            'ci/**/*.cmake',\n+            'cpp/CMakeLists.txt',\n+            'cpp/src/**/CMakeLists.txt',\n+            'cpp/cmake_modules/*.cmake',\n+            'go/**/CMakeLists.txt',\n+            'java/**/CMakeLists.txt',\n+            'matlab/**/CMakeLists.txt',\n+        ],\n+        exclude_patterns=[\n+            'cpp/cmake_modules/FindNumPy.cmake',\n+            'cpp/cmake_modules/FindPythonLibsNew.cmake',\n+            'cpp/cmake_modules/UseCython.cmake',\n+            'cpp/src/arrow/util/config.h.cmake',\n+        ]\n\nReview comment:\n       `cpp/cmake_modules/*.cmake` in the list are imported CMake files: https://github.com/apache/arrow/pull/9045#discussion_r553939866\r\n   \r\n   We can't use cmake-format for `cpp/src/arrow/util/config.h.cmake` because it's not valid CMake file. It has `@...@` to replace variables by CMake.\n\n##########\nFile path: cpp/cmake_modules/FindArrow.cmake\n##########\n@@ -399,33 +432,31 @@ endif()\n \n set(ARROW_ABI_VERSION ${ARROW_SO_VERSION})\n \n-mark_as_advanced(ARROW_ABI_VERSION\n-                 ARROW_CONFIG_SUFFIXES\n-                 ARROW_FULL_SO_VERSION\n-                 ARROW_IMPORT_LIB\n-                 ARROW_INCLUDE_DIR\n-                 ARROW_LIBS\n-                 ARROW_LIB_DIR\n-                 ARROW_SEARCH_LIB_PATH_SUFFIXES\n-                 ARROW_SHARED_IMP_LIB\n-                 ARROW_SHARED_LIB\n-                 ARROW_SO_VERSION\n-                 ARROW_STATIC_LIB\n-                 ARROW_VERSION\n-                 ARROW_VERSION_MAJOR\n-                 ARROW_VERSION_MINOR\n-                 ARROW_VERSION_PATCH)\n+mark_as_advanced(\n+  ARROW_ABI_VERSION\n+  ARROW_CONFIG_SUFFIXES\n+  ARROW_FULL_SO_VERSION\n+  ARROW_IMPORT_LIB\n+  ARROW_INCLUDE_DIR\n+  ARROW_LIBS\n+  ARROW_LIB_DIR\n+  ARROW_SEARCH_LIB_PATH_SUFFIXES\n+  ARROW_SHARED_IMP_LIB\n+  ARROW_SHARED_LIB\n+  ARROW_SO_VERSION\n+  ARROW_STATIC_LIB\n+  ARROW_VERSION\n+  ARROW_VERSION_MAJOR\n+  ARROW_VERSION_MINOR\n+  ARROW_VERSION_PATCH)\n \n-find_package_handle_standard_args(Arrow REQUIRED_VARS\n-                                  # The first required variable is shown\n-                                  # in the found message. So this list is\n-                                  # not sorted alphabetically.\n-                                  ARROW_INCLUDE_DIR\n-                                  ARROW_LIB_DIR\n-                                  ARROW_FULL_SO_VERSION\n-                                  ARROW_SO_VERSION\n-                                  VERSION_VAR\n-                                  ARROW_VERSION)\n+find_package_handle_standard_args(\n+  Arrow\n+  REQUIRED_VARS # The first required variable is shown\n+                # in the found message. So this list is\n+                # not sorted alphabetically.\n+                ARROW_INCLUDE_DIR ARROW_LIB_DIR ARROW_FULL_SO_VERSION ARROW_SO_VERSION\n\nReview comment:\n       ```suggestion\r\n     Arrow\r\n     # The first required variable is shown in the found message. So this list is\r\n     # not sorted alphabetically.\r\n     REQUIRED_VARS ARROW_INCLUDE_DIR ARROW_LIB_DIR ARROW_FULL_SO_VERSION ARROW_SO_VERSION\r\n   ```\n\n##########\nFile path: dev/archery/archery/utils/lint.py\n##########\n@@ -90,20 +91,75 @@ def cpp_linter(src, build_dir, clang_format=True, cpplint=True,\n \n \n class CMakeFormat(Command):\n-    def __init__(self, cmake_format_bin):\n-        self.bin = cmake_format_bin\n+\n+    # TODO(kszucs): check cmake_format version\n+    def __init__(self, paths, cmake_format_bin=None):\n+        self.check_version()\n+        self.bin = default_bin(cmake_format_bin, \"cmake-format\")\n+        self.paths = paths\n+\n+    @classmethod\n+    def from_patterns(cls, base_path, include_patterns, exclude_patterns):\n+        paths = {\n+            str(path.as_posix())\n+            for pattern in include_patterns\n+            for path in base_path.glob(pattern)\n+        }\n+        for pattern in exclude_patterns:\n+            pattern = (base_path / pattern).as_posix()\n+            paths -= set(fnmatch.filter(paths, str(pattern)))\n+        return cls(paths)\n+\n+    @staticmethod\n+    def check_version():\n+        try:\n+            # cmake_format is part of the cmakelang package\n+            import cmakelang\n+        except ImportError:\n+            raise ImportError(\n+                \"Please install archery using: `pip install dev/archery[lint]`\"\n+            )\n+        # pin a specific version of cmake_format, must be updated in setup.py\n+        if cmakelang.__version__ != \"0.6.13\":\n+            raise LintValidationException(\n+                \"Wrong version of cmake_format is detected. \"\n+                \"Please reinstall it using `pip install dev/archery[lint]`\"\n+            )\n+\n+    def check(self):\n+        return self.run(\"-l\", \"error\", \"--check\", *self.paths, check=False)\n+\n+    def fix(self):\n+        return self.run(\"--in-place\", *self.paths, check=False)\n \n \n def cmake_linter(src, fix=False):\n-    \"\"\" Run cmake-format.py on all CMakeFiles.txt \"\"\"\n+    \"\"\"\n+    Run cmake-format on all CMakeFiles.txt\n+    \"\"\"\n     logger.info(\"Running cmake-format linters\")\n \n-    if not fix:\n-        logger.warn(\"run-cmake-format modifies files, regardless of --fix\")\n+    cmake_format = CMakeFormat.from_patterns(\n+        src.path,\n+        include_patterns=[\n+            'ci/**/*.cmake',\n+            'cpp/CMakeLists.txt',\n+            'cpp/src/**/CMakeLists.txt',\n+            'cpp/cmake_modules/*.cmake',\n+            'go/**/CMakeLists.txt',\n+            'java/**/CMakeLists.txt',\n+            'matlab/**/CMakeLists.txt',\n+        ],\n\nReview comment:\n       We have only `python/CMakeLists.txt` in `python/`.\r\n   `python/cmake_modules/` is a symbolic link to `cpp/cmake_modules/`.\n\n##########\nFile path: cpp/cmake_modules/DefineOptions.cmake\n##########\n@@ -104,33 +112,36 @@ if(\"${CMAKE_SOURCE_DIR}\" STREQUAL \"${CMAKE_CURRENT_SOURCE_DIR}\")\n   define_option(ARROW_USE_PRECOMPILED_HEADERS \"Use precompiled headers when compiling\"\n                 OFF)\n \n-  define_option_string(ARROW_SIMD_LEVEL\n-                       \"Compile-time SIMD optimization level\"\n-                       \"SSE4_2\" # default to SSE4.2\n-                       \"NONE\"\n-                       \"SSE4_2\"\n-                       \"AVX2\"\n-                       \"AVX512\")\n-\n-  define_option_string(ARROW_RUNTIME_SIMD_LEVEL\n-                       \"Max runtime SIMD optimization level\"\n-                       \"MAX\" # default to max supported by compiler\n-                       \"NONE\"\n-                       \"SSE4_2\"\n-                       \"AVX2\"\n-                       \"AVX512\"\n-                       \"MAX\")\n+  define_option_string(\n\nReview comment:\n       Could you try `32` or something?\r\n   I don't expect formatter so much but I want to reduce diff to look history easily later.\n\n##########\nFile path: cpp/cmake_modules/FindLLVMAlt.cmake\n##########\n@@ -57,23 +58,19 @@ if(LLVM_FOUND)\n \n   add_library(LLVM::LLVM_INTERFACE INTERFACE IMPORTED)\n \n-  set_target_properties(LLVM::LLVM_INTERFACE\n-                        PROPERTIES INTERFACE_INCLUDE_DIRECTORIES\n-                                   \"${LLVM_INCLUDE_DIRS}\"\n-                                   INTERFACE_COMPILE_FLAGS\n-                                   \"${LLVM_DEFINITIONS}\"\n-                                   INTERFACE_LINK_LIBRARIES\n-                                   \"${LLVM_LIBS}\")\n+  set_target_properties(\n+    LLVM::LLVM_INTERFACE\n+    PROPERTIES INTERFACE_INCLUDE_DIRECTORIES \"${LLVM_INCLUDE_DIRS}\"\n+               INTERFACE_COMPILE_FLAGS \"${LLVM_DEFINITIONS}\"\n+               INTERFACE_LINK_LIBRARIES \"${LLVM_LIBS}\")\n endif()\n \n mark_as_advanced(CLANG_EXECUTABLE LLVM_LINK_EXECUTABLE)\n \n-find_package_handle_standard_args(LLVMAlt\n-                                  REQUIRED_VARS # The first variable is used for display.\n-                                  LLVM_PACKAGE_VERSION\n-                                  CLANG_EXECUTABLE\n-                                  LLVM_FOUND\n-                                  LLVM_LINK_EXECUTABLE)\n+find_package_handle_standard_args(\n+  LLVMAlt\n+  REQUIRED_VARS # The first variable is used for display.\n+                LLVM_PACKAGE_VERSION CLANG_EXECUTABLE LLVM_FOUND LLVM_LINK_EXECUTABLE)\n\nReview comment:\n       ```suggestion\r\n     LLVMAlt\r\n     # The first variable is used for display.\r\n     REQUIRED_VARS LLVM_PACKAGE_VERSION CLANG_EXECUTABLE LLVM_FOUND LLVM_LINK_EXECUTABLE)\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-23T02:57:14.308+0000",
                    "updated": "2021-06-23T02:57:14.308+0000",
                    "started": "2021-06-23T02:57:14.308+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "613787",
                    "issueId": "13298384"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298384/worklog/613789",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #10571:\nURL: https://github.com/apache/arrow/pull/10571#discussion_r656722722\n\n\n\n##########\nFile path: .pre-commit-config.yaml\n##########\n@@ -29,13 +29,6 @@ repos:\n         entry: bash -c \"git archive HEAD --prefix=apache-arrow/ --output=arrow-src.tar && ./dev/release/run-rat.sh arrow-src.tar\"\n         always_run: true\n         pass_filenames: false\n-      - id: cmake-format\n-        name: CMake Format\n-        language: python\n-        entry: python run-cmake-format.py\n-        types: [cmake]\n-        additional_dependencies:\n-          - cmake_format==0.5.2\n\nReview comment:\n       Can we keep this by using `archery lint ...`?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-23T02:58:17.174+0000",
                    "updated": "2021-06-23T02:58:17.174+0000",
                    "started": "2021-06-23T02:58:17.173+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "613789",
                    "issueId": "13298384"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298384/worklog/613917",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #10571:\nURL: https://github.com/apache/arrow/pull/10571#discussion_r656933224\n\n\n\n##########\nFile path: .pre-commit-config.yaml\n##########\n@@ -29,13 +29,6 @@ repos:\n         entry: bash -c \"git archive HEAD --prefix=apache-arrow/ --output=arrow-src.tar && ./dev/release/run-rat.sh arrow-src.tar\"\n         always_run: true\n         pass_filenames: false\n-      - id: cmake-format\n-        name: CMake Format\n-        language: python\n-        entry: python run-cmake-format.py\n-        types: [cmake]\n-        additional_dependencies:\n-          - cmake_format==0.5.2\n\nReview comment:\n       My long term plan is to use `archery lint` from the pre-commit hooks, but archery doesn't accept a list of files to lint while pre-commit-hooks only check the changed files based on the git diff.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-23T09:43:25.469+0000",
                    "updated": "2021-06-23T09:43:25.469+0000",
                    "started": "2021-06-23T09:43:25.468+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "613917",
                    "issueId": "13298384"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298384/worklog/613918",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #10571:\nURL: https://github.com/apache/arrow/pull/10571#discussion_r656933645\n\n\n\n##########\nFile path: dev/archery/archery/utils/lint.py\n##########\n@@ -90,20 +91,75 @@ def cpp_linter(src, build_dir, clang_format=True, cpplint=True,\n \n \n class CMakeFormat(Command):\n-    def __init__(self, cmake_format_bin):\n-        self.bin = cmake_format_bin\n+\n+    # TODO(kszucs): check cmake_format version\n+    def __init__(self, paths, cmake_format_bin=None):\n+        self.check_version()\n+        self.bin = default_bin(cmake_format_bin, \"cmake-format\")\n+        self.paths = paths\n+\n+    @classmethod\n+    def from_patterns(cls, base_path, include_patterns, exclude_patterns):\n+        paths = {\n+            str(path.as_posix())\n+            for pattern in include_patterns\n+            for path in base_path.glob(pattern)\n+        }\n+        for pattern in exclude_patterns:\n+            pattern = (base_path / pattern).as_posix()\n+            paths -= set(fnmatch.filter(paths, str(pattern)))\n+        return cls(paths)\n+\n+    @staticmethod\n+    def check_version():\n+        try:\n+            # cmake_format is part of the cmakelang package\n+            import cmakelang\n+        except ImportError:\n+            raise ImportError(\n+                \"Please install archery using: `pip install dev/archery[lint]`\"\n+            )\n+        # pin a specific version of cmake_format, must be updated in setup.py\n+        if cmakelang.__version__ != \"0.6.13\":\n+            raise LintValidationException(\n+                \"Wrong version of cmake_format is detected. \"\n+                \"Please reinstall it using `pip install dev/archery[lint]`\"\n+            )\n+\n+    def check(self):\n+        return self.run(\"-l\", \"error\", \"--check\", *self.paths, check=False)\n+\n+    def fix(self):\n+        return self.run(\"--in-place\", *self.paths, check=False)\n \n \n def cmake_linter(src, fix=False):\n-    \"\"\" Run cmake-format.py on all CMakeFiles.txt \"\"\"\n+    \"\"\"\n+    Run cmake-format on all CMakeFiles.txt\n+    \"\"\"\n     logger.info(\"Running cmake-format linters\")\n \n-    if not fix:\n-        logger.warn(\"run-cmake-format modifies files, regardless of --fix\")\n+    cmake_format = CMakeFormat.from_patterns(\n+        src.path,\n+        include_patterns=[\n+            'ci/**/*.cmake',\n+            'cpp/CMakeLists.txt',\n+            'cpp/src/**/CMakeLists.txt',\n+            'cpp/cmake_modules/*.cmake',\n+            'go/**/CMakeLists.txt',\n+            'java/**/CMakeLists.txt',\n+            'matlab/**/CMakeLists.txt',\n+        ],\n\nReview comment:\n       I added `python/CMakeLists.txt`.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-23T09:43:52.863+0000",
                    "updated": "2021-06-23T09:43:52.863+0000",
                    "started": "2021-06-23T09:43:52.862+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "613918",
                    "issueId": "13298384"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298384/worklog/613919",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #10571:\nURL: https://github.com/apache/arrow/pull/10571#discussion_r656933940\n\n\n\n##########\nFile path: cpp/cmake_modules/DefineOptions.cmake\n##########\n@@ -104,33 +112,36 @@ if(\"${CMAKE_SOURCE_DIR}\" STREQUAL \"${CMAKE_CURRENT_SOURCE_DIR}\")\n   define_option(ARROW_USE_PRECOMPILED_HEADERS \"Use precompiled headers when compiling\"\n                 OFF)\n \n-  define_option_string(ARROW_SIMD_LEVEL\n-                       \"Compile-time SIMD optimization level\"\n-                       \"SSE4_2\" # default to SSE4.2\n-                       \"NONE\"\n-                       \"SSE4_2\"\n-                       \"AVX2\"\n-                       \"AVX512\")\n-\n-  define_option_string(ARROW_RUNTIME_SIMD_LEVEL\n-                       \"Max runtime SIMD optimization level\"\n-                       \"MAX\" # default to max supported by compiler\n-                       \"NONE\"\n-                       \"SSE4_2\"\n-                       \"AVX2\"\n-                       \"AVX512\"\n-                       \"MAX\")\n+  define_option_string(\n\nReview comment:\n       Yes, I'm going to try formatting with `min-prefix-chars=32`\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-23T09:44:18.470+0000",
                    "updated": "2021-06-23T09:44:18.470+0000",
                    "started": "2021-06-23T09:44:18.470+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "613919",
                    "issueId": "13298384"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298384/worklog/614066",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs edited a comment on pull request #10571:\nURL: https://github.com/apache/arrow/pull/10571#issuecomment-866933828\n\n\n   @kou updated the formatting with `min-prefix-chars=32`, please take a look again.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-23T15:24:08.524+0000",
                    "updated": "2021-06-23T15:24:08.524+0000",
                    "started": "2021-06-23T15:24:08.524+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "614066",
                    "issueId": "13298384"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298384/worklog/614067",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #10571:\nURL: https://github.com/apache/arrow/pull/10571#issuecomment-866933828\n\n\n   @kou updated the formatting with min-prefix-chars=32, please take a look again.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-23T15:24:11.677+0000",
                    "updated": "2021-06-23T15:24:11.677+0000",
                    "started": "2021-06-23T15:24:11.676+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "614067",
                    "issueId": "13298384"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298384/worklog/614203",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on a change in pull request #10571:\nURL: https://github.com/apache/arrow/pull/10571#discussion_r657424049\n\n\n\n##########\nFile path: .pre-commit-config.yaml\n##########\n@@ -29,13 +29,6 @@ repos:\n         entry: bash -c \"git archive HEAD --prefix=apache-arrow/ --output=arrow-src.tar && ./dev/release/run-rat.sh arrow-src.tar\"\n         always_run: true\n         pass_filenames: false\n-      - id: cmake-format\n-        name: CMake Format\n-        language: python\n-        entry: python run-cmake-format.py\n-        types: [cmake]\n-        additional_dependencies:\n-          - cmake_format==0.5.2\n\nReview comment:\n       OK.\n\n##########\nFile path: dev/archery/archery/utils/lint.py\n##########\n@@ -90,20 +91,75 @@ def cpp_linter(src, build_dir, clang_format=True, cpplint=True,\n \n \n class CMakeFormat(Command):\n-    def __init__(self, cmake_format_bin):\n-        self.bin = cmake_format_bin\n+\n+    # TODO(kszucs): check cmake_format version\n+    def __init__(self, paths, cmake_format_bin=None):\n+        self.check_version()\n+        self.bin = default_bin(cmake_format_bin, \"cmake-format\")\n+        self.paths = paths\n+\n+    @classmethod\n+    def from_patterns(cls, base_path, include_patterns, exclude_patterns):\n+        paths = {\n+            str(path.as_posix())\n+            for pattern in include_patterns\n+            for path in base_path.glob(pattern)\n+        }\n+        for pattern in exclude_patterns:\n+            pattern = (base_path / pattern).as_posix()\n+            paths -= set(fnmatch.filter(paths, str(pattern)))\n+        return cls(paths)\n+\n+    @staticmethod\n+    def check_version():\n+        try:\n+            # cmake_format is part of the cmakelang package\n+            import cmakelang\n+        except ImportError:\n+            raise ImportError(\n+                \"Please install archery using: `pip install dev/archery[lint]`\"\n+            )\n+        # pin a specific version of cmake_format, must be updated in setup.py\n+        if cmakelang.__version__ != \"0.6.13\":\n+            raise LintValidationException(\n+                \"Wrong version of cmake_format is detected. \"\n+                \"Please reinstall it using `pip install dev/archery[lint]`\"\n+            )\n+\n+    def check(self):\n+        return self.run(\"-l\", \"error\", \"--check\", *self.paths, check=False)\n+\n+    def fix(self):\n+        return self.run(\"--in-place\", *self.paths, check=False)\n \n \n def cmake_linter(src, fix=False):\n-    \"\"\" Run cmake-format.py on all CMakeFiles.txt \"\"\"\n+    \"\"\"\n+    Run cmake-format on all CMakeFiles.txt\n+    \"\"\"\n     logger.info(\"Running cmake-format linters\")\n \n-    if not fix:\n-        logger.warn(\"run-cmake-format modifies files, regardless of --fix\")\n+    cmake_format = CMakeFormat.from_patterns(\n+        src.path,\n+        include_patterns=[\n+            'ci/**/*.cmake',\n+            'cpp/CMakeLists.txt',\n+            'cpp/src/**/CMakeLists.txt',\n+            'cpp/cmake_modules/*.cmake',\n+            'go/**/CMakeLists.txt',\n+            'java/**/CMakeLists.txt',\n+            'matlab/**/CMakeLists.txt',\n+        ],\n\nReview comment:\n       Ah, I see.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-23T20:24:19.618+0000",
                    "updated": "2021-06-23T20:24:19.618+0000",
                    "started": "2021-06-23T20:24:19.618+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "614203",
                    "issueId": "13298384"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298384/worklog/614206",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou closed pull request #10571:\nURL: https://github.com/apache/arrow/pull/10571\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-23T20:25:29.242+0000",
                    "updated": "2021-06-23T20:25:29.242+0000",
                    "started": "2021-06-23T20:25:29.242+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "614206",
                    "issueId": "13298384"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/3",
            "id": "3",
            "description": "A task that needs to be done.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21148&avatarType=issuetype",
            "name": "Task",
            "subtask": false,
            "avatarId": 21148
        },
        "timespent": 10200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4d5b7c8d[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@20745519[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@a6329ab[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@83d6963[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1c9651b3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@54194c53[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4724190a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@243116fc[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@a84c000[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@14617ed7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@73ead918[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5fc0a76f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10200,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jun 23 20:25:48 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-06-23T20:25:48.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8459/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2020-04-14T19:52:39.000+0000",
        "updated": "2021-06-23T20:25:48.000+0000",
        "timeoriginalestimate": null,
        "description": "Reading through the cmake-format releases page it seems to contain improvements.\r\n\r\nAdditionally we should check cmake-format's version in run-cmake-format.py to have unified behaviour both locally and on the CI.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Dev][Archery] Use a more recent cmake-format",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298384/comment/17366896",
                    "id": "17366896",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Could this be fixed for 5.0.0?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-06-21T23:38:57.720+0000",
                    "updated": "2021-06-21T23:38:57.720+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13298384/comment/17368442",
                    "id": "17368442",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Issue resolved by pull request 10571\n[https://github.com/apache/arrow/pull/10571]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2021-06-23T20:25:48.555+0000",
                    "updated": "2021-06-23T20:25:48.555+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z0dmu8:",
        "customfield_12314139": null
    }
}