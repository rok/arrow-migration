{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13412202",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412202",
    "key": "ARROW-14731",
    "fields": {
        "fixVersions": [],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/6",
            "id": "6",
            "description": "The problem isn't valid and it can't be fixed.",
            "name": "Invalid"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=baksmj",
            "name": "baksmj",
            "key": "baksmj",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=baksmj&avatarId=46648",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=baksmj&avatarId=46648",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=baksmj&avatarId=46648",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=baksmj&avatarId=46648"
            },
            "displayName": "Benson Muite",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "name": "Closed",
            "id": "6",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=baksmj",
            "name": "baksmj",
            "key": "baksmj",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=baksmj&avatarId=46648",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=baksmj&avatarId=46648",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=baksmj&avatarId=46648",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=baksmj&avatarId=46648"
            },
            "displayName": "Benson Muite",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=baksmj",
            "name": "baksmj",
            "key": "baksmj",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=baksmj&avatarId=46648",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=baksmj&avatarId=46648",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=baksmj&avatarId=46648",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=baksmj&avatarId=46648"
            },
            "displayName": "Benson Muite",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14731/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 12,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412202/worklog/682428",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkmgit opened a new pull request #11720:\nURL: https://github.com/apache/arrow/pull/11720\n\n\n   revert to signed 32 bit type\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-17T08:31:05.164+0000",
                    "updated": "2021-11-17T08:31:05.164+0000",
                    "started": "2021-11-17T08:31:05.164+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "682428",
                    "issueId": "13412202"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412202/worklog/682429",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11720:\nURL: https://github.com/apache/arrow/pull/11720#issuecomment-971351141\n\n\n   https://issues.apache.org/jira/browse/ARROW-14731\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-17T08:31:33.906+0000",
                    "updated": "2021-11-17T08:31:33.906+0000",
                    "started": "2021-11-17T08:31:33.905+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "682429",
                    "issueId": "13412202"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412202/worklog/682443",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #11720:\nURL: https://github.com/apache/arrow/pull/11720#issuecomment-971368307\n\n\n   Is this fixing a particular bug? If so, I'd expect a test to be added.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-17T08:56:10.414+0000",
                    "updated": "2021-11-17T08:56:10.414+0000",
                    "started": "2021-11-17T08:56:10.414+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "682443",
                    "issueId": "13412202"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412202/worklog/682558",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkmgit commented on pull request #11720:\nURL: https://github.com/apache/arrow/pull/11720#issuecomment-971519070\n\n\n   @pitrou An example following https://stackoverflow.com/questions/1855459/maximum-value-of-int is below:\r\n   ```c++\r\n   #include<iostream>\r\n   #include<limits>\r\n   int main()\r\n   {\r\n           int imin = std::numeric_limits<int>::min();\r\n           int imax = std::numeric_limits<int>::max();\r\n           int ia = 105;\r\n           int ib = -2;\r\n           int c;\r\n           // Typically range of unsigned int is [0,4294967295]\r\n           unsigned int d;\r\n           // Typically range of int is [-2147483648,2147483647]\r\n           int ba = imax-1;\r\n           int bb = -2;\r\n           int bc = 2;\r\n           int16_t i16a = std::numeric_limits<int16_t>::max() -1;\r\n           int i16a_32 = std::numeric_limits<int16_t>::max() -1;\r\n           int16_t i16b = -2;\r\n           int16_t i16c;\r\n           uint16_t i16d;\r\n           // Do some multiplication\r\n           c = ia * ib;\r\n           std::cout << c << std::endl;\r\n           // answer should be -210\r\n   \r\n           // cast to unsigned and do multiplication\r\n           c = (int) (((unsigned int) ia ) * ((unsigned int) ib ));\r\n           std::cout << c << std::endl;\r\n           // answer should be -210 after casting again\r\n   \r\n           // cast to unsigned and do multiplication\r\n           c = (int) (((unsigned int) ba) * ((unsigned int) bb ));\r\n           std::cout << c << std::endl;\r\n           // Cannot represent answer -4294967292 get overflow and output 4\r\n           \r\n           // cast to unsigned and do multiplication\r\n           d = (unsigned int) (((unsigned int) ba) * ((unsigned int) bb ));\r\n           std::cout << d << std::endl;\r\n           // output should be -4294967292 but cannot represent it so get output 4\r\n   \r\n           // cast to unsigned and do multiplication\r\n           c = (int) (((unsigned int) ba) * ((unsigned int) bc ));\r\n           std::cout << c << std::endl;\r\n           // output should be 4294967292 which cannot be represented and get -4\r\n   \r\n           // cast to unsigned and do multiplication\r\n           d = (unsigned int) (((unsigned int) ba) * ((unsigned int) bc ));\r\n           std::cout << d << std::endl;\r\n           // output should be 4294967292\r\n   \r\n           // cast to unsigned and do multiplication\r\n           c = (int) (((unsigned int) ba) * ((unsigned int) bc ));\r\n           std::cout << c << std::endl;\r\n           // output should be 4294967292 which cannot be represented and get -4\r\n   \r\n           // cast to unsigned and do multiplication\r\n           c = (int) ((( int) i16a) * (( int) i16b ));\r\n           std::cout << c << std::endl;\r\n           // output should be -65532\r\n   \r\n           // cast to unsigned int and do multiplication\r\n           i16c = (int16_t) (((unsigned int) i16a ) * ((unsigned int) i16b ));\r\n           std::cout << i16c << std::endl;\r\n           // output should be -65532 which cannot be represented and get 4\r\n   \r\n           // cast to unsigned int and do multiplication\r\n           i16d = (uint16_t) (((unsigned int) i16a ) * ((unsigned int) i16b ));\r\n           std::cout << i16d << std::endl;\r\n           // output should be -65532 which cannot be represented and get 4 \r\n   \r\n           return 0;\r\n   }\r\n   ```\r\n   The ranges for the types do depend on the machine being used and also the programming language, but for C++, a minimum range is guaranteed by the standard. Can turn these into tests and put them in \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-17T12:09:09.033+0000",
                    "updated": "2021-11-17T12:09:09.033+0000",
                    "started": "2021-11-17T12:09:09.033+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "682558",
                    "issueId": "13412202"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412202/worklog/682562",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkmgit edited a comment on pull request #11720:\nURL: https://github.com/apache/arrow/pull/11720#issuecomment-971519070\n\n\n   @pitrou An example following https://stackoverflow.com/questions/1855459/maximum-value-of-int is below:\r\n   ```c++\r\n   #include<iostream>\r\n   #include<limits>\r\n   int main()\r\n   {\r\n           int imin = std::numeric_limits<int>::min();\r\n           int imax = std::numeric_limits<int>::max();\r\n           int ia = 105;\r\n           int ib = -2;\r\n           int c;\r\n           // Typically range of unsigned int is [0,4294967295]\r\n           unsigned int d;\r\n           // Typically range of int is [-2147483648,2147483647]\r\n           int ba = imax-1;\r\n           int bb = -2;\r\n           int bc = 2;\r\n           int16_t i16a = std::numeric_limits<int16_t>::max() -1;\r\n           int i16a_32 = std::numeric_limits<int16_t>::max() -1;\r\n           int16_t i16b = -2;\r\n           int16_t i16c;\r\n           uint16_t i16d;\r\n           // Do some multiplication\r\n           c = ia * ib;\r\n           std::cout << c << std::endl;\r\n           // answer should be -210\r\n   \r\n           // cast to unsigned and do multiplication\r\n           c = (int) (((unsigned int) ia ) * ((unsigned int) ib ));\r\n           std::cout << c << std::endl;\r\n           // answer should be -210 after casting again\r\n   \r\n           // cast to unsigned and do multiplication\r\n           c = (int) (((unsigned int) ba) * ((unsigned int) bb ));\r\n           std::cout << c << std::endl;\r\n           // Cannot represent answer -4294967292 get overflow and output 4\r\n           \r\n           // cast to unsigned and do multiplication\r\n           d = (unsigned int) (((unsigned int) ba) * ((unsigned int) bb ));\r\n           std::cout << d << std::endl;\r\n           // output should be -4294967292 but cannot represent it so get output 4\r\n   \r\n           // cast to unsigned and do multiplication\r\n           c = (int) (((unsigned int) ba) * ((unsigned int) bc ));\r\n           std::cout << c << std::endl;\r\n           // output should be 4294967292 which cannot be represented and get -4\r\n   \r\n           // cast to unsigned and do multiplication\r\n           d = (unsigned int) (((unsigned int) ba) * ((unsigned int) bc ));\r\n           std::cout << d << std::endl;\r\n           // output should be 4294967292\r\n   \r\n           // cast to unsigned and do multiplication\r\n           c = (int) (((unsigned int) ba) * ((unsigned int) bc ));\r\n           std::cout << c << std::endl;\r\n           // output should be 4294967292 which cannot be represented and get -4\r\n   \r\n           // cast to unsigned and do multiplication\r\n           c = (int) ((( int) i16a) * (( int) i16b ));\r\n           std::cout << c << std::endl;\r\n           // output should be -65532\r\n   \r\n           // cast to unsigned int and do multiplication\r\n           i16c = (int16_t) (((unsigned int) i16a ) * ((unsigned int) i16b ));\r\n           std::cout << i16c << std::endl;\r\n           // output should be -65532 which cannot be represented and get 4\r\n   \r\n           // cast to unsigned int and do multiplication\r\n           i16d = (uint16_t) (((unsigned int) i16a ) * ((unsigned int) i16b ));\r\n           std::cout << i16d << std::endl;\r\n           // output should be -65532 which cannot be represented and get 4 \r\n   \r\n           // Do multiplication\r\n           i16d = i16a *  i16b;\r\n           std::cout << i16d << std::endl;\r\n           // output should be -65532 which cannot be represented and get 4\r\n   \r\n           return 0;\r\n   }\r\n   ```\r\n   The ranges for the types do depend on the machine being used and also the programming language, but for C++, a minimum range is guaranteed by the standard. Can turn these into tests and put them in \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-17T12:14:47.819+0000",
                    "updated": "2021-11-17T12:14:47.819+0000",
                    "started": "2021-11-17T12:14:47.818+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "682562",
                    "issueId": "13412202"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412202/worklog/682581",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkmgit edited a comment on pull request #11720:\nURL: https://github.com/apache/arrow/pull/11720#issuecomment-971519070\n\n\n   @pitrou An example following https://stackoverflow.com/questions/1855459/maximum-value-of-int is below:\r\n   ```c++\r\n   #include<iostream>\r\n   #include<limits>\r\n   int main()\r\n   {\r\n           int imin = std::numeric_limits<int>::min();\r\n           int imax = std::numeric_limits<int>::max();\r\n           int ia = 105;\r\n           int ib = -2;\r\n           int c;\r\n           // Typically range of unsigned int is [0,4294967295]\r\n           unsigned int d;\r\n           // Typically range of int is [-2147483648,2147483647]\r\n           int ba = imax-1;\r\n           int bb = -2;\r\n           int bc = 2;\r\n           int16_t i16a = std::numeric_limits<int16_t>::max() -1;\r\n           int i16a_32 = std::numeric_limits<int16_t>::max() -1;\r\n           int16_t i16b = -2;\r\n           int16_t i16c = 2;\r\n           int16_t i16d;\r\n           uint16_t i16e;\r\n           // Do some multiplication\r\n           c = ia * ib;\r\n           std::cout << c << std::endl;\r\n           // answer should be -210\r\n   \r\n           // cast to unsigned and do multiplication\r\n           c = (int) (((unsigned int) ia ) * ((unsigned int) ib ));\r\n           std::cout << c << std::endl;\r\n           // answer should be -210 after casting again\r\n   \r\n           // cast to unsigned and do multiplication\r\n           c = (int) (((unsigned int) ba) * ((unsigned int) bb ));\r\n           std::cout << c << std::endl;\r\n           // Cannot represent answer -4294967292 get overflow and output 4\r\n           \r\n           // cast to unsigned and do multiplication\r\n           d = (unsigned int) (((unsigned int) ba) * ((unsigned int) bb ));\r\n           std::cout << d << std::endl;\r\n           // output should be -4294967292 but cannot represent it so get output 4\r\n   \r\n           // cast to unsigned and do multiplication\r\n           c = (int) (((unsigned int) ba) * ((unsigned int) bc ));\r\n           std::cout << c << std::endl;\r\n           // output should be 4294967292 which cannot be represented and get -4\r\n   \r\n           // cast to unsigned and do multiplication\r\n           d = (unsigned int) (((unsigned int) ba) * ((unsigned int) bc ));\r\n           std::cout << d << std::endl;\r\n           // output should be 4294967292\r\n   \r\n           // cast to unsigned and do multiplication\r\n           c = (int) (((unsigned int) ba) * ((unsigned int) bc ));\r\n           std::cout << c << std::endl;\r\n           // output should be 4294967292 which cannot be represented and get -4\r\n   \r\n           // cast to int and do multiplication\r\n           c = (int) ((( int) i16a) * (( int) i16b ));\r\n           std::cout << c << std::endl;\r\n           // output should be -65532\r\n   \r\n           // cast to unsigned int and do multiplication\r\n           i16c = (int16_t) (((unsigned int) i16a ) * ((unsigned int) i16b ));\r\n           std::cout << i16c << std::endl;\r\n           // output should be -65532 which cannot be represented and get 4\r\n   \r\n           // cast to unsigned int and do multiplication\r\n           i16d = (int16_t) (((unsigned int) i16a ) * ((unsigned int) i16c ));\r\n           std::cout << i16d << std::endl;\r\n           // output should be 65532 which cannot be represented and get -8\r\n   \r\n           // cast to unsigned int and do multiplication\r\n           i16d = (uint16_t) (((unsigned int) i16a ) * ((unsigned int) i16b ));\r\n           std::cout << i16d << std::endl;\r\n           // output should be -65532 which cannot be represented and get 4 \r\n   \r\n           // do multiplication\r\n           i16e = i16a *  i16b;\r\n           std::cout << i16e << std::endl;\r\n           // output should be -65532 which cannot be represented and get 4\r\n           return 0;\r\n   }\r\n   \r\n   ```\r\n   The ranges for the types do depend on the machine being used and also the programming language, but for C++, a minimum range is guaranteed by the standard. Can turn these into tests and put them in \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-17T12:46:31.747+0000",
                    "updated": "2021-11-17T12:46:31.747+0000",
                    "started": "2021-11-17T12:46:31.746+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "682581",
                    "issueId": "13412202"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412202/worklog/682606",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkmgit commented on pull request #11720:\nURL: https://github.com/apache/arrow/pull/11720#issuecomment-971576541\n\n\n   Some examples for how to work with overflows are available at https://wiki.sei.cmu.edu/confluence/display/c/INT32-C.+Ensure+that+operations+on+signed+integers+do+not+result+in+overflow\r\n   The basic idea is to use the limits to check for overflows and report an error if there is one. Int types do not have NAN or other error representation, so would probably be good to output a warning/error but let the computation continue.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-17T13:20:13.435+0000",
                    "updated": "2021-11-17T13:20:13.435+0000",
                    "started": "2021-11-17T13:20:13.435+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "682606",
                    "issueId": "13412202"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412202/worklog/683303",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #11720:\nURL: https://github.com/apache/arrow/pull/11720#discussion_r752247894\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_arithmetic.cc\n##########\n@@ -247,12 +247,14 @@ struct Multiply {\n \n   // Multiplication of 16 bit integer types implicitly promotes to signed 32 bit\n   // integer. However, some inputs may nevertheless overflow (which triggers undefined\n-  // behaviour). Therefore we first cast to 32 bit unsigned integers where overflow is\n-  // well defined.\n+  // behaviour). One could first cast to 32 bit unsigned integers where overflow is\n+  // well defined, but this is only reasonable if both numbers are positive or \n+  // both numbers are negative. It may be better for the user to check for an overflow\n+  // or have a slow safe computation in which the program checks for an overflow\n   template <typename T, typename Arg0, typename Arg1>\n   static constexpr enable_if_same<T, int16_t, T> Call(KernelContext*, int16_t left,\n                                                       int16_t right, Status*) {\n-    return static_cast<uint32_t>(left) * static_cast<uint32_t>(right);\n+    return static_cast<int32_t>(left) * static_cast<int32_t>(right);\n\nReview comment:\n       Looks to me `uint32` or`int32` doesn't matter here.\r\n   Actually I think the even the casting to 32 bit integer is not necessary: `int16 * int16` won't overflow an `int32`.\r\n   Only `uint16 * uint16` may overflow `int32` and trigger UB.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-18T13:37:35.533+0000",
                    "updated": "2021-11-18T13:37:35.533+0000",
                    "started": "2021-11-18T13:37:35.533+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "683303",
                    "issueId": "13412202"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412202/worklog/685571",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on pull request #11720:\nURL: https://github.com/apache/arrow/pull/11720#issuecomment-977394707\n\n\n   @bkmgit , are you still working on this?\r\n   Arithmetic kernels have checked version which reports overflow [1]. Looks this PR is not necessary?\r\n   \r\n   [1] https://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/kernels/scalar_arithmetic.cc#L146\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-24T02:00:24.163+0000",
                    "updated": "2021-11-24T02:00:24.163+0000",
                    "started": "2021-11-24T02:00:24.162+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "685571",
                    "issueId": "13412202"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412202/worklog/685584",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkmgit commented on pull request #11720:\nURL: https://github.com/apache/arrow/pull/11720#issuecomment-977416868\n\n\n   Thanks for letting me know. Checking code. Can then close this. Conversion is still the same:\r\n   https://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/kernels/scalar_arithmetic.cc#L252\r\n   Would expect a cast to int32 of the final result so that multiplication of a positive and negative number is correct, but maybe this is done elsewhere, as the test passes:\r\n   https://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/kernels/scalar_arithmetic_test.cc#L818\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-24T02:26:05.431+0000",
                    "updated": "2021-11-24T02:26:05.431+0000",
                    "started": "2021-11-24T02:26:05.430+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "685584",
                    "issueId": "13412202"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412202/worklog/686176",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 closed pull request #11720:\nURL: https://github.com/apache/arrow/pull/11720\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-25T01:49:43.564+0000",
                    "updated": "2021-11-25T01:49:43.564+0000",
                    "started": "2021-11-25T01:49:43.564+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "686176",
                    "issueId": "13412202"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412202/worklog/686177",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on pull request #11720:\nURL: https://github.com/apache/arrow/pull/11720#issuecomment-978727112\n\n\n   Close this PR. Feel free to reopen if new findings.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-25T01:49:47.588+0000",
                    "updated": "2021-11-25T01:49:47.588+0000",
                    "started": "2021-11-25T01:49:47.588+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "686177",
                    "issueId": "13412202"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 7200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5b760c76[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2583b14d[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5e4fd766[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@66fe1c3b[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3d90e290[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3dfac10[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@238bbfea[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@35027064[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@f3c9036[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@717d12ed[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@ff787c7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2950470d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 7200,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Dec 23 05:38:12 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-12-23T05:38:44.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14731/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-11-17T08:10:54.000+0000",
        "updated": "2021-12-23T05:38:44.000+0000",
        "timeoriginalestimate": null,
        "description": "On line 248 of https://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/kernels/scalar_arithmetic.cc int16 type is converted to uint32 type because overflows are better handled in uint32 than in int32 This will be problematic if some of the numbers are negative. It may be better to use th default int32 and explicitly check for overflows if needed.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 7200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Compute] Conversion to unsigned types can be problematic for negative numbers",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412202/comment/17451464",
                    "id": "17451464",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Can this be closed?  [~baksmj]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-12-01T01:48:22.393+0000",
                    "updated": "2021-12-01T01:48:22.393+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412202/comment/17464299",
                    "id": "17464299",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=baksmj",
                        "name": "baksmj",
                        "key": "baksmj",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=baksmj&avatarId=46648",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=baksmj&avatarId=46648",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=baksmj&avatarId=46648",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=baksmj&avatarId=46648"
                        },
                        "displayName": "Benson Muite",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Behavior is consistent with rest of implementation. One can use functions that check for overflows.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=baksmj",
                        "name": "baksmj",
                        "key": "baksmj",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=baksmj&avatarId=46648",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=baksmj&avatarId=46648",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=baksmj&avatarId=46648",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=baksmj&avatarId=46648"
                        },
                        "displayName": "Benson Muite",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-12-23T05:38:12.395+0000",
                    "updated": "2021-12-23T05:38:12.395+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z0wt3c:",
        "customfield_12314139": null
    }
}