{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13150851",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150851",
    "key": "ARROW-2417",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "aggregateprogress": {
            "progress": 5400,
            "total": 5400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 5400,
            "total": 5400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2417/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 12,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150851/worklog/96448",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove opened a new pull request #1957: ARROW-2417: [Rust] Fix API safety issues\nURL: https://github.com/apache/arrow/pull/1957\n \n \n   I reviewed all uses of unsafe in the API implementation and added appropriate assertions where needed to guarantee that the API we expose is safe. Also added tests to verify in some cases.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-04-28T15:46:10.836+0000",
                    "updated": "2018-04-28T15:46:10.836+0000",
                    "started": "2018-04-28T15:46:10.835+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "96448",
                    "issueId": "13150851"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150851/worklog/96504",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jesskfullwood commented on a change in pull request #1957: ARROW-2417: [Rust] Fix API safety issues\nURL: https://github.com/apache/arrow/pull/1957#discussion_r184887352\n \n \n\n ##########\n File path: rust/src/buffer.rs\n ##########\n @@ -41,24 +42,27 @@ impl<T> Buffer<T> {\n         self.len\n     }\n \n+    /// Get a pointer to the data contained by the buffer\n     pub fn data(&self) -> *const T {\n         self.data\n     }\n \n     pub fn slice(&self, start: usize, end: usize) -> &[T] {\n         assert!(start <= end);\n-        assert!(start <= self.len as usize);\n+        assert!(start < self.len as usize);\n         assert!(end <= self.len as usize);\n         unsafe { slice::from_raw_parts(self.data.offset(start as isize), (end - start) as usize) }\n     }\n \n     /// Get a reference to the value at the specified offset\n     pub fn get(&self, i: usize) -> &T {\n+        assert!(i < self.len as usize);\n \n Review comment:\n   panic message would be useful - `assert!(..., \"Out-of-bounds access\")` (same goes for elsewhere)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-04-29T15:59:17.403+0000",
                    "updated": "2018-04-29T15:59:17.403+0000",
                    "started": "2018-04-29T15:59:17.403+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "96504",
                    "issueId": "13150851"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150851/worklog/96505",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jesskfullwood commented on a change in pull request #1957: ARROW-2417: [Rust] Fix API safety issues\nURL: https://github.com/apache/arrow/pull/1957#discussion_r184887296\n \n \n\n ##########\n File path: rust/src/buffer.rs\n ##########\n @@ -41,24 +42,27 @@ impl<T> Buffer<T> {\n         self.len\n     }\n \n+    /// Get a pointer to the data contained by the buffer\n     pub fn data(&self) -> *const T {\n         self.data\n     }\n \n     pub fn slice(&self, start: usize, end: usize) -> &[T] {\n         assert!(start <= end);\n-        assert!(start <= self.len as usize);\n+        assert!(start < self.len as usize);\n         assert!(end <= self.len as usize);\n         unsafe { slice::from_raw_parts(self.data.offset(start as isize), (end - start) as usize) }\n     }\n \n     /// Get a reference to the value at the specified offset\n     pub fn get(&self, i: usize) -> &T {\n+        assert!(i < self.len as usize);\n         unsafe { &(*self.data.offset(i as isize)) }\n     }\n \n-    /// Deprecated method (used by Bitmap)\n+    /// Write to a slot in the buffer\n     pub fn set(&mut self, i: usize, v: T) {\n+        assert!(i < self.len as usize);\n         unsafe {\n             let p = mem::transmute::<*const T, *mut T>(self.data);\n \n Review comment:\n   `transmute` is overkill here - can get away with (safe) `let p = self.data as *mut _`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-04-29T15:59:17.405+0000",
                    "updated": "2018-04-29T15:59:17.405+0000",
                    "started": "2018-04-29T15:59:17.404+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "96505",
                    "issueId": "13150851"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150851/worklog/96506",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jesskfullwood commented on a change in pull request #1957: ARROW-2417: [Rust] Fix API safety issues\nURL: https://github.com/apache/arrow/pull/1957#discussion_r184887462\n \n \n\n ##########\n File path: rust/src/buffer.rs\n ##########\n @@ -41,24 +42,27 @@ impl<T> Buffer<T> {\n         self.len\n     }\n \n+    /// Get a pointer to the data contained by the buffer\n     pub fn data(&self) -> *const T {\n         self.data\n     }\n \n     pub fn slice(&self, start: usize, end: usize) -> &[T] {\n         assert!(start <= end);\n-        assert!(start <= self.len as usize);\n+        assert!(start < self.len as usize);\n         assert!(end <= self.len as usize);\n         unsafe { slice::from_raw_parts(self.data.offset(start as isize), (end - start) as usize) }\n     }\n \n     /// Get a reference to the value at the specified offset\n     pub fn get(&self, i: usize) -> &T {\n \n Review comment:\n   Good idea to combine `slice` and `get`, to mirror the stdlib [slice api](https://doc.rust-lang.org/std/primitive.slice.html#method.get) (it returns a slice if passed a `Range`, item if passed a `usize`. Depending on how `Buffer` is used, might also be worth implementing `Index` and `IndexMut`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-04-29T15:59:17.409+0000",
                    "updated": "2018-04-29T15:59:17.409+0000",
                    "started": "2018-04-29T15:59:17.407+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "96506",
                    "issueId": "13150851"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150851/worklog/96507",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jesskfullwood commented on a change in pull request #1957: ARROW-2417: [Rust] Fix API safety issues\nURL: https://github.com/apache/arrow/pull/1957#discussion_r184887229\n \n \n\n ##########\n File path: rust/src/buffer.rs\n ##########\n @@ -41,24 +42,27 @@ impl<T> Buffer<T> {\n         self.len\n     }\n \n+    /// Get a pointer to the data contained by the buffer\n     pub fn data(&self) -> *const T {\n         self.data\n     }\n \n     pub fn slice(&self, start: usize, end: usize) -> &[T] {\n         assert!(start <= end);\n-        assert!(start <= self.len as usize);\n+        assert!(start < self.len as usize);\n \n Review comment:\n   I do not think this assert is necessary - if start == end then the slice has length zero so is safe.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-04-29T15:59:17.411+0000",
                    "updated": "2018-04-29T15:59:17.411+0000",
                    "started": "2018-04-29T15:59:17.410+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "96507",
                    "issueId": "13150851"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150851/worklog/96508",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jesskfullwood commented on a change in pull request #1957: ARROW-2417: [Rust] Fix API safety issues\nURL: https://github.com/apache/arrow/pull/1957#discussion_r184887095\n \n \n\n ##########\n File path: rust/src/buffer.rs\n ##########\n @@ -32,6 +32,7 @@ pub struct Buffer<T> {\n }\n \n impl<T> Buffer<T> {\n+    /// create a buffer from an existing region of memory (must already be byte-aligned)\n     pub fn from_raw_parts(data: *const T, len: i32) -> Self {\n \n Review comment:\n   I believe this should be marked unsafe - if an incorrect pointer or len is passed, `get` and `slice` could access arbitrary memory.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-04-29T15:59:17.421+0000",
                    "updated": "2018-04-29T15:59:17.421+0000",
                    "started": "2018-04-29T15:59:17.421+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "96508",
                    "issueId": "13150851"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150851/worklog/96509",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jesskfullwood commented on a change in pull request #1957: ARROW-2417: [Rust] Fix API safety issues\nURL: https://github.com/apache/arrow/pull/1957#discussion_r184887549\n \n \n\n ##########\n File path: rust/src/buffer.rs\n ##########\n @@ -159,7 +166,7 @@ impl From<Bytes> for Buffer<u8> {\n                     mem::transmute::<*const u8, *const libc::c_void>(bytes.as_ptr()),\n                     len * sz,\n                 );\n-                mem::transmute::<*mut libc::c_void, *const u8>(dst)\n+                mem::transmute::<*mut libc::c_void, *mut u8>(dst)\n \n Review comment:\n   Again, `transmute` is overkill, a cast would do (check out the [nomicon](https://doc.rust-lang.org/nightly/nomicon/casts.html). \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-04-29T15:59:17.446+0000",
                    "updated": "2018-04-29T15:59:17.446+0000",
                    "started": "2018-04-29T15:59:17.445+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "96509",
                    "issueId": "13150851"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150851/worklog/96510",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jesskfullwood commented on issue #1957: ARROW-2417: [Rust] Fix API safety issues\nURL: https://github.com/apache/arrow/pull/1957#issuecomment-385261516\n \n \n   Made a few general comments\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-04-29T16:01:20.860+0000",
                    "updated": "2018-04-29T16:01:20.860+0000",
                    "started": "2018-04-29T16:01:20.859+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "96510",
                    "issueId": "13150851"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150851/worklog/96635",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on issue #1957: ARROW-2417: [Rust] Fix API safety issues\nURL: https://github.com/apache/arrow/pull/1957#issuecomment-385366077\n \n \n   Thanks @jesskfullwood I have pushed changes to address the feedback. It's nice to get rid of those transmute calls!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-04-30T10:54:32.437+0000",
                    "updated": "2018-04-30T10:54:32.437+0000",
                    "started": "2018-04-30T10:54:32.437+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "96635",
                    "issueId": "13150851"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150851/worklog/97020",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on issue #1957: ARROW-2417: [Rust] Fix API safety issues\nURL: https://github.com/apache/arrow/pull/1957#issuecomment-385636453\n \n \n   @jesskfullwood Does this look good to you?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-01T09:48:28.540+0000",
                    "updated": "2018-05-01T09:48:28.540+0000",
                    "started": "2018-05-01T09:48:28.540+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "97020",
                    "issueId": "13150851"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150851/worklog/97145",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jesskfullwood commented on issue #1957: ARROW-2417: [Rust] Fix API safety issues\nURL: https://github.com/apache/arrow/pull/1957#issuecomment-385723787\n \n \n   Yes, LGTM!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-01T16:58:15.062+0000",
                    "updated": "2018-05-01T16:58:15.062+0000",
                    "started": "2018-05-01T16:58:15.061+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "97145",
                    "issueId": "13150851"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150851/worklog/97146",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy closed pull request #1957: ARROW-2417: [Rust] Fix API safety issues\nURL: https://github.com/apache/arrow/pull/1957\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/rust/src/buffer.rs b/rust/src/buffer.rs\nindex cdfbfc995..e8168f2ae 100644\n--- a/rust/src/buffer.rs\n+++ b/rust/src/buffer.rs\n@@ -32,7 +32,8 @@ pub struct Buffer<T> {\n }\n \n impl<T> Buffer<T> {\n-    pub fn from_raw_parts(data: *const T, len: i32) -> Self {\n+    /// create a buffer from an existing region of memory (must already be byte-aligned)\n+    pub unsafe fn from_raw_parts(data: *const T, len: i32) -> Self {\n         Buffer { data, len }\n     }\n \n@@ -41,26 +42,28 @@ impl<T> Buffer<T> {\n         self.len\n     }\n \n+    /// Get a pointer to the data contained by the buffer\n     pub fn data(&self) -> *const T {\n         self.data\n     }\n \n     pub fn slice(&self, start: usize, end: usize) -> &[T] {\n-        assert!(start <= end);\n-        assert!(start <= self.len as usize);\n         assert!(end <= self.len as usize);\n+        assert!(start <= end);\n         unsafe { slice::from_raw_parts(self.data.offset(start as isize), (end - start) as usize) }\n     }\n \n     /// Get a reference to the value at the specified offset\n     pub fn get(&self, i: usize) -> &T {\n+        assert!(i < self.len as usize);\n         unsafe { &(*self.data.offset(i as isize)) }\n     }\n \n-    /// Deprecated method (used by Bitmap)\n+    /// Write to a slot in the buffer\n     pub fn set(&mut self, i: usize, v: T) {\n+        assert!(i < self.len as usize);\n+        let p = self.data as *mut T;\n         unsafe {\n-            let p = mem::transmute::<*const T, *mut T>(self.data);\n             *p.offset(i as isize) = v;\n         }\n     }\n@@ -75,12 +78,10 @@ impl<T> Buffer<T> {\n     }\n }\n \n+/// Release the underlying memory when the Buffer goes out of scope\n impl<T> Drop for Buffer<T> {\n     fn drop(&mut self) {\n-        unsafe {\n-            let p = mem::transmute::<*const T, *const u8>(self.data);\n-            free_aligned(p);\n-        }\n+        free_aligned(self.data as *const u8);\n     }\n }\n \n@@ -99,14 +100,16 @@ where\n \n     fn next(&mut self) -> Option<Self::Item> {\n         if self.index < self.len as isize {\n+            let value = unsafe { *self.data.offset(self.index) };\n             self.index += 1;\n-            Some(unsafe { *self.data.offset(self.index - 1) })\n+            Some(value)\n         } else {\n             None\n         }\n     }\n }\n \n+/// Copy the memory from a Vec<T> into a newly allocated Buffer<T>\n macro_rules! array_from_primitive {\n     ($DT:ty) => {\n         impl From<Vec<$DT>> for Buffer<$DT> {\n@@ -118,13 +121,9 @@ macro_rules! array_from_primitive {\n                 Buffer {\n                     len: len as i32,\n                     data: unsafe {\n-                        let dst = mem::transmute::<*const u8, *mut libc::c_void>(buffer);\n-                        libc::memcpy(\n-                            dst,\n-                            mem::transmute::<*const $DT, *const libc::c_void>(v.as_ptr()),\n-                            len * sz,\n-                        );\n-                        mem::transmute::<*mut libc::c_void, *const $DT>(dst)\n+                        let dst = buffer as *mut libc::c_void;\n+                        libc::memcpy(dst, v.as_ptr() as *const libc::c_void, len * sz);\n+                        dst as *const $DT\n                     },\n                 }\n             }\n@@ -150,16 +149,12 @@ impl From<Bytes> for Buffer<u8> {\n         let len = bytes.len();\n         let sz = mem::size_of::<u8>();\n         let buf_mem = allocate_aligned((len * sz) as i64).unwrap();\n+        let dst = buf_mem as *mut libc::c_void;\n         Buffer {\n             len: len as i32,\n             data: unsafe {\n-                let dst = mem::transmute::<*const u8, *mut libc::c_void>(buf_mem);\n-                libc::memcpy(\n-                    dst,\n-                    mem::transmute::<*const u8, *const libc::c_void>(bytes.as_ptr()),\n-                    len * sz,\n-                );\n-                mem::transmute::<*mut libc::c_void, *const u8>(dst)\n+                libc::memcpy(dst, bytes.as_ptr() as *const libc::c_void, len * sz);\n+                dst as *mut u8\n             },\n         }\n     }\n@@ -237,4 +232,39 @@ mod tests {\n             .collect::<Vec<i32>>();\n         assert_eq!(c, vec![5, 8, 9, 8, 5]);\n     }\n+\n+    #[test]\n+    #[should_panic]\n+    fn test_get_out_of_bounds() {\n+        let a = Buffer::from(vec![1, 2, 3, 4, 5]);\n+        a.get(123); // should panic\n+    }\n+\n+    #[test]\n+    fn slice_empty_at_end() {\n+        let a = Buffer::from(vec![1, 2, 3, 4, 5]);\n+        let s = a.slice(5, 5);\n+        assert_eq!(0, s.len());\n+    }\n+\n+    #[test]\n+    #[should_panic]\n+    fn slice_start_out_of_bounds() {\n+        let a = Buffer::from(vec![1, 2, 3, 4, 5]);\n+        a.slice(6, 6); // should panic\n+    }\n+\n+    #[test]\n+    #[should_panic]\n+    fn slice_end_out_of_bounds() {\n+        let a = Buffer::from(vec![1, 2, 3, 4, 5]);\n+        a.slice(0, 6); // should panic\n+    }\n+\n+    #[test]\n+    #[should_panic]\n+    fn slice_end_before_start() {\n+        let a = Buffer::from(vec![1, 2, 3, 4, 5]);\n+        a.slice(3, 2); // should panic\n+    }\n }\ndiff --git a/rust/src/builder.rs b/rust/src/builder.rs\nindex ad0caec9f..2d5e321f8 100644\n--- a/rust/src/builder.rs\n+++ b/rust/src/builder.rs\n@@ -44,7 +44,7 @@ impl<T> Builder<T> {\n         Builder {\n             len: 0,\n             capacity,\n-            data: unsafe { mem::transmute::<*const u8, *mut T>(buffer) },\n+            data: buffer as *mut T,\n         }\n     }\n \n@@ -60,9 +60,8 @@ impl<T> Builder<T> {\n \n     /// Get the internal byte-aligned memory buffer as a mutable slice\n     pub fn slice_mut(&mut self, start: usize, end: usize) -> &mut [T] {\n-        assert!(start <= end);\n-        assert!(start < self.capacity as usize);\n         assert!(end <= self.capacity as usize);\n+        assert!(start <= end);\n         unsafe {\n             slice::from_raw_parts_mut(self.data.offset(start as isize), (end - start) as usize)\n         }\n@@ -94,8 +93,8 @@ impl<T> Builder<T> {\n         let sz = mem::size_of::<T>();\n         unsafe {\n             libc::memcpy(\n-                mem::transmute::<*mut T, *mut libc::c_void>(self.data.offset(self.len() as isize)),\n-                mem::transmute::<*const T, *const libc::c_void>(slice.as_ptr()),\n+                self.data.offset(self.len() as isize) as *mut libc::c_void,\n+                slice.as_ptr() as *const libc::c_void,\n                 slice.len() * sz,\n             );\n         }\n@@ -113,36 +112,33 @@ impl<T> Builder<T> {\n     /// Grow the buffer to the new size n (number of elements of type T)\n     fn grow(&mut self, new_capacity: usize) {\n         let sz = mem::size_of::<T>();\n+        let old_buffer = self.data;\n+        let new_buffer = allocate_aligned((new_capacity * sz) as i64).unwrap();\n         unsafe {\n-            let old_buffer = self.data;\n-            let new_buffer = allocate_aligned((new_capacity * sz) as i64).unwrap();\n             libc::memcpy(\n-                mem::transmute::<*const u8, *mut libc::c_void>(new_buffer),\n-                mem::transmute::<*const T, *const libc::c_void>(old_buffer),\n+                new_buffer as *mut libc::c_void,\n+                old_buffer as *const libc::c_void,\n                 self.len * sz,\n             );\n-            self.capacity = new_capacity;\n-            self.data = mem::transmute::<*const u8, *mut T>(new_buffer);\n-            free_aligned(mem::transmute::<*mut T, *const u8>(old_buffer));\n         }\n+        self.capacity = new_capacity;\n+        self.data = new_buffer as *mut T;\n+        free_aligned(old_buffer as *const u8);\n     }\n \n     /// Build a Buffer from the existing memory\n     pub fn finish(&mut self) -> Buffer<T> {\n         assert!(!self.data.is_null());\n-        let p = unsafe { mem::transmute::<*mut T, *const T>(self.data) };\n+        let p = self.data as *const T;\n         self.data = ptr::null_mut(); // ensure builder cannot be re-used\n-        Buffer::from_raw_parts(p, self.len as i32)\n+        unsafe { Buffer::from_raw_parts(p, self.len as i32) }\n     }\n }\n \n impl<T> Drop for Builder<T> {\n     fn drop(&mut self) {\n         if !self.data.is_null() {\n-            unsafe {\n-                let p = mem::transmute::<*const T, *const u8>(self.data);\n-                free_aligned(p);\n-            }\n+            free_aligned(self.data as *const u8);\n         }\n     }\n }\n@@ -214,4 +210,31 @@ mod tests {\n         assert_eq!(\"Hello, World!\", s);\n     }\n \n+    #[test]\n+    fn test_slice_empty_at_end() {\n+        let mut b: Builder<u8> = Builder::with_capacity(2);\n+        let s = b.slice_mut(2, 2);\n+        assert_eq!(0, s.len());\n+    }\n+\n+    #[test]\n+    #[should_panic]\n+    fn test_slice_start_out_of_bounds() {\n+        let mut b: Builder<u8> = Builder::with_capacity(2);\n+        b.slice_mut(3, 3); // should panic\n+    }\n+\n+    #[test]\n+    #[should_panic]\n+    fn test_slice_end_out_of_bounds() {\n+        let mut b: Builder<u8> = Builder::with_capacity(2);\n+        b.slice_mut(0, 3); // should panic\n+    }\n+\n+    #[test]\n+    #[should_panic]\n+    fn test_slice_end_before_start() {\n+        let mut b: Builder<u8> = Builder::with_capacity(2);\n+        b.slice_mut(1, 0); // should panic\n+    }\n }\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-01T17:03:41.238+0000",
                    "updated": "2018-05-01T17:03:41.238+0000",
                    "started": "2018-05-01T17:03:41.237+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "97146",
                    "issueId": "13150851"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 5400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@439c0bb3[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@73242cc3[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6ff23c51[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3d625758[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2a76eb3b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6596ae69[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1bf8063e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@340f4a8e[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@29bd5007[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@798846bf[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@229a7646[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6c8f03a1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 5400,
        "customfield_12312520": null,
        "customfield_12312521": "Tue May 01 17:03:43 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-05-01T17:03:43.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2417/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-04-08T14:11:55.000+0000",
        "updated": "2018-05-01T17:03:43.000+0000",
        "timeoriginalestimate": null,
        "description": "The Rust library makes a lot of use of unsafe calls. We should review the API to see if any methods we expose should be marked unsafe or whether we need to add assertions to make APIs safe.\r\n\r\nWe should also add more unit tests around this.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 5400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Review APIs for safety",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150851/comment/16457666",
                    "id": "16457666",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "body": "PR: https://github.com/apache/arrow/pull/1957",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "created": "2018-04-28T15:46:19.189+0000",
                    "updated": "2018-04-28T15:46:19.189+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150851/comment/16459864",
                    "id": "16459864",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "Issue resolved by pull request 1957\n[https://github.com/apache/arrow/pull/1957]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-05-01T17:03:43.315+0000",
                    "updated": "2018-05-01T17:03:43.315+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|i3sa3b:",
        "customfield_12314139": null
    }
}