{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13394809",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394809",
    "key": "ARROW-13611",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350323",
                "id": "12350323",
                "description": "",
                "name": "6.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available",
            "query-engine"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349493",
                "id": "12349493",
                "description": "",
                "name": "4.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-04-26"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350125",
                "id": "12350125",
                "name": "4.0.1",
                "archived": false,
                "released": true,
                "releaseDate": "2021-05-26"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12631484",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12631484",
                "type": {
                    "id": "12310000",
                    "name": "Duplicate",
                    "inward": "is duplicated by",
                    "outward": "duplicates",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"
                },
                "inwardIssue": {
                    "id": "13394296",
                    "key": "ARROW-13590",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394296",
                    "fields": {
                        "summary": "[C++] Ensure dataset writing applies back pressure",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/2",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
                            "name": "Critical",
                            "id": "2"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            },
            {
                "id": "12623989",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12623989",
                "type": {
                    "id": "10001",
                    "name": "dependent",
                    "inward": "is depended upon by",
                    "outward": "depends upon",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"
                },
                "inwardIssue": {
                    "id": "13404475",
                    "key": "ARROW-14191",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404475",
                    "fields": {
                        "summary": "[C++][Dataset] Dataset writes should respect backpressure",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 17400,
            "total": 17400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 17400,
            "total": 17400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13611/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 29,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394809/worklog/658885",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace opened a new pull request #11285:\nURL: https://github.com/apache/arrow/pull/11285\n\n\n   This PR adds backpressure back into the asynchronous scanner.  It creates an AsyncToggle which can be shared between the push-based sink and the pull-based scanner.  The sink will close the toggle when it's buffer fills up and the scanner will pause delivering items when the toggle is closed.\r\n   \r\n   This PR adds the feature in a way that bypasses the exec plan's backpressure mechanisms as those have not been fully fleshed out and I still am not sure what direction we are planning to go with that.  Instead the back pressure is almost completely handled outside of the compute space.\r\n   \r\n   I've got the same mechanism working for dataset writes but I don't want to hold up this PR while I wait for the write node to merge so I have created ARROW-14191 to follow that work.\r\n   \r\n   Currently backpressure is broken for ordered scans.  It turns out this has always been the case for the asynchronous scanner, even before it moved to the exec plan.  The root cause is that the merge generator will keep reading from files 2-N if the read on file 1 is slow.  I have created a test case which demonstrates this but will defer fixing this for ARROW-14192\r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-01T11:28:20.587+0000",
                    "updated": "2021-10-01T11:28:20.587+0000",
                    "started": "2021-10-01T11:28:20.586+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "658885",
                    "issueId": "13394809"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394809/worklog/658886",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11285:\nURL: https://github.com/apache/arrow/pull/11285#issuecomment-932147793\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-01T11:28:44.576+0000",
                    "updated": "2021-10-01T11:28:44.576+0000",
                    "started": "2021-10-01T11:28:44.575+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "658886",
                    "issueId": "13394809"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394809/worklog/658951",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11285:\nURL: https://github.com/apache/arrow/pull/11285#discussion_r720262544\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/scanner.cc\n##########\n@@ -593,20 +593,23 @@ Result<EnumeratedRecordBatchGenerator> AsyncScanner::ScanBatchesUnorderedAsync(\n   ARROW_ASSIGN_OR_RAISE(auto plan, compute::ExecPlan::Make(exec_context.get()));\n   AsyncGenerator<util::optional<compute::ExecBatch>> sink_gen;\n \n+  util::BackpressureOptions backpressure =\n+      util::MakeBackpressureOptions(kDefaultBackpressureLow, kDefaultBackpressureHigh);\n\nReview comment:\n       We should probably expose these in scan options somewhere, no?\n\n##########\nFile path: cpp/src/arrow/util/async_generator.h\n##########\n@@ -1645,6 +1667,47 @@ AsyncGenerator<T> MakeCancellable(AsyncGenerator<T> source, StopToken stop_token\n   return CancellableGenerator<T>{std::move(source), std::move(stop_token)};\n }\n \n+template <typename T>\n+struct PauseableGenerator {\n+ public:\n+  PauseableGenerator(AsyncGenerator<T> source, std::shared_ptr<util::AsyncToggle> toggle)\n+      : state_(std::make_shared<PauseableGeneratorState>(std::move(source),\n+                                                         std::move(toggle))) {}\n+\n+  Future<T> operator()() { return (*state_)(); }\n+\n+ private:\n+  struct PauseableGeneratorState\n+      : public std::enable_shared_from_this<PauseableGeneratorState> {\n+    PauseableGeneratorState(AsyncGenerator<T> source,\n+                            std::shared_ptr<util::AsyncToggle> toggle)\n+        : source_(std::move(source)), toggle_(std::move(toggle)) {}\n+\n+    Future<T> operator()() {\n+      std::shared_ptr<PauseableGeneratorState> self = this->shared_from_this();\n+      return toggle_->WhenOpen().Then([self] {\n\nReview comment:\n       Below there's a comment about how later calls to Open may finish before earlier calls - doesn't this mean that this generator can get inadvertently reordered?\r\n   \r\n   (Also, it relies on Future running callbacks in order, right?)\n\n##########\nFile path: cpp/src/arrow/util/async_generator.h\n##########\n@@ -785,6 +786,24 @@ class ReadaheadGenerator {\n template <typename T>\n class PushGenerator {\n   struct State {\n+    explicit State(util::BackpressureOptions backpressure)\n+        : backpressure(std::move(backpressure)) {}\n+\n+    void OpenBackpressureIfFree() {\n+      if (backpressure.toggle && !backpressure.toggle->IsOpen() &&\n+          result_q.size() < backpressure.resume_if_below) {\n+        backpressure.toggle->Open();\n+      }\n+    }\n+\n+    void CloseBackpressureIfFull() {\n+      if (backpressure.toggle && backpressure.toggle->IsOpen() &&\n+          result_q.size() > backpressure.pause_if_above) {\n+        backpressure.toggle->Close();\n\nReview comment:\n       Is there any value checking IsOpen since Close performs the same check internally?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-01T13:54:13.882+0000",
                    "updated": "2021-10-01T13:54:13.882+0000",
                    "started": "2021-10-01T13:54:13.882+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "658951",
                    "issueId": "13394809"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394809/worklog/659102",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #11285:\nURL: https://github.com/apache/arrow/pull/11285#discussion_r720449458\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/scanner.cc\n##########\n@@ -593,20 +593,23 @@ Result<EnumeratedRecordBatchGenerator> AsyncScanner::ScanBatchesUnorderedAsync(\n   ARROW_ASSIGN_OR_RAISE(auto plan, compute::ExecPlan::Make(exec_context.get()));\n   AsyncGenerator<util::optional<compute::ExecBatch>> sink_gen;\n \n+  util::BackpressureOptions backpressure =\n+      util::MakeBackpressureOptions(kDefaultBackpressureLow, kDefaultBackpressureHigh);\n\nReview comment:\n       I don't want to add too many tuning parameters to scan options.  I think I'd wait until these defaults don't work for someone before exposing them.  At the moment I couldn't give any reasonable advice on how to tune these.  Increasing the values would increase the amount of memory used but I don't believe it would have any significant impact on performance in most cases.  The backpressure limit in the dataset writer is also hidden from the user.  It might be that we want a single parameter to influence backpressure tuning settings across the board.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-01T18:11:24.834+0000",
                    "updated": "2021-10-01T18:11:24.834+0000",
                    "started": "2021-10-01T18:11:24.833+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "659102",
                    "issueId": "13394809"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394809/worklog/659104",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #11285:\nURL: https://github.com/apache/arrow/pull/11285#discussion_r720450828\n\n\n\n##########\nFile path: cpp/src/arrow/util/async_generator.h\n##########\n@@ -1645,6 +1667,47 @@ AsyncGenerator<T> MakeCancellable(AsyncGenerator<T> source, StopToken stop_token\n   return CancellableGenerator<T>{std::move(source), std::move(stop_token)};\n }\n \n+template <typename T>\n+struct PauseableGenerator {\n+ public:\n+  PauseableGenerator(AsyncGenerator<T> source, std::shared_ptr<util::AsyncToggle> toggle)\n+      : state_(std::make_shared<PauseableGeneratorState>(std::move(source),\n+                                                         std::move(toggle))) {}\n+\n+  Future<T> operator()() { return (*state_)(); }\n+\n+ private:\n+  struct PauseableGeneratorState\n+      : public std::enable_shared_from_this<PauseableGeneratorState> {\n+    PauseableGeneratorState(AsyncGenerator<T> source,\n+                            std::shared_ptr<util::AsyncToggle> toggle)\n+        : source_(std::move(source)), toggle_(std::move(toggle)) {}\n+\n+    Future<T> operator()() {\n+      std::shared_ptr<PauseableGeneratorState> self = this->shared_from_this();\n+      return toggle_->WhenOpen().Then([self] {\n\nReview comment:\n       Yes, the generator can reorder things.  If we want order we'd have to rely on the future running callbacks in order (although that should be safe to rely on).  If we don't care about order we don't have to rely on that.\r\n   \r\n   At the time I didn't think reordering would be a bad thing since exec plan is likely to reorder stuff anyways but I don't really like it.  I might take a look to see if I can easily improve it.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-01T18:13:52.398+0000",
                    "updated": "2021-10-01T18:13:52.398+0000",
                    "started": "2021-10-01T18:13:52.398+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "659104",
                    "issueId": "13394809"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394809/worklog/659105",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11285:\nURL: https://github.com/apache/arrow/pull/11285#discussion_r720451370\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/scanner.cc\n##########\n@@ -593,20 +593,23 @@ Result<EnumeratedRecordBatchGenerator> AsyncScanner::ScanBatchesUnorderedAsync(\n   ARROW_ASSIGN_OR_RAISE(auto plan, compute::ExecPlan::Make(exec_context.get()));\n   AsyncGenerator<util::optional<compute::ExecBatch>> sink_gen;\n \n+  util::BackpressureOptions backpressure =\n+      util::MakeBackpressureOptions(kDefaultBackpressureLow, kDefaultBackpressureHigh);\n\nReview comment:\n       Makes sense, thanks.\n\n##########\nFile path: cpp/src/arrow/util/async_generator.h\n##########\n@@ -1645,6 +1667,47 @@ AsyncGenerator<T> MakeCancellable(AsyncGenerator<T> source, StopToken stop_token\n   return CancellableGenerator<T>{std::move(source), std::move(stop_token)};\n }\n \n+template <typename T>\n+struct PauseableGenerator {\n+ public:\n+  PauseableGenerator(AsyncGenerator<T> source, std::shared_ptr<util::AsyncToggle> toggle)\n+      : state_(std::make_shared<PauseableGeneratorState>(std::move(source),\n+                                                         std::move(toggle))) {}\n+\n+  Future<T> operator()() { return (*state_)(); }\n+\n+ private:\n+  struct PauseableGeneratorState\n+      : public std::enable_shared_from_this<PauseableGeneratorState> {\n+    PauseableGeneratorState(AsyncGenerator<T> source,\n+                            std::shared_ptr<util::AsyncToggle> toggle)\n+        : source_(std::move(source)), toggle_(std::move(toggle)) {}\n+\n+    Future<T> operator()() {\n+      std::shared_ptr<PauseableGeneratorState> self = this->shared_from_this();\n+      return toggle_->WhenOpen().Then([self] {\n\nReview comment:\n       I guess my main concern is if the end token gets reordered - or is that not a problem? \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-01T18:15:06.244+0000",
                    "updated": "2021-10-01T18:15:06.244+0000",
                    "started": "2021-10-01T18:15:06.244+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "659105",
                    "issueId": "13394809"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394809/worklog/659975",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #11285:\nURL: https://github.com/apache/arrow/pull/11285#discussion_r721787726\n\n\n\n##########\nFile path: cpp/src/arrow/util/async_generator.h\n##########\n@@ -785,6 +786,24 @@ class ReadaheadGenerator {\n template <typename T>\n class PushGenerator {\n   struct State {\n+    explicit State(util::BackpressureOptions backpressure)\n+        : backpressure(std::move(backpressure)) {}\n+\n+    void OpenBackpressureIfFree() {\n+      if (backpressure.toggle && !backpressure.toggle->IsOpen() &&\n+          result_q.size() < backpressure.resume_if_below) {\n+        backpressure.toggle->Open();\n+      }\n+    }\n+\n+    void CloseBackpressureIfFull() {\n+      if (backpressure.toggle && backpressure.toggle->IsOpen() &&\n+          result_q.size() > backpressure.pause_if_above) {\n+        backpressure.toggle->Close();\n\nReview comment:\n       No.  I removed these checks.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-04T23:40:12.206+0000",
                    "updated": "2021-10-04T23:40:12.206+0000",
                    "started": "2021-10-04T23:40:12.205+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "659975",
                    "issueId": "13394809"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394809/worklog/659984",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #11285:\nURL: https://github.com/apache/arrow/pull/11285#discussion_r721792741\n\n\n\n##########\nFile path: cpp/src/arrow/util/async_generator.h\n##########\n@@ -1645,6 +1667,47 @@ AsyncGenerator<T> MakeCancellable(AsyncGenerator<T> source, StopToken stop_token\n   return CancellableGenerator<T>{std::move(source), std::move(stop_token)};\n }\n \n+template <typename T>\n+struct PauseableGenerator {\n+ public:\n+  PauseableGenerator(AsyncGenerator<T> source, std::shared_ptr<util::AsyncToggle> toggle)\n+      : state_(std::make_shared<PauseableGeneratorState>(std::move(source),\n+                                                         std::move(toggle))) {}\n+\n+  Future<T> operator()() { return (*state_)(); }\n+\n+ private:\n+  struct PauseableGeneratorState\n+      : public std::enable_shared_from_this<PauseableGeneratorState> {\n+    PauseableGeneratorState(AsyncGenerator<T> source,\n+                            std::shared_ptr<util::AsyncToggle> toggle)\n+        : source_(std::move(source)), toggle_(std::move(toggle)) {}\n+\n+    Future<T> operator()() {\n+      std::shared_ptr<PauseableGeneratorState> self = this->shared_from_this();\n+      return toggle_->WhenOpen().Then([self] {\n\nReview comment:\n       I cleaned it up a little bit which should eliminate most reordering but I could not escape the case:\r\n   \r\n   Thread A calls Open\r\n   Thread D calls WhenOpen\r\n   Thread B calls Close\r\n   Thread C calls Open\r\n   Thread D calls WhenOpen\r\n   \r\n   It is possible for callbacks on the second call to WhenOpen to finish before callbacks on the first call.\r\n   \r\n   So what I did was go ahead and change the comments for MakePauseable to state that it is not async reentrant.  This should prevent any possible reordering because the second call to WhenOpen will not happen until the future returned from the first call to WhenOpen has completed.  The only spot we are using MakePauseable does not need async reentrancy so this should be ok.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-04T23:55:37.247+0000",
                    "updated": "2021-10-04T23:55:37.247+0000",
                    "started": "2021-10-04T23:55:37.247+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "659984",
                    "issueId": "13394809"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394809/worklog/660264",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11285:\nURL: https://github.com/apache/arrow/pull/11285#discussion_r722170686\n\n\n\n##########\nFile path: cpp/src/arrow/util/async_generator.h\n##########\n@@ -1645,6 +1667,47 @@ AsyncGenerator<T> MakeCancellable(AsyncGenerator<T> source, StopToken stop_token\n   return CancellableGenerator<T>{std::move(source), std::move(stop_token)};\n }\n \n+template <typename T>\n+struct PauseableGenerator {\n+ public:\n+  PauseableGenerator(AsyncGenerator<T> source, std::shared_ptr<util::AsyncToggle> toggle)\n+      : state_(std::make_shared<PauseableGeneratorState>(std::move(source),\n+                                                         std::move(toggle))) {}\n+\n+  Future<T> operator()() { return (*state_)(); }\n+\n+ private:\n+  struct PauseableGeneratorState\n+      : public std::enable_shared_from_this<PauseableGeneratorState> {\n+    PauseableGeneratorState(AsyncGenerator<T> source,\n+                            std::shared_ptr<util::AsyncToggle> toggle)\n+        : source_(std::move(source)), toggle_(std::move(toggle)) {}\n+\n+    Future<T> operator()() {\n+      std::shared_ptr<PauseableGeneratorState> self = this->shared_from_this();\n+      return toggle_->WhenOpen().Then([self] {\n\nReview comment:\n       Sounds good.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-05T12:04:16.420+0000",
                    "updated": "2021-10-05T12:04:16.420+0000",
                    "started": "2021-10-05T12:04:16.419+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "660264",
                    "issueId": "13394809"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394809/worklog/661174",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11285:\nURL: https://github.com/apache/arrow/pull/11285#discussion_r723660021\n\n\n\n##########\nFile path: cpp/src/arrow/util/thread_pool.h\n##########\n@@ -341,6 +341,9 @@ class ARROW_EXPORT ThreadPool : public Executor {\n   // tasks are finished.\n   Status Shutdown(bool wait = true);\n \n+\n+  void WaitForIdle();\n\nReview comment:\n       As with the scanner option, should we document that this is primarily for testing?\n\n##########\nFile path: cpp/src/arrow/dataset/scanner.h\n##########\n@@ -123,6 +123,12 @@ struct ARROW_DS_EXPORT ScanOptions {\n   /// Fragment-specific scan options.\n   std::shared_ptr<FragmentScanOptions> fragment_scan_options;\n \n+  /// Callback which will be run whenever the scanner pauses due to backpressure\n+  ///\n+  /// This is mostly for debugging & tracing so that the consumer can be notified if\n+  /// they are not consuming data quickly enough.\n+  std::function<void()> on_paused_callback;\n\nReview comment:\n       This doesn't seem used here.\n\n##########\nFile path: cpp/src/arrow/dataset/scanner_test.cc\n##########\n@@ -1025,13 +1035,20 @@ TEST_F(TestBackpressure, ScanBatchesUnordered) {\n   EXPECT_OK_AND_ASSIGN(AsyncGenerator<EnumeratedRecordBatch> gen,\n                        scanner->ScanBatchesUnorderedAsync());\n   ASSERT_FINISHES_OK(gen());\n+  // Wait for the thread pool to idle.  By this point the scanner should have paused itself\n+  // This helps with timing on slower CI systems where there is only one core and the scanner\n+  // might keep that core until it has scanned all the batches which never gives the sink a\n+  // chance to report it is falling behind.\n+  GetCpuThreadPool()->WaitForIdle();\n+  DeliverAdditionalBatches();\n \n   // The exact numbers may be imprecise due to threading but we should pretty quickly read\n   // up to our backpressure limit and a little above.  We should not be able to go too far\n   // above.\n-  BusyWait(10, [&] { return TotalBatchesRead() >= kDefaultBackpressureHigh; });\n+  ASSERT_TRUE(TotalBatchesRead() >= kDefaultBackpressureHigh);\n\nReview comment:\n       nit: ASSERT_GE? Here and below.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-06T20:44:04.897+0000",
                    "updated": "2021-10-06T20:44:04.897+0000",
                    "started": "2021-10-06T20:44:04.897+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661174",
                    "issueId": "13394809"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394809/worklog/661175",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #11285:\nURL: https://github.com/apache/arrow/pull/11285#discussion_r723662097\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/scanner.h\n##########\n@@ -123,6 +123,12 @@ struct ARROW_DS_EXPORT ScanOptions {\n   /// Fragment-specific scan options.\n   std::shared_ptr<FragmentScanOptions> fragment_scan_options;\n \n+  /// Callback which will be run whenever the scanner pauses due to backpressure\n+  ///\n+  /// This is mostly for debugging & tracing so that the consumer can be notified if\n+  /// they are not consuming data quickly enough.\n+  std::function<void()> on_paused_callback;\n\nReview comment:\n       Oops, I left this in.  That was an earlier attempt at fixing the test >_<\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-06T20:44:38.338+0000",
                    "updated": "2021-10-06T20:44:38.338+0000",
                    "started": "2021-10-06T20:44:38.338+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661175",
                    "issueId": "13394809"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394809/worklog/661177",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #11285:\nURL: https://github.com/apache/arrow/pull/11285#discussion_r723663091\n\n\n\n##########\nFile path: cpp/src/arrow/util/thread_pool.h\n##########\n@@ -341,6 +341,9 @@ class ARROW_EXPORT ThreadPool : public Executor {\n   // tasks are finished.\n   Status Shutdown(bool wait = true);\n \n+\n+  void WaitForIdle();\n\nReview comment:\n       Yes, I will document that.  ThreadPool is internal (and I'm not proposing we add WaitForIdle to Executor) so I hope that is reasonable.  CC @pitrou for thoughts.  For context: I added `WaitForIdle` to the `ThreadPool` purely for the sake of sequencing some testing.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-06T20:46:25.138+0000",
                    "updated": "2021-10-06T20:46:25.138+0000",
                    "started": "2021-10-06T20:46:25.138+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661177",
                    "issueId": "13394809"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394809/worklog/661185",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #11285:\nURL: https://github.com/apache/arrow/pull/11285#discussion_r723673903\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/scanner.h\n##########\n@@ -123,6 +123,12 @@ struct ARROW_DS_EXPORT ScanOptions {\n   /// Fragment-specific scan options.\n   std::shared_ptr<FragmentScanOptions> fragment_scan_options;\n \n+  /// Callback which will be run whenever the scanner pauses due to backpressure\n+  ///\n+  /// This is mostly for debugging & tracing so that the consumer can be notified if\n+  /// they are not consuming data quickly enough.\n+  std::function<void()> on_paused_callback;\n\nReview comment:\n       I've removed this and did some general cleanup of the PR.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-06T21:03:12.572+0000",
                    "updated": "2021-10-06T21:03:12.572+0000",
                    "started": "2021-10-06T21:03:12.572+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661185",
                    "issueId": "13394809"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394809/worklog/661187",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #11285:\nURL: https://github.com/apache/arrow/pull/11285#discussion_r723674829\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/scanner_test.cc\n##########\n@@ -1025,13 +1035,20 @@ TEST_F(TestBackpressure, ScanBatchesUnordered) {\n   EXPECT_OK_AND_ASSIGN(AsyncGenerator<EnumeratedRecordBatch> gen,\n                        scanner->ScanBatchesUnorderedAsync());\n   ASSERT_FINISHES_OK(gen());\n+  // Wait for the thread pool to idle.  By this point the scanner should have paused itself\n+  // This helps with timing on slower CI systems where there is only one core and the scanner\n+  // might keep that core until it has scanned all the batches which never gives the sink a\n+  // chance to report it is falling behind.\n+  GetCpuThreadPool()->WaitForIdle();\n+  DeliverAdditionalBatches();\n \n   // The exact numbers may be imprecise due to threading but we should pretty quickly read\n   // up to our backpressure limit and a little above.  We should not be able to go too far\n   // above.\n-  BusyWait(10, [&] { return TotalBatchesRead() >= kDefaultBackpressureHigh; });\n+  ASSERT_TRUE(TotalBatchesRead() >= kDefaultBackpressureHigh);\n\nReview comment:\n       Fixed.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-06T21:04:41.357+0000",
                    "updated": "2021-10-06T21:04:41.357+0000",
                    "started": "2021-10-06T21:04:41.357+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661187",
                    "issueId": "13394809"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394809/worklog/661191",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11285:\nURL: https://github.com/apache/arrow/pull/11285#discussion_r723676397\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/scanner.h\n##########\n@@ -123,6 +123,12 @@ struct ARROW_DS_EXPORT ScanOptions {\n   /// Fragment-specific scan options.\n   std::shared_ptr<FragmentScanOptions> fragment_scan_options;\n \n+  /// Callback which will be run whenever the scanner pauses due to backpressure\n+  ///\n+  /// This is mostly for debugging & tracing so that the consumer can be notified if\n+  /// they are not consuming data quickly enough.\n+  std::function<void()> on_paused_callback;\n\nReview comment:\n       Thanks! Looks good overall.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-06T21:07:20.983+0000",
                    "updated": "2021-10-06T21:07:20.983+0000",
                    "started": "2021-10-06T21:07:20.983+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661191",
                    "issueId": "13394809"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394809/worklog/661572",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11285:\nURL: https://github.com/apache/arrow/pull/11285#discussion_r724130781\n\n\n\n##########\nFile path: cpp/src/arrow/util/thread_pool.cc\n##########\n@@ -183,9 +183,10 @@ static void WorkerLoop(std::shared_ptr<ThreadPool::State> state,\n         ARROW_UNUSED(std::move(task));  // release resources before waiting for lock\n         lock.lock();\n       }\n-      if ARROW_PREDICT_FALSE(--state->tasks_queued_or_running_ == 0) {\n-        state->cv_idle_.notify_all();\n-      }\n+      if\n+        ARROW_PREDICT_FALSE(--state->tasks_queued_or_running_ == 0) {\n\nReview comment:\n       Looks like a set of parentheses is missing here? (Seems like it works because the macro definition has a set of parens, but usually this still gets wrapped)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T12:35:33.036+0000",
                    "updated": "2021-10-07T12:35:33.036+0000",
                    "started": "2021-10-07T12:35:33.036+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661572",
                    "issueId": "13394809"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394809/worklog/661574",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11285:\nURL: https://github.com/apache/arrow/pull/11285#discussion_r724133246\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/scanner_test.cc\n##########\n@@ -1026,6 +1026,14 @@ class TestBackpressure : public ::testing::Test {\n     return sum;\n   }\n \n+  void Finish(AsyncGenerator<EnumeratedRecordBatch> gen) {\n+    for (const auto& controlled_fragment : controlled_fragments_) {\n+      controlled_fragment->Finish();\n+    }\n+    ASSERT_FINISHES_OK(VisitAsyncGenerator(\n+        gen, [](EnumeratedRecordBatch batch) { return Status::OK(); }));\n+  }\n+\n\nReview comment:\n       Hmm, I would expect dropping the generator/scanner to clean up everything. Wonder what's keeping it alive. (Not a problem to solve here.)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T12:35:49.516+0000",
                    "updated": "2021-10-07T12:35:49.516+0000",
                    "started": "2021-10-07T12:35:49.516+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661574",
                    "issueId": "13394809"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394809/worklog/662179",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #11285:\nURL: https://github.com/apache/arrow/pull/11285#discussion_r723662097\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/scanner.h\n##########\n@@ -123,6 +123,12 @@ struct ARROW_DS_EXPORT ScanOptions {\n   /// Fragment-specific scan options.\n   std::shared_ptr<FragmentScanOptions> fragment_scan_options;\n \n+  /// Callback which will be run whenever the scanner pauses due to backpressure\n+  ///\n+  /// This is mostly for debugging & tracing so that the consumer can be notified if\n+  /// they are not consuming data quickly enough.\n+  std::function<void()> on_paused_callback;\n\nReview comment:\n       Oops, I left this in.  That was an earlier attempt at fixing the test >_<\n\n##########\nFile path: cpp/src/arrow/util/thread_pool.h\n##########\n@@ -341,6 +341,9 @@ class ARROW_EXPORT ThreadPool : public Executor {\n   // tasks are finished.\n   Status Shutdown(bool wait = true);\n \n+\n+  void WaitForIdle();\n\nReview comment:\n       Yes, I will document that.  ThreadPool is internal (and I'm not proposing we add WaitForIdle to Executor) so I hope that is reasonable.  CC @pitrou for thoughts.  For context: I added `WaitForIdle` to the `ThreadPool` purely for the sake of sequencing some testing.\n\n##########\nFile path: cpp/src/arrow/dataset/scanner.h\n##########\n@@ -123,6 +123,12 @@ struct ARROW_DS_EXPORT ScanOptions {\n   /// Fragment-specific scan options.\n   std::shared_ptr<FragmentScanOptions> fragment_scan_options;\n \n+  /// Callback which will be run whenever the scanner pauses due to backpressure\n+  ///\n+  /// This is mostly for debugging & tracing so that the consumer can be notified if\n+  /// they are not consuming data quickly enough.\n+  std::function<void()> on_paused_callback;\n\nReview comment:\n       I've removed this and did some general cleanup of the PR.\n\n##########\nFile path: cpp/src/arrow/dataset/scanner_test.cc\n##########\n@@ -1025,13 +1035,20 @@ TEST_F(TestBackpressure, ScanBatchesUnordered) {\n   EXPECT_OK_AND_ASSIGN(AsyncGenerator<EnumeratedRecordBatch> gen,\n                        scanner->ScanBatchesUnorderedAsync());\n   ASSERT_FINISHES_OK(gen());\n+  // Wait for the thread pool to idle.  By this point the scanner should have paused itself\n+  // This helps with timing on slower CI systems where there is only one core and the scanner\n+  // might keep that core until it has scanned all the batches which never gives the sink a\n+  // chance to report it is falling behind.\n+  GetCpuThreadPool()->WaitForIdle();\n+  DeliverAdditionalBatches();\n \n   // The exact numbers may be imprecise due to threading but we should pretty quickly read\n   // up to our backpressure limit and a little above.  We should not be able to go too far\n   // above.\n-  BusyWait(10, [&] { return TotalBatchesRead() >= kDefaultBackpressureHigh; });\n+  ASSERT_TRUE(TotalBatchesRead() >= kDefaultBackpressureHigh);\n\nReview comment:\n       Fixed.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T23:23:41.583+0000",
                    "updated": "2021-10-07T23:23:41.583+0000",
                    "started": "2021-10-07T23:23:41.582+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "662179",
                    "issueId": "13394809"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394809/worklog/662233",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11285:\nURL: https://github.com/apache/arrow/pull/11285#discussion_r723660021\n\n\n\n##########\nFile path: cpp/src/arrow/util/thread_pool.h\n##########\n@@ -341,6 +341,9 @@ class ARROW_EXPORT ThreadPool : public Executor {\n   // tasks are finished.\n   Status Shutdown(bool wait = true);\n \n+\n+  void WaitForIdle();\n\nReview comment:\n       As with the scanner option, should we document that this is primarily for testing?\n\n##########\nFile path: cpp/src/arrow/dataset/scanner.h\n##########\n@@ -123,6 +123,12 @@ struct ARROW_DS_EXPORT ScanOptions {\n   /// Fragment-specific scan options.\n   std::shared_ptr<FragmentScanOptions> fragment_scan_options;\n \n+  /// Callback which will be run whenever the scanner pauses due to backpressure\n+  ///\n+  /// This is mostly for debugging & tracing so that the consumer can be notified if\n+  /// they are not consuming data quickly enough.\n+  std::function<void()> on_paused_callback;\n\nReview comment:\n       This doesn't seem used here.\n\n##########\nFile path: cpp/src/arrow/dataset/scanner_test.cc\n##########\n@@ -1025,13 +1035,20 @@ TEST_F(TestBackpressure, ScanBatchesUnordered) {\n   EXPECT_OK_AND_ASSIGN(AsyncGenerator<EnumeratedRecordBatch> gen,\n                        scanner->ScanBatchesUnorderedAsync());\n   ASSERT_FINISHES_OK(gen());\n+  // Wait for the thread pool to idle.  By this point the scanner should have paused itself\n+  // This helps with timing on slower CI systems where there is only one core and the scanner\n+  // might keep that core until it has scanned all the batches which never gives the sink a\n+  // chance to report it is falling behind.\n+  GetCpuThreadPool()->WaitForIdle();\n+  DeliverAdditionalBatches();\n \n   // The exact numbers may be imprecise due to threading but we should pretty quickly read\n   // up to our backpressure limit and a little above.  We should not be able to go too far\n   // above.\n-  BusyWait(10, [&] { return TotalBatchesRead() >= kDefaultBackpressureHigh; });\n+  ASSERT_TRUE(TotalBatchesRead() >= kDefaultBackpressureHigh);\n\nReview comment:\n       nit: ASSERT_GE? Here and below.\n\n##########\nFile path: cpp/src/arrow/dataset/scanner.h\n##########\n@@ -123,6 +123,12 @@ struct ARROW_DS_EXPORT ScanOptions {\n   /// Fragment-specific scan options.\n   std::shared_ptr<FragmentScanOptions> fragment_scan_options;\n \n+  /// Callback which will be run whenever the scanner pauses due to backpressure\n+  ///\n+  /// This is mostly for debugging & tracing so that the consumer can be notified if\n+  /// they are not consuming data quickly enough.\n+  std::function<void()> on_paused_callback;\n\nReview comment:\n       Thanks! Looks good overall.\n\n##########\nFile path: cpp/src/arrow/util/thread_pool.cc\n##########\n@@ -183,9 +183,10 @@ static void WorkerLoop(std::shared_ptr<ThreadPool::State> state,\n         ARROW_UNUSED(std::move(task));  // release resources before waiting for lock\n         lock.lock();\n       }\n-      if ARROW_PREDICT_FALSE(--state->tasks_queued_or_running_ == 0) {\n-        state->cv_idle_.notify_all();\n-      }\n+      if\n+        ARROW_PREDICT_FALSE(--state->tasks_queued_or_running_ == 0) {\n\nReview comment:\n       Looks like a set of parentheses is missing here? (Seems like it works because the macro definition has a set of parens, but usually this still gets wrapped)\n\n##########\nFile path: cpp/src/arrow/dataset/scanner_test.cc\n##########\n@@ -1026,6 +1026,14 @@ class TestBackpressure : public ::testing::Test {\n     return sum;\n   }\n \n+  void Finish(AsyncGenerator<EnumeratedRecordBatch> gen) {\n+    for (const auto& controlled_fragment : controlled_fragments_) {\n+      controlled_fragment->Finish();\n+    }\n+    ASSERT_FINISHES_OK(VisitAsyncGenerator(\n+        gen, [](EnumeratedRecordBatch batch) { return Status::OK(); }));\n+  }\n+\n\nReview comment:\n       Hmm, I would expect dropping the generator/scanner to clean up everything. Wonder what's keeping it alive. (Not a problem to solve here.)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T23:27:42.010+0000",
                    "updated": "2021-10-07T23:27:42.010+0000",
                    "started": "2021-10-07T23:27:42.010+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "662233",
                    "issueId": "13394809"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394809/worklog/662438",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #11285:\nURL: https://github.com/apache/arrow/pull/11285#discussion_r724626154\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/scanner_test.cc\n##########\n@@ -1026,6 +1026,14 @@ class TestBackpressure : public ::testing::Test {\n     return sum;\n   }\n \n+  void Finish(AsyncGenerator<EnumeratedRecordBatch> gen) {\n+    for (const auto& controlled_fragment : controlled_fragments_) {\n+      controlled_fragment->Finish();\n+    }\n+    ASSERT_FINISHES_OK(VisitAsyncGenerator(\n+        gen, [](EnumeratedRecordBatch batch) { return Status::OK(); }));\n+  }\n+\n\nReview comment:\n       A minimal example of the problem is:\r\n   ```\r\n   TEST(Weston, MemTest) {\r\n     PushGenerator<util::optional<int>> int_prod;\r\n     AsyncGenerator<util::optional<int>> int_gen = int_prod;\r\n     Future<> visit_fut = VisitAsyncGenerator(std::move(int_gen), [] (util::optional<int>) {\r\n       return Status::OK();\r\n     });\r\n   }\r\n   ```\r\n   The above will leak.  I have a fix in mind but will address it in a separate PR.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-08T00:49:03.206+0000",
                    "updated": "2021-10-08T00:49:03.206+0000",
                    "started": "2021-10-08T00:49:03.205+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "662438",
                    "issueId": "13394809"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 17400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2e8f4f4e[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@26df81c2[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@254f801c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7f44d4e6[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@48c44b2e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4b8b4a32[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@121d6c3f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4ba7797e[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2150c61f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@309bd2dd[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@499e2c65[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3902d0a1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 17400,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Oct 12 19:12:19 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-10-12T19:12:19.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13611/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2021-08-12T03:34:53.000+0000",
        "updated": "2022-01-18T19:00:19.000+0000",
        "timeoriginalestimate": null,
        "description": "I have a simple test case where I scan the batches of a 4GB dataset and print out the currently used memory:\r\n\r\n{code:python}\r\nimport pyarrow as pa\r\nimport pyarrow.dataset as ds\r\n\r\ndataset = ds.dataset('/home/pace/dev/data/dataset/csv/5_big', format='csv')\r\nnum_rows = 0\r\nfor batch in dataset.to_batches():\r\n    print(pa.total_allocated_bytes())\r\n    num_rows += batch.num_rows\r\n\r\nprint(num_rows)\r\n{code}\r\n\r\nIn pyarrow 3.0.0 this consumes just over 5MB.  In pyarrow 4.0.0 and 5.0.0 this consumes multiple GB of RAM.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 17400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Scanning datasets does not enforce back pressure",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394809/comment/17397792",
                    "id": "17397792",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "It appears to make no difference if `use_async` is True or False.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-08-12T03:35:48.095+0000",
                    "updated": "2021-08-12T03:35:48.095+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394809/comment/17398306",
                    "id": "17398306",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Additional information.\r\n\r\nThe synchronous scanner is properly applying back pressure when the source has multiple scan tasks (e.g. parquet).  However it is not applying back pressure when sources have a single scan task (e.g. CSV / IPC).  The root cause is here: https://github.com/apache/arrow/blob/f959141ece4d660bce5f7fa545befc0116a7db79/cpp/src/arrow/dataset/scanner.cc#L207\r\n\r\nThe asynchronous scanner is not applying back pressure because it is now connected to an ExecPlan and ExecPlan does not have back pressure implemented yet.\r\n\r\nI'm not sure how much effort we want to put into fixing the synchronous scanner given that it is slated for removal.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-08-12T21:42:50.354+0000",
                    "updated": "2021-08-12T21:42:50.354+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394809/comment/17423038",
                    "id": "17423038",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=cboettig",
                        "name": "cboettig",
                        "key": "cboettig",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Carl Boettiger",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Any news on this?\u00a0 I believe this bug is still the cause of the system crashes I see when trying to access large parquet files in arrow, e.g. in R:\r\n\r\n\r\n\r\n{code:r}\r\nlibrary(arrow)\r\nlibrary(dplyr)\r\nfile <- \"part-0.parquet\"download.file(\"https://minio.cirrus.carlboettiger.info/shared-data/birddb/parquet/part-0.parquet\", file)\r\nds <- open_dataset(file, format = \"parquet\")\r\nds %>% filter(COUNTRY == \"Mexico\", `COMMON NAME`==\"Wood thrush\") %>% compute()\r\n{code}\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=cboettig",
                        "name": "cboettig",
                        "key": "cboettig",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Carl Boettiger",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-09-30T22:58:10.046+0000",
                    "updated": "2021-09-30T22:59:25.208+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394809/comment/17423248",
                    "id": "17423248",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "That is actually what I've been working on today (shame on me for not toggling Start Progress).  Right now I have a PR up that adds backpressure back in for unordered scans.  I expect to have a PR ready that will add backpressure for ordered scans soon (I am hoping tomorrow).  If you are interested I can probably get you a test wheel (are you installing with conda or pypi?) sometime next week and would appreciate if you could let me know if it solves your issue.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-10-01T11:31:12.382+0000",
                    "updated": "2021-10-01T11:31:12.382+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13394809/comment/17427878",
                    "id": "17427878",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 11285\n[https://github.com/apache/arrow/pull/11285]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-10-12T19:12:19.881+0000",
                    "updated": "2021-10-12T19:12:19.881+0000"
                }
            ],
            "maxResults": 5,
            "total": 5,
            "startAt": 0
        },
        "customfield_12311820": "0|z0ttyw:",
        "customfield_12314139": null
    }
}