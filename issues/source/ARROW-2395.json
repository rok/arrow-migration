{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13150184",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150184",
    "key": "ARROW-2395",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "beginner",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alexhagerman",
            "name": "alexhagerman",
            "key": "alexhagerman",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Alex Hagerman",
            "active": true,
            "timeZone": "America/Indiana/Indianapolis"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alexhagerman",
            "name": "alexhagerman",
            "key": "alexhagerman",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Alex Hagerman",
            "active": true,
            "timeZone": "America/Indiana/Indianapolis"
        },
        "aggregateprogress": {
            "progress": 3600,
            "total": 3600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 3600,
            "total": 3600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2395/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 6,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150184/worklog/111273",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm opened a new pull request #2137: ARROW-2395: [Python] Fix flake8 warnings outside of pyarrow/ directory. Check in CI\nURL: https://github.com/apache/arrow/pull/2137\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-12T20:53:10.433+0000",
                    "updated": "2018-06-12T20:53:10.433+0000",
                    "started": "2018-06-12T20:53:10.432+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "111273",
                    "issueId": "13150184"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150184/worklog/111863",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on a change in pull request #2137: ARROW-2395: [Python] Fix flake8 warnings outside of pyarrow/ directory. Check in CI\nURL: https://github.com/apache/arrow/pull/2137#discussion_r195406738\n \n \n\n ##########\n File path: python/benchmarks/common.py\n ##########\n @@ -19,7 +19,6 @@\n import decimal\n from functools import partial\n import itertools\n-import os\n \n Review comment:\n   flake8 fails on line 41 as it's Python3 only. We should either only execute it for Python 3 or make it Python2 compatible.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-14T12:42:52.736+0000",
                    "updated": "2018-06-14T12:42:52.736+0000",
                    "started": "2018-06-14T12:42:52.736+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "111863",
                    "issueId": "13150184"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150184/worklog/112203",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2137: ARROW-2395: [Python] Fix flake8 warnings outside of pyarrow/ directory. Check in CI\nURL: https://github.com/apache/arrow/pull/2137#discussion_r195644480\n \n \n\n ##########\n File path: python/benchmarks/common.py\n ##########\n @@ -19,7 +19,6 @@\n import decimal\n from functools import partial\n import itertools\n-import os\n \n Review comment:\n   fixed\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T06:40:05.410+0000",
                    "updated": "2018-06-15T06:40:05.410+0000",
                    "started": "2018-06-15T06:40:05.410+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112203",
                    "issueId": "13150184"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150184/worklog/112204",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2137: ARROW-2395: [Python] Fix flake8 warnings outside of pyarrow/ directory. Check in CI\nURL: https://github.com/apache/arrow/pull/2137#issuecomment-397528365\n \n \n   +1, will merge on passing build\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T06:40:13.440+0000",
                    "updated": "2018-06-15T06:40:13.440+0000",
                    "started": "2018-06-15T06:40:13.439+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112204",
                    "issueId": "13150184"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150184/worklog/112216",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2137: ARROW-2395: [Python] Fix flake8 warnings outside of pyarrow/ directory. Check in CI\nURL: https://github.com/apache/arrow/pull/2137#issuecomment-397538903\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2137?src=pr&el=h1) Report\n   > Merging [#2137](https://codecov.io/gh/apache/arrow/pull/2137?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/d4755e46494b7280b8c9e6192e03e4d3a5dd5342?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2137/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2137?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2137      +/-   ##\n   ==========================================\n   - Coverage   86.42%   86.41%   -0.01%     \n   ==========================================\n     Files         242      242              \n     Lines       41536    41536              \n   ==========================================\n   - Hits        35896    35894       -2     \n   - Misses       5640     5642       +2\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2137?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/store.cc](https://codecov.io/gh/apache/arrow/pull/2137/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvc3RvcmUuY2M=) | `88.27% <0%> (-0.45%)` | :arrow_down: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2137?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2137?src=pr&el=footer). Last update [d4755e4...d9e6e9f](https://codecov.io/gh/apache/arrow/pull/2137?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T07:34:48.628+0000",
                    "updated": "2018-06-15T07:34:48.628+0000",
                    "started": "2018-06-15T07:34:48.628+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112216",
                    "issueId": "13150184"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150184/worklog/112262",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy closed pull request #2137: ARROW-2395: [Python] Fix flake8 warnings outside of pyarrow/ directory. Check in CI\nURL: https://github.com/apache/arrow/pull/2137\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/ci/travis_lint.sh b/ci/travis_lint.sh\nindex 0cbdf1a5cb..7cdbad4a31 100755\n--- a/ci/travis_lint.sh\n+++ b/ci/travis_lint.sh\n@@ -43,9 +43,9 @@ if [ \"$ARROW_CI_PYTHON_AFFECTED\" != \"0\" ]; then\n \n   PYTHON_DIR=$TRAVIS_BUILD_DIR/python\n \n-  flake8 --count $PYTHON_DIR/pyarrow\n+  flake8 --count $PYTHON_DIR\n \n   # Check Cython files with some checks turned off\n   flake8 --count --config=$PYTHON_DIR/.flake8.cython \\\n-         $PYTHON_DIR/pyarrow\n+         $PYTHON_DIR\n fi\ndiff --git a/python/benchmarks/__init__.py b/python/benchmarks/__init__.py\nindex 245692337b..13a83393a9 100644\n--- a/python/benchmarks/__init__.py\n+++ b/python/benchmarks/__init__.py\n@@ -14,4 +14,3 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-\ndiff --git a/python/benchmarks/array_ops.py b/python/benchmarks/array_ops.py\nindex 70ee7f1e1f..696b17109f 100644\n--- a/python/benchmarks/array_ops.py\n+++ b/python/benchmarks/array_ops.py\n@@ -15,7 +15,6 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-import numpy as np\n import pyarrow as pa\n \n \ndiff --git a/python/benchmarks/common.py b/python/benchmarks/common.py\nindex 70cd92492f..48526a4054 100644\n--- a/python/benchmarks/common.py\n+++ b/python/benchmarks/common.py\n@@ -19,7 +19,6 @@\n import decimal\n from functools import partial\n import itertools\n-import os\n import sys\n import unicodedata\n \n@@ -39,7 +38,7 @@ def _multiplicate_sequence(base, target_size):\n     return [base] * q + [base[:r]]\n \n \n-def get_random_bytes(n, *, seed=42):\n+def get_random_bytes(n, seed=42):\n     \"\"\"\n     Generate a random bytes object of size *n*.\n     Note the result might be compressible.\n@@ -58,7 +57,7 @@ def get_random_bytes(n, *, seed=42):\n     return result\n \n \n-def get_random_ascii(n, *, seed=42):\n+def get_random_ascii(n, seed=42):\n     \"\"\"\n     Get a random ASCII-only unicode string of size *n*.\n     \"\"\"\n@@ -69,7 +68,7 @@ def get_random_ascii(n, *, seed=42):\n     return result\n \n \n-def _random_unicode_letters(n, *, seed=42):\n+def _random_unicode_letters(n, seed=42):\n     \"\"\"\n     Generate a string of random unicode letters (slow).\n     \"\"\"\n@@ -93,7 +92,7 @@ def _get_more_candidates():\n _1024_random_unicode_letters = _random_unicode_letters(1024)\n \n \n-def get_random_unicode(n, *, seed=42):\n+def get_random_unicode(n, seed=42):\n     \"\"\"\n     Get a random non-ASCII unicode string of size *n*.\n     \"\"\"\n@@ -179,7 +178,8 @@ def generate_object_list(self, n, none_prob=DEFAULT_NONE_PROB):\n         self.sprinkle_nones(data, none_prob)\n         return data\n \n-    def _generate_varying_sequences(self, random_factory, n, min_size, max_size, none_prob):\n+    def _generate_varying_sequences(self, random_factory, n, min_size,\n+                                    max_size, none_prob):\n         \"\"\"\n         Generate a list of *n* sequences of varying size between *min_size*\n         and *max_size*, with *none_prob* probability of an entry being None.\n@@ -207,7 +207,6 @@ def generate_fixed_binary_list(self, n, size, none_prob=DEFAULT_NONE_PROB):\n         return self._generate_varying_sequences(get_random_bytes, n,\n                                                 size, size, none_prob)\n \n-\n     def generate_varying_binary_list(self, n, min_size, max_size,\n                                      none_prob=DEFAULT_NONE_PROB):\n         \"\"\"\n@@ -217,7 +216,6 @@ def generate_varying_binary_list(self, n, min_size, max_size,\n         return self._generate_varying_sequences(get_random_bytes, n,\n                                                 min_size, max_size, none_prob)\n \n-\n     def generate_ascii_string_list(self, n, min_size, max_size,\n                                    none_prob=DEFAULT_NONE_PROB):\n         \"\"\"\n@@ -227,7 +225,6 @@ def generate_ascii_string_list(self, n, min_size, max_size,\n         return self._generate_varying_sequences(get_random_ascii, n,\n                                                 min_size, max_size, none_prob)\n \n-\n     def generate_unicode_string_list(self, n, min_size, max_size,\n                                      none_prob=DEFAULT_NONE_PROB):\n         \"\"\"\n@@ -237,7 +234,6 @@ def generate_unicode_string_list(self, n, min_size, max_size,\n         return self._generate_varying_sequences(get_random_unicode, n,\n                                                 min_size, max_size, none_prob)\n \n-\n     def generate_int_list_list(self, n, min_size, max_size,\n                                none_prob=DEFAULT_NONE_PROB):\n         \"\"\"\n@@ -263,7 +259,9 @@ def generate_tuple_list(self, n, none_prob=DEFAULT_NONE_PROB):\n     def generate_dict_list(self, n, none_prob=DEFAULT_NONE_PROB):\n         \"\"\"\n         Generate a list of dicts with random values.\n-        Each dict has the form `{'u': int value, 'v': float value, 'w': bool value}`\n+        Each dict has the form\n+\n+            `{'u': int value, 'v': float value, 'w': bool value}`\n         \"\"\"\n         ints = self.generate_int_list(n, none_prob=none_prob)\n         floats = self.generate_float_list(n, none_prob=none_prob)\ndiff --git a/python/benchmarks/microbenchmarks.py b/python/benchmarks/microbenchmarks.py\nindex bae5806e14..f8ba383c70 100644\n--- a/python/benchmarks/microbenchmarks.py\n+++ b/python/benchmarks/microbenchmarks.py\n@@ -15,7 +15,6 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-import pyarrow as pa\n import pyarrow.benchmark as pb\n \n from . import common\n@@ -44,4 +43,3 @@ def setup(self, type_name):\n \n     def time_PandasObjectIsNull(self, *args):\n         pb.benchmark_PandasObjectIsNull(self.lst)\n-\ndiff --git a/python/benchmarks/plasma.py b/python/benchmarks/plasma.py\nindex 8a607a3c62..7cefcdffad 100644\n--- a/python/benchmarks/plasma.py\n+++ b/python/benchmarks/plasma.py\n@@ -18,11 +18,8 @@\n import numpy as np\n import timeit\n \n-import pyarrow as pa\n import pyarrow.plasma as plasma\n \n-from . import common\n-\n \n class SimplePlasmaThroughput(object):\n     \"\"\"Benchmark plasma store throughput with a single client.\"\"\"\n@@ -32,7 +29,8 @@ class SimplePlasmaThroughput(object):\n     timer = timeit.default_timer\n \n     def setup(self, size):\n-        self.plasma_store_ctx = plasma.start_plasma_store(plasma_store_memory=10**9)\n+        self.plasma_store_ctx = plasma.start_plasma_store(\n+            plasma_store_memory=10**9)\n         plasma_store_name, p = self.plasma_store_ctx.__enter__()\n         self.plasma_client = plasma.connect(plasma_store_name, \"\", 64)\n \n@@ -51,7 +49,8 @@ class SimplePlasmaLatency(object):\n     timer = timeit.default_timer\n \n     def setup(self):\n-        self.plasma_store_ctx = plasma.start_plasma_store(plasma_store_memory=10**9)\n+        self.plasma_store_ctx = plasma.start_plasma_store(\n+            plasma_store_memory=10**9)\n         plasma_store_name, p = self.plasma_store_ctx.__enter__()\n         self.plasma_client = plasma.connect(plasma_store_name, \"\", 64)\n \ndiff --git a/python/benchmarks/streaming.py b/python/benchmarks/streaming.py\nindex be7fda42c6..2012141a9e 100644\n--- a/python/benchmarks/streaming.py\n+++ b/python/benchmarks/streaming.py\n@@ -26,12 +26,15 @@\n def generate_chunks(total_size, nchunks, ncols, dtype=np.dtype('int64')):\n     rowsize = total_size // nchunks // ncols\n     assert rowsize % dtype.itemsize == 0\n+\n+    def make_column(col, chunk):\n+        return np.frombuffer(common.get_random_bytes(\n+            rowsize, seed=col + 997 * chunk)).view(dtype)\n+\n     return [pd.DataFrame({\n-            'c' + str(col): np.frombuffer(\n-                common.get_random_bytes(rowsize, seed=col + 997 * chunk)).view(dtype)\n-            for col in range(ncols)\n-        })\n-        for chunk in range(nchunks)]\n+            'c' + str(col): make_column(col, chunk)\n+            for col in range(ncols)})\n+            for chunk in range(nchunks)]\n \n \n class StreamReader(object):\n@@ -64,4 +67,4 @@ def setup(self, chunk_size):\n     def time_read_to_dataframe(self, *args):\n         reader = pa.RecordBatchStreamReader(self.source)\n         table = reader.read_all()\n-        df = table.to_pandas()\n+        df = table.to_pandas()  # noqa\ndiff --git a/python/doc/source/conf.py b/python/doc/source/conf.py\nindex 1e35ef9359..51e60b1a9a 100644\n--- a/python/doc/source/conf.py\n+++ b/python/doc/source/conf.py\n@@ -30,6 +30,7 @@\n # add these directories to sys.path here. If the directory is relative to the\n # documentation root, use os.path.abspath to make it absolute, like shown here.\n #\n+import glob\n import os\n import sys\n \n@@ -77,7 +78,6 @@\n # source_suffix = ['.rst', '.md']\n source_suffix = '.rst'\n \n-import glob\n autosummary_generate = glob.glob(\"*.rst\")\n \n # The encoding of source files.\n@@ -187,8 +187,8 @@\n # html_logo = None\n \n # The name of an image file (relative to this directory) to use as a favicon of\n-# the docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32\n-# pixels large.\n+# the docs.  This file should be a Windows icon file (.ico) being 16x16 or\n+# 32x32 pixels large.\n #\n # html_favicon = None\n \ndiff --git a/python/examples/plasma/sorting/multimerge.pyx b/python/examples/plasma/sorting/multimerge.pyx\nindex 6dd5aaef95..5e77fdfcc8 100644\n--- a/python/examples/plasma/sorting/multimerge.pyx\n+++ b/python/examples/plasma/sorting/multimerge.pyx\n@@ -23,9 +23,9 @@ from libc.stdint cimport uintptr_t\n from libcpp.vector cimport vector\n from libcpp.pair cimport pair\n \n-cimport numpy as np\n import numpy as np\n \n+cimport numpy as np\n \n cdef extern from \"<queue>\" namespace \"std\" nogil:\n     cdef cppclass priority_queue[T]:\n@@ -44,7 +44,7 @@ def multimerge2d(*arrays):\n     This assumes C style ordering for both input and output arrays. For\n     each input array we have array[i,0] <= array[i+1,0] and for the output\n     array the same will hold.\n-    \n+\n     Ideally this code would be simpler and also support both C style\n     and Fortran style ordering.\n     \"\"\"\ndiff --git a/python/examples/plasma/sorting/sort_df.py b/python/examples/plasma/sorting/sort_df.py\nindex 0805592b9f..2e4df589ee 100644\n--- a/python/examples/plasma/sorting/sort_df.py\n+++ b/python/examples/plasma/sorting/sort_df.py\n@@ -17,7 +17,6 @@\n \n from multiprocessing import Pool\n import numpy as np\n-import os\n import pandas as pd\n import pyarrow as pa\n import pyarrow.plasma as plasma\ndiff --git a/python/scripts/test_leak.py b/python/scripts/test_leak.py\nindex 0b12fb5cd2..e3de56b28a 100644\n--- a/python/scripts/test_leak.py\n+++ b/python/scripts/test_leak.py\n@@ -57,4 +57,5 @@ def leak2():\n \n         gc.collect()\n \n+\n leak2()\ndiff --git a/python/setup.py b/python/setup.py\nindex 7a8118b1fb..6b1e8b3d4f 100644\n--- a/python/setup.py\n+++ b/python/setup.py\n@@ -1,5 +1,4 @@\n #!/usr/bin/env python\n-\n # Licensed to the Apache Software Foundation (ASF) under one\n # or more contributor license agreements.  See the NOTICE file\n # distributed with this work for additional information\n@@ -102,7 +101,8 @@ def run(self):\n                      ('with-static-boost', None, 'link boost statically'),\n                      ('with-plasma', None, 'build the Plasma extension'),\n                      ('with-orc', None, 'build the ORC extension'),\n-                     ('generate-coverage', None, 'enable Cython code coverage'),\n+                     ('generate-coverage', None,\n+                      'enable Cython code coverage'),\n                      ('bundle-boost', None,\n                       'bundle the (shared) Boost libraries'),\n                      ('bundle-arrow-cpp', None,\n@@ -116,7 +116,8 @@ def initialize_options(self):\n             self.cmake_generator = 'Visual Studio 14 2015 Win64'\n         self.extra_cmake_args = os.environ.get('PYARROW_CMAKE_OPTIONS', '')\n         self.build_type = os.environ.get('PYARROW_BUILD_TYPE', 'debug').lower()\n-        self.boost_namespace = os.environ.get('PYARROW_BOOST_NAMESPACE', 'boost')\n+        self.boost_namespace = os.environ.get('PYARROW_BOOST_NAMESPACE',\n+                                              'boost')\n \n         self.cmake_cxxflags = os.environ.get('PYARROW_CXXFLAGS', '')\n \n@@ -252,7 +253,8 @@ def _run_cmake(self):\n                 print(\"-- Finished cmake for pyarrow\")\n                 # Do the build\n                 print(\"-- Running cmake --build for pyarrow\")\n-                self.spawn(['cmake', '--build', '.', '--config', self.build_type])\n+                self.spawn(['cmake', '--build', '.', '--config',\n+                            self.build_type])\n                 print(\"-- Finished cmake --build for pyarrow\")\n \n             if self.inplace:\n@@ -297,14 +299,16 @@ def _run_cmake(self):\n             shutil.move(pjoin(build_prefix, 'include'),\n                         pjoin(build_lib, 'pyarrow'))\n \n-            # Move the built C-extension to the place expected by the Python build\n+            # Move the built C-extension to the place expected by the Python\n+            # build\n             self._found_names = []\n             for name in self.CYTHON_MODULE_NAMES:\n                 built_path = self.get_ext_built(name)\n                 if not os.path.exists(built_path):\n                     print(built_path)\n                     if self._failure_permitted(name):\n-                        print('Cython module {0} failure permitted'.format(name))\n+                        print('Cython module {0} failure permitted'\n+                              .format(name))\n                         continue\n                     raise RuntimeError('pyarrow C-extension failed to build:',\n                                        os.path.abspath(built_path))\n@@ -337,11 +341,11 @@ def _run_cmake(self):\n \n                 if os.path.exists(self.get_ext_built_api_header(name)):\n                     shutil.move(self.get_ext_built_api_header(name),\n-                                pjoin(os.path.dirname(ext_path), name + '_api.h'))\n+                                pjoin(os.path.dirname(ext_path),\n+                                      name + '_api.h'))\n \n             # Move the plasma store\n             if self.with_plasma:\n-                build_py = self.get_finalized_command('build_py')\n                 source = os.path.join(self.build_type, \"plasma_store\")\n                 target = os.path.join(build_lib,\n                                       self._get_build_dir(),\n@@ -486,7 +490,8 @@ def has_ext_modules(foo):\n def parse_version(root):\n     from setuptools_scm import version_from_scm\n     import setuptools_scm.git\n-    describe = setuptools_scm.git.DEFAULT_DESCRIBE + \" --match 'apache-arrow-[0-9]*'\"\n+    describe = (setuptools_scm.git.DEFAULT_DESCRIBE +\n+                \" --match 'apache-arrow-[0-9]*'\")\n     # Strip catchall from the commandline\n     describe = describe.replace(\"--match *.*\", \"\")\n     version = setuptools_scm.git.parse(root, describe)\n@@ -520,7 +525,8 @@ def parse_version(root):\n             'plasma_store = pyarrow:_plasma_store_entry_point'\n         ]\n     },\n-    use_scm_version={\"root\": \"..\", \"relative_to\": __file__, \"parse\": parse_version},\n+    use_scm_version={\"root\": \"..\", \"relative_to\": __file__,\n+                     \"parse\": parse_version},\n     setup_requires=['setuptools_scm', 'cython >= 0.27'] + setup_requires,\n     install_requires=install_requires,\n     tests_require=['pytest', 'pandas'],\ndiff --git a/python/testing/parquet_interop.py b/python/testing/parquet_interop.py\nindex ba2eb6fa41..6d41ba4b6a 100644\n--- a/python/testing/parquet_interop.py\n+++ b/python/testing/parquet_interop.py\n@@ -16,10 +16,8 @@\n # under the License.\n \n import os\n-import pytest\n \n import fastparquet\n-import pandas as pd\n import pyarrow as pa\n import pyarrow.parquet as pq\n import pandas.util.testing as tm\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T09:24:49.803+0000",
                    "updated": "2018-06-15T09:24:49.803+0000",
                    "started": "2018-06-15T09:24:49.802+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112262",
                    "issueId": "13150184"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 3600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@44ecd748[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@481777a7[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2ed8b2fe[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5d0142cd[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@32d43e16[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5d02c3ba[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3626d5a6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@61e6fe85[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@72d15821[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@39055ad2[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@390e23b1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6f4ae0c3[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 3600,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Jun 15 09:24:48 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-06-15T09:24:48.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2395/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-04-04T23:30:27.000+0000",
        "updated": "2018-07-27T15:27:23.000+0000",
        "timeoriginalestimate": null,
        "description": "Fix flake8 warnings for files outside of benchmarks directory.\r\n\r\n\u00a0\r\n\r\n!https://user-images.githubusercontent.com/2118138/38217076-f08a67da-369a-11e8-8166-b3a9ed7d9a60.png!",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 3600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Correct flake8 errors outside of pyarrow/ directory",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": "https://github.com/apache/arrow/pull/1811",
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150184/comment/16513594",
                    "id": "16513594",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "Issue resolved by pull request 2137\n[https://github.com/apache/arrow/pull/2137]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-06-15T09:24:48.658+0000",
                    "updated": "2018-06-15T09:24:48.658+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3s5zz:",
        "customfield_12314139": null
    }
}