{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13213618",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213618",
    "key": "ARROW-4468",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343937",
                "id": "12343937",
                "description": "",
                "name": "0.13.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-04-01"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=paddyhoran",
            "name": "paddyhoran",
            "key": "paddyhoran",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Paddy Horan",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=paddyhoran",
            "name": "paddyhoran",
            "key": "paddyhoran",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Paddy Horan",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=paddyhoran",
            "name": "paddyhoran",
            "key": "paddyhoran",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Paddy Horan",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4468/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 21,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213618/worklog/194910",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on pull request #3571: ARROW-4468: [Rust] Implement AND/OR kernels for Buffer (with SIMD)\nURL: https://github.com/apache/arrow/pull/3571\n \n \n   This PR lays the ground work for future PR's adding explicit SIMD to what was called \"array_ops\".  My plan is to migrate \"ops\" into the *compute* sub-module as I add explicit SIMD.\r\n   \r\n   This PR includes the following:\r\n    - introduces the `packed_simd` crate\r\n    - introduces the *compute* sub-module\r\n    - adds `bitwise_and` and `bitwise_or` functions for `Buffer`'s\r\n   \r\n   I'm adding these first as they are needed when updating the bitmap in all array kernels.  The functions above include compile time SIMD, .i.e you have to use `RUSTFLAGS=\"-C target-feature=+avx2\"` or similar.  However, even without this you should see a speed up as most modern processors will use certain instructions even if you do not explicitly ask for them (in my case the computation is completely memory bound and using larger registers would not speed this up further).\r\n   \r\n   I have included a benchmark to illustrate the speed up.  However, as the *compute* sub-module evolves I expect that the benchmarks will be for array kernels and not buffer kernels (at which point `bitwise_bin_op_default` and `bitwise_bin_op_simd` will be made private again).\r\n   \r\n   If interested also please see [this](https://github.com/rust-lang-nursery/packed_simd/issues/202) discussion with the maintainer of `packed_simd` for some background.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-06T04:16:32.887+0000",
                    "updated": "2019-02-06T04:16:32.887+0000",
                    "started": "2019-02-06T04:16:32.886+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "194910",
                    "issueId": "13213618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213618/worklog/195022",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #3571: ARROW-4468: [Rust] Implement AND/OR kernels for Buffer (with SIMD)\nURL: https://github.com/apache/arrow/pull/3571#issuecomment-460979546\n \n \n   @paddyhoran it looks great! I'm glad that You've started to implement the compute module with SIMD!\r\n   \r\n   However providing operator kernels for buffers seems a bit odd to me. How about implementing \r\n   `core::ops::BitAnd` and `core::ops::BitOr` on `arrow::bitmap::Bitmap` instead?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-06T10:48:27.173+0000",
                    "updated": "2019-02-06T10:48:27.173+0000",
                    "started": "2019-02-06T10:48:27.172+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "195022",
                    "issueId": "13213618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213618/worklog/195103",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on issue #3571: ARROW-4468: [Rust] Implement AND/OR kernels for Buffer (with SIMD)\nURL: https://github.com/apache/arrow/pull/3571#issuecomment-461029108\n \n \n   > How about implementing `core::ops::BitAnd` and `core::ops::BitOr` on `arrow::bitmap::Bitmap` instead?\r\n   \r\n   Yea, I started to do this but decided not to.  I plan for these functions to evolve over time as I add the rest of the kernels.  One situation that came to mind was that when implementing kernels on arrays I will likely want to process the values buffer and bitmap buffer in the same loop which will be made difficult if using `BitAnd` and `BitOr`.\r\n   \r\n   As SIMD is being introduced I wanted to submit this PR as it's smaller in scope, isolated to buffers, so that people could comment on the SIMD approach.  Most of what will be in the *boolean_kernels\" file will be kernels for arrays and these functions may just become \"helper\" functions.\r\n   \r\n   In short, I do plan to add `BitAnd`/`BitOr` but didn't want to back myself into a corner.  I plan to have all this cleaned up for the 0.13.0 release.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-06T13:49:33.823+0000",
                    "updated": "2019-02-06T13:49:33.823+0000",
                    "started": "2019-02-06T13:49:33.823+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "195103",
                    "issueId": "13213618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213618/worklog/195858",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "siddharthteotia commented on issue #3571: ARROW-4468: [Rust] Implement AND/OR kernels for Buffer (with SIMD)\nURL: https://github.com/apache/arrow/pull/3571#issuecomment-461556062\n \n \n   @paddyhoran , this is great.\r\n   \r\n   Are we adding SIMD kernels in a generic manner? In other words, can we leverage SIMD acceleration done here for similar operations on arrow vectors in other languages C++, Java etc?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-07T19:06:33.236+0000",
                    "updated": "2019-02-07T19:06:33.236+0000",
                    "started": "2019-02-07T19:06:33.236+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "195858",
                    "issueId": "13213618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213618/worklog/195887",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "siddharthteotia commented on pull request #3571: ARROW-4468: [Rust] Implement AND/OR kernels for Buffer (with SIMD)\nURL: https://github.com/apache/arrow/pull/3571#discussion_r254825951\n \n \n\n ##########\n File path: rust/arrow/src/compute/boolean_kernels.rs\n ##########\n @@ -0,0 +1,145 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+use packed_simd::u8x64;\n+use std::slice::{from_raw_parts, from_raw_parts_mut};\n+\n+use crate::buffer::{Buffer, MutableBuffer};\n+use crate::builder::{BufferBuilderTrait, UInt8BufferBuilder};\n+\n+/// SIMD accelerated version of bitwise binary operation for two `Buffer`'s.\n+#[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n+pub fn bitwise_bin_op_simd<F>(left: &Buffer, right: &Buffer, op: F) -> Buffer\n+where\n+    F: Fn(u8x64, u8x64) -> u8x64,\n+{\n+    let mut result = MutableBuffer::new(left.len()).with_bitset(left.len(), false);\n+    let lanes = u8x64::lanes();\n+    for i in (0..left.len()).step_by(lanes) {\n+        let left_data =\n \n Review comment:\n   I just want to understand the approach here. Do we do the following:\r\n   \r\n   SIMD_AND (left data, right data)  -> result as bitmask\r\n   SIMD_AND(left validity, right validity) -> result as bitmask\r\n   \r\n   The first SIMD would have performed the operation on garbage data as well (where validity bit is 0) but that is fine as we avoid a branch and finally use validity to get the end result\r\n   \r\n   SIMD_AND (result1, result 2)\r\n   \r\n   I am not sure how exactly do we use validity in the below code\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-07T19:23:00.146+0000",
                    "updated": "2019-02-07T19:23:00.146+0000",
                    "started": "2019-02-07T19:23:00.145+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "195887",
                    "issueId": "13213618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213618/worklog/195916",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on pull request #3571: ARROW-4468: [Rust] Implement AND/OR kernels for Buffer (with SIMD)\nURL: https://github.com/apache/arrow/pull/3571#discussion_r254853057\n \n \n\n ##########\n File path: rust/arrow/src/compute/boolean_kernels.rs\n ##########\n @@ -0,0 +1,145 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+use packed_simd::u8x64;\n+use std::slice::{from_raw_parts, from_raw_parts_mut};\n+\n+use crate::buffer::{Buffer, MutableBuffer};\n+use crate::builder::{BufferBuilderTrait, UInt8BufferBuilder};\n+\n+/// SIMD accelerated version of bitwise binary operation for two `Buffer`'s.\n+#[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n+pub fn bitwise_bin_op_simd<F>(left: &Buffer, right: &Buffer, op: F) -> Buffer\n+where\n+    F: Fn(u8x64, u8x64) -> u8x64,\n+{\n+    let mut result = MutableBuffer::new(left.len()).with_bitset(left.len(), false);\n+    let lanes = u8x64::lanes();\n+    for i in (0..left.len()).step_by(lanes) {\n+        let left_data =\n \n Review comment:\n   Yes, that's correct.  \r\n   \r\n   Our `BooleanArray` (bit packed) and `Bitmask` are both backed by a `Buffer`.  For other kernels like ADD, etc. we will reuse the SIMD_AND on the `Bitmask`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-07T20:20:53.762+0000",
                    "updated": "2019-02-07T20:20:53.762+0000",
                    "started": "2019-02-07T20:20:53.761+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "195916",
                    "issueId": "13213618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213618/worklog/195919",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on issue #3571: ARROW-4468: [Rust] Implement AND/OR kernels for Buffer (with SIMD)\nURL: https://github.com/apache/arrow/pull/3571#issuecomment-461584002\n \n \n   > Are we adding SIMD kernels in a generic manner? In other words, can we leverage SIMD acceleration done here for similar operations on arrow vectors in other languages C++, Java etc?\r\n   \r\n   This is one of the great value propositions of Arrow, writing computation in one language and re-using it across many.  Right now, I plan to update all our compute in Rust to use SIMD by the 0.13.0 release.  Once up and running we could talk about how we could expose it to other implementations.\r\n   \r\n   I really want to be able to write high-performance code in Rust and expose it to `pyarrow` but I have not had a chance to look at it yet...\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-07T20:29:26.030+0000",
                    "updated": "2019-02-07T20:29:26.030+0000",
                    "started": "2019-02-07T20:29:26.029+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "195919",
                    "issueId": "13213618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213618/worklog/195922",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "siddharthteotia commented on issue #3571: ARROW-4468: [Rust] Implement AND/OR kernels for Buffer (with SIMD)\nURL: https://github.com/apache/arrow/pull/3571#issuecomment-461587191\n \n \n   LGTM - This can be merged if you are not planning to add more changes.\r\n   \r\n   Another question though -- from my prior experience with SIMD (in C/C++ land), I leveraged Intel compiler intrinsics (platform dependent) to work with underlying SIMD instructions. How are these instructions available in Rust?\r\n   \r\n   Secondly, I see that in the code we check if target architecture (x86/x86_64) has support for SIMD. I am not sure where we are checking if we have to use SSE or AVX256, AVX512?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-07T20:39:51.762+0000",
                    "updated": "2019-02-07T20:39:51.762+0000",
                    "started": "2019-02-07T20:39:51.761+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "195922",
                    "issueId": "13213618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213618/worklog/195923",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "siddharthteotia commented on pull request #3571: ARROW-4468: [Rust] Implement AND/OR kernels for Buffer (with SIMD)\nURL: https://github.com/apache/arrow/pull/3571#discussion_r254860180\n \n \n\n ##########\n File path: rust/arrow/src/compute/boolean_kernels.rs\n ##########\n @@ -0,0 +1,145 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+use packed_simd::u8x64;\n+use std::slice::{from_raw_parts, from_raw_parts_mut};\n+\n+use crate::buffer::{Buffer, MutableBuffer};\n+use crate::builder::{BufferBuilderTrait, UInt8BufferBuilder};\n+\n+/// SIMD accelerated version of bitwise binary operation for two `Buffer`'s.\n+#[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n+pub fn bitwise_bin_op_simd<F>(left: &Buffer, right: &Buffer, op: F) -> Buffer\n+where\n+    F: Fn(u8x64, u8x64) -> u8x64,\n+{\n+    let mut result = MutableBuffer::new(left.len()).with_bitset(left.len(), false);\n+    let lanes = u8x64::lanes();\n+    for i in (0..left.len()).step_by(lanes) {\n+        let left_data =\n \n Review comment:\n   Thanks.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-07T20:42:04.030+0000",
                    "updated": "2019-02-07T20:42:04.030+0000",
                    "started": "2019-02-07T20:42:04.029+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "195923",
                    "issueId": "13213618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213618/worklog/195930",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on issue #3571: ARROW-4468: [Rust] Implement AND/OR kernels for Buffer (with SIMD)\nURL: https://github.com/apache/arrow/pull/3571#issuecomment-461594617\n \n \n   Actually I do plan to refactor this a little tonight, @kszucs got me thinking..\r\n   \r\n   Intrinsics are in the `stdsimd` crate in the standard library of Rust.  There is no runtime detection in this PR, you have to choose at compile time if you want to use AVX512 for example.  However, `packed_simd` is quite nice in that using the `u8x64` type is portable, on systems without 512 bit registers it will use 2 256 bit registers or similiar.\r\n   \r\n   We can look at adding runtime detection of instructions but I plan to add this later behind a feature flag as it's not always what you want to do for maximum performance.  For instance, right now if I don't ask for any specific instructions it defaults to SSE.  I have AVX2 available on my dev machine but there's no difference as the computation is completely memory bound.\r\n   \r\n   As others will likely be building higher level libraries on Arrow I thought it best give all the options to developers (i.e. static detection + optional runtime detection behind a feature flag).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-07T21:03:09.355+0000",
                    "updated": "2019-02-07T21:03:09.355+0000",
                    "started": "2019-02-07T21:03:09.355+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "195930",
                    "issueId": "13213618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213618/worklog/196086",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on issue #3571: ARROW-4468: [Rust] Implement AND/OR kernels for Buffer (with SIMD)\nURL: https://github.com/apache/arrow/pull/3571#issuecomment-461680774\n \n \n   @kszucs @siddharthteotia @andygrove @sunchao could you please give this a review when you have a chance.\r\n   \r\n   @kszucs I re-worked the code to use traits instead while extracting what I could for re-use in other kernel implementations (where I will want to operate on the values buffer and bitmap buffer in the same loop).\r\n   \r\n   I removed the `compute` sub module (which I will re-introduce as part of [ARROW-4490](https://issues.apache.org/jira/browse/ARROW-4490?filter=-1)).\r\n   \r\n   I left the benchmark in place but renamed it to illustrate the speed up but this will be replaced by benchmarks on the array kernels in time.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-08T03:43:23.193+0000",
                    "updated": "2019-02-08T03:43:23.193+0000",
                    "started": "2019-02-08T03:43:23.193+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "196086",
                    "issueId": "13213618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213618/worklog/196222",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on pull request #3571: ARROW-4468: [Rust] Implement BitAnd/BitOr for &Buffer (with SIMD)\nURL: https://github.com/apache/arrow/pull/3571#discussion_r255077172\n \n \n\n ##########\n File path: rust/arrow/src/buffer.rs\n ##########\n @@ -140,6 +145,120 @@ impl<T: AsRef<[u8]>> From<T> for Buffer {\n     }\n }\n \n+impl<'a, 'b> BitAnd<&'b Buffer> for &'a Buffer {\n+    type Output = Buffer;\n+\n+    fn bitand(self, rhs: &'b Buffer) -> Buffer {\n+        assert_eq!(\n+            self.len(),\n+            rhs.len(),\n+            \"Buffers must be the same size to apply Bitwise AND.\"\n+        );\n+\n+        // SIMD implementation if available\n+        #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n+        {\n+            let mut result =\n+                MutableBuffer::new(self.len()).with_bitset(self.len(), false);\n+            let lanes = u8x64::lanes();\n \n Review comment:\n   I should have made this generic over the op to clean this up :(,  I'll follow up when I get a chance...\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-08T13:42:58.186+0000",
                    "updated": "2019-02-08T13:42:58.186+0000",
                    "started": "2019-02-08T13:42:58.185+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "196222",
                    "issueId": "13213618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213618/worklog/196223",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on pull request #3571: ARROW-4468: [Rust] Implement BitAnd/BitOr for &Buffer (with SIMD)\nURL: https://github.com/apache/arrow/pull/3571#discussion_r255077172\n \n \n\n ##########\n File path: rust/arrow/src/buffer.rs\n ##########\n @@ -140,6 +145,120 @@ impl<T: AsRef<[u8]>> From<T> for Buffer {\n     }\n }\n \n+impl<'a, 'b> BitAnd<&'b Buffer> for &'a Buffer {\n+    type Output = Buffer;\n+\n+    fn bitand(self, rhs: &'b Buffer) -> Buffer {\n+        assert_eq!(\n+            self.len(),\n+            rhs.len(),\n+            \"Buffers must be the same size to apply Bitwise AND.\"\n+        );\n+\n+        // SIMD implementation if available\n+        #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n+        {\n+            let mut result =\n+                MutableBuffer::new(self.len()).with_bitset(self.len(), false);\n+            let lanes = u8x64::lanes();\n \n Review comment:\n   I should have made this generic over the operators (& and |) to clean this up :(,  I'll follow up when I get a chance...  Please ignore this duplication of code if reviewing.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-08T13:44:26.225+0000",
                    "updated": "2019-02-08T13:44:26.225+0000",
                    "started": "2019-02-08T13:44:26.224+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "196223",
                    "issueId": "13213618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213618/worklog/196365",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "siddharthteotia commented on pull request #3571: ARROW-4468: [Rust] Implement BitAnd/BitOr for &Buffer (with SIMD)\nURL: https://github.com/apache/arrow/pull/3571#discussion_r255204853\n \n \n\n ##########\n File path: rust/arrow/benches/bitwise_ops.rs\n ##########\n @@ -0,0 +1,67 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#[macro_use]\n+extern crate criterion;\n+use criterion::Criterion;\n+\n+extern crate arrow;\n+\n+use arrow::buffer::Buffer;\n+use arrow::builder::{BufferBuilderTrait, UInt8BufferBuilder};\n+\n+fn create_buffer(size: usize) -> Buffer {\n+    let mut builder = UInt8BufferBuilder::new(size);\n+    for _i in 0..size {\n+        builder.append(1_u8).unwrap();\n+    }\n+    builder.finish()\n+}\n+\n+fn bitwise_and_default(size: usize) {\n+    let buffer_a = create_buffer(size);\n+    let buffer_b = create_buffer(size);\n+\n+    criterion::black_box({\n+        let mut builder = UInt8BufferBuilder::new(buffer_a.len());\n+        for i in 0..buffer_a.len() {\n+            unsafe {\n+                builder\n+                    .append(\n+                        buffer_a.data().get_unchecked(i)\n+                            & buffer_b.data().get_unchecked(i),\n+                    )\n+                    .unwrap();\n+            }\n+        }\n+        builder.finish()\n+    });\n+}\n+\n+fn bitwise_and_simd(size: usize) {\n \n Review comment:\n   I wonder where are the similar functions for bitwise OR?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-08T19:19:40.212+0000",
                    "updated": "2019-02-08T19:19:40.212+0000",
                    "started": "2019-02-08T19:19:40.209+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "196365",
                    "issueId": "13213618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213618/worklog/196369",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on pull request #3571: ARROW-4468: [Rust] Implement BitAnd/BitOr for &Buffer (with SIMD)\nURL: https://github.com/apache/arrow/pull/3571#discussion_r255207314\n \n \n\n ##########\n File path: rust/arrow/benches/bitwise_ops.rs\n ##########\n @@ -0,0 +1,67 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#[macro_use]\n+extern crate criterion;\n+use criterion::Criterion;\n+\n+extern crate arrow;\n+\n+use arrow::buffer::Buffer;\n+use arrow::builder::{BufferBuilderTrait, UInt8BufferBuilder};\n+\n+fn create_buffer(size: usize) -> Buffer {\n+    let mut builder = UInt8BufferBuilder::new(size);\n+    for _i in 0..size {\n+        builder.append(1_u8).unwrap();\n+    }\n+    builder.finish()\n+}\n+\n+fn bitwise_and_default(size: usize) {\n+    let buffer_a = create_buffer(size);\n+    let buffer_b = create_buffer(size);\n+\n+    criterion::black_box({\n+        let mut builder = UInt8BufferBuilder::new(buffer_a.len());\n+        for i in 0..buffer_a.len() {\n+            unsafe {\n+                builder\n+                    .append(\n+                        buffer_a.data().get_unchecked(i)\n+                            & buffer_b.data().get_unchecked(i),\n+                    )\n+                    .unwrap();\n+            }\n+        }\n+        builder.finish()\n+    });\n+}\n+\n+fn bitwise_and_simd(size: usize) {\n \n Review comment:\n   Eventually I plan to benchmark the array kernels not the buffer level operations.  The current benchmark was just to demonstrate that the PR was in fact speeding things up so I just added the AND version almost as an example.  I'll add the OR version also.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-08T19:27:01.330+0000",
                    "updated": "2019-02-08T19:27:01.330+0000",
                    "started": "2019-02-08T19:27:01.330+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "196369",
                    "issueId": "13213618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213618/worklog/196425",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on issue #3571: ARROW-4468: [Rust] Implement BitAnd/BitOr for &Buffer (with SIMD)\nURL: https://github.com/apache/arrow/pull/3571#issuecomment-461953516\n \n \n   Rebased.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-08T21:30:50.306+0000",
                    "updated": "2019-02-08T21:30:50.306+0000",
                    "started": "2019-02-08T21:30:50.305+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "196425",
                    "issueId": "13213618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213618/worklog/197735",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "siddharthteotia commented on pull request #3571: ARROW-4468: [Rust] Implement BitAnd/BitOr for &Buffer (with SIMD)\nURL: https://github.com/apache/arrow/pull/3571#discussion_r256089140\n \n \n\n ##########\n File path: rust/arrow/benches/bitwise_ops.rs\n ##########\n @@ -0,0 +1,67 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#[macro_use]\n+extern crate criterion;\n+use criterion::Criterion;\n+\n+extern crate arrow;\n+\n+use arrow::buffer::Buffer;\n+use arrow::builder::{BufferBuilderTrait, UInt8BufferBuilder};\n+\n+fn create_buffer(size: usize) -> Buffer {\n+    let mut builder = UInt8BufferBuilder::new(size);\n+    for _i in 0..size {\n+        builder.append(1_u8).unwrap();\n+    }\n+    builder.finish()\n+}\n+\n+fn bitwise_and_default(size: usize) {\n+    let buffer_a = create_buffer(size);\n+    let buffer_b = create_buffer(size);\n+\n+    criterion::black_box({\n+        let mut builder = UInt8BufferBuilder::new(buffer_a.len());\n+        for i in 0..buffer_a.len() {\n+            unsafe {\n+                builder\n+                    .append(\n+                        buffer_a.data().get_unchecked(i)\n+                            & buffer_b.data().get_unchecked(i),\n+                    )\n+                    .unwrap();\n+            }\n+        }\n+        builder.finish()\n+    });\n+}\n+\n+fn bitwise_and_simd(size: usize) {\n \n Review comment:\n   Got it. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-12T18:33:55.297+0000",
                    "updated": "2019-02-12T18:33:55.297+0000",
                    "started": "2019-02-12T18:33:55.296+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "197735",
                    "issueId": "13213618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213618/worklog/197736",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "siddharthteotia commented on issue #3571: ARROW-4468: [Rust] Implement BitAnd/BitOr for &Buffer (with SIMD)\nURL: https://github.com/apache/arrow/pull/3571#issuecomment-462879543\n \n \n   LGTM. @paddyhoran , are you planning to add more changes or this is good to go?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-12T18:34:30.234+0000",
                    "updated": "2019-02-12T18:34:30.234+0000",
                    "started": "2019-02-12T18:34:30.233+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "197736",
                    "issueId": "13213618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213618/worklog/197752",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on issue #3571: ARROW-4468: [Rust] Implement BitAnd/BitOr for &Buffer (with SIMD)\nURL: https://github.com/apache/arrow/pull/3571#issuecomment-462896359\n \n \n   This is good to go IMHO.  I'd like to get it merged soon as I'm almost ready to submit another PR that builds on it.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-12T19:19:07.384+0000",
                    "updated": "2019-02-12T19:19:07.384+0000",
                    "started": "2019-02-12T19:19:07.383+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "197752",
                    "issueId": "13213618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13213618/worklog/197773",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "siddharthteotia commented on pull request #3571: ARROW-4468: [Rust] Implement BitAnd/BitOr for &Buffer (with SIMD)\nURL: https://github.com/apache/arrow/pull/3571\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-12T20:01:33.394+0000",
                    "updated": "2019-02-12T20:01:33.394+0000",
                    "started": "2019-02-12T20:01:33.394+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "197773",
                    "issueId": "13213618"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 12600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@17c80a45[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@b81dcaa[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7b510686[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7eb0e1ca[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@292d35e4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@60a35c98[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1335133c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6af21e21[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2a30848e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@508d5acc[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6b9a1f12[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@11630756[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 12600,
        "customfield_12312520": null,
        "customfield_12312521": "2019-02-04 04:10:35.0",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-02-12T20:02:17.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4468/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2019-02-04T04:10:35.000+0000",
        "updated": "2019-02-12T20:02:17.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 12600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Implement BitAnd/BitOr for &Buffer (with SIMD)",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [],
            "maxResults": 0,
            "total": 0,
            "startAt": 0
        },
        "customfield_12311820": "0|yi0mc0:",
        "customfield_12314139": null
    }
}