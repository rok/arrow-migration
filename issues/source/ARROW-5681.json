{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13240909",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240909",
    "key": "ARROW-5681",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334621",
                "id": "12334621",
                "name": "FlightRPC"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 28200,
            "total": 28200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 28200,
            "total": 28200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5681/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 48,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240909/worklog/264744",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on pull request #4652: ARROW-5681: [FlightRPC][Java] Add FlightStatusCode/FlightRuntimeException\nURL: https://github.com/apache/arrow/pull/4652\n \n \n   This prevents gRPC details from leaking, and allows services/clients to propagate error messages/codes properly to each other. We should do the same for C++/Python once #4484 lands.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-21T16:24:36.176+0000",
                    "updated": "2019-06-21T16:24:36.176+0000",
                    "started": "2019-06-21T16:24:36.175+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "264744",
                    "issueId": "13240909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240909/worklog/268780",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4652: ARROW-5681: [FlightRPC][Java] Add FlightStatusCode/FlightRuntimeException\nURL: https://github.com/apache/arrow/pull/4652#issuecomment-506482346\n \n \n   @lihalite does this need to go into 0.14?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-27T19:37:52.360+0000",
                    "updated": "2019-06-27T19:37:52.360+0000",
                    "started": "2019-06-27T19:37:52.359+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "268780",
                    "issueId": "13240909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240909/worklog/268799",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on pull request #4652: ARROW-5681: [FlightRPC][Java] Add FlightStatusCode/FlightRuntimeException\nURL: https://github.com/apache/arrow/pull/4652\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-27T20:18:04.420+0000",
                    "updated": "2019-06-27T20:18:04.420+0000",
                    "started": "2019-06-27T20:18:04.420+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "268799",
                    "issueId": "13240909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240909/worklog/268800",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on issue #4652: ARROW-5681: [FlightRPC][Java] Add FlightStatusCode/FlightRuntimeException\nURL: https://github.com/apache/arrow/pull/4652#issuecomment-506494877\n \n \n   No need in 0.14, I'm also still hammering on the API and will be sending a mailing list message to discuss why I'm introducing this (+ the API that motivates this change).\r\n   \r\n   I'll close it for now so it doesn't clog Travis.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-27T20:18:07.011+0000",
                    "updated": "2019-06-27T20:18:07.011+0000",
                    "started": "2019-06-27T20:18:07.010+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "268800",
                    "issueId": "13240909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240909/worklog/274383",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on pull request #4840: ARROW-5681: [FlightRPC] Add Flight-specific error APIs\nURL: https://github.com/apache/arrow/pull/4840\n \n \n   This adds a set of exceptions (in Java/Python) and status codes (in C++) for Flight, to convey Flight-specific issues and to let server implementations provide more semantic error messages to clients.\r\n   \r\n   The error codes defined are a subset of the gRPC ones. In Flight/Java, you could always raise `io.grpc.StatusRuntimeException` yourself, but we want to abstract away from the gRPC APIs. \r\n   \r\n   There are not tests for conveying these statuses cross-language. That should be done as part of ARROW-5875.\r\n   \r\n   Travis: https://travis-ci.com/lihalite/arrow/builds/118452703\r\n   AppVeyor: https://ci.appveyor.com/project/lihalite/arrow/builds/25849820\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-09T20:51:20.227+0000",
                    "updated": "2019-07-09T20:51:20.227+0000",
                    "started": "2019-07-09T20:51:20.226+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "274383",
                    "issueId": "13240909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240909/worklog/274567",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4840: ARROW-5681: [FlightRPC] Add Flight-specific error APIs\nURL: https://github.com/apache/arrow/pull/4840#issuecomment-509858592\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4840?src=pr&el=h1) Report\n   > Merging [#4840](https://codecov.io/gh/apache/arrow/pull/4840?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/7838886bf6862d3bdc1225caf24e2c6150d6ef33?src=pr&el=desc) will **increase** coverage by `6.36%`.\n   > The diff coverage is `59.33%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4840/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4840?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4840      +/-   ##\n   ==========================================\n   + Coverage   82.62%   88.99%   +6.36%     \n   ==========================================\n     Files         335      720     +385     \n     Lines       43377   100456   +57079     \n     Branches     1418        0    -1418     \n   ==========================================\n   + Hits        35841    89400   +53559     \n   - Misses       7174    11056    +3882     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4840?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [python/pyarrow/flight.py](https://codecov.io/gh/apache/arrow/pull/4840/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvZmxpZ2h0LnB5) | `80% <\u00f8> (\u00f8)` | |\n   | [cpp/src/arrow/python/flight.h](https://codecov.io/gh/apache/arrow/pull/4840/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vZmxpZ2h0Lmg=) | `77.77% <\u00f8> (\u00f8)` | |\n   | [cpp/src/arrow/flight/flight-test.cc](https://codecov.io/gh/apache/arrow/pull/4840/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvZmxpZ2h0LXRlc3QuY2M=) | `99.41% <100%> (\u00f8)` | |\n   | [cpp/src/arrow/flight/types.h](https://codecov.io/gh/apache/arrow/pull/4840/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvdHlwZXMuaA==) | `100% <100%> (\u00f8)` | |\n   | [cpp/src/arrow/flight/test-util.cc](https://codecov.io/gh/apache/arrow/pull/4840/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvdGVzdC11dGlsLmNj) | `89.83% <33.33%> (\u00f8)` | |\n   | [python/pyarrow/\\_flight.pyx](https://codecov.io/gh/apache/arrow/pull/4840/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvX2ZsaWdodC5weXg=) | `48.53% <45.22%> (\u00f8)` | |\n   | [python/pyarrow/tests/test\\_flight.py](https://codecov.io/gh/apache/arrow/pull/4840/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9mbGlnaHQucHk=) | `69.46% <50%> (\u00f8)` | |\n   | [cpp/src/arrow/flight/internal.cc](https://codecov.io/gh/apache/arrow/pull/4840/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvaW50ZXJuYWwuY2M=) | `74.47% <61.94%> (\u00f8)` | |\n   | [cpp/src/arrow/flight/types.cc](https://codecov.io/gh/apache/arrow/pull/4840/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvdHlwZXMuY2M=) | `89.07% <77.77%> (\u00f8)` | |\n   | [cpp/src/arrow/python/flight.cc](https://codecov.io/gh/apache/arrow/pull/4840/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vZmxpZ2h0LmNj) | `92.25% <91.66%> (\u00f8)` | |\n   | ... and [939 more](https://codecov.io/gh/apache/arrow/pull/4840/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4840?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4840?src=pr&el=footer). Last update [7838886...91d8ef0](https://codecov.io/gh/apache/arrow/pull/4840?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T00:24:08.515+0000",
                    "updated": "2019-07-10T00:24:08.515+0000",
                    "started": "2019-07-10T00:24:08.514+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "274567",
                    "issueId": "13240909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240909/worklog/274646",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4840: ARROW-5681: [FlightRPC] Add Flight-specific error APIs\nURL: https://github.com/apache/arrow/pull/4840#discussion_r301891457\n \n \n\n ##########\n File path: cpp/src/arrow/flight/internal.cc\n ##########\n @@ -49,27 +50,153 @@ Status FromGrpcStatus(const grpc::Status& grpc_status) {\n     return Status::OK();\n   }\n \n-  if (grpc_status.error_code() == grpc::StatusCode::UNIMPLEMENTED) {\n-    return Status::NotImplemented(\"gRPC returned unimplemented error, with message: \",\n-                                  grpc_status.error_message());\n-  } else {\n-    return Status::IOError(\"gRPC failed with error code \", grpc_status.error_code(),\n-                           \" and message: \", grpc_status.error_message());\n+  StatusCode code = StatusCode::UnknownError;\n+  std::string message = \"\";\n+  std::shared_ptr<StatusDetail> detail = nullptr;\n+\n+  switch (grpc_status.error_code()) {\n+    case grpc::StatusCode::OK:\n+      return Status::OK();\n+    case grpc::StatusCode::CANCELLED:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC cancelled call, with message: \",\n+                                    grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::Cancelled);\n+      break;\n+    case grpc::StatusCode::INVALID_ARGUMENT:\n+      code = StatusCode::Invalid;\n+      message =\n+          util::StringBuilder(\"gRPC returned invalid argument error, with message: \",\n+                              grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::DEADLINE_EXCEEDED:\n+      code = StatusCode::IOError;\n+      message =\n+          util::StringBuilder(\"gRPC returned deadline exceeded error, with message: \",\n+                              grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::TimedOut);\n+      break;\n+    case grpc::StatusCode::NOT_FOUND:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC returned not found error, with message: \",\n+                                    grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::ALREADY_EXISTS:\n+      code = StatusCode::Invalid;\n \n Review comment:\n   I believe I added an already exists error code.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T05:29:44.889+0000",
                    "updated": "2019-07-10T05:29:44.889+0000",
                    "started": "2019-07-10T05:29:44.888+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "274646",
                    "issueId": "13240909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240909/worklog/274647",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4840: ARROW-5681: [FlightRPC] Add Flight-specific error APIs\nURL: https://github.com/apache/arrow/pull/4840#discussion_r301891699\n \n \n\n ##########\n File path: cpp/src/arrow/flight/internal.cc\n ##########\n @@ -49,27 +50,153 @@ Status FromGrpcStatus(const grpc::Status& grpc_status) {\n     return Status::OK();\n   }\n \n-  if (grpc_status.error_code() == grpc::StatusCode::UNIMPLEMENTED) {\n-    return Status::NotImplemented(\"gRPC returned unimplemented error, with message: \",\n-                                  grpc_status.error_message());\n-  } else {\n-    return Status::IOError(\"gRPC failed with error code \", grpc_status.error_code(),\n-                           \" and message: \", grpc_status.error_message());\n+  StatusCode code = StatusCode::UnknownError;\n+  std::string message = \"\";\n+  std::shared_ptr<StatusDetail> detail = nullptr;\n+\n+  switch (grpc_status.error_code()) {\n+    case grpc::StatusCode::OK:\n+      return Status::OK();\n+    case grpc::StatusCode::CANCELLED:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC cancelled call, with message: \",\n+                                    grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::Cancelled);\n+      break;\n+    case grpc::StatusCode::INVALID_ARGUMENT:\n+      code = StatusCode::Invalid;\n+      message =\n+          util::StringBuilder(\"gRPC returned invalid argument error, with message: \",\n+                              grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::DEADLINE_EXCEEDED:\n+      code = StatusCode::IOError;\n+      message =\n+          util::StringBuilder(\"gRPC returned deadline exceeded error, with message: \",\n \n Review comment:\n   most if not all statuses can be constructed directly with:\r\n   Status::IOError(\"message ...\", variable, \"message ...\").with_detail(details)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T05:31:02.640+0000",
                    "updated": "2019-07-10T05:31:02.640+0000",
                    "started": "2019-07-10T05:31:02.639+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "274647",
                    "issueId": "13240909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240909/worklog/274648",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4840: ARROW-5681: [FlightRPC] Add Flight-specific error APIs\nURL: https://github.com/apache/arrow/pull/4840#discussion_r301891883\n \n \n\n ##########\n File path: cpp/src/arrow/flight/internal.cc\n ##########\n @@ -49,27 +50,153 @@ Status FromGrpcStatus(const grpc::Status& grpc_status) {\n     return Status::OK();\n   }\n \n-  if (grpc_status.error_code() == grpc::StatusCode::UNIMPLEMENTED) {\n-    return Status::NotImplemented(\"gRPC returned unimplemented error, with message: \",\n-                                  grpc_status.error_message());\n-  } else {\n-    return Status::IOError(\"gRPC failed with error code \", grpc_status.error_code(),\n-                           \" and message: \", grpc_status.error_message());\n+  StatusCode code = StatusCode::UnknownError;\n+  std::string message = \"\";\n+  std::shared_ptr<StatusDetail> detail = nullptr;\n+\n+  switch (grpc_status.error_code()) {\n+    case grpc::StatusCode::OK:\n+      return Status::OK();\n+    case grpc::StatusCode::CANCELLED:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC cancelled call, with message: \",\n+                                    grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::Cancelled);\n+      break;\n+    case grpc::StatusCode::INVALID_ARGUMENT:\n+      code = StatusCode::Invalid;\n+      message =\n+          util::StringBuilder(\"gRPC returned invalid argument error, with message: \",\n+                              grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::DEADLINE_EXCEEDED:\n+      code = StatusCode::IOError;\n+      message =\n+          util::StringBuilder(\"gRPC returned deadline exceeded error, with message: \",\n+                              grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::TimedOut);\n+      break;\n+    case grpc::StatusCode::NOT_FOUND:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC returned not found error, with message: \",\n+                                    grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::ALREADY_EXISTS:\n+      code = StatusCode::Invalid;\n+      message = util::StringBuilder(\"gRPC returned already exists error, with message: \",\n+                                    grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::PERMISSION_DENIED:\n+      code = StatusCode::IOError;\n+      message =\n+          util::StringBuilder(\"gRPC returned permission denied error, with message: \",\n+                              grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::Unauthorized);\n+      break;\n+    case grpc::StatusCode::RESOURCE_EXHAUSTED:\n+      code = StatusCode::Invalid;\n+      message =\n+          util::StringBuilder(\"gRPC returned resource exhausted error, with message: \",\n+                              grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::FAILED_PRECONDITION:\n+      code = StatusCode::Invalid;\n+      message =\n+          util::StringBuilder(\"gRPC returned precondition failed error, with message: \",\n+                              grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::ABORTED:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC returned aborted error, with message: \",\n+                                    grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::Internal);\n+      break;\n+    case grpc::StatusCode::OUT_OF_RANGE:\n+      code = StatusCode::Invalid;\n+      message = util::StringBuilder(\"gRPC returned out-of-range error, with message: \",\n+                                    grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::UNIMPLEMENTED:\n+      code = StatusCode::NotImplemented;\n+      message = util::StringBuilder(\"gRPC returned unimplemented error, with message: \",\n+                                    grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::INTERNAL:\n+      code = StatusCode::IOError;\n \n Review comment:\n   Unknown might be better?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T05:32:14.569+0000",
                    "updated": "2019-07-10T05:32:14.569+0000",
                    "started": "2019-07-10T05:32:14.568+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "274648",
                    "issueId": "13240909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240909/worklog/274651",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4840: ARROW-5681: [FlightRPC] Add Flight-specific error APIs\nURL: https://github.com/apache/arrow/pull/4840#discussion_r301892279\n \n \n\n ##########\n File path: cpp/src/arrow/flight/internal.cc\n ##########\n @@ -49,27 +50,153 @@ Status FromGrpcStatus(const grpc::Status& grpc_status) {\n     return Status::OK();\n   }\n \n-  if (grpc_status.error_code() == grpc::StatusCode::UNIMPLEMENTED) {\n-    return Status::NotImplemented(\"gRPC returned unimplemented error, with message: \",\n-                                  grpc_status.error_message());\n-  } else {\n-    return Status::IOError(\"gRPC failed with error code \", grpc_status.error_code(),\n-                           \" and message: \", grpc_status.error_message());\n+  StatusCode code = StatusCode::UnknownError;\n+  std::string message = \"\";\n+  std::shared_ptr<StatusDetail> detail = nullptr;\n+\n+  switch (grpc_status.error_code()) {\n+    case grpc::StatusCode::OK:\n+      return Status::OK();\n+    case grpc::StatusCode::CANCELLED:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC cancelled call, with message: \",\n+                                    grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::Cancelled);\n+      break;\n+    case grpc::StatusCode::INVALID_ARGUMENT:\n+      code = StatusCode::Invalid;\n+      message =\n+          util::StringBuilder(\"gRPC returned invalid argument error, with message: \",\n+                              grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::DEADLINE_EXCEEDED:\n+      code = StatusCode::IOError;\n+      message =\n+          util::StringBuilder(\"gRPC returned deadline exceeded error, with message: \",\n+                              grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::TimedOut);\n+      break;\n+    case grpc::StatusCode::NOT_FOUND:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC returned not found error, with message: \",\n+                                    grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::ALREADY_EXISTS:\n+      code = StatusCode::Invalid;\n+      message = util::StringBuilder(\"gRPC returned already exists error, with message: \",\n+                                    grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::PERMISSION_DENIED:\n+      code = StatusCode::IOError;\n+      message =\n+          util::StringBuilder(\"gRPC returned permission denied error, with message: \",\n+                              grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::Unauthorized);\n+      break;\n+    case grpc::StatusCode::RESOURCE_EXHAUSTED:\n+      code = StatusCode::Invalid;\n+      message =\n+          util::StringBuilder(\"gRPC returned resource exhausted error, with message: \",\n+                              grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::FAILED_PRECONDITION:\n+      code = StatusCode::Invalid;\n+      message =\n+          util::StringBuilder(\"gRPC returned precondition failed error, with message: \",\n+                              grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::ABORTED:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC returned aborted error, with message: \",\n+                                    grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::Internal);\n+      break;\n+    case grpc::StatusCode::OUT_OF_RANGE:\n+      code = StatusCode::Invalid;\n+      message = util::StringBuilder(\"gRPC returned out-of-range error, with message: \",\n+                                    grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::UNIMPLEMENTED:\n+      code = StatusCode::NotImplemented;\n+      message = util::StringBuilder(\"gRPC returned unimplemented error, with message: \",\n+                                    grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::INTERNAL:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC returned internal error, with message: \",\n+                                    grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::Internal);\n+      break;\n+    case grpc::StatusCode::UNAVAILABLE:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC returned unavailable error, with message: \",\n+                                    grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::Unavailable);\n+      break;\n+    case grpc::StatusCode::DATA_LOSS:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC returned data loss error, with message: \",\n+                                    grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::Internal);\n+      break;\n+    case grpc::StatusCode::UNAUTHENTICATED:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC returned unauthenticated error, with message: \",\n+                                    grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::Unauthenticated);\n+      break;\n+    default:\n+      code = StatusCode::IOError;\n+      message =\n+          util::StringBuilder(\"gRPC failed with error code \", grpc_status.error_code(),\n+                              \" and message: \", grpc_status.error_message());\n+      break;\n   }\n+  return Status(code, message, detail);\n }\n \n grpc::Status ToGrpcStatus(const Status& arrow_status) {\n   if (arrow_status.ok()) {\n     return grpc::Status::OK;\n-  } else {\n-    grpc::StatusCode grpc_code = grpc::StatusCode::UNKNOWN;\n-    if (arrow_status.IsNotImplemented()) {\n-      grpc_code = grpc::StatusCode::UNIMPLEMENTED;\n-    } else if (arrow_status.IsInvalid()) {\n-      grpc_code = grpc::StatusCode::INVALID_ARGUMENT;\n+  }\n+\n+  grpc::StatusCode grpc_code = grpc::StatusCode::UNKNOWN;\n+  std::string message = arrow_status.message();\n \n Review comment:\n   are you avoiding using Status.ToString() because it included Arrow's interpretation?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T05:34:25.350+0000",
                    "updated": "2019-07-10T05:34:25.350+0000",
                    "started": "2019-07-10T05:34:25.348+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "274651",
                    "issueId": "13240909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240909/worklog/274918",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on pull request #4840: ARROW-5681: [FlightRPC] Add Flight-specific error APIs\nURL: https://github.com/apache/arrow/pull/4840#discussion_r302127652\n \n \n\n ##########\n File path: cpp/src/arrow/flight/internal.cc\n ##########\n @@ -49,27 +50,153 @@ Status FromGrpcStatus(const grpc::Status& grpc_status) {\n     return Status::OK();\n   }\n \n-  if (grpc_status.error_code() == grpc::StatusCode::UNIMPLEMENTED) {\n-    return Status::NotImplemented(\"gRPC returned unimplemented error, with message: \",\n-                                  grpc_status.error_message());\n-  } else {\n-    return Status::IOError(\"gRPC failed with error code \", grpc_status.error_code(),\n-                           \" and message: \", grpc_status.error_message());\n+  StatusCode code = StatusCode::UnknownError;\n+  std::string message = \"\";\n+  std::shared_ptr<StatusDetail> detail = nullptr;\n+\n+  switch (grpc_status.error_code()) {\n+    case grpc::StatusCode::OK:\n+      return Status::OK();\n+    case grpc::StatusCode::CANCELLED:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC cancelled call, with message: \",\n+                                    grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::Cancelled);\n+      break;\n+    case grpc::StatusCode::INVALID_ARGUMENT:\n+      code = StatusCode::Invalid;\n+      message =\n+          util::StringBuilder(\"gRPC returned invalid argument error, with message: \",\n+                              grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::DEADLINE_EXCEEDED:\n+      code = StatusCode::IOError;\n+      message =\n+          util::StringBuilder(\"gRPC returned deadline exceeded error, with message: \",\n \n Review comment:\n   Thanks, that's much cleaner.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T15:24:18.822+0000",
                    "updated": "2019-07-10T15:24:18.822+0000",
                    "started": "2019-07-10T15:24:18.821+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "274918",
                    "issueId": "13240909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240909/worklog/274919",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on pull request #4840: ARROW-5681: [FlightRPC] Add Flight-specific error APIs\nURL: https://github.com/apache/arrow/pull/4840#discussion_r302127845\n \n \n\n ##########\n File path: cpp/src/arrow/flight/internal.cc\n ##########\n @@ -49,27 +50,153 @@ Status FromGrpcStatus(const grpc::Status& grpc_status) {\n     return Status::OK();\n   }\n \n-  if (grpc_status.error_code() == grpc::StatusCode::UNIMPLEMENTED) {\n-    return Status::NotImplemented(\"gRPC returned unimplemented error, with message: \",\n-                                  grpc_status.error_message());\n-  } else {\n-    return Status::IOError(\"gRPC failed with error code \", grpc_status.error_code(),\n-                           \" and message: \", grpc_status.error_message());\n+  StatusCode code = StatusCode::UnknownError;\n+  std::string message = \"\";\n+  std::shared_ptr<StatusDetail> detail = nullptr;\n+\n+  switch (grpc_status.error_code()) {\n+    case grpc::StatusCode::OK:\n+      return Status::OK();\n+    case grpc::StatusCode::CANCELLED:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC cancelled call, with message: \",\n+                                    grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::Cancelled);\n+      break;\n+    case grpc::StatusCode::INVALID_ARGUMENT:\n+      code = StatusCode::Invalid;\n+      message =\n+          util::StringBuilder(\"gRPC returned invalid argument error, with message: \",\n+                              grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::DEADLINE_EXCEEDED:\n+      code = StatusCode::IOError;\n+      message =\n+          util::StringBuilder(\"gRPC returned deadline exceeded error, with message: \",\n+                              grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::TimedOut);\n+      break;\n+    case grpc::StatusCode::NOT_FOUND:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC returned not found error, with message: \",\n+                                    grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::ALREADY_EXISTS:\n+      code = StatusCode::Invalid;\n+      message = util::StringBuilder(\"gRPC returned already exists error, with message: \",\n+                                    grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::PERMISSION_DENIED:\n+      code = StatusCode::IOError;\n+      message =\n+          util::StringBuilder(\"gRPC returned permission denied error, with message: \",\n+                              grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::Unauthorized);\n+      break;\n+    case grpc::StatusCode::RESOURCE_EXHAUSTED:\n+      code = StatusCode::Invalid;\n+      message =\n+          util::StringBuilder(\"gRPC returned resource exhausted error, with message: \",\n+                              grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::FAILED_PRECONDITION:\n+      code = StatusCode::Invalid;\n+      message =\n+          util::StringBuilder(\"gRPC returned precondition failed error, with message: \",\n+                              grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::ABORTED:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC returned aborted error, with message: \",\n+                                    grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::Internal);\n+      break;\n+    case grpc::StatusCode::OUT_OF_RANGE:\n+      code = StatusCode::Invalid;\n+      message = util::StringBuilder(\"gRPC returned out-of-range error, with message: \",\n+                                    grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::UNIMPLEMENTED:\n+      code = StatusCode::NotImplemented;\n+      message = util::StringBuilder(\"gRPC returned unimplemented error, with message: \",\n+                                    grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::INTERNAL:\n+      code = StatusCode::IOError;\n \n Review comment:\n   Agreed, changed. I also added a missing branch for gRPC's UNKNOWN.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T15:24:32.779+0000",
                    "updated": "2019-07-10T15:24:32.779+0000",
                    "started": "2019-07-10T15:24:32.779+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "274919",
                    "issueId": "13240909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240909/worklog/274920",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on pull request #4840: ARROW-5681: [FlightRPC] Add Flight-specific error APIs\nURL: https://github.com/apache/arrow/pull/4840#discussion_r302127952\n \n \n\n ##########\n File path: cpp/src/arrow/flight/internal.cc\n ##########\n @@ -49,27 +50,153 @@ Status FromGrpcStatus(const grpc::Status& grpc_status) {\n     return Status::OK();\n   }\n \n-  if (grpc_status.error_code() == grpc::StatusCode::UNIMPLEMENTED) {\n-    return Status::NotImplemented(\"gRPC returned unimplemented error, with message: \",\n-                                  grpc_status.error_message());\n-  } else {\n-    return Status::IOError(\"gRPC failed with error code \", grpc_status.error_code(),\n-                           \" and message: \", grpc_status.error_message());\n+  StatusCode code = StatusCode::UnknownError;\n+  std::string message = \"\";\n+  std::shared_ptr<StatusDetail> detail = nullptr;\n+\n+  switch (grpc_status.error_code()) {\n+    case grpc::StatusCode::OK:\n+      return Status::OK();\n+    case grpc::StatusCode::CANCELLED:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC cancelled call, with message: \",\n+                                    grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::Cancelled);\n+      break;\n+    case grpc::StatusCode::INVALID_ARGUMENT:\n+      code = StatusCode::Invalid;\n+      message =\n+          util::StringBuilder(\"gRPC returned invalid argument error, with message: \",\n+                              grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::DEADLINE_EXCEEDED:\n+      code = StatusCode::IOError;\n+      message =\n+          util::StringBuilder(\"gRPC returned deadline exceeded error, with message: \",\n+                              grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::TimedOut);\n+      break;\n+    case grpc::StatusCode::NOT_FOUND:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC returned not found error, with message: \",\n+                                    grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::ALREADY_EXISTS:\n+      code = StatusCode::Invalid;\n+      message = util::StringBuilder(\"gRPC returned already exists error, with message: \",\n+                                    grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::PERMISSION_DENIED:\n+      code = StatusCode::IOError;\n+      message =\n+          util::StringBuilder(\"gRPC returned permission denied error, with message: \",\n+                              grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::Unauthorized);\n+      break;\n+    case grpc::StatusCode::RESOURCE_EXHAUSTED:\n+      code = StatusCode::Invalid;\n+      message =\n+          util::StringBuilder(\"gRPC returned resource exhausted error, with message: \",\n+                              grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::FAILED_PRECONDITION:\n+      code = StatusCode::Invalid;\n+      message =\n+          util::StringBuilder(\"gRPC returned precondition failed error, with message: \",\n+                              grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::ABORTED:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC returned aborted error, with message: \",\n+                                    grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::Internal);\n+      break;\n+    case grpc::StatusCode::OUT_OF_RANGE:\n+      code = StatusCode::Invalid;\n+      message = util::StringBuilder(\"gRPC returned out-of-range error, with message: \",\n+                                    grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::UNIMPLEMENTED:\n+      code = StatusCode::NotImplemented;\n+      message = util::StringBuilder(\"gRPC returned unimplemented error, with message: \",\n+                                    grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::INTERNAL:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC returned internal error, with message: \",\n+                                    grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::Internal);\n+      break;\n+    case grpc::StatusCode::UNAVAILABLE:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC returned unavailable error, with message: \",\n+                                    grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::Unavailable);\n+      break;\n+    case grpc::StatusCode::DATA_LOSS:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC returned data loss error, with message: \",\n+                                    grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::Internal);\n+      break;\n+    case grpc::StatusCode::UNAUTHENTICATED:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC returned unauthenticated error, with message: \",\n+                                    grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::Unauthenticated);\n+      break;\n+    default:\n+      code = StatusCode::IOError;\n+      message =\n+          util::StringBuilder(\"gRPC failed with error code \", grpc_status.error_code(),\n+                              \" and message: \", grpc_status.error_message());\n+      break;\n   }\n+  return Status(code, message, detail);\n }\n \n grpc::Status ToGrpcStatus(const Status& arrow_status) {\n   if (arrow_status.ok()) {\n     return grpc::Status::OK;\n-  } else {\n-    grpc::StatusCode grpc_code = grpc::StatusCode::UNKNOWN;\n-    if (arrow_status.IsNotImplemented()) {\n-      grpc_code = grpc::StatusCode::UNIMPLEMENTED;\n-    } else if (arrow_status.IsInvalid()) {\n-      grpc_code = grpc::StatusCode::INVALID_ARGUMENT;\n+  }\n+\n+  grpc::StatusCode grpc_code = grpc::StatusCode::UNKNOWN;\n+  std::string message = arrow_status.message();\n \n Review comment:\n   Yes, otherwise the error gets a bit repetitive.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T15:24:42.968+0000",
                    "updated": "2019-07-10T15:24:42.968+0000",
                    "started": "2019-07-10T15:24:42.967+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "274920",
                    "issueId": "13240909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240909/worklog/274921",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on pull request #4840: ARROW-5681: [FlightRPC] Add Flight-specific error APIs\nURL: https://github.com/apache/arrow/pull/4840#discussion_r302128213\n \n \n\n ##########\n File path: cpp/src/arrow/flight/internal.cc\n ##########\n @@ -49,27 +50,153 @@ Status FromGrpcStatus(const grpc::Status& grpc_status) {\n     return Status::OK();\n   }\n \n-  if (grpc_status.error_code() == grpc::StatusCode::UNIMPLEMENTED) {\n-    return Status::NotImplemented(\"gRPC returned unimplemented error, with message: \",\n-                                  grpc_status.error_message());\n-  } else {\n-    return Status::IOError(\"gRPC failed with error code \", grpc_status.error_code(),\n-                           \" and message: \", grpc_status.error_message());\n+  StatusCode code = StatusCode::UnknownError;\n+  std::string message = \"\";\n+  std::shared_ptr<StatusDetail> detail = nullptr;\n+\n+  switch (grpc_status.error_code()) {\n+    case grpc::StatusCode::OK:\n+      return Status::OK();\n+    case grpc::StatusCode::CANCELLED:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC cancelled call, with message: \",\n+                                    grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::Cancelled);\n+      break;\n+    case grpc::StatusCode::INVALID_ARGUMENT:\n+      code = StatusCode::Invalid;\n+      message =\n+          util::StringBuilder(\"gRPC returned invalid argument error, with message: \",\n+                              grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::DEADLINE_EXCEEDED:\n+      code = StatusCode::IOError;\n+      message =\n+          util::StringBuilder(\"gRPC returned deadline exceeded error, with message: \",\n+                              grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::TimedOut);\n+      break;\n+    case grpc::StatusCode::NOT_FOUND:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC returned not found error, with message: \",\n+                                    grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::ALREADY_EXISTS:\n+      code = StatusCode::Invalid;\n \n Review comment:\n   Thanks for the pointer, I've changed that.\r\n   \r\n   Do you think NOT_FOUND should also be promoted to the general status codes, as the counterpart?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T15:25:13.579+0000",
                    "updated": "2019-07-10T15:25:13.579+0000",
                    "started": "2019-07-10T15:25:13.578+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "274921",
                    "issueId": "13240909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240909/worklog/274927",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4840: ARROW-5681: [FlightRPC] Add Flight-specific error APIs\nURL: https://github.com/apache/arrow/pull/4840#discussion_r302146662\n \n \n\n ##########\n File path: cpp/src/arrow/flight/internal.cc\n ##########\n @@ -49,27 +50,153 @@ Status FromGrpcStatus(const grpc::Status& grpc_status) {\n     return Status::OK();\n   }\n \n-  if (grpc_status.error_code() == grpc::StatusCode::UNIMPLEMENTED) {\n-    return Status::NotImplemented(\"gRPC returned unimplemented error, with message: \",\n-                                  grpc_status.error_message());\n-  } else {\n-    return Status::IOError(\"gRPC failed with error code \", grpc_status.error_code(),\n-                           \" and message: \", grpc_status.error_message());\n+  StatusCode code = StatusCode::UnknownError;\n+  std::string message = \"\";\n+  std::shared_ptr<StatusDetail> detail = nullptr;\n+\n+  switch (grpc_status.error_code()) {\n+    case grpc::StatusCode::OK:\n+      return Status::OK();\n+    case grpc::StatusCode::CANCELLED:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC cancelled call, with message: \",\n+                                    grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::Cancelled);\n+      break;\n+    case grpc::StatusCode::INVALID_ARGUMENT:\n+      code = StatusCode::Invalid;\n+      message =\n+          util::StringBuilder(\"gRPC returned invalid argument error, with message: \",\n+                              grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::DEADLINE_EXCEEDED:\n+      code = StatusCode::IOError;\n+      message =\n+          util::StringBuilder(\"gRPC returned deadline exceeded error, with message: \",\n+                              grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::TimedOut);\n+      break;\n+    case grpc::StatusCode::NOT_FOUND:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC returned not found error, with message: \",\n+                                    grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::ALREADY_EXISTS:\n+      code = StatusCode::Invalid;\n \n Review comment:\n   I think KeyError might be the equivalent.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T15:59:14.110+0000",
                    "updated": "2019-07-10T15:59:14.110+0000",
                    "started": "2019-07-10T15:59:14.109+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "274927",
                    "issueId": "13240909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240909/worklog/274963",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on pull request #4840: ARROW-5681: [FlightRPC] Add Flight-specific error APIs\nURL: https://github.com/apache/arrow/pull/4840#discussion_r302179163\n \n \n\n ##########\n File path: cpp/src/arrow/flight/internal.cc\n ##########\n @@ -49,27 +50,153 @@ Status FromGrpcStatus(const grpc::Status& grpc_status) {\n     return Status::OK();\n   }\n \n-  if (grpc_status.error_code() == grpc::StatusCode::UNIMPLEMENTED) {\n-    return Status::NotImplemented(\"gRPC returned unimplemented error, with message: \",\n-                                  grpc_status.error_message());\n-  } else {\n-    return Status::IOError(\"gRPC failed with error code \", grpc_status.error_code(),\n-                           \" and message: \", grpc_status.error_message());\n+  StatusCode code = StatusCode::UnknownError;\n+  std::string message = \"\";\n+  std::shared_ptr<StatusDetail> detail = nullptr;\n+\n+  switch (grpc_status.error_code()) {\n+    case grpc::StatusCode::OK:\n+      return Status::OK();\n+    case grpc::StatusCode::CANCELLED:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC cancelled call, with message: \",\n+                                    grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::Cancelled);\n+      break;\n+    case grpc::StatusCode::INVALID_ARGUMENT:\n+      code = StatusCode::Invalid;\n+      message =\n+          util::StringBuilder(\"gRPC returned invalid argument error, with message: \",\n+                              grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::DEADLINE_EXCEEDED:\n+      code = StatusCode::IOError;\n+      message =\n+          util::StringBuilder(\"gRPC returned deadline exceeded error, with message: \",\n+                              grpc_status.error_message());\n+      detail = std::make_shared<FlightStatusDetail>(FlightStatusCode::TimedOut);\n+      break;\n+    case grpc::StatusCode::NOT_FOUND:\n+      code = StatusCode::IOError;\n+      message = util::StringBuilder(\"gRPC returned not found error, with message: \",\n+                                    grpc_status.error_message());\n+      break;\n+    case grpc::StatusCode::ALREADY_EXISTS:\n+      code = StatusCode::Invalid;\n \n Review comment:\n   Ah I see, thanks - updated.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T17:15:08.258+0000",
                    "updated": "2019-07-10T17:15:08.258+0000",
                    "started": "2019-07-10T17:15:08.257+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "274963",
                    "issueId": "13240909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240909/worklog/275040",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4840: ARROW-5681: [FlightRPC] Add Flight-specific error APIs\nURL: https://github.com/apache/arrow/pull/4840#issuecomment-509858592\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4840?src=pr&el=h1) Report\n   > Merging [#4840](https://codecov.io/gh/apache/arrow/pull/4840?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/167bad1a4db9f4aa597d90d6c4a5f8bcd41dccbf?src=pr&el=desc) will **increase** coverage by `1.58%`.\n   > The diff coverage is `58.66%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4840/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4840?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4840      +/-   ##\n   ==========================================\n   + Coverage   87.43%   89.01%   +1.58%     \n   ==========================================\n     Files         997      720     -277     \n     Lines      139841   100448   -39393     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       122273    89416   -32857     \n   + Misses      17206    11032    -6174     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4840?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [python/pyarrow/flight.py](https://codecov.io/gh/apache/arrow/pull/4840/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvZmxpZ2h0LnB5) | `80% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/python/flight.h](https://codecov.io/gh/apache/arrow/pull/4840/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vZmxpZ2h0Lmg=) | `77.77% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/status.h](https://codecov.io/gh/apache/arrow/pull/4840/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9zdGF0dXMuaA==) | `93.54% <0%> (-2.06%)` | :arrow_down: |\n   | [cpp/src/arrow/flight/flight-test.cc](https://codecov.io/gh/apache/arrow/pull/4840/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvZmxpZ2h0LXRlc3QuY2M=) | `99.41% <100%> (+0.01%)` | :arrow_up: |\n   | [cpp/src/arrow/flight/types.h](https://codecov.io/gh/apache/arrow/pull/4840/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvdHlwZXMuaA==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/flight/test-util.cc](https://codecov.io/gh/apache/arrow/pull/4840/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvdGVzdC11dGlsLmNj) | `89.83% <33.33%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/\\_flight.pyx](https://codecov.io/gh/apache/arrow/pull/4840/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvX2ZsaWdodC5weXg=) | `48.53% <44.93%> (-1.17%)` | :arrow_down: |\n   | [python/pyarrow/tests/test\\_flight.py](https://codecov.io/gh/apache/arrow/pull/4840/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9mbGlnaHQucHk=) | `69.46% <50%> (-0.82%)` | :arrow_down: |\n   | [cpp/src/arrow/flight/internal.cc](https://codecov.io/gh/apache/arrow/pull/4840/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvaW50ZXJuYWwuY2M=) | `77.6% <61.62%> (-13.71%)` | :arrow_down: |\n   | [cpp/src/arrow/flight/types.cc](https://codecov.io/gh/apache/arrow/pull/4840/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvdHlwZXMuY2M=) | `89.07% <77.77%> (-3.32%)` | :arrow_down: |\n   | ... and [282 more](https://codecov.io/gh/apache/arrow/pull/4840/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4840?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4840?src=pr&el=footer). Last update [167bad1...f49c82b](https://codecov.io/gh/apache/arrow/pull/4840?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T20:06:01.308+0000",
                    "updated": "2019-07-10T20:06:01.308+0000",
                    "started": "2019-07-10T20:06:01.307+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275040",
                    "issueId": "13240909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240909/worklog/275077",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on issue #4840: ARROW-5681: [FlightRPC] Add Flight-specific error APIs\nURL: https://github.com/apache/arrow/pull/4840#issuecomment-510245998\n \n \n   Rebased/fixed conflicts.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T21:59:44.063+0000",
                    "updated": "2019-07-10T21:59:44.063+0000",
                    "started": "2019-07-10T21:59:44.063+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275077",
                    "issueId": "13240909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240909/worklog/275684",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4840: ARROW-5681: [FlightRPC] Add Flight-specific error APIs\nURL: https://github.com/apache/arrow/pull/4840#discussion_r302851468\n \n \n\n ##########\n File path: cpp/src/arrow/flight/internal.cc\n ##########\n @@ -49,27 +50,117 @@ Status FromGrpcStatus(const grpc::Status& grpc_status) {\n     return Status::OK();\n   }\n \n-  if (grpc_status.error_code() == grpc::StatusCode::UNIMPLEMENTED) {\n-    return Status::NotImplemented(\"gRPC returned unimplemented error, with message: \",\n+  switch (grpc_status.error_code()) {\n+    case grpc::StatusCode::OK:\n+      return Status::OK();\n+    case grpc::StatusCode::CANCELLED:\n+      return Status::IOError(\"gRPC cancelled call, with message: \",\n+                             grpc_status.error_message())\n+          .WithDetail(std::make_shared<FlightStatusDetail>(FlightStatusCode::Cancelled));\n+    case grpc::StatusCode::UNKNOWN:\n+      return Status::UnknownError(\"gRPC returned unknown error, with message: \",\n                                   grpc_status.error_message());\n-  } else {\n-    return Status::IOError(\"gRPC failed with error code \", grpc_status.error_code(),\n-                           \" and message: \", grpc_status.error_message());\n+    case grpc::StatusCode::INVALID_ARGUMENT:\n+      return Status::Invalid(\"gRPC returned invalid argument error, with message: \",\n+                             grpc_status.error_message());\n+    case grpc::StatusCode::DEADLINE_EXCEEDED:\n+      return Status::IOError(\"gRPC returned deadline exceeded error, with message: \",\n+                             grpc_status.error_message())\n+          .WithDetail(std::make_shared<FlightStatusDetail>(FlightStatusCode::TimedOut));\n+    case grpc::StatusCode::NOT_FOUND:\n+      return Status::KeyError(\"gRPC returned not found error, with message: \",\n+                              grpc_status.error_message());\n+    case grpc::StatusCode::ALREADY_EXISTS:\n+      return Status::AlreadyExists(\"gRPC returned already exists error, with message: \",\n+                                   grpc_status.error_message());\n+    case grpc::StatusCode::PERMISSION_DENIED:\n+      return Status::IOError(\"gRPC returned permission denied error, with message: \",\n+                             grpc_status.error_message())\n+          .WithDetail(\n+              std::make_shared<FlightStatusDetail>(FlightStatusCode::Unauthorized));\n+    case grpc::StatusCode::RESOURCE_EXHAUSTED:\n+      return Status::Invalid(\"gRPC returned resource exhausted error, with message: \",\n+                             grpc_status.error_message());\n+    case grpc::StatusCode::FAILED_PRECONDITION:\n \n Review comment:\n   FAILED_PRECONDITION, ABORTED, and RESOURCE_EXHAUSTED  errors might be good candidates to make top-level.  We should probably discuss on the mailing list.  But they have slightly different semantics and might be useful to build more general purpose machinery around handling them\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T07:01:40.570+0000",
                    "updated": "2019-07-12T07:01:40.570+0000",
                    "started": "2019-07-12T07:01:40.569+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275684",
                    "issueId": "13240909"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240909/worklog/275685",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #4840: ARROW-5681: [FlightRPC] Add Flight-specific error APIs\nURL: https://github.com/apache/arrow/pull/4840#issuecomment-510772423\n \n \n   @lihalite this is kind of a big change.  If no one gets to it sooner I can try to have a more thorough review done sometime over the weekend but I have other competing priorities at the moment.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T07:02:28.376+0000",
                    "updated": "2019-07-12T07:02:28.376+0000",
                    "started": "2019-07-12T07:02:28.376+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275685",
                    "issueId": "13240909"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 28200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2e1ce4f8[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@297c16e[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@ec17285[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@32615e82[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3e7fc342[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@62bdc7bf[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@67edd437[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5f401306[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1f65be7f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@13e91213[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1a2c2035[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@452bd855[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 28200,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Jul 25 19:08:59 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-07-25T19:08:59.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5681/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-06-21T16:22:43.000+0000",
        "updated": "2019-08-01T22:39:39.000+0000",
        "timeoriginalestimate": null,
        "description": "Instead of requiring users to catch/throw StatusRuntimeException in Flight services/clients, and thereby leaking gRPC details, we should provide our own set of exceptions and status codes. This way, services can provide proper error messages and error codes to clients, which can catch the exception and respond properly.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "7h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 28200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[FlightRPC] Wrap gRPC exceptions/statuses",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13240909/comment/16893069",
                    "id": "16893069",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 4840\n[https://github.com/apache/arrow/pull/4840]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-07-25T19:08:59.087+0000",
                    "updated": "2019-07-25T19:08:59.087+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z03zgo:",
        "customfield_12314139": null
    }
}