{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13263835",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263835",
    "key": "ARROW-6965",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "dataset",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12577607",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12577607",
                "type": {
                    "id": "12310060",
                    "name": "Container",
                    "inward": "Is contained by",
                    "outward": "contains",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310060"
                },
                "outwardIssue": {
                    "id": "13266402",
                    "key": "ARROW-7069",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13266402",
                    "fields": {
                        "summary": "[C++][Dataset] Replace ConstantPartitionScheme with PrefixDictionaryPartitionScheme",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 28800,
            "total": 28800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 28800,
            "total": 28800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6965/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 55,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263835/worklog/352984",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5950: ARROW-6965: [C++][Dataset] Optionally expose partition keys as columns\nURL: https://github.com/apache/arrow/pull/5950\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-03T21:14:22.824+0000",
                    "updated": "2019-12-03T21:14:22.824+0000",
                    "started": "2019-12-03T21:14:22.824+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "352984",
                    "issueId": "13263835"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263835/worklog/352986",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #5950: ARROW-6965: [C++][Dataset] Optionally expose partition keys as columns\nURL: https://github.com/apache/arrow/pull/5950#issuecomment-561360243\n \n \n   https://issues.apache.org/jira/browse/ARROW-6965\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-03T21:15:36.415+0000",
                    "updated": "2019-12-03T21:15:36.415+0000",
                    "started": "2019-12-03T21:15:36.415+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "352986",
                    "issueId": "13263835"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263835/worklog/352991",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on issue #5950: ARROW-6965: [C++][Dataset] Optionally expose partition keys as columns\nURL: https://github.com/apache/arrow/pull/5950#issuecomment-561361905\n \n \n   Could you remove L34 and L42 (and the preceding commas) from https://github.com/apache/arrow/blob/master/r/tests/testthat/test-dataset.R? Then the test at https://github.com/apache/arrow/blob/master/r/tests/testthat/test-dataset.R#L76 will exercise (parts of) this new code.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-03T21:20:07.358+0000",
                    "updated": "2019-12-03T21:20:07.358+0000",
                    "started": "2019-12-03T21:20:07.358+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "352991",
                    "issueId": "13263835"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263835/worklog/353492",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5950: ARROW-6965: [C++][Dataset] Optionally expose partition keys as columns\nURL: https://github.com/apache/arrow/pull/5950#discussion_r353775435\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/dataset.h\n ##########\n @@ -52,12 +52,21 @@ class ARROW_DS_EXPORT DataFragment {\n \n   virtual ~DataFragment() = default;\n \n+  /// \\brief An expression which evaluates to true for all data viewed by this\n+  /// DataFragment. May be null, which indicates no information is available.\n \n Review comment:\n   It ain't null, it would be `scalar(true)`. Maybe we should opt for optional instead, as middle ground between no information and not nullptr.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-04T14:30:06.911+0000",
                    "updated": "2019-12-04T14:30:06.911+0000",
                    "started": "2019-12-04T14:30:06.911+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "353492",
                    "issueId": "13263835"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263835/worklog/353495",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5950: ARROW-6965: [C++][Dataset] Optionally expose partition keys as columns\nURL: https://github.com/apache/arrow/pull/5950#discussion_r353776184\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/dataset_internal.h\n ##########\n @@ -52,53 +53,59 @@ class RecordBatchProjector {\n  public:\n   /// A column required by the given schema but absent from a record batch will be added\n   /// to the projected record batch with all its slots null.\n-  RecordBatchProjector(MemoryPool* pool, std::shared_ptr<Schema> to)\n-      : pool_(pool),\n-        to_(std::move(to)),\n+  explicit RecordBatchProjector(std::shared_ptr<Schema> to)\n+      : to_(std::move(to)),\n         missing_columns_(to_->num_fields(), nullptr),\n         column_indices_(to_->num_fields(), kNoMatch),\n         scalars_(to_->num_fields(), nullptr) {}\n \n-  /// A column required by the given schema but absent from a record batch will be added\n-  /// to the projected record batch with all its slots equal to the corresponding entry in\n-  /// scalars or null if the correspondign entry in scalars is nullptr.\n-  RecordBatchProjector(MemoryPool* pool, std::shared_ptr<Schema> to,\n-                       std::vector<std::shared_ptr<Scalar>> scalars)\n-      : pool_(pool),\n-        to_(std::move(to)),\n-        missing_columns_(to_->num_fields(), nullptr),\n-        column_indices_(to_->num_fields(), kNoMatch),\n-        scalars_(std::move(scalars)) {\n-    DCHECK_EQ(scalars_.size(), missing_columns_.size());\n+  /// If the named field is absent from a record batch it will be added to the projected\n \n Review comment:\n   I don't agree with this premise. If it ain't present, you go the wrong `to` schema.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-04T14:31:24.457+0000",
                    "updated": "2019-12-04T14:31:24.457+0000",
                    "started": "2019-12-04T14:31:24.456+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "353495",
                    "issueId": "13263835"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263835/worklog/353496",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5950: ARROW-6965: [C++][Dataset] Optionally expose partition keys as columns\nURL: https://github.com/apache/arrow/pull/5950#discussion_r353776184\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/dataset_internal.h\n ##########\n @@ -52,53 +53,59 @@ class RecordBatchProjector {\n  public:\n   /// A column required by the given schema but absent from a record batch will be added\n   /// to the projected record batch with all its slots null.\n-  RecordBatchProjector(MemoryPool* pool, std::shared_ptr<Schema> to)\n-      : pool_(pool),\n-        to_(std::move(to)),\n+  explicit RecordBatchProjector(std::shared_ptr<Schema> to)\n+      : to_(std::move(to)),\n         missing_columns_(to_->num_fields(), nullptr),\n         column_indices_(to_->num_fields(), kNoMatch),\n         scalars_(to_->num_fields(), nullptr) {}\n \n-  /// A column required by the given schema but absent from a record batch will be added\n-  /// to the projected record batch with all its slots equal to the corresponding entry in\n-  /// scalars or null if the correspondign entry in scalars is nullptr.\n-  RecordBatchProjector(MemoryPool* pool, std::shared_ptr<Schema> to,\n-                       std::vector<std::shared_ptr<Scalar>> scalars)\n-      : pool_(pool),\n-        to_(std::move(to)),\n-        missing_columns_(to_->num_fields(), nullptr),\n-        column_indices_(to_->num_fields(), kNoMatch),\n-        scalars_(std::move(scalars)) {\n-    DCHECK_EQ(scalars_.size(), missing_columns_.size());\n+  /// If the named field is absent from a record batch it will be added to the projected\n \n Review comment:\n   I don't agree with this premise. If it ain't present, you got the wrong `to` schema.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-04T14:31:38.266+0000",
                    "updated": "2019-12-04T14:31:38.266+0000",
                    "started": "2019-12-04T14:31:38.266+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "353496",
                    "issueId": "13263835"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263835/worklog/353521",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5950: ARROW-6965: [C++][Dataset] Optionally expose partition keys as columns\nURL: https://github.com/apache/arrow/pull/5950#discussion_r353810231\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/dataset.h\n ##########\n @@ -52,12 +52,21 @@ class ARROW_DS_EXPORT DataFragment {\n \n   virtual ~DataFragment() = default;\n \n+  /// \\brief An expression which evaluates to true for all data viewed by this\n+  /// DataFragment. May be null, which indicates no information is available.\n \n Review comment:\n   I'll correct the comment\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-04T15:27:54.605+0000",
                    "updated": "2019-12-04T15:27:54.605+0000",
                    "started": "2019-12-04T15:27:54.605+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "353521",
                    "issueId": "13263835"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263835/worklog/353522",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5950: ARROW-6965: [C++][Dataset] Optionally expose partition keys as columns\nURL: https://github.com/apache/arrow/pull/5950#discussion_r353810231\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/dataset.h\n ##########\n @@ -52,12 +52,21 @@ class ARROW_DS_EXPORT DataFragment {\n \n   virtual ~DataFragment() = default;\n \n+  /// \\brief An expression which evaluates to true for all data viewed by this\n+  /// DataFragment. May be null, which indicates no information is available.\n \n Review comment:\n   I'll correct the comment to specify that `scalar(true)` will indicate no information available\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-04T15:28:18.543+0000",
                    "updated": "2019-12-04T15:28:18.543+0000",
                    "started": "2019-12-04T15:28:18.542+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "353522",
                    "issueId": "13263835"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263835/worklog/353524",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5950: ARROW-6965: [C++][Dataset] Optionally expose partition keys as columns\nURL: https://github.com/apache/arrow/pull/5950#discussion_r353811872\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/dataset_internal.h\n ##########\n @@ -52,53 +53,59 @@ class RecordBatchProjector {\n  public:\n   /// A column required by the given schema but absent from a record batch will be added\n   /// to the projected record batch with all its slots null.\n-  RecordBatchProjector(MemoryPool* pool, std::shared_ptr<Schema> to)\n-      : pool_(pool),\n-        to_(std::move(to)),\n+  explicit RecordBatchProjector(std::shared_ptr<Schema> to)\n+      : to_(std::move(to)),\n         missing_columns_(to_->num_fields(), nullptr),\n         column_indices_(to_->num_fields(), kNoMatch),\n         scalars_(to_->num_fields(), nullptr) {}\n \n-  /// A column required by the given schema but absent from a record batch will be added\n-  /// to the projected record batch with all its slots equal to the corresponding entry in\n-  /// scalars or null if the correspondign entry in scalars is nullptr.\n-  RecordBatchProjector(MemoryPool* pool, std::shared_ptr<Schema> to,\n-                       std::vector<std::shared_ptr<Scalar>> scalars)\n-      : pool_(pool),\n-        to_(std::move(to)),\n-        missing_columns_(to_->num_fields(), nullptr),\n-        column_indices_(to_->num_fields(), kNoMatch),\n-        scalars_(std::move(scalars)) {\n-    DCHECK_EQ(scalars_.size(), missing_columns_.size());\n+  /// If the named field is absent from a record batch it will be added to the projected\n \n Review comment:\n   You're saying that if the `to` schema has a field \"alpha\" but a record batch to be projected does not include a corresponding column then that should be an error?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-04T15:30:32.293+0000",
                    "updated": "2019-12-04T15:30:32.293+0000",
                    "started": "2019-12-04T15:30:32.292+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "353524",
                    "issueId": "13263835"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263835/worklog/353556",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5950: ARROW-6965: [C++][Dataset] Optionally expose partition keys as columns\nURL: https://github.com/apache/arrow/pull/5950#discussion_r353775435\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/dataset.h\n ##########\n @@ -52,12 +52,21 @@ class ARROW_DS_EXPORT DataFragment {\n \n   virtual ~DataFragment() = default;\n \n+  /// \\brief An expression which evaluates to true for all data viewed by this\n+  /// DataFragment. May be null, which indicates no information is available.\n \n Review comment:\n   It ain't null, it would be `scalar(true)`. Maybe we should opt for optional instead, as middle ground between no information and not nullptr.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-04T16:21:37.440+0000",
                    "updated": "2019-12-04T16:21:37.440+0000",
                    "started": "2019-12-04T16:21:37.440+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "353556",
                    "issueId": "13263835"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263835/worklog/353557",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5950: ARROW-6965: [C++][Dataset] Optionally expose partition keys as columns\nURL: https://github.com/apache/arrow/pull/5950#discussion_r353810231\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/dataset.h\n ##########\n @@ -52,12 +52,21 @@ class ARROW_DS_EXPORT DataFragment {\n \n   virtual ~DataFragment() = default;\n \n+  /// \\brief An expression which evaluates to true for all data viewed by this\n+  /// DataFragment. May be null, which indicates no information is available.\n \n Review comment:\n   I'll correct the comment to specify that `scalar(true)` will indicate no information available\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-04T16:21:40.220+0000",
                    "updated": "2019-12-04T16:21:40.220+0000",
                    "started": "2019-12-04T16:21:40.220+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "353557",
                    "issueId": "13263835"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263835/worklog/354228",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5950: ARROW-6965: [C++][Dataset] Optionally expose partition keys as columns\nURL: https://github.com/apache/arrow/pull/5950#discussion_r354275403\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/discovery.cc\n ##########\n @@ -100,42 +105,38 @@ Result<DataSourceDiscoveryPtr> FileSystemDataSourceDiscovery::Make(\n               std::move(options));\n }\n \n-static inline Result<std::shared_ptr<Schema>> InspectSchema(\n-    fs::FileSystem* fs, const std::vector<fs::FileStats> stats,\n-    const FileFormatPtr& format) {\n+Result<std::shared_ptr<Schema>> FileSystemDataSourceDiscovery::Inspect() {\n   std::vector<std::shared_ptr<Schema>> schemas;\n \n-  for (const auto& f : stats) {\n+  for (const auto& f : files_) {\n     if (!f.IsFile()) continue;\n \n-    ARROW_ASSIGN_OR_RAISE(auto schema, format->Inspect(FileSource(f.path(), fs)));\n+    ARROW_ASSIGN_OR_RAISE(auto schema, format_->Inspect(FileSource(f.path(), fs_.get())));\n     schemas.push_back(schema);\n   }\n \n-  if (schemas.size() > 0) {\n-    // TODO merge schemas.\n-    return schemas[0];\n+  if (schemas.empty()) {\n+    // If there are no files, return the partition scheme's schema.\n+    return partition_scheme_->schema();\n   }\n \n-  // If there is no files, return an empty schema.\n-  return std::shared_ptr<Schema>(nullptr);\n-}\n+  // TODO merge schemas.\n+  auto out_schema = arrow::schema(schemas[0]->fields());\n \n Review comment:\n   Whoops. For now I'll ensure that at least the metadata of schemas [0] is preserved\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-05T12:10:15.611+0000",
                    "updated": "2019-12-05T12:10:15.611+0000",
                    "started": "2019-12-05T12:10:15.610+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "354228",
                    "issueId": "13263835"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263835/worklog/354239",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #5950: ARROW-6965: [C++][Dataset] Optionally expose partition keys as columns\nURL: https://github.com/apache/arrow/pull/5950#discussion_r354279855\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/dataset.cc\n ##########\n @@ -29,16 +29,13 @@\n namespace arrow {\n namespace dataset {\n \n-DataFragment::DataFragment() : scan_options_(ScanOptions::Defaults()) {}\n+DataFragment::DataFragment(ScanOptionsPtr scan_options)\n+    : scan_options_(std::move(scan_options)), partition_expression_(scalar(true)) {}\n \n SimpleDataFragment::SimpleDataFragment(\n     std::vector<std::shared_ptr<RecordBatch>> record_batches, ScanOptionsPtr scan_options)\n     : DataFragment(std::move(scan_options)), record_batches_(std::move(record_batches)) {}\n \n-SimpleDataFragment::SimpleDataFragment(\n-    std::vector<std::shared_ptr<RecordBatch>> record_batches)\n-    : SimpleDataFragment(std::move(record_batches), ScanOptions::Defaults()) {}\n \n Review comment:\n   To understand this change: this constructor was removed because now ScanOptions always needs to have a schema?\r\n   \r\n   (wondering because it makes using the python bindings a bit more complex. Eg if you have a `FileSystemDataSource`, and you want to get the fragments of this source, you now need to specify a ScanOptions with a schema, while before this was not needed).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-05T12:18:33.837+0000",
                    "updated": "2019-12-05T12:18:33.837+0000",
                    "started": "2019-12-05T12:18:33.836+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "354239",
                    "issueId": "13263835"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263835/worklog/354270",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5950: ARROW-6965: [C++][Dataset] Optionally expose partition keys as columns\nURL: https://github.com/apache/arrow/pull/5950#discussion_r354290315\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/dataset.cc\n ##########\n @@ -29,16 +29,13 @@\n namespace arrow {\n namespace dataset {\n \n-DataFragment::DataFragment() : scan_options_(ScanOptions::Defaults()) {}\n+DataFragment::DataFragment(ScanOptionsPtr scan_options)\n+    : scan_options_(std::move(scan_options)), partition_expression_(scalar(true)) {}\n \n SimpleDataFragment::SimpleDataFragment(\n     std::vector<std::shared_ptr<RecordBatch>> record_batches, ScanOptionsPtr scan_options)\n     : DataFragment(std::move(scan_options)), record_batches_(std::move(record_batches)) {}\n \n-SimpleDataFragment::SimpleDataFragment(\n-    std::vector<std::shared_ptr<RecordBatch>> record_batches)\n-    : SimpleDataFragment(std::move(record_batches), ScanOptions::Defaults()) {}\n \n Review comment:\n   Yes, this is because schema is a required property of scan options and scan options are a required property of fragments. Datasource is a low-level API and I recommend using the scanner API instead. The scanner builder gets the schema for scan options from a dataset (or a projection thereof) automatically.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-05T12:43:17.938+0000",
                    "updated": "2019-12-05T12:43:17.938+0000",
                    "started": "2019-12-05T12:43:17.938+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "354270",
                    "issueId": "13263835"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263835/worklog/356317",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5950: ARROW-6965: [C++][Dataset] Optionally expose partition keys as columns\nURL: https://github.com/apache/arrow/pull/5950#discussion_r353779643\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/dataset_internal.h\n ##########\n @@ -52,53 +53,59 @@ class RecordBatchProjector {\n  public:\n   /// A column required by the given schema but absent from a record batch will be added\n   /// to the projected record batch with all its slots null.\n-  RecordBatchProjector(MemoryPool* pool, std::shared_ptr<Schema> to)\n-      : pool_(pool),\n-        to_(std::move(to)),\n+  explicit RecordBatchProjector(std::shared_ptr<Schema> to)\n \n Review comment:\n   I think the object should take a MemoryPool, maybe DataSource::GetFragments must have ScanContext?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-09T16:13:03.981+0000",
                    "updated": "2019-12-09T16:13:03.981+0000",
                    "started": "2019-12-09T16:13:03.981+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "356317",
                    "issueId": "13263835"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263835/worklog/356318",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5950: ARROW-6965: [C++][Dataset] Optionally expose partition keys as columns\nURL: https://github.com/apache/arrow/pull/5950#discussion_r353826720\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/dataset_internal.h\n ##########\n @@ -52,53 +53,59 @@ class RecordBatchProjector {\n  public:\n   /// A column required by the given schema but absent from a record batch will be added\n   /// to the projected record batch with all its slots null.\n-  RecordBatchProjector(MemoryPool* pool, std::shared_ptr<Schema> to)\n-      : pool_(pool),\n-        to_(std::move(to)),\n+  explicit RecordBatchProjector(std::shared_ptr<Schema> to)\n+      : to_(std::move(to)),\n         missing_columns_(to_->num_fields(), nullptr),\n         column_indices_(to_->num_fields(), kNoMatch),\n         scalars_(to_->num_fields(), nullptr) {}\n \n-  /// A column required by the given schema but absent from a record batch will be added\n-  /// to the projected record batch with all its slots equal to the corresponding entry in\n-  /// scalars or null if the correspondign entry in scalars is nullptr.\n-  RecordBatchProjector(MemoryPool* pool, std::shared_ptr<Schema> to,\n-                       std::vector<std::shared_ptr<Scalar>> scalars)\n-      : pool_(pool),\n-        to_(std::move(to)),\n-        missing_columns_(to_->num_fields(), nullptr),\n-        column_indices_(to_->num_fields(), kNoMatch),\n-        scalars_(std::move(scalars)) {\n-    DCHECK_EQ(scalars_.size(), missing_columns_.size());\n+  /// If the named field is absent from a record batch it will be added to the projected\n+  /// record batch with all its slots equal to the provided scalar (instead of null).\n+  Status SetDefaultValue(const std::string& name, std::shared_ptr<Scalar> scalar) {\n+    auto field_index = to_->GetFieldIndex(name);\n+    if (field_index == -1) {\n+      return Status::Invalid(\"no field named \", name, \" in schema \", *to_);\n+    }\n+\n+    DCHECK_NE(scalar, nullptr);\n+\n+    auto field_type = to_->field(field_index)->type();\n+    if (!field_type->Equals(scalar->type)) {\n+      return Status::TypeError(\"field \", name, \" is \", *field_type,\n+                               \" but provided scalar is \", *scalar->type);\n+    }\n+\n+    scalars_[field_index] = std::move(scalar);\n+    return Status::OK();\n   }\n \n-  Result<std::shared_ptr<RecordBatch>> Project(const RecordBatch& batch) {\n+  Result<std::shared_ptr<RecordBatch>> Project(\n+      const RecordBatch& batch, MemoryPool* pool ARROW_MEMORY_POOL_DEFAULT) {\n     if (from_ == nullptr || !batch.schema()->Equals(*from_)) {\n-      RETURN_NOT_OK(SetInputSchema(batch.schema()));\n+      RETURN_NOT_OK(SetInputSchema(batch.schema(), pool));\n     }\n \n     if (missing_columns_length_ < batch.num_rows()) {\n-      RETURN_NOT_OK(ResizeMissingColumns(batch.num_rows()));\n+      RETURN_NOT_OK(ResizeMissingColumns(batch.num_rows(), pool));\n     }\n \n     std::vector<std::shared_ptr<Array>> columns(to_->num_fields());\n \n     for (int i = 0; i < to_->num_fields(); ++i) {\n-      int matching_index = column_indices_[i];\n-      if (matching_index != kNoMatch) {\n-        columns[i] = batch.column(matching_index);\n-        continue;\n+      if (column_indices_[i] != kNoMatch) {\n+        columns[i] = batch.column(column_indices_[i]);\n+      } else {\n+        columns[i] = missing_columns_[i]->Slice(0, batch.num_rows());\n       }\n-\n-      columns[i] = missing_columns_[i]->Slice(0, batch.num_rows());\n     }\n \n     return RecordBatch::Make(to_, batch.num_rows(), std::move(columns));\n   }\n \n   const std::shared_ptr<Schema>& schema() const { return to_; }\n \n-  Status SetInputSchema(std::shared_ptr<Schema> from) {\n+  Status SetInputSchema(std::shared_ptr<Schema> from,\n+                        MemoryPool* pool ARROW_MEMORY_POOL_DEFAULT) {\n \n Review comment:\n   `ARROW_MEMORY_POOL_DEFAULT` is going to die, don't add it in this PR.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-09T16:13:04.577+0000",
                    "updated": "2019-12-09T16:13:04.577+0000",
                    "started": "2019-12-09T16:13:04.577+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "356318",
                    "issueId": "13263835"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263835/worklog/356319",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5950: ARROW-6965: [C++][Dataset] Optionally expose partition keys as columns\nURL: https://github.com/apache/arrow/pull/5950#discussion_r354856074\n \n \n\n ##########\n File path: cpp/src/arrow/util/iterator.h\n ##########\n @@ -249,6 +262,32 @@ Iterator<T> MakeVectorIterator(std::vector<T> v) {\n   return Iterator<T>(VectorIterator<T>(std::move(v)));\n }\n \n+/// \\brief Simple iterator which yields the elements of a std::vector<T> as optional<T>.\n+/// This is provided to support T where IterationTraits<T>::End is not specialized\n+template <typename T>\n+class VectorOptionalIterator {\n+ public:\n+  explicit VectorOptionalIterator(std::vector<T> v) : elements_(std::move(v)) {}\n+\n+  Status Next(util::optional<T>* out) {\n+    if (i_ == elements_.size()) {\n \n Review comment:\n   Ternary operator?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-09T16:13:04.581+0000",
                    "updated": "2019-12-09T16:13:04.581+0000",
                    "started": "2019-12-09T16:13:04.581+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "356319",
                    "issueId": "13263835"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263835/worklog/356320",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5950: ARROW-6965: [C++][Dataset] Optionally expose partition keys as columns\nURL: https://github.com/apache/arrow/pull/5950#discussion_r354859809\n \n \n\n ##########\n File path: cpp/src/arrow/filesystem/path_util.cc\n ##########\n @@ -156,6 +156,35 @@ Result<std::string> MakeAbstractPathRelative(const std::string& base,\n   return std::string(RemoveLeadingSlash(p));\n }\n \n+bool IsAncestorOf(util::string_view ancestor, util::string_view descendant) {\n+  ancestor = RemoveTrailingSlash(ancestor);\n+  if (ancestor == \"\") {\n+    // everything is a descendant of the root directory\n+    return true;\n+  }\n+\n+  descendant = RemoveTrailingSlash(descendant);\n+  if (!descendant.starts_with(ancestor)) {\n+    // an ancestor path is a prefix of descendant paths\n+    return false;\n+  }\n+\n+  descendant.remove_prefix(ancestor.size());\n+\n+  // \"/hello/w\" is not an ancestor of \"/hello/world\"\n+  return descendant.starts_with(std::string{kSep});\n+}\n+\n+util::optional<util::string_view> RemoveAncestor(util::string_view ancestor,\n \n Review comment:\n   Move the body of IsAncestor in RemoveAncestor, and IsAncestor now only returns RemoveAncestor(...) != nullopt. This will save you one substr in RemoveAncestor.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-09T16:13:05.000+0000",
                    "updated": "2019-12-09T16:13:05.000+0000",
                    "started": "2019-12-09T16:13:05.000+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "356320",
                    "issueId": "13263835"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263835/worklog/356321",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5950: ARROW-6965: [C++][Dataset] Optionally expose partition keys as columns\nURL: https://github.com/apache/arrow/pull/5950#discussion_r354885294\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/file_base.cc\n ##########\n @@ -47,77 +46,161 @@ Result<ScanTaskIterator> FileDataFragment::Scan(ScanContextPtr context) {\n FileSystemDataSource::FileSystemDataSource(fs::FileSystemPtr filesystem,\n                                            fs::PathForest forest,\n                                            ExpressionPtr source_partition,\n-                                           PathPartitions partitions,\n+                                           ExpressionVector file_partitions,\n                                            FileFormatPtr format)\n     : DataSource(std::move(source_partition)),\n       filesystem_(std::move(filesystem)),\n       forest_(std::move(forest)),\n-      partitions_(std::move(partitions)),\n+      partitions_(std::move(file_partitions)),\n       format_(std::move(format)) {}\n \n Result<DataSourcePtr> FileSystemDataSource::Make(fs::FileSystemPtr filesystem,\n                                                  fs::FileStatsVector stats,\n                                                  ExpressionPtr source_partition,\n-                                                 PathPartitions partitions,\n                                                  FileFormatPtr format) {\n-  fs::PathForest forest;\n-  RETURN_NOT_OK(fs::PathTree::Make(stats, &forest));\n+  ARROW_ASSIGN_OR_RAISE(auto forest, fs::PathForest::Make(std::move(stats)));\n \n-  return DataSourcePtr(new FileSystemDataSource(\n-      std::move(filesystem), std::move(forest), std::move(source_partition),\n-      std::move(partitions), std::move(format)));\n+  return DataSourcePtr(new FileSystemDataSource(std::move(filesystem), std::move(forest),\n+                                                std::move(source_partition), {},\n+                                                std::move(format)));\n }\n \n-DataFragmentIterator FileSystemDataSource::GetFragmentsImpl(ScanOptionsPtr options) {\n-  std::vector<std::unique_ptr<fs::FileStats>> files;\n+Result<DataSourcePtr> FileSystemDataSource::Make(\n+    fs::FileSystemPtr filesystem, fs::FileStatsVector stats,\n+    ExpressionPtr source_partition, const PartitionSchemePtr& partition_scheme,\n+    const std::string& partition_base_dir, FileFormatPtr format) {\n+  ExpressionVector partitions(stats.size(), scalar(true));\n+  ARROW_ASSIGN_OR_RAISE(auto forest, fs::PathForest::Make(std::move(stats)));\n+\n+  // TODO(bkietz) extract partition_base_dir and partition_scheme back out to discovery\n \n Review comment:\n   Why is this moved here instead of in discovery?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-09T16:13:05.004+0000",
                    "updated": "2019-12-09T16:13:05.004+0000",
                    "started": "2019-12-09T16:13:05.003+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "356321",
                    "issueId": "13263835"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263835/worklog/356322",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5950: ARROW-6965: [C++][Dataset] Optionally expose partition keys as columns\nURL: https://github.com/apache/arrow/pull/5950#discussion_r354852148\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/dataset_test.cc\n ##########\n @@ -392,15 +391,244 @@ TEST_F(TestEndToEnd, EndToEndSingleSource) {\n   // In the simplest case, consumption is simply conversion to a Table.\n   ASSERT_OK_AND_ASSIGN(auto table, scanner->ToTable());\n \n-  using row_type = std::tuple<double, std::string>;\n+  using row_type = std::tuple<double, std::string, util::optional<std::string>>;\n   std::vector<row_type> rows{\n-      row_type{152.25, \"3\"},\n-      row_type{273.5, \"3\"},\n+      row_type{152.25, \"3\", util::make_optional<std::string>(\"CA\")},\n \n Review comment:\n   Do you need to call make_optional?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-09T16:13:05.025+0000",
                    "updated": "2019-12-09T16:13:05.025+0000",
                    "started": "2019-12-09T16:13:05.025+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "356322",
                    "issueId": "13263835"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 28800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@16c4c6d2[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@ae335b5[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2c06b87b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3f5b6ed3[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7bc689cd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@47c58ef5[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5e193316[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3ad0f3f0[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@75979d86[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1ece17e7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@95816ab[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@34aa2b03[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 28800,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Dec 10 22:05:42 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-12-10T22:05:42.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6965/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2019-10-22T16:42:54.000+0000",
        "updated": "2020-04-10T15:32:43.000+0000",
        "timeoriginalestimate": null,
        "description": "This would be exposed in the DataSourceDiscovery as an option.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "8h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 28800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Dataset] Optionally expose partition keys as materialized columns",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263835/comment/16992991",
                    "id": "16992991",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 5950\n[https://github.com/apache/arrow/pull/5950]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-12-10T22:05:42.233+0000",
                    "updated": "2019-12-10T22:05:42.233+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z07uew:",
        "customfield_12314139": null
    }
}