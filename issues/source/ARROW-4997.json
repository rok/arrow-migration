{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13223313",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13223313",
    "key": "ARROW-4997",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343937",
                "id": "12343937",
                "description": "",
                "name": "0.13.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-04-01"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": "2022-11-16T21:12:10.944+0000",
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/1",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/blocker.svg",
            "name": "Blocker",
            "id": "1"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": 14400,
        "timeestimate": 9600,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=eerhardt",
            "name": "eerhardt",
            "key": "eerhardt",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=eerhardt&avatarId=37925",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=eerhardt&avatarId=37925",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=eerhardt&avatarId=37925",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=eerhardt&avatarId=37925"
            },
            "displayName": "Eric Erhardt",
            "active": true,
            "timeZone": "America/North_Dakota/New_Salem"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334712",
                "id": "12334712",
                "name": "C#"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 9600,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=eerhardt",
            "name": "eerhardt",
            "key": "eerhardt",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=eerhardt&avatarId=37925",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=eerhardt&avatarId=37925",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=eerhardt&avatarId=37925",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=eerhardt&avatarId=37925"
            },
            "displayName": "Eric Erhardt",
            "active": true,
            "timeZone": "America/North_Dakota/New_Salem"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=eerhardt",
            "name": "eerhardt",
            "key": "eerhardt",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=eerhardt&avatarId=37925",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=eerhardt&avatarId=37925",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=eerhardt&avatarId=37925",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=eerhardt&avatarId=37925"
            },
            "displayName": "Eric Erhardt",
            "active": true,
            "timeZone": "America/North_Dakota/New_Salem"
        },
        "aggregateprogress": {
            "progress": 4800,
            "total": 14400,
            "percent": 33
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 4800,
            "total": 14400,
            "percent": 33
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4997/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 8,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13223313/worklog/217249",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on pull request #4017: ARROW-4997: [C#] ArrowStreamReader doesn't consume whole stream and doesn't implement sync read.\nURL: https://github.com/apache/arrow/pull/4017\n \n \n   When reading from a network stream, ArrowStreamReader doesn't check how many bytes were read, and instead assumes the whole buffer was filled with a single read call. Fixing this to read multiple times to fill the whole buffer.\r\n   \r\n   Also, when consuming a stream only the async read method works. The synchronous method throws NotImplementedException. Implementing the sync method.\r\n   \r\n   Note: this implements a lot of the underlying functionality from #3925. The difference here is that this change doesn't attempt to solve the perf issues with allocating and copying memory multiples times. #3925 is specifically solving that perf issue.\r\n   \r\n   @stephentoub @pgovind @chutchinson \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-22T14:19:29.942+0000",
                    "updated": "2019-03-22T14:19:29.942+0000",
                    "started": "2019-03-22T14:19:29.941+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "217249",
                    "issueId": "13223313"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13223313/worklog/217251",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "stephentoub commented on pull request #4017: ARROW-4997: [C#] ArrowStreamReader doesn't consume whole stream and doesn't implement sync read.\nURL: https://github.com/apache/arrow/pull/4017#discussion_r268189635\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/Extensions/StreamExtensions.cs\n ##########\n @@ -0,0 +1,91 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using System;\n+using System.IO;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+namespace Apache.Arrow\n+{\n+    internal static partial class StreamExtensions\n+    {\n+        public static async Task EnsureReadFullBufferAsync(this Stream stream, Memory<byte> buffer, CancellationToken cancellationToken = default)\n+        {\n+            int bytesRead = await ReadFullBufferAsync(stream, buffer, cancellationToken)\n+                .ConfigureAwait(false);\n+\n+            if (bytesRead != buffer.Length)\n+            {\n+                throw new InvalidOperationException(\"Unexpectedly reached the end of the stream before a full buffer was read.\");\n+            }\n+        }\n+\n+        public static async Task<int> ReadFullBufferAsync(this Stream stream, Memory<byte> buffer, CancellationToken cancellationToken = default)\n \n Review comment:\n   Task => ValueTask?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-22T14:22:23.013+0000",
                    "updated": "2019-03-22T14:22:23.013+0000",
                    "started": "2019-03-22T14:22:23.013+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "217251",
                    "issueId": "13223313"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13223313/worklog/217255",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "stephentoub commented on pull request #4017: ARROW-4997: [C#] ArrowStreamReader doesn't consume whole stream and doesn't implement sync read.\nURL: https://github.com/apache/arrow/pull/4017#discussion_r268190205\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/Extensions/StreamExtensions.cs\n ##########\n @@ -0,0 +1,91 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using System;\n+using System.IO;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+namespace Apache.Arrow\n+{\n+    internal static partial class StreamExtensions\n+    {\n+        public static async Task EnsureReadFullBufferAsync(this Stream stream, Memory<byte> buffer, CancellationToken cancellationToken = default)\n \n Review comment:\n   While there's a ton to love about async/await, one of the downsides from a perf perspective is these little helpers can add measurable allocation cost.  If the any of the reads ends up needing to yield, then this helper that exists purely to check the length and throw will also yield and end up allocating.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-22T14:23:45.221+0000",
                    "updated": "2019-03-22T14:23:45.221+0000",
                    "started": "2019-03-22T14:23:45.221+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "217255",
                    "issueId": "13223313"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13223313/worklog/217256",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on pull request #4017: ARROW-4997: [C#] ArrowStreamReader doesn't consume whole stream and doesn't implement sync read.\nURL: https://github.com/apache/arrow/pull/4017#discussion_r268190673\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/Extensions/StreamExtensions.cs\n ##########\n @@ -0,0 +1,91 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using System;\n+using System.IO;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+namespace Apache.Arrow\n+{\n+    internal static partial class StreamExtensions\n+    {\n+        public static async Task EnsureReadFullBufferAsync(this Stream stream, Memory<byte> buffer, CancellationToken cancellationToken = default)\n+        {\n+            int bytesRead = await ReadFullBufferAsync(stream, buffer, cancellationToken)\n+                .ConfigureAwait(false);\n+\n+            if (bytesRead != buffer.Length)\n+            {\n+                throw new InvalidOperationException(\"Unexpectedly reached the end of the stream before a full buffer was read.\");\n+            }\n+        }\n+\n+        public static async Task<int> ReadFullBufferAsync(this Stream stream, Memory<byte> buffer, CancellationToken cancellationToken = default)\n \n Review comment:\n   I was planning on doing that with https://issues.apache.org/jira/browse/ARROW-4717. The issue is in order to use ValueTask you need to add a new dependency to the library since we are `netstandard1.3`.\r\n   \r\n   I can bite the bullet and do it here. But that was my thinking.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-22T14:24:51.405+0000",
                    "updated": "2019-03-22T14:24:51.405+0000",
                    "started": "2019-03-22T14:24:51.404+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "217256",
                    "issueId": "13223313"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13223313/worklog/217257",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "stephentoub commented on pull request #4017: ARROW-4997: [C#] ArrowStreamReader doesn't consume whole stream and doesn't implement sync read.\nURL: https://github.com/apache/arrow/pull/4017#discussion_r268191393\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/Extensions/StreamExtensions.cs\n ##########\n @@ -0,0 +1,91 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using System;\n+using System.IO;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+namespace Apache.Arrow\n+{\n+    internal static partial class StreamExtensions\n+    {\n+        public static async Task EnsureReadFullBufferAsync(this Stream stream, Memory<byte> buffer, CancellationToken cancellationToken = default)\n+        {\n+            int bytesRead = await ReadFullBufferAsync(stream, buffer, cancellationToken)\n+                .ConfigureAwait(false);\n+\n+            if (bytesRead != buffer.Length)\n+            {\n+                throw new InvalidOperationException(\"Unexpectedly reached the end of the stream before a full buffer was read.\");\n+            }\n+        }\n+\n+        public static async Task<int> ReadFullBufferAsync(this Stream stream, Memory<byte> buffer, CancellationToken cancellationToken = default)\n \n Review comment:\n   Ok.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-22T14:26:33.838+0000",
                    "updated": "2019-03-22T14:26:33.838+0000",
                    "started": "2019-03-22T14:26:33.838+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "217257",
                    "issueId": "13223313"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13223313/worklog/217261",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on pull request #4017: ARROW-4997: [C#] ArrowStreamReader doesn't consume whole stream and doesn't implement sync read.\nURL: https://github.com/apache/arrow/pull/4017#discussion_r268192866\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/Extensions/StreamExtensions.cs\n ##########\n @@ -0,0 +1,91 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using System;\n+using System.IO;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+namespace Apache.Arrow\n+{\n+    internal static partial class StreamExtensions\n+    {\n+        public static async Task EnsureReadFullBufferAsync(this Stream stream, Memory<byte> buffer, CancellationToken cancellationToken = default)\n \n Review comment:\n   How can I solve that? Separate the \"Ensure\" part into a different helper that isn't Async?\r\n   \r\n   ```C#\r\n           public static void EnsureFullRead(Memory<byte> buffer, int bytesRead)\r\n           {\r\n               if (bytesRead != buffer.Length)\r\n               {\r\n                   throw new InvalidOperationException(\"Unexpectedly reached the end of the stream before a full buffer was read.\");\r\n               }\r\n           }\r\n   ....\r\n   \r\n           // caller\r\n           int bytesRead = await BaseStream.ReadFullBufferAsync(buffer).ConfigureAwait(false);\r\n           EnsureFullRead(buffer, bytesRead);\r\n   ```\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-22T14:29:36.717+0000",
                    "updated": "2019-03-22T14:29:36.717+0000",
                    "started": "2019-03-22T14:29:36.716+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "217261",
                    "issueId": "13223313"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13223313/worklog/217262",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "stephentoub commented on pull request #4017: ARROW-4997: [C#] ArrowStreamReader doesn't consume whole stream and doesn't implement sync read.\nURL: https://github.com/apache/arrow/pull/4017#discussion_r268193239\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/Extensions/StreamExtensions.cs\n ##########\n @@ -0,0 +1,91 @@\n+\ufeff// Licensed to the Apache Software Foundation (ASF) under one or more\n+// contributor license agreements. See the NOTICE file distributed with\n+// this work for additional information regarding copyright ownership.\n+// The ASF licenses this file to You under the Apache License, Version 2.0\n+// (the \"License\"); you may not use this file except in compliance with\n+// the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+using System;\n+using System.IO;\n+using System.Threading;\n+using System.Threading.Tasks;\n+\n+namespace Apache.Arrow\n+{\n+    internal static partial class StreamExtensions\n+    {\n+        public static async Task EnsureReadFullBufferAsync(this Stream stream, Memory<byte> buffer, CancellationToken cancellationToken = default)\n \n Review comment:\n   Yup.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-22T14:30:22.854+0000",
                    "updated": "2019-03-22T14:30:22.854+0000",
                    "started": "2019-03-22T14:30:22.853+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "217262",
                    "issueId": "13223313"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13223313/worklog/217439",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #4017: ARROW-4997: [C#] ArrowStreamReader doesn't consume whole stream and doesn't implement sync read.\nURL: https://github.com/apache/arrow/pull/4017\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-22T21:26:01.664+0000",
                    "updated": "2019-03-22T21:26:01.664+0000",
                    "started": "2019-03-22T21:26:01.664+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "217439",
                    "issueId": "13223313"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 4800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@40d12de1[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@28f6b2ac[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2d5835c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1fab2278[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6f707e0d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@34062f7e[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1ae785c1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5c99dc07[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@30f5518f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@358df530[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1362b7cd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1092842[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 4800,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Mar 22 21:31:19 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-03-22T21:25:57.000+0000",
        "workratio": 33,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4997/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-03-22T11:53:44.000+0000",
        "updated": "2019-03-22T21:31:19.000+0000",
        "timeoriginalestimate": 14400,
        "description": "There are 2 major issues with the ArrowStreamReader that are blocking me from using it.\r\n # When it reads a batch from a .NET Stream that doesn't return the whole chunk of memory in one \"Read\" call (like a socket/network stream), it only calls Read once, and then continues on. This is an issue because it has \"garbage\" at the end of its buffer (which was never written to by the stream), and\u00a0when attempting to read the next batch, it is in the middle of the previous batch from the .NET Stream. This causes all sorts of issues because it assumes the next 4 bytes are the message length,\u00a0which it obviously isn't. See\u00a0[the reading code|https://github.com/apache/arrow/blob/13fd813445b4738cbebbd137490fe3c02071c04b/csharp/src/Apache.Arrow/Ipc/ArrowStreamReaderImplementation.cs#L90-L97] for where it only calls Read once - it should be in a loop.\r\n # ArrowStreamReader has a synchronous ReadNextRecordBatch() method - but it throws NotImplementedException. This is necessary when a caller isn't in an async method, they can't/shouldn't call the async API.",
        "customfield_10010": null,
        "timetracking": {
            "originalEstimate": "4h",
            "remainingEstimate": "2h 40m",
            "timeSpent": "1h 20m",
            "originalEstimateSeconds": 14400,
            "remainingEstimateSeconds": 9600,
            "timeSpentSeconds": 4800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C#] ArrowStreamReader doesn't consume whole stream and doesn't implement sync read",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13223313/comment/16799169",
                    "id": "16799169",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=eerhardt",
                        "name": "eerhardt",
                        "key": "eerhardt",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=eerhardt&avatarId=37925",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=eerhardt&avatarId=37925",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=eerhardt&avatarId=37925",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=eerhardt&avatarId=37925"
                        },
                        "displayName": "Eric Erhardt",
                        "active": true,
                        "timeZone": "America/North_Dakota/New_Salem"
                    },
                    "body": "[~wesmckinn], [~xhochy], [~kou] - this is a pretty major\u00a0issue in the C# library that is blocking usage of\u00a0the Arrow C# library over a network stream. I have a\u00a0[PR|https://github.com/apache/arrow/pull/4017] up to fix it that has been approved by Stephen Toub. I'm hoping this PR can be merged for the 0.13 release, as\u00a0it is super important for our usages.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=eerhardt",
                        "name": "eerhardt",
                        "key": "eerhardt",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=eerhardt&avatarId=37925",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=eerhardt&avatarId=37925",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=eerhardt&avatarId=37925",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=eerhardt&avatarId=37925"
                        },
                        "displayName": "Eric Erhardt",
                        "active": true,
                        "timeZone": "America/North_Dakota/New_Salem"
                    },
                    "created": "2019-03-22T16:42:09.569+0000",
                    "updated": "2019-03-22T16:42:09.569+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13223313/comment/16799368",
                    "id": "16799368",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Issue resolved by pull request 4017\n[https://github.com/apache/arrow/pull/4017]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2019-03-22T21:25:58.025+0000",
                    "updated": "2019-03-22T21:25:58.025+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13223313/comment/16799370",
                    "id": "16799370",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Thanks! I've merged.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2019-03-22T21:31:19.032+0000",
                    "updated": "2019-03-22T21:31:19.032+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|z00zl4:",
        "customfield_12314139": null
    }
}