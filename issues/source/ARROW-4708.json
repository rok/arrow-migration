{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13218483",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218483",
    "key": "ARROW-4708",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344925",
                "id": "12344925",
                "description": "",
                "name": "0.14.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-07-04"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12562237",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12562237",
                "type": {
                    "id": "12310051",
                    "name": "Supercedes",
                    "inward": "is superceded by",
                    "outward": "supercedes",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310051"
                },
                "outwardIssue": {
                    "id": "13224408",
                    "key": "ARROW-5040",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13224408",
                    "fields": {
                        "summary": "[C++] ArrayFromJSON can't parse Timestamp from strings",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
                            "name": "Minor",
                            "id": "4"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 52800,
            "total": 52800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 52800,
            "total": 52800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4708/votes",
            "votes": 1,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 96,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218483/worklog/224617",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4126: ARROW-4708: [C++] implement multithreaded json reader\nURL: https://github.com/apache/arrow/pull/4126\n \n \n   This PR adds serial and multithreaded json reader implementations. Optionally, the types of fields outside the provided schema can be inferred (strings which parse as timestamps will be `timestamp(second)`, numbers will be `int64` unless a floating point value is encountered).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-08T21:44:39.762+0000",
                    "updated": "2019-04-08T21:44:39.762+0000",
                    "started": "2019-04-08T21:44:39.762+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "224617",
                    "issueId": "13218483"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218483/worklog/226010",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #4126: ARROW-4708: [C++] implement multithreaded json reader\nURL: https://github.com/apache/arrow/pull/4126#issuecomment-482012530\n \n \n   @bkietz It looks like at least windows might be failing CI due to this change?  Do you expect major modifications to make it pass (i.e. do you want to mark this as WIP?)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-11T08:06:36.482+0000",
                    "updated": "2019-04-11T08:06:36.482+0000",
                    "started": "2019-04-11T08:06:36.481+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "226010",
                    "issueId": "13218483"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218483/worklog/226882",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4148: ARROW-4708: [C++] refactoring JSON parser to prepare for multithreaded impl\nURL: https://github.com/apache/arrow/pull/4148\n \n \n   - don't use in-situ parsing\r\n   - don't require null termination of parsed buffers\r\n   - resize parser's scalar storage when it might overflow\r\n   - rewrite chunker to use Buffer instead of string_view\r\n     to represent memory ranges\r\n   - iwyu + lint cleanup\r\n   - add test for parsing JSON with a partial schema\r\n   - add test for inferring timestamp type in an unexpected\r\n     field of strings\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-12T19:53:54.463+0000",
                    "updated": "2019-04-12T19:53:54.463+0000",
                    "started": "2019-04-12T19:53:54.463+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "226882",
                    "issueId": "13218483"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218483/worklog/226885",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on issue #4148: ARROW-4708: [C++] refactoring JSON parser to prepare for multithreaded impl\nURL: https://github.com/apache/arrow/pull/4148#issuecomment-482702662\n \n \n   @pitrou I have removed the converter/reader changes, this PR only affects the chunker, parser, and utilities. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-12T19:56:09.639+0000",
                    "updated": "2019-04-12T19:56:09.639+0000",
                    "started": "2019-04-12T19:56:09.639+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "226885",
                    "issueId": "13218483"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218483/worklog/226889",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4148: ARROW-4708: [C++] refactoring JSON parser to prepare for multithreaded impl\nURL: https://github.com/apache/arrow/pull/4148\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-12T20:00:25.884+0000",
                    "updated": "2019-04-12T20:00:25.884+0000",
                    "started": "2019-04-12T20:00:25.883+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "226889",
                    "issueId": "13218483"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218483/worklog/226890",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on issue #4148: ARROW-4708: [C++] refactoring JSON parser to prepare for multithreaded impl\nURL: https://github.com/apache/arrow/pull/4148#issuecomment-482703958\n \n \n   sorry, let me get this building first\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-12T20:00:54.673+0000",
                    "updated": "2019-04-12T20:00:54.673+0000",
                    "started": "2019-04-12T20:00:54.672+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "226890",
                    "issueId": "13218483"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218483/worklog/226986",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #4148: ARROW-4708: [C++] refactoring JSON parser to prepare for multithreaded impl\nURL: https://github.com/apache/arrow/pull/4148\n \n \n   - don't use in-situ parsing\r\n   - don't require null termination of parsed buffers\r\n   - resize parser's scalar storage when it might overflow\r\n   - rewrite chunker to use Buffer instead of string_view\r\n     to represent memory ranges\r\n   - iwyu + lint cleanup\r\n   - add test for parsing JSON with a partial schema\r\n   - add test for inferring timestamp type in an unexpected\r\n     field of strings\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-12T22:57:01.320+0000",
                    "updated": "2019-04-12T22:57:01.320+0000",
                    "started": "2019-04-12T22:57:01.320+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "226986",
                    "issueId": "13218483"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218483/worklog/227086",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on issue #4148: ARROW-4708: [C++] refactoring JSON parser to prepare for multithreaded impl\nURL: https://github.com/apache/arrow/pull/4148#issuecomment-482703958\n \n \n   sorry, let me get this building first\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-13T01:43:48.756+0000",
                    "updated": "2019-04-13T01:43:48.756+0000",
                    "started": "2019-04-13T01:43:48.756+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "227086",
                    "issueId": "13218483"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218483/worklog/227227",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4148: ARROW-4708: [C++] refactoring JSON parser to prepare for multithreaded impl\nURL: https://github.com/apache/arrow/pull/4148#issuecomment-482868232\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4148?src=pr&el=h1) Report\n   > Merging [#4148](https://codecov.io/gh/apache/arrow/pull/4148?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/853742021ce1dc3123c614c1f4b12e8050b11a3c?src=pr&el=desc) will **increase** coverage by `0.57%`.\n   > The diff coverage is `86.37%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4148/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4148?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4148      +/-   ##\n   ==========================================\n   + Coverage   87.85%   88.42%   +0.57%     \n   ==========================================\n     Files         748      613     -135     \n     Lines       91842    82240    -9602     \n     Branches     1251        0    -1251     \n   ==========================================\n   - Hits        80687    72721    -7966     \n   + Misses      11036     9519    -1517     \n   + Partials      119        0     -119\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4148?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/json/chunker.h](https://codecov.io/gh/apache/arrow/pull/4148/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NodW5rZXIuaA==) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/type\\_traits.h](https://codecov.io/gh/apache/arrow/pull/4148/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90eXBlX3RyYWl0cy5o) | `92.95% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/json/options.h](https://codecov.io/gh/apache/arrow/pull/4148/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL29wdGlvbnMuaA==) | `50% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/json/parser.h](https://codecov.io/gh/apache/arrow/pull/4148/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL3BhcnNlci5o) | `100% <\u00f8> (+25%)` | :arrow_up: |\n   | [cpp/src/arrow/json/reader.cc](https://codecov.io/gh/apache/arrow/pull/4148/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL3JlYWRlci5jYw==) | `0.63% <0%> (-71.62%)` | :arrow_down: |\n   | [cpp/src/arrow/util/parsing.h](https://codecov.io/gh/apache/arrow/pull/4148/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3BhcnNpbmcuaA==) | `95.91% <100%> (+0.24%)` | :arrow_up: |\n   | [cpp/src/arrow/ipc/json-simple-test.cc](https://codecov.io/gh/apache/arrow/pull/4148/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pcGMvanNvbi1zaW1wbGUtdGVzdC5jYw==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/json/parser-test.cc](https://codecov.io/gh/apache/arrow/pull/4148/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL3BhcnNlci10ZXN0LmNj) | `98.16% <100%> (-0.44%)` | :arrow_down: |\n   | [cpp/src/arrow/json/test-common.h](https://codecov.io/gh/apache/arrow/pull/4148/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL3Rlc3QtY29tbW9uLmg=) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/buffer.h](https://codecov.io/gh/apache/arrow/pull/4148/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9idWZmZXIuaA==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | ... and [149 more](https://codecov.io/gh/apache/arrow/pull/4148/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4148?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4148?src=pr&el=footer). Last update [8537420...ee8c5e5](https://codecov.io/gh/apache/arrow/pull/4148?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-13T19:09:34.552+0000",
                    "updated": "2019-04-13T19:09:34.552+0000",
                    "started": "2019-04-13T19:09:34.551+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "227227",
                    "issueId": "13218483"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218483/worklog/227692",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4148: ARROW-4708: [C++] refactoring JSON parser to prepare for multithreaded impl\nURL: https://github.com/apache/arrow/pull/4148#discussion_r275341150\n \n \n\n ##########\n File path: cpp/src/arrow/ipc/json-simple.cc\n ##########\n @@ -142,10 +141,60 @@ class BooleanConverter final : public ConcreteConverter<BooleanConverter> {\n \n   std::shared_ptr<ArrayBuilder> builder() override { return builder_; }\n \n- protected:\n+ private:\n   std::shared_ptr<BooleanBuilder> builder_;\n };\n \n+// ------------------------------------------------------------------------\n+// Helpers for numeric converters\n+\n+// Convert single signed integer value (also {Date,Time}{32,64} and Timestamp)\n+template <typename T, typename CType = typename TypeTraits<T>::CType>\n+enable_if_signed_integer<typename CTypeTraits<CType>::ArrowType, Status> ConvertNumber(\n \n Review comment:\n   Wouldn't `enable_if_signed_integer<T, Status>` work just as well? Or am I missing some subtlety?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-15T13:46:49.153+0000",
                    "updated": "2019-04-15T13:46:49.153+0000",
                    "started": "2019-04-15T13:46:49.153+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "227692",
                    "issueId": "13218483"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218483/worklog/227693",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4148: ARROW-4708: [C++] refactoring JSON parser to prepare for multithreaded impl\nURL: https://github.com/apache/arrow/pull/4148#discussion_r275344628\n \n \n\n ##########\n File path: cpp/src/arrow/json/reader.h\n ##########\n @@ -54,7 +53,8 @@ class ARROW_EXPORT TableReader {\n ARROW_EXPORT Status ParseOne(ParseOptions options, std::shared_ptr<Buffer> json,\n                              std::shared_ptr<RecordBatch>* out);\n \n+Status Convert(const std::shared_ptr<DataType>& out_type, std::shared_ptr<Array> in,\n \n Review comment:\n   Could you add a docstring for this? Also, is there a reason this doesn't use ARROW_EXPORT?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-15T13:46:49.262+0000",
                    "updated": "2019-04-15T13:46:49.262+0000",
                    "started": "2019-04-15T13:46:49.262+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "227693",
                    "issueId": "13218483"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218483/worklog/227694",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4148: ARROW-4708: [C++] refactoring JSON parser to prepare for multithreaded impl\nURL: https://github.com/apache/arrow/pull/4148#discussion_r275351094\n \n \n\n ##########\n File path: cpp/src/arrow/json/parser.cc\n ##########\n @@ -17,28 +17,33 @@\n \n #include \"arrow/json/parser.h\"\n \n-#include <algorithm>\n-#include <cstdio>\n #include <limits>\n-#include <sstream>\n #include <tuple>\n+#include <unordered_map>\n #include <utility>\n #include <vector>\n \n+#include \"arrow/util/sse-util.h\"\n+#if defined(ARROW_HAVE_SSE4_2)\n+#define RAPIDJSON_SSE42 1\n \n Review comment:\n   I think it would be worthwhile consolidating the RapidJson options and definitions somewhere. There's already some of them in `ipc/json-internal.h` but they could all go into a dedicated `.h` file (for example `json/rapidjson-defs.h`).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-15T13:46:49.379+0000",
                    "updated": "2019-04-15T13:46:49.379+0000",
                    "started": "2019-04-15T13:46:49.378+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "227694",
                    "issueId": "13218483"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218483/worklog/227695",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4148: ARROW-4708: [C++] refactoring JSON parser to prepare for multithreaded impl\nURL: https://github.com/apache/arrow/pull/4148#discussion_r275344896\n \n \n\n ##########\n File path: cpp/src/arrow/json/reader.h\n ##########\n @@ -54,7 +53,8 @@ class ARROW_EXPORT TableReader {\n ARROW_EXPORT Status ParseOne(ParseOptions options, std::shared_ptr<Buffer> json,\n                              std::shared_ptr<RecordBatch>* out);\n \n+Status Convert(const std::shared_ptr<DataType>& out_type, std::shared_ptr<Array> in,\n \n Review comment:\n   (also, not sure why the second argument isn't `const std::shared_ptr<Array>&`).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-15T13:46:49.500+0000",
                    "updated": "2019-04-15T13:46:49.500+0000",
                    "started": "2019-04-15T13:46:49.500+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "227695",
                    "issueId": "13218483"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218483/worklog/227696",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4148: ARROW-4708: [C++] refactoring JSON parser to prepare for multithreaded impl\nURL: https://github.com/apache/arrow/pull/4148#discussion_r275352333\n \n \n\n ##########\n File path: cpp/src/arrow/json/parser.cc\n ##########\n @@ -49,21 +54,83 @@ using internal::checked_cast;\n using util::string_view;\n \n template <typename... T>\n-Status ParseError(T&&... t) {\n+static Status ParseError(T&&... t) {\n   return Status::Invalid(\"JSON parse error: \", std::forward<T>(t)...);\n }\n \n-Status KindChangeError(Kind::type from, Kind::type to) {\n-  auto from_name = Tag(from)->value(0);\n-  auto to_name = Tag(to)->value(0);\n-  return ParseError(\"A column changed from \", from_name, \" to \", to_name);\n+static Status KindChangeError(Kind::type from, Kind::type to) {\n+  return ParseError(\"A column changed from \", Kind::Name(from), \" to \", Kind::Name(to));\n+}\n+\n+const std::string& Kind::Name(Kind::type kind) {\n+  static const std::string names[] = {\"null\",   \"boolean\", \"number\",\n+                                      \"string\", \"array\",   \"object\"};\n+\n+  return names[kind];\n+}\n+\n+const std::shared_ptr<const KeyValueMetadata>& Kind::Tag(Kind::type kind) {\n+  static const std::shared_ptr<const KeyValueMetadata> tags[] = {\n+      key_value_metadata({{\"json_kind\", Kind::Name(Kind::kNull)}}),\n+      key_value_metadata({{\"json_kind\", Kind::Name(Kind::kBoolean)}}),\n+      key_value_metadata({{\"json_kind\", Kind::Name(Kind::kNumber)}}),\n+      key_value_metadata({{\"json_kind\", Kind::Name(Kind::kString)}}),\n+      key_value_metadata({{\"json_kind\", Kind::Name(Kind::kArray)}}),\n+      key_value_metadata({{\"json_kind\", Kind::Name(Kind::kObject)}}),\n+  };\n+  return tags[kind];\n+}\n+\n+static internal::Trie MakeFromTagTrie() {\n+  internal::TrieBuilder builder;\n+  for (auto kind : {Kind::kNull, Kind::kBoolean, Kind::kNumber, Kind::kString,\n+                    Kind::kArray, Kind::kObject}) {\n+    DCHECK_OK(builder.Append(Kind::Name(kind)));\n+  }\n+  auto name_to_kind = builder.Finish();\n+  DCHECK_OK(name_to_kind.Validate());\n+  return name_to_kind;\n+}\n+\n+Kind::type Kind::FromTag(const std::shared_ptr<const KeyValueMetadata>& tag) {\n+  static internal::Trie name_to_kind = MakeFromTagTrie();\n \n Review comment:\n   The trie can be a speed optimization in some cases, but for that you shouldn't build it every time you do a lookup. I don't know if this function is performance-critical (presumably not?) so I'll let you choose your strategy here.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-15T13:46:49.581+0000",
                    "updated": "2019-04-15T13:46:49.581+0000",
                    "started": "2019-04-15T13:46:49.580+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "227696",
                    "issueId": "13218483"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218483/worklog/227697",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4148: ARROW-4708: [C++] refactoring JSON parser to prepare for multithreaded impl\nURL: https://github.com/apache/arrow/pull/4148#discussion_r275353775\n \n \n\n ##########\n File path: cpp/src/arrow/json/parser.cc\n ##########\n @@ -49,21 +54,83 @@ using internal::checked_cast;\n using util::string_view;\n \n template <typename... T>\n-Status ParseError(T&&... t) {\n+static Status ParseError(T&&... t) {\n   return Status::Invalid(\"JSON parse error: \", std::forward<T>(t)...);\n }\n \n-Status KindChangeError(Kind::type from, Kind::type to) {\n-  auto from_name = Tag(from)->value(0);\n-  auto to_name = Tag(to)->value(0);\n-  return ParseError(\"A column changed from \", from_name, \" to \", to_name);\n+static Status KindChangeError(Kind::type from, Kind::type to) {\n+  return ParseError(\"A column changed from \", Kind::Name(from), \" to \", Kind::Name(to));\n+}\n+\n+const std::string& Kind::Name(Kind::type kind) {\n+  static const std::string names[] = {\"null\",   \"boolean\", \"number\",\n+                                      \"string\", \"array\",   \"object\"};\n+\n+  return names[kind];\n+}\n+\n+const std::shared_ptr<const KeyValueMetadata>& Kind::Tag(Kind::type kind) {\n+  static const std::shared_ptr<const KeyValueMetadata> tags[] = {\n+      key_value_metadata({{\"json_kind\", Kind::Name(Kind::kNull)}}),\n+      key_value_metadata({{\"json_kind\", Kind::Name(Kind::kBoolean)}}),\n+      key_value_metadata({{\"json_kind\", Kind::Name(Kind::kNumber)}}),\n+      key_value_metadata({{\"json_kind\", Kind::Name(Kind::kString)}}),\n+      key_value_metadata({{\"json_kind\", Kind::Name(Kind::kArray)}}),\n+      key_value_metadata({{\"json_kind\", Kind::Name(Kind::kObject)}}),\n+  };\n+  return tags[kind];\n+}\n+\n+static internal::Trie MakeFromTagTrie() {\n+  internal::TrieBuilder builder;\n+  for (auto kind : {Kind::kNull, Kind::kBoolean, Kind::kNumber, Kind::kString,\n+                    Kind::kArray, Kind::kObject}) {\n+    DCHECK_OK(builder.Append(Kind::Name(kind)));\n+  }\n+  auto name_to_kind = builder.Finish();\n+  DCHECK_OK(name_to_kind.Validate());\n+  return name_to_kind;\n+}\n+\n+Kind::type Kind::FromTag(const std::shared_ptr<const KeyValueMetadata>& tag) {\n+  static internal::Trie name_to_kind = MakeFromTagTrie();\n+  DCHECK_NE(tag->FindKey(\"json_kind\"), -1);\n+  util::string_view name = tag->value(tag->FindKey(\"json_kind\"));\n+  DCHECK_NE(name_to_kind.Find(name), -1);\n+  return static_cast<Kind::type>(name_to_kind.Find(name));\n+}\n+\n+Status Kind::ForType(const DataType& type, Kind::type* kind) {\n+  struct {\n+    Status Visit(const NullType&) { return SetKind(Kind::kNull); }\n+    Status Visit(const BooleanType&) { return SetKind(Kind::kBoolean); }\n+    Status Visit(const Number&) { return SetKind(Kind::kNumber); }\n+    Status Visit(const TimeType&) { return SetKind(Kind::kNumber); }\n+    Status Visit(const DateType&) { return SetKind(Kind::kNumber); }\n+    Status Visit(const BinaryType&) { return SetKind(Kind::kString); }\n+    Status Visit(const FixedSizeBinaryType&) { return SetKind(Kind::kString); }\n+    Status Visit(const DictionaryType& dict_type) {\n+      return Kind::ForType(*dict_type.dictionary()->type(), kind_);\n+    }\n+    Status Visit(const ListType&) { return SetKind(Kind::kArray); }\n+    Status Visit(const StructType&) { return SetKind(Kind::kObject); }\n+    Status Visit(const DataType& not_impl) {\n+      return Status::NotImplemented(\"JSON parsing of \", not_impl);\n+    }\n+    Status SetKind(Kind::type kind) {\n+      *kind_ = kind;\n+      return Status::OK();\n+    }\n+    Kind::type* kind_;\n+  } visitor = {kind};\n+  return VisitTypeInline(type, &visitor);\n }\n \n /// Similar to StringBuilder, but appends bytes into the provided buffer without\n /// resizing. This builder does not support appending nulls.\n \n Review comment:\n   Hmm... out of curiosity, is it the same thing as `StringBuilder` + `ReserveData` + unsafe appends?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-15T13:46:49.688+0000",
                    "updated": "2019-04-15T13:46:49.688+0000",
                    "started": "2019-04-15T13:46:49.688+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "227697",
                    "issueId": "13218483"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218483/worklog/227698",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4148: ARROW-4708: [C++] refactoring JSON parser to prepare for multithreaded impl\nURL: https://github.com/apache/arrow/pull/4148#discussion_r275365761\n \n \n\n ##########\n File path: cpp/src/arrow/json/chunker-test.cc\n ##########\n @@ -41,89 +37,92 @@ namespace json {\n using util::string_view;\n \n template <typename Lines>\n-std::string join(Lines&& lines, std::string delimiter) {\n-  std::string joined;\n+static std::shared_ptr<Buffer> join(Lines&& lines, std::string delimiter) {\n+  std::shared_ptr<Buffer> joined;\n+  BufferVector line_buffers;\n+  auto delimiter_buffer = std::make_shared<Buffer>(delimiter);\n   for (const auto& line : lines) {\n-    joined += line + delimiter;\n+    line_buffers.push_back(std::make_shared<Buffer>(line));\n+    line_buffers.push_back(delimiter_buffer);\n   }\n+  ABORT_NOT_OK(ConcatenateBuffers(line_buffers, default_memory_pool(), &joined));\n   return joined;\n }\n \n-std::string PrettyPrint(string_view one_line) {\n-  rapidjson::Document document;\n-  document.Parse(one_line.data());\n-  rapidjson::StringBuffer sb;\n-  rapidjson::PrettyWriter<rapidjson::StringBuffer> writer(sb);\n-  document.Accept(writer);\n-  return sb.GetString();\n+static string_view View(const std::shared_ptr<Buffer>& buffer) {\n+  return string_view(reinterpret_cast<const char*>(buffer->data()), buffer->size());\n }\n \n-bool WhitespaceOnly(string_view s) {\n+static bool WhitespaceOnly(string_view s) {\n   return s.find_first_not_of(\" \\t\\r\\n\") == string_view::npos;\n }\n \n-std::size_t ConsumeWholeObject(string_view* str) {\n-  auto fail = [str] {\n-    *str = string_view();\n+static bool WhitespaceOnly(const std::shared_ptr<Buffer>& b) {\n+  return WhitespaceOnly(View(b));\n+}\n+\n+static std::size_t ConsumeWholeObject(std::shared_ptr<Buffer>* buf) {\n+  auto str = View(*buf);\n+  auto fail = [buf] {\n+    *buf = nullptr;\n     return string_view::npos;\n   };\n-  if (WhitespaceOnly(*str)) return fail();\n-  auto open_brace = str->find_first_not_of(\" \\t\\r\\n\");\n-  if (str->at(open_brace) != '{') return fail();\n-  auto close_brace = str->find_first_of(\"}\");\n+  if (WhitespaceOnly(str)) return fail();\n+  auto open_brace = str.find_first_not_of(\" \\t\\r\\n\");\n+  if (str.at(open_brace) != '{') return fail();\n+  auto close_brace = str.find_first_of(\"}\");\n   if (close_brace == string_view::npos) return fail();\n-  if (str->at(close_brace) != '}') return fail();\n+  if (str.at(close_brace) != '}') return fail();\n   auto length = close_brace + 1;\n-  *str = str->substr(length);\n+  *buf = SliceBuffer(*buf, length);\n   return length;\n }\n \n-void AssertWholeObjects(Chunker& chunker, string_view block, int expected_count) {\n-  string_view whole;\n-  ASSERT_OK(chunker.Process(block, &whole));\n+void AssertWholeObjects(Chunker& chunker, const std::shared_ptr<Buffer>& block,\n+                        int expected_count) {\n+  std::shared_ptr<Buffer> whole, partial;\n+  ASSERT_OK(chunker.Process(block, &whole, &partial));\n   int count = 0;\n-  while (!WhitespaceOnly(whole)) {\n+  while (whole && !WhitespaceOnly(whole)) {\n     if (ConsumeWholeObject(&whole) == string_view::npos) FAIL();\n     ++count;\n   }\n   ASSERT_EQ(count, expected_count);\n }\n \n-void AssertChunking(Chunker& chunker, std::string str, int total_count) {\n+void AssertChunking(Chunker& chunker, std::shared_ptr<Buffer> buf, int total_count) {\n   // First chunkize whole JSON block\n-  AssertWholeObjects(chunker, str, total_count);\n+  AssertWholeObjects(chunker, buf, total_count);\n \n   // Then chunkize incomplete substrings of the block\n-  for (int i = 0; i != total_count; ++i) {\n+  for (int i = 0; i < total_count; ++i) {\n     // ensure shearing the closing brace off the last object causes it to be chunked out\n-    string_view str_view(str);\n-    auto last_brace = str_view.find_last_of('}');\n-    AssertWholeObjects(chunker, str.substr(0, last_brace), total_count - i - 1);\n+    auto last_brace = View(buf).find_last_of('}');\n+    AssertWholeObjects(chunker, SliceBuffer(buf, 0, last_brace), total_count - i - 1);\n \n     // ensure skipping one object reduces the count by one\n-    ASSERT_NE(ConsumeWholeObject(&str_view), string_view::npos);\n-    str = str_view.to_string();\n-    AssertWholeObjects(chunker, str, total_count - i - 1);\n+    ASSERT_NE(ConsumeWholeObject(&buf), string_view::npos);\n+    AssertWholeObjects(chunker, buf, total_count - i - 1);\n   }\n }\n \n-void AssertStraddledChunking(Chunker& chunker, string_view str) {\n-  auto first_half = str.substr(0, str.size() / 2).to_string();\n-  auto second_half = str.substr(str.size() / 2);\n+void AssertStraddledChunking(Chunker& chunker, const std::shared_ptr<Buffer>& buf) {\n+  auto first_half = SliceBuffer(buf, 0, buf->size() / 2);\n+  auto second_half = SliceBuffer(buf, buf->size() / 2);\n   AssertChunking(chunker, first_half, 1);\n-  string_view first_whole;\n-  ASSERT_OK(chunker.Process(first_half, &first_whole));\n-  ASSERT_TRUE(string_view(first_half).starts_with(first_whole));\n-  auto partial = string_view(first_half).substr(first_whole.size());\n-  string_view completion;\n-  ASSERT_OK(chunker.Process(partial, second_half, &completion));\n-  ASSERT_TRUE(second_half.starts_with(completion));\n-  auto straddling = partial.to_string() + completion.to_string();\n-  string_view straddling_view(straddling);\n-  auto length = ConsumeWholeObject(&straddling_view);\n+  std::shared_ptr<Buffer> first_whole, partial;\n+  ASSERT_OK(chunker.Process(first_half, &first_whole, &partial));\n+  ASSERT_TRUE(View(first_half).starts_with(View(first_whole)));\n+  std::shared_ptr<Buffer> completion, rest;\n+  ASSERT_OK(chunker.Process(partial, second_half, &completion, &rest));\n+  ASSERT_TRUE(View(second_half).starts_with(View(completion)));\n+  std::shared_ptr<Buffer> straddling;\n+  ASSERT_OK(\n+      ConcatenateBuffers({partial, completion}, default_memory_pool(), &straddling));\n+  auto length = ConsumeWholeObject(&straddling);\n   ASSERT_NE(length, string_view::npos);\n   ASSERT_NE(length, 0);\n-  auto final_whole = second_half.substr(completion.size());\n+  auto final_whole = SliceBuffer(second_half, completion->size());\n \n Review comment:\n   This is supposed to be equal to `rest`, right?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-15T13:46:49.845+0000",
                    "updated": "2019-04-15T13:46:49.845+0000",
                    "started": "2019-04-15T13:46:49.845+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "227698",
                    "issueId": "13218483"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218483/worklog/227699",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4148: ARROW-4708: [C++] refactoring JSON parser to prepare for multithreaded impl\nURL: https://github.com/apache/arrow/pull/4148#discussion_r275356079\n \n \n\n ##########\n File path: cpp/src/arrow/json/parser.cc\n ##########\n @@ -967,40 +1048,37 @@ class Handler<UnexpectedFieldBehavior::InferType> : public HandlerBase {\n   }\n };\n \n-BlockParser::BlockParser(MemoryPool* pool, ParseOptions options,\n-                         const std::shared_ptr<Buffer>& scalar_storage)\n+BlockParser::BlockParser(MemoryPool* pool, const ParseOptions& options,\n+                         const std::shared_ptr<ResizableBuffer>& scalar_storage)\n     : pool_(pool), options_(options) {\n   DCHECK(options_.unexpected_field_behavior == UnexpectedFieldBehavior::InferType ||\n          options_.explicit_schema != nullptr);\n   switch (options_.unexpected_field_behavior) {\n     case UnexpectedFieldBehavior::Ignore: {\n       auto handler = internal::make_unique<Handler<UnexpectedFieldBehavior::Ignore>>(\n           pool_, scalar_storage);\n-      // FIXME(bkietz) move this to an Initialize()\n-      ARROW_IGNORE_EXPR(handler->SetSchema(*options_.explicit_schema));\n+      ARROW_IGNORE_EXPR(handler->Init(options_.explicit_schema));\n \n Review comment:\n   Errors should definitely not be ignored. Switching to a static factory function could be a solution. Please at least add a TODO for this.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-15T13:46:49.850+0000",
                    "updated": "2019-04-15T13:46:49.850+0000",
                    "started": "2019-04-15T13:46:49.850+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "227699",
                    "issueId": "13218483"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218483/worklog/227700",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4148: ARROW-4708: [C++] refactoring JSON parser to prepare for multithreaded impl\nURL: https://github.com/apache/arrow/pull/4148#discussion_r275358562\n \n \n\n ##########\n File path: cpp/src/arrow/json/chunker.cc\n ##########\n @@ -46,53 +43,65 @@ namespace json {\n using internal::make_unique;\n using util::string_view;\n \n-Status StraddlingTooLarge() {\n+static string_view View(const std::shared_ptr<Buffer>& buffer) {\n \n Review comment:\n   `ViewFromBuffer`, for clarity?\r\n   (perhaps this could also be a conversion operator in the `Buffer` class...)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-15T13:46:49.897+0000",
                    "updated": "2019-04-15T13:46:49.897+0000",
                    "started": "2019-04-15T13:46:49.896+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "227700",
                    "issueId": "13218483"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218483/worklog/227701",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4148: ARROW-4708: [C++] refactoring JSON parser to prepare for multithreaded impl\nURL: https://github.com/apache/arrow/pull/4148#discussion_r275357744\n \n \n\n ##########\n File path: cpp/src/arrow/json/chunker.h\n ##########\n @@ -41,17 +42,23 @@ class ARROW_EXPORT Chunker {\n \n   /// \\brief Carve up a chunk in a block of data to contain only whole objects\n   /// \\param[in] block json data to be chunked\n-  /// \\param[out] chunked subrange of block containing whole json objects\n-  virtual Status Process(util::string_view block, util::string_view* chunked) = 0;\n+  /// \\param[out] whole subrange of block containing whole json objects\n+  /// \\param[out] partial subrange of block a partial json object\n+  virtual Status Process(const std::shared_ptr<Buffer>& block,\n+                         std::shared_ptr<Buffer>* whole,\n+                         std::shared_ptr<Buffer>* partial) = 0;\n \n   /// \\brief Carve the completion of a partial object out of a block\n   /// \\param[in] partial incomplete json object\n   /// \\param[in] block json data\n-  /// \\param[out] completion subrange of block contining the completion of partial\n-  virtual Status Process(util::string_view partial, util::string_view block,\n-                         util::string_view* completion) = 0;\n+  /// \\param[out] completion subrange of block containing the completion of partial\n+  /// \\param[out] rest subrange of block containing what completion does not cover\n+  virtual Status Process(const std::shared_ptr<Buffer>& partial,\n \n Review comment:\n   Since this overload is doing something different than the other `Process` method, perhaps give it a different name (say `ProcessPartial`?).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-15T13:46:49.925+0000",
                    "updated": "2019-04-15T13:46:49.925+0000",
                    "started": "2019-04-15T13:46:49.925+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "227701",
                    "issueId": "13218483"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218483/worklog/227702",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4148: ARROW-4708: [C++] refactoring JSON parser to prepare for multithreaded impl\nURL: https://github.com/apache/arrow/pull/4148#discussion_r275362117\n \n \n\n ##########\n File path: cpp/src/arrow/json/chunker-test.cc\n ##########\n @@ -41,89 +37,92 @@ namespace json {\n using util::string_view;\n \n template <typename Lines>\n-std::string join(Lines&& lines, std::string delimiter) {\n-  std::string joined;\n+static std::shared_ptr<Buffer> join(Lines&& lines, std::string delimiter) {\n+  std::shared_ptr<Buffer> joined;\n+  BufferVector line_buffers;\n+  auto delimiter_buffer = std::make_shared<Buffer>(delimiter);\n   for (const auto& line : lines) {\n-    joined += line + delimiter;\n+    line_buffers.push_back(std::make_shared<Buffer>(line));\n+    line_buffers.push_back(delimiter_buffer);\n   }\n+  ABORT_NOT_OK(ConcatenateBuffers(line_buffers, default_memory_pool(), &joined));\n   return joined;\n }\n \n-std::string PrettyPrint(string_view one_line) {\n-  rapidjson::Document document;\n-  document.Parse(one_line.data());\n-  rapidjson::StringBuffer sb;\n-  rapidjson::PrettyWriter<rapidjson::StringBuffer> writer(sb);\n-  document.Accept(writer);\n-  return sb.GetString();\n+static string_view View(const std::shared_ptr<Buffer>& buffer) {\n+  return string_view(reinterpret_cast<const char*>(buffer->data()), buffer->size());\n }\n \n-bool WhitespaceOnly(string_view s) {\n+static bool WhitespaceOnly(string_view s) {\n   return s.find_first_not_of(\" \\t\\r\\n\") == string_view::npos;\n }\n \n-std::size_t ConsumeWholeObject(string_view* str) {\n-  auto fail = [str] {\n-    *str = string_view();\n+static bool WhitespaceOnly(const std::shared_ptr<Buffer>& b) {\n+  return WhitespaceOnly(View(b));\n+}\n+\n+static std::size_t ConsumeWholeObject(std::shared_ptr<Buffer>* buf) {\n+  auto str = View(*buf);\n+  auto fail = [buf] {\n+    *buf = nullptr;\n     return string_view::npos;\n   };\n-  if (WhitespaceOnly(*str)) return fail();\n-  auto open_brace = str->find_first_not_of(\" \\t\\r\\n\");\n-  if (str->at(open_brace) != '{') return fail();\n-  auto close_brace = str->find_first_of(\"}\");\n+  if (WhitespaceOnly(str)) return fail();\n+  auto open_brace = str.find_first_not_of(\" \\t\\r\\n\");\n+  if (str.at(open_brace) != '{') return fail();\n+  auto close_brace = str.find_first_of(\"}\");\n   if (close_brace == string_view::npos) return fail();\n-  if (str->at(close_brace) != '}') return fail();\n+  if (str.at(close_brace) != '}') return fail();\n \n Review comment:\n   I don't think this can happen.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-15T13:46:49.927+0000",
                    "updated": "2019-04-15T13:46:49.927+0000",
                    "started": "2019-04-15T13:46:49.927+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "227702",
                    "issueId": "13218483"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 52800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6384fa35[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@60fedb62[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@25b7c5b1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@33842fae[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3d1745a7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6a11cdb9[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@71101707[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@63fbafd4[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@64c6f471[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5e9155[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@71871676[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4f3c929d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 52800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Apr 17 14:47:42 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-04-17T14:47:42.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4708/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-02-27T23:17:45.000+0000",
        "updated": "2019-06-03T14:46:11.000+0000",
        "timeoriginalestimate": null,
        "description": "The JSON reader currently only parses from a single, contiguous buffer and only in a single thread. This would be much more useful if it supported multithreaded parsing from a stream, as CSV does",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "14h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 52800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Add multithreaded JSON reader ",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218483/comment/16820148",
                    "id": "16820148",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 4148\n[https://github.com/apache/arrow/pull/4148]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-04-17T14:47:42.955+0000",
                    "updated": "2019-04-17T14:47:42.955+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z005uw:",
        "customfield_12314139": null
    }
}