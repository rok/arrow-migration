{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13418053",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418053",
    "key": "ARROW-15138",
    "fields": {
        "parent": {
            "id": "13405079",
            "key": "ARROW-14233",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13405079",
            "fields": {
                "summary": "[C++] Improve ExecPlan::ToString",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                    "description": "The issue is open and ready for the assignee to start work on it.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                    "name": "Open",
                    "id": "1",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                        "id": 2,
                        "key": "new",
                        "colorName": "blue-gray",
                        "name": "To Do"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                    "id": "4",
                    "description": "An improvement or enhancement to an existing feature or task.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                    "name": "Improvement",
                    "subtask": false,
                    "avatarId": 21140
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "compute",
            "engine",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ArianaVillegas",
            "name": "ArianaVillegas",
            "key": "JIRAUSER280694",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER280694&avatarId=50269",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER280694&avatarId=50269",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER280694&avatarId=50269",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER280694&avatarId=50269"
            },
            "displayName": "Ariana Villegas",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=aucahuasi",
            "name": "aucahuasi",
            "key": "aucahuasi",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=aucahuasi&avatarId=47450",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=aucahuasi&avatarId=47450",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=aucahuasi&avatarId=47450",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=aucahuasi&avatarId=47450"
            },
            "displayName": "Percy Camilo Trive\u00f1o Aucahuasi",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=aucahuasi",
            "name": "aucahuasi",
            "key": "aucahuasi",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=aucahuasi&avatarId=47450",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=aucahuasi&avatarId=47450",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=aucahuasi&avatarId=47450",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=aucahuasi&avatarId=47450"
            },
            "displayName": "Percy Camilo Trive\u00f1o Aucahuasi",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15138/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 22,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418053/worklog/700294",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ArianaVillegas opened a new pull request #12031:\nURL: https://github.com/apache/arrow/pull/12031\n\n\n   Add indentation to ToString() function in ExecPlan. \r\n   \r\n   For example if we have the following graph of execution plan:\r\n   ![image](https://user-images.githubusercontent.com/40250321/147159958-79ad4ad4-db3d-435e-bf01-bb5ea1162730.png)\r\n   \r\n   The execution plan string will be:\r\n   ```\r\n   6 node\r\n       5 node\r\n            4 node\r\n                2 node\r\n            3 node\r\n                2 node\r\n                1 node\r\n   ```\r\n    \r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-22T22:06:07.493+0000",
                    "updated": "2021-12-22T22:06:07.493+0000",
                    "started": "2021-12-22T22:06:07.493+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "700294",
                    "issueId": "13418053"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418053/worklog/700296",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12031:\nURL: https://github.com/apache/arrow/pull/12031#issuecomment-999908643\n\n\n   https://issues.apache.org/jira/browse/ARROW-15138\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-22T22:06:22.890+0000",
                    "updated": "2021-12-22T22:06:22.890+0000",
                    "started": "2021-12-22T22:06:22.890+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "700296",
                    "issueId": "13418053"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418053/worklog/700309",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ArianaVillegas commented on pull request #12031:\nURL: https://github.com/apache/arrow/pull/12031#issuecomment-999915435\n\n\n   @aucahuasi @lidavidm \r\n   cc @westonpace \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-22T22:21:15.051+0000",
                    "updated": "2021-12-22T22:21:15.051+0000",
                    "started": "2021-12-22T22:21:15.051+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "700309",
                    "issueId": "13418053"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418053/worklog/700658",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #12031:\nURL: https://github.com/apache/arrow/pull/12031#discussion_r774585813\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/exec_plan.cc\n##########\n@@ -157,11 +157,46 @@ struct ExecPlanImpl : public ExecPlan {\n     return std::move(Impl{nodes_}.sorted);\n   }\n \n+  std::pair<NodeVector, std::vector<int>> OrderedNodes() const {\n+    struct Impl {\n+      const std::vector<std::unique_ptr<ExecNode>>& nodes;\n+      std::unordered_set<ExecNode*> visited;\n+      NodeVector sorted;\n+      std::vector<int> indents;\n+\n+      explicit Impl(const std::vector<std::unique_ptr<ExecNode>>& nodes) : nodes(nodes) {\n+        visited.reserve(nodes.size());\n+\n+        for (auto it = nodes.rbegin(); it != nodes.rend(); ++it) {\n+          if (visited.count(it->get()) != 0) return;\n\nReview comment:\n       Hmm, should this be `continue;` not `return;`?\n\n##########\nFile path: cpp/src/arrow/compute/exec/exec_plan.cc\n##########\n@@ -157,11 +157,46 @@ struct ExecPlanImpl : public ExecPlan {\n     return std::move(Impl{nodes_}.sorted);\n   }\n \n+  std::pair<NodeVector, std::vector<int>> OrderedNodes() const {\n+    struct Impl {\n+      const std::vector<std::unique_ptr<ExecNode>>& nodes;\n+      std::unordered_set<ExecNode*> visited;\n+      NodeVector sorted;\n+      std::vector<int> indents;\n+\n+      explicit Impl(const std::vector<std::unique_ptr<ExecNode>>& nodes) : nodes(nodes) {\n+        visited.reserve(nodes.size());\n+\n+        for (auto it = nodes.rbegin(); it != nodes.rend(); ++it) {\n+          if (visited.count(it->get()) != 0) return;\n+          Visit(it->get());\n+        }\n+\n+        DCHECK_EQ(visited.size(), nodes.size());\n+      }\n+\n+      void Visit(ExecNode* node, int indent = 0) {\n+        for (auto input : node->inputs()) {\n+          Visit(input, indent + 1);\n+        }\n+\n+        indents.push_back(indent);\n+        sorted.push_back(node);\n+        visited.insert(node);\n+      }\n+    };\n+\n+    auto result = Impl{nodes_};\n\nReview comment:\n       Should this be `TopoSort()`? It seems `nodes_` reflects the order that nodes were added to the plan, which probably, but not necessarily, corresponds with direction of data flow.\n\n##########\nFile path: cpp/src/arrow/compute/exec/exec_plan.cc\n##########\n@@ -157,11 +157,46 @@ struct ExecPlanImpl : public ExecPlan {\n     return std::move(Impl{nodes_}.sorted);\n   }\n \n+  std::pair<NodeVector, std::vector<int>> OrderedNodes() const {\n+    struct Impl {\n+      const std::vector<std::unique_ptr<ExecNode>>& nodes;\n+      std::unordered_set<ExecNode*> visited;\n+      NodeVector sorted;\n+      std::vector<int> indents;\n+\n+      explicit Impl(const std::vector<std::unique_ptr<ExecNode>>& nodes) : nodes(nodes) {\n+        visited.reserve(nodes.size());\n+\n+        for (auto it = nodes.rbegin(); it != nodes.rend(); ++it) {\n+          if (visited.count(it->get()) != 0) return;\n\nReview comment:\n       I suppose it'd only matter if we have something like two sink nodes (which may be an odd case).\n\n##########\nFile path: cpp/src/arrow/compute/exec/plan_test.cc\n##########\n@@ -374,13 +374,13 @@ custom_sink_label:OrderBySinkNode{inputs=[collected=:FilterNode], by={sort_keys=\n           })\n           .AddToPlan(plan.get()));\n   EXPECT_EQ(plan->ToString(), R\"a(ExecPlan with 5 nodes:\n-lhs:SourceNode{outputs=[:UnionNode]}\n-rhs:SourceNode{outputs=[:UnionNode]}\n-:UnionNode{inputs=[input_0_label=lhs:SourceNode, input_1_label=rhs:SourceNode], outputs=[:ScalarAggregateNode]}\n-:ScalarAggregateNode{inputs=[target=:UnionNode], outputs=[:SinkNode], aggregates=[\n+:SinkNode{inputs=[collected=:ScalarAggregateNode]}\n+  :ScalarAggregateNode{inputs=[target=:UnionNode], outputs=[:SinkNode], aggregates=[\n \tcount(i32, {mode=NON_NULL}),\n ]}\n-:SinkNode{inputs=[collected=:ScalarAggregateNode]}\n+    :UnionNode{inputs=[input_0_label=lhs:SourceNode, input_1_label=rhs:SourceNode], outputs=[:ScalarAggregateNode]}\n\nReview comment:\n       Do we still want to print `inputs` and `outputs` for every node?\n\n##########\nFile path: cpp/src/arrow/compute/exec/exec_plan.cc\n##########\n@@ -157,11 +157,46 @@ struct ExecPlanImpl : public ExecPlan {\n     return std::move(Impl{nodes_}.sorted);\n   }\n \n+  std::pair<NodeVector, std::vector<int>> OrderedNodes() const {\n+    struct Impl {\n+      const std::vector<std::unique_ptr<ExecNode>>& nodes;\n+      std::unordered_set<ExecNode*> visited;\n+      NodeVector sorted;\n+      std::vector<int> indents;\n+\n+      explicit Impl(const std::vector<std::unique_ptr<ExecNode>>& nodes) : nodes(nodes) {\n+        visited.reserve(nodes.size());\n+\n+        for (auto it = nodes.rbegin(); it != nodes.rend(); ++it) {\n+          if (visited.count(it->get()) != 0) return;\n+          Visit(it->get());\n+        }\n+\n+        DCHECK_EQ(visited.size(), nodes.size());\n+      }\n+\n+      void Visit(ExecNode* node, int indent = 0) {\n+        for (auto input : node->inputs()) {\n+          Visit(input, indent + 1);\n\nReview comment:\n       Should we also check that `input` is not in `visited` just to ensure we don't get trapped if there is somehow a cycle?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-23T14:00:24.819+0000",
                    "updated": "2021-12-23T14:00:24.819+0000",
                    "started": "2021-12-23T14:00:24.818+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "700658",
                    "issueId": "13418053"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418053/worklog/700869",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ArianaVillegas commented on a change in pull request #12031:\nURL: https://github.com/apache/arrow/pull/12031#discussion_r774807237\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/exec_plan.cc\n##########\n@@ -157,11 +157,46 @@ struct ExecPlanImpl : public ExecPlan {\n     return std::move(Impl{nodes_}.sorted);\n   }\n \n+  std::pair<NodeVector, std::vector<int>> OrderedNodes() const {\n+    struct Impl {\n+      const std::vector<std::unique_ptr<ExecNode>>& nodes;\n+      std::unordered_set<ExecNode*> visited;\n+      NodeVector sorted;\n+      std::vector<int> indents;\n+\n+      explicit Impl(const std::vector<std::unique_ptr<ExecNode>>& nodes) : nodes(nodes) {\n+        visited.reserve(nodes.size());\n+\n+        for (auto it = nodes.rbegin(); it != nodes.rend(); ++it) {\n+          if (visited.count(it->get()) != 0) return;\n\nReview comment:\n       Yes, I think we should take care of odd cases too. I'll change it.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-23T23:09:31.547+0000",
                    "updated": "2021-12-23T23:09:31.547+0000",
                    "started": "2021-12-23T23:09:31.547+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "700869",
                    "issueId": "13418053"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418053/worklog/700870",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ArianaVillegas commented on a change in pull request #12031:\nURL: https://github.com/apache/arrow/pull/12031#discussion_r774809343\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/exec_plan.cc\n##########\n@@ -157,11 +157,46 @@ struct ExecPlanImpl : public ExecPlan {\n     return std::move(Impl{nodes_}.sorted);\n   }\n \n+  std::pair<NodeVector, std::vector<int>> OrderedNodes() const {\n+    struct Impl {\n+      const std::vector<std::unique_ptr<ExecNode>>& nodes;\n+      std::unordered_set<ExecNode*> visited;\n+      NodeVector sorted;\n+      std::vector<int> indents;\n+\n+      explicit Impl(const std::vector<std::unique_ptr<ExecNode>>& nodes) : nodes(nodes) {\n+        visited.reserve(nodes.size());\n+\n+        for (auto it = nodes.rbegin(); it != nodes.rend(); ++it) {\n+          if (visited.count(it->get()) != 0) return;\n+          Visit(it->get());\n+        }\n+\n+        DCHECK_EQ(visited.size(), nodes.size());\n+      }\n+\n+      void Visit(ExecNode* node, int indent = 0) {\n+        for (auto input : node->inputs()) {\n+          Visit(input, indent + 1);\n+        }\n+\n+        indents.push_back(indent);\n+        sorted.push_back(node);\n+        visited.insert(node);\n+      }\n+    };\n+\n+    auto result = Impl{nodes_};\n\nReview comment:\n       I think it is not necessary because the function OrderedNodes() is a variant of TopoSort (), so with that, it should reflect the direction of data flow.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-23T23:21:36.727+0000",
                    "updated": "2021-12-23T23:21:36.727+0000",
                    "started": "2021-12-23T23:21:36.727+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "700870",
                    "issueId": "13418053"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418053/worklog/700879",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ArianaVillegas commented on a change in pull request #12031:\nURL: https://github.com/apache/arrow/pull/12031#discussion_r774813812\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/plan_test.cc\n##########\n@@ -374,13 +374,13 @@ custom_sink_label:OrderBySinkNode{inputs=[collected=:FilterNode], by={sort_keys=\n           })\n           .AddToPlan(plan.get()));\n   EXPECT_EQ(plan->ToString(), R\"a(ExecPlan with 5 nodes:\n-lhs:SourceNode{outputs=[:UnionNode]}\n-rhs:SourceNode{outputs=[:UnionNode]}\n-:UnionNode{inputs=[input_0_label=lhs:SourceNode, input_1_label=rhs:SourceNode], outputs=[:ScalarAggregateNode]}\n-:ScalarAggregateNode{inputs=[target=:UnionNode], outputs=[:SinkNode], aggregates=[\n+:SinkNode{inputs=[collected=:ScalarAggregateNode]}\n+  :ScalarAggregateNode{inputs=[target=:UnionNode], outputs=[:SinkNode], aggregates=[\n \tcount(i32, {mode=NON_NULL}),\n ]}\n-:SinkNode{inputs=[collected=:ScalarAggregateNode]}\n+    :UnionNode{inputs=[input_0_label=lhs:SourceNode, input_1_label=rhs:SourceNode], outputs=[:ScalarAggregateNode]}\n\nReview comment:\n       I think we don't need it anymore because indentation gives us an idea about which nodes are inputs and ouputs.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-23T23:46:00.659+0000",
                    "updated": "2021-12-23T23:46:00.659+0000",
                    "started": "2021-12-23T23:46:00.659+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "700879",
                    "issueId": "13418053"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418053/worklog/700885",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ArianaVillegas commented on a change in pull request #12031:\nURL: https://github.com/apache/arrow/pull/12031#discussion_r774819817\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/exec_plan.cc\n##########\n@@ -157,11 +157,46 @@ struct ExecPlanImpl : public ExecPlan {\n     return std::move(Impl{nodes_}.sorted);\n   }\n \n+  std::pair<NodeVector, std::vector<int>> OrderedNodes() const {\n+    struct Impl {\n+      const std::vector<std::unique_ptr<ExecNode>>& nodes;\n+      std::unordered_set<ExecNode*> visited;\n+      NodeVector sorted;\n+      std::vector<int> indents;\n+\n+      explicit Impl(const std::vector<std::unique_ptr<ExecNode>>& nodes) : nodes(nodes) {\n+        visited.reserve(nodes.size());\n+\n+        for (auto it = nodes.rbegin(); it != nodes.rend(); ++it) {\n+          if (visited.count(it->get()) != 0) return;\n+          Visit(it->get());\n+        }\n+\n+        DCHECK_EQ(visited.size(), nodes.size());\n+      }\n+\n+      void Visit(ExecNode* node, int indent = 0) {\n+        for (auto input : node->inputs()) {\n+          Visit(input, indent + 1);\n\nReview comment:\n       Is it possible to have a cycle? It sounds interesting, can you give me an example, please?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-24T00:22:01.785+0000",
                    "updated": "2021-12-24T00:22:01.785+0000",
                    "started": "2021-12-24T00:22:01.784+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "700885",
                    "issueId": "13418053"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418053/worklog/700889",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #12031:\nURL: https://github.com/apache/arrow/pull/12031#discussion_r774824053\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/exec_plan.cc\n##########\n@@ -157,11 +157,46 @@ struct ExecPlanImpl : public ExecPlan {\n     return std::move(Impl{nodes_}.sorted);\n   }\n \n+  std::pair<NodeVector, std::vector<int>> OrderedNodes() const {\n+    struct Impl {\n+      const std::vector<std::unique_ptr<ExecNode>>& nodes;\n+      std::unordered_set<ExecNode*> visited;\n+      NodeVector sorted;\n+      std::vector<int> indents;\n+\n+      explicit Impl(const std::vector<std::unique_ptr<ExecNode>>& nodes) : nodes(nodes) {\n+        visited.reserve(nodes.size());\n+\n+        for (auto it = nodes.rbegin(); it != nodes.rend(); ++it) {\n+          if (visited.count(it->get()) != 0) return;\n+          Visit(it->get());\n+        }\n+\n+        DCHECK_EQ(visited.size(), nodes.size());\n+      }\n+\n+      void Visit(ExecNode* node, int indent = 0) {\n+        for (auto input : node->inputs()) {\n+          Visit(input, indent + 1);\n\nReview comment:\n       It should not be possible, but I don't think anything really checks for this, so the suggestion is just to be cautious. It's not strictly required, though, just a suggestion.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-24T00:48:28.056+0000",
                    "updated": "2021-12-24T00:48:28.056+0000",
                    "started": "2021-12-24T00:48:28.056+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "700889",
                    "issueId": "13418053"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418053/worklog/702362",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12031:\nURL: https://github.com/apache/arrow/pull/12031#discussion_r776816593\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/plan_test.cc\n##########\n@@ -301,11 +301,11 @@ TEST(ExecPlan, ToString) {\n                     {\"sink\", SinkNodeOptions{&sink_gen}},\n                 })\n                 .AddToPlan(plan.get()));\n-  EXPECT_EQ(plan->sources()[0]->ToString(), R\"(:SourceNode{outputs=[:SinkNode]})\");\n-  EXPECT_EQ(plan->sinks()[0]->ToString(), R\"(:SinkNode{inputs=[collected=:SourceNode]})\");\n+  EXPECT_EQ(plan->sources()[0]->ToString(), R\"(:SourceNode{})\");\n+  EXPECT_EQ(plan->sinks()[0]->ToString(), R\"(:SinkNode{})\");\n   EXPECT_EQ(plan->ToString(), R\"(ExecPlan with 2 nodes:\n-:SourceNode{outputs=[:SinkNode]}\n-:SinkNode{inputs=[collected=:SourceNode]}\n+:SinkNode{}\n+  :SourceNode{}\n\nReview comment:\n       I'm curious, why are there colons at the start of the nodes?\n\n##########\nFile path: cpp/src/arrow/compute/exec/exec_plan.cc\n##########\n@@ -157,11 +157,50 @@ struct ExecPlanImpl : public ExecPlan {\n     return std::move(Impl{nodes_}.sorted);\n   }\n \n+  std::pair<NodeVector, std::vector<int>> OrderedNodes() const {\n\nReview comment:\n       What does this do, is this different from the topological sort above? In any case, please add a comment describing this (what does it return?).\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-30T17:41:32.846+0000",
                    "updated": "2021-12-30T17:41:32.846+0000",
                    "started": "2021-12-30T17:41:32.846+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "702362",
                    "issueId": "13418053"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418053/worklog/702496",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ArianaVillegas commented on pull request #12031:\nURL: https://github.com/apache/arrow/pull/12031#issuecomment-1003225341\n\n\n   @pitrou, I add a comment to describe this function\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-31T00:45:43.597+0000",
                    "updated": "2021-12-31T00:45:43.597+0000",
                    "started": "2021-12-31T00:45:43.596+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "702496",
                    "issueId": "13418053"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418053/worklog/702497",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ArianaVillegas commented on a change in pull request #12031:\nURL: https://github.com/apache/arrow/pull/12031#discussion_r776899565\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/plan_test.cc\n##########\n@@ -301,11 +301,11 @@ TEST(ExecPlan, ToString) {\n                     {\"sink\", SinkNodeOptions{&sink_gen}},\n                 })\n                 .AddToPlan(plan.get()));\n-  EXPECT_EQ(plan->sources()[0]->ToString(), R\"(:SourceNode{outputs=[:SinkNode]})\");\n-  EXPECT_EQ(plan->sinks()[0]->ToString(), R\"(:SinkNode{inputs=[collected=:SourceNode]})\");\n+  EXPECT_EQ(plan->sources()[0]->ToString(), R\"(:SourceNode{})\");\n+  EXPECT_EQ(plan->sinks()[0]->ToString(), R\"(:SinkNode{})\");\n   EXPECT_EQ(plan->ToString(), R\"(ExecPlan with 2 nodes:\n-:SourceNode{outputs=[:SinkNode]}\n-:SinkNode{inputs=[collected=:SourceNode]}\n+:SinkNode{}\n+  :SourceNode{}\n\nReview comment:\n       The format is label: kind_node, so when a node has no label, only: kind_node remains. We could prevent the colons from appearing when there is no label.\n\n##########\nFile path: cpp/src/arrow/compute/exec/plan_test.cc\n##########\n@@ -301,11 +301,11 @@ TEST(ExecPlan, ToString) {\n                     {\"sink\", SinkNodeOptions{&sink_gen}},\n                 })\n                 .AddToPlan(plan.get()));\n-  EXPECT_EQ(plan->sources()[0]->ToString(), R\"(:SourceNode{outputs=[:SinkNode]})\");\n-  EXPECT_EQ(plan->sinks()[0]->ToString(), R\"(:SinkNode{inputs=[collected=:SourceNode]})\");\n+  EXPECT_EQ(plan->sources()[0]->ToString(), R\"(:SourceNode{})\");\n+  EXPECT_EQ(plan->sinks()[0]->ToString(), R\"(:SinkNode{})\");\n   EXPECT_EQ(plan->ToString(), R\"(ExecPlan with 2 nodes:\n-:SourceNode{outputs=[:SinkNode]}\n-:SinkNode{inputs=[collected=:SourceNode]}\n+:SinkNode{}\n+  :SourceNode{}\n\nReview comment:\n       The format is label: kind_node, so when a node has no label, only: kind_node remains. We could prevent the colons from appearing when there is no label.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-31T00:45:46.449+0000",
                    "updated": "2021-12-31T00:45:46.449+0000",
                    "started": "2021-12-31T00:45:46.449+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "702497",
                    "issueId": "13418053"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418053/worklog/703074",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #12031:\nURL: https://github.com/apache/arrow/pull/12031#discussion_r777654664\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/plan_test.cc\n##########\n@@ -301,11 +301,11 @@ TEST(ExecPlan, ToString) {\n                     {\"sink\", SinkNodeOptions{&sink_gen}},\n                 })\n                 .AddToPlan(plan.get()));\n-  EXPECT_EQ(plan->sources()[0]->ToString(), R\"(:SourceNode{outputs=[:SinkNode]})\");\n-  EXPECT_EQ(plan->sinks()[0]->ToString(), R\"(:SinkNode{inputs=[collected=:SourceNode]})\");\n+  EXPECT_EQ(plan->sources()[0]->ToString(), R\"(:SourceNode{})\");\n+  EXPECT_EQ(plan->sinks()[0]->ToString(), R\"(:SinkNode{})\");\n   EXPECT_EQ(plan->ToString(), R\"(ExecPlan with 2 nodes:\n-:SourceNode{outputs=[:SinkNode]}\n-:SinkNode{inputs=[collected=:SourceNode]}\n+:SinkNode{}\n+  :SourceNode{}\n\nReview comment:\n       I would not worry about it.\r\n   \r\n   `ExecPlan::AddNode` will attach a label (auto-incrementing id counter) if none is set so there should not be any valid cases where there is no label.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-03T19:08:11.148+0000",
                    "updated": "2022-01-03T19:08:11.148+0000",
                    "started": "2022-01-03T19:08:11.148+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "703074",
                    "issueId": "13418053"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418053/worklog/703078",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #12031:\nURL: https://github.com/apache/arrow/pull/12031#issuecomment-1004306629\n\n\n   I have a test plan which is a hard-coded version of one of the TPC-H queries and, using this, I think indentation is missing in the GroupByNode's aggregates.  But, this is much better than I was getting before.  Also, it would be nice if we had some info on the hash join node's options, but that could be left for a follow-up PR as it isn't related to indentation:\r\n   \r\n   ```\r\n   10:SinkNode{}\r\n     9:GroupByNode{keys=[\"o_orderpriority\"], aggregates=[\r\n   \thash_sum(order_count, {skip_nulls=true, min_count=1}),\r\n   ]} // <-- This should be indented\r\n       8:ProjectNode{projection=[\"order_count\": 1, o_orderpriority]}\r\n         7:ProjectNode{projection=[l_orderkey, o_orderpriority]}\r\n           6:GroupByNode{keys=[\"l_orderkey\", \"o_orderpriority\"], aggregates=[\r\n   ]} // <-- This should be indented\r\n             5:ProjectNode{projection=[l_orderkey, o_orderpriority]}\r\n               4:HashJoinNode{/* would be nice to have some details here */}\r\n                 3:ProjectNode{projection=[o_orderkey, o_orderpriority]}\r\n                   2:SourceNode{}\r\n                 1:FilterNode{filter=(l_commitdate < l_receiptdate)}\r\n                   0:SourceNode{}\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-03T19:27:13.244+0000",
                    "updated": "2022-01-03T19:27:13.244+0000",
                    "started": "2022-01-03T19:27:13.244+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "703078",
                    "issueId": "13418053"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418053/worklog/703122",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ArianaVillegas commented on pull request #12031:\nURL: https://github.com/apache/arrow/pull/12031#issuecomment-1004376003\n\n\n   @westonpace, I think we can add join type in hash join nodes.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-03T21:37:12.684+0000",
                    "updated": "2022-01-03T21:37:12.684+0000",
                    "started": "2022-01-03T21:37:12.684+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "703122",
                    "issueId": "13418053"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418053/worklog/703578",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ArianaVillegas commented on pull request #12031:\nURL: https://github.com/apache/arrow/pull/12031#issuecomment-1005180841\n\n\n   I think this PR is ready to be merged. Thanks so much for your feedback.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-04T21:24:04.089+0000",
                    "updated": "2022-01-04T21:24:04.089+0000",
                    "started": "2022-01-04T21:24:04.089+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "703578",
                    "issueId": "13418053"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418053/worklog/704803",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace closed pull request #12031:\nURL: https://github.com/apache/arrow/pull/12031\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-06T21:44:12.080+0000",
                    "updated": "2022-01-06T21:44:12.080+0000",
                    "started": "2022-01-06T21:44:12.080+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "704803",
                    "issueId": "13418053"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418053/worklog/704829",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on pull request #12031:\nURL: https://github.com/apache/arrow/pull/12031#issuecomment-1007001783\n\n\n   Benchmark runs are scheduled for baseline = 1e7bfa24c579887f324982a27c0e06f6f9f5a803 and contender = e64480db51fc9622d02613f3ec60bac34d765092. e64480db51fc9622d02613f3ec60bac34d765092 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Scheduled] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/7ae812ab84b7425eaf0ba278acd0b69d...37f7dcb0c33f4b01895fe2e3068890c7/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/c77114d10e154f93a6ab7569dff54a07...c606099ce8a342fb869028700c6f0019/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/c6308aa0bcf244b899eded3b4235559f...d9415ec5d54e4a78aed84f59f692a6bb/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-06T23:09:25.930+0000",
                    "updated": "2022-01-06T23:09:25.930+0000",
                    "started": "2022-01-06T23:09:25.930+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "704829",
                    "issueId": "13418053"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418053/worklog/704843",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12031:\nURL: https://github.com/apache/arrow/pull/12031#issuecomment-1007001783\n\n\n   Benchmark runs are scheduled for baseline = 1e7bfa24c579887f324982a27c0e06f6f9f5a803 and contender = e64480db51fc9622d02613f3ec60bac34d765092. e64480db51fc9622d02613f3ec60bac34d765092 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/7ae812ab84b7425eaf0ba278acd0b69d...37f7dcb0c33f4b01895fe2e3068890c7/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/c77114d10e154f93a6ab7569dff54a07...c606099ce8a342fb869028700c6f0019/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/c6308aa0bcf244b899eded3b4235559f...d9415ec5d54e4a78aed84f59f692a6bb/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-07T00:01:35.604+0000",
                    "updated": "2022-01-07T00:01:35.604+0000",
                    "started": "2022-01-07T00:01:35.604+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "704843",
                    "issueId": "13418053"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418053/worklog/704960",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12031:\nURL: https://github.com/apache/arrow/pull/12031#issuecomment-1007001783\n\n\n   Benchmark runs are scheduled for baseline = 1e7bfa24c579887f324982a27c0e06f6f9f5a803 and contender = e64480db51fc9622d02613f3ec60bac34d765092. e64480db51fc9622d02613f3ec60bac34d765092 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/7ae812ab84b7425eaf0ba278acd0b69d...37f7dcb0c33f4b01895fe2e3068890c7/)\n   [Failed :arrow_down:0.45% :arrow_up:0.0%] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/c77114d10e154f93a6ab7569dff54a07...c606099ce8a342fb869028700c6f0019/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/c6308aa0bcf244b899eded3b4235559f...d9415ec5d54e4a78aed84f59f692a6bb/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-07T09:01:15.969+0000",
                    "updated": "2022-01-07T09:01:15.969+0000",
                    "started": "2022-01-07T09:01:15.969+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "704960",
                    "issueId": "13418053"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 13200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@af1f069[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1786b4b6[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2d67d904[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@f66eb1a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@922f3eb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@21acea26[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3290b8ee[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@a16ab9d[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1435bc9f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@528e89e5[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@65ee0c92[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5a1b19f1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13200,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Jan 06 21:44:02 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": [
            "C++"
        ],
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-01-06T21:44:02.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15138/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2021-12-16T17:32:47.000+0000",
        "updated": "2022-01-08T10:05:45.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently we have this task https://issues.apache.org/jira/browse/ARROW-14233 However, that task is very open about the scope. So this ticket will try to address some improvements for ExecPlan::ToString without the need to have additional sophistication nor to extend the scope of features for ExecPlan::ToString.\r\n\r\nThis means that we won't need to research about GraphViz (or other backends) here. We will just need to work to have these features for ExecPlan::ToString:\r\n * Print index/Id for each node\u00a0 in the physical tree\r\n * Make sure all the nodes have names and correct index/IDs\r\n * Apply indentation for the printing process (this may be an optional setting in the API)",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Make ExecPlan::ToString give some additional information",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418053/comment/17460926",
                    "id": "17460926",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "One thing that's been requested is to have a way to rebuild an exec plan printed in one language (e.g. so that we can get an ExecPlan from R into C++ for debugging).\r\n\r\nDoing that fully automatically is out of scope here (though: do we want some way to serialize an ExecPlan to/from an internal format? Or is that redundant with Substrait support?) but we should ensure all necessary data is included.\r\n\r\nFor options like indentation, we could add an (optional) options struct for those things. (It may also be hard in the general case because plans are not necessarily trees.) Otherwise I agree with the suggested improvements. One more thing to consider might be to ensure we generate unique names in case there are duplicate nodes (I think we already do so since we number them?)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-12-16T17:49:35.908+0000",
                    "updated": "2021-12-16T17:49:35.908+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418053/comment/17460932",
                    "id": "17460932",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Some of this stuff we may already do in the current ToString.  We have a \"label\" which is the \"id\" and, if the caller doesn't assign it, we already assign it based on a plan scoped counter (look for auto_label_counter_ in exec_plan.cc).  So that handles the first bullet.\r\n\r\nI'm pretty sure most of the nodes have the correct name.\r\n\r\nFor plans that aren't trees we should print the node the first time we come across it and then, on future times we will come across it, print some kind of reference to the node based on the id/label.  For example, we could just throw  a # in front of the label (#7).",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-12-16T18:02:21.293+0000",
                    "updated": "2021-12-16T18:02:21.293+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418053/comment/17460934",
                    "id": "17460934",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "I guess for indentation you could do djikstra's shortest path from the sink (all costs are 1, there is always only one sink I'm pretty sure) and then base the indentation on that (highest cost is least indented) but I don't know how visually appealing that would be.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-12-16T18:04:34.669+0000",
                    "updated": "2021-12-16T18:04:34.669+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418053/comment/17460937",
                    "id": "17460937",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "ExecPlan already does a topological sort of the nodes so you could probably infer indentation there too.\r\n\r\n(I thought there was an issue about getting rid of multiple sinks? Though I am playing with a node that has two outputs so I can send data both to a Flight stream and a file writer.)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-12-16T18:07:22.610+0000",
                    "updated": "2021-12-16T18:07:22.610+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13418053/comment/17470199",
                    "id": "17470199",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 12031\n[https://github.com/apache/arrow/pull/12031]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-01-06T21:44:02.853+0000",
                    "updated": "2022-01-06T21:44:02.853+0000"
                }
            ],
            "maxResults": 5,
            "total": 5,
            "startAt": 0
        },
        "customfield_12311820": "0|z0xsoo:",
        "customfield_12314139": null
    }
}