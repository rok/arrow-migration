{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13482673",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482673",
    "key": "ARROW-17813",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351947",
                "id": "12351947",
                "description": "",
                "name": "10.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351550",
                "id": "12351550",
                "name": "9.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-08-03"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12648276",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12648276",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13478729",
                    "key": "ARROW-17535",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13478729",
                    "fields": {
                        "summary": "[Python] List<Extension> arrays aren't supported in to_pandas calls",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
                            "name": "Minor",
                            "id": "4"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            },
            {
                "id": "12648647",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12648647",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13484403",
                    "key": "ARROW-17925",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13484403",
                    "fields": {
                        "summary": "[Python] Use ExtensionScalar.as_py() as fallback in ExtensionArray to_pandas?",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            },
            {
                "id": "12648275",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12648275",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13482973",
                    "key": "ARROW-17834",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482973",
                    "fields": {
                        "summary": "[Python] Allow creating ExtensionArray through pa.array(..) constructor",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=milesgranger",
            "name": "milesgranger",
            "key": "JIRAUSER293894",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34052",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34052",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34052",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34052"
            },
            "displayName": "Miles Granger",
            "active": true,
            "timeZone": "Europe/Oslo"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=changhiskhan",
            "name": "changhiskhan",
            "key": "changhiskhan",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Chang She",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=changhiskhan",
            "name": "changhiskhan",
            "key": "changhiskhan",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Chang She",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17813/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 19,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482673/worklog/812094",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "milesgranger opened a new pull request, #14238:\nURL: https://github.com/apache/arrow/pull/14238\n\n   [ARROW-17813](https://issues.apache.org/jira/browse/ARROW-17813)\n\n\n",
                    "created": "2022-09-26T12:49:30.302+0000",
                    "updated": "2022-09-26T12:49:30.302+0000",
                    "started": "2022-09-26T12:49:30.301+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "812094",
                    "issueId": "13482673"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482673/worklog/812098",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #14238:\nURL: https://github.com/apache/arrow/pull/14238#discussion_r980003470\n\n\n##########\npython/pyarrow/src/arrow_to_pandas.cc:\n##########\n@@ -155,7 +156,7 @@ struct WrapBytes<FixedSizeBinaryType> {\n };\n \n static inline bool ListTypeSupported(const DataType& type) {\n-  switch (type.id()) {\n+  switch (type.storage_id()) {\n\nReview Comment:\n   Instead of using storage_id here, I think you can add a `case Type::EXTENSION` which then recursively calls ListTypeSupported again on the storage type (similarly how it is done for list types)\n\n\n\n",
                    "created": "2022-09-26T13:00:49.545+0000",
                    "updated": "2022-09-26T13:00:49.545+0000",
                    "started": "2022-09-26T13:00:49.544+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "812098",
                    "issueId": "13482673"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482673/worklog/812101",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #14238:\nURL: https://github.com/apache/arrow/pull/14238#discussion_r980019914\n\n\n##########\npython/pyarrow/src/arrow_to_pandas.cc:\n##########\n@@ -730,17 +731,33 @@ Status DecodeDictionaries(MemoryPool* pool, const std::shared_ptr<DataType>& den\n template <typename ListArrayT>\n Status ConvertListsLike(PandasOptions options, const ChunkedArray& data,\n                         PyObject** out_values) {\n+  using ListArrayType = typename ListArrayT::TypeClass;\n+  const auto& list_type = checked_cast<const ListArrayType&>(*data.type());\n+  const auto& value_type = list_type.value_type();\n+\n+  const auto& val_type = checked_cast<const ExtensionType&>(*value_type);\n+  const auto& storage_ty = val_type.storage_type();\n+  const auto& lt = dynamic_cast<const FixedSizeListType*>(&list_type);\n+\n   // Get column of underlying value arrays\n   ArrayVector value_arrays;\n   for (int c = 0; c < data.num_chunks(); c++) {\n-    const auto& arr = checked_cast<const ListArrayT&>(*data.chunk(c));\n+\n+    std::shared_ptr<DataType> out_ty;\n+    if (lt != nullptr) {\n+      out_ty = fixed_size_list(storage_ty, lt->list_size());\n+    } else {\n+      out_ty = list(storage_ty);\n+    }\n+    compute::CastOptions options;\n+    options.to_type = out_ty;\n+    ARROW_ASSIGN_OR_RAISE(std::shared_ptr<Array> casted, compute::Cast(*data.chunk(c), out_ty, options));\n\nReview Comment:\n   Possible alternative solution to casting, would be to enable the `ConvertChunkedArrayToPandas` (which is called on the chunks that are being gathered here, a few lines below) to fallback to the storage type. \r\n   \r\n   This could be enabled (without necessarily changing this globably) by adding an option that is set in `MakeInnerOptions`\n\n\n\n",
                    "created": "2022-09-26T13:13:20.862+0000",
                    "updated": "2022-09-26T13:13:20.862+0000",
                    "started": "2022-09-26T13:13:20.860+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "812101",
                    "issueId": "13482673"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482673/worklog/812104",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #14238:\nURL: https://github.com/apache/arrow/pull/14238#discussion_r980025338\n\n\n##########\npython/pyarrow/src/arrow_to_pandas.cc:\n##########\n@@ -730,17 +731,33 @@ Status DecodeDictionaries(MemoryPool* pool, const std::shared_ptr<DataType>& den\n template <typename ListArrayT>\n Status ConvertListsLike(PandasOptions options, const ChunkedArray& data,\n                         PyObject** out_values) {\n+  using ListArrayType = typename ListArrayT::TypeClass;\n+  const auto& list_type = checked_cast<const ListArrayType&>(*data.type());\n+  const auto& value_type = list_type.value_type();\n+\n+  const auto& val_type = checked_cast<const ExtensionType&>(*value_type);\n+  const auto& storage_ty = val_type.storage_type();\n+  const auto& lt = dynamic_cast<const FixedSizeListType*>(&list_type);\n+\n   // Get column of underlying value arrays\n   ArrayVector value_arrays;\n   for (int c = 0; c < data.num_chunks(); c++) {\n-    const auto& arr = checked_cast<const ListArrayT&>(*data.chunk(c));\n+\n+    std::shared_ptr<DataType> out_ty;\n+    if (lt != nullptr) {\n+      out_ty = fixed_size_list(storage_ty, lt->list_size());\n+    } else {\n+      out_ty = list(storage_ty);\n+    }\n+    compute::CastOptions options;\n+    options.to_type = out_ty;\n+    ARROW_ASSIGN_OR_RAISE(std::shared_ptr<Array> casted, compute::Cast(*data.chunk(c), out_ty, options));\n\nReview Comment:\n   Or, when keeping the current approach, it's probably not needed to explicitly `Cast`? I _think_ you can check if `arr.values()` has extension type, and in that case take to underlying storage array. \r\n   \r\n   In the ConvertStruct, we have some similar code for this:\r\n   \r\n   ```\r\n         // In case the field is an extension array, use .storage() to convert to Pandas\r\n         if (field->type()->id() == Type::EXTENSION) {\r\n           const ExtensionArray& arr_ext = checked_cast<const ExtensionArray&>(*field);\r\n           field = arr_ext.storage();\r\n         }\r\n   ```\r\n   \r\n   (in this case `field` would be `arr`, I think)\n\n\n\n",
                    "created": "2022-09-26T13:18:20.896+0000",
                    "updated": "2022-09-26T13:18:20.896+0000",
                    "started": "2022-09-26T13:18:20.896+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "812104",
                    "issueId": "13482673"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482673/worklog/812105",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #14238:\nURL: https://github.com/apache/arrow/pull/14238#discussion_r980026974\n\n\n##########\npython/pyarrow/src/arrow_to_pandas.cc:\n##########\n@@ -753,8 +770,17 @@ Status ConvertListsLike(PandasOptions options, const ChunkedArray& data,\n \n   int64_t chunk_offset = 0;\n   for (int c = 0; c < data.num_chunks(); c++) {\n-    const auto& arr = checked_cast<const ListArrayT&>(*data.chunk(c));\n \n+    std::shared_ptr<DataType> out_ty;\n+    if (lt != nullptr) {\n+      out_ty = fixed_size_list(storage_ty, lt->list_size());\n+    } else {\n+      out_ty = list(storage_ty);\n+    }\n+    compute::CastOptions options;\n+    options.to_type = out_ty;\n+    ARROW_ASSIGN_OR_RAISE(std::shared_ptr<Array> casted, compute::Cast(*data.chunk(c), out_ty, options));\n+    const auto& arr = checked_cast<const ListArrayT&>(*casted);\n\nReview Comment:\n   Not fully sure the conversion is needed here, because I think `arr` is only used to get the offsets, which should stay the same whether it is uses extension type or storage type for the values.\n\n\n\n",
                    "created": "2022-09-26T13:19:51.030+0000",
                    "updated": "2022-09-26T13:19:51.030+0000",
                    "started": "2022-09-26T13:19:51.029+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "812105",
                    "issueId": "13482673"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482673/worklog/812173",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #14238:\nURL: https://github.com/apache/arrow/pull/14238#issuecomment-1258349439\n\n   https://issues.apache.org/jira/browse/ARROW-17813\n\n\n",
                    "created": "2022-09-26T17:02:08.367+0000",
                    "updated": "2022-09-26T17:02:08.367+0000",
                    "started": "2022-09-26T17:02:08.366+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "812173",
                    "issueId": "13482673"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482673/worklog/812174",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #14238:\nURL: https://github.com/apache/arrow/pull/14238#issuecomment-1258349472\n\n   :warning: Ticket **has not been started in JIRA**, please click 'Start Progress'.\n\n\n",
                    "created": "2022-09-26T17:02:10.060+0000",
                    "updated": "2022-09-26T17:02:10.060+0000",
                    "started": "2022-09-26T17:02:10.059+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "812174",
                    "issueId": "13482673"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482673/worklog/813245",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #14238:\nURL: https://github.com/apache/arrow/pull/14238#discussion_r983175968\n\n\n##########\npython/pyarrow/src/arrow_to_pandas.cc:\n##########\n@@ -730,31 +738,38 @@ Status DecodeDictionaries(MemoryPool* pool, const std::shared_ptr<DataType>& den\n template <typename ListArrayT>\n Status ConvertListsLike(PandasOptions options, const ChunkedArray& data,\n                         PyObject** out_values) {\n+  using ListArrayType = typename ListArrayT::TypeClass;\n+  const auto& list_type = checked_cast<const ListArrayType&>(*data.type());\n+  const auto& value_type = list_type.value_type();\n+\n+  const auto& val_type = checked_cast<const ExtensionType&>(*value_type);\n+  const auto& storage_ty = val_type.storage_type();\n+\n   // Get column of underlying value arrays\n   ArrayVector value_arrays;\n   for (int c = 0; c < data.num_chunks(); c++) {\n     const auto& arr = checked_cast<const ListArrayT&>(*data.chunk(c));\n-    value_arrays.emplace_back(arr.values());\n+    if (arr.values()->type()->id() == Type::EXTENSION) {\n+      const auto& arr_ext = checked_cast<const ExtensionArray&>(*arr.values());\n+      value_arrays.emplace_back(arr_ext.storage());\n+    } else {\n+      value_arrays.emplace_back(arr.values());\n+    }\n   }\n-  using ListArrayType = typename ListArrayT::TypeClass;\n-  const auto& list_type = checked_cast<const ListArrayType&>(*data.type());\n-  auto value_type = list_type.value_type();\n \n-  auto flat_column = std::make_shared<ChunkedArray>(value_arrays, value_type);\n+  auto flat_column = std::make_shared<ChunkedArray>(value_arrays, storage_ty);\n\nReview Comment:\n   I suppose this will need to be done conditionally (storage_type if (id == EXTENSION) else value_type) to keep the non-extension case working?\n\n\n\n##########\npython/pyarrow/src/arrow_to_pandas.cc:\n##########\n@@ -191,6 +192,13 @@ static inline bool ListTypeSupported(const DataType& type) {\n       const auto& list_type = checked_cast<const BaseListType&>(type);\n       return ListTypeSupported(*list_type.value_type());\n     }\n+    case Type::EXTENSION: {\n+      auto ext = std::dynamic_pointer_cast<ExtensionType>(type.GetSharedPtr());\n+      if (ext == nullptr) {\n+        return false;\n+      }\n\nReview Comment:\n   I think you can do a `checked_cast` instead similar as a few lines above for the list type? (which will do a dynamic cast in debug mode, and static cast in release mode)\n\n\n\n##########\npython/pyarrow/src/arrow_to_pandas.cc:\n##########\n@@ -730,31 +738,38 @@ Status DecodeDictionaries(MemoryPool* pool, const std::shared_ptr<DataType>& den\n template <typename ListArrayT>\n Status ConvertListsLike(PandasOptions options, const ChunkedArray& data,\n                         PyObject** out_values) {\n+  using ListArrayType = typename ListArrayT::TypeClass;\n+  const auto& list_type = checked_cast<const ListArrayType&>(*data.type());\n+  const auto& value_type = list_type.value_type();\n+\n+  const auto& val_type = checked_cast<const ExtensionType&>(*value_type);\n+  const auto& storage_ty = val_type.storage_type();\n+\n   // Get column of underlying value arrays\n   ArrayVector value_arrays;\n   for (int c = 0; c < data.num_chunks(); c++) {\n     const auto& arr = checked_cast<const ListArrayT&>(*data.chunk(c));\n-    value_arrays.emplace_back(arr.values());\n+    if (arr.values()->type()->id() == Type::EXTENSION) {\n\nReview Comment:\n   ```suggestion\r\n       if (arr.value_type()->id() == Type::EXTENSION) {\r\n   ```\r\n   \r\n   (little bit indirection)\n\n\n\n##########\npython/pyarrow/src/arrow_to_pandas.cc:\n##########\n@@ -730,31 +738,38 @@ Status DecodeDictionaries(MemoryPool* pool, const std::shared_ptr<DataType>& den\n template <typename ListArrayT>\n Status ConvertListsLike(PandasOptions options, const ChunkedArray& data,\n                         PyObject** out_values) {\n+  using ListArrayType = typename ListArrayT::TypeClass;\n+  const auto& list_type = checked_cast<const ListArrayType&>(*data.type());\n+  const auto& value_type = list_type.value_type();\n+\n+  const auto& val_type = checked_cast<const ExtensionType&>(*value_type);\n+  const auto& storage_ty = val_type.storage_type();\n\nReview Comment:\n   To reduce the size of the diff, I think you can leave this where it was originally after the loop (since you don't need to storage_type anymore in the for loop)\n\n\n\n",
                    "created": "2022-09-29T07:43:30.086+0000",
                    "updated": "2022-09-29T07:43:30.086+0000",
                    "started": "2022-09-29T07:43:30.086+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "813245",
                    "issueId": "13482673"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482673/worklog/813269",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "milesgranger commented on code in PR #14238:\nURL: https://github.com/apache/arrow/pull/14238#discussion_r983246044\n\n\n##########\npython/pyarrow/src/arrow_to_pandas.cc:\n##########\n@@ -191,6 +192,13 @@ static inline bool ListTypeSupported(const DataType& type) {\n       const auto& list_type = checked_cast<const BaseListType&>(type);\n       return ListTypeSupported(*list_type.value_type());\n     }\n+    case Type::EXTENSION: {\n+      auto ext = std::dynamic_pointer_cast<ExtensionType>(type.GetSharedPtr());\n+      if (ext == nullptr) {\n+        return false;\n+      }\n\nReview Comment:\n   Thanks for that, all the casting choices in cpp has me dizzy, but I'm getting there. :)\n\n\n\n",
                    "created": "2022-09-29T08:40:04.405+0000",
                    "updated": "2022-09-29T08:40:04.405+0000",
                    "started": "2022-09-29T08:40:04.405+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "813269",
                    "issueId": "13482673"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482673/worklog/813293",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #14238:\nURL: https://github.com/apache/arrow/pull/14238#discussion_r983362684\n\n\n##########\npython/pyarrow/tests/test_extension_type.py:\n##########\n@@ -925,3 +925,28 @@ def test_empty_take():\n     result = empty_arr.take(pa.array([], pa.int32()))\n     assert len(result) == 0\n     assert result.equals(empty_arr)\n+    \n+    \n+class LabelType(pa.ExtensionType):\n+     \n+         def __init__(self):\n+             super(LabelType, self).__init__(pa.string(), \"label\")\n+     \n+         def __arrow_ext_serialize__(self):\n+             return b\"\"\n+     \n+         @classmethod\n+         def __arrow_ext_deserialize__(cls, storage_type, serialized):\n+             return LabelType()\n+\n+@pytest.mark.parametrize(\"data,ty\", (\n+    ([1, 2, 3], IntegerType),\n+    ([\"cat\", \"dog\", \"horse\"], LabelType)\n+))\n+def test_extension_array_to_numpy(data, ty):     \n+     storage = pa.array(data)\n+     ext_arr = pa.ExtensionArray.from_storage(ty(), storage)\n+     offsets = pa.array([0, 1])\n+     list_arr = pa.ListArray.from_arrays(offsets, ext_arr)\n+     list_arr.to_numpy(zero_copy_only=False)\n\nReview Comment:\n   Can you also test `to_pandas()` in addition to `to_numpy` ? \r\n   (and maybe also verify the result, you could construct the expected result from a ListArray with the storage type instead of extension type)\n\n\n\n",
                    "created": "2022-09-29T10:27:42.217+0000",
                    "updated": "2022-09-29T10:27:42.217+0000",
                    "started": "2022-09-29T10:27:42.216+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "813293",
                    "issueId": "13482673"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482673/worklog/813294",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #14238:\nURL: https://github.com/apache/arrow/pull/14238#discussion_r983363072\n\n\n##########\npython/pyarrow/src/arrow_to_pandas.cc:\n##########\n@@ -17,6 +17,7 @@\n \n // Functions for pandas conversion via NumPy\n \n+#include <arrow/compute/cast.h>\n\nReview Comment:\n   this include is no longer needed\n\n\n\n",
                    "created": "2022-09-29T10:27:57.782+0000",
                    "updated": "2022-09-29T10:27:57.782+0000",
                    "started": "2022-09-29T10:27:57.781+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "813294",
                    "issueId": "13482673"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482673/worklog/813315",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "milesgranger commented on code in PR #14238:\nURL: https://github.com/apache/arrow/pull/14238#discussion_r983450895\n\n\n##########\npython/pyarrow/tests/test_extension_type.py:\n##########\n@@ -925,3 +925,28 @@ def test_empty_take():\n     result = empty_arr.take(pa.array([], pa.int32()))\n     assert len(result) == 0\n     assert result.equals(empty_arr)\n+    \n+    \n+class LabelType(pa.ExtensionType):\n+     \n+         def __init__(self):\n+             super(LabelType, self).__init__(pa.string(), \"label\")\n+     \n+         def __arrow_ext_serialize__(self):\n+             return b\"\"\n+     \n+         @classmethod\n+         def __arrow_ext_deserialize__(cls, storage_type, serialized):\n+             return LabelType()\n+\n+@pytest.mark.parametrize(\"data,ty\", (\n+    ([1, 2, 3], IntegerType),\n+    ([\"cat\", \"dog\", \"horse\"], LabelType)\n+))\n+def test_extension_array_to_numpy(data, ty):     \n+     storage = pa.array(data)\n+     ext_arr = pa.ExtensionArray.from_storage(ty(), storage)\n+     offsets = pa.array([0, 1])\n+     list_arr = pa.ListArray.from_arrays(offsets, ext_arr)\n+     list_arr.to_numpy(zero_copy_only=False)\n\nReview Comment:\n   Good idea, that's much better. :+1: \n\n\n\n",
                    "created": "2022-09-29T11:59:45.734+0000",
                    "updated": "2022-09-29T11:59:45.734+0000",
                    "started": "2022-09-29T11:59:45.734+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "813315",
                    "issueId": "13482673"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482673/worklog/815582",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on PR #14238:\nURL: https://github.com/apache/arrow/pull/14238#issuecomment-1274428477\n\n   @milesgranger the failures here are actually related\n\n\n",
                    "created": "2022-10-11T09:50:34.373+0000",
                    "updated": "2022-10-11T09:50:34.373+0000",
                    "started": "2022-10-11T09:50:34.372+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "815582",
                    "issueId": "13482673"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482673/worklog/815647",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #14238:\nURL: https://github.com/apache/arrow/pull/14238#discussion_r992250647\n\n\n##########\npython/pyarrow/tests/test_extension_type.py:\n##########\n@@ -60,6 +60,22 @@ def __reduce__(self):\n         return UuidType, ()\n \n \n+class LabelType(pa.ExtensionType):\n+\n+    def __init__(self):\n+        super(LabelType, self).__init__(pa.string(), \"label\")\n+\n+    def __reduce__(self):\n+        return LabelType, ()\n+\n+    def __arrow_ext_serialize__(self):\n+        return b\"\"\n+\n+    @classmethod\n+    def __arrow_ext_deserialize__(cls, storage_type, serialized):\n+        return LabelType()\n\nReview Comment:\n   ```suggestion\r\n   class LabelType(pa.PyExtensionType):\r\n   \r\n       def __init__(self):\r\n           pa.PyExtensionType.__init__(self, pa.string())\r\n   \r\n       def __reduce__(self):\r\n           return LabelType, ()\r\n   ```\n\n\n\n",
                    "created": "2022-10-11T12:17:55.341+0000",
                    "updated": "2022-10-11T12:17:55.341+0000",
                    "started": "2022-10-11T12:17:55.341+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "815647",
                    "issueId": "13482673"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482673/worklog/815649",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #14238:\nURL: https://github.com/apache/arrow/pull/14238#discussion_r992253095\n\n\n##########\npython/pyarrow/tests/test_extension_type.py:\n##########\n@@ -60,6 +60,22 @@ def __reduce__(self):\n         return UuidType, ()\n \n \n+class LabelType(pa.ExtensionType):\n+\n+    def __init__(self):\n+        super(LabelType, self).__init__(pa.string(), \"label\")\n+\n+    def __reduce__(self):\n+        return LabelType, ()\n+\n+    def __arrow_ext_serialize__(self):\n+        return b\"\"\n+\n+    @classmethod\n+    def __arrow_ext_deserialize__(cls, storage_type, serialized):\n+        return LabelType()\n\nReview Comment:\n   Either you specify the `__reduce__` subclassing PyExtensionType, or either `_arrow_ext_serialize__`/`__arrow_ext_deserialize__` subclass ExtensionType (see https://arrow.apache.org/docs/dev/python/extending_types.html). Since the surrounding types are using PyExtensionType, maybe can use it for this one as well.\r\n   \r\n   (now, also when subclassing ExtensionType, it can be useful to support pickling, but that's not needed here for the tests) \n\n\n\n",
                    "created": "2022-10-11T12:20:25.605+0000",
                    "updated": "2022-10-11T12:20:25.605+0000",
                    "started": "2022-10-11T12:20:25.605+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "815649",
                    "issueId": "13482673"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482673/worklog/815654",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "milesgranger commented on code in PR #14238:\nURL: https://github.com/apache/arrow/pull/14238#discussion_r992271171\n\n\n##########\npython/pyarrow/tests/test_extension_type.py:\n##########\n@@ -60,6 +60,22 @@ def __reduce__(self):\n         return UuidType, ()\n \n \n+class LabelType(pa.ExtensionType):\n+\n+    def __init__(self):\n+        super(LabelType, self).__init__(pa.string(), \"label\")\n+\n+    def __reduce__(self):\n+        return LabelType, ()\n+\n+    def __arrow_ext_serialize__(self):\n+        return b\"\"\n+\n+    @classmethod\n+    def __arrow_ext_deserialize__(cls, storage_type, serialized):\n+        return LabelType()\n\nReview Comment:\n   Aha, docs ftw. :) Thank you.\n\n\n\n",
                    "created": "2022-10-11T12:38:01.613+0000",
                    "updated": "2022-10-11T12:38:01.613+0000",
                    "started": "2022-10-11T12:38:01.612+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "815654",
                    "issueId": "13482673"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482673/worklog/816160",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche merged PR #14238:\nURL: https://github.com/apache/arrow/pull/14238\n\n\n",
                    "created": "2022-10-12T13:27:26.496+0000",
                    "updated": "2022-10-12T13:27:26.496+0000",
                    "started": "2022-10-12T13:27:26.495+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "816160",
                    "issueId": "13482673"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482673/worklog/816473",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on PR #14238:\nURL: https://github.com/apache/arrow/pull/14238#issuecomment-1277239124\n\n   Benchmark runs are scheduled for baseline = 3a72dc0ef7bd089c110a95859ab1ab3adc679bb1 and contender = 21ba22bfbb3123a224a320832a4bca0a7237309f. 21ba22bfbb3123a224a320832a4bca0a7237309f is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/172d2a312059403484c74f044dae4988...f8b2a27577f24887b4086d26d9554308/)\n   [Failed :arrow_down:0.56% :arrow_up:0.0%] [test-mac-arm](https://conbench.ursa.dev/compare/runs/8468809b09c0481e9f15a20af9b72c74...ee1c87a6a9de417587954c85213d4208/)\n   [Failed :arrow_down:1.64% :arrow_up:0.0%] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/37cc698da25a4d2a83ad19f205542ec1...50fba2b6c0b74c9e9c78f0e2ef52419b/)\n   [Finished :arrow_down:0.25% :arrow_up:0.04%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/e07a573f04024fc2a327aa48825cb612...65c6a702237a4f069d49a9687d4517a6/)\n   Buildkite builds:\n   [Finished] [`21ba22bf` ec2-t3-xlarge-us-east-2](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ec2-t3-xlarge-us-east-2/builds/1675)\n   [Failed] [`21ba22bf` test-mac-arm](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-test-mac-arm/builds/1694)\n   [Failed] [`21ba22bf` ursa-i9-9960x](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-i9-9960x/builds/1677)\n   [Finished] [`21ba22bf` ursa-thinkcentre-m75q](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-thinkcentre-m75q/builds/1688)\n   [Finished] [`3a72dc0e` ec2-t3-xlarge-us-east-2](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ec2-t3-xlarge-us-east-2/builds/1674)\n   [Failed] [`3a72dc0e` test-mac-arm](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-test-mac-arm/builds/1693)\n   [Failed] [`3a72dc0e` ursa-i9-9960x](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-i9-9960x/builds/1676)\n   [Finished] [`3a72dc0e` ursa-thinkcentre-m75q](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-thinkcentre-m75q/builds/1687)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python, R. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n",
                    "created": "2022-10-13T08:31:38.782+0000",
                    "updated": "2022-10-13T08:31:38.782+0000",
                    "started": "2022-10-13T08:31:38.782+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "816473",
                    "issueId": "13482673"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482673/worklog/817302",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on PR #14238:\nURL: https://github.com/apache/arrow/pull/14238#issuecomment-1279802586\n\n   Sorry I'll reply on the JIRA, but I think this is a good step, I don't have a good solution for introducing the more complex behavior without breaking compatibility other then making it an additional argument.  We can discuss more on the JIRA.\n\n\n",
                    "created": "2022-10-15T18:29:47.120+0000",
                    "updated": "2022-10-15T18:29:47.120+0000",
                    "started": "2022-10-15T18:29:47.119+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "817302",
                    "issueId": "13482673"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 11400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@78d08c5b[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@40a1e3e[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@dcedecd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@59e1daa4[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@26e4a0bd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5623a5b5[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2de0310a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7a83fae8[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@79615c4d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@32a450d9[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1ee04fe6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7bd1b268[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 11400,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Oct 12 17:29:30 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-10-12T13:27:30.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17813/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2022-09-22T02:48:50.000+0000",
        "updated": "2022-10-15T18:29:47.000+0000",
        "timeoriginalestimate": null,
        "description": "user@ thread: [https://lists.apache.org/thread/dhnxq0g4kgdysjowftfv3z5ngj780xpb]\r\nrepro gist: [https://gist.github.com/changhiskhan/4163f8cec675a2418a69ec9168d5fdd9]\r\n\r\n*Arrow => numpy/pandas*\r\n\r\nFor a non-nested array, pa.ExtensionArray.to_numpy automatically \"lowers\" to the storage type (as expected). However this is not done for nested arrays:\r\n\r\n{code:python}\r\nimport pyarrow as pa\r\n\r\nclass LabelType(pa.ExtensionType):\r\n\r\n    def __init__(self):\r\n        super(LabelType, self).__init__(pa.string(), \"label\")\r\n\r\n    def __arrow_ext_serialize__(self):\r\n        return b\"\"\r\n\r\n    @classmethod\r\n    def __arrow_ext_deserialize__(cls, storage_type, serialized):\r\n        return LabelType()\r\n    \r\nstorage = pa.array([\"dog\", \"cat\", \"horse\"])\r\next_arr = pa.ExtensionArray.from_storage(LabelType(), storage)\r\noffsets = pa.array([0, 1])\r\nlist_arr = pa.ListArray.from_arrays(offsets, ext_arr)\r\nlist_arr.to_numpy()\r\n{code}\r\n{code:java}\r\n---------------------------------------------------------------------------\r\nArrowNotImplementedError                  Traceback (most recent call last)\r\nCell In [15], line 1\r\n----> 1 list_arr.to_numpy()\r\n\r\nFile /mnt/lance/.venv/lance/lib/python3.10/site-packages/pyarrow/array.pxi:1445, in pyarrow.lib.Array.to_numpy()\r\n\r\nFile /mnt/lance/.venv/lance/lib/python3.10/site-packages/pyarrow/error.pxi:121, in pyarrow.lib.check_status()\r\n\r\nArrowNotImplementedError: Not implemented type for Arrow list to pandas: extension<label<LabelType>>\r\n{code}\r\n\r\nAs mentioned on the user thread linked from the top, a fairly generic solution would just have the conversion default to the storage array's to_numpy.\r\n\r\n\u00a0\r\n*pandas/numpy => Arrow*\r\n\r\nEquivalently, conversion to Arrow is also difficult for nested extension types: \r\n\r\nif I have say a pandas DataFrame that has a column of list-of-string and I want to convert that to list-of-label Array. Currently I have to:\r\n1. Convert to list-of-string (storage) numpy array to pa.list_(pa.string())\r\n2. Convert the string values array to ExtensionArray, then reconstitue a list<extension> array using the ExtensionArray combined with the offsets from the result of step 1\r\n\r\n{code:python}\r\nimport pyarrow as pa\r\nimport pandas as pd\r\ndf = pd.DataFrame({'labels': [[\"dog\", \"horse\", \"cat\"], [\"person\", \"person\", \"car\", \"car\"]]})\r\nlist_of_storage = pa.array(df.labels)\r\next_values = pa.ExtensionArray.from_storage(LabelType(), list_of_storage.values)\r\nlist_of_ext = pa.ListArray.from_arrays(offsets=list_of_storage.offsets, values=ext_values)\r\n{code}\r\n\r\n\r\nFor non-nested columns, one can achieve easier conversion by defining a pandas extension dtype, but i don't think that works for a nested column. You would instead have to fallback to something like `pa.ExtensionArray.from_storage` (or `from_pandas`?) to do the trick. Even that doesn't necessarily work for something like a dictionary column because you'd have to pass in the dictionary somehow. Off the cuff, one could provide a custom lambda to `pa.Table.from_pandas` that is used for either specified column names / data types?\r\n\r\n\r\nThanks in advance for the consideration!",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 11400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Nested ExtensionArray conversion to/from pandas/numpy",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482673/comment/17608842",
                    "id": "17608842",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "*Arrow => numpy/pandas*\r\n\r\nFor numpy, we can indeed fall back to converting the storage array. That's also what happens for the {{ExtensionArray.to_numpy()}} at the moment. Although this is implemented in python right now (https://github.com/apache/arrow/blob/356e7f836c145966ebbeb65c3b65d82348e4234e/python/pyarrow/array.pxi#L2795), while the ListArray conversion is done in C++. So we would need to move that logic of using the storage type into the pyarrow C++ code (which should be doable, I think)\r\n\r\nFor conversion to pandas, for plain ExtensionArrays, this is controlled by whether there is an equivalent pandas extension type to convert to. So the question is whether this should be done for ExtensionArrays within a nested type as well. That would get a bit more complicated, as then we need to call back into python from C++ (this is basically covered by ARROW-17535)\r\n\r\n*pandas/numpy => Arrow*\r\n\r\nOne way this will be a bit easier is to cast to the final type, something like: {{list_of_storage.cast(pa.list_(LabelType()))}}.  \r\nThis is currently not yet possible, but there is some work being done on that at the moment (ARROW-14500 about casting storage type to extension type, ARROW-15545 is a different issue related to casting of extension types, but this might actually also solve the former, and there is an open PR for this: https://github.com/apache/arrow/pull/14106. We should verify if that PR also enables this cast)\r\n\r\n> For non-nested columns, one can achieve easier conversion by defining a pandas extension dtype, but i don't think that works for a nested column. \r\n\r\nIndeed, that won't work without specifying a separate extension type for this nested type (until pandas supports nested types properly)\r\n\r\n> Off the cuff, one could provide a custom lambda to `pa.Table.from_pandas` that is used for either specified column names / data types?\r\n\r\nThat could be one option. But maybe we should start with enabling basic conversion (through the storage type) for extension types in the array conversion, which currently fails:\r\n\r\n{code:python}\r\n# this could be the equivalent of `pa.ExtensionArray.from_storage(LabelType(), pa.array([\"dog\", \"cat\", \"horse\"]))` ?\r\n>>> pa.array([\"dog\", \"cat\", \"horse\"], type=LabelType())\r\nArrowNotImplementedError: extension\r\n{code}\r\n\r\nI opened ARROW-17834 for this.\r\n\r\nIf the above works, I think it should also work to specify a schema with the extension type in the Table.from_pandas conversion. \r\n(we could still make it easier to allow to specify the type for one specific column, instead of having to specify the full schema)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2022-09-23T16:40:08.459+0000",
                    "updated": "2022-09-23T16:49:53.176+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482673/comment/17609608",
                    "id": "17609608",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=changhiskhan",
                        "name": "changhiskhan",
                        "key": "changhiskhan",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Chang She",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~jorisvandenbossche] thank you for the details above!\r\n\r\n*ExtensionArray => pandas*\r\n\r\nJust for discussion, I was curious whether you had any thoughts around using the extension scalar as a fallback mechanism. It's a lot simpler to define an ExtensionScalar with `as_py` than a pandas extension dtype. So if an ExtensionArray doesn't have an equivalent pandas dtype, would it make sense to convert it to just an object series whose elements are the result of `as_py`? I added it as a comment to ARROW-17353 for further discussion as well if it makes sense.\r\n\r\n*pandas/numpy => Arrow*\r\n\r\n{quote}One way this will be a bit easier is to cast to the final type, something like: list_of_storage.cast(pa.list_(LabelType())).{quote}\r\n\r\nYeah, that would certainly make it a lot more convenient! I don't see any tests relating to nested types in https://github.com/apache/arrow/pull/14106 but hopefully it's not much additional effort on top of what's already there?\r\n \r\n{quote} this could be the equivalent of `pa.ExtensionArray.from_storage(LabelType(), pa.array([\"dog\", \"cat\", \"horse\"]))` ?\r\n >>> pa.array([\"dog\", \"cat\", \"horse\"], type=LabelType())\r\n ArrowNotImplementedError: extension\r\n I opened ARROW-17834 for this. \r\n{quote}\r\n\r\nAgreed. Thanks for opening the JIRA. One additional tricky thing here is what if the storage array also need additional arguments. e.g., in CV, most canonical datasets has a predetermined dictionary, so for the above example, often-times you'd want read in a CSV data dictionary and pass in the class names in the right order to construct the storage DictionaryArray (cross-posted on ARROW-17834).\r\n\r\n\r\n{quote}If the above works, I think it should also work to specify a schema with the extension type in the Table.from_pandas conversion.\r\n(we could still make it easier to allow to specify the type for one specific column, instead of having to specify the full schema){quote}\r\n\r\nyeah that would be amazing. I'd love to toss away my custom type conversion code that's hard to maintain (and not to mention slow)  :)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=changhiskhan",
                        "name": "changhiskhan",
                        "key": "changhiskhan",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Chang She",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-09-26T17:30:32.723+0000",
                    "updated": "2022-09-26T17:30:32.723+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482673/comment/17612550",
                    "id": "17612550",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "{quote}*ExtensionArray => pandas*\r\n\r\nJust for discussion, I was curious whether you had any thoughts around using the extension scalar as a fallback mechanism\r\n{quote}\r\n\r\nI just was wondering the same in ARROW-17535, forgetting your brought that up here as well. I opened a dedicated JIRA for this part: ARROW-17925",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2022-10-04T10:13:02.692+0000",
                    "updated": "2022-10-04T10:13:02.692+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482673/comment/17616422",
                    "id": "17616422",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "Issue resolved by pull request 14238\n[https://github.com/apache/arrow/pull/14238]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2022-10-12T13:27:30.114+0000",
                    "updated": "2022-10-12T13:27:30.114+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482673/comment/17616426",
                    "id": "17616426",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "[~changhiskhan] so this issue is marked as resolved now https://github.com/apache/arrow/pull/14238 is merged. Not all the issues you raised have been fixed, though, but I think remaining issues are covered by other JIRAs (but it would be good if you could verify this). \r\nFor example, after https://github.com/apache/arrow/pull/14238, we still fall back on basic storage type conversion in case of list<extension>, but we have ARROW-17535 to see if we can further improve this by actually using the proper to_pandas conversion.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2022-10-12T13:35:23.156+0000",
                    "updated": "2022-10-12T13:35:23.156+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13482673/comment/17616605",
                    "id": "17616605",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=changhiskhan",
                        "name": "changhiskhan",
                        "key": "changhiskhan",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Chang She",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~jorisvandenbossche] this is great. I will try it out on master. thanks!\r\n\r\nI agree with your comments in ARROW-17535 that the design can be further improved to take into account overridden to_numpy/to_pandas, \r\nbut just having this fallback would open up a lot more paths\r\n\r\n\r\n\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=changhiskhan",
                        "name": "changhiskhan",
                        "key": "changhiskhan",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Chang She",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-10-12T17:29:30.510+0000",
                    "updated": "2022-10-12T17:29:30.510+0000"
                }
            ],
            "maxResults": 6,
            "total": 6,
            "startAt": 0
        },
        "customfield_12311820": "0|z18r40:",
        "customfield_12314139": null
    }
}