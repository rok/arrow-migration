{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13257439",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257439",
    "key": "ARROW-6606",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 19200,
            "total": 19200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 19200,
            "total": 19200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6606/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 36,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257439/worklog/314612",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5430: ARROW-6606: [C++] Add PathTree tree structure\nURL: https://github.com/apache/arrow/pull/5430\n \n \n   Construct tree structure from std::vector<fs::FileStats>, following the\r\n   path directory hierarchy.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-18T19:55:47.676+0000",
                    "updated": "2019-09-18T19:55:47.676+0000",
                    "started": "2019-09-18T19:55:47.676+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "314612",
                    "issueId": "13257439"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257439/worklog/314967",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5430: ARROW-6606: [C++] Add PathTree tree structure\nURL: https://github.com/apache/arrow/pull/5430#discussion_r326108107\n \n \n\n ##########\n File path: cpp/src/arrow/filesystem/test_util.h\n ##########\n @@ -29,6 +29,29 @@ namespace fs {\n \n static constexpr double kTimeSlack = 2.0;  // In seconds\n \n+static inline FileStats File(std::string path) {\n+  FileStats st;\n+  st.set_type(FileType::File);\n+  st.set_path(path);\n+  return st;\n+}\n+\n+static inline FileStats Dir(std::string path) {\n+  FileStats st;\n+  st.set_type(FileType::Directory);\n+  st.set_path(path);\n+  return st;\n+}\n+\n+// Utility functions to help testing/debugging\n+std::ostream& operator<<(std::ostream& os, const FileStats& stats) {\n \n Review comment:\n   Perhaps put this in `filesystem.h`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T11:04:08.660+0000",
                    "updated": "2019-09-19T11:04:08.660+0000",
                    "started": "2019-09-19T11:04:08.660+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "314967",
                    "issueId": "13257439"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257439/worklog/314968",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5430: ARROW-6606: [C++] Add PathTree tree structure\nURL: https://github.com/apache/arrow/pull/5430#discussion_r326113527\n \n \n\n ##########\n File path: cpp/src/arrow/filesystem/path_tree.cc\n ##########\n @@ -0,0 +1,147 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+//\n+\n+#include \"arrow/filesystem/path_tree.h\"\n+\n+#include <algorithm>\n+#include <memory>\n+#include <string>\n+#include <unordered_map>\n+#include <utility>\n+\n+#include \"arrow/filesystem/path_util.h\"\n+\n+namespace arrow {\n+namespace fs {\n+\n+static int PathDepth(const std::string& path) {\n+  return std::count(path.begin(), path.end(), internal::kSep);\n+}\n+\n+using PathTreeByPathMap = std::unordered_map<std::string, std::shared_ptr<PathTree>>;\n+\n+template <FileType Type>\n+bool IsType(const std ::shared_ptr<PathTree>& tree) {\n+  return tree->stats().type() == Type;\n+}\n+\n+std::vector<std::shared_ptr<PathTree>> PathTree::directories() const {\n+  return filter(IsType<FileType::Directory>);\n+}\n+\n+std::vector<std::shared_ptr<PathTree>> PathTree::files() const {\n+  return filter(IsType<FileType::File>);\n+}\n+\n+std::shared_ptr<PathTree> FindAncestor(PathTreeByPathMap* directories, std::string path) {\n+  while (path != \"\") {\n+    auto parent = internal::GetAbstractPathParent(path).first;\n+    auto found = directories->find(parent);\n+    if (found != directories->end()) {\n+      return found->second;\n+    }\n+\n+    path = parent;\n+  }\n+\n+  return nullptr;\n+}\n+\n+static void LinkToParentOrInsertNewRoot(FileStats stats, PathTreeByPathMap* directories,\n+                                        PathTreeForest* forest) {\n+  auto node = std::make_shared<PathTree>(stats);\n+  if (stats.path() == \"\") {\n+    forest->push_back(node);\n+    return;\n+  }\n+\n+  auto ancestor = FindAncestor(directories, stats.path());\n+  if (ancestor) {\n+    ancestor->AddChild(node);\n+  } else {\n+    forest->push_back(node);\n+  }\n+\n+  if (IsType<FileType::Directory>(node)) {\n+    directories->insert({stats.path(), node});\n+  }\n+}\n+\n+using DirectoryByDepthMap = std::unordered_map<int, std::vector<FileStats>>;\n+\n+std::vector<int> OrderedDepths(const DirectoryByDepthMap& directories_by_depth) {\n+  std::vector<int> depths;\n+  for (auto k_v : directories_by_depth) {\n+    depths.push_back(k_v.first);\n+  }\n+\n+  // In practice, this is going to be O(lg(n)lg(lg(n))), i.e. constant.\n+  std::sort(depths.begin(), depths.end());\n+  return depths;\n+}\n+\n+Status PathTree::Make(std::vector<FileStats> stats, PathTreeForest* out) {\n+  PathTreeByPathMap directories;\n+  PathTreeForest forest;\n+\n+  // Partition the stats vector into (directories, others)\n+  auto is_directory = [](const FileStats& stats) { return stats.IsDirectory(); };\n+  std::stable_partition(stats.begin(), stats.end(), is_directory);\n+  auto mid = std::partition_point(stats.begin(), stats.end(), is_directory);\n+\n+  // First, partition directories by path depth.\n+  DirectoryByDepthMap directories_by_depth;\n \n Review comment:\n   You can even sort the file stats by string length in a work queue (without distinguishing directories up front) and build up the tree like that. I don't think you need to build directories first explicitly, everything will be done naturally in graph order.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T11:04:08.691+0000",
                    "updated": "2019-09-19T11:04:08.691+0000",
                    "started": "2019-09-19T11:04:08.690+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "314968",
                    "issueId": "13257439"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257439/worklog/314969",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5430: ARROW-6606: [C++] Add PathTree tree structure\nURL: https://github.com/apache/arrow/pull/5430#discussion_r326109408\n \n \n\n ##########\n File path: cpp/src/arrow/filesystem/path_tree.h\n ##########\n @@ -0,0 +1,100 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include \"arrow/filesystem/filesystem.h\"\n+\n+#include <algorithm>\n+#include <memory>\n+#include <utility>\n+#include <vector>\n+\n+namespace arrow {\n+namespace fs {\n+\n+/// \\brief A PathTree is a utility to transform a vector of FileStats into a\n+/// forest representation for tree traversal purposes.\n+class ARROW_EXPORT PathTree {\n+ public:\n+  explicit PathTree(FileStats stats) : stats_(stats) {}\n+  PathTree(FileStats stats, std::vector<std::shared_ptr<PathTree>> subtrees)\n+      : stats_(stats), subtrees_(std::move(subtrees)) {}\n+\n+  /// \\brief Transforms a FileStats vector into a forest of trees. Since there\n+  /// is no guarantee of complete trees, it is possible to have a forest\n+  /// (multiple roots). The caller should ensure that stats have unique path.\n+  static Status Make(std::vector<FileStats> stats,\n+                     std::vector<std::shared_ptr<PathTree>>* out);\n+\n+  /// \\brief Like MakeForest but fails if there's more than one root.\n+  static Status Make(std::vector<FileStats> stats, std::shared_ptr<PathTree>* out);\n+\n+  /// \\brief\n+  FileStats stats() const { return stats_; }\n \n Review comment:\n   Hmm... but perhaps the user only stat'ed a bunch of files without the directory entries.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T11:04:08.926+0000",
                    "updated": "2019-09-19T11:04:08.926+0000",
                    "started": "2019-09-19T11:04:08.926+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "314969",
                    "issueId": "13257439"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257439/worklog/314970",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5430: ARROW-6606: [C++] Add PathTree tree structure\nURL: https://github.com/apache/arrow/pull/5430#discussion_r326109851\n \n \n\n ##########\n File path: cpp/src/arrow/filesystem/path_tree.h\n ##########\n @@ -0,0 +1,100 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include \"arrow/filesystem/filesystem.h\"\n+\n+#include <algorithm>\n+#include <memory>\n+#include <utility>\n+#include <vector>\n+\n+namespace arrow {\n+namespace fs {\n+\n+/// \\brief A PathTree is a utility to transform a vector of FileStats into a\n+/// forest representation for tree traversal purposes.\n+class ARROW_EXPORT PathTree {\n+ public:\n+  explicit PathTree(FileStats stats) : stats_(stats) {}\n+  PathTree(FileStats stats, std::vector<std::shared_ptr<PathTree>> subtrees)\n+      : stats_(stats), subtrees_(std::move(subtrees)) {}\n+\n+  /// \\brief Transforms a FileStats vector into a forest of trees. Since there\n+  /// is no guarantee of complete trees, it is possible to have a forest\n+  /// (multiple roots). The caller should ensure that stats have unique path.\n+  static Status Make(std::vector<FileStats> stats,\n+                     std::vector<std::shared_ptr<PathTree>>* out);\n+\n+  /// \\brief Like MakeForest but fails if there's more than one root.\n+  static Status Make(std::vector<FileStats> stats, std::shared_ptr<PathTree>* out);\n+\n+  /// \\brief\n+  FileStats stats() const { return stats_; }\n+  /// \\brief Returns the subtrees\n+  std::vector<std::shared_ptr<PathTree>> subtrees() const { return subtrees_; }\n+  /// \\brief Returns a vector of immediate children directories\n+  std::vector<std::shared_ptr<PathTree>> directories() const;\n+  /// \\brief Returns a vector of immediate children files\n \n Review comment:\n   I would expect this to return a vector of `FileStats`. Why wrap them in `PathTree` objects?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T11:04:08.934+0000",
                    "updated": "2019-09-19T11:04:08.934+0000",
                    "started": "2019-09-19T11:04:08.934+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "314970",
                    "issueId": "13257439"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257439/worklog/314971",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5430: ARROW-6606: [C++] Add PathTree tree structure\nURL: https://github.com/apache/arrow/pull/5430#discussion_r326108387\n \n \n\n ##########\n File path: cpp/src/arrow/filesystem/test_util.h\n ##########\n @@ -29,6 +29,29 @@ namespace fs {\n \n static constexpr double kTimeSlack = 2.0;  // In seconds\n \n+static inline FileStats File(std::string path) {\n \n Review comment:\n   It would be better to give this a less generic name, e.g. `StatsForFile`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T11:04:08.981+0000",
                    "updated": "2019-09-19T11:04:08.981+0000",
                    "started": "2019-09-19T11:04:08.980+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "314971",
                    "issueId": "13257439"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257439/worklog/314972",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5430: ARROW-6606: [C++] Add PathTree tree structure\nURL: https://github.com/apache/arrow/pull/5430#discussion_r326108245\n \n \n\n ##########\n File path: cpp/src/arrow/filesystem/test_util.h\n ##########\n @@ -29,6 +29,29 @@ namespace fs {\n \n static constexpr double kTimeSlack = 2.0;  // In seconds\n \n+static inline FileStats File(std::string path) {\n+  FileStats st;\n+  st.set_type(FileType::File);\n+  st.set_path(path);\n+  return st;\n+}\n+\n+static inline FileStats Dir(std::string path) {\n+  FileStats st;\n+  st.set_type(FileType::Directory);\n+  st.set_path(path);\n+  return st;\n+}\n+\n+// Utility functions to help testing/debugging\n+std::ostream& operator<<(std::ostream& os, const FileStats& stats) {\n+  return os << \"FileStats(\" << stats.type() << \", \" << stats.path() << \")\";\n+}\n+\n+bool operator==(const FileStats& lhs, const FileStats& rhs) {\n \n Review comment:\n   Put this in `filesystem.h` and make it complete? (should also check mtime and size)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T11:04:08.984+0000",
                    "updated": "2019-09-19T11:04:08.984+0000",
                    "started": "2019-09-19T11:04:08.984+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "314972",
                    "issueId": "13257439"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257439/worklog/314973",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5430: ARROW-6606: [C++] Add PathTree tree structure\nURL: https://github.com/apache/arrow/pull/5430#discussion_r326112225\n \n \n\n ##########\n File path: cpp/src/arrow/filesystem/path_tree.cc\n ##########\n @@ -0,0 +1,147 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+//\n+\n+#include \"arrow/filesystem/path_tree.h\"\n+\n+#include <algorithm>\n+#include <memory>\n+#include <string>\n+#include <unordered_map>\n+#include <utility>\n+\n+#include \"arrow/filesystem/path_util.h\"\n+\n+namespace arrow {\n+namespace fs {\n+\n+static int PathDepth(const std::string& path) {\n+  return std::count(path.begin(), path.end(), internal::kSep);\n+}\n+\n+using PathTreeByPathMap = std::unordered_map<std::string, std::shared_ptr<PathTree>>;\n+\n+template <FileType Type>\n+bool IsType(const std ::shared_ptr<PathTree>& tree) {\n+  return tree->stats().type() == Type;\n+}\n+\n+std::vector<std::shared_ptr<PathTree>> PathTree::directories() const {\n+  return filter(IsType<FileType::Directory>);\n+}\n+\n+std::vector<std::shared_ptr<PathTree>> PathTree::files() const {\n+  return filter(IsType<FileType::File>);\n+}\n+\n+std::shared_ptr<PathTree> FindAncestor(PathTreeByPathMap* directories, std::string path) {\n+  while (path != \"\") {\n+    auto parent = internal::GetAbstractPathParent(path).first;\n+    auto found = directories->find(parent);\n+    if (found != directories->end()) {\n+      return found->second;\n+    }\n+\n+    path = parent;\n+  }\n+\n+  return nullptr;\n+}\n+\n+static void LinkToParentOrInsertNewRoot(FileStats stats, PathTreeByPathMap* directories,\n+                                        PathTreeForest* forest) {\n+  auto node = std::make_shared<PathTree>(stats);\n+  if (stats.path() == \"\") {\n+    forest->push_back(node);\n+    return;\n+  }\n+\n+  auto ancestor = FindAncestor(directories, stats.path());\n+  if (ancestor) {\n+    ancestor->AddChild(node);\n+  } else {\n+    forest->push_back(node);\n+  }\n+\n+  if (IsType<FileType::Directory>(node)) {\n+    directories->insert({stats.path(), node});\n+  }\n+}\n+\n+using DirectoryByDepthMap = std::unordered_map<int, std::vector<FileStats>>;\n+\n+std::vector<int> OrderedDepths(const DirectoryByDepthMap& directories_by_depth) {\n+  std::vector<int> depths;\n+  for (auto k_v : directories_by_depth) {\n+    depths.push_back(k_v.first);\n+  }\n+\n+  // In practice, this is going to be O(lg(n)lg(lg(n))), i.e. constant.\n+  std::sort(depths.begin(), depths.end());\n+  return depths;\n+}\n+\n+Status PathTree::Make(std::vector<FileStats> stats, PathTreeForest* out) {\n+  PathTreeByPathMap directories;\n+  PathTreeForest forest;\n+\n+  // Partition the stats vector into (directories, others)\n+  auto is_directory = [](const FileStats& stats) { return stats.IsDirectory(); };\n+  std::stable_partition(stats.begin(), stats.end(), is_directory);\n+  auto mid = std::partition_point(stats.begin(), stats.end(), is_directory);\n+\n+  // First, partition directories by path depth.\n+  DirectoryByDepthMap directories_by_depth;\n \n Review comment:\n   Instead of computing path depth, you can probably sort by string length...\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T11:04:08.987+0000",
                    "updated": "2019-09-19T11:04:08.987+0000",
                    "started": "2019-09-19T11:04:08.987+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "314973",
                    "issueId": "13257439"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257439/worklog/314974",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5430: ARROW-6606: [C++] Add PathTree tree structure\nURL: https://github.com/apache/arrow/pull/5430#discussion_r326109703\n \n \n\n ##########\n File path: cpp/src/arrow/filesystem/path_tree.h\n ##########\n @@ -0,0 +1,100 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include \"arrow/filesystem/filesystem.h\"\n+\n+#include <algorithm>\n+#include <memory>\n+#include <utility>\n+#include <vector>\n+\n+namespace arrow {\n+namespace fs {\n+\n+/// \\brief A PathTree is a utility to transform a vector of FileStats into a\n+/// forest representation for tree traversal purposes.\n+class ARROW_EXPORT PathTree {\n+ public:\n+  explicit PathTree(FileStats stats) : stats_(stats) {}\n+  PathTree(FileStats stats, std::vector<std::shared_ptr<PathTree>> subtrees)\n+      : stats_(stats), subtrees_(std::move(subtrees)) {}\n+\n+  /// \\brief Transforms a FileStats vector into a forest of trees. Since there\n+  /// is no guarantee of complete trees, it is possible to have a forest\n+  /// (multiple roots). The caller should ensure that stats have unique path.\n+  static Status Make(std::vector<FileStats> stats,\n+                     std::vector<std::shared_ptr<PathTree>>* out);\n+\n+  /// \\brief Like MakeForest but fails if there's more than one root.\n+  static Status Make(std::vector<FileStats> stats, std::shared_ptr<PathTree>* out);\n+\n+  /// \\brief\n+  FileStats stats() const { return stats_; }\n+  /// \\brief Returns the subtrees\n+  std::vector<std::shared_ptr<PathTree>> subtrees() const { return subtrees_; }\n+  /// \\brief Returns a vector of immediate children directories\n+  std::vector<std::shared_ptr<PathTree>> directories() const;\n \n Review comment:\n   Having both `subtrees` and `directories` sounds weird. The forest of trees is returned by `Make`. So here you should only need `directories`, right?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T11:04:09.419+0000",
                    "updated": "2019-09-19T11:04:09.419+0000",
                    "started": "2019-09-19T11:04:09.419+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "314974",
                    "issueId": "13257439"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257439/worklog/314983",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5430: ARROW-6606: [C++] Add PathTree tree structure\nURL: https://github.com/apache/arrow/pull/5430#discussion_r326128872\n \n \n\n ##########\n File path: cpp/src/arrow/filesystem/path_tree.h\n ##########\n @@ -0,0 +1,100 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include \"arrow/filesystem/filesystem.h\"\n+\n+#include <algorithm>\n+#include <memory>\n+#include <utility>\n+#include <vector>\n+\n+namespace arrow {\n+namespace fs {\n+\n+/// \\brief A PathTree is a utility to transform a vector of FileStats into a\n+/// forest representation for tree traversal purposes.\n+class ARROW_EXPORT PathTree {\n+ public:\n+  explicit PathTree(FileStats stats) : stats_(stats) {}\n+  PathTree(FileStats stats, std::vector<std::shared_ptr<PathTree>> subtrees)\n+      : stats_(stats), subtrees_(std::move(subtrees)) {}\n+\n+  /// \\brief Transforms a FileStats vector into a forest of trees. Since there\n+  /// is no guarantee of complete trees, it is possible to have a forest\n+  /// (multiple roots). The caller should ensure that stats have unique path.\n+  static Status Make(std::vector<FileStats> stats,\n+                     std::vector<std::shared_ptr<PathTree>>* out);\n+\n+  /// \\brief Like MakeForest but fails if there's more than one root.\n+  static Status Make(std::vector<FileStats> stats, std::shared_ptr<PathTree>* out);\n+\n+  /// \\brief\n+  FileStats stats() const { return stats_; }\n \n Review comment:\n   Yes, there's a test for that, an I expect this to happen.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T11:43:51.761+0000",
                    "updated": "2019-09-19T11:43:51.761+0000",
                    "started": "2019-09-19T11:43:51.760+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "314983",
                    "issueId": "13257439"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257439/worklog/314985",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5430: ARROW-6606: [C++] Add PathTree tree structure\nURL: https://github.com/apache/arrow/pull/5430#discussion_r326128872\n \n \n\n ##########\n File path: cpp/src/arrow/filesystem/path_tree.h\n ##########\n @@ -0,0 +1,100 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include \"arrow/filesystem/filesystem.h\"\n+\n+#include <algorithm>\n+#include <memory>\n+#include <utility>\n+#include <vector>\n+\n+namespace arrow {\n+namespace fs {\n+\n+/// \\brief A PathTree is a utility to transform a vector of FileStats into a\n+/// forest representation for tree traversal purposes.\n+class ARROW_EXPORT PathTree {\n+ public:\n+  explicit PathTree(FileStats stats) : stats_(stats) {}\n+  PathTree(FileStats stats, std::vector<std::shared_ptr<PathTree>> subtrees)\n+      : stats_(stats), subtrees_(std::move(subtrees)) {}\n+\n+  /// \\brief Transforms a FileStats vector into a forest of trees. Since there\n+  /// is no guarantee of complete trees, it is possible to have a forest\n+  /// (multiple roots). The caller should ensure that stats have unique path.\n+  static Status Make(std::vector<FileStats> stats,\n+                     std::vector<std::shared_ptr<PathTree>>* out);\n+\n+  /// \\brief Like MakeForest but fails if there's more than one root.\n+  static Status Make(std::vector<FileStats> stats, std::shared_ptr<PathTree>* out);\n+\n+  /// \\brief\n+  FileStats stats() const { return stats_; }\n \n Review comment:\n   Yes, there's a test for that, an I expect this to happen, hence why Make must return a forest instead of a tree.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T11:58:15.238+0000",
                    "updated": "2019-09-19T11:58:15.238+0000",
                    "started": "2019-09-19T11:58:15.237+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "314985",
                    "issueId": "13257439"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257439/worklog/314987",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5430: ARROW-6606: [C++] Add PathTree tree structure\nURL: https://github.com/apache/arrow/pull/5430#discussion_r326134035\n \n \n\n ##########\n File path: cpp/src/arrow/filesystem/path_tree.h\n ##########\n @@ -0,0 +1,100 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include \"arrow/filesystem/filesystem.h\"\n+\n+#include <algorithm>\n+#include <memory>\n+#include <utility>\n+#include <vector>\n+\n+namespace arrow {\n+namespace fs {\n+\n+/// \\brief A PathTree is a utility to transform a vector of FileStats into a\n+/// forest representation for tree traversal purposes.\n+class ARROW_EXPORT PathTree {\n+ public:\n+  explicit PathTree(FileStats stats) : stats_(stats) {}\n+  PathTree(FileStats stats, std::vector<std::shared_ptr<PathTree>> subtrees)\n+      : stats_(stats), subtrees_(std::move(subtrees)) {}\n+\n+  /// \\brief Transforms a FileStats vector into a forest of trees. Since there\n+  /// is no guarantee of complete trees, it is possible to have a forest\n+  /// (multiple roots). The caller should ensure that stats have unique path.\n+  static Status Make(std::vector<FileStats> stats,\n+                     std::vector<std::shared_ptr<PathTree>>* out);\n+\n+  /// \\brief Like MakeForest but fails if there's more than one root.\n+  static Status Make(std::vector<FileStats> stats, std::shared_ptr<PathTree>* out);\n+\n+  /// \\brief\n+  FileStats stats() const { return stats_; }\n+  /// \\brief Returns the subtrees\n+  std::vector<std::shared_ptr<PathTree>> subtrees() const { return subtrees_; }\n+  /// \\brief Returns a vector of immediate children directories\n+  std::vector<std::shared_ptr<PathTree>> directories() const;\n \n Review comment:\n   I'll just remove files/directories, I used them originally to recurse manually, but then switched to Visit.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T11:58:57.615+0000",
                    "updated": "2019-09-19T11:58:57.615+0000",
                    "started": "2019-09-19T11:58:57.615+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "314987",
                    "issueId": "13257439"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257439/worklog/315019",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5430: ARROW-6606: [C++] Add PathTree tree structure\nURL: https://github.com/apache/arrow/pull/5430#discussion_r326156782\n \n \n\n ##########\n File path: cpp/src/arrow/filesystem/test_util.h\n ##########\n @@ -29,6 +29,29 @@ namespace fs {\n \n static constexpr double kTimeSlack = 2.0;  // In seconds\n \n+static inline FileStats File(std::string path) {\n \n Review comment:\n   The goal is to write succinct test.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T12:53:15.039+0000",
                    "updated": "2019-09-19T12:53:15.039+0000",
                    "started": "2019-09-19T12:53:15.038+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "315019",
                    "issueId": "13257439"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257439/worklog/315021",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5430: ARROW-6606: [C++] Add PathTree tree structure\nURL: https://github.com/apache/arrow/pull/5430#discussion_r326156782\n \n \n\n ##########\n File path: cpp/src/arrow/filesystem/test_util.h\n ##########\n @@ -29,6 +29,29 @@ namespace fs {\n \n static constexpr double kTimeSlack = 2.0;  // In seconds\n \n+static inline FileStats File(std::string path) {\n \n Review comment:\n   The goal is to write succinct test. That's why I wouldn't namespace it in filesystem.h, maybe filesystem/test_util.h?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T12:53:36.842+0000",
                    "updated": "2019-09-19T12:53:36.842+0000",
                    "started": "2019-09-19T12:53:36.842+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "315021",
                    "issueId": "13257439"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257439/worklog/315022",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5430: ARROW-6606: [C++] Add PathTree tree structure\nURL: https://github.com/apache/arrow/pull/5430#discussion_r326156782\n \n \n\n ##########\n File path: cpp/src/arrow/filesystem/test_util.h\n ##########\n @@ -29,6 +29,29 @@ namespace fs {\n \n static constexpr double kTimeSlack = 2.0;  // In seconds\n \n+static inline FileStats File(std::string path) {\n \n Review comment:\n   The goal is to write succinct test. That's why I wouldn't namespace it in filesystem.h.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T12:53:47.060+0000",
                    "updated": "2019-09-19T12:53:47.060+0000",
                    "started": "2019-09-19T12:53:47.059+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "315022",
                    "issueId": "13257439"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257439/worklog/315025",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on issue #5430: ARROW-6606: [C++] Add PathTree tree structure\nURL: https://github.com/apache/arrow/pull/5430#issuecomment-533118959\n \n \n   I iterated a couple of time over the design. I initially implemented the tree with Directory only node\r\n   but it made the Visit awkward to use. Here's the current code (in another branch) that walks the PathTree to consume files.\r\n   ```\r\n   DataFragmentIterator FileSystemBasedDataSource::GetFragments(\r\n       std::shared_ptr<ScanOptions> options) {\r\n     std::vector<std::unique_ptr<fs::FileStats>> files;\r\n   \r\n     auto visitor = [&files](const fs::FileStats& stats) {\r\n       if (stats.IsFile()) {\r\n         files.emplace_back(new fs::FileStats(stats));\r\n       }\r\n     };\r\n     // The matcher ensures that directories (and their descendants) are not\r\n     // visited.\r\n     auto matcher = [this, options](const fs::FileStats& stats) {\r\n       return this->PartitionMatches(stats, options);\r\n     };\r\n   \r\n     for (auto tree : forest_) {\r\n       tree->Visit(visitor, matcher);\r\n     }\r\n   \r\n     auto file_it = MakeVectorIterator(std::move(files));\r\n     auto file_to_fragment = [options, this](std::unique_ptr<fs::FileStats> stats,\r\n                                             std::shared_ptr<DataFragment>* out) {\r\n       std::unique_ptr<DataFragment> fragment;\r\n       FileSource src(stats->path(), filesystem_);\r\n       RETURN_NOT_OK(format_->MakeFragment(src, options, &fragment));\r\n       *out = std::move(fragment);\r\n       return Status::OK();\r\n     };\r\n   \r\n     return MakeMaybeMapIterator(file_to_fragment, std::move(file_it));\r\n   }\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T12:58:35.496+0000",
                    "updated": "2019-09-19T12:58:35.496+0000",
                    "started": "2019-09-19T12:58:35.495+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "315025",
                    "issueId": "13257439"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257439/worklog/315028",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #5430: ARROW-6606: [C++] Add PathTree tree structure\nURL: https://github.com/apache/arrow/pull/5430#issuecomment-533119598\n \n \n   You could have a `VisitFiles` and/or a `VisitFilesRecursive`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T13:00:19.998+0000",
                    "updated": "2019-09-19T13:00:19.998+0000",
                    "started": "2019-09-19T13:00:19.998+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "315028",
                    "issueId": "13257439"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257439/worklog/315105",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on issue #5430: ARROW-6606: [C++] Add PathTree tree structure\nURL: https://github.com/apache/arrow/pull/5430#issuecomment-533170754\n \n \n   Do you prefer I rewrite it that way?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T14:57:48.561+0000",
                    "updated": "2019-09-19T14:57:48.561+0000",
                    "started": "2019-09-19T14:57:48.561+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "315105",
                    "issueId": "13257439"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257439/worklog/315109",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #5430: ARROW-6606: [C++] Add PathTree tree structure\nURL: https://github.com/apache/arrow/pull/5430#issuecomment-533172128\n \n \n   You mean as a tree of directories? Yes.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-19T15:00:44.016+0000",
                    "updated": "2019-09-19T15:00:44.016+0000",
                    "started": "2019-09-19T15:00:44.016+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "315109",
                    "issueId": "13257439"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257439/worklog/315916",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5430: ARROW-6606: [C++] Add PathTree tree structure\nURL: https://github.com/apache/arrow/pull/5430#discussion_r326784425\n \n \n\n ##########\n File path: cpp/src/arrow/filesystem/test_util.h\n ##########\n @@ -29,6 +29,29 @@ namespace fs {\n \n static constexpr double kTimeSlack = 2.0;  // In seconds\n \n+static inline FileStats File(std::string path) {\n+  FileStats st;\n+  st.set_type(FileType::File);\n+  st.set_path(path);\n+  return st;\n+}\n+\n+static inline FileStats Dir(std::string path) {\n+  FileStats st;\n+  st.set_type(FileType::Directory);\n+  st.set_path(path);\n+  return st;\n+}\n+\n+// Utility functions to help testing/debugging\n+std::ostream& operator<<(std::ostream& os, const FileStats& stats) {\n+  return os << \"FileStats(\" << stats.type() << \", \" << stats.path() << \")\";\n+}\n+\n+bool operator==(const FileStats& lhs, const FileStats& rhs) {\n \n Review comment:\n   Done in another PR.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-20T20:07:13.296+0000",
                    "updated": "2019-09-20T20:07:13.296+0000",
                    "started": "2019-09-20T20:07:13.295+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "315916",
                    "issueId": "13257439"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 19200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@754df772[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@642b8d06[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@121e48c2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2ae5b43a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2c26e0eb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@328c5136[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@523457fd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@55f76de5[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4e4dfe08[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1e180316[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6ee32497[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@95e4eb[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 19200,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Sep 26 14:54:02 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-09-26T14:54:02.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6606/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2019-09-18T17:29:34.000+0000",
        "updated": "2019-09-30T13:35:17.000+0000",
        "timeoriginalestimate": null,
        "description": "This will be used by FileSystemDataSource for pushdown predicate pruning of branches.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 19200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Construct tree structure from std::vector<fs::FileStats>",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257439/comment/16932711",
                    "id": "16932711",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "You mean a tree that mimicks the filesystem hierarchy of the given filesystem entries? Perhaps that can be done at the filesystem level.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-09-18T17:49:11.518+0000",
                    "updated": "2019-09-18T17:49:11.518+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257439/comment/16932772",
                    "id": "16932772",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
                        "name": "fsaintjacques",
                        "key": "fsaintjacques",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
                        },
                        "displayName": "Francois Saint-Jacques",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "This is my plan/implementation, pending PR in a few hours.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
                        "name": "fsaintjacques",
                        "key": "fsaintjacques",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
                        },
                        "displayName": "Francois Saint-Jacques",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-09-18T19:37:49.529+0000",
                    "updated": "2019-09-18T19:37:49.529+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257439/comment/16938695",
                    "id": "16938695",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 5430\n[https://github.com/apache/arrow/pull/5430]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-09-26T14:54:02.745+0000",
                    "updated": "2019-09-26T14:54:02.745+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|z06rtk:",
        "customfield_12314139": null
    }
}