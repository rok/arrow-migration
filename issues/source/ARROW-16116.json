{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13437718",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437718",
    "key": "ARROW-16116",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351550",
                "id": "12351550",
                "name": "9.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-08-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12637144",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12637144",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13434418",
                    "key": "ARROW-15961",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13434418",
                    "fields": {
                        "summary": "[C++] Check nullability when validating fields on batches or struct arrays",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16116/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 12,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437718/worklog/754259",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on PR #12829:\nURL: https://github.com/apache/arrow/pull/12829#issuecomment-1092019478\n\n   I wasn't able to find a good way to test the int32/int64/byte array decimal cases, perhaps using the Parquet writer API directly to build the file?\n\n\n",
                    "created": "2022-04-07T17:40:51.011+0000",
                    "updated": "2022-04-07T17:40:51.011+0000",
                    "started": "2022-04-07T17:40:51.010+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "754259",
                    "issueId": "13437718"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437718/worklog/754263",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #12829:\nURL: https://github.com/apache/arrow/pull/12829#issuecomment-1092022546\n\n   https://issues.apache.org/jira/browse/ARROW-16116\n\n\n",
                    "created": "2022-04-07T17:44:24.631+0000",
                    "updated": "2022-04-07T17:44:24.631+0000",
                    "started": "2022-04-07T17:44:24.631+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "754263",
                    "issueId": "13437718"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437718/worklog/754703",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on PR #12829:\nURL: https://github.com/apache/arrow/pull/12829#issuecomment-1093070091\n\n   Added a test that directly uses the Parquet writer to generate decimals encoded as binary/int32/int64 to test those paths, too.\n\n\n",
                    "created": "2022-04-08T16:33:34.003+0000",
                    "updated": "2022-04-08T16:33:34.003+0000",
                    "started": "2022-04-08T16:33:34.002+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "754703",
                    "issueId": "13437718"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437718/worklog/763385",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #12829:\nURL: https://github.com/apache/arrow/pull/12829#discussion_r860676066\n\n\n##########\ncpp/src/parquet/arrow/reader_internal.cc:\n##########\n@@ -434,14 +480,26 @@ Status TransferBinary(RecordReader* reader, MemoryPool* pool,\n   DCHECK(binary_reader);\n   auto chunks = binary_reader->GetBuilderChunks();\n   for (auto& chunk : chunks) {\n-    if (!chunk->type()->Equals(*logical_value_type)) {\n+    if (!chunk->type()->Equals(*logical_type_field->type())) {\n       // XXX: if a LargeBinary chunk is larger than 2GB, the MSBs of offsets\n       // will be lost because they are first created as int32 and then cast to int64.\n       ARROW_ASSIGN_OR_RAISE(\n-          chunk, ::arrow::compute::Cast(*chunk, logical_value_type, cast_options, &ctx));\n+          chunk,\n+          ::arrow::compute::Cast(*chunk, logical_type_field->type(), cast_options, &ctx));\n     }\n   }\n-  *out = std::make_shared<ChunkedArray>(chunks, logical_value_type);\n+  if (!logical_type_field->nullable()) {\n\nReview Comment:\n   Perhaps make a helper function for this operation and refactor?\n\n\n\n##########\ncpp/src/parquet/arrow/reader_internal.cc:\n##########\n@@ -409,22 +441,36 @@ Status TransferDate64(RecordReader* reader, MemoryPool* pool,\n \n Status TransferDictionary(RecordReader* reader,\n                           const std::shared_ptr<DataType>& logical_value_type,\n-                          std::shared_ptr<ChunkedArray>* out) {\n+                          bool nullable, std::shared_ptr<ChunkedArray>* out) {\n   auto dict_reader = dynamic_cast<DictionaryRecordReader*>(reader);\n   DCHECK(dict_reader);\n   *out = dict_reader->GetResult();\n   if (!logical_value_type->Equals(*(*out)->type())) {\n     ARROW_ASSIGN_OR_RAISE(*out, (*out)->View(logical_value_type));\n   }\n+  if (!nullable) {\n+    // Reconstruct each chunk without nulls.\n\nReview Comment:\n   Is this necessary for correctness or is it just an optimization of eliding the null buffer?\n\n\n\n",
                    "created": "2022-04-28T09:25:17.093+0000",
                    "updated": "2022-04-28T09:25:17.093+0000",
                    "started": "2022-04-28T09:25:17.093+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "763385",
                    "issueId": "13437718"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437718/worklog/763606",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #12829:\nURL: https://github.com/apache/arrow/pull/12829#discussion_r861034423\n\n\n##########\ncpp/src/parquet/arrow/reader_internal.cc:\n##########\n@@ -409,22 +441,36 @@ Status TransferDate64(RecordReader* reader, MemoryPool* pool,\n \n Status TransferDictionary(RecordReader* reader,\n                           const std::shared_ptr<DataType>& logical_value_type,\n-                          std::shared_ptr<ChunkedArray>* out) {\n+                          bool nullable, std::shared_ptr<ChunkedArray>* out) {\n   auto dict_reader = dynamic_cast<DictionaryRecordReader*>(reader);\n   DCHECK(dict_reader);\n   *out = dict_reader->GetResult();\n   if (!logical_value_type->Equals(*(*out)->type())) {\n     ARROW_ASSIGN_OR_RAISE(*out, (*out)->View(logical_value_type));\n   }\n+  if (!nullable) {\n+    // Reconstruct each chunk without nulls.\n\nReview Comment:\n   We have to set null_count = 0 and then either we have to drop or reconstruct the null buffer (and then of course it makes more sense to just drop it). I've factored this out.\n\n\n\n",
                    "created": "2022-04-28T15:33:10.946+0000",
                    "updated": "2022-04-28T15:33:10.946+0000",
                    "started": "2022-04-28T15:33:10.946+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "763606",
                    "issueId": "13437718"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437718/worklog/763684",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #12829:\nURL: https://github.com/apache/arrow/pull/12829#discussion_r861085474\n\n\n##########\ncpp/src/parquet/arrow/reader_internal.cc:\n##########\n@@ -409,22 +441,36 @@ Status TransferDate64(RecordReader* reader, MemoryPool* pool,\n \n Status TransferDictionary(RecordReader* reader,\n                           const std::shared_ptr<DataType>& logical_value_type,\n-                          std::shared_ptr<ChunkedArray>* out) {\n+                          bool nullable, std::shared_ptr<ChunkedArray>* out) {\n   auto dict_reader = dynamic_cast<DictionaryRecordReader*>(reader);\n   DCHECK(dict_reader);\n   *out = dict_reader->GetResult();\n   if (!logical_value_type->Equals(*(*out)->type())) {\n     ARROW_ASSIGN_OR_RAISE(*out, (*out)->View(logical_value_type));\n   }\n+  if (!nullable) {\n+    // Reconstruct each chunk without nulls.\n\nReview Comment:\n   Is there a situation where said null buffer would not be all ones?\n\n\n\n",
                    "created": "2022-04-28T16:19:56.255+0000",
                    "updated": "2022-04-28T16:19:56.255+0000",
                    "started": "2022-04-28T16:19:56.255+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "763684",
                    "issueId": "13437718"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437718/worklog/763690",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #12829:\nURL: https://github.com/apache/arrow/pull/12829#discussion_r861088396\n\n\n##########\ncpp/src/parquet/arrow/reader_internal.cc:\n##########\n@@ -409,22 +441,36 @@ Status TransferDate64(RecordReader* reader, MemoryPool* pool,\n \n Status TransferDictionary(RecordReader* reader,\n                           const std::shared_ptr<DataType>& logical_value_type,\n-                          std::shared_ptr<ChunkedArray>* out) {\n+                          bool nullable, std::shared_ptr<ChunkedArray>* out) {\n   auto dict_reader = dynamic_cast<DictionaryRecordReader*>(reader);\n   DCHECK(dict_reader);\n   *out = dict_reader->GetResult();\n   if (!logical_value_type->Equals(*(*out)->type())) {\n     ARROW_ASSIGN_OR_RAISE(*out, (*out)->View(logical_value_type));\n   }\n+  if (!nullable) {\n+    // Reconstruct each chunk without nulls.\n\nReview Comment:\n   What would happen with nested fields is that the parent array's null buffer would get folded into the children and then on reading it back, there would be nulls: https://github.com/apache/arrow/pull/12706#issuecomment-1086357554\n\n\n\n",
                    "created": "2022-04-28T16:23:11.451+0000",
                    "updated": "2022-04-28T16:23:11.451+0000",
                    "started": "2022-04-28T16:23:11.451+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "763690",
                    "issueId": "13437718"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437718/worklog/763698",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #12829:\nURL: https://github.com/apache/arrow/pull/12829#discussion_r861097651\n\n\n##########\ncpp/src/parquet/arrow/reader_internal.cc:\n##########\n@@ -409,22 +441,36 @@ Status TransferDate64(RecordReader* reader, MemoryPool* pool,\n \n Status TransferDictionary(RecordReader* reader,\n                           const std::shared_ptr<DataType>& logical_value_type,\n-                          std::shared_ptr<ChunkedArray>* out) {\n+                          bool nullable, std::shared_ptr<ChunkedArray>* out) {\n   auto dict_reader = dynamic_cast<DictionaryRecordReader*>(reader);\n   DCHECK(dict_reader);\n   *out = dict_reader->GetResult();\n   if (!logical_value_type->Equals(*(*out)->type())) {\n     ARROW_ASSIGN_OR_RAISE(*out, (*out)->View(logical_value_type));\n   }\n+  if (!nullable) {\n+    // Reconstruct each chunk without nulls.\n\nReview Comment:\n   Hmm, I see, thank you.\n\n\n\n",
                    "created": "2022-04-28T16:33:02.436+0000",
                    "updated": "2022-04-28T16:33:02.436+0000",
                    "started": "2022-04-28T16:33:02.435+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "763698",
                    "issueId": "13437718"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437718/worklog/763699",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #12829:\nURL: https://github.com/apache/arrow/pull/12829#discussion_r861098633\n\n\n##########\ncpp/src/parquet/arrow/reader_internal.cc:\n##########\n@@ -640,43 +696,55 @@ static Status DecimalIntegerTransfer(RecordReader* reader, MemoryPool* pool,\n ///    representing the high and low bits of each decimal value.\n template <typename DecimalArrayType, typename ParquetType>\n Status TransferDecimal(RecordReader* reader, MemoryPool* pool,\n-                       const std::shared_ptr<DataType>& type, Datum* out) {\n+                       const std::shared_ptr<Field>& field, Datum* out) {\n   auto binary_reader = dynamic_cast<BinaryRecordReader*>(reader);\n   DCHECK(binary_reader);\n   ::arrow::ArrayVector chunks = binary_reader->GetBuilderChunks();\n   for (size_t i = 0; i < chunks.size(); ++i) {\n     std::shared_ptr<Array> chunk_as_decimal;\n     auto fn = &DecimalConverter<DecimalArrayType, ParquetType>::ConvertToDecimal;\n-    RETURN_NOT_OK(fn(*chunks[i], type, pool, &chunk_as_decimal));\n+    RETURN_NOT_OK(fn(*chunks[i], field->type(), pool, &chunk_as_decimal));\n     // Replace the chunk, which will hopefully also free memory as we go\n     chunks[i] = chunk_as_decimal;\n   }\n-  *out = std::make_shared<ChunkedArray>(chunks, type);\n+  if (!field->nullable()) {\n\nReview Comment:\n   Looks like you forgot to refactor this one?\n\n\n\n",
                    "created": "2022-04-28T16:34:12.588+0000",
                    "updated": "2022-04-28T16:34:12.588+0000",
                    "started": "2022-04-28T16:34:12.588+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "763699",
                    "issueId": "13437718"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437718/worklog/763809",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #12829:\nURL: https://github.com/apache/arrow/pull/12829#discussion_r861208035\n\n\n##########\ncpp/src/parquet/arrow/reader_internal.cc:\n##########\n@@ -640,43 +696,55 @@ static Status DecimalIntegerTransfer(RecordReader* reader, MemoryPool* pool,\n ///    representing the high and low bits of each decimal value.\n template <typename DecimalArrayType, typename ParquetType>\n Status TransferDecimal(RecordReader* reader, MemoryPool* pool,\n-                       const std::shared_ptr<DataType>& type, Datum* out) {\n+                       const std::shared_ptr<Field>& field, Datum* out) {\n   auto binary_reader = dynamic_cast<BinaryRecordReader*>(reader);\n   DCHECK(binary_reader);\n   ::arrow::ArrayVector chunks = binary_reader->GetBuilderChunks();\n   for (size_t i = 0; i < chunks.size(); ++i) {\n     std::shared_ptr<Array> chunk_as_decimal;\n     auto fn = &DecimalConverter<DecimalArrayType, ParquetType>::ConvertToDecimal;\n-    RETURN_NOT_OK(fn(*chunks[i], type, pool, &chunk_as_decimal));\n+    RETURN_NOT_OK(fn(*chunks[i], field->type(), pool, &chunk_as_decimal));\n     // Replace the chunk, which will hopefully also free memory as we go\n     chunks[i] = chunk_as_decimal;\n   }\n-  *out = std::make_shared<ChunkedArray>(chunks, type);\n+  if (!field->nullable()) {\n\nReview Comment:\n   Ah my bad, fixed now.\n\n\n\n",
                    "created": "2022-04-28T18:38:45.608+0000",
                    "updated": "2022-04-28T18:38:45.608+0000",
                    "started": "2022-04-28T18:38:45.608+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "763809",
                    "issueId": "13437718"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437718/worklog/765973",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #12829: ARROW-16116: [C++] Handle non-nullable fields when reading Parquet\nURL: https://github.com/apache/arrow/pull/12829\n\n\n",
                    "created": "2022-05-04T13:19:25.795+0000",
                    "updated": "2022-05-04T13:19:25.795+0000",
                    "started": "2022-05-04T13:19:25.795+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "765973",
                    "issueId": "13437718"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437718/worklog/767645",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on PR #12829:\nURL: https://github.com/apache/arrow/pull/12829#issuecomment-1120343386\n\n   Benchmark runs are scheduled for baseline = 1808494f86e540347dc3940e6e57986806413001 and contender = 7f6b074b84b1ca519b7c5fc7da318e8d47d44278. 7f6b074b84b1ca519b7c5fc7da318e8d47d44278 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/b3dbc16f80514158bdcc1f2c93c2148d...e2592c5d9a604071bae034a1556f635e/)\n   [Finished :arrow_down:0.54% :arrow_up:0.0%] [test-mac-arm](https://conbench.ursa.dev/compare/runs/476775127fc54c78a01260f821b4beea...aa84145048fb44108095b94dd02ae5f9/)\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/61b42cdea8a4446e8ff21618e2281bdd...b529fb63aa9c499dba9d6892c752181d/)\n   [Finished :arrow_down:0.08% :arrow_up:0.0%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/1687cc6b1d28479296cb21ba5a7c102f...d48fab4fd8dc48a3a835bbd7e24fa8a0/)\n   Buildkite builds:\n   [Finished] [`7f6b074b` ec2-t3-xlarge-us-east-2](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ec2-t3-xlarge-us-east-2/builds/695)\n   [Finished] [`7f6b074b` test-mac-arm](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-test-mac-arm/builds/692)\n   [Finished] [`7f6b074b` ursa-i9-9960x](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-i9-9960x/builds/681)\n   [Finished] [`7f6b074b` ursa-thinkcentre-m75q](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-thinkcentre-m75q/builds/697)\n   [Finished] [`1808494f` ec2-t3-xlarge-us-east-2](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ec2-t3-xlarge-us-east-2/builds/694)\n   [Finished] [`1808494f` test-mac-arm](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-test-mac-arm/builds/691)\n   [Finished] [`1808494f` ursa-i9-9960x](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-i9-9960x/builds/680)\n   [Finished] [`1808494f` ursa-thinkcentre-m75q](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-thinkcentre-m75q/builds/696)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python, R. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n",
                    "created": "2022-05-08T03:41:17.464+0000",
                    "updated": "2022-05-08T03:41:17.464+0000",
                    "started": "2022-05-08T03:41:17.464+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "767645",
                    "issueId": "13437718"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 7200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5f616560[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@391462ca[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@37dbb2d5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2d4384d6[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7dd31eec[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@325418af[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@58f3592a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@692703d6[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@ce64460[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1e65b433[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5c9d84dc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@d75152a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 7200,
        "customfield_12312520": null,
        "customfield_12312521": "Wed May 04 13:19:21 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-05-04T13:19:21.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-16116/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2022-04-04T21:19:47.000+0000",
        "updated": "2022-05-08T03:41:18.000+0000",
        "timeoriginalestimate": null,
        "description": "ARROW-15961 found that the Parquet Arrow reader wasn't respecting the nullable aspect of fields, we need to ensure that if we reconstruct an array for a non-nullable field, that it has no validity bitmap. We need to also add tests for this case, they're implicitly tested in a few places, but we should explicitly test this for all supported types.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 7200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Properly handle non-nullable fields in Parquet reading",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437718/comment/17531720",
                    "id": "17531720",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 12829\n[https://github.com/apache/arrow/pull/12829]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-05-04T13:19:21.581+0000",
                    "updated": "2022-05-04T13:19:21.581+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z1153c:",
        "customfield_12314139": null
    }
}