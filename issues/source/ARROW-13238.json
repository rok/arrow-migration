{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13387057",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13387057",
    "key": "ARROW-13238",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12618457",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12618457",
                "type": {
                    "id": "12310460",
                    "name": "Child-Issue",
                    "inward": "is a child of",
                    "outward": "is a parent of",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310460"
                },
                "inwardIssue": {
                    "id": "13376404",
                    "key": "ARROW-12633",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376404",
                    "fields": {
                        "summary": "[C++] Query engine umbrella issue",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 27000,
            "total": 27000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 27000,
            "total": 27000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13238/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 45,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13387057/worklog/619422",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz opened a new pull request #10664:\nURL: https://github.com/apache/arrow/pull/10664\n\n\n   Replaces the body of AsyncScanner::ScanBatchesAsync with usage of an ExecPlan\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T15:28:12.847+0000",
                    "updated": "2021-07-06T15:28:12.847+0000",
                    "started": "2021-07-06T15:28:12.847+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619422",
                    "issueId": "13387057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13387057/worklog/619423",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10664:\nURL: https://github.com/apache/arrow/pull/10664#issuecomment-874860071\n\n\n   https://issues.apache.org/jira/browse/ARROW-13238\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T15:28:36.529+0000",
                    "updated": "2021-07-06T15:28:36.529+0000",
                    "started": "2021-07-06T15:28:36.528+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619423",
                    "issueId": "13387057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13387057/worklog/619438",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10664:\nURL: https://github.com/apache/arrow/pull/10664#discussion_r664679484\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/scanner.cc\n##########\n@@ -604,11 +654,93 @@ Result<EnumeratedRecordBatchGenerator> AsyncScanner::ScanBatchesUnorderedAsync()\n   return ScanBatchesUnorderedAsync(internal::GetCpuThreadPool());\n }\n \n+namespace {\n+Result<EnumeratedRecordBatch> ToEnumeratedRecordBatch(\n+    const util::optional<compute::ExecBatch>& batch, const ScanOptions& options,\n+    const FragmentVector& fragments) {\n+  int num_fields = options.projected_schema->num_fields();\n+\n+  ArrayVector columns(num_fields);\n+  for (size_t i = 0; i < columns.size(); ++i) {\n+    const Datum& value = batch->values[i];\n+    if (value.is_array()) {\n+      columns[i] = value.make_array();\n+      continue;\n+    }\n+    ARROW_ASSIGN_OR_RAISE(\n+        columns[i], MakeArrayFromScalar(*value.scalar(), batch->length, options.pool));\n+  }\n+\n+  EnumeratedRecordBatch out;\n+  out.fragment.index = batch->values[num_fields].scalar_as<Int32Scalar>().value;\n+  out.fragment.value = fragments[out.fragment.index];\n+  out.fragment.last = false;  // ignored during reordering\n+\n+  out.record_batch.index = batch->values[num_fields + 1].scalar_as<Int32Scalar>().value;\n+  out.record_batch.value =\n+      RecordBatch::Make(options.projected_schema, batch->length, std::move(columns));\n+  out.record_batch.last = batch->values[num_fields + 2].scalar_as<BooleanScalar>().value;\n+\n+  return out;\n+}\n+}  // namespace\n+\n Result<EnumeratedRecordBatchGenerator> AsyncScanner::ScanBatchesUnorderedAsync(\n     internal::Executor* cpu_executor) {\n-  ARROW_ASSIGN_OR_RAISE(auto fragment_gen, GetFragments());\n-  return ScanBatchesUnorderedAsyncImpl(scan_options_, std::move(fragment_gen),\n-                                       cpu_executor);\n+  if (!scan_options_->use_threads) {\n+    cpu_executor = nullptr;\n+  }\n+\n+  auto exec_context =\n+      std::make_shared<compute::ExecContext>(scan_options_->pool, cpu_executor);\n+\n+  ARROW_ASSIGN_OR_RAISE(auto plan, compute::ExecPlan::Make(exec_context.get()));\n+\n+  // Ensure plan, exec_context outlive usage of the returned generator\n+  plans_.emplace(plan, std::move(exec_context));\n\nReview comment:\n       In other places we wrap the generator with a generator that holds a reference to whatever resources are necessary - why doesn't that work here?\n\n##########\nFile path: cpp/src/arrow/dataset/scanner.cc\n##########\n@@ -428,6 +428,11 @@ class ARROW_DS_EXPORT AsyncScanner : public Scanner,\n   Result<FragmentGenerator> GetFragments() const;\n \n   std::shared_ptr<Dataset> dataset_;\n+\n+  // XXX if Scanner were truly single-use this would be a 1:1 relationship\n\nReview comment:\n       Is this worth filing a follow-up for? I'd guess a lot of scanner usage is already single-use.\n\n##########\nFile path: cpp/src/arrow/dataset/scanner.cc\n##########\n@@ -428,6 +428,11 @@ class ARROW_DS_EXPORT AsyncScanner : public Scanner,\n   Result<FragmentGenerator> GetFragments() const;\n \n   std::shared_ptr<Dataset> dataset_;\n+\n+  // XXX if Scanner were truly single-use this would be a 1:1 relationship\n+  std::unordered_map<std::shared_ptr<compute::ExecPlan>,\n+                     std::shared_ptr<compute::ExecContext>>\n+      plans_;\n\nReview comment:\n       This is a little questionable in that I don't think the lifetime of these generators was tied to the lifetime of the scanner before. Maybe we should also keep a reference to the scanner from the generators?\n\n##########\nFile path: cpp/src/arrow/dataset/scanner.cc\n##########\n@@ -525,6 +530,64 @@ Result<AsyncGenerator<EnumeratedRecordBatchGenerator>> FragmentsToBatches(\n                              });\n }\n \n+Result<compute::ExecNode*> MakeScanNode(compute::ExecPlan* plan,\n+                                        FragmentGenerator fragment_gen,\n+                                        std::shared_ptr<ScanOptions> options) {\n+  if (!options->use_async) {\n+    return Status::NotImplemented(\"ScanNodes without asynchrony\");\n+  }\n+\n+  ARROW_ASSIGN_OR_RAISE(\n+      auto batch_gen_gen,\n+      FragmentsToBatches(std::move(fragment_gen), options, /*filter_and_project=*/false));\n+\n+  auto batch_gen_gen_readahead =\n+      MakeSerialReadaheadGenerator(std::move(batch_gen_gen), options->fragment_readahead);\n+\n+  auto merged_batch_gen = MakeMergedGenerator(std::move(batch_gen_gen_readahead),\n+                                              options->fragment_readahead);\n+\n+  auto batch_gen =\n+      MakeReadaheadGenerator(std::move(merged_batch_gen), options->fragment_readahead);\n+\n+  auto gen = MakeMappedGenerator(\n+      std::move(batch_gen),\n+      [options](const EnumeratedRecordBatch& partial)\n+          -> Result<util::optional<compute::ExecBatch>> {\n+        ARROW_ASSIGN_OR_RAISE(\n+            util::optional<compute::ExecBatch> batch,\n+            compute::MakeExecBatch(*options->dataset_schema, partial.record_batch.value));\n+        // TODO if a fragment failed to perform projection pushdown, there may be\n+        // unnecessarily materialized columns in batch. We can drop them now instead of\n+        // letting them coast through the rest of the plan.\n+\n+        // TODO fragments may be able to attach more guarantees to batches than this,\n+        // for example parquet's row group stats. Failing to do this leaves perf on the\n+        // table because row group stats could be used to skip kernel execs in FilterNode\n+        batch->guarantee = partial.fragment.value->partition_expression();\n+\n+        // tag rows with fragment- and batch-of-origin\n+        batch->values.emplace_back(partial.fragment.index);\n+        batch->values.emplace_back(partial.record_batch.index);\n+        batch->values.emplace_back(partial.record_batch.last);\n\nReview comment:\n       It is a little unfortunate that we're making several heap allocations for every batch to carry effectively three integers (though I guess the overhead is probably not noticeable in the grand scheme of things and batches should be relatively large).\n\n##########\nFile path: cpp/src/arrow/dataset/scanner.cc\n##########\n@@ -604,11 +654,93 @@ Result<EnumeratedRecordBatchGenerator> AsyncScanner::ScanBatchesUnorderedAsync()\n   return ScanBatchesUnorderedAsync(internal::GetCpuThreadPool());\n }\n \n+namespace {\n+Result<EnumeratedRecordBatch> ToEnumeratedRecordBatch(\n+    const util::optional<compute::ExecBatch>& batch, const ScanOptions& options,\n+    const FragmentVector& fragments) {\n+  int num_fields = options.projected_schema->num_fields();\n+\n+  ArrayVector columns(num_fields);\n+  for (size_t i = 0; i < columns.size(); ++i) {\n+    const Datum& value = batch->values[i];\n+    if (value.is_array()) {\n+      columns[i] = value.make_array();\n+      continue;\n+    }\n+    ARROW_ASSIGN_OR_RAISE(\n+        columns[i], MakeArrayFromScalar(*value.scalar(), batch->length, options.pool));\n+  }\n+\n+  EnumeratedRecordBatch out;\n+  out.fragment.index = batch->values[num_fields].scalar_as<Int32Scalar>().value;\n+  out.fragment.value = fragments[out.fragment.index];\n+  out.fragment.last = false;  // ignored during reordering\n+\n+  out.record_batch.index = batch->values[num_fields + 1].scalar_as<Int32Scalar>().value;\n+  out.record_batch.value =\n+      RecordBatch::Make(options.projected_schema, batch->length, std::move(columns));\n+  out.record_batch.last = batch->values[num_fields + 2].scalar_as<BooleanScalar>().value;\n+\n+  return out;\n+}\n+}  // namespace\n+\n Result<EnumeratedRecordBatchGenerator> AsyncScanner::ScanBatchesUnorderedAsync(\n     internal::Executor* cpu_executor) {\n-  ARROW_ASSIGN_OR_RAISE(auto fragment_gen, GetFragments());\n-  return ScanBatchesUnorderedAsyncImpl(scan_options_, std::move(fragment_gen),\n-                                       cpu_executor);\n+  if (!scan_options_->use_threads) {\n+    cpu_executor = nullptr;\n+  }\n+\n+  auto exec_context =\n+      std::make_shared<compute::ExecContext>(scan_options_->pool, cpu_executor);\n+\n+  ARROW_ASSIGN_OR_RAISE(auto plan, compute::ExecPlan::Make(exec_context.get()));\n+\n+  // Ensure plan, exec_context outlive usage of the returned generator\n+  plans_.emplace(plan, std::move(exec_context));\n\nReview comment:\n       I guess - we might drop the outermost generator but not necessarily the whole graph of generators?\n\n##########\nFile path: cpp/src/arrow/dataset/scanner_test.cc\n##########\n@@ -1254,8 +1261,32 @@ TEST(ScanNode, DeferredFilterOnPhysicalColumn) {\n               ResultWith(UnorderedElementsAreArray(expected)));\n }\n \n-TEST(ScanNode, ProjectionPushdown) {\n-  // ensure non-projected columns are dropped\n+TEST(ScanNode, DISABLED_ProjectionPushdown) {\n\nReview comment:\n       Disabled because of that TODO above?\n\n##########\nFile path: cpp/src/arrow/dataset/scanner.cc\n##########\n@@ -525,6 +530,64 @@ Result<AsyncGenerator<EnumeratedRecordBatchGenerator>> FragmentsToBatches(\n                              });\n }\n \n+Result<compute::ExecNode*> MakeScanNode(compute::ExecPlan* plan,\n+                                        FragmentGenerator fragment_gen,\n+                                        std::shared_ptr<ScanOptions> options) {\n+  if (!options->use_async) {\n+    return Status::NotImplemented(\"ScanNodes without asynchrony\");\n+  }\n+\n+  ARROW_ASSIGN_OR_RAISE(\n+      auto batch_gen_gen,\n+      FragmentsToBatches(std::move(fragment_gen), options, /*filter_and_project=*/false));\n+\n+  auto batch_gen_gen_readahead =\n+      MakeSerialReadaheadGenerator(std::move(batch_gen_gen), options->fragment_readahead);\n+\n+  auto merged_batch_gen = MakeMergedGenerator(std::move(batch_gen_gen_readahead),\n+                                              options->fragment_readahead);\n+\n+  auto batch_gen =\n+      MakeReadaheadGenerator(std::move(merged_batch_gen), options->fragment_readahead);\n+\n+  auto gen = MakeMappedGenerator(\n+      std::move(batch_gen),\n+      [options](const EnumeratedRecordBatch& partial)\n+          -> Result<util::optional<compute::ExecBatch>> {\n+        ARROW_ASSIGN_OR_RAISE(\n+            util::optional<compute::ExecBatch> batch,\n+            compute::MakeExecBatch(*options->dataset_schema, partial.record_batch.value));\n+        // TODO if a fragment failed to perform projection pushdown, there may be\n+        // unnecessarily materialized columns in batch. We can drop them now instead of\n+        // letting them coast through the rest of the plan.\n+\n+        // TODO fragments may be able to attach more guarantees to batches than this,\n+        // for example parquet's row group stats. Failing to do this leaves perf on the\n+        // table because row group stats could be used to skip kernel execs in FilterNode\n+        batch->guarantee = partial.fragment.value->partition_expression();\n+\n+        // tag rows with fragment- and batch-of-origin\n+        batch->values.emplace_back(partial.fragment.index);\n+        batch->values.emplace_back(partial.record_batch.index);\n+        batch->values.emplace_back(partial.record_batch.last);\n\nReview comment:\n       I guess if it is ever noticeable overhead, we could make the booleans singletons and pool the integer allocations.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T16:02:12.627+0000",
                    "updated": "2021-07-06T16:02:12.627+0000",
                    "started": "2021-07-06T16:02:12.627+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619438",
                    "issueId": "13387057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13387057/worklog/619439",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #10664:\nURL: https://github.com/apache/arrow/pull/10664#issuecomment-874887015\n\n\n   I'll test this on EC2 when I get a chance and compare to 4.0/current master.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T16:02:35.900+0000",
                    "updated": "2021-07-06T16:02:35.900+0000",
                    "started": "2021-07-06T16:02:35.899+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619439",
                    "issueId": "13387057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13387057/worklog/619441",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #10664:\nURL: https://github.com/apache/arrow/pull/10664#issuecomment-874887902\n\n\n   @ursabot please benchmark lang=Python\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T16:03:35.691+0000",
                    "updated": "2021-07-06T16:03:35.691+0000",
                    "started": "2021-07-06T16:03:35.691+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619441",
                    "issueId": "13387057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13387057/worklog/619442",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on pull request #10664:\nURL: https://github.com/apache/arrow/pull/10664#issuecomment-874888474\n\n\n   Benchmark runs are scheduled for baseline = 780e95c512d63bbea1e040af0eb44a0bf63c4d72 and contender = c1808f9156bd4df03cf8338217ffd93f519abb96. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Scheduled] [ec2-t3-xlarge-us-east-2 (mimalloc)](https://conbench.ursa.dev/compare/runs/399dd7ae47d345969dfba70ba5d60fae...153e1fbed2d04daebb6acdf1c2389903/)\n   [Scheduled] [ursa-i9-9960x (mimalloc)](https://conbench.ursa.dev/compare/runs/eef93c4bfb1d4a8b92351f41883dfd55...6f6c2fcd5d0046bd8e70799566145aaa/)\n   [Skipped :warning: Only ['C++', 'Java'] langs are supported on ursa-thinkcentre-m75q] [ursa-thinkcentre-m75q (mimalloc)](https://conbench.ursa.dev/compare/runs/e5af519d38bd4cc483cd45f86750d807...12bcd567e1074dcbb6aa56f22219c4de/)\n   Supported benchmarks:\n   ursa-i9-9960x: langs = Python, R\n   ursa-thinkcentre-m75q: langs = C++, Java\n   ec2-t3-xlarge-us-east-2: cloud = True\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T16:04:23.338+0000",
                    "updated": "2021-07-06T16:04:23.338+0000",
                    "started": "2021-07-06T16:04:23.338+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619442",
                    "issueId": "13387057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13387057/worklog/619443",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #10664:\nURL: https://github.com/apache/arrow/pull/10664#issuecomment-874888474\n\n\n   Benchmark runs are scheduled for baseline = 780e95c512d63bbea1e040af0eb44a0bf63c4d72 and contender = c1808f9156bd4df03cf8338217ffd93f519abb96. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Failed] [ec2-t3-xlarge-us-east-2 (mimalloc)](https://conbench.ursa.dev/compare/runs/399dd7ae47d345969dfba70ba5d60fae...153e1fbed2d04daebb6acdf1c2389903/)\n   [Failed] [ursa-i9-9960x (mimalloc)](https://conbench.ursa.dev/compare/runs/eef93c4bfb1d4a8b92351f41883dfd55...6f6c2fcd5d0046bd8e70799566145aaa/)\n   [Skipped :warning: Only ['C++', 'Java'] langs are supported on ursa-thinkcentre-m75q] [ursa-thinkcentre-m75q (mimalloc)](https://conbench.ursa.dev/compare/runs/e5af519d38bd4cc483cd45f86750d807...12bcd567e1074dcbb6aa56f22219c4de/)\n   Supported benchmarks:\n   ursa-i9-9960x: langs = Python, R\n   ursa-thinkcentre-m75q: langs = C++, Java\n   ec2-t3-xlarge-us-east-2: cloud = True\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T16:05:21.972+0000",
                    "updated": "2021-07-06T16:05:21.972+0000",
                    "started": "2021-07-06T16:05:21.972+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619443",
                    "issueId": "13387057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13387057/worklog/619476",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #10664:\nURL: https://github.com/apache/arrow/pull/10664#issuecomment-874920743\n\n\n   (Looks like we need to rebase before the Conbench benchmarks can run.)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T16:48:37.351+0000",
                    "updated": "2021-07-06T16:48:37.351+0000",
                    "started": "2021-07-06T16:48:37.351+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619476",
                    "issueId": "13387057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13387057/worklog/619500",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #10664:\nURL: https://github.com/apache/arrow/pull/10664#discussion_r664743485\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/scanner.cc\n##########\n@@ -428,6 +428,11 @@ class ARROW_DS_EXPORT AsyncScanner : public Scanner,\n   Result<FragmentGenerator> GetFragments() const;\n \n   std::shared_ptr<Dataset> dataset_;\n+\n+  // XXX if Scanner were truly single-use this would be a 1:1 relationship\n+  std::unordered_map<std::shared_ptr<compute::ExecPlan>,\n+                     std::shared_ptr<compute::ExecContext>>\n+      plans_;\n\nReview comment:\n       Well I originally did this because the destruction of ExecPlan was waiting for the plan to finish, blocking the only thread which could finish the plan. However removing it doesn't seem to reproduce the deadlock so I guess `stop_producing` is a sufficient keepalive.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T17:20:44.810+0000",
                    "updated": "2021-07-06T17:20:44.810+0000",
                    "started": "2021-07-06T17:20:44.810+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619500",
                    "issueId": "13387057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13387057/worklog/619503",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #10664:\nURL: https://github.com/apache/arrow/pull/10664#discussion_r664744956\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/scanner.cc\n##########\n@@ -428,6 +428,11 @@ class ARROW_DS_EXPORT AsyncScanner : public Scanner,\n   Result<FragmentGenerator> GetFragments() const;\n \n   std::shared_ptr<Dataset> dataset_;\n+\n+  // XXX if Scanner were truly single-use this would be a 1:1 relationship\n\nReview comment:\n       I'll write a follow up JIRA. Many of the unit tests assume a scanner can be reused, and it'll be a change in behavior in the Python API too since we expose Scanner there\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T17:23:04.942+0000",
                    "updated": "2021-07-06T17:23:04.942+0000",
                    "started": "2021-07-06T17:23:04.942+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619503",
                    "issueId": "13387057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13387057/worklog/619504",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #10664:\nURL: https://github.com/apache/arrow/pull/10664#discussion_r664745185\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/scanner_test.cc\n##########\n@@ -1254,8 +1261,32 @@ TEST(ScanNode, DeferredFilterOnPhysicalColumn) {\n               ResultWith(UnorderedElementsAreArray(expected)));\n }\n \n-TEST(ScanNode, ProjectionPushdown) {\n-  // ensure non-projected columns are dropped\n+TEST(ScanNode, DISABLED_ProjectionPushdown) {\n\nReview comment:\n       Correct, I'll add the JIRA number here once I file the appropriate follow up\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T17:23:28.313+0000",
                    "updated": "2021-07-06T17:23:28.313+0000",
                    "started": "2021-07-06T17:23:28.313+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619504",
                    "issueId": "13387057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13387057/worklog/619506",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #10664:\nURL: https://github.com/apache/arrow/pull/10664#discussion_r664746139\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/scanner.cc\n##########\n@@ -525,6 +530,64 @@ Result<AsyncGenerator<EnumeratedRecordBatchGenerator>> FragmentsToBatches(\n                              });\n }\n \n+Result<compute::ExecNode*> MakeScanNode(compute::ExecPlan* plan,\n+                                        FragmentGenerator fragment_gen,\n+                                        std::shared_ptr<ScanOptions> options) {\n+  if (!options->use_async) {\n+    return Status::NotImplemented(\"ScanNodes without asynchrony\");\n+  }\n+\n+  ARROW_ASSIGN_OR_RAISE(\n+      auto batch_gen_gen,\n+      FragmentsToBatches(std::move(fragment_gen), options, /*filter_and_project=*/false));\n+\n+  auto batch_gen_gen_readahead =\n+      MakeSerialReadaheadGenerator(std::move(batch_gen_gen), options->fragment_readahead);\n+\n+  auto merged_batch_gen = MakeMergedGenerator(std::move(batch_gen_gen_readahead),\n+                                              options->fragment_readahead);\n+\n+  auto batch_gen =\n+      MakeReadaheadGenerator(std::move(merged_batch_gen), options->fragment_readahead);\n+\n+  auto gen = MakeMappedGenerator(\n+      std::move(batch_gen),\n+      [options](const EnumeratedRecordBatch& partial)\n+          -> Result<util::optional<compute::ExecBatch>> {\n+        ARROW_ASSIGN_OR_RAISE(\n+            util::optional<compute::ExecBatch> batch,\n+            compute::MakeExecBatch(*options->dataset_schema, partial.record_batch.value));\n+        // TODO if a fragment failed to perform projection pushdown, there may be\n+        // unnecessarily materialized columns in batch. We can drop them now instead of\n+        // letting them coast through the rest of the plan.\n+\n+        // TODO fragments may be able to attach more guarantees to batches than this,\n+        // for example parquet's row group stats. Failing to do this leaves perf on the\n+        // table because row group stats could be used to skip kernel execs in FilterNode\n+        batch->guarantee = partial.fragment.value->partition_expression();\n+\n+        // tag rows with fragment- and batch-of-origin\n+        batch->values.emplace_back(partial.fragment.index);\n+        batch->values.emplace_back(partial.record_batch.index);\n+        batch->values.emplace_back(partial.record_batch.last);\n\nReview comment:\n       See also https://issues.apache.org/jira/browse/ARROW-8928\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T17:24:54.580+0000",
                    "updated": "2021-07-06T17:24:54.580+0000",
                    "started": "2021-07-06T17:24:54.579+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619506",
                    "issueId": "13387057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13387057/worklog/619514",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #10664:\nURL: https://github.com/apache/arrow/pull/10664#discussion_r664763702\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/scanner.cc\n##########\n@@ -428,6 +428,11 @@ class ARROW_DS_EXPORT AsyncScanner : public Scanner,\n   Result<FragmentGenerator> GetFragments() const;\n \n   std::shared_ptr<Dataset> dataset_;\n+\n+  // XXX if Scanner were truly single-use this would be a 1:1 relationship\n\nReview comment:\n       https://issues.apache.org/jira/browse/ARROW-13264\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T17:51:38.355+0000",
                    "updated": "2021-07-06T17:51:38.355+0000",
                    "started": "2021-07-06T17:51:38.354+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619514",
                    "issueId": "13387057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13387057/worklog/619522",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #10664:\nURL: https://github.com/apache/arrow/pull/10664#issuecomment-874968900\n\n\n   @ursabot please benchmark lang=Python\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T18:00:32.919+0000",
                    "updated": "2021-07-06T18:00:32.919+0000",
                    "started": "2021-07-06T18:00:32.918+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619522",
                    "issueId": "13387057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13387057/worklog/619524",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on pull request #10664:\nURL: https://github.com/apache/arrow/pull/10664#issuecomment-874969456\n\n\n   Benchmark runs are scheduled for baseline = 780e95c512d63bbea1e040af0eb44a0bf63c4d72 and contender = dfb10c0bff4c5f29734abd5a029d0788900d3cd1. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Scheduled] [ec2-t3-xlarge-us-east-2 (mimalloc)](https://conbench.ursa.dev/compare/runs/399dd7ae47d345969dfba70ba5d60fae...54f7624e8abb450e9d9562f9f390b162/)\n   [Scheduled] [ursa-i9-9960x (mimalloc)](https://conbench.ursa.dev/compare/runs/eef93c4bfb1d4a8b92351f41883dfd55...7b8d37b925574f93b386a04c6753f0c1/)\n   [Skipped :warning: Only ['C++', 'Java'] langs are supported on ursa-thinkcentre-m75q] [ursa-thinkcentre-m75q (mimalloc)](https://conbench.ursa.dev/compare/runs/e5af519d38bd4cc483cd45f86750d807...604a6d14b8754e4e98372819b77a4c66/)\n   Supported benchmarks:\n   ursa-i9-9960x: langs = Python, R\n   ursa-thinkcentre-m75q: langs = C++, Java\n   ec2-t3-xlarge-us-east-2: cloud = True\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T18:01:19.484+0000",
                    "updated": "2021-07-06T18:01:19.484+0000",
                    "started": "2021-07-06T18:01:19.484+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619524",
                    "issueId": "13387057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13387057/worklog/619529",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10664:\nURL: https://github.com/apache/arrow/pull/10664#discussion_r664773055\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/scanner.cc\n##########\n@@ -729,20 +792,72 @@ Future<std::shared_ptr<Table>> AsyncScanner::ToTableAsync(\n   });\n }\n \n+namespace {\n+Result<int64_t> GetSelectionSize(const Datum& selection, int64_t length) {\n+  if (length == 0) return 0;\n+\n+  if (selection.is_scalar()) {\n+    if (!selection.scalar()->is_valid) return 0;\n+    if (!selection.scalar_as<BooleanScalar>().value) return 0;\n+    return length;\n+  }\n+\n+  ARROW_ASSIGN_OR_RAISE(auto count, compute::Sum(selection));\n+  return static_cast<int64_t>(count.scalar_as<UInt64Scalar>().value);\n+}\n+}  // namespace\n+\n Result<int64_t> AsyncScanner::CountRows() {\n   ARROW_ASSIGN_OR_RAISE(auto fragment_gen, GetFragments());\n-  ARROW_ASSIGN_OR_RAISE(auto count_gen_gen,\n-                        FragmentsToRowCount(std::move(fragment_gen), scan_options_));\n-  auto count_gen = MakeConcatenatedGenerator(std::move(count_gen_gen));\n-  int64_t total = 0;\n-  auto sum_fn = [&total](util::optional<int64_t> count) -> Status {\n-    if (count.has_value()) total += *count;\n-    return Status::OK();\n-  };\n-  RETURN_NOT_OK(VisitAsyncGenerator<util::optional<int64_t>>(std::move(count_gen),\n-                                                             std::move(sum_fn))\n-                    .status());\n-  return total;\n+  ARROW_ASSIGN_OR_RAISE(auto plan, compute::ExecPlan::Make());\n+\n+  std::atomic<int64_t> total{0};\n+\n+  fragment_gen = MakeMappedGenerator(\n+      std::move(fragment_gen), [&](const std::shared_ptr<Fragment>& fragment) {\n+        return fragment->CountRows(scan_options_->filter, scan_options_)\n+            .Then([&, fragment](util::optional<int64_t> fast_count) mutable\n+                  -> std::shared_ptr<Fragment> {\n+              if (fast_count) {\n+                // fast path: got row count directly; skip scanning this fragment\n+                total += *fast_count;\n+                return std::make_shared<OneShotFragment>(\n+                    scan_options_->dataset_schema,\n+                    MakeEmptyIterator<std::shared_ptr<RecordBatch>>());\n+              }\n+\n+              // slow path: actually filter this fragment's batches\n+              return std::move(fragment);\n+            });\n+      });\n+\n+  ARROW_ASSIGN_OR_RAISE(auto scan,\n+                        MakeScanNode(plan.get(), std::move(fragment_gen), scan_options_));\n+\n+  ARROW_ASSIGN_OR_RAISE(\n+      auto get_selection,\n+      compute::MakeProjectNode(scan, \"get_selection\", {scan_options_->filter}));\n+\n+  AsyncGenerator<util::optional<compute::ExecBatch>> sink_gen =\n+      compute::MakeSinkNode(get_selection, \"sink\");\n+\n+  RETURN_NOT_OK(plan->StartProducing());\n+\n+  RETURN_NOT_OK(\n+      VisitAsyncGenerator(std::move(sink_gen),\n+                          [&](const util::optional<compute::ExecBatch>& batch) {\n+                            // TODO replace with scalar aggregation node\n+                            ARROW_ASSIGN_OR_RAISE(\n+                                int64_t slow_count,\n+                                GetSelectionSize(batch->values[0], batch->length));\n+                            total += slow_count;\n+                            return Status::OK();\n+                          })\n+          .status());\n+\n+  plan->finished().Wait();\n\nReview comment:\n       Should we raise errors encountered here?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T18:08:19.198+0000",
                    "updated": "2021-07-06T18:08:19.198+0000",
                    "started": "2021-07-06T18:08:19.198+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619529",
                    "issueId": "13387057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13387057/worklog/619536",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #10664:\nURL: https://github.com/apache/arrow/pull/10664#issuecomment-874969456\n\n\n   Benchmark runs are scheduled for baseline = 780e95c512d63bbea1e040af0eb44a0bf63c4d72 and contender = dfb10c0bff4c5f29734abd5a029d0788900d3cd1. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2 (mimalloc)](https://conbench.ursa.dev/compare/runs/399dd7ae47d345969dfba70ba5d60fae...54f7624e8abb450e9d9562f9f390b162/)\n   [Scheduled] [ursa-i9-9960x (mimalloc)](https://conbench.ursa.dev/compare/runs/eef93c4bfb1d4a8b92351f41883dfd55...7b8d37b925574f93b386a04c6753f0c1/)\n   [Skipped :warning: Only ['C++', 'Java'] langs are supported on ursa-thinkcentre-m75q] [ursa-thinkcentre-m75q (mimalloc)](https://conbench.ursa.dev/compare/runs/e5af519d38bd4cc483cd45f86750d807...604a6d14b8754e4e98372819b77a4c66/)\n   Supported benchmarks:\n   ursa-i9-9960x: langs = Python, R\n   ursa-thinkcentre-m75q: langs = C++, Java\n   ec2-t3-xlarge-us-east-2: cloud = True\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T18:16:13.542+0000",
                    "updated": "2021-07-06T18:16:13.542+0000",
                    "started": "2021-07-06T18:16:13.542+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619536",
                    "issueId": "13387057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13387057/worklog/619545",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #10664:\nURL: https://github.com/apache/arrow/pull/10664#discussion_r664793347\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/scanner.cc\n##########\n@@ -729,20 +792,72 @@ Future<std::shared_ptr<Table>> AsyncScanner::ToTableAsync(\n   });\n }\n \n+namespace {\n+Result<int64_t> GetSelectionSize(const Datum& selection, int64_t length) {\n+  if (length == 0) return 0;\n+\n+  if (selection.is_scalar()) {\n+    if (!selection.scalar()->is_valid) return 0;\n+    if (!selection.scalar_as<BooleanScalar>().value) return 0;\n+    return length;\n+  }\n+\n+  ARROW_ASSIGN_OR_RAISE(auto count, compute::Sum(selection));\n+  return static_cast<int64_t>(count.scalar_as<UInt64Scalar>().value);\n+}\n+}  // namespace\n+\n Result<int64_t> AsyncScanner::CountRows() {\n   ARROW_ASSIGN_OR_RAISE(auto fragment_gen, GetFragments());\n-  ARROW_ASSIGN_OR_RAISE(auto count_gen_gen,\n-                        FragmentsToRowCount(std::move(fragment_gen), scan_options_));\n-  auto count_gen = MakeConcatenatedGenerator(std::move(count_gen_gen));\n-  int64_t total = 0;\n-  auto sum_fn = [&total](util::optional<int64_t> count) -> Status {\n-    if (count.has_value()) total += *count;\n-    return Status::OK();\n-  };\n-  RETURN_NOT_OK(VisitAsyncGenerator<util::optional<int64_t>>(std::move(count_gen),\n-                                                             std::move(sum_fn))\n-                    .status());\n-  return total;\n+  ARROW_ASSIGN_OR_RAISE(auto plan, compute::ExecPlan::Make());\n+\n+  std::atomic<int64_t> total{0};\n+\n+  fragment_gen = MakeMappedGenerator(\n+      std::move(fragment_gen), [&](const std::shared_ptr<Fragment>& fragment) {\n+        return fragment->CountRows(scan_options_->filter, scan_options_)\n+            .Then([&, fragment](util::optional<int64_t> fast_count) mutable\n+                  -> std::shared_ptr<Fragment> {\n+              if (fast_count) {\n+                // fast path: got row count directly; skip scanning this fragment\n+                total += *fast_count;\n+                return std::make_shared<OneShotFragment>(\n+                    scan_options_->dataset_schema,\n+                    MakeEmptyIterator<std::shared_ptr<RecordBatch>>());\n+              }\n+\n+              // slow path: actually filter this fragment's batches\n+              return std::move(fragment);\n+            });\n+      });\n+\n+  ARROW_ASSIGN_OR_RAISE(auto scan,\n+                        MakeScanNode(plan.get(), std::move(fragment_gen), scan_options_));\n+\n+  ARROW_ASSIGN_OR_RAISE(\n+      auto get_selection,\n+      compute::MakeProjectNode(scan, \"get_selection\", {scan_options_->filter}));\n+\n+  AsyncGenerator<util::optional<compute::ExecBatch>> sink_gen =\n+      compute::MakeSinkNode(get_selection, \"sink\");\n+\n+  RETURN_NOT_OK(plan->StartProducing());\n+\n+  RETURN_NOT_OK(\n+      VisitAsyncGenerator(std::move(sink_gen),\n+                          [&](const util::optional<compute::ExecBatch>& batch) {\n+                            // TODO replace with scalar aggregation node\n+                            ARROW_ASSIGN_OR_RAISE(\n+                                int64_t slow_count,\n+                                GetSelectionSize(batch->values[0], batch->length));\n+                            total += slow_count;\n+                            return Status::OK();\n+                          })\n+          .status());\n+\n+  plan->finished().Wait();\n\nReview comment:\n       Encountered where? ExecPlan::finished() is never marked with an error status. I suppose it'd be fine to check the status anyway\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T18:40:04.737+0000",
                    "updated": "2021-07-06T18:40:04.737+0000",
                    "started": "2021-07-06T18:40:04.737+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619545",
                    "issueId": "13387057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13387057/worklog/619546",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #10664:\nURL: https://github.com/apache/arrow/pull/10664#issuecomment-874969456\n\n\n   Benchmark runs are scheduled for baseline = 780e95c512d63bbea1e040af0eb44a0bf63c4d72 and contender = dfb10c0bff4c5f29734abd5a029d0788900d3cd1. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2 (mimalloc)](https://conbench.ursa.dev/compare/runs/399dd7ae47d345969dfba70ba5d60fae...54f7624e8abb450e9d9562f9f390b162/)\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ursa-i9-9960x (mimalloc)](https://conbench.ursa.dev/compare/runs/eef93c4bfb1d4a8b92351f41883dfd55...7b8d37b925574f93b386a04c6753f0c1/)\n   [Skipped :warning: Only ['C++', 'Java'] langs are supported on ursa-thinkcentre-m75q] [ursa-thinkcentre-m75q (mimalloc)](https://conbench.ursa.dev/compare/runs/e5af519d38bd4cc483cd45f86750d807...604a6d14b8754e4e98372819b77a4c66/)\n   Supported benchmarks:\n   ursa-i9-9960x: langs = Python, R\n   ursa-thinkcentre-m75q: langs = C++, Java\n   ec2-t3-xlarge-us-east-2: cloud = True\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T18:40:27.869+0000",
                    "updated": "2021-07-06T18:40:27.869+0000",
                    "started": "2021-07-06T18:40:27.869+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619546",
                    "issueId": "13387057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13387057/worklog/619547",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10664:\nURL: https://github.com/apache/arrow/pull/10664#discussion_r664794191\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/scanner.cc\n##########\n@@ -729,20 +792,72 @@ Future<std::shared_ptr<Table>> AsyncScanner::ToTableAsync(\n   });\n }\n \n+namespace {\n+Result<int64_t> GetSelectionSize(const Datum& selection, int64_t length) {\n+  if (length == 0) return 0;\n+\n+  if (selection.is_scalar()) {\n+    if (!selection.scalar()->is_valid) return 0;\n+    if (!selection.scalar_as<BooleanScalar>().value) return 0;\n+    return length;\n+  }\n+\n+  ARROW_ASSIGN_OR_RAISE(auto count, compute::Sum(selection));\n+  return static_cast<int64_t>(count.scalar_as<UInt64Scalar>().value);\n+}\n+}  // namespace\n+\n Result<int64_t> AsyncScanner::CountRows() {\n   ARROW_ASSIGN_OR_RAISE(auto fragment_gen, GetFragments());\n-  ARROW_ASSIGN_OR_RAISE(auto count_gen_gen,\n-                        FragmentsToRowCount(std::move(fragment_gen), scan_options_));\n-  auto count_gen = MakeConcatenatedGenerator(std::move(count_gen_gen));\n-  int64_t total = 0;\n-  auto sum_fn = [&total](util::optional<int64_t> count) -> Status {\n-    if (count.has_value()) total += *count;\n-    return Status::OK();\n-  };\n-  RETURN_NOT_OK(VisitAsyncGenerator<util::optional<int64_t>>(std::move(count_gen),\n-                                                             std::move(sum_fn))\n-                    .status());\n-  return total;\n+  ARROW_ASSIGN_OR_RAISE(auto plan, compute::ExecPlan::Make());\n+\n+  std::atomic<int64_t> total{0};\n+\n+  fragment_gen = MakeMappedGenerator(\n+      std::move(fragment_gen), [&](const std::shared_ptr<Fragment>& fragment) {\n+        return fragment->CountRows(scan_options_->filter, scan_options_)\n+            .Then([&, fragment](util::optional<int64_t> fast_count) mutable\n+                  -> std::shared_ptr<Fragment> {\n+              if (fast_count) {\n+                // fast path: got row count directly; skip scanning this fragment\n+                total += *fast_count;\n+                return std::make_shared<OneShotFragment>(\n+                    scan_options_->dataset_schema,\n+                    MakeEmptyIterator<std::shared_ptr<RecordBatch>>());\n+              }\n+\n+              // slow path: actually filter this fragment's batches\n+              return std::move(fragment);\n+            });\n+      });\n+\n+  ARROW_ASSIGN_OR_RAISE(auto scan,\n+                        MakeScanNode(plan.get(), std::move(fragment_gen), scan_options_));\n+\n+  ARROW_ASSIGN_OR_RAISE(\n+      auto get_selection,\n+      compute::MakeProjectNode(scan, \"get_selection\", {scan_options_->filter}));\n+\n+  AsyncGenerator<util::optional<compute::ExecBatch>> sink_gen =\n+      compute::MakeSinkNode(get_selection, \"sink\");\n+\n+  RETURN_NOT_OK(plan->StartProducing());\n+\n+  RETURN_NOT_OK(\n+      VisitAsyncGenerator(std::move(sink_gen),\n+                          [&](const util::optional<compute::ExecBatch>& batch) {\n+                            // TODO replace with scalar aggregation node\n+                            ARROW_ASSIGN_OR_RAISE(\n+                                int64_t slow_count,\n+                                GetSelectionSize(batch->values[0], batch->length));\n+                            total += slow_count;\n+                            return Status::OK();\n+                          })\n+          .status());\n+\n+  plan->finished().Wait();\n\nReview comment:\n       Ah sorry, I didn't realize this can't fail.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-06T18:41:32.017+0000",
                    "updated": "2021-07-06T18:41:32.017+0000",
                    "started": "2021-07-06T18:41:32.017+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "619547",
                    "issueId": "13387057"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 27000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@edd13[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@75bae0af[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7545b146[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@57d898d9[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1981d911[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@326cde09[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6afb8683[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7976d555[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6e28c23b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3a60c561[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@c998330[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@438a338b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 27000,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Jul 09 19:39:00 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-07-09T19:39:00.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13238/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-07-01T13:28:06.000+0000",
        "updated": "2022-07-22T10:19:10.000+0000",
        "timeoriginalestimate": null,
        "description": "ARROW-11930 grew too large to include substitution of an ExecPlan for existing scan machinery, but this still needs to happen",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "7.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 27000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Dataset][Compute] Substitute ExecPlan impl for dataset scans",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13387057/comment/17378264",
                    "id": "17378264",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 10664\n[https://github.com/apache/arrow/pull/10664]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-07-09T19:39:00.782+0000",
                    "updated": "2021-07-09T19:39:00.782+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0si7k:",
        "customfield_12314139": null
    }
}