{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13428895",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13428895",
    "key": "ARROW-15705",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351051",
                "id": "12351051",
                "description": "",
                "name": "8.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-05-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12639605",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12639605",
                "type": {
                    "id": "12310660",
                    "name": "Completes",
                    "inward": "is fixed by",
                    "outward": "fixes",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310660"
                },
                "outwardIssue": {
                    "id": "13427811",
                    "key": "ARROW-15651",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13427811",
                    "fields": {
                        "summary": "[JavaScript] Structs incorrectly initialise null values",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alfredm",
            "name": "alfredm",
            "key": "JIRAUSER285022",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Alfred Mountfield",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332552",
                "id": "12332552",
                "name": "JavaScript"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alfredm",
            "name": "alfredm",
            "key": "JIRAUSER285022",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Alfred Mountfield",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alfredm",
            "name": "alfredm",
            "key": "JIRAUSER285022",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Alfred Mountfield",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 24000,
            "total": 24000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/customFieldOption/10431",
                "value": "Important",
                "id": "10431",
                "disabled": false
            }
        ],
        "progress": {
            "progress": 24000,
            "total": 24000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15705/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 40,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13428895/worklog/728926",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Alfred-Mountfield opened a new pull request #12451:\nURL: https://github.com/apache/arrow/pull/12451\n\n\n   When trying to add a null value to a StructBuilder, the code previously only modified the null-bitmap. \r\n   I believe this breaks the spec as it results in the child arrays being a different length to the Struct array (and the child arrays should have the null value appended to their values).\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-17T13:13:40.887+0000",
                    "updated": "2022-02-17T13:13:40.887+0000",
                    "started": "2022-02-17T13:13:40.887+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "728926",
                    "issueId": "13428895"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13428895/worklog/728930",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12451:\nURL: https://github.com/apache/arrow/pull/12451#issuecomment-1042952699\n\n\n   <!--\n     Licensed to the Apache Software Foundation (ASF) under one\n     or more contributor license agreements.  See the NOTICE file\n     distributed with this work for additional information\n     regarding copyright ownership.  The ASF licenses this file\n     to you under the Apache License, Version 2.0 (the\n     \"License\"); you may not use this file except in compliance\n     with the License.  You may obtain a copy of the License at\n   \n       http://www.apache.org/licenses/LICENSE-2.0\n   \n     Unless required by applicable law or agreed to in writing,\n     software distributed under the License is distributed on an\n     \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n     KIND, either express or implied.  See the License for the\n     specific language governing permissions and limitations\n     under the License.\n   -->\n   \n   Thanks for opening a pull request!\n   \n   If this is not a [minor PR](https://github.com/apache/arrow/blob/master/CONTRIBUTING.md#Minor-Fixes). Could you open an issue for this pull request on JIRA? https://issues.apache.org/jira/browse/ARROW\n   \n   Opening JIRAs ahead of time contributes to the [Openness](http://theapacheway.com/open/#:~:text=Openness%20allows%20new%20users%20the,must%20happen%20in%20the%20open.) of the Apache Arrow project.\n   \n   Then could you also rename pull request title in the following format?\n   \n       ARROW-${JIRA_ID}: [${COMPONENT}] ${SUMMARY}\n   \n   or\n   \n       MINOR: [${COMPONENT}] ${SUMMARY}\n   \n   See also:\n   \n     * [Other pull requests](https://github.com/apache/arrow/pulls/)\n     * [Contribution Guidelines - How to contribute patches](https://arrow.apache.org/docs/developers/contributing.html#how-to-contribute-patches)\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-17T13:31:57.775+0000",
                    "updated": "2022-02-17T13:31:57.775+0000",
                    "started": "2022-02-17T13:31:57.775+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "728930",
                    "issueId": "13428895"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13428895/worklog/728935",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12451:\nURL: https://github.com/apache/arrow/pull/12451#issuecomment-1042967279\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-17T13:48:13.792+0000",
                    "updated": "2022-02-17T13:48:13.792+0000",
                    "started": "2022-02-17T13:48:13.792+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "728935",
                    "issueId": "13428895"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13428895/worklog/729750",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #12451:\nURL: https://github.com/apache/arrow/pull/12451#issuecomment-1044837282\n\n\n   CC @domoritz \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-18T16:57:02.209+0000",
                    "updated": "2022-02-18T16:57:02.209+0000",
                    "started": "2022-02-18T16:57:02.208+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "729750",
                    "issueId": "13428895"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13428895/worklog/729891",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt commented on a change in pull request #12451:\nURL: https://github.com/apache/arrow/pull/12451#discussion_r810364151\n\n\n\n##########\nFile path: js/src/builder/struct.ts\n##########\n@@ -23,12 +23,31 @@ import { Struct, TypeMap } from '../type.js';\n \n /** @ignore */\n export class StructBuilder<T extends TypeMap = any, TNull = any> extends Builder<Struct<T>, TNull> {\n-    public setValue(index: number, value: Struct<T>['TValue']) {\n+    /**\n+     * Write a value (or null-value sentinel) at the supplied index.\n+     * If the value matches one of the null-value representations, a 1-bit is\n+     * written to the null `BitmapBufferBuilder`, otherwise, a 0 is written. The\n+     * value is then passed to `Builder.prototype.setValue()`.\n+     * @param {number} index The index of the value to write.\n+     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n+     * @returns {this} The updated `Builder` instance.\n+     */\n+    public set(index: number, value: Struct<T>['TValue'] | TNull) {\n+        this.setValid(index, this.isValid(value));\n+        this.setValue(index, value);\n+        return this;\n+    }\n+\n+    public setValue(index: number, value: Struct<T>['TValue'] | TNull) {\n         const children = this.children;\n-        switch (Array.isArray(value) || value.constructor) {\n-            case true: return this.type.children.forEach((_, i) => children[i].set(index, value[i]));\n-            case Map: return this.type.children.forEach((f, i) => children[i].set(index, value.get(f.name)));\n-            default: return this.type.children.forEach((f, i) => children[i].set(index, value[f.name]));\n+        if (this.isValid(value) && 'constructor' in value) {\n+            switch (Array.isArray(value) || value.constructor) {\n+                case true: return this.type.children.forEach((_, i) => children[i].set(index, value[i]));\n+                case Map: return this.type.children.forEach((f, i) => children[i].set(index, value.get(f.name)));\n+                default: return this.type.children.forEach((f, i) => children[i].set(index, value[f.name]));\n+            }\n+        } else { // Is a null value\n+            return this.type.children.forEach((_, i) => children[i].set(index, value));\n\nReview comment:\n       If the above is applied, we can revert these changes.\n\n##########\nFile path: js/src/builder/struct.ts\n##########\n@@ -23,12 +23,31 @@ import { Struct, TypeMap } from '../type.js';\n \n /** @ignore */\n export class StructBuilder<T extends TypeMap = any, TNull = any> extends Builder<Struct<T>, TNull> {\n-    public setValue(index: number, value: Struct<T>['TValue']) {\n+    /**\n+     * Write a value (or null-value sentinel) at the supplied index.\n+     * If the value matches one of the null-value representations, a 1-bit is\n+     * written to the null `BitmapBufferBuilder`, otherwise, a 0 is written. The\n+     * value is then passed to `Builder.prototype.setValue()`.\n+     * @param {number} index The index of the value to write.\n+     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n+     * @returns {this} The updated `Builder` instance.\n+     */\n+    public set(index: number, value: Struct<T>['TValue'] | TNull) {\n+        this.setValid(index, this.isValid(value));\n+        this.setValue(index, value);\n+        return this;\n+    }\n\nReview comment:\n       ```suggestion\r\n       /** @inheritdoc */\r\n       public set(index: number, value: Struct<T>['TValue'] | TNull) {\r\n           if (this.setValid(index, this.isValid(value))) {\r\n               this.setValue(index, value);\r\n           } else {\r\n             this.children.forEach((child) => child.setValid(index, false));\r\n           }\r\n           return this;\r\n       }\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-18T22:00:09.844+0000",
                    "updated": "2022-02-18T22:00:09.844+0000",
                    "started": "2022-02-18T22:00:09.844+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "729891",
                    "issueId": "13428895"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13428895/worklog/729894",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt commented on a change in pull request #12451:\nURL: https://github.com/apache/arrow/pull/12451#discussion_r810364151\n\n\n\n##########\nFile path: js/src/builder/struct.ts\n##########\n@@ -23,12 +23,31 @@ import { Struct, TypeMap } from '../type.js';\n \n /** @ignore */\n export class StructBuilder<T extends TypeMap = any, TNull = any> extends Builder<Struct<T>, TNull> {\n-    public setValue(index: number, value: Struct<T>['TValue']) {\n+    /**\n+     * Write a value (or null-value sentinel) at the supplied index.\n+     * If the value matches one of the null-value representations, a 1-bit is\n+     * written to the null `BitmapBufferBuilder`, otherwise, a 0 is written. The\n+     * value is then passed to `Builder.prototype.setValue()`.\n+     * @param {number} index The index of the value to write.\n+     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n+     * @returns {this} The updated `Builder` instance.\n+     */\n+    public set(index: number, value: Struct<T>['TValue'] | TNull) {\n+        this.setValid(index, this.isValid(value));\n+        this.setValue(index, value);\n+        return this;\n+    }\n+\n+    public setValue(index: number, value: Struct<T>['TValue'] | TNull) {\n         const children = this.children;\n-        switch (Array.isArray(value) || value.constructor) {\n-            case true: return this.type.children.forEach((_, i) => children[i].set(index, value[i]));\n-            case Map: return this.type.children.forEach((f, i) => children[i].set(index, value.get(f.name)));\n-            default: return this.type.children.forEach((f, i) => children[i].set(index, value[f.name]));\n+        if (this.isValid(value) && 'constructor' in value) {\n+            switch (Array.isArray(value) || value.constructor) {\n+                case true: return this.type.children.forEach((_, i) => children[i].set(index, value[i]));\n+                case Map: return this.type.children.forEach((f, i) => children[i].set(index, value.get(f.name)));\n+                default: return this.type.children.forEach((f, i) => children[i].set(index, value[f.name]));\n+            }\n+        } else { // Is a null value\n+            return this.type.children.forEach((_, i) => children[i].set(index, value));\n\nReview comment:\n       If the above is applied, we can revert these changes. This function signature was deliberately designed to only accept valid values.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-18T22:02:20.878+0000",
                    "updated": "2022-02-18T22:02:20.878+0000",
                    "started": "2022-02-18T22:02:20.878+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "729894",
                    "issueId": "13428895"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13428895/worklog/729901",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Alfred-Mountfield commented on a change in pull request #12451:\nURL: https://github.com/apache/arrow/pull/12451#discussion_r810377591\n\n\n\n##########\nFile path: js/src/builder/struct.ts\n##########\n@@ -23,12 +23,31 @@ import { Struct, TypeMap } from '../type.js';\n \n /** @ignore */\n export class StructBuilder<T extends TypeMap = any, TNull = any> extends Builder<Struct<T>, TNull> {\n-    public setValue(index: number, value: Struct<T>['TValue']) {\n+    /**\n+     * Write a value (or null-value sentinel) at the supplied index.\n+     * If the value matches one of the null-value representations, a 1-bit is\n+     * written to the null `BitmapBufferBuilder`, otherwise, a 0 is written. The\n+     * value is then passed to `Builder.prototype.setValue()`.\n+     * @param {number} index The index of the value to write.\n+     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n+     * @returns {this} The updated `Builder` instance.\n+     */\n+    public set(index: number, value: Struct<T>['TValue'] | TNull) {\n+        this.setValid(index, this.isValid(value));\n+        this.setValue(index, value);\n+        return this;\n+    }\n\nReview comment:\n       Is `inheritdoc` correct here? I believe the inherited documentation would be misleading as it wouldn't mention calling the `setValid` function on the children.\r\n   \r\n   Also I'll admit I'm very unfamiliar with this codebase, is passing `false` good enough, I would have thought you need to pass `value`?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-18T22:27:07.873+0000",
                    "updated": "2022-02-18T22:27:07.873+0000",
                    "started": "2022-02-18T22:27:07.872+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "729901",
                    "issueId": "13428895"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13428895/worklog/729904",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Alfred-Mountfield commented on a change in pull request #12451:\nURL: https://github.com/apache/arrow/pull/12451#discussion_r810379309\n\n\n\n##########\nFile path: js/src/builder/struct.ts\n##########\n@@ -23,12 +23,31 @@ import { Struct, TypeMap } from '../type.js';\n \n /** @ignore */\n export class StructBuilder<T extends TypeMap = any, TNull = any> extends Builder<Struct<T>, TNull> {\n-    public setValue(index: number, value: Struct<T>['TValue']) {\n+    /**\n+     * Write a value (or null-value sentinel) at the supplied index.\n+     * If the value matches one of the null-value representations, a 1-bit is\n+     * written to the null `BitmapBufferBuilder`, otherwise, a 0 is written. The\n+     * value is then passed to `Builder.prototype.setValue()`.\n+     * @param {number} index The index of the value to write.\n+     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n+     * @returns {this} The updated `Builder` instance.\n+     */\n+    public set(index: number, value: Struct<T>['TValue'] | TNull) {\n+        this.setValid(index, this.isValid(value));\n+        this.setValue(index, value);\n+        return this;\n+    }\n\nReview comment:\n       Is `inheritdoc` correct here? I believe the inherited documentation would be misleading as it wouldn't mention calling the `setValid` function on the children.\r\n   \r\n   Also I'll admit I'm very unfamiliar with this codebase, is calling `setValid` good enough, I would have thought that doesn't work for more complex nested types such as a struct within a struct which would need the fields _of that inner-struct_ to also have a null value appended. \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-18T22:31:26.980+0000",
                    "updated": "2022-02-18T22:31:26.980+0000",
                    "started": "2022-02-18T22:31:26.980+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "729904",
                    "issueId": "13428895"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13428895/worklog/729924",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt commented on a change in pull request #12451:\nURL: https://github.com/apache/arrow/pull/12451#discussion_r810394714\n\n\n\n##########\nFile path: js/src/builder/struct.ts\n##########\n@@ -23,12 +23,31 @@ import { Struct, TypeMap } from '../type.js';\n \n /** @ignore */\n export class StructBuilder<T extends TypeMap = any, TNull = any> extends Builder<Struct<T>, TNull> {\n-    public setValue(index: number, value: Struct<T>['TValue']) {\n+    /**\n+     * Write a value (or null-value sentinel) at the supplied index.\n+     * If the value matches one of the null-value representations, a 1-bit is\n+     * written to the null `BitmapBufferBuilder`, otherwise, a 0 is written. The\n+     * value is then passed to `Builder.prototype.setValue()`.\n+     * @param {number} index The index of the value to write.\n+     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n+     * @returns {this} The updated `Builder` instance.\n+     */\n+    public set(index: number, value: Struct<T>['TValue'] | TNull) {\n+        this.setValid(index, this.isValid(value));\n+        this.setValue(index, value);\n+        return this;\n+    }\n\nReview comment:\n       > I would have thought that doesn't work for more complex nested types such as a struct within a struct which would need the fields of that inner-struct to also have a null value appended.\r\n   \r\n   @Alfred-Mountfield Ah good point. In that case, I think the change needs to be not to override `set()` or change the `setValue()` implementation, but to also override `setValid()` and make it set nulls into each child. I'll update my suggestion in a new thread.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-18T23:14:19.462+0000",
                    "updated": "2022-02-18T23:14:19.462+0000",
                    "started": "2022-02-18T23:14:19.462+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "729924",
                    "issueId": "13428895"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13428895/worklog/729925",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt commented on a change in pull request #12451:\nURL: https://github.com/apache/arrow/pull/12451#discussion_r810394714\n\n\n\n##########\nFile path: js/src/builder/struct.ts\n##########\n@@ -23,12 +23,31 @@ import { Struct, TypeMap } from '../type.js';\n \n /** @ignore */\n export class StructBuilder<T extends TypeMap = any, TNull = any> extends Builder<Struct<T>, TNull> {\n-    public setValue(index: number, value: Struct<T>['TValue']) {\n+    /**\n+     * Write a value (or null-value sentinel) at the supplied index.\n+     * If the value matches one of the null-value representations, a 1-bit is\n+     * written to the null `BitmapBufferBuilder`, otherwise, a 0 is written. The\n+     * value is then passed to `Builder.prototype.setValue()`.\n+     * @param {number} index The index of the value to write.\n+     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n+     * @returns {this} The updated `Builder` instance.\n+     */\n+    public set(index: number, value: Struct<T>['TValue'] | TNull) {\n+        this.setValid(index, this.isValid(value));\n+        this.setValue(index, value);\n+        return this;\n+    }\n\nReview comment:\n       > I would have thought that doesn't work for more complex nested types such as a struct within a struct which would need the fields of that inner-struct to also have a null value appended.\r\n   \r\n   @Alfred-Mountfield Ah good point. In that case, I think the change needs to be not to override `set()` or change the `setValue()` implementation, but to also override `setValid()` and make it set nulls into each child. I'll update my suggestion here.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-18T23:14:52.114+0000",
                    "updated": "2022-02-18T23:14:52.114+0000",
                    "started": "2022-02-18T23:14:52.113+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "729925",
                    "issueId": "13428895"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13428895/worklog/729926",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt commented on a change in pull request #12451:\nURL: https://github.com/apache/arrow/pull/12451#discussion_r810363957\n\n\n\n##########\nFile path: js/src/builder/struct.ts\n##########\n@@ -23,12 +23,31 @@ import { Struct, TypeMap } from '../type.js';\n \n /** @ignore */\n export class StructBuilder<T extends TypeMap = any, TNull = any> extends Builder<Struct<T>, TNull> {\n-    public setValue(index: number, value: Struct<T>['TValue']) {\n+    /**\n+     * Write a value (or null-value sentinel) at the supplied index.\n+     * If the value matches one of the null-value representations, a 1-bit is\n+     * written to the null `BitmapBufferBuilder`, otherwise, a 0 is written. The\n+     * value is then passed to `Builder.prototype.setValue()`.\n+     * @param {number} index The index of the value to write.\n+     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n+     * @returns {this} The updated `Builder` instance.\n+     */\n+    public set(index: number, value: Struct<T>['TValue'] | TNull) {\n+        this.setValid(index, this.isValid(value));\n+        this.setValue(index, value);\n+        return this;\n+    }\n\nReview comment:\n       ```suggestion\r\n       /** @inheritdoc */\r\n       public setValid(index: number, valid: boolean) {\r\n           if (!super.setValid(index, value)) {\r\n               this.children.forEach((child) => child.setValid(index, valid));\r\n           }\r\n           return valid;\r\n       }\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-18T23:16:45.290+0000",
                    "updated": "2022-02-18T23:16:45.290+0000",
                    "started": "2022-02-18T23:16:45.289+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "729926",
                    "issueId": "13428895"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13428895/worklog/729927",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt commented on a change in pull request #12451:\nURL: https://github.com/apache/arrow/pull/12451#discussion_r810394714\n\n\n\n##########\nFile path: js/src/builder/struct.ts\n##########\n@@ -23,12 +23,31 @@ import { Struct, TypeMap } from '../type.js';\n \n /** @ignore */\n export class StructBuilder<T extends TypeMap = any, TNull = any> extends Builder<Struct<T>, TNull> {\n-    public setValue(index: number, value: Struct<T>['TValue']) {\n+    /**\n+     * Write a value (or null-value sentinel) at the supplied index.\n+     * If the value matches one of the null-value representations, a 1-bit is\n+     * written to the null `BitmapBufferBuilder`, otherwise, a 0 is written. The\n+     * value is then passed to `Builder.prototype.setValue()`.\n+     * @param {number} index The index of the value to write.\n+     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n+     * @returns {this} The updated `Builder` instance.\n+     */\n+    public set(index: number, value: Struct<T>['TValue'] | TNull) {\n+        this.setValid(index, this.isValid(value));\n+        this.setValue(index, value);\n+        return this;\n+    }\n\nReview comment:\n       > I would have thought that doesn't work for more complex nested types such as a struct within a struct which would need the fields of that inner-struct to also have a null value appended.\r\n   \r\n   @Alfred-Mountfield Ah good point. In that case, I think the change should not be to override `set()` or change the `setValue()` implementation, but to also override `setValid()` and make it set nulls into each child. I'll update my suggestion here.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-18T23:17:48.084+0000",
                    "updated": "2022-02-18T23:17:48.084+0000",
                    "started": "2022-02-18T23:17:48.084+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "729927",
                    "issueId": "13428895"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13428895/worklog/729934",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Alfred-Mountfield commented on a change in pull request #12451:\nURL: https://github.com/apache/arrow/pull/12451#discussion_r810402923\n\n\n\n##########\nFile path: js/src/builder/struct.ts\n##########\n@@ -23,12 +23,31 @@ import { Struct, TypeMap } from '../type.js';\n \n /** @ignore */\n export class StructBuilder<T extends TypeMap = any, TNull = any> extends Builder<Struct<T>, TNull> {\n-    public setValue(index: number, value: Struct<T>['TValue']) {\n+    /**\n+     * Write a value (or null-value sentinel) at the supplied index.\n+     * If the value matches one of the null-value representations, a 1-bit is\n+     * written to the null `BitmapBufferBuilder`, otherwise, a 0 is written. The\n+     * value is then passed to `Builder.prototype.setValue()`.\n+     * @param {number} index The index of the value to write.\n+     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n+     * @returns {this} The updated `Builder` instance.\n+     */\n+    public set(index: number, value: Struct<T>['TValue'] | TNull) {\n+        this.setValid(index, this.isValid(value));\n+        this.setValue(index, value);\n+        return this;\n+    }\n\nReview comment:\n       I've just tested it locally and that seems to work :) although with `valid` instead of value` in `if (!super.setValid(index, value)`\r\n   \r\n   There doesn't seem to be documentation on the `setValid` method on `Builder` however, so I'm not sure what doc it's inheriting\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-18T23:42:59.298+0000",
                    "updated": "2022-02-18T23:42:59.298+0000",
                    "started": "2022-02-18T23:42:59.298+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "729934",
                    "issueId": "13428895"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13428895/worklog/729935",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Alfred-Mountfield commented on a change in pull request #12451:\nURL: https://github.com/apache/arrow/pull/12451#discussion_r810403088\n\n\n\n##########\nFile path: js/src/builder/struct.ts\n##########\n@@ -23,12 +23,31 @@ import { Struct, TypeMap } from '../type.js';\n \n /** @ignore */\n export class StructBuilder<T extends TypeMap = any, TNull = any> extends Builder<Struct<T>, TNull> {\n-    public setValue(index: number, value: Struct<T>['TValue']) {\n+    /**\n+     * Write a value (or null-value sentinel) at the supplied index.\n+     * If the value matches one of the null-value representations, a 1-bit is\n+     * written to the null `BitmapBufferBuilder`, otherwise, a 0 is written. The\n+     * value is then passed to `Builder.prototype.setValue()`.\n+     * @param {number} index The index of the value to write.\n+     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n+     * @returns {this} The updated `Builder` instance.\n+     */\n+    public set(index: number, value: Struct<T>['TValue'] | TNull) {\n+        this.setValid(index, this.isValid(value));\n+        this.setValue(index, value);\n+        return this;\n+    }\n+\n+    public setValue(index: number, value: Struct<T>['TValue'] | TNull) {\n         const children = this.children;\n-        switch (Array.isArray(value) || value.constructor) {\n-            case true: return this.type.children.forEach((_, i) => children[i].set(index, value[i]));\n-            case Map: return this.type.children.forEach((f, i) => children[i].set(index, value.get(f.name)));\n-            default: return this.type.children.forEach((f, i) => children[i].set(index, value[f.name]));\n+        if (this.isValid(value) && 'constructor' in value) {\n+            switch (Array.isArray(value) || value.constructor) {\n+                case true: return this.type.children.forEach((_, i) => children[i].set(index, value[i]));\n+                case Map: return this.type.children.forEach((f, i) => children[i].set(index, value.get(f.name)));\n+                default: return this.type.children.forEach((f, i) => children[i].set(index, value[f.name]));\n+            }\n+        } else { // Is a null value\n+            return this.type.children.forEach((_, i) => children[i].set(index, value));\n\nReview comment:\n       I have removed the changes\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-18T23:43:35.049+0000",
                    "updated": "2022-02-18T23:43:35.049+0000",
                    "started": "2022-02-18T23:43:35.048+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "729935",
                    "issueId": "13428895"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13428895/worklog/729936",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Alfred-Mountfield commented on a change in pull request #12451:\nURL: https://github.com/apache/arrow/pull/12451#discussion_r810402923\n\n\n\n##########\nFile path: js/src/builder/struct.ts\n##########\n@@ -23,12 +23,31 @@ import { Struct, TypeMap } from '../type.js';\n \n /** @ignore */\n export class StructBuilder<T extends TypeMap = any, TNull = any> extends Builder<Struct<T>, TNull> {\n-    public setValue(index: number, value: Struct<T>['TValue']) {\n+    /**\n+     * Write a value (or null-value sentinel) at the supplied index.\n+     * If the value matches one of the null-value representations, a 1-bit is\n+     * written to the null `BitmapBufferBuilder`, otherwise, a 0 is written. The\n+     * value is then passed to `Builder.prototype.setValue()`.\n+     * @param {number} index The index of the value to write.\n+     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n+     * @returns {this} The updated `Builder` instance.\n+     */\n+    public set(index: number, value: Struct<T>['TValue'] | TNull) {\n+        this.setValid(index, this.isValid(value));\n+        this.setValue(index, value);\n+        return this;\n+    }\n\nReview comment:\n       I've just tested it locally and that seems to work :) although with `valid` instead of value` in `if (!super.setValid(index, value)`\r\n   \r\n   There doesn't seem to be documentation on the `setValid` method on `Builder` however, so I'm not sure what doc it's inheriting\r\n   \r\n   I've pushed the update\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-18T23:43:57.627+0000",
                    "updated": "2022-02-18T23:43:57.627+0000",
                    "started": "2022-02-18T23:43:57.627+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "729936",
                    "issueId": "13428895"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13428895/worklog/729947",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt commented on pull request #12451:\nURL: https://github.com/apache/arrow/pull/12451#issuecomment-1045469973\n\n\n   @Alfred-Mountfield looks good to me. Thanks!\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-19T01:01:20.279+0000",
                    "updated": "2022-02-19T01:01:20.279+0000",
                    "started": "2022-02-19T01:01:20.279+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "729947",
                    "issueId": "13428895"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13428895/worklog/729948",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt commented on pull request #12451:\nURL: https://github.com/apache/arrow/pull/12451#issuecomment-1045473457\n\n\n   @Alfred-Mountfield I think we have the same issue in the [UnionBuilder](https://github.com/apache/arrow/blob/master/js/src/builder/union.ts) (but only when the type is `SparseUnion`). We can either add an override to that builder in this PR, or we can do it in a follow up PR.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-19T01:03:54.753+0000",
                    "updated": "2022-02-19T01:03:54.753+0000",
                    "started": "2022-02-19T01:03:54.753+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "729948",
                    "issueId": "13428895"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13428895/worklog/729950",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Alfred-Mountfield commented on pull request #12451:\nURL: https://github.com/apache/arrow/pull/12451#issuecomment-1045479718\n\n\n   > add an override to that builder in this PR\r\n   \r\n   @trxcllnt If it's the same fix then I'm happy to add the changes at some point tomorrow, otherwise we could just do it in the follow-up as you say\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-19T01:08:43.590+0000",
                    "updated": "2022-02-19T01:08:43.590+0000",
                    "started": "2022-02-19T01:08:43.590+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "729950",
                    "issueId": "13428895"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13428895/worklog/730100",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "domoritz commented on a change in pull request #12451:\nURL: https://github.com/apache/arrow/pull/12451#discussion_r810560073\n\n\n\n##########\nFile path: js/src/builder/struct.ts\n##########\n@@ -25,11 +25,18 @@ import { Struct, TypeMap } from '../type.js';\n export class StructBuilder<T extends TypeMap = any, TNull = any> extends Builder<Struct<T>, TNull> {\n     public setValue(index: number, value: Struct<T>['TValue']) {\n         const children = this.children;\n-        switch (Array.isArray(value) || value.constructor) {\n-            case true: return this.type.children.forEach((_, i) => children[i].set(index, value[i]));\n-            case Map: return this.type.children.forEach((f, i) => children[i].set(index, value.get(f.name)));\n-            default: return this.type.children.forEach((f, i) => children[i].set(index, value[f.name]));\n+            switch (Array.isArray(value) || value.constructor) {\n+                case true: return this.type.children.forEach((_, i) => children[i].set(index, value[i]));\n+                case Map: return this.type.children.forEach((f, i) => children[i].set(index, value.get(f.name)));\n+                default: return this.type.children.forEach((f, i) => children[i].set(index, value[f.name]));\n+            }\n\nReview comment:\n       Please un-indent the block so it's aligned with the previous line. \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-20T02:26:33.416+0000",
                    "updated": "2022-02-20T02:26:33.416+0000",
                    "started": "2022-02-20T02:26:33.416+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "730100",
                    "issueId": "13428895"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13428895/worklog/730150",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Alfred-Mountfield commented on a change in pull request #12451:\nURL: https://github.com/apache/arrow/pull/12451#discussion_r810650513\n\n\n\n##########\nFile path: js/src/builder/struct.ts\n##########\n@@ -25,11 +25,18 @@ import { Struct, TypeMap } from '../type.js';\n export class StructBuilder<T extends TypeMap = any, TNull = any> extends Builder<Struct<T>, TNull> {\n     public setValue(index: number, value: Struct<T>['TValue']) {\n         const children = this.children;\n-        switch (Array.isArray(value) || value.constructor) {\n-            case true: return this.type.children.forEach((_, i) => children[i].set(index, value[i]));\n-            case Map: return this.type.children.forEach((f, i) => children[i].set(index, value.get(f.name)));\n-            default: return this.type.children.forEach((f, i) => children[i].set(index, value[f.name]));\n+            switch (Array.isArray(value) || value.constructor) {\n+                case true: return this.type.children.forEach((_, i) => children[i].set(index, value[i]));\n+                case Map: return this.type.children.forEach((f, i) => children[i].set(index, value.get(f.name)));\n+                default: return this.type.children.forEach((f, i) => children[i].set(index, value[f.name]));\n+            }\n\nReview comment:\n       That was sloppy, apologies, had whitespace changes off on the diff and didn't notice. \r\n   I've fixed it.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-20T16:25:52.746+0000",
                    "updated": "2022-02-20T16:25:52.746+0000",
                    "started": "2022-02-20T16:25:52.746+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "730150",
                    "issueId": "13428895"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 24000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4b6b8b21[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6a683866[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6dd90ac5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@46d9b410[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@22bb3404[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3df9198f[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1853a3d7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@13a1fdf9[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6841f09d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1d01b97b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1849fc17[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@41b94d2[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 24000,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Apr 18 14:41:40 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": [
            "javascript"
        ],
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-04-18T14:41:40.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15705/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-02-16T18:29:47.000+0000",
        "updated": "2022-05-09T08:52:43.000+0000",
        "timeoriginalestimate": null,
        "description": "If you have a StructBuilder, then the `set` method (which is inherited from `Builder`) on it will modify the null-bitmap and then return directly due to this snippet:\r\n{code:javascript}\r\npublic set(index: number, value: T['TValue'] | TNull) {\r\n        if (this.setValid(index, this.isValid(value))) {\r\n            this.setValue(index, value);\r\n        }\r\n        return this;\r\n    }\r\n{code}\r\n\u00a0\r\nI believe this breaks the spec, as it results in the children arrays not having their lengths and null-counts increased. (At least the Rust implementation expects child arrays to be the same length as their parent struct array, and the spec seems to imply that's a requirement)\r\n\r\nI think there's an easy fix which would be to call `this.setValue` for `StructBuilder`s regardless of `this.isValid(value)`\r\n\r\nRelated to https://issues.apache.org/jira/browse/ARROW-15651",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 24000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[JavaScript] Structs don't append nulls properly",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13428895/comment/17523733",
                    "id": "17523733",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=domoritz",
                        "name": "domoritz",
                        "key": "domoritz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=domoritz&avatarId=46688",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=domoritz&avatarId=46688",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=domoritz&avatarId=46688",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=domoritz&avatarId=46688"
                        },
                        "displayName": "Dominik Moritz",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 12451\n[https://github.com/apache/arrow/pull/12451]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=domoritz",
                        "name": "domoritz",
                        "key": "domoritz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=domoritz&avatarId=46688",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=domoritz&avatarId=46688",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=domoritz&avatarId=46688",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=domoritz&avatarId=46688"
                        },
                        "displayName": "Dominik Moritz",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-04-18T14:41:40.900+0000",
                    "updated": "2022-04-18T14:41:40.900+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0znc0:",
        "customfield_12314139": null
    }
}