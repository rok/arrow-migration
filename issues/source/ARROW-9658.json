{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13321140",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321140",
    "key": "ARROW-9658",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "dataset",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12594891",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12594891",
                "type": {
                    "id": "10020",
                    "name": "Cloners",
                    "inward": "is cloned by",
                    "outward": "is a clone of",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10020"
                },
                "outwardIssue": {
                    "id": "13289605",
                    "key": "ARROW-8001",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13289605",
                    "fields": {
                        "summary": "[R][Dataset] Bindings for dataset writing",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 8400,
            "total": 8400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 8400,
            "total": 8400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9658/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 14,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321140/worklog/468535",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche opened a new pull request #7921:\nURL: https://github.com/apache/arrow/pull/7921\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-10T12:15:47.743+0000",
                    "updated": "2020-08-10T12:15:47.743+0000",
                    "started": "2020-08-10T12:15:47.742+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "468535",
                    "issueId": "13321140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321140/worklog/468539",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7921:\nURL: https://github.com/apache/arrow/pull/7921#issuecomment-671323490\n\n\n   https://issues.apache.org/jira/browse/ARROW-9658\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-10T12:24:48.575+0000",
                    "updated": "2020-08-10T12:24:48.575+0000",
                    "started": "2020-08-10T12:24:48.574+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "468539",
                    "issueId": "13321140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321140/worklog/470235",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7921:\nURL: https://github.com/apache/arrow/pull/7921#discussion_r469950141\n\n\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2022,3 +2022,66 @@ def _get_partition_keys(Expression partition_expression):\n         frombytes(name_val.first): pyarrow_wrap_scalar(name_val.second).as_py()\n         for name_val in GetResultValue(CGetPartitionKeys(deref(expr.get())))\n     }\n+\n+\n+def _filesystemdataset_write(\n+    data, object base_dir, Schema schema,\n+    FileFormat format, FileSystem filesystem, Partitioning partitioning\n\nReview comment:\n       Should these be marked `not None`?\n\n##########\nFile path: python/pyarrow/includes/libarrow_dataset.pxd\n##########\n@@ -126,6 +126,11 @@ cdef extern from \"arrow/dataset/api.h\" namespace \"arrow::dataset\" nogil:\n     ctypedef CIterator[shared_ptr[CFragment]] CFragmentIterator \\\n         \"arrow::dataset::FragmentIterator\"\n \n+    cdef cppclass CInMemoryFragment \"arrow::dataset::InMemoryFragment\"(\n+            CFragment):\n+        CInMemoryFragment(vector[shared_ptr[CRecordBatch]] record_batches,\n+                          shared_ptr[CExpression] scalar)\n\nReview comment:\n       ```suggestion\r\n                             shared_ptr[CExpression] partition_expression)\r\n   ```\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2022,3 +2022,66 @@ def _get_partition_keys(Expression partition_expression):\n         frombytes(name_val.first): pyarrow_wrap_scalar(name_val.second).as_py()\n         for name_val in GetResultValue(CGetPartitionKeys(deref(expr.get())))\n     }\n+\n+\n+def _filesystemdataset_write(\n+    data, object base_dir, Schema schema,\n+    FileFormat format, FileSystem filesystem, Partitioning partitioning\n+):\n+    \"\"\"\n+    CFileSystemDataset.Write wrapper\n+    \"\"\"\n+    cdef:\n+        c_string c_base_dir\n+        shared_ptr[CSchema] c_schema\n+        shared_ptr[CFileFormat] c_format\n+        shared_ptr[CFileSystem] c_filesystem\n+        shared_ptr[CPartitioning] c_partitioning\n+        shared_ptr[CScanContext] c_context\n+        # to create iterator of InMemory fragments\n+        vector[shared_ptr[CRecordBatch]] c_batches\n+        shared_ptr[CFragment] c_fragment\n+        vector[shared_ptr[CFragment]] c_fragment_vector\n+\n+    c_base_dir = tobytes(_stringify_path(base_dir))\n+    c_schema = pyarrow_unwrap_schema(schema)\n+    c_format = format.unwrap()\n+    c_filesystem = filesystem.unwrap()\n+    c_partitioning = partitioning.unwrap()\n+    # passthrough use_threads?\n+    c_context = _build_scan_context()\n+\n+    if isinstance(data, Dataset):\n+        with nogil:\n+            check_status(\n+                CFileSystemDataset.Write(\n+                    c_schema,\n+                    c_format,\n+                    c_filesystem,\n+                    c_base_dir,\n+                    c_partitioning,\n+                    c_context,\n+                    (<Dataset> data).dataset.GetFragments()\n+                )\n+            )\n+    else:\n+        # data is list of batches\n+        for batch in data:\n+            c_batches.push_back((<RecordBatch> batch).sp_batch)\n+\n+        c_fragment = shared_ptr[CFragment](\n+            new CInMemoryFragment(c_batches, _true.unwrap()))\n+        c_fragment_vector.push_back(c_fragment)\n+\n+        with nogil:\n+            check_status(\n+                CFileSystemDataset.Write(\n+                    c_schema,\n+                    c_format,\n+                    c_filesystem,\n+                    c_base_dir,\n+                    c_partitioning,\n+                    c_context,\n+                    MakeVectorIterator(c_fragment_vector)\n\nReview comment:\n       Currently we only parallelize over written fragments, so since this only creates a single written fragment use_threads is effectively ignored. I'd recommend creating a fragment wrapping each batch. This will result in one or more files per input record batch however.\r\n    ```suggestion\r\n           # data is list of batches\r\n           for batch in data:\r\n               c_batches.push_back((<RecordBatch> batch).sp_batch)\r\n               c_fragment = shared_ptr[CFragment](\r\n                   new CInMemoryFragment(c_batches, _true.unwrap()))\r\n               c_batches.clear()\r\n               c_fragment_vector.push_back(c_fragment)\r\n   \r\n           with nogil:\r\n               check_status(\r\n                   CFileSystemDataset.Write(\r\n                       c_schema,\r\n                       c_format,\r\n                       c_filesystem,\r\n                       c_base_dir,\r\n                       c_partitioning,\r\n                       c_context,\r\n                       MakeVectorIterator(move(c_fragment_vector))\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-13T13:39:56.525+0000",
                    "updated": "2020-08-13T13:39:56.525+0000",
                    "started": "2020-08-13T13:39:56.525+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "470235",
                    "issueId": "13321140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321140/worklog/470250",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #7921:\nURL: https://github.com/apache/arrow/pull/7921#discussion_r469985388\n\n\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2022,3 +2022,66 @@ def _get_partition_keys(Expression partition_expression):\n         frombytes(name_val.first): pyarrow_wrap_scalar(name_val.second).as_py()\n         for name_val in GetResultValue(CGetPartitionKeys(deref(expr.get())))\n     }\n+\n+\n+def _filesystemdataset_write(\n+    data, object base_dir, Schema schema,\n+    FileFormat format, FileSystem filesystem, Partitioning partitioning\n\nReview comment:\n       Indeed\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-13T14:17:13.279+0000",
                    "updated": "2020-08-13T14:17:13.279+0000",
                    "started": "2020-08-13T14:17:13.279+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "470250",
                    "issueId": "13321140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321140/worklog/470254",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #7921:\nURL: https://github.com/apache/arrow/pull/7921#discussion_r469988191\n\n\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2022,3 +2022,66 @@ def _get_partition_keys(Expression partition_expression):\n         frombytes(name_val.first): pyarrow_wrap_scalar(name_val.second).as_py()\n         for name_val in GetResultValue(CGetPartitionKeys(deref(expr.get())))\n     }\n+\n+\n+def _filesystemdataset_write(\n+    data, object base_dir, Schema schema,\n+    FileFormat format, FileSystem filesystem, Partitioning partitioning\n+):\n+    \"\"\"\n+    CFileSystemDataset.Write wrapper\n+    \"\"\"\n+    cdef:\n+        c_string c_base_dir\n+        shared_ptr[CSchema] c_schema\n+        shared_ptr[CFileFormat] c_format\n+        shared_ptr[CFileSystem] c_filesystem\n+        shared_ptr[CPartitioning] c_partitioning\n+        shared_ptr[CScanContext] c_context\n+        # to create iterator of InMemory fragments\n+        vector[shared_ptr[CRecordBatch]] c_batches\n+        shared_ptr[CFragment] c_fragment\n+        vector[shared_ptr[CFragment]] c_fragment_vector\n+\n+    c_base_dir = tobytes(_stringify_path(base_dir))\n+    c_schema = pyarrow_unwrap_schema(schema)\n+    c_format = format.unwrap()\n+    c_filesystem = filesystem.unwrap()\n+    c_partitioning = partitioning.unwrap()\n+    # passthrough use_threads?\n+    c_context = _build_scan_context()\n+\n+    if isinstance(data, Dataset):\n+        with nogil:\n+            check_status(\n+                CFileSystemDataset.Write(\n+                    c_schema,\n+                    c_format,\n+                    c_filesystem,\n+                    c_base_dir,\n+                    c_partitioning,\n+                    c_context,\n+                    (<Dataset> data).dataset.GetFragments()\n+                )\n+            )\n+    else:\n+        # data is list of batches\n+        for batch in data:\n+            c_batches.push_back((<RecordBatch> batch).sp_batch)\n+\n+        c_fragment = shared_ptr[CFragment](\n+            new CInMemoryFragment(c_batches, _true.unwrap()))\n+        c_fragment_vector.push_back(c_fragment)\n+\n+        with nogil:\n+            check_status(\n+                CFileSystemDataset.Write(\n+                    c_schema,\n+                    c_format,\n+                    c_filesystem,\n+                    c_base_dir,\n+                    c_partitioning,\n+                    c_context,\n+                    MakeVectorIterator(c_fragment_vector)\n\nReview comment:\n       Yes, this is one of the aspects I wanted to ask: indeed right now by creating a single Fragment, it gets written to a single file. If you have a big table, you might want to make a file per batch. But on the other hand, that might also result in a lot of small files (certainly if you also split on some partition columns)? Eg in Parquet, you typically have files with multiple row groups (which might be somewhat comparable to multiple record batches)\r\n   \r\n   So we should maybe have some configurability?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-13T14:21:04.164+0000",
                    "updated": "2020-08-13T14:21:04.164+0000",
                    "started": "2020-08-13T14:21:04.164+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "470254",
                    "issueId": "13321140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321140/worklog/470256",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #7921:\nURL: https://github.com/apache/arrow/pull/7921#discussion_r469990610\n\n\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2022,3 +2022,66 @@ def _get_partition_keys(Expression partition_expression):\n         frombytes(name_val.first): pyarrow_wrap_scalar(name_val.second).as_py()\n         for name_val in GetResultValue(CGetPartitionKeys(deref(expr.get())))\n     }\n+\n+\n+def _filesystemdataset_write(\n+    data, object base_dir, Schema schema,\n+    FileFormat format, FileSystem filesystem, Partitioning partitioning\n+):\n+    \"\"\"\n+    CFileSystemDataset.Write wrapper\n+    \"\"\"\n+    cdef:\n+        c_string c_base_dir\n+        shared_ptr[CSchema] c_schema\n+        shared_ptr[CFileFormat] c_format\n+        shared_ptr[CFileSystem] c_filesystem\n+        shared_ptr[CPartitioning] c_partitioning\n+        shared_ptr[CScanContext] c_context\n+        # to create iterator of InMemory fragments\n+        vector[shared_ptr[CRecordBatch]] c_batches\n+        shared_ptr[CFragment] c_fragment\n+        vector[shared_ptr[CFragment]] c_fragment_vector\n+\n+    c_base_dir = tobytes(_stringify_path(base_dir))\n+    c_schema = pyarrow_unwrap_schema(schema)\n+    c_format = format.unwrap()\n+    c_filesystem = filesystem.unwrap()\n+    c_partitioning = partitioning.unwrap()\n+    # passthrough use_threads?\n+    c_context = _build_scan_context()\n\nReview comment:\n       Since there is some parallelism, I think it's useful to be able to set `use_threads`\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-13T14:24:11.215+0000",
                    "updated": "2020-08-13T14:24:11.215+0000",
                    "started": "2020-08-13T14:24:11.215+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "470256",
                    "issueId": "13321140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321140/worklog/471925",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #7921:\nURL: https://github.com/apache/arrow/pull/7921#discussion_r472119868\n\n\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2022,3 +2022,66 @@ def _get_partition_keys(Expression partition_expression):\n         frombytes(name_val.first): pyarrow_wrap_scalar(name_val.second).as_py()\n         for name_val in GetResultValue(CGetPartitionKeys(deref(expr.get())))\n     }\n+\n+\n+def _filesystemdataset_write(\n+    data, object base_dir, Schema schema,\n+    FileFormat format, FileSystem filesystem, Partitioning partitioning\n+):\n+    \"\"\"\n+    CFileSystemDataset.Write wrapper\n+    \"\"\"\n+    cdef:\n+        c_string c_base_dir\n+        shared_ptr[CSchema] c_schema\n+        shared_ptr[CFileFormat] c_format\n+        shared_ptr[CFileSystem] c_filesystem\n+        shared_ptr[CPartitioning] c_partitioning\n+        shared_ptr[CScanContext] c_context\n+        # to create iterator of InMemory fragments\n+        vector[shared_ptr[CRecordBatch]] c_batches\n+        shared_ptr[CFragment] c_fragment\n+        vector[shared_ptr[CFragment]] c_fragment_vector\n+\n+    c_base_dir = tobytes(_stringify_path(base_dir))\n+    c_schema = pyarrow_unwrap_schema(schema)\n+    c_format = format.unwrap()\n+    c_filesystem = filesystem.unwrap()\n+    c_partitioning = partitioning.unwrap()\n+    # passthrough use_threads?\n+    c_context = _build_scan_context()\n+\n+    if isinstance(data, Dataset):\n+        with nogil:\n+            check_status(\n+                CFileSystemDataset.Write(\n+                    c_schema,\n+                    c_format,\n+                    c_filesystem,\n+                    c_base_dir,\n+                    c_partitioning,\n+                    c_context,\n+                    (<Dataset> data).dataset.GetFragments()\n+                )\n+            )\n+    else:\n+        # data is list of batches\n+        for batch in data:\n+            c_batches.push_back((<RecordBatch> batch).sp_batch)\n+\n+        c_fragment = shared_ptr[CFragment](\n+            new CInMemoryFragment(c_batches, _true.unwrap()))\n+        c_fragment_vector.push_back(c_fragment)\n+\n+        with nogil:\n+            check_status(\n+                CFileSystemDataset.Write(\n+                    c_schema,\n+                    c_format,\n+                    c_filesystem,\n+                    c_base_dir,\n+                    c_partitioning,\n+                    c_context,\n+                    MakeVectorIterator(c_fragment_vector)\n\nReview comment:\n       @bkietz So I updated this to enable the use case of writing multiple fragments, but by explicit choice by the user -> passing a single Table/RecordBatch = writing a single fragment (even if the Table has multiple batches), passing a list of Table/RecordBatches -> written as multiple fragments. \r\n   \r\n   So if the user has a Table with multiple batches and wants to write this as multiple files instead of a single file (in case there is no partitioning), they can do `write_dataset(table.to_batches)`\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-18T11:53:03.793+0000",
                    "updated": "2020-08-18T11:53:03.793+0000",
                    "started": "2020-08-18T11:53:03.792+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "471925",
                    "issueId": "13321140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321140/worklog/471992",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7921:\nURL: https://github.com/apache/arrow/pull/7921#discussion_r472259523\n\n\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -2022,3 +2022,66 @@ def _get_partition_keys(Expression partition_expression):\n         frombytes(name_val.first): pyarrow_wrap_scalar(name_val.second).as_py()\n         for name_val in GetResultValue(CGetPartitionKeys(deref(expr.get())))\n     }\n+\n+\n+def _filesystemdataset_write(\n+    data, object base_dir, Schema schema,\n+    FileFormat format, FileSystem filesystem, Partitioning partitioning\n+):\n+    \"\"\"\n+    CFileSystemDataset.Write wrapper\n+    \"\"\"\n+    cdef:\n+        c_string c_base_dir\n+        shared_ptr[CSchema] c_schema\n+        shared_ptr[CFileFormat] c_format\n+        shared_ptr[CFileSystem] c_filesystem\n+        shared_ptr[CPartitioning] c_partitioning\n+        shared_ptr[CScanContext] c_context\n+        # to create iterator of InMemory fragments\n+        vector[shared_ptr[CRecordBatch]] c_batches\n+        shared_ptr[CFragment] c_fragment\n+        vector[shared_ptr[CFragment]] c_fragment_vector\n+\n+    c_base_dir = tobytes(_stringify_path(base_dir))\n+    c_schema = pyarrow_unwrap_schema(schema)\n+    c_format = format.unwrap()\n+    c_filesystem = filesystem.unwrap()\n+    c_partitioning = partitioning.unwrap()\n+    # passthrough use_threads?\n+    c_context = _build_scan_context()\n+\n+    if isinstance(data, Dataset):\n+        with nogil:\n+            check_status(\n+                CFileSystemDataset.Write(\n+                    c_schema,\n+                    c_format,\n+                    c_filesystem,\n+                    c_base_dir,\n+                    c_partitioning,\n+                    c_context,\n+                    (<Dataset> data).dataset.GetFragments()\n+                )\n+            )\n+    else:\n+        # data is list of batches\n+        for batch in data:\n+            c_batches.push_back((<RecordBatch> batch).sp_batch)\n+\n+        c_fragment = shared_ptr[CFragment](\n+            new CInMemoryFragment(c_batches, _true.unwrap()))\n+        c_fragment_vector.push_back(c_fragment)\n+\n+        with nogil:\n+            check_status(\n+                CFileSystemDataset.Write(\n+                    c_schema,\n+                    c_format,\n+                    c_filesystem,\n+                    c_base_dir,\n+                    c_partitioning,\n+                    c_context,\n+                    MakeVectorIterator(c_fragment_vector)\n\nReview comment:\n       Great, this provides a minimal handle on write parallelism; this will be necessary until the c++ implementation can be made more robustly parallel than \"one thread per written fragment\".\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-18T14:54:06.019+0000",
                    "updated": "2020-08-18T14:54:06.019+0000",
                    "started": "2020-08-18T14:54:06.019+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "471992",
                    "issueId": "13321140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321140/worklog/471993",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7921:\nURL: https://github.com/apache/arrow/pull/7921#discussion_r472262132\n\n\n\n##########\nFile path: python/pyarrow/dataset.py\n##########\n@@ -682,3 +683,68 @@ def dataset(source, schema=None, format=None, filesystem=None,\n             'Expected a path-like, list of path-likes or a list of Datasets '\n             'instead of the given type: {}'.format(type(source).__name__)\n         )\n+\n+\n+def _ensure_write_partitioning(scheme):\n+    if scheme is None:\n+        scheme = partitioning(pa.schema([]))\n+    if not isinstance(scheme, Partitioning):\n+        # TODO support passing field names, and get types from schema\n+        raise ValueError(\"partitioning needs to be actual Partitioning object\")\n+    return scheme\n+\n+\n+def write_dataset(data, base_dir, format=None, partitioning=None, schema=None,\n+                  filesystem=None, use_threads=True):\n+    \"\"\"\n+    Write a dataset to a given format and partitioning.\n+\n+    Parameters\n+    ----------\n+    data : FileSystemDataset, Table/RecordBatch, or list of Table/RecordBatch\n+        The data to write. This can be a FileSystemDataset instance or\n\nReview comment:\n       ```suggestion\r\n       data : Dataset, Table/RecordBatch, or list of Table/RecordBatch\r\n           The data to write. This can be a Dataset instance or\r\n   ```\r\n   (A UnionDataset could also be written, for example concatenating a Parquet and a CSV dataset into a single IPC dataset)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-18T14:57:19.933+0000",
                    "updated": "2020-08-18T14:57:19.933+0000",
                    "started": "2020-08-18T14:57:19.933+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "471993",
                    "issueId": "13321140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321140/worklog/472064",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7921:\nURL: https://github.com/apache/arrow/pull/7921#discussion_r472368169\n\n\n\n##########\nFile path: python/pyarrow/dataset.py\n##########\n@@ -682,3 +683,70 @@ def dataset(source, schema=None, format=None, filesystem=None,\n             'Expected a path-like, list of path-likes or a list of Datasets '\n             'instead of the given type: {}'.format(type(source).__name__)\n         )\n+\n+\n+def _ensure_write_partitioning(scheme):\n+    if scheme is None:\n+        scheme = partitioning(pa.schema([]))\n+    if not isinstance(scheme, Partitioning):\n+        # TODO support passing field names, and get types from schema\n+        raise ValueError(\"partitioning needs to be actual Partitioning object\")\n+    return scheme\n+\n+\n+def write_dataset(data, base_dir, format=None, partitioning=None, schema=None,\n+                  filesystem=None, use_threads=True):\n+    \"\"\"\n+    Write a dataset to a given format and partitioning.\n+\n+    Parameters\n+    ----------\n+    data : Dataset, Table/RecordBatch, or list of Table/RecordBatch\n+        The data to write. This can be a Dataset instance or\n+        in-memory Arrow data. A Table or RecordBatch is written as a\n+        single fragment (resulting in a single file, or multiple files if\n+        split according to the `partitioning`). If you have a Table consisting\n+        of multiple record batches, you can pass ``table.to_batches()`` to\n+        handle each record batch as a separate fragment.\n+    base_dir : str\n+        The root directory where to write the dataset.\n+    format : FileFormat or str\n+        The format in which to write the dataset. Currently supported:\n+        \"ipc\"/\"feather\". If a Dataset is being written and `format` is not\n+        specified, it defaults to the same format as the specified Dataset.\n+        When writing a Table or RecordBatch, this keyword is required.\n+    partitioning : Partitioning, optional\n+        The partitioning scheme specified with the ``partitioning()``\n+        function.\n+    schema : Schema, optional\n+    filesystem : FileSystem, optional\n+    use_threads : bool, default True\n+        Write files in parallel. If enabled, then maximum parallelism will be\n+        used determined by the number of available CPU cores.\n+    \"\"\"\n+    if isinstance(data, FileSystemDataset):\n+        schema = schema or data.schema\n+        format = format or data.format\n\nReview comment:\n       ```suggestion\r\n       if isinstance(data, Dataset):\r\n           schema = schema or data.schema\r\n           if isinstance(data, FileSystemDataset):\r\n               format = format or data.format\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-18T17:36:23.480+0000",
                    "updated": "2020-08-18T17:36:23.480+0000",
                    "started": "2020-08-18T17:36:23.480+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472064",
                    "issueId": "13321140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321140/worklog/472065",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7921:\nURL: https://github.com/apache/arrow/pull/7921#discussion_r472368545\n\n\n\n##########\nFile path: python/pyarrow/dataset.py\n##########\n@@ -682,3 +683,70 @@ def dataset(source, schema=None, format=None, filesystem=None,\n             'Expected a path-like, list of path-likes or a list of Datasets '\n             'instead of the given type: {}'.format(type(source).__name__)\n         )\n+\n+\n+def _ensure_write_partitioning(scheme):\n+    if scheme is None:\n+        scheme = partitioning(pa.schema([]))\n+    if not isinstance(scheme, Partitioning):\n+        # TODO support passing field names, and get types from schema\n+        raise ValueError(\"partitioning needs to be actual Partitioning object\")\n+    return scheme\n+\n+\n+def write_dataset(data, base_dir, format=None, partitioning=None, schema=None,\n+                  filesystem=None, use_threads=True):\n+    \"\"\"\n+    Write a dataset to a given format and partitioning.\n+\n+    Parameters\n+    ----------\n+    data : Dataset, Table/RecordBatch, or list of Table/RecordBatch\n+        The data to write. This can be a Dataset instance or\n+        in-memory Arrow data. A Table or RecordBatch is written as a\n+        single fragment (resulting in a single file, or multiple files if\n+        split according to the `partitioning`). If you have a Table consisting\n+        of multiple record batches, you can pass ``table.to_batches()`` to\n+        handle each record batch as a separate fragment.\n+    base_dir : str\n+        The root directory where to write the dataset.\n+    format : FileFormat or str\n+        The format in which to write the dataset. Currently supported:\n+        \"ipc\"/\"feather\". If a Dataset is being written and `format` is not\n+        specified, it defaults to the same format as the specified Dataset.\n+        When writing a Table or RecordBatch, this keyword is required.\n\nReview comment:\n       ```suggestion\r\n           \"ipc\"/\"feather\". If a FileSystemDataset is being written and `format` is not\r\n           specified, it defaults to the same format as the specified FileSystemDataset.\r\n           When writing a Table or RecordBatch, this keyword is required.\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-18T17:37:06.627+0000",
                    "updated": "2020-08-18T17:37:06.627+0000",
                    "started": "2020-08-18T17:37:06.627+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "472065",
                    "issueId": "13321140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321140/worklog/477161",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #7921:\nURL: https://github.com/apache/arrow/pull/7921#issuecomment-684789982\n\n\n   Going to merge this, so I can add Parquet support in a follow-up PR.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-01T11:41:08.185+0000",
                    "updated": "2020-09-01T11:41:08.185+0000",
                    "started": "2020-09-01T11:41:08.184+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "477161",
                    "issueId": "13321140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321140/worklog/477165",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche closed pull request #7921:\nURL: https://github.com/apache/arrow/pull/7921\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-01T11:43:38.652+0000",
                    "updated": "2020-09-01T11:43:38.652+0000",
                    "started": "2020-09-01T11:43:38.652+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "477165",
                    "issueId": "13321140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321140/worklog/485296",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ldacey commented on pull request #7921:\nURL: https://github.com/apache/arrow/pull/7921#issuecomment-693579613\n\n\n   Do think it is possible to add in support to repartition datasets? I am facing some issues with many small files just due to the frequency that I need to download data, which is compounded by the partitions. \r\n   \r\n   I asked this on Jira as well but:\r\n   \r\n   1) I download data every 30 minutes from a source using UUID parquet filenames (each file just contains new or updated records since the last retrieval so I could not think of a good callback function name). This is 48 parquet files per day.\r\n   2) The data is then partitioned based on the created_date which creates even more files (some can be quite small)\r\n   3) When I query the dataset, I need to read in a lot of small files.\r\n   \r\n   I would then want to read the data and repartition the files using a callback function so the dozens of files in partition (\"date\", \"==\", \"2020-09-15\") would become 2020-09-15.parquet, consolidated as a single file to keep things tidy. I know I can do this with Spark, but it would be nice to have a native pyarrow method.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-16T18:23:18.458+0000",
                    "updated": "2020-09-16T18:23:18.458+0000",
                    "started": "2020-09-16T18:23:18.458+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "485296",
                    "issueId": "13321140"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 8400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5ba9ee62[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@40d856a2[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6fcbb14e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6d248753[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@459a36e2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@121d64f9[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@20eee635[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@69b9f364[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7d80e597[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4436c72[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@534bfd81[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@754f165f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 8400,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Sep 01 11:43:32 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-09-01T11:43:32.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9658/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-08-05T18:18:45.000+0000",
        "updated": "2020-09-16T18:23:19.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 8400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python][Dataset] Bindings for dataset writing",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13321140/comment/17188379",
                    "id": "17188379",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "Issue resolved by pull request 7921\n[https://github.com/apache/arrow/pull/7921]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2020-09-01T11:43:32.699+0000",
                    "updated": "2020-09-01T11:43:32.699+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0hi6g:",
        "customfield_12314139": null
    }
}