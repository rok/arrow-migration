{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13061271",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13061271",
    "key": "ARROW-764",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=seibs",
            "name": "seibs",
            "key": "seibs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Adam Seibert",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-764/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3275bd71[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5b3ff581[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6d1c21b7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@49ab5268[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4d78d2b8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@535e7723[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5f43f566[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4ce8d4f4[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@478e32c3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@67c9b27e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@27618324[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2da4ac48[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jan 10 22:10:54 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-01-10T22:10:54.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-764/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2017-04-03T22:04:01.000+0000",
        "updated": "2018-01-10T22:10:54.000+0000",
        "timeoriginalestimate": null,
        "description": "This is follow up work after a discussion in the patch for ARROW-657",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Improve performance of CopyBitmap, add benchmarks",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13061271/comment/16290264",
                    "id": "16290264",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "seibs opened a new pull request #1422: WIP ARROW-764: [C++] Improves performance of CopyBitmap and adds benchmarks\nURL: https://github.com/apache/arrow/pull/1422\n \n \n   I took a swing at improving the CopyBitmap performance (benchmarks below).  I'm a C/C++ novice, so I thought I'd get some feedback before I went too much further.\r\n   \r\n   **Starting Point**\r\n   ```\r\n   Run on (4 X 2208 MHz CPU s)\r\n   12/13/17 21:15:18\r\n   Benchmark                                        Time           CPU Iterations\r\n   ------------------------------------------------------------------------------\r\n   BM_CopyBitmap/97.6563k/0/min_time:1.000       4779 us       4758 us        289   20.0445MB/s\r\n   BM_CopyBitmap/976.563k/0/min_time:1.000      47740 us      47476 us         26   20.0875MB/s\r\n   BM_CopyBitmap/97.6563k/4/min_time:1.000       4858 us       4866 us        289   19.5991MB/s\r\n   BM_CopyBitmap/976.563k/4/min_time:1.000      48117 us      47953 us         29   19.8879MB/s\r\n   ```\r\n   \r\n   **Using stanford bithacks for SetBitTo**\r\n   ```\r\n   Run on (4 X 2208 MHz CPU s)\r\n   12/13/17 21:22:05\r\n   Benchmark                                        Time           CPU Iterations\r\n   ------------------------------------------------------------------------------\r\n   BM_CopyBitmap/97.6563k/0/min_time:1.000       1647 us       1649 us        815   57.8415MB/s\r\n   BM_CopyBitmap/976.563k/0/min_time:1.000      16368 us      16397 us         81   58.1629MB/s\r\n   BM_CopyBitmap/97.6563k/4/min_time:1.000       1599 us       1610 us        815   59.2186MB/s\r\n   BM_CopyBitmap/976.563k/4/min_time:1.000      16026 us      16011 us         81   59.5644MB/s\r\n   ```\r\n   \r\n   **memcpy + shifting**\r\n   *This solution provides varying performance depending on whether or not the bit offset is a multiple of 8*\r\n   ```\r\n   Run on (4 X 2208 MHz CPU s)\r\n   12/13/17 21:23:44\r\n   Benchmark                                        Time           CPU Iterations\r\n   ------------------------------------------------------------------------------\r\n   BM_CopyBitmap/97.6563k/0/min_time:1.000          5 us          5 us     280000   18.9651GB/s\r\n   BM_CopyBitmap/976.563k/0/min_time:1.000         62 us         61 us      22400   15.1721GB/s\r\n   BM_CopyBitmap/97.6563k/4/min_time:1.000        171 us        170 us       6892   560.872MB/s\r\n   BM_CopyBitmap/976.563k/4/min_time:1.000       1639 us       1639 us        896   581.782MB/s\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-14T02:58:51.886+0000",
                    "updated": "2017-12-14T02:58:51.886+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13061271/comment/16292548",
                    "id": "16292548",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on a change in pull request #1422: WIP ARROW-764: [C++] Improves performance of CopyBitmap and adds benchmarks\nURL: https://github.com/apache/arrow/pull/1422#discussion_r157203852\n \n \n\n ##########\n File path: cpp/src/arrow/compute/compute-benchmark.cc\n ##########\n @@ -191,7 +191,7 @@ static void BM_UniqueString100bytes(benchmark::State& state) {\n BENCHMARK(BM_BuildDictionary)->MinTime(1.0)->Unit(benchmark::kMicrosecond);\n BENCHMARK(BM_BuildStringDictionary)->MinTime(1.0)->Unit(benchmark::kMicrosecond);\n \n-constexpr int64_t kHashBenchmarkLength = 1 << 24;\n+constexpr int kHashBenchmarkLength = 1 << 24;\n \n Review comment:\n   Can you keep this an `int64_t`?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-15T13:48:36.290+0000",
                    "updated": "2017-12-15T13:48:36.290+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13061271/comment/16292549",
                    "id": "16292549",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on a change in pull request #1422: WIP ARROW-764: [C++] Improves performance of CopyBitmap and adds benchmarks\nURL: https://github.com/apache/arrow/pull/1422#discussion_r157203899\n \n \n\n ##########\n File path: cpp/src/arrow/util/CMakeLists.txt\n ##########\n @@ -57,11 +57,16 @@ if (ARROW_BUILD_BENCHMARKS)\n     target_link_libraries(arrow_benchmark_main\n       benchmark\n     )\n+  elseif(MSVC)\n+    target_link_libraries(arrow_benchmark_main\n+      benchmark\n+      Shlwapi.lib\n+  )\n   else()\n-\t  target_link_libraries(arrow_benchmark_main\n+    target_link_libraries(arrow_benchmark_main\n \n Review comment:\n   Can you remove these reindentations?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-15T13:48:36.298+0000",
                    "updated": "2017-12-15T13:48:36.298+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13061271/comment/16301930",
                    "id": "16301930",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "seibs commented on issue #1422: WIP ARROW-764: [C++] Improves performance of CopyBitmap and adds benchmarks\nURL: https://github.com/apache/arrow/pull/1422#issuecomment-353670256\n \n \n   Thanks for taking a look @xhochy.\r\n   \r\n   My latest push fixes the formatting issues and also adds a test+fix for a few corner cases my first upload didn't handle correctly.  \r\n   \r\n   **Benchmark with recent changes**\r\n   ```\r\n   Run on (4 X 2208 MHz CPU s)\r\n   12/22/17 15:14:31\r\n   Benchmark                                        Time           CPU Iterations\r\n   ------------------------------------------------------------------------------\r\n   BM_CopyBitmap/97.6563k/0/min_time:1.000          5 us          5 us     270310   17.9019GB/s\r\n   BM_CopyBitmap/976.563k/0/min_time:1.000         65 us         65 us      21854   14.3143GB/s\r\n   BM_CopyBitmap/97.6563k/4/min_time:1.000        153 us        152 us       8960   628.592MB/s\r\n   BM_CopyBitmap/976.563k/4/min_time:1.000       1534 us       1535 us        896   621.449MB/s\r\n   ```\r\n   \r\n   w.r.t. the comments above in `CMakeLists.txt`, I actually have a separate pull request open for them at #1406.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-22T20:32:33.875+0000",
                    "updated": "2017-12-22T20:32:33.875+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13061271/comment/16306877",
                    "id": "16306877",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on issue #1422: WIP ARROW-764: [C++] Improves performance of CopyBitmap and adds benchmarks\nURL: https://github.com/apache/arrow/pull/1422#issuecomment-354556783\n \n \n   @seibs Can resolve the two comments in the other pull request? I would then merge both :)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-30T17:08:16.256+0000",
                    "updated": "2017-12-30T17:08:16.256+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13061271/comment/16313955",
                    "id": "16313955",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1422: ARROW-764: [C++] Improves performance of CopyBitmap and adds benchmarks\nURL: https://github.com/apache/arrow/pull/1422#issuecomment-355673673\n \n \n   Rebased again to see if build passes...\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-05T21:44:58.781+0000",
                    "updated": "2018-01-05T21:44:58.781+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13061271/comment/16313960",
                    "id": "16313960",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on issue #1422: ARROW-764: [C++] Improves performance of CopyBitmap and adds benchmarks\nURL: https://github.com/apache/arrow/pull/1422#issuecomment-355674296\n \n \n   What are the general performance concerns we are addressing here? I am just trying to understand if there is something similar to be done on JAVA side for bitvector.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-05T21:47:52.313+0000",
                    "updated": "2018-01-05T21:47:52.313+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13061271/comment/16315435",
                    "id": "16315435",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1422: ARROW-764: [C++] Improves performance of CopyBitmap and adds benchmarks\nURL: https://github.com/apache/arrow/pull/1422#discussion_r160057731\n \n \n\n ##########\n File path: cpp/src/arrow/util/bit-util.cc\n ##########\n @@ -109,9 +109,37 @@ Status CopyBitmap(MemoryPool* pool, const uint8_t* data, int64_t offset, int64_t\n   std::shared_ptr<Buffer> buffer;\n   RETURN_NOT_OK(GetEmptyBitmap(pool, length, &buffer));\n   uint8_t* dest = buffer->mutable_data();\n-  for (int64_t i = 0; i < length; ++i) {\n-    BitUtil::SetBitTo(dest, i, BitUtil::GetBit(data, i + offset));\n+\n+  int64_t byte_offset = offset / 8;\n+  int64_t bit_offset = offset % 8;\n+  int64_t num_bytes = BitUtil::BytesForBits(length);\n+  int64_t bits_to_zero = num_bytes * 8 - length;\n+\n+  if (bit_offset > 0) {\n+    auto carry_mask = BitUtil::kBitmask[bit_offset] - 1U;\n+    auto carry_shift = 8U - bit_offset;\n+\n+    auto carry = 0U;\n+    if (BitUtil::BytesForBits(length + bit_offset) > num_bytes) {\n+      carry = (data[byte_offset + num_bytes] & carry_mask) << carry_shift;\n+    }\n+\n+    auto i = num_bytes - 1;\n+    while (i + 1 > 0) {\n+      auto cur_byte = data[byte_offset + i];\n \n Review comment:\n   We should write down explicit types for these autos\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-07T19:18:48.425+0000",
                    "updated": "2018-01-07T19:18:48.425+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13061271/comment/16315440",
                    "id": "16315440",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1422: ARROW-764: [C++] Improves performance of CopyBitmap and adds benchmarks\nURL: https://github.com/apache/arrow/pull/1422#issuecomment-355845940\n \n \n   @siddharthteotia there's a couple places in the codebase where we copy bits out of a bitmap, e.g. after slicing vectors https://github.com/apache/arrow/blob/2e3832f34a8933c1ef81331e6d1dde5190366852/cpp/src/arrow/ipc/writer.cc#L63. Depending on the slice offset (whether it's a multiple of 8) we have to either copy 1 bit at a time or do a memcpy\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-07T19:27:40.420+0000",
                    "updated": "2018-01-07T19:27:40.420+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13061271/comment/16317577",
                    "id": "16317577",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "seibs commented on a change in pull request #1422: ARROW-764: [C++] Improves performance of CopyBitmap and adds benchmarks\nURL: https://github.com/apache/arrow/pull/1422#discussion_r160308530\n \n \n\n ##########\n File path: cpp/src/arrow/util/bit-util.cc\n ##########\n @@ -109,9 +109,37 @@ Status CopyBitmap(MemoryPool* pool, const uint8_t* data, int64_t offset, int64_t\n   std::shared_ptr<Buffer> buffer;\n   RETURN_NOT_OK(GetEmptyBitmap(pool, length, &buffer));\n   uint8_t* dest = buffer->mutable_data();\n-  for (int64_t i = 0; i < length; ++i) {\n-    BitUtil::SetBitTo(dest, i, BitUtil::GetBit(data, i + offset));\n+\n+  int64_t byte_offset = offset / 8;\n+  int64_t bit_offset = offset % 8;\n+  int64_t num_bytes = BitUtil::BytesForBits(length);\n+  int64_t bits_to_zero = num_bytes * 8 - length;\n+\n+  if (bit_offset > 0) {\n+    auto carry_mask = BitUtil::kBitmask[bit_offset] - 1U;\n+    auto carry_shift = 8U - bit_offset;\n+\n+    auto carry = 0U;\n+    if (BitUtil::BytesForBits(length + bit_offset) > num_bytes) {\n+      carry = (data[byte_offset + num_bytes] & carry_mask) << carry_shift;\n+    }\n+\n+    auto i = num_bytes - 1;\n+    while (i + 1 > 0) {\n+      auto cur_byte = data[byte_offset + i];\n \n Review comment:\n   Replaced the autos with types.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-09T02:47:13.953+0000",
                    "updated": "2018-01-09T02:47:13.953+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13061271/comment/16321211",
                    "id": "16321211",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1422: ARROW-764: [C++] Improves performance of CopyBitmap and adds benchmarks\nURL: https://github.com/apache/arrow/pull/1422\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/util/CMakeLists.txt b/cpp/src/arrow/util/CMakeLists.txt\nindex a36dffb52..8b61a3acf 100644\n--- a/cpp/src/arrow/util/CMakeLists.txt\n+++ b/cpp/src/arrow/util/CMakeLists.txt\n@@ -63,10 +63,10 @@ if (ARROW_BUILD_BENCHMARKS)\n       Shlwapi.lib\n   )\n   else()\n-\t  target_link_libraries(arrow_benchmark_main\n+    target_link_libraries(arrow_benchmark_main\n       benchmark\n       pthread\n-\t  )\n+    )\n   endif()\n \n   # TODO(wesm): Some benchmarks include gtest.h\n@@ -80,4 +80,6 @@ ADD_ARROW_TEST(key-value-metadata-test)\n ADD_ARROW_TEST(rle-encoding-test)\n ADD_ARROW_TEST(stl-util-test)\n \n+ADD_ARROW_BENCHMARK(bit-util-benchmark)\n+\n add_subdirectory(variant)\ndiff --git a/cpp/src/arrow/util/bit-util-benchmark.cc b/cpp/src/arrow/util/bit-util-benchmark.cc\nnew file mode 100644\nindex 000000000..8969dd80b\n--- /dev/null\n+++ b/cpp/src/arrow/util/bit-util-benchmark.cc\n@@ -0,0 +1,58 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include <vector>\n+\n+#include \"arrow/buffer.h\"\n+#include \"arrow/builder.h\"\n+#include \"arrow/memory_pool.h\"\n+#include \"arrow/test-util.h\"\n+#include \"arrow/util/bit-util.h\"\n+\n+namespace arrow {\n+namespace BitUtil {\n+\n+static void BM_CopyBitmap(benchmark::State& state) {  // NOLINT non-const reference\n+  const int kBufferSize = state.range(0);\n+\n+  std::shared_ptr<Buffer> buffer;\n+  ASSERT_OK(AllocateBuffer(default_memory_pool(), kBufferSize, &buffer));\n+  memset(buffer->mutable_data(), 0, kBufferSize);\n+  test::random_bytes(kBufferSize, 0, buffer->mutable_data());\n+\n+  const int num_bits = kBufferSize * 8;\n+  const uint8_t* src = buffer->data();\n+\n+  std::shared_ptr<Buffer> copy;\n+  while (state.KeepRunning()) {\n+    ABORT_NOT_OK(CopyBitmap(default_memory_pool(), src, state.range(1), num_bits, &copy));\n+  }\n+  state.SetBytesProcessed(state.iterations() * kBufferSize * sizeof(int8_t));\n+}\n+\n+BENCHMARK(BM_CopyBitmap)\n+    ->Args({100000, 0})\n+    ->Args({1000000, 0})\n+    ->Args({100000, 4})\n+    ->Args({1000000, 4})\n+    ->MinTime(1.0)\n+    ->Unit(benchmark::kMicrosecond);\n+\n+}  // namespace BitUtil\n+}  // namespace arrow\ndiff --git a/cpp/src/arrow/util/bit-util-test.cc b/cpp/src/arrow/util/bit-util-test.cc\nindex 92bdcb5fc..4c64dea37 100644\n--- a/cpp/src/arrow/util/bit-util-test.cc\n+++ b/cpp/src/arrow/util/bit-util-test.cc\n@@ -165,19 +165,20 @@ TEST(BitUtilTests, TestCopyBitmap) {\n   memset(buffer->mutable_data(), 0, kBufferSize);\n   test::random_bytes(kBufferSize, 0, buffer->mutable_data());\n \n-  const int num_bits = kBufferSize * 8;\n-\n   const uint8_t* src = buffer->data();\n \n+  std::vector<int64_t> lengths = {kBufferSize * 8 - 4, kBufferSize * 8};\n   std::vector<int64_t> offsets = {0, 12, 16, 32, 37, 63, 64, 128};\n-  for (int64_t offset : offsets) {\n-    const int64_t copy_length = num_bits - offset;\n+  for (int64_t num_bits : lengths) {\n+    for (int64_t offset : offsets) {\n+      const int64_t copy_length = num_bits - offset;\n \n-    std::shared_ptr<Buffer> copy;\n-    ASSERT_OK(CopyBitmap(default_memory_pool(), src, offset, copy_length, &copy));\n+      std::shared_ptr<Buffer> copy;\n+      ASSERT_OK(CopyBitmap(default_memory_pool(), src, offset, copy_length, &copy));\n \n-    for (int64_t i = 0; i < copy_length; ++i) {\n-      ASSERT_EQ(BitUtil::GetBit(src, i + offset), BitUtil::GetBit(copy->data(), i));\n+      for (int64_t i = 0; i < copy_length; ++i) {\n+        ASSERT_EQ(BitUtil::GetBit(src, i + offset), BitUtil::GetBit(copy->data(), i));\n+      }\n     }\n   }\n }\ndiff --git a/cpp/src/arrow/util/bit-util.cc b/cpp/src/arrow/util/bit-util.cc\nindex 4dd91e99a..c77f0d008 100644\n--- a/cpp/src/arrow/util/bit-util.cc\n+++ b/cpp/src/arrow/util/bit-util.cc\n@@ -109,9 +109,37 @@ Status CopyBitmap(MemoryPool* pool, const uint8_t* data, int64_t offset, int64_t\n   std::shared_ptr<Buffer> buffer;\n   RETURN_NOT_OK(GetEmptyBitmap(pool, length, &buffer));\n   uint8_t* dest = buffer->mutable_data();\n-  for (int64_t i = 0; i < length; ++i) {\n-    BitUtil::SetBitTo(dest, i, BitUtil::GetBit(data, i + offset));\n+\n+  int64_t byte_offset = offset / 8;\n+  int64_t bit_offset = offset % 8;\n+  int64_t num_bytes = BitUtil::BytesForBits(length);\n+  int64_t bits_to_zero = num_bytes * 8 - length;\n+\n+  if (bit_offset > 0) {\n+    uint32_t carry_mask = BitUtil::kBitmask[bit_offset] - 1U;\n+    uint32_t carry_shift = 8U - static_cast<uint32_t>(bit_offset);\n+\n+    uint32_t carry = 0U;\n+    if (BitUtil::BytesForBits(length + bit_offset) > num_bytes) {\n+      carry = (data[byte_offset + num_bytes] & carry_mask) << carry_shift;\n+    }\n+\n+    int64_t i = num_bytes - 1;\n+    while (i + 1 > 0) {\n+      uint8_t cur_byte = data[byte_offset + i];\n+      dest[i] = static_cast<uint8_t>((cur_byte >> bit_offset) | carry);\n+      carry = (cur_byte & carry_mask) << carry_shift;\n+      --i;\n+    }\n+  } else {\n+    std::memcpy(dest, data + byte_offset, static_cast<size_t>(num_bytes));\n+  }\n+\n+  for (int64_t i = length; i < length + bits_to_zero; ++i) {\n+    // Both branches may copy extra bits - unsetting to match specification.\n+    BitUtil::SetBitTo(dest, i, false);\n   }\n+\n   *out = buffer;\n   return Status::OK();\n }\ndiff --git a/cpp/src/arrow/util/bit-util.h b/cpp/src/arrow/util/bit-util.h\nindex cab3c9ee7..86c17d168 100644\n--- a/cpp/src/arrow/util/bit-util.h\n+++ b/cpp/src/arrow/util/bit-util.h\n@@ -139,13 +139,10 @@ static inline void SetArrayBit(uint8_t* bits, int i, bool is_set) {\n }\n \n static inline void SetBitTo(uint8_t* bits, int64_t i, bool bit_is_set) {\n-  // TODO: speed up. See https://graphics.stanford.edu/~seander/bithacks.html\n+  // https://graphics.stanford.edu/~seander/bithacks.html\n   // \"Conditionally set or clear bits without branching\"\n-  if (bit_is_set) {\n-    SetBit(bits, i);\n-  } else {\n-    ClearBit(bits, i);\n-  }\n+  bits[i / 8] ^= static_cast<uint8_t>(-static_cast<uint8_t>(bit_is_set) ^ bits[i / 8]) &\n+                 kBitmask[i % 8];\n }\n \n // Returns the minimum number of bits needed to represent the value of 'x'\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-10T22:10:52.762+0000",
                    "updated": "2018-01-10T22:10:52.762+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13061271/comment/16321212",
                    "id": "16321212",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1422\n[https://github.com/apache/arrow/pull/1422]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-01-10T22:10:54.531+0000",
                    "updated": "2018-01-10T22:10:54.531+0000"
                }
            ],
            "maxResults": 12,
            "total": 12,
            "startAt": 0
        },
        "customfield_12311820": "0|i3d5of:",
        "customfield_12314139": null
    }
}