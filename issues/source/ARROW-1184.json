{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13084609",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13084609",
    "key": "ARROW-1184",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
            "name": "bryanc",
            "key": "bryanc",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
            },
            "displayName": "Bryan Cutler",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
            "name": "bryanc",
            "key": "bryanc",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
            },
            "displayName": "Bryan Cutler",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 27000,
            "total": 27000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 27000,
            "total": 27000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1184/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 48,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13084609/worklog/274754",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4843: ARROW-1184: [Java] Dictionary.equals is not working correctly\nURL: https://github.com/apache/arrow/pull/4843\n \n \n   Related to [ARROW-1184](https://issues.apache.org/jira/browse/ARROW-1184).\r\n   The Dictionary.equals method does not return True when the dictionaries are equal. This is because equals is not implemented for FieldVector and so that comparison defaults to comparing the two objects only and not the vector data.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-10T09:14:49.421+0000",
                    "updated": "2019-07-10T09:14:49.421+0000",
                    "started": "2019-07-10T09:14:49.420+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "274754",
                    "issueId": "13084609"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13084609/worklog/275415",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on pull request #4843: ARROW-1184: [Java] Dictionary.equals is not working correctly\nURL: https://github.com/apache/arrow/pull/4843#discussion_r302656206\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestDictionary.java\n ##########\n @@ -0,0 +1,192 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.arrow.vector.complex.StructVector;\n+import org.apache.arrow.vector.complex.UnionVector;\n+import org.apache.arrow.vector.complex.impl.NullableStructWriter;\n+import org.apache.arrow.vector.complex.impl.UnionListWriter;\n+import org.apache.arrow.vector.dictionary.Dictionary;\n+import org.apache.arrow.vector.holders.NullableIntHolder;\n+import org.apache.arrow.vector.holders.NullableUInt4Holder;\n+import org.apache.arrow.vector.types.Types;\n+import org.apache.arrow.vector.types.pojo.ArrowType;\n+import org.apache.arrow.vector.types.pojo.DictionaryEncoding;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class TestDictionary {\n+\n+  private BufferAllocator allocator;\n+\n+  @Before\n+  public void init() {\n+    allocator = new DirtyRootAllocator(Long.MAX_VALUE, (byte) 100);\n+  }\n+\n+  @After\n+  public void terminate() throws Exception {\n+    allocator.close();\n+  }\n+\n+  @Test\n+  public void testEquals() {\n+\n+    //test Int\n+    try (final IntVector vector1 = new IntVector(\"v1\", allocator);\n+         final IntVector vector2 = new IntVector(\"v2\", allocator)) {\n+\n+      Dictionary dict1 = new Dictionary(vector1, new DictionaryEncoding(1L, false, null));\n+      Dictionary dict2 = new Dictionary(vector2, new DictionaryEncoding(1L, false, null));\n+\n+      vector1.allocateNew(3);\n+      vector1.setValueCount(3);\n+      vector2.allocateNew(3);\n+      vector2.setValueCount(3);\n+\n+      vector1.setSafe(0, 1);\n+      vector1.setSafe(1, 2);\n+      vector1.setSafe(2, 3);\n+\n+      vector2.setSafe(0, 1);\n+      vector2.setSafe(1, 2);\n+      vector2.setSafe(2, 0);\n+\n+\n+      assertFalse(dict1.equals(dict2));\n+\n+      vector2.setSafe(2, 3);\n+      assertTrue(dict1.equals(dict2));\n+\n \n Review comment:\n   nit: remove extra newline\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-11T17:26:10.463+0000",
                    "updated": "2019-07-11T17:26:10.463+0000",
                    "started": "2019-07-11T17:26:10.462+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275415",
                    "issueId": "13084609"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13084609/worklog/275416",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on pull request #4843: ARROW-1184: [Java] Dictionary.equals is not working correctly\nURL: https://github.com/apache/arrow/pull/4843#discussion_r302656564\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestDictionary.java\n ##########\n @@ -0,0 +1,192 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.arrow.vector.complex.StructVector;\n+import org.apache.arrow.vector.complex.UnionVector;\n+import org.apache.arrow.vector.complex.impl.NullableStructWriter;\n+import org.apache.arrow.vector.complex.impl.UnionListWriter;\n+import org.apache.arrow.vector.dictionary.Dictionary;\n+import org.apache.arrow.vector.holders.NullableIntHolder;\n+import org.apache.arrow.vector.holders.NullableUInt4Holder;\n+import org.apache.arrow.vector.types.Types;\n+import org.apache.arrow.vector.types.pojo.ArrowType;\n+import org.apache.arrow.vector.types.pojo.DictionaryEncoding;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class TestDictionary {\n+\n+  private BufferAllocator allocator;\n+\n+  @Before\n+  public void init() {\n+    allocator = new DirtyRootAllocator(Long.MAX_VALUE, (byte) 100);\n+  }\n+\n+  @After\n+  public void terminate() throws Exception {\n+    allocator.close();\n+  }\n+\n+  @Test\n+  public void testEquals() {\n+\n+    //test Int\n+    try (final IntVector vector1 = new IntVector(\"v1\", allocator);\n+         final IntVector vector2 = new IntVector(\"v2\", allocator)) {\n+\n+      Dictionary dict1 = new Dictionary(vector1, new DictionaryEncoding(1L, false, null));\n+      Dictionary dict2 = new Dictionary(vector2, new DictionaryEncoding(1L, false, null));\n+\n+      vector1.allocateNew(3);\n+      vector1.setValueCount(3);\n+      vector2.allocateNew(3);\n+      vector2.setValueCount(3);\n+\n+      vector1.setSafe(0, 1);\n+      vector1.setSafe(1, 2);\n+      vector1.setSafe(2, 3);\n+\n+      vector2.setSafe(0, 1);\n+      vector2.setSafe(1, 2);\n+      vector2.setSafe(2, 0);\n+\n+\n+      assertFalse(dict1.equals(dict2));\n+\n+      vector2.setSafe(2, 3);\n+      assertTrue(dict1.equals(dict2));\n+\n+    }\n+\n+    //test List\n+    try (final ListVector vector1 = ListVector.empty(\"v1\", allocator);\n+        final ListVector vector2 = ListVector.empty(\"v2\", allocator);) {\n+\n+      Dictionary dict1 = new Dictionary(vector1, new DictionaryEncoding(1L, false, null));\n+      Dictionary dict2 = new Dictionary(vector2, new DictionaryEncoding(1L, false, null));\n+\n+      UnionListWriter writer1 = vector1.getWriter();\n+      writer1.allocate();\n+\n+      //set some values\n+      writeListVector(writer1, new int[]{1, 2});\n+      writeListVector(writer1, new int[]{3, 4});\n+      writeListVector(writer1, new int[]{5, 6});\n+      writer1.setValueCount(3);\n+\n+      UnionListWriter writer2 = vector2.getWriter();\n+      writer2.allocate();\n+\n+      //set some values\n+      writeListVector(writer2, new int[]{1, 2});\n+      writeListVector(writer2, new int[]{3, 4});\n+      writeListVector(writer2, new int[]{5, 6});\n+      writer2.setValueCount(3);\n+\n+      assertTrue(dict1.equals(dict2));\n+\n+    }\n+\n+    //test Struct\n+    try (final StructVector vector1 = StructVector.empty(\"v1\", allocator);\n+         final StructVector vector2 = StructVector.empty(\"v2\", allocator);) {\n+      vector1.addOrGet(\"f0\", FieldType.nullable(new ArrowType.Int(32, true)), IntVector.class);\n+      vector1.addOrGet(\"f1\", FieldType.nullable(new ArrowType.Int(64, true)), BigIntVector.class);\n+      vector2.addOrGet(\"f0\", FieldType.nullable(new ArrowType.Int(32, true)), IntVector.class);\n+      vector2.addOrGet(\"f1\", FieldType.nullable(new ArrowType.Int(64, true)), BigIntVector.class);\n+\n+      Dictionary dict1 = new Dictionary(vector1, new DictionaryEncoding(1L, false, null));\n+      Dictionary dict2 = new Dictionary(vector2, new DictionaryEncoding(1L, false, null));\n+\n+      NullableStructWriter writer1 = vector1.getWriter();\n+      writer1.allocate();\n+\n+      writeStructVector(writer1, 1, 10L);\n+      writeStructVector(writer1, 2, 20L);\n+      writer1.setValueCount(2);\n+\n+      NullableStructWriter writer2 = vector2.getWriter();\n+      writer2.allocate();\n+\n+      writeStructVector(writer2, 1, 10L);\n+      writeStructVector(writer2, 2, 20L);\n+      writer2.setValueCount(2);\n+\n+      assertTrue(dict1.equals(dict2));\n+\n+    }\n+\n+    //test Union\n+    try (final UnionVector vector1 = new UnionVector(\"v1\", allocator, null);\n+         final UnionVector vector2 = new UnionVector(\"v1\", allocator, null);) {\n+\n+      final NullableUInt4Holder uInt4Holder = new NullableUInt4Holder();\n+      uInt4Holder.value = 10;\n+      uInt4Holder.isSet = 1;\n+\n+      final NullableIntHolder intHolder = new NullableIntHolder();\n+      uInt4Holder.value = 20;\n+      uInt4Holder.isSet = 1;\n+\n+      vector1.setType(0, Types.MinorType.UINT4);\n+      vector1.setSafe(0, uInt4Holder);\n+\n+      vector1.setType(2, Types.MinorType.INT);\n+      vector1.setSafe(2, intHolder);\n+      vector1.setValueCount(3);\n+\n+      vector2.setType(0, Types.MinorType.UINT4);\n+      vector2.setSafe(0, uInt4Holder);\n+\n+      vector2.setType(2, Types.MinorType.INT);\n+      vector2.setSafe(2, intHolder);\n+      vector2.setValueCount(3);\n+\n+      Dictionary dict1 = new Dictionary(vector1, new DictionaryEncoding(1L, false, null));\n+      Dictionary dict2 = new Dictionary(vector2, new DictionaryEncoding(1L, false, null));\n+\n+      assertTrue(dict1.equals(dict2));\n+\n+    }\n+\n \n Review comment:\n   nit: remove extra newline\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-11T17:26:10.490+0000",
                    "updated": "2019-07-11T17:26:10.490+0000",
                    "started": "2019-07-11T17:26:10.489+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275416",
                    "issueId": "13084609"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13084609/worklog/275417",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on pull request #4843: ARROW-1184: [Java] Dictionary.equals is not working correctly\nURL: https://github.com/apache/arrow/pull/4843#discussion_r302657042\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestDictionary.java\n ##########\n @@ -0,0 +1,192 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.arrow.vector.complex.StructVector;\n+import org.apache.arrow.vector.complex.UnionVector;\n+import org.apache.arrow.vector.complex.impl.NullableStructWriter;\n+import org.apache.arrow.vector.complex.impl.UnionListWriter;\n+import org.apache.arrow.vector.dictionary.Dictionary;\n+import org.apache.arrow.vector.holders.NullableIntHolder;\n+import org.apache.arrow.vector.holders.NullableUInt4Holder;\n+import org.apache.arrow.vector.types.Types;\n+import org.apache.arrow.vector.types.pojo.ArrowType;\n+import org.apache.arrow.vector.types.pojo.DictionaryEncoding;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class TestDictionary {\n \n Review comment:\n   There is already a `TestDictionaryVector` class, please move the test there\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-11T17:26:10.534+0000",
                    "updated": "2019-07-11T17:26:10.534+0000",
                    "started": "2019-07-11T17:26:10.532+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275417",
                    "issueId": "13084609"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13084609/worklog/275418",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on pull request #4843: ARROW-1184: [Java] Dictionary.equals is not working correctly\nURL: https://github.com/apache/arrow/pull/4843#discussion_r302657473\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestDictionary.java\n ##########\n @@ -0,0 +1,192 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.arrow.vector.complex.StructVector;\n+import org.apache.arrow.vector.complex.UnionVector;\n+import org.apache.arrow.vector.complex.impl.NullableStructWriter;\n+import org.apache.arrow.vector.complex.impl.UnionListWriter;\n+import org.apache.arrow.vector.dictionary.Dictionary;\n+import org.apache.arrow.vector.holders.NullableIntHolder;\n+import org.apache.arrow.vector.holders.NullableUInt4Holder;\n+import org.apache.arrow.vector.types.Types;\n+import org.apache.arrow.vector.types.pojo.ArrowType;\n+import org.apache.arrow.vector.types.pojo.DictionaryEncoding;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class TestDictionary {\n+\n+  private BufferAllocator allocator;\n+\n+  @Before\n+  public void init() {\n+    allocator = new DirtyRootAllocator(Long.MAX_VALUE, (byte) 100);\n+  }\n+\n+  @After\n+  public void terminate() throws Exception {\n+    allocator.close();\n+  }\n+\n+  @Test\n+  public void testEquals() {\n+\n+    //test Int\n+    try (final IntVector vector1 = new IntVector(\"v1\", allocator);\n+         final IntVector vector2 = new IntVector(\"v2\", allocator)) {\n+\n+      Dictionary dict1 = new Dictionary(vector1, new DictionaryEncoding(1L, false, null));\n+      Dictionary dict2 = new Dictionary(vector2, new DictionaryEncoding(1L, false, null));\n+\n+      vector1.allocateNew(3);\n+      vector1.setValueCount(3);\n+      vector2.allocateNew(3);\n+      vector2.setValueCount(3);\n+\n+      vector1.setSafe(0, 1);\n+      vector1.setSafe(1, 2);\n+      vector1.setSafe(2, 3);\n+\n+      vector2.setSafe(0, 1);\n+      vector2.setSafe(1, 2);\n+      vector2.setSafe(2, 0);\n+\n+\n+      assertFalse(dict1.equals(dict2));\n+\n+      vector2.setSafe(2, 3);\n+      assertTrue(dict1.equals(dict2));\n+\n+    }\n+\n+    //test List\n+    try (final ListVector vector1 = ListVector.empty(\"v1\", allocator);\n+        final ListVector vector2 = ListVector.empty(\"v2\", allocator);) {\n+\n+      Dictionary dict1 = new Dictionary(vector1, new DictionaryEncoding(1L, false, null));\n+      Dictionary dict2 = new Dictionary(vector2, new DictionaryEncoding(1L, false, null));\n+\n+      UnionListWriter writer1 = vector1.getWriter();\n+      writer1.allocate();\n+\n+      //set some values\n+      writeListVector(writer1, new int[]{1, 2});\n+      writeListVector(writer1, new int[]{3, 4});\n+      writeListVector(writer1, new int[]{5, 6});\n+      writer1.setValueCount(3);\n+\n+      UnionListWriter writer2 = vector2.getWriter();\n+      writer2.allocate();\n+\n+      //set some values\n+      writeListVector(writer2, new int[]{1, 2});\n+      writeListVector(writer2, new int[]{3, 4});\n+      writeListVector(writer2, new int[]{5, 6});\n+      writer2.setValueCount(3);\n+\n+      assertTrue(dict1.equals(dict2));\n+\n \n Review comment:\n   nit: remove extra newline\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-11T17:26:10.550+0000",
                    "updated": "2019-07-11T17:26:10.550+0000",
                    "started": "2019-07-11T17:26:10.550+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275418",
                    "issueId": "13084609"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13084609/worklog/275419",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on pull request #4843: ARROW-1184: [Java] Dictionary.equals is not working correctly\nURL: https://github.com/apache/arrow/pull/4843#discussion_r302656475\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestDictionary.java\n ##########\n @@ -0,0 +1,192 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.arrow.vector.complex.StructVector;\n+import org.apache.arrow.vector.complex.UnionVector;\n+import org.apache.arrow.vector.complex.impl.NullableStructWriter;\n+import org.apache.arrow.vector.complex.impl.UnionListWriter;\n+import org.apache.arrow.vector.dictionary.Dictionary;\n+import org.apache.arrow.vector.holders.NullableIntHolder;\n+import org.apache.arrow.vector.holders.NullableUInt4Holder;\n+import org.apache.arrow.vector.types.Types;\n+import org.apache.arrow.vector.types.pojo.ArrowType;\n+import org.apache.arrow.vector.types.pojo.DictionaryEncoding;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class TestDictionary {\n+\n+  private BufferAllocator allocator;\n+\n+  @Before\n+  public void init() {\n+    allocator = new DirtyRootAllocator(Long.MAX_VALUE, (byte) 100);\n+  }\n+\n+  @After\n+  public void terminate() throws Exception {\n+    allocator.close();\n+  }\n+\n+  @Test\n+  public void testEquals() {\n+\n+    //test Int\n+    try (final IntVector vector1 = new IntVector(\"v1\", allocator);\n+         final IntVector vector2 = new IntVector(\"v2\", allocator)) {\n+\n+      Dictionary dict1 = new Dictionary(vector1, new DictionaryEncoding(1L, false, null));\n+      Dictionary dict2 = new Dictionary(vector2, new DictionaryEncoding(1L, false, null));\n+\n+      vector1.allocateNew(3);\n+      vector1.setValueCount(3);\n+      vector2.allocateNew(3);\n+      vector2.setValueCount(3);\n+\n+      vector1.setSafe(0, 1);\n+      vector1.setSafe(1, 2);\n+      vector1.setSafe(2, 3);\n+\n+      vector2.setSafe(0, 1);\n+      vector2.setSafe(1, 2);\n+      vector2.setSafe(2, 0);\n+\n+\n+      assertFalse(dict1.equals(dict2));\n+\n+      vector2.setSafe(2, 3);\n+      assertTrue(dict1.equals(dict2));\n+\n+    }\n+\n+    //test List\n+    try (final ListVector vector1 = ListVector.empty(\"v1\", allocator);\n+        final ListVector vector2 = ListVector.empty(\"v2\", allocator);) {\n+\n+      Dictionary dict1 = new Dictionary(vector1, new DictionaryEncoding(1L, false, null));\n+      Dictionary dict2 = new Dictionary(vector2, new DictionaryEncoding(1L, false, null));\n+\n+      UnionListWriter writer1 = vector1.getWriter();\n+      writer1.allocate();\n+\n+      //set some values\n+      writeListVector(writer1, new int[]{1, 2});\n+      writeListVector(writer1, new int[]{3, 4});\n+      writeListVector(writer1, new int[]{5, 6});\n+      writer1.setValueCount(3);\n+\n+      UnionListWriter writer2 = vector2.getWriter();\n+      writer2.allocate();\n+\n+      //set some values\n+      writeListVector(writer2, new int[]{1, 2});\n+      writeListVector(writer2, new int[]{3, 4});\n+      writeListVector(writer2, new int[]{5, 6});\n+      writer2.setValueCount(3);\n+\n+      assertTrue(dict1.equals(dict2));\n+\n+    }\n+\n+    //test Struct\n+    try (final StructVector vector1 = StructVector.empty(\"v1\", allocator);\n+         final StructVector vector2 = StructVector.empty(\"v2\", allocator);) {\n+      vector1.addOrGet(\"f0\", FieldType.nullable(new ArrowType.Int(32, true)), IntVector.class);\n+      vector1.addOrGet(\"f1\", FieldType.nullable(new ArrowType.Int(64, true)), BigIntVector.class);\n+      vector2.addOrGet(\"f0\", FieldType.nullable(new ArrowType.Int(32, true)), IntVector.class);\n+      vector2.addOrGet(\"f1\", FieldType.nullable(new ArrowType.Int(64, true)), BigIntVector.class);\n+\n+      Dictionary dict1 = new Dictionary(vector1, new DictionaryEncoding(1L, false, null));\n+      Dictionary dict2 = new Dictionary(vector2, new DictionaryEncoding(1L, false, null));\n+\n+      NullableStructWriter writer1 = vector1.getWriter();\n+      writer1.allocate();\n+\n+      writeStructVector(writer1, 1, 10L);\n+      writeStructVector(writer1, 2, 20L);\n+      writer1.setValueCount(2);\n+\n+      NullableStructWriter writer2 = vector2.getWriter();\n+      writer2.allocate();\n+\n+      writeStructVector(writer2, 1, 10L);\n+      writeStructVector(writer2, 2, 20L);\n+      writer2.setValueCount(2);\n+\n+      assertTrue(dict1.equals(dict2));\n+\n \n Review comment:\n   nit: remove extra newline\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-11T17:26:10.553+0000",
                    "updated": "2019-07-11T17:26:10.553+0000",
                    "started": "2019-07-11T17:26:10.552+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275419",
                    "issueId": "13084609"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13084609/worklog/275420",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on pull request #4843: ARROW-1184: [Java] Dictionary.equals is not working correctly\nURL: https://github.com/apache/arrow/pull/4843#discussion_r302656160\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestDictionary.java\n ##########\n @@ -0,0 +1,192 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.arrow.vector.complex.StructVector;\n+import org.apache.arrow.vector.complex.UnionVector;\n+import org.apache.arrow.vector.complex.impl.NullableStructWriter;\n+import org.apache.arrow.vector.complex.impl.UnionListWriter;\n+import org.apache.arrow.vector.dictionary.Dictionary;\n+import org.apache.arrow.vector.holders.NullableIntHolder;\n+import org.apache.arrow.vector.holders.NullableUInt4Holder;\n+import org.apache.arrow.vector.types.Types;\n+import org.apache.arrow.vector.types.pojo.ArrowType;\n+import org.apache.arrow.vector.types.pojo.DictionaryEncoding;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class TestDictionary {\n+\n+  private BufferAllocator allocator;\n+\n+  @Before\n+  public void init() {\n+    allocator = new DirtyRootAllocator(Long.MAX_VALUE, (byte) 100);\n+  }\n+\n+  @After\n+  public void terminate() throws Exception {\n+    allocator.close();\n+  }\n+\n+  @Test\n+  public void testEquals() {\n+\n+    //test Int\n+    try (final IntVector vector1 = new IntVector(\"v1\", allocator);\n+         final IntVector vector2 = new IntVector(\"v2\", allocator)) {\n+\n+      Dictionary dict1 = new Dictionary(vector1, new DictionaryEncoding(1L, false, null));\n+      Dictionary dict2 = new Dictionary(vector2, new DictionaryEncoding(1L, false, null));\n+\n+      vector1.allocateNew(3);\n+      vector1.setValueCount(3);\n+      vector2.allocateNew(3);\n+      vector2.setValueCount(3);\n+\n+      vector1.setSafe(0, 1);\n+      vector1.setSafe(1, 2);\n+      vector1.setSafe(2, 3);\n+\n+      vector2.setSafe(0, 1);\n+      vector2.setSafe(1, 2);\n+      vector2.setSafe(2, 0);\n+\n \n Review comment:\n   nit: remove extra newline\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-11T17:26:13.201+0000",
                    "updated": "2019-07-11T17:26:13.201+0000",
                    "started": "2019-07-11T17:26:13.200+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275420",
                    "issueId": "13084609"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13084609/worklog/275422",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on pull request #4843: ARROW-1184: [Java] Dictionary.equals is not working correctly\nURL: https://github.com/apache/arrow/pull/4843#discussion_r302659035\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestDictionary.java\n ##########\n @@ -0,0 +1,192 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.arrow.vector.complex.StructVector;\n+import org.apache.arrow.vector.complex.UnionVector;\n+import org.apache.arrow.vector.complex.impl.NullableStructWriter;\n+import org.apache.arrow.vector.complex.impl.UnionListWriter;\n+import org.apache.arrow.vector.dictionary.Dictionary;\n+import org.apache.arrow.vector.holders.NullableIntHolder;\n+import org.apache.arrow.vector.holders.NullableUInt4Holder;\n+import org.apache.arrow.vector.types.Types;\n+import org.apache.arrow.vector.types.pojo.ArrowType;\n+import org.apache.arrow.vector.types.pojo.DictionaryEncoding;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class TestDictionary {\n+\n+  private BufferAllocator allocator;\n+\n+  @Before\n+  public void init() {\n+    allocator = new DirtyRootAllocator(Long.MAX_VALUE, (byte) 100);\n+  }\n+\n+  @After\n+  public void terminate() throws Exception {\n+    allocator.close();\n+  }\n+\n+  @Test\n+  public void testEquals() {\n+\n+    //test Int\n+    try (final IntVector vector1 = new IntVector(\"v1\", allocator);\n+         final IntVector vector2 = new IntVector(\"v2\", allocator)) {\n+\n+      Dictionary dict1 = new Dictionary(vector1, new DictionaryEncoding(1L, false, null));\n+      Dictionary dict2 = new Dictionary(vector2, new DictionaryEncoding(1L, false, null));\n+\n+      vector1.allocateNew(3);\n+      vector1.setValueCount(3);\n+      vector2.allocateNew(3);\n+      vector2.setValueCount(3);\n+\n+      vector1.setSafe(0, 1);\n+      vector1.setSafe(1, 2);\n+      vector1.setSafe(2, 3);\n+\n+      vector2.setSafe(0, 1);\n+      vector2.setSafe(1, 2);\n+      vector2.setSafe(2, 0);\n+\n+\n+      assertFalse(dict1.equals(dict2));\n+\n+      vector2.setSafe(2, 3);\n+      assertTrue(dict1.equals(dict2));\n+\n+    }\n+\n+    //test List\n \n Review comment:\n   Can you separate out each equals test into their own test?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-11T17:27:14.063+0000",
                    "updated": "2019-07-11T17:27:14.063+0000",
                    "started": "2019-07-11T17:27:14.062+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275422",
                    "issueId": "13084609"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13084609/worklog/275428",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on pull request #4843: ARROW-1184: [Java] Dictionary.equals is not working correctly\nURL: https://github.com/apache/arrow/pull/4843#discussion_r302656523\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestDictionary.java\n ##########\n @@ -0,0 +1,192 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.arrow.vector.complex.StructVector;\n+import org.apache.arrow.vector.complex.UnionVector;\n+import org.apache.arrow.vector.complex.impl.NullableStructWriter;\n+import org.apache.arrow.vector.complex.impl.UnionListWriter;\n+import org.apache.arrow.vector.dictionary.Dictionary;\n+import org.apache.arrow.vector.holders.NullableIntHolder;\n+import org.apache.arrow.vector.holders.NullableUInt4Holder;\n+import org.apache.arrow.vector.types.Types;\n+import org.apache.arrow.vector.types.pojo.ArrowType;\n+import org.apache.arrow.vector.types.pojo.DictionaryEncoding;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class TestDictionary {\n+\n+  private BufferAllocator allocator;\n+\n+  @Before\n+  public void init() {\n+    allocator = new DirtyRootAllocator(Long.MAX_VALUE, (byte) 100);\n+  }\n+\n+  @After\n+  public void terminate() throws Exception {\n+    allocator.close();\n+  }\n+\n+  @Test\n+  public void testEquals() {\n+\n+    //test Int\n+    try (final IntVector vector1 = new IntVector(\"v1\", allocator);\n+         final IntVector vector2 = new IntVector(\"v2\", allocator)) {\n+\n+      Dictionary dict1 = new Dictionary(vector1, new DictionaryEncoding(1L, false, null));\n+      Dictionary dict2 = new Dictionary(vector2, new DictionaryEncoding(1L, false, null));\n+\n+      vector1.allocateNew(3);\n+      vector1.setValueCount(3);\n+      vector2.allocateNew(3);\n+      vector2.setValueCount(3);\n+\n+      vector1.setSafe(0, 1);\n+      vector1.setSafe(1, 2);\n+      vector1.setSafe(2, 3);\n+\n+      vector2.setSafe(0, 1);\n+      vector2.setSafe(1, 2);\n+      vector2.setSafe(2, 0);\n+\n+\n+      assertFalse(dict1.equals(dict2));\n+\n+      vector2.setSafe(2, 3);\n+      assertTrue(dict1.equals(dict2));\n+\n+    }\n+\n+    //test List\n+    try (final ListVector vector1 = ListVector.empty(\"v1\", allocator);\n+        final ListVector vector2 = ListVector.empty(\"v2\", allocator);) {\n+\n+      Dictionary dict1 = new Dictionary(vector1, new DictionaryEncoding(1L, false, null));\n+      Dictionary dict2 = new Dictionary(vector2, new DictionaryEncoding(1L, false, null));\n+\n+      UnionListWriter writer1 = vector1.getWriter();\n+      writer1.allocate();\n+\n+      //set some values\n+      writeListVector(writer1, new int[]{1, 2});\n+      writeListVector(writer1, new int[]{3, 4});\n+      writeListVector(writer1, new int[]{5, 6});\n+      writer1.setValueCount(3);\n+\n+      UnionListWriter writer2 = vector2.getWriter();\n+      writer2.allocate();\n+\n+      //set some values\n+      writeListVector(writer2, new int[]{1, 2});\n+      writeListVector(writer2, new int[]{3, 4});\n+      writeListVector(writer2, new int[]{5, 6});\n+      writer2.setValueCount(3);\n+\n+      assertTrue(dict1.equals(dict2));\n+\n+    }\n+\n+    //test Struct\n+    try (final StructVector vector1 = StructVector.empty(\"v1\", allocator);\n+         final StructVector vector2 = StructVector.empty(\"v2\", allocator);) {\n+      vector1.addOrGet(\"f0\", FieldType.nullable(new ArrowType.Int(32, true)), IntVector.class);\n+      vector1.addOrGet(\"f1\", FieldType.nullable(new ArrowType.Int(64, true)), BigIntVector.class);\n+      vector2.addOrGet(\"f0\", FieldType.nullable(new ArrowType.Int(32, true)), IntVector.class);\n+      vector2.addOrGet(\"f1\", FieldType.nullable(new ArrowType.Int(64, true)), BigIntVector.class);\n+\n+      Dictionary dict1 = new Dictionary(vector1, new DictionaryEncoding(1L, false, null));\n+      Dictionary dict2 = new Dictionary(vector2, new DictionaryEncoding(1L, false, null));\n+\n+      NullableStructWriter writer1 = vector1.getWriter();\n+      writer1.allocate();\n+\n+      writeStructVector(writer1, 1, 10L);\n+      writeStructVector(writer1, 2, 20L);\n+      writer1.setValueCount(2);\n+\n+      NullableStructWriter writer2 = vector2.getWriter();\n+      writer2.allocate();\n+\n+      writeStructVector(writer2, 1, 10L);\n+      writeStructVector(writer2, 2, 20L);\n+      writer2.setValueCount(2);\n+\n+      assertTrue(dict1.equals(dict2));\n+\n+    }\n+\n+    //test Union\n+    try (final UnionVector vector1 = new UnionVector(\"v1\", allocator, null);\n+         final UnionVector vector2 = new UnionVector(\"v1\", allocator, null);) {\n+\n+      final NullableUInt4Holder uInt4Holder = new NullableUInt4Holder();\n+      uInt4Holder.value = 10;\n+      uInt4Holder.isSet = 1;\n+\n+      final NullableIntHolder intHolder = new NullableIntHolder();\n+      uInt4Holder.value = 20;\n+      uInt4Holder.isSet = 1;\n+\n+      vector1.setType(0, Types.MinorType.UINT4);\n+      vector1.setSafe(0, uInt4Holder);\n+\n+      vector1.setType(2, Types.MinorType.INT);\n+      vector1.setSafe(2, intHolder);\n+      vector1.setValueCount(3);\n+\n+      vector2.setType(0, Types.MinorType.UINT4);\n+      vector2.setSafe(0, uInt4Holder);\n+\n+      vector2.setType(2, Types.MinorType.INT);\n+      vector2.setSafe(2, intHolder);\n+      vector2.setValueCount(3);\n+\n+      Dictionary dict1 = new Dictionary(vector1, new DictionaryEncoding(1L, false, null));\n+      Dictionary dict2 = new Dictionary(vector2, new DictionaryEncoding(1L, false, null));\n+\n+      assertTrue(dict1.equals(dict2));\n+\n \n Review comment:\n   nit: remove extra newline\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-11T17:28:17.341+0000",
                    "updated": "2019-07-11T17:28:17.341+0000",
                    "started": "2019-07-11T17:28:17.340+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275428",
                    "issueId": "13084609"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13084609/worklog/275623",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on issue #4843: ARROW-1184: [Java] Dictionary.equals is not working correctly\nURL: https://github.com/apache/arrow/pull/4843#issuecomment-510718216\n \n \n   > Thanks for doing this! Can you add a test with some encoded strings also?\r\n   \r\n   Thanks, Encoded strings equals are not supported yet and I remarked it as TODO and will do it after https://github.com/apache/arrow/pull/4792 merged, that PR introduces a ByteArrayBuffer for byte[] compare. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T02:16:30.527+0000",
                    "updated": "2019-07-12T02:16:30.527+0000",
                    "started": "2019-07-12T02:16:30.526+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275623",
                    "issueId": "13084609"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13084609/worklog/275624",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on issue #4843: ARROW-1184: [Java] Dictionary.equals is not working correctly\nURL: https://github.com/apache/arrow/pull/4843#issuecomment-510718351\n \n \n   @BryanCutler Thanks a lot for your feedback, I updated this PR, would you mind taking a look again? thanks!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-12T02:17:22.822+0000",
                    "updated": "2019-07-12T02:17:22.822+0000",
                    "started": "2019-07-12T02:17:22.821+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "275624",
                    "issueId": "13084609"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13084609/worklog/276261",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on issue #4843: ARROW-1184: [Java] Dictionary.equals is not working correctly\nURL: https://github.com/apache/arrow/pull/4843#issuecomment-511095969\n \n \n   @emkornfield would you mind take a look at this one? thanks :)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-13T06:57:35.958+0000",
                    "updated": "2019-07-13T06:57:35.958+0000",
                    "started": "2019-07-13T06:57:35.958+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276261",
                    "issueId": "13084609"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13084609/worklog/276941",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on pull request #4843: ARROW-1184: [Java] Dictionary.equals is not working correctly\nURL: https://github.com/apache/arrow/pull/4843#discussion_r303594996\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/dictionary/Dictionary.java\n ##########\n @@ -63,11 +64,40 @@ public boolean equals(Object o) {\n       return false;\n     }\n     Dictionary that = (Dictionary) o;\n-    return Objects.equals(encoding, that.encoding) && Objects.equals(dictionary, that.dictionary);\n+    return Objects.equals(encoding, that.encoding) && equals(dictionary, that.dictionary);\n   }\n \n   @Override\n   public int hashCode() {\n     return Objects.hash(encoding, dictionary);\n   }\n+\n+  private boolean equals(FieldVector vector1, FieldVector vector2) {\n \n Review comment:\n   This is mostly implemented in vector.util.Validator, which is used in Integration tests. It should probably be refactored, but it is ok to just call the functions for now, e.g. `compareFieldVectors`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-15T19:35:15.668+0000",
                    "updated": "2019-07-15T19:35:15.668+0000",
                    "started": "2019-07-15T19:35:15.667+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "276941",
                    "issueId": "13084609"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13084609/worklog/277253",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on issue #4843: ARROW-1184: [Java] Dictionary.equals is not working correctly\nURL: https://github.com/apache/arrow/pull/4843#issuecomment-511686742\n \n \n   @BryanCutler Thanks a lot for your comments.\r\n   Agreed that need implement equals for vector which I am doing in another one https://github.com/apache/arrow/pull/4846.\r\n   This one as a bandaid, I refactor Validator logic (make it return boolean value instead of throwing Exception) and call it in Dictionary#equals. And since https://github.com/apache/arrow/pull/4792 has been merged, make equals support for binary type and also add string and binary UT.\r\n   Would you mind taking a look again if we could get this merged? thanks a lot!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-16T06:39:50.074+0000",
                    "updated": "2019-07-16T06:39:50.074+0000",
                    "started": "2019-07-16T06:39:50.073+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "277253",
                    "issueId": "13084609"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13084609/worklog/277678",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on pull request #4843: ARROW-1184: [Java] Dictionary.equals is not working correctly\nURL: https://github.com/apache/arrow/pull/4843#discussion_r304066930\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/dictionary/Dictionary.java\n ##########\n @@ -63,7 +64,7 @@ public boolean equals(Object o) {\n       return false;\n     }\n     Dictionary that = (Dictionary) o;\n-    return Objects.equals(encoding, that.encoding) && Objects.equals(dictionary, that.dictionary);\n+    return Objects.equals(encoding, that.encoding) && Validator.compareFieldVectors(dictionary, that.dictionary);\n \n Review comment:\n   It would be better to compare encodings with the Validator also, e.g. a function `Validator.compareDictionaryEncodings`. Isn't `Object.equals` incorrect here too?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-16T18:53:57.387+0000",
                    "updated": "2019-07-16T18:53:57.387+0000",
                    "started": "2019-07-16T18:53:57.387+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "277678",
                    "issueId": "13084609"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13084609/worklog/277679",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on pull request #4843: ARROW-1184: [Java] Dictionary.equals is not working correctly\nURL: https://github.com/apache/arrow/pull/4843#discussion_r304064640\n \n \n\n ##########\n File path: java/tools/src/test/java/org/apache/arrow/tools/TestIntegration.java\n ##########\n @@ -274,8 +274,7 @@ public void testInvalid() throws Exception {\n       integration.run(args3);\n       fail(\"should have failed\");\n     } catch (IllegalArgumentException e) {\n-      assertTrue(e.getMessage(), e.getMessage().contains(\"Different values in column\"));\n-      assertTrue(e.getMessage(), e.getMessage().contains(\"999\"));\n+      assertTrue(e.getMessage(), e.getMessage().contains(\"Different vectorSchemaRoots\"));\n \n Review comment:\n   Can you explain this change? I don't the the exception message should be changing\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-16T18:53:57.400+0000",
                    "updated": "2019-07-16T18:53:57.400+0000",
                    "started": "2019-07-16T18:53:57.399+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "277679",
                    "issueId": "13084609"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13084609/worklog/277981",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4843: ARROW-1184: [Java] Dictionary.equals is not working correctly\nURL: https://github.com/apache/arrow/pull/4843#discussion_r304233096\n \n \n\n ##########\n File path: java/tools/src/test/java/org/apache/arrow/tools/TestIntegration.java\n ##########\n @@ -274,8 +274,7 @@ public void testInvalid() throws Exception {\n       integration.run(args3);\n       fail(\"should have failed\");\n     } catch (IllegalArgumentException e) {\n-      assertTrue(e.getMessage(), e.getMessage().contains(\"Different values in column\"));\n-      assertTrue(e.getMessage(), e.getMessage().contains(\"999\"));\n+      assertTrue(e.getMessage(), e.getMessage().contains(\"Different vectorSchemaRoots\"));\n \n Review comment:\n   Before this change, Validator could throw Exception with different message, since we make it return boolean value, log the explicit message instead of throwing it.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-17T06:11:43.584+0000",
                    "updated": "2019-07-17T06:11:43.584+0000",
                    "started": "2019-07-17T06:11:43.584+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "277981",
                    "issueId": "13084609"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13084609/worklog/277982",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4843: ARROW-1184: [Java] Dictionary.equals is not working correctly\nURL: https://github.com/apache/arrow/pull/4843#discussion_r304233369\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/dictionary/Dictionary.java\n ##########\n @@ -63,7 +64,7 @@ public boolean equals(Object o) {\n       return false;\n     }\n     Dictionary that = (Dictionary) o;\n-    return Objects.equals(encoding, that.encoding) && Objects.equals(dictionary, that.dictionary);\n+    return Objects.equals(encoding, that.encoding) && Validator.compareFieldVectors(dictionary, that.dictionary);\n \n Review comment:\n   I think Object.equals works fine with DictionaryEncoding since it implemented hashCode & equals already.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-17T06:12:52.232+0000",
                    "updated": "2019-07-17T06:12:52.232+0000",
                    "started": "2019-07-17T06:12:52.232+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "277982",
                    "issueId": "13084609"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13084609/worklog/277983",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on issue #4843: ARROW-1184: [Java] Dictionary.equals is not working correctly\nURL: https://github.com/apache/arrow/pull/4843#issuecomment-512117838\n \n \n   > It looks good in general, but I think you should also be doing the same thing for DictionaryEncoding equals. Also, the integration test failure looks relevant, can you check what went wrong?\r\n   \r\n   Thanks a lot for your comments, the relevant test failure is fixed now.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-17T06:13:39.813+0000",
                    "updated": "2019-07-17T06:13:39.813+0000",
                    "started": "2019-07-17T06:13:39.813+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "277983",
                    "issueId": "13084609"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13084609/worklog/277994",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4843: ARROW-1184: [Java] Dictionary.equals is not working correctly\nURL: https://github.com/apache/arrow/pull/4843\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-17T06:53:00.309+0000",
                    "updated": "2019-07-17T06:53:00.309+0000",
                    "started": "2019-07-17T06:53:00.308+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "277994",
                    "issueId": "13084609"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 27000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6ac9d959[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7128ca11[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@34ed76ff[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3a25a31[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7279d847[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@31c5afa0[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6e406de9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7fa2c1c2[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@43a58591[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5f819aea[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@32c38bd6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5b86e09d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 27000,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Jul 25 06:08:28 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-07-25T06:08:28.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1184/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2017-07-04T18:07:59.000+0000",
        "updated": "2019-08-01T22:39:20.000+0000",
        "timeoriginalestimate": null,
        "description": "The {{Dictionary.equals}} method does not return True when the dictionaries are equal.  This is because {{equals}} is not implemented for FieldVector and so that comparison defaults to comparing the two objects only and not the vector data.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "7.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 27000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Dictionary.equals is not working correctly",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13084609/comment/16073992",
                    "id": "16073992",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
                        "name": "bryanc",
                        "key": "bryanc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
                        },
                        "displayName": "Bryan Cutler",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "I think that comparing any 2 FieldVectors could get pretty complicated, especially with nested types, so maybe that's why FieldVector.equals() is not implemented.  Validator.java has a comparison but I think that would probably fail for some cases.  I'm not sure we can assume flat fields only for the dictionary vector to try to make it easier.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
                        "name": "bryanc",
                        "key": "bryanc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
                        },
                        "displayName": "Bryan Cutler",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2017-07-04T18:25:23.529+0000",
                    "updated": "2017-07-04T18:25:23.529+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13084609/comment/16187625",
                    "id": "16187625",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Is this easy to fix?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-10-02T01:47:32.096+0000",
                    "updated": "2017-10-02T01:47:32.096+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13084609/comment/16189114",
                    "id": "16189114",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
                        "name": "bryanc",
                        "key": "bryanc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
                        },
                        "displayName": "Bryan Cutler",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "It's not difficult, just a good bit of work to add the ability to compare contents of vectors for all the types.  Some of that is done in integration tests, but not for complex types.  This would also need to add an API for {{equals()}} somewhere in the vector class hierarchy.  So I wouldn't call it an easy fix either.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
                        "name": "bryanc",
                        "key": "bryanc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
                        },
                        "displayName": "Bryan Cutler",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2017-10-03T00:31:08.357+0000",
                    "updated": "2017-10-03T00:31:50.370+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13084609/comment/16881725",
                    "id": "16881725",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
                        "name": "tianchen92",
                        "key": "tianchen92",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
                        },
                        "displayName": "Ji Liu",
                        "active": true,
                        "timeZone": "Asia/Gaza"
                    },
                    "body": "[~bryanc] Now for Struct and List type, getObject returns JsonStringHashMap and JsonStringArrayList which support hashCode & equals well, I think we could simply apply compare logic in Validator to Dicitionary#equals, and make some change to make it work (e.g. add a wrapper for byte[] get from BinaryVector, now Object.equals(byte[], byte[]) I think is not correct). In this way, we need not add API for equals. What do you think?\r\n\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
                        "name": "tianchen92",
                        "key": "tianchen92",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
                        },
                        "displayName": "Ji Liu",
                        "active": true,
                        "timeZone": "Asia/Gaza"
                    },
                    "created": "2019-07-10T04:47:57.445+0000",
                    "updated": "2019-07-10T04:47:57.445+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13084609/comment/16892437",
                    "id": "16892437",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
                        "name": "bryanc",
                        "key": "bryanc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
                        },
                        "displayName": "Bryan Cutler",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 4843\n[https://github.com/apache/arrow/pull/4843]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
                        "name": "bryanc",
                        "key": "bryanc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
                        },
                        "displayName": "Bryan Cutler",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-07-25T06:08:28.534+0000",
                    "updated": "2019-07-25T06:08:28.534+0000"
                }
            ],
            "maxResults": 5,
            "total": 5,
            "startAt": 0
        },
        "customfield_12311820": "0|i3h3av:",
        "customfield_12314139": null
    }
}