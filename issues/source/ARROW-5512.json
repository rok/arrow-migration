{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13237629",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237629",
    "key": "ARROW-5512",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344925",
                "id": "12344925",
                "description": "",
                "name": "0.14.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-07-04"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "dataset",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 23400,
            "total": 23400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 23400,
            "total": 23400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5512/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 43,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237629/worklog/254823",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #4483: ARROW-5512: [C++] Rough API skeleton for C++ Datasets API / framework\nURL: https://github.com/apache/arrow/pull/4483\n \n \n   This is almost exclusively header files, so I caution all against debating small details like function signatures, names, or what kind of smart pointer to use (if any) in various places. Instead, does the high level structure seem reasonable (or at least, _not horrible_) as a starting point to do more work?\r\n   \r\n   Some of the naming of things is inspired by related concepts in Apache Iceberg (incubating) (https://github.com/apache/incubator-iceberg), which is a vertically integrated dataset metastore and reading and writing system specialized for that metastore. \r\n   \r\n   Here is the basic idea:\r\n   \r\n   * A Dataset (for reading, aka \"scanning\") consists of a schema (what kind of data you expect to receive) and one or more data sources\r\n   * A DataSource abstractly yields an iterator of DataFragment\r\n   * A DataFragment represents a roughly individual storage unit, like a file\r\n   \r\n   I abstracted away the file-related logic from the high level interface since I would like to support other kinds of data sources other than file-based ones:\r\n   \r\n   * Flight streams: each endpoint from a DoGet operation in Flight corresponds to a DataFragment\r\n   * Database-like clients: e.g. the results of a SQL query form a Fragment\r\n   \r\n   There's some object layering issues that aren't worked out yet, and I think the only way to work them out is to work on implementation and refactor until we get things feeling right:\r\n   \r\n   * It is the job of a FileFormat implementation to translate between \r\n   * Filtering can occur both at the Partition/Fragment level (i.e. \"skip these files altogether\") as well as at the post-materialization stage. In Iceberg these \"post-materialization\" filters are called \"Residuals\". For example, if the user wants `filter1 & filter2` to be applied and only `filter1` can be handled by the low-level file deserialization, we will have to apply `filter2` against the unfiltered in-memory RecordBatch, returning the filtered RecordBatch to the user\r\n   \r\n   As another matter, this objective of this framework is to draw a distinction between the Schema of a file and the Schema of the Dataset. This isn't reflected fully in the headers yet. To give an example, suppose that we wish to obtain a Dataset with schema\r\n   \r\n   ```\r\n   a: int64 nullable\r\n   b: double nullable\r\n   c: string nullable\r\n   ```\r\n   \r\n   When reading files in the Dataset, we might encounter fields are won't want, or fields that are missing. We must _conform_ the physical data to the Dataset's desired Schema. Much of the hard labor will be in the file format implementations, so match up what's in the file with what the Dataset wants. We also must deal with other kinds of schema normalization issues, like one Parquet file having a field as \"non-nullable\" when the desired schema is \"nullable\".\r\n   \r\n   Inferring the Schema of a Dataset when you don't know it outright is a whole separate matter. If you go to Scan a dataset without knowing it, you must necessarily do some amount of inference up front or just prior to scanning. We will need to offer both \"low effort\" (look at some, but not files, and do not expend too much energy on it -- e.g. in the case of CSV files you may reach a conclusion without parsing an entire file) and \"high effort / exhaustive\" Schema inference.\r\n   \r\n   As far as the actual Scan execution we are likely to immediately suffer some thread scheduling issues when trying to Scan files in parallel as internally IO and CPU work is coordinated. The file reader implementations have their own internal parallelism so that's something to contemplate as well. \r\n   \r\n   In any case, I suggest we start small by creating minimalistic interfaces to CSV and Parquet files to start, implement simple dataset discovery as we have not in pyarrow/parquet.py, but a bit more general, and then we can investigate the various more advanced features as described in https://docs.google.com/document/d/1bVhzifD38qDypnSjtf8exvpP3sSB5x_Kw9m-n66FB2c/edit piece by piece.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T01:48:14.509+0000",
                    "updated": "2019-06-06T01:48:14.509+0000",
                    "started": "2019-06-06T01:48:14.508+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254823",
                    "issueId": "13237629"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237629/worklog/254828",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4483: ARROW-5512: [C++] Rough API skeleton for C++ Datasets API / framework\nURL: https://github.com/apache/arrow/pull/4483#issuecomment-499319565\n \n \n   @pitrou @bkietz I posit that the csv/ and json/ subprojects could be nested under src/arrow/dataset as this project proceeds. I'd like to move src/parquet/arrow there also but that might be trickier since we have more users of that project who would be expecting to find the symbols in libparquet.so \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T01:59:40.716+0000",
                    "updated": "2019-06-06T01:59:40.716+0000",
                    "started": "2019-06-06T01:59:40.715+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254828",
                    "issueId": "13237629"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237629/worklog/254931",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4483: ARROW-5512: [C++] Rough API skeleton for C++ Datasets API / framework\nURL: https://github.com/apache/arrow/pull/4483#discussion_r291039163\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/dataset.h\n ##########\n @@ -0,0 +1,117 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <vector>\n+\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+/// \\brief A granular piece of a Dataset, such as an individual file,\n+/// which can be read/scanned separately from other fragments\n+class ARROW_DS_EXPORT DataFragment {\n \n Review comment:\n   Why the new macro?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T06:43:22.788+0000",
                    "updated": "2019-06-06T06:43:22.788+0000",
                    "started": "2019-06-06T06:43:22.787+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254931",
                    "issueId": "13237629"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237629/worklog/254938",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #4483: ARROW-5512: [C++] Rough API skeleton for C++ Datasets API / framework\nURL: https://github.com/apache/arrow/pull/4483#issuecomment-499377214\n \n \n   @wesm at a high level this seems reasonable to me, but I'm refraining on nit-picking individual APIs  per your request :)\r\n   \r\n   One question I had on the iterator concept, is as you mentioned it might take a while to iterate through all fragments that need to be loaded.  Does it make sense to expose some level of parallelism in the APIs to allow clients to consume fragments more quickly, or do you imagine this will happen behind the scenes?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T07:12:09.885+0000",
                    "updated": "2019-06-06T07:12:09.885+0000",
                    "started": "2019-06-06T07:12:09.882+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254938",
                    "issueId": "13237629"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237629/worklog/254975",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4483: ARROW-5512: [C++] Rough API skeleton for C++ Datasets API / framework\nURL: https://github.com/apache/arrow/pull/4483#discussion_r291056457\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/dataset.h\n ##########\n @@ -0,0 +1,117 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <vector>\n+\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+/// \\brief A granular piece of a Dataset, such as an individual file,\n+/// which can be read/scanned separately from other fragments\n+class ARROW_DS_EXPORT DataFragment {\n+ public:\n+  /// \\brief Return true if the fragment can benefit from parallel\n+  /// scanning\n+  virtual bool splittable() const = 0;\n+\n+  /// \\brief Partition options to use when scanning this fragment. May be\n+  /// nullptr\n+  virtual std::shared_ptr<ScanOptions> scan_options() const = 0;\n+};\n+\n+/// \\brief Conditions to apply to a dataset when reading to include or\n+/// exclude fragments, filter out rows, etc.\n+struct DataSelector {\n+  std::vector<std::shared_ptr<Filter>> filters;\n+\n+  // TODO(wesm): Select specific partition keys, file path globs, or\n+  // other common desirable selections\n+};\n+\n+/// \\brief A basic component of a Dataset which yields zero or more\n+/// DataFragments\n+class ARROW_DS_EXPORT DataSource {\n+ public:\n+  enum Type {\n+    SIMPLE,       // Flat collection\n+    PARTITIONED,  // Partitioned collection\n+    GENERIC       // All others\n+  };\n+\n+  virtual ~DataSource() = default;\n+\n+  virtual Type type() const = 0;\n+\n+  virtual std::unique_ptr<DataFragmentIterator> GetFragments(\n+      const DataSelector& selector) = 0;\n+};\n+\n+/// \\brief A DataSource consisting of a flat sequence of DataFragments\n+class ARROW_DS_EXPORT SimpleDataSource : public DataSource {\n+ public:\n+  std::unique_ptr<DataFragmentIterator> GetFragments(\n+      const DataSelector& selector) override;\n+\n+ private:\n+  DataFragmentVector fragments_;\n+};\n+\n+/// \\brief Top-level interface for a Dataset with fragments coming\n+/// from possibly multiple sources\n+class ARROW_DS_EXPORT Dataset : public std::enable_shared_from_this<Dataset> {\n+ public:\n+  /// \\param[in] source a single input data source\n+  /// \\param[in] schema a known schema to conform to, may be nullptr\n+  explicit Dataset(std::shared_ptr<DataSource> source,\n+                   std::shared_ptr<Schema> schema = NULLPTR);\n+\n+  /// \\param[in] source one or more input data sources\n+  /// \\param[in] schema a known schema to conform to, may be nullptr\n+  explicit Dataset(const std::vector<std::shared_ptr<DataSource>>& sources,\n \n Review comment:\n   Hmm... a DataSource can already yield multiple fragments, is there a reason to have a similar thing happening here?\r\n   \r\n   At worse, if we want to combine DataSources together, shouldn't we have a CompositeDataSource instead? (that would be the moral equivalent of `itertools.chain` perhaps?).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T08:30:01.489+0000",
                    "updated": "2019-06-06T08:30:01.489+0000",
                    "started": "2019-06-06T08:30:01.488+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254975",
                    "issueId": "13237629"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237629/worklog/254976",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4483: ARROW-5512: [C++] Rough API skeleton for C++ Datasets API / framework\nURL: https://github.com/apache/arrow/pull/4483#discussion_r291059626\n \n \n\n ##########\n File path: cpp/src/arrow/util/iterator.h\n ##########\n @@ -0,0 +1,35 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include \"arrow/dataset/visibility.h\"\n+\n+namespace arrow {\n+\n+class Status;\n+\n+/// \\brief A generic Iterator that can return errors\n+template <typename T>\n+class Iterator {\n+ public:\n+  /// \\brief Return the next element of the sequence, nullptr when the\n+  /// iteration is completed\n \n Review comment:\n   Perhaps we need a second metadata pointer here? e.g. Flight has datum-specific metadata.\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T08:30:01.497+0000",
                    "updated": "2019-06-06T08:30:01.497+0000",
                    "started": "2019-06-06T08:30:01.497+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254976",
                    "issueId": "13237629"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237629/worklog/254977",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4483: ARROW-5512: [C++] Rough API skeleton for C++ Datasets API / framework\nURL: https://github.com/apache/arrow/pull/4483#discussion_r291066567\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/partition.h\n ##########\n @@ -0,0 +1,191 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+#include <utility>\n+#include <vector>\n+\n+#include \"arrow/dataset/dataset.h\"\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+// ----------------------------------------------------------------------\n+// Computing partition values\n+\n+// TODO(wesm): API for computing partition keys derived from raw\n+// values. For example, year(value) or hash_function(value) instead of\n+// simply value, so a dataset with a timestamp column might group all\n+// data with year 2009 in the same partition\n+\n+// /// \\brief\n+// class ScalarTransform {\n+//  public:\n+//   virtual Status Transform(const std::shared_ptr<Scalar>& input,\n+//                            std::shared_ptr<Scalar>* output) const = 0;\n+// };\n+\n+// class PartitionField {\n+//  public:\n+\n+//  private:\n+//   std::string field_name_;\n+// };\n+\n+// ----------------------------------------------------------------------\n+// Partition identifiers\n+\n+/// \\brief A partition level identifier which can be used\n+///\n+/// TODO(wesm): Is this general enough? What other kinds of partition\n+/// keys exist and do we need to support them?\n+class PartitionKey {\n+ public:\n+  const std::vector<std::string>& fields() const { return fields_; }\n+  const std::vector<std::shared_ptr<Scalar>>& values() const { return values_; }\n+\n+ private:\n+  std::vector<std::string> fields_;\n+  std::vector<std::shared_ptr<Scalar>> values_;\n+};\n+\n+/// \\brief Intermediate data structure for data parsed from a string\n+/// partition identifier.\n+///\n+/// For example, the identifier \"foo=5\" might be parsed with a single\n+/// \"foo\" field and the value 5. A more complex identifier might be\n+/// written as \"foo=5,bar=2\", which would yield two fields and two\n+/// values.\n+///\n+/// Some partition schemes may store the field names in a metadata\n+/// store instead of in file paths, for example\n+/// dataset_root/2009/11/... could be used when the partition fields\n+/// are \"year\" and \"month\"\n+struct PartitionKeyData {\n+  std::vector<std::string> fields;\n+  std::vector<std::shared_ptr<Scalar>> values;\n+};\n+\n+// ----------------------------------------------------------------------\n+// Partition schemes\n+\n+/// \\brief\n+class ARROW_DS_EXPORT PartitionScheme {\n+ public:\n+  virtual ~PartitionScheme() = default;\n+\n+  /// \\brief The name identifying the kind of partition scheme\n+  virtual std::string name() const = 0;\n+\n+  virtual bool PathMatchesScheme(const std::string& path) const = 0;\n+\n+  virtual Status ParseKey(const std::string& path, PartitionKeyData* out) const = 0;\n+};\n+\n+/// \\brief Multi-level, directory based partitioning scheme\n+/// originating from Apache Hive with all data files stored in the\n+/// leaf directories. Data is partitioned by static values of a\n+/// particular column in the schema. Partition keys are represented in\n+/// the form $key=$value in directory names\n+class ARROW_DS_EXPORT HivePartitionScheme : public PartitionScheme {\n+ public:\n+  /// \\brief Return true if path\n+  bool PathMatchesScheme(const std::string& path) const override;\n+\n+  virtual Status ParseKey(const std::string& path, PartitionKeyData* out) const = 0;\n+};\n+\n+// ----------------------------------------------------------------------\n+//\n+\n+class ARROW_DS_EXPORT Partition : public DataSource {\n+ public:\n+  DataSource::Type type() const override;\n+\n+  /// \\brief The key for this partition source, may be nullptr,\n+  /// e.g. for the top-level partitioned source container\n+  virtual const PartitionKey* key() const = 0;\n+\n+  virtual std::unique_ptr<DataFragmentIterator> GetFragments(\n+      const Selector& selector) = 0;\n+};\n+\n+/// \\brief Container for a dataset partition, which consists of a\n+/// partition identifier, subpartitions, and some data fragments\n \n Review comment:\n   I'm missing some high-level concepts here. A partition can contain _several_ fragments? Until now I assumed partition and fragment were basically similar things. But apparently they're hierarchically organized?\r\n   \r\n   I think it would help if you sketched out a simple example (e.g. a directory hierarchy of CSV files) and explained to what part of the example concretely each concept maps.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T08:30:01.499+0000",
                    "updated": "2019-06-06T08:30:01.499+0000",
                    "started": "2019-06-06T08:30:01.499+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254977",
                    "issueId": "13237629"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237629/worklog/254978",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4483: ARROW-5512: [C++] Rough API skeleton for C++ Datasets API / framework\nURL: https://github.com/apache/arrow/pull/4483#discussion_r291070168\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/dataset.h\n ##########\n @@ -0,0 +1,117 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <vector>\n+\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+/// \\brief A granular piece of a Dataset, such as an individual file,\n \n Review comment:\n   I don't really understand what this class is used for. Can the user do something with it, apart from inspecting its properties?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T08:30:01.503+0000",
                    "updated": "2019-06-06T08:30:01.503+0000",
                    "started": "2019-06-06T08:30:01.502+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254978",
                    "issueId": "13237629"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237629/worklog/254979",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4483: ARROW-5512: [C++] Rough API skeleton for C++ Datasets API / framework\nURL: https://github.com/apache/arrow/pull/4483#discussion_r291063983\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/partition.h\n ##########\n @@ -0,0 +1,191 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+#include <utility>\n+#include <vector>\n+\n+#include \"arrow/dataset/dataset.h\"\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+// ----------------------------------------------------------------------\n+// Computing partition values\n+\n+// TODO(wesm): API for computing partition keys derived from raw\n+// values. For example, year(value) or hash_function(value) instead of\n+// simply value, so a dataset with a timestamp column might group all\n+// data with year 2009 in the same partition\n+\n+// /// \\brief\n+// class ScalarTransform {\n+//  public:\n+//   virtual Status Transform(const std::shared_ptr<Scalar>& input,\n+//                            std::shared_ptr<Scalar>* output) const = 0;\n+// };\n+\n+// class PartitionField {\n+//  public:\n+\n+//  private:\n+//   std::string field_name_;\n+// };\n+\n+// ----------------------------------------------------------------------\n+// Partition identifiers\n+\n+/// \\brief A partition level identifier which can be used\n+///\n+/// TODO(wesm): Is this general enough? What other kinds of partition\n+/// keys exist and do we need to support them?\n+class PartitionKey {\n+ public:\n+  const std::vector<std::string>& fields() const { return fields_; }\n+  const std::vector<std::shared_ptr<Scalar>>& values() const { return values_; }\n \n Review comment:\n   I'm not sure what PartitionKey implements. Just `AND(field==value for field, value in zip(fields, values))`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T08:30:01.509+0000",
                    "updated": "2019-06-06T08:30:01.509+0000",
                    "started": "2019-06-06T08:30:01.508+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254979",
                    "issueId": "13237629"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237629/worklog/254980",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4483: ARROW-5512: [C++] Rough API skeleton for C++ Datasets API / framework\nURL: https://github.com/apache/arrow/pull/4483#discussion_r291061744\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/file_base.h\n ##########\n @@ -0,0 +1,144 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+#include <utility>\n+\n+#include \"arrow/dataset/scanner.h\"\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+#include \"arrow/dataset/writer.h\"\n+#include \"arrow/util/compression.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+/// \\brief\n+class ARROW_DS_EXPORT FileSource {\n \n Review comment:\n   I don't understand why this class is exposed in the API. Should the user deal with it?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T08:30:01.542+0000",
                    "updated": "2019-06-06T08:30:01.542+0000",
                    "started": "2019-06-06T08:30:01.541+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254980",
                    "issueId": "13237629"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237629/worklog/254981",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4483: ARROW-5512: [C++] Rough API skeleton for C++ Datasets API / framework\nURL: https://github.com/apache/arrow/pull/4483#discussion_r291061798\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/file_base.h\n ##########\n @@ -0,0 +1,144 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+#include <utility>\n+\n+#include \"arrow/dataset/scanner.h\"\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+#include \"arrow/dataset/writer.h\"\n+#include \"arrow/util/compression.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+/// \\brief\n+class ARROW_DS_EXPORT FileSource {\n+ public:\n+  enum SourceType { PATH, BUFFER };\n \n Review comment:\n   Perhaps two different classes are needed then? Or else this class should just take a `InputStream` and/or `RandomAccessFile` (which one?)?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T08:30:01.556+0000",
                    "updated": "2019-06-06T08:30:01.556+0000",
                    "started": "2019-06-06T08:30:01.556+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254981",
                    "issueId": "13237629"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237629/worklog/254982",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4483: ARROW-5512: [C++] Rough API skeleton for C++ Datasets API / framework\nURL: https://github.com/apache/arrow/pull/4483#discussion_r291057398\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/discovery.h\n ##########\n @@ -0,0 +1,45 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+/// Logic for automatically determining the structure of multi-file\n+/// dataset with possible partitioning according to available\n+/// partition schemes\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+#include \"arrow/util/macros.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+struct ARROW_DS_EXPORT DiscoveryOptions {\n+  std::shared_ptr<FileFormat> format = NULLPTR;\n+  std::shared_ptr<PartitionScheme> partition_scheme = NULLPTR;\n+};\n+\n+/// \\brief Using a root directory\n \n Review comment:\n   Should we have a URI scheme at some point?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T08:30:01.581+0000",
                    "updated": "2019-06-06T08:30:01.581+0000",
                    "started": "2019-06-06T08:30:01.581+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254982",
                    "issueId": "13237629"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237629/worklog/254983",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4483: ARROW-5512: [C++] Rough API skeleton for C++ Datasets API / framework\nURL: https://github.com/apache/arrow/pull/4483#discussion_r291063381\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/scanner.h\n ##########\n @@ -0,0 +1,94 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+/// \\brief Shared state for a Scan operation\n+struct ARROW_DS_EXPORT ScanContext {};\n+\n+// TODO(wesm): API for handling of post-materialization filters. For\n+// example, if the user requests [$col1 > 0, $col2 > 0] and $col1 is a\n+// partition key, but $col2 is not, then the filter \"$col2 > 0\" must\n+// be evaluated in-memory against the RecordBatch objects resulting\n+// from the Scan\n+\n+class ARROW_DS_EXPORT ScanOptions {\n+ public:\n+  virtual ~ScanOptions() = default;\n+};\n+\n+/// \\brief Read record batches from a range of a single data fragment\n+class ARROW_DS_EXPORT ScanTask {\n \n Review comment:\n   I don't really understand why this is exposed. Does the user have to do with the details of invoking Scanner and ScanTask? Also, what is the logical distinction between Scanner and ScanTask? If you invoke ScanTasks in parallel, then you get the record batches in arbitrary order?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T08:30:01.586+0000",
                    "updated": "2019-06-06T08:30:01.586+0000",
                    "started": "2019-06-06T08:30:01.586+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254983",
                    "issueId": "13237629"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237629/worklog/254984",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4483: ARROW-5512: [C++] Rough API skeleton for C++ Datasets API / framework\nURL: https://github.com/apache/arrow/pull/4483#discussion_r291067707\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/scanner.h\n ##########\n @@ -0,0 +1,94 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+#include <vector>\n+\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+/// \\brief Shared state for a Scan operation\n+struct ARROW_DS_EXPORT ScanContext {};\n+\n+// TODO(wesm): API for handling of post-materialization filters. For\n+// example, if the user requests [$col1 > 0, $col2 > 0] and $col1 is a\n+// partition key, but $col2 is not, then the filter \"$col2 > 0\" must\n+// be evaluated in-memory against the RecordBatch objects resulting\n+// from the Scan\n+\n+class ARROW_DS_EXPORT ScanOptions {\n+ public:\n+  virtual ~ScanOptions() = default;\n+};\n+\n+/// \\brief Read record batches from a range of a single data fragment\n+class ARROW_DS_EXPORT ScanTask {\n+ public:\n+  virtual ~ScanTask() = default;\n+\n+  /// \\brief Iterate through sequence of materialized record batches\n+  /// resulting from the Scan. Execution semantics encapsulated in the\n+  /// particular ScanTask implementation\n+  virtual std::unique_ptr<RecordBatchIterator> Scan() = 0;\n+};\n+\n+/// \\brief Main interface for\n+class ARROW_DS_EXPORT Scanner {\n \n Review comment:\n   Is the scanner responsible only for scanning through directories? Is the actual file / fragment reading handled somewhere else?\r\n   \r\n   I think I would expect some kind of FragmentReader interface at some point, or perhaps that is what DataFragment is for.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T08:30:01.620+0000",
                    "updated": "2019-06-06T08:30:01.620+0000",
                    "started": "2019-06-06T08:30:01.619+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254984",
                    "issueId": "13237629"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237629/worklog/254985",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4483: ARROW-5512: [C++] Rough API skeleton for C++ Datasets API / framework\nURL: https://github.com/apache/arrow/pull/4483#discussion_r291057873\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/disk_store.h\n ##########\n @@ -0,0 +1,56 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/type_fwd.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+/// \\brief Loads a previously-written collection of Arrow protocol\n+/// files and exposes them in a way that can be consumed as a Dataset\n+/// source\n+class ARROW_DS_EXPORT DiskStoreReader : public DatasetSource {\n+ public:\n+  DiskStoreReader(const std::string& path, fs::FileSystem* filesystem);\n+\n+ private:\n+  class DiskStoreReaderImpl;\n+  std::unique_ptr<DiskStoreReaderImpl> impl_;\n+\n+  std::string path_;\n+  fs::FileSystem* filesystem_;\n+\n+  DiskStoreReader() {}\n+};\n+\n+/// \\brief\n+class ARROW_DS_EXPORT DiskStoreWriter {\n+ public:\n+  Status Write(const RecordBatch& batch);\n \n Review comment:\n   Needs a Close method too. Perhaps Abort as well.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T08:30:01.655+0000",
                    "updated": "2019-06-06T08:30:01.655+0000",
                    "started": "2019-06-06T08:30:01.654+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254985",
                    "issueId": "13237629"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237629/worklog/254986",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4483: ARROW-5512: [C++] Rough API skeleton for C++ Datasets API / framework\nURL: https://github.com/apache/arrow/pull/4483#discussion_r291054720\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/dataset.h\n ##########\n @@ -0,0 +1,117 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <vector>\n+\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+/// \\brief A granular piece of a Dataset, such as an individual file,\n+/// which can be read/scanned separately from other fragments\n+class ARROW_DS_EXPORT DataFragment {\n+ public:\n+  /// \\brief Return true if the fragment can benefit from parallel\n+  /// scanning\n+  virtual bool splittable() const = 0;\n+\n+  /// \\brief Partition options to use when scanning this fragment. May be\n+  /// nullptr\n+  virtual std::shared_ptr<ScanOptions> scan_options() const = 0;\n+};\n+\n+/// \\brief Conditions to apply to a dataset when reading to include or\n+/// exclude fragments, filter out rows, etc.\n+struct DataSelector {\n+  std::vector<std::shared_ptr<Filter>> filters;\n+\n+  // TODO(wesm): Select specific partition keys, file path globs, or\n+  // other common desirable selections\n+};\n+\n+/// \\brief A basic component of a Dataset which yields zero or more\n+/// DataFragments\n+class ARROW_DS_EXPORT DataSource {\n+ public:\n+  enum Type {\n+    SIMPLE,       // Flat collection\n \n Review comment:\n   What do you mean? A single file/fragment? Also, why is it useful for the caller to know this?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T08:30:05.402+0000",
                    "updated": "2019-06-06T08:30:05.402+0000",
                    "started": "2019-06-06T08:30:05.402+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254986",
                    "issueId": "13237629"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237629/worklog/254987",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4483: ARROW-5512: [C++] Rough API skeleton for C++ Datasets API / framework\nURL: https://github.com/apache/arrow/pull/4483#discussion_r291055691\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/dataset.h\n ##########\n @@ -0,0 +1,117 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <vector>\n+\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+/// \\brief A granular piece of a Dataset, such as an individual file,\n+/// which can be read/scanned separately from other fragments\n+class ARROW_DS_EXPORT DataFragment {\n+ public:\n+  /// \\brief Return true if the fragment can benefit from parallel\n+  /// scanning\n+  virtual bool splittable() const = 0;\n+\n+  /// \\brief Partition options to use when scanning this fragment. May be\n+  /// nullptr\n+  virtual std::shared_ptr<ScanOptions> scan_options() const = 0;\n+};\n+\n+/// \\brief Conditions to apply to a dataset when reading to include or\n+/// exclude fragments, filter out rows, etc.\n+struct DataSelector {\n+  std::vector<std::shared_ptr<Filter>> filters;\n+\n+  // TODO(wesm): Select specific partition keys, file path globs, or\n+  // other common desirable selections\n+};\n+\n+/// \\brief A basic component of a Dataset which yields zero or more\n+/// DataFragments\n+class ARROW_DS_EXPORT DataSource {\n+ public:\n+  enum Type {\n+    SIMPLE,       // Flat collection\n+    PARTITIONED,  // Partitioned collection\n+    GENERIC       // All others\n+  };\n+\n+  virtual ~DataSource() = default;\n+\n+  virtual Type type() const = 0;\n+\n+  virtual std::unique_ptr<DataFragmentIterator> GetFragments(\n+      const DataSelector& selector) = 0;\n+};\n+\n+/// \\brief A DataSource consisting of a flat sequence of DataFragments\n \n Review comment:\n   Not sure I understand the difference, since DataSource is already able to give out a DataFragment iterator.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T08:30:05.547+0000",
                    "updated": "2019-06-06T08:30:05.547+0000",
                    "started": "2019-06-06T08:30:05.546+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254987",
                    "issueId": "13237629"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237629/worklog/254988",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4483: ARROW-5512: [C++] Rough API skeleton for C++ Datasets API / framework\nURL: https://github.com/apache/arrow/pull/4483#discussion_r291054979\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/dataset.h\n ##########\n @@ -0,0 +1,117 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <vector>\n+\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+/// \\brief A granular piece of a Dataset, such as an individual file,\n+/// which can be read/scanned separately from other fragments\n+class ARROW_DS_EXPORT DataFragment {\n+ public:\n+  /// \\brief Return true if the fragment can benefit from parallel\n+  /// scanning\n \n Review comment:\n   I'm not sure what that means. Scanning == reading the whole fragment?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T08:30:05.609+0000",
                    "updated": "2019-06-06T08:30:05.609+0000",
                    "started": "2019-06-06T08:30:05.608+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254988",
                    "issueId": "13237629"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237629/worklog/254989",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4483: ARROW-5512: [C++] Rough API skeleton for C++ Datasets API / framework\nURL: https://github.com/apache/arrow/pull/4483#discussion_r291056835\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/dataset.h\n ##########\n @@ -0,0 +1,117 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <vector>\n+\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+/// \\brief A granular piece of a Dataset, such as an individual file,\n+/// which can be read/scanned separately from other fragments\n+class ARROW_DS_EXPORT DataFragment {\n+ public:\n+  /// \\brief Return true if the fragment can benefit from parallel\n+  /// scanning\n+  virtual bool splittable() const = 0;\n+\n+  /// \\brief Partition options to use when scanning this fragment. May be\n+  /// nullptr\n+  virtual std::shared_ptr<ScanOptions> scan_options() const = 0;\n+};\n+\n+/// \\brief Conditions to apply to a dataset when reading to include or\n+/// exclude fragments, filter out rows, etc.\n+struct DataSelector {\n+  std::vector<std::shared_ptr<Filter>> filters;\n+\n+  // TODO(wesm): Select specific partition keys, file path globs, or\n+  // other common desirable selections\n+};\n+\n+/// \\brief A basic component of a Dataset which yields zero or more\n+/// DataFragments\n+class ARROW_DS_EXPORT DataSource {\n+ public:\n+  enum Type {\n+    SIMPLE,       // Flat collection\n+    PARTITIONED,  // Partitioned collection\n+    GENERIC       // All others\n+  };\n+\n+  virtual ~DataSource() = default;\n+\n+  virtual Type type() const = 0;\n+\n+  virtual std::unique_ptr<DataFragmentIterator> GetFragments(\n+      const DataSelector& selector) = 0;\n+};\n+\n+/// \\brief A DataSource consisting of a flat sequence of DataFragments\n+class ARROW_DS_EXPORT SimpleDataSource : public DataSource {\n+ public:\n+  std::unique_ptr<DataFragmentIterator> GetFragments(\n+      const DataSelector& selector) override;\n+\n+ private:\n+  DataFragmentVector fragments_;\n+};\n+\n+/// \\brief Top-level interface for a Dataset with fragments coming\n+/// from possibly multiple sources\n+class ARROW_DS_EXPORT Dataset : public std::enable_shared_from_this<Dataset> {\n+ public:\n+  /// \\param[in] source a single input data source\n+  /// \\param[in] schema a known schema to conform to, may be nullptr\n+  explicit Dataset(std::shared_ptr<DataSource> source,\n+                   std::shared_ptr<Schema> schema = NULLPTR);\n+\n+  /// \\param[in] source one or more input data sources\n+  /// \\param[in] schema a known schema to conform to, may be nullptr\n+  explicit Dataset(const std::vector<std::shared_ptr<DataSource>>& sources,\n+                   std::shared_ptr<Schema> schema = NULLPTR);\n+\n+  virtual ~Dataset() = default;\n+\n+  /// \\brief Begin to build a new Scan operation against this Dataset\n+  ScannerBuilder NewScan() const;\n+\n+  const std::vector<std::shared_ptr<DataSource>>& sources() const { return sources_; }\n+\n+  std::shared_ptr<Schema> schema() const { return schema_; }\n+\n+  /// \\brief Compute consensus schema from input data sources\n \n Review comment:\n   This is different than the schema given in the constructor? Or it's only when that schema is null?\r\n   \r\n   Also, it seems all reading should happen within a Scanner, so is DataSet the right place for an inference function?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T08:30:05.785+0000",
                    "updated": "2019-06-06T08:30:05.785+0000",
                    "started": "2019-06-06T08:30:05.784+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254989",
                    "issueId": "13237629"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237629/worklog/255163",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #4483: ARROW-5512: [C++] Rough API skeleton for C++ Datasets API / framework\nURL: https://github.com/apache/arrow/pull/4483#discussion_r291236047\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/dataset.h\n ##########\n @@ -0,0 +1,117 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <vector>\n+\n+#include \"arrow/dataset/type_fwd.h\"\n+#include \"arrow/dataset/visibility.h\"\n+\n+namespace arrow {\n+namespace dataset {\n+\n+/// \\brief A granular piece of a Dataset, such as an individual file,\n+/// which can be read/scanned separately from other fragments\n+class ARROW_DS_EXPORT DataFragment {\n \n Review comment:\n   This produces `libarrow_dataset.so`, which is a different shared library, so needs a different export header. One of the reasons to have a different shared library is that it needs to link to libparquet.so\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T15:17:23.803+0000",
                    "updated": "2019-06-06T15:17:23.803+0000",
                    "started": "2019-06-06T15:17:23.802+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "255163",
                    "issueId": "13237629"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 23400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5fad511b[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3ab12b51[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7d3eff73[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4e66b826[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6358f61f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@599b79ea[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@53d4d0cd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@2888e519[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@cc40619[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@e126a42[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7b3581f5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@14fa03a7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 23400,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Jun 13 14:01:42 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-06-13T14:01:42.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5512/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-06-05T03:16:42.000+0000",
        "updated": "2019-06-13T14:01:57.000+0000",
        "timeoriginalestimate": null,
        "description": "The objective of this is to ensure general alignment with the discussion document\r\n\r\nhttps://docs.google.com/document/d/1bVhzifD38qDypnSjtf8exvpP3sSB5x_Kw9m-n66FB2c/edit?usp=sharing\r\n\r\nso that an initial working implementation can begin to take place",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 23400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Draft initial public APIs for Datasets project",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237629/comment/16863103",
                    "id": "16863103",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 4483\n[https://github.com/apache/arrow/pull/4483]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-06-13T14:01:42.219+0000",
                    "updated": "2019-06-13T14:01:42.219+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z03fao:",
        "customfield_12314139": null
    }
}