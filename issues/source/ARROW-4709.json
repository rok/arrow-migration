{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13218486",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218486",
    "key": "ARROW-4709",
    "fields": {
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "good-second-issue",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=benpharkins",
            "name": "benpharkins",
            "key": "JIRAUSER295145",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Ben Harkins",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/3",
            "description": "This issue is being actively worked on at the moment by the assignee.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/inprogress.png",
            "name": "In Progress",
            "id": "3",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/4",
                "id": 4,
                "key": "indeterminate",
                "colorName": "yellow",
                "name": "In Progress"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4709/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 22,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218486/worklog/808004",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "benibus opened a new pull request, #14100:\nURL: https://github.com/apache/arrow/pull/14100\n\n   Addresses [ARROW-4709](https://issues.apache.org/jira/browse/ARROW-4709).\r\n   \r\n   Replaces  `RawArrayBuilder<Kind::kObject>`'s vector of field builders with a vector of structs containing the builder and name as a `string_view`.  This makes field name indexing random access, enabling checks for ordered fields before hitting the hash map.\r\n   \r\n   Added benefits:\r\n   - Removes the expensive `unordered_map` -> `vector` transform in `RawArrayBuilder::Finish`\r\n   - Key names passed to `HandlerBase::SetFieldBuilder` don't need to be converted to `std::string` unless a map lookup is necessary\r\n   \r\n   The prediction logic isn't particularly advanced... more could be done to detect worst-case input and skip to the hash map for subsequent keys. Might be worth it, but I'd need to add benchmarks.\n\n\n",
                    "created": "2022-09-12T18:49:43.552+0000",
                    "updated": "2022-09-12T18:49:43.552+0000",
                    "started": "2022-09-12T18:49:43.552+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "808004",
                    "issueId": "13218486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218486/worklog/808005",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #14100:\nURL: https://github.com/apache/arrow/pull/14100#issuecomment-1244154734\n\n   https://issues.apache.org/jira/browse/ARROW-4709\n\n\n",
                    "created": "2022-09-12T18:50:01.724+0000",
                    "updated": "2022-09-12T18:50:01.724+0000",
                    "started": "2022-09-12T18:50:01.724+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "808005",
                    "issueId": "13218486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218486/worklog/808776",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on PR #14100:\nURL: https://github.com/apache/arrow/pull/14100#issuecomment-1246903712\n\n   Note there are a couple basic benchmarks currently in `src/arrow/json/parser_benchmark.cc`. You can build them by passing `-DARROW_BUILD_BENCHMARKS=ON` to CMake (be sure to build in release mode for optimizations). It will create an executable `arrow-json-parser-benchmark` in the build directory.\r\n   \r\n   (but you may want to write more benchmarks that vary the fields from line to line, for example)\n\n\n",
                    "created": "2022-09-14T15:02:35.317+0000",
                    "updated": "2022-09-14T15:02:35.317+0000",
                    "started": "2022-09-14T15:02:35.316+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "808776",
                    "issueId": "13218486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218486/worklog/808780",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #14100:\nURL: https://github.com/apache/arrow/pull/14100#discussion_r970950406\n\n\n##########\ncpp/src/arrow/json/parser.cc:\n##########\n@@ -749,9 +746,16 @@ class HandlerBase : public BlockParser,\n   /// there is no field with that name\n   bool SetFieldBuilder(string_view key, bool* duplicate_keys) {\n     auto parent = Cast<Kind::kObject>(builder_stack_.back());\n-    field_index_ = parent->GetFieldIndex(std::string(key));\n-    if (ARROW_PREDICT_FALSE(field_index_ == -1)) {\n-      return false;\n+    DCHECK(field_index_ >= -1 && field_index_ < parent->num_fields());\n+    // Predict that this field is known and immediately follows the last one. Otherwise,\n+    // fall back to the hash table lookup\n+    ++field_index_;\n+    if (ARROW_PREDICT_FALSE(field_index_ == parent->num_fields() ||\n+                            key != parent->field_name(field_index_))) {\n+      field_index_ = parent->GetFieldIndex(std::string(key));\n\nReview Comment:\n   Note that a separate optimization would be to avoid creating a new `std::string` when looking up the field index (for example by having a separate vector of field names and using a `std::unordered_map<string_view, int>` for the actual lookup).\n\n\n\n",
                    "created": "2022-09-14T15:11:42.406+0000",
                    "updated": "2022-09-14T15:11:42.406+0000",
                    "started": "2022-09-14T15:11:42.406+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "808780",
                    "issueId": "13218486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218486/worklog/810848",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "benibus commented on code in PR #14100:\nURL: https://github.com/apache/arrow/pull/14100#discussion_r976637404\n\n\n##########\ncpp/src/arrow/json/test_common.h:\n##########\n@@ -99,7 +99,7 @@ struct GenerateImpl {\n   template <typename T>\n   enable_if_base_binary<T, Status> Visit(const T&) {\n     auto size = std::poisson_distribution<>{4}(e);\n-    std::uniform_int_distribution<uint16_t> gen_char(32, 127);  // FIXME generate UTF8\n+    std::uniform_int_distribution<uint16_t> gen_char(32, 126);  // FIXME generate UTF8\n\nReview Comment:\n   I assume that ASCII DEL wasn't intended to be included in the test input...\n\n\n\n##########\ncpp/src/arrow/json/parser_benchmark.cc:\n##########\n@@ -30,24 +30,50 @@\n namespace arrow {\n namespace json {\n \n-std::shared_ptr<Schema> TestSchema() {\n-  return schema({field(\"int\", int32()), field(\"str\", utf8())});\n-}\n-\n-constexpr int seed = 0x432432;\n-\n-std::string TestJsonData(int num_rows, bool pretty = false) {\n-  std::default_random_engine engine(seed);\n-  std::string json;\n-  for (int i = 0; i < num_rows; ++i) {\n-    StringBuffer sb;\n-    Writer writer(sb);\n-    ABORT_NOT_OK(Generate(TestSchema(), engine, &writer));\n-    json += pretty ? PrettyPrint(sb.GetString()) : sb.GetString();\n-    json += \"\\n\";\n+class JSONGenerator {\n+ public:\n+  constexpr static int kSeed = 0x432432;\n+\n+  constexpr explicit JSONGenerator(bool pretty = false) : pretty_(pretty) {}\n+\n+  template <typename T>\n+  std::string operator()(const T& input, int32_t num_rows) const {\n+    std::default_random_engine engine(kSeed);\n+    std::string json;\n+    for (int i = 0; i < num_rows; ++i) {\n+      StringBuffer sb;\n+      Writer writer(sb);\n+      ABORT_NOT_OK(Generate(input, engine, &writer));\n+      json += pretty_ ? PrettyPrint(sb.GetString()) : sb.GetString();\n+      json += \"\\n\";\n+    }\n+    return json;\n   }\n \n-  return json;\n+ private:\n+  bool pretty_;\n+};\n+\n+constexpr auto JSONString = JSONGenerator{false};\n+constexpr auto JSONStringPretty = JSONGenerator{true};\n+\n+// Both field sets are the worst-case ordering of each other - i.e. the parser cannot\n+// reliably predict the next field in B given the definition of A.\n+FieldVector TestFields1() {\n+  return {\n+      field(\"int\", int32()),\n+      field(\"str\", utf8()),\n+  };\n+}\n+FieldVector TestFields2() {\n+  return {\n+      field(\"str\", utf8()),\n+      field(\"int\", int32()),\n+  };\n+}\n\nReview Comment:\n   I held back on adding fields for now since I wasn't sure how it would affect regression tests (for the ordered case, at least).\r\n   \r\n   I also tried out randomly shuffling the fields for every row. Given the parser's current prediction strategy and limited number of fields, this felt unnecessary - but it would be a more robust solution. The new `JSONGenerator` helper could be be altered to accept a callable rather than constant input.\n\n\n\n##########\ncpp/src/arrow/json/parser.cc:\n##########\n@@ -383,13 +392,14 @@ class RawArrayBuilder<Kind::kObject> {\n \n  private:\n   struct FieldInfo {\n-    string_view name;  // Backed by key's allocation in name_to_index_\n+    std::unique_ptr<std::string> name;\n     BuilderPtr builder;\n   };\n\nReview Comment:\n   The simplest solution I could think of to avoid the `std::string` relocation issues. The faster approach would be to store the allocations in a separate `std::forward_list` and hold another `string_view` here, avoiding the double-dereference (at a higher memory cost).\n\n\n\n",
                    "created": "2022-09-21T15:30:30.514+0000",
                    "updated": "2022-09-21T15:30:30.514+0000",
                    "started": "2022-09-21T15:30:30.514+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "810848",
                    "issueId": "13218486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218486/worklog/811104",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #14100:\nURL: https://github.com/apache/arrow/pull/14100#discussion_r977376001\n\n\n##########\ncpp/src/arrow/json/parser_benchmark.cc:\n##########\n@@ -30,24 +30,50 @@\n namespace arrow {\n namespace json {\n \n-std::shared_ptr<Schema> TestSchema() {\n-  return schema({field(\"int\", int32()), field(\"str\", utf8())});\n-}\n-\n-constexpr int seed = 0x432432;\n-\n-std::string TestJsonData(int num_rows, bool pretty = false) {\n-  std::default_random_engine engine(seed);\n-  std::string json;\n-  for (int i = 0; i < num_rows; ++i) {\n-    StringBuffer sb;\n-    Writer writer(sb);\n-    ABORT_NOT_OK(Generate(TestSchema(), engine, &writer));\n-    json += pretty ? PrettyPrint(sb.GetString()) : sb.GetString();\n-    json += \"\\n\";\n+class JSONGenerator {\n+ public:\n+  constexpr static int kSeed = 0x432432;\n+\n+  constexpr explicit JSONGenerator(bool pretty = false) : pretty_(pretty) {}\n+\n+  template <typename T>\n+  std::string operator()(const T& input, int32_t num_rows) const {\n+    std::default_random_engine engine(kSeed);\n+    std::string json;\n+    for (int i = 0; i < num_rows; ++i) {\n+      StringBuffer sb;\n+      Writer writer(sb);\n+      ABORT_NOT_OK(Generate(input, engine, &writer));\n+      json += pretty_ ? PrettyPrint(sb.GetString()) : sb.GetString();\n+      json += \"\\n\";\n+    }\n+    return json;\n   }\n \n-  return json;\n+ private:\n+  bool pretty_;\n+};\n+\n+constexpr auto JSONString = JSONGenerator{false};\n+constexpr auto JSONStringPretty = JSONGenerator{true};\n+\n+// Both field sets are the worst-case ordering of each other - i.e. the parser cannot\n+// reliably predict the next field in B given the definition of A.\n+FieldVector TestFields1() {\n+  return {\n+      field(\"int\", int32()),\n+      field(\"str\", utf8()),\n+  };\n+}\n+FieldVector TestFields2() {\n+  return {\n+      field(\"str\", utf8()),\n+      field(\"int\", int32()),\n+  };\n+}\n\nReview Comment:\n   We should indeed try not to modify the characteristics of existing benchmarks. We can however add a different set of benchmarks with a lot more fields, potentially varying fields per line, etc.\n\n\n\n",
                    "created": "2022-09-22T08:45:53.081+0000",
                    "updated": "2022-09-22T08:45:53.081+0000",
                    "started": "2022-09-22T08:45:53.081+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811104",
                    "issueId": "13218486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218486/worklog/811105",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #14100:\nURL: https://github.com/apache/arrow/pull/14100#discussion_r977376598\n\n\n##########\ncpp/src/arrow/json/test_common.h:\n##########\n@@ -99,7 +99,7 @@ struct GenerateImpl {\n   template <typename T>\n   enable_if_base_binary<T, Status> Visit(const T&) {\n     auto size = std::poisson_distribution<>{4}(e);\n-    std::uniform_int_distribution<uint16_t> gen_char(32, 127);  // FIXME generate UTF8\n+    std::uniform_int_distribution<uint16_t> gen_char(32, 126);  // FIXME generate UTF8\n\nReview Comment:\n   Probably. Is it forbidden in JSON?\n\n\n\n",
                    "created": "2022-09-22T08:46:23.126+0000",
                    "updated": "2022-09-22T08:46:23.126+0000",
                    "started": "2022-09-22T08:46:23.125+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811105",
                    "issueId": "13218486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218486/worklog/811106",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #14100:\nURL: https://github.com/apache/arrow/pull/14100#discussion_r977377593\n\n\n##########\ncpp/src/arrow/json/parser.cc:\n##########\n@@ -383,13 +392,14 @@ class RawArrayBuilder<Kind::kObject> {\n \n  private:\n   struct FieldInfo {\n-    string_view name;  // Backed by key's allocation in name_to_index_\n+    std::unique_ptr<std::string> name;\n     BuilderPtr builder;\n   };\n\nReview Comment:\n   A separate list sounds better. It might not even be much more costly (in both cases you have one extra allocation per string).\n\n\n\n",
                    "created": "2022-09-22T08:47:23.224+0000",
                    "updated": "2022-09-22T08:47:23.224+0000",
                    "started": "2022-09-22T08:47:23.224+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811106",
                    "issueId": "13218486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218486/worklog/811301",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "benibus commented on code in PR #14100:\nURL: https://github.com/apache/arrow/pull/14100#discussion_r977879255\n\n\n##########\ncpp/src/arrow/json/parser.cc:\n##########\n@@ -383,13 +392,14 @@ class RawArrayBuilder<Kind::kObject> {\n \n  private:\n   struct FieldInfo {\n-    string_view name;  // Backed by key's allocation in name_to_index_\n+    std::unique_ptr<std::string> name;\n     BuilderPtr builder;\n   };\n\nReview Comment:\n   I'm inclined to agree - seems like the right tradeoff.\n\n\n\n",
                    "created": "2022-09-22T16:43:47.353+0000",
                    "updated": "2022-09-22T16:43:47.353+0000",
                    "started": "2022-09-22T16:43:47.352+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811301",
                    "issueId": "13218486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218486/worklog/811303",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "benibus commented on code in PR #14100:\nURL: https://github.com/apache/arrow/pull/14100#discussion_r977880082\n\n\n##########\ncpp/src/arrow/json/parser_benchmark.cc:\n##########\n@@ -30,24 +30,50 @@\n namespace arrow {\n namespace json {\n \n-std::shared_ptr<Schema> TestSchema() {\n-  return schema({field(\"int\", int32()), field(\"str\", utf8())});\n-}\n-\n-constexpr int seed = 0x432432;\n-\n-std::string TestJsonData(int num_rows, bool pretty = false) {\n-  std::default_random_engine engine(seed);\n-  std::string json;\n-  for (int i = 0; i < num_rows; ++i) {\n-    StringBuffer sb;\n-    Writer writer(sb);\n-    ABORT_NOT_OK(Generate(TestSchema(), engine, &writer));\n-    json += pretty ? PrettyPrint(sb.GetString()) : sb.GetString();\n-    json += \"\\n\";\n+class JSONGenerator {\n+ public:\n+  constexpr static int kSeed = 0x432432;\n+\n+  constexpr explicit JSONGenerator(bool pretty = false) : pretty_(pretty) {}\n+\n+  template <typename T>\n+  std::string operator()(const T& input, int32_t num_rows) const {\n+    std::default_random_engine engine(kSeed);\n+    std::string json;\n+    for (int i = 0; i < num_rows; ++i) {\n+      StringBuffer sb;\n+      Writer writer(sb);\n+      ABORT_NOT_OK(Generate(input, engine, &writer));\n+      json += pretty_ ? PrettyPrint(sb.GetString()) : sb.GetString();\n+      json += \"\\n\";\n+    }\n+    return json;\n   }\n \n-  return json;\n+ private:\n+  bool pretty_;\n+};\n+\n+constexpr auto JSONString = JSONGenerator{false};\n+constexpr auto JSONStringPretty = JSONGenerator{true};\n+\n+// Both field sets are the worst-case ordering of each other - i.e. the parser cannot\n+// reliably predict the next field in B given the definition of A.\n+FieldVector TestFields1() {\n+  return {\n+      field(\"int\", int32()),\n+      field(\"str\", utf8()),\n+  };\n+}\n+FieldVector TestFields2() {\n+  return {\n+      field(\"str\", utf8()),\n+      field(\"int\", int32()),\n+  };\n+}\n\nReview Comment:\n   Alright, I'll add distinct benchmarks for longer schemas - in which case, I'll implement field randomization too.\r\n   \r\n   On another note, it seems worthwhile to get a control case for rapidjson on its own - possibly with a dummy handler. Thoughts?\n\n\n\n",
                    "created": "2022-09-22T16:44:42.534+0000",
                    "updated": "2022-09-22T16:44:42.534+0000",
                    "started": "2022-09-22T16:44:42.534+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811303",
                    "issueId": "13218486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218486/worklog/811309",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #14100:\nURL: https://github.com/apache/arrow/pull/14100#discussion_r977886048\n\n\n##########\ncpp/src/arrow/json/parser_benchmark.cc:\n##########\n@@ -30,24 +30,50 @@\n namespace arrow {\n namespace json {\n \n-std::shared_ptr<Schema> TestSchema() {\n-  return schema({field(\"int\", int32()), field(\"str\", utf8())});\n-}\n-\n-constexpr int seed = 0x432432;\n-\n-std::string TestJsonData(int num_rows, bool pretty = false) {\n-  std::default_random_engine engine(seed);\n-  std::string json;\n-  for (int i = 0; i < num_rows; ++i) {\n-    StringBuffer sb;\n-    Writer writer(sb);\n-    ABORT_NOT_OK(Generate(TestSchema(), engine, &writer));\n-    json += pretty ? PrettyPrint(sb.GetString()) : sb.GetString();\n-    json += \"\\n\";\n+class JSONGenerator {\n+ public:\n+  constexpr static int kSeed = 0x432432;\n+\n+  constexpr explicit JSONGenerator(bool pretty = false) : pretty_(pretty) {}\n+\n+  template <typename T>\n+  std::string operator()(const T& input, int32_t num_rows) const {\n+    std::default_random_engine engine(kSeed);\n+    std::string json;\n+    for (int i = 0; i < num_rows; ++i) {\n+      StringBuffer sb;\n+      Writer writer(sb);\n+      ABORT_NOT_OK(Generate(input, engine, &writer));\n+      json += pretty_ ? PrettyPrint(sb.GetString()) : sb.GetString();\n+      json += \"\\n\";\n+    }\n+    return json;\n   }\n \n-  return json;\n+ private:\n+  bool pretty_;\n+};\n+\n+constexpr auto JSONString = JSONGenerator{false};\n+constexpr auto JSONStringPretty = JSONGenerator{true};\n+\n+// Both field sets are the worst-case ordering of each other - i.e. the parser cannot\n+// reliably predict the next field in B given the definition of A.\n+FieldVector TestFields1() {\n+  return {\n+      field(\"int\", int32()),\n+      field(\"str\", utf8()),\n+  };\n+}\n+FieldVector TestFields2() {\n+  return {\n+      field(\"str\", utf8()),\n+      field(\"int\", int32()),\n+  };\n+}\n\nReview Comment:\n   Hmm, why not, that would give an idea of our own overhead.\n\n\n\n",
                    "created": "2022-09-22T16:51:33.292+0000",
                    "updated": "2022-09-22T16:51:33.292+0000",
                    "started": "2022-09-22T16:51:33.292+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811309",
                    "issueId": "13218486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218486/worklog/811316",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "benibus commented on code in PR #14100:\nURL: https://github.com/apache/arrow/pull/14100#discussion_r977892353\n\n\n##########\ncpp/src/arrow/json/test_common.h:\n##########\n@@ -99,7 +99,7 @@ struct GenerateImpl {\n   template <typename T>\n   enable_if_base_binary<T, Status> Visit(const T&) {\n     auto size = std::poisson_distribution<>{4}(e);\n-    std::uniform_int_distribution<uint16_t> gen_char(32, 127);  // FIXME generate UTF8\n+    std::uniform_int_distribution<uint16_t> gen_char(32, 126);  // FIXME generate UTF8\n\nReview Comment:\n   They're legal. It just seemed that the author meant to exclude non-printable characters entirely (although [x00-x1f need to be escaped but x7f doesn't](https://www.rfc-editor.org/rfc/rfc8259#section-7), apparently).\n\n\n\n",
                    "created": "2022-09-22T16:58:58.713+0000",
                    "updated": "2022-09-22T16:58:58.713+0000",
                    "started": "2022-09-22T16:58:58.712+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811316",
                    "issueId": "13218486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218486/worklog/811317",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #14100:\nURL: https://github.com/apache/arrow/pull/14100#discussion_r977894696\n\n\n##########\ncpp/src/arrow/json/test_common.h:\n##########\n@@ -99,7 +99,7 @@ struct GenerateImpl {\n   template <typename T>\n   enable_if_base_binary<T, Status> Visit(const T&) {\n     auto size = std::poisson_distribution<>{4}(e);\n-    std::uniform_int_distribution<uint16_t> gen_char(32, 127);  // FIXME generate UTF8\n+    std::uniform_int_distribution<uint16_t> gen_char(32, 126);  // FIXME generate UTF8\n\nReview Comment:\n   Probably not very important either...\n\n\n\n",
                    "created": "2022-09-22T17:01:23.974+0000",
                    "updated": "2022-09-22T17:01:23.974+0000",
                    "started": "2022-09-22T17:01:23.974+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811317",
                    "issueId": "13218486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218486/worklog/820925",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on PR #14100:\nURL: https://github.com/apache/arrow/pull/14100#issuecomment-1293354603\n\n   Thanks @benibus . I think it would be nice to first submit the benchmark changes as a separate PR. That way, we'll be able to better compare the performance changes after the optimization lands.\r\n   \r\n   (also, you should rebase/merge from latest git master)\n\n\n",
                    "created": "2022-10-27T11:01:22.000+0000",
                    "updated": "2022-10-27T11:01:22.000+0000",
                    "started": "2022-10-27T11:01:21.999+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "820925",
                    "issueId": "13218486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218486/worklog/820928",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on PR #14100:\nURL: https://github.com/apache/arrow/pull/14100#issuecomment-1293357929\n\n   For the record, I think the benchmarks should have another parameter: the proportion of \"present\" fields.\r\n   Currently it's implicitly 1.0, i.e. all fields are present in every row; but we should benchmark for a couple different values, e.g. 1.0, 0.9 and 0.1.\n\n\n",
                    "created": "2022-10-27T11:03:45.987+0000",
                    "updated": "2022-10-27T11:03:45.987+0000",
                    "started": "2022-10-27T11:03:45.986+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "820928",
                    "issueId": "13218486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218486/worklog/821147",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "benibus commented on PR #14100:\nURL: https://github.com/apache/arrow/pull/14100#issuecomment-1293939906\n\n   > I think it would be nice to first submit the benchmark changes as a separate PR.\r\n   \r\n   Will do. Should I keep this one open or convert it to a draft until the separate PR is merged?\r\n   \r\n   Also, I reverted the benchmarks in a new commit rather than drop the old commits ...not sure if that matters. I have a patch for it in any case.\n\n\n",
                    "created": "2022-10-27T18:57:48.702+0000",
                    "updated": "2022-10-27T18:57:48.702+0000",
                    "started": "2022-10-27T18:57:48.701+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "821147",
                    "issueId": "13218486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218486/worklog/821167",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on PR #14100:\nURL: https://github.com/apache/arrow/pull/14100#issuecomment-1293996705\n\n   > Will do. Should I keep this one open or convert it to a draft until the separate PR is merged?\r\n   \r\n   Converting to draft sounds fine.\r\n   \r\n   > Also, I reverted the benchmarks in a new commit rather than drop the old commits ...not sure if that matters. I have a patch for it in any case.\r\n   \r\n   I don't think it matters. In any case you'll have to rebase/merge once the benchmarks are merged :-)\n\n\n",
                    "created": "2022-10-27T19:54:53.230+0000",
                    "updated": "2022-10-27T19:54:53.230+0000",
                    "started": "2022-10-27T19:54:53.230+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "821167",
                    "issueId": "13218486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218486/worklog/822423",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "benibus commented on PR #14100:\nURL: https://github.com/apache/arrow/pull/14100#issuecomment-1298887149\n\n   The benchmark PR is now up: https://github.com/apache/arrow/pull/14552.\n\n\n",
                    "created": "2022-11-01T17:43:59.840+0000",
                    "updated": "2022-11-01T17:43:59.840+0000",
                    "started": "2022-11-01T17:43:59.840+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "822423",
                    "issueId": "13218486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218486/worklog/825935",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "benibus commented on PR #14100:\nURL: https://github.com/apache/arrow/pull/14100#issuecomment-1314562078\n\n   Rebased on the latest changes.\r\n   \r\n   I compared against master locally and I'm seeing roughly +12/16/25% bytes/sec for 10/100/1000 fields (in the ordered/non-sparse cases).\n\n\n",
                    "created": "2022-11-14T23:51:43.103+0000",
                    "updated": "2022-11-14T23:51:43.103+0000",
                    "started": "2022-11-14T23:51:43.103+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "825935",
                    "issueId": "13218486"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218486/worklog/826211",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on PR #14100:\nURL: https://github.com/apache/arrow/pull/14100#issuecomment-1315595870\n\n   Right, it seems the speedup is relatively minor. I get these results:\r\n   ```\r\n   --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n   Non-regressions: (39)\r\n   --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                                                        benchmark        baseline       contender  change %                                                                                                                                                                                                                            counters\r\n    ParseJSONFields/ordered:1/schema:1/sparsity:0/num_fields:1000 141.204 MiB/sec 163.772 MiB/sec    15.983  {'family_index': 5, 'per_family_instance_index': 24, 'run_name': 'ParseJSONFields/ordered:1/schema:1/sparsity:0/num_fields:1000', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 23, 'json_size': 4544425.0}\r\n    ParseJSONFields/ordered:1/schema:0/sparsity:0/num_fields:1000 137.627 MiB/sec 158.607 MiB/sec    15.244  {'family_index': 5, 'per_family_instance_index': 26, 'run_name': 'ParseJSONFields/ordered:1/schema:0/sparsity:0/num_fields:1000', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 22, 'json_size': 4544425.0}\r\n     ParseJSONFields/ordered:1/schema:1/sparsity:0/num_fields:100 149.699 MiB/sec 167.002 MiB/sec    11.559   {'family_index': 5, 'per_family_instance_index': 12, 'run_name': 'ParseJSONFields/ordered:1/schema:1/sparsity:0/num_fields:100', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 259, 'json_size': 424102.0}\r\n     ParseJSONFields/ordered:1/schema:0/sparsity:0/num_fields:100 146.855 MiB/sec 163.307 MiB/sec    11.202   {'family_index': 5, 'per_family_instance_index': 14, 'run_name': 'ParseJSONFields/ordered:1/schema:0/sparsity:0/num_fields:100', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 253, 'json_size': 424102.0}\r\n                                           ChunkJSONLineDelimited       97.748902      104.282934     6.685                                      {'family_index': 1, 'per_family_instance_index': 0, 'run_name': 'ChunkJSONLineDelimited', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 7071295, 'json_size': 150361.0}\r\n                                         ParseJSONBlockWithSchema 136.226 MiB/sec 138.375 MiB/sec     1.577                                        {'family_index': 2, 'per_family_instance_index': 0, 'run_name': 'ParseJSONBlockWithSchema', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 664, 'json_size': 150361.0}\r\n      ParseJSONFields/ordered:1/schema:1/sparsity:0/num_fields:10 193.421 MiB/sec 195.560 MiB/sec     1.106     {'family_index': 5, 'per_family_instance_index': 0, 'run_name': 'ParseJSONFields/ordered:1/schema:1/sparsity:0/num_fields:10', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 291, 'json_size': 483895.0}\r\n      ParseJSONFields/ordered:1/schema:0/sparsity:0/num_fields:10 192.316 MiB/sec 194.350 MiB/sec     1.058     {'family_index': 5, 'per_family_instance_index': 2, 'run_name': 'ParseJSONFields/ordered:1/schema:0/sparsity:0/num_fields:10', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 287, 'json_size': 483895.0}\r\n      ParseJSONFields/ordered:0/schema:1/sparsity:0/num_fields:10 179.680 MiB/sec 180.962 MiB/sec     0.714     {'family_index': 5, 'per_family_instance_index': 1, 'run_name': 'ParseJSONFields/ordered:0/schema:1/sparsity:0/num_fields:10', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 272, 'json_size': 484344.0}\r\n                              ReadJSONBlockWithSchemaSingleThread 117.169 MiB/sec 117.609 MiB/sec     0.376                             {'family_index': 3, 'per_family_instance_index': 0, 'run_name': 'ReadJSONBlockWithSchemaSingleThread', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 6, 'json_size': 15026882.0}\r\n     ParseJSONFields/ordered:0/schema:1/sparsity:0/num_fields:100 143.278 MiB/sec 141.908 MiB/sec    -0.957   {'family_index': 5, 'per_family_instance_index': 13, 'run_name': 'ParseJSONFields/ordered:0/schema:1/sparsity:0/num_fields:100', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 248, 'json_size': 424088.0}\r\n    ParseJSONFields/ordered:1/schema:1/sparsity:10/num_fields:100 144.507 MiB/sec 142.969 MiB/sec    -1.064  {'family_index': 5, 'per_family_instance_index': 16, 'run_name': 'ParseJSONFields/ordered:1/schema:1/sparsity:10/num_fields:100', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 248, 'json_size': 425955.0}\r\n    ParseJSONFields/ordered:0/schema:1/sparsity:10/num_fields:100 139.161 MiB/sec 137.485 MiB/sec    -1.204  {'family_index': 5, 'per_family_instance_index': 17, 'run_name': 'ParseJSONFields/ordered:0/schema:1/sparsity:10/num_fields:100', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 241, 'json_size': 422790.0}\r\n     ParseJSONFields/ordered:1/schema:0/sparsity:10/num_fields:10 184.568 MiB/sec 182.084 MiB/sec    -1.346    {'family_index': 5, 'per_family_instance_index': 6, 'run_name': 'ParseJSONFields/ordered:1/schema:0/sparsity:10/num_fields:10', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 281, 'json_size': 482610.0}\r\n    ParseJSONFields/ordered:0/schema:0/sparsity:10/num_fields:100 135.707 MiB/sec 133.874 MiB/sec    -1.351  {'family_index': 5, 'per_family_instance_index': 19, 'run_name': 'ParseJSONFields/ordered:0/schema:0/sparsity:10/num_fields:100', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 236, 'json_size': 422790.0}\r\n     ParseJSONFields/ordered:1/schema:1/sparsity:10/num_fields:10 190.419 MiB/sec 187.804 MiB/sec    -1.373    {'family_index': 5, 'per_family_instance_index': 4, 'run_name': 'ParseJSONFields/ordered:1/schema:1/sparsity:10/num_fields:10', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 289, 'json_size': 482610.0}\r\n     ParseJSONFields/ordered:0/schema:1/sparsity:90/num_fields:10  63.273 MiB/sec  62.386 MiB/sec    -1.402     {'family_index': 5, 'per_family_instance_index': 9, 'run_name': 'ParseJSONFields/ordered:0/schema:1/sparsity:90/num_fields:10', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 87, 'json_size': 530883.0}\r\n     ParseJSONFields/ordered:1/schema:1/sparsity:90/num_fields:10  62.917 MiB/sec  62.032 MiB/sec    -1.406     {'family_index': 5, 'per_family_instance_index': 8, 'run_name': 'ParseJSONFields/ordered:1/schema:1/sparsity:90/num_fields:10', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 88, 'json_size': 524228.0}\r\n    ParseJSONFields/ordered:1/schema:0/sparsity:10/num_fields:100 141.608 MiB/sec 139.480 MiB/sec    -1.503  {'family_index': 5, 'per_family_instance_index': 18, 'run_name': 'ParseJSONFields/ordered:1/schema:0/sparsity:10/num_fields:100', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 244, 'json_size': 425955.0}\r\n     ParseJSONFields/ordered:0/schema:0/sparsity:0/num_fields:100 140.454 MiB/sec 138.317 MiB/sec    -1.521   {'family_index': 5, 'per_family_instance_index': 15, 'run_name': 'ParseJSONFields/ordered:0/schema:0/sparsity:0/num_fields:100', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 244, 'json_size': 424088.0}\r\n     ParseJSONFields/ordered:0/schema:1/sparsity:10/num_fields:10 177.692 MiB/sec 174.088 MiB/sec    -2.028    {'family_index': 5, 'per_family_instance_index': 5, 'run_name': 'ParseJSONFields/ordered:0/schema:1/sparsity:10/num_fields:10', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 268, 'json_size': 485740.0}\r\n   ParseJSONFields/ordered:1/schema:1/sparsity:10/num_fields:1000 135.271 MiB/sec 132.217 MiB/sec    -2.258 {'family_index': 5, 'per_family_instance_index': 28, 'run_name': 'ParseJSONFields/ordered:1/schema:1/sparsity:10/num_fields:1000', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 24, 'json_size': 4085536.0}\r\n      ParseJSONFields/ordered:0/schema:0/sparsity:0/num_fields:10 180.369 MiB/sec 176.281 MiB/sec    -2.267     {'family_index': 5, 'per_family_instance_index': 3, 'run_name': 'ParseJSONFields/ordered:0/schema:0/sparsity:0/num_fields:10', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 274, 'json_size': 484344.0}\r\n    ParseJSONFields/ordered:0/schema:0/sparsity:90/num_fields:100  48.815 MiB/sec  47.630 MiB/sec    -2.427   {'family_index': 5, 'per_family_instance_index': 23, 'run_name': 'ParseJSONFields/ordered:0/schema:0/sparsity:90/num_fields:100', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 84, 'json_size': 425534.0}\r\n     ParseJSONFields/ordered:0/schema:0/sparsity:10/num_fields:10 173.820 MiB/sec 169.515 MiB/sec    -2.477    {'family_index': 5, 'per_family_instance_index': 7, 'run_name': 'ParseJSONFields/ordered:0/schema:0/sparsity:10/num_fields:10', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 262, 'json_size': 485740.0}\r\n                                           ChunkJSONPrettyPrinted 305.981 MiB/sec 298.223 MiB/sec    -2.536                                         {'family_index': 0, 'per_family_instance_index': 0, 'run_name': 'ChunkJSONPrettyPrinted', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 1033, 'json_size': 215361.0}\r\n    ParseJSONFields/ordered:1/schema:1/sparsity:90/num_fields:100  49.710 MiB/sec  48.375 MiB/sec    -2.685   {'family_index': 5, 'per_family_instance_index': 20, 'run_name': 'ParseJSONFields/ordered:1/schema:1/sparsity:90/num_fields:100', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 84, 'json_size': 430278.0}\r\n    ParseJSONFields/ordered:0/schema:1/sparsity:90/num_fields:100  49.334 MiB/sec  47.915 MiB/sec    -2.878   {'family_index': 5, 'per_family_instance_index': 21, 'run_name': 'ParseJSONFields/ordered:0/schema:1/sparsity:90/num_fields:100', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 85, 'json_size': 425534.0}\r\n   ParseJSONFields/ordered:0/schema:1/sparsity:10/num_fields:1000 130.316 MiB/sec 126.470 MiB/sec    -2.951 {'family_index': 5, 'per_family_instance_index': 29, 'run_name': 'ParseJSONFields/ordered:0/schema:1/sparsity:10/num_fields:1000', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 23, 'json_size': 4088946.0}\r\n    ParseJSONFields/ordered:0/schema:1/sparsity:0/num_fields:1000 134.779 MiB/sec 130.799 MiB/sec    -2.953  {'family_index': 5, 'per_family_instance_index': 25, 'run_name': 'ParseJSONFields/ordered:0/schema:1/sparsity:0/num_fields:1000', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 22, 'json_size': 4546025.0}\r\n    ParseJSONFields/ordered:1/schema:0/sparsity:90/num_fields:100  49.652 MiB/sec  48.147 MiB/sec    -3.031   {'family_index': 5, 'per_family_instance_index': 22, 'run_name': 'ParseJSONFields/ordered:1/schema:0/sparsity:90/num_fields:100', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 85, 'json_size': 430278.0}\r\n     ParseJSONFields/ordered:0/schema:0/sparsity:90/num_fields:10  62.658 MiB/sec  60.611 MiB/sec    -3.267    {'family_index': 5, 'per_family_instance_index': 11, 'run_name': 'ParseJSONFields/ordered:0/schema:0/sparsity:90/num_fields:10', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 86, 'json_size': 530883.0}\r\n   ParseJSONFields/ordered:1/schema:0/sparsity:10/num_fields:1000 131.295 MiB/sec 126.847 MiB/sec    -3.388 {'family_index': 5, 'per_family_instance_index': 30, 'run_name': 'ParseJSONFields/ordered:1/schema:0/sparsity:10/num_fields:1000', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 24, 'json_size': 4085536.0}\r\n   ParseJSONFields/ordered:0/schema:0/sparsity:10/num_fields:1000 126.625 MiB/sec 121.335 MiB/sec    -4.178 {'family_index': 5, 'per_family_instance_index': 31, 'run_name': 'ParseJSONFields/ordered:0/schema:0/sparsity:10/num_fields:1000', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 23, 'json_size': 4088946.0}\r\n   ParseJSONFields/ordered:1/schema:0/sparsity:90/num_fields:1000  43.432 MiB/sec  41.614 MiB/sec    -4.187  {'family_index': 5, 'per_family_instance_index': 34, 'run_name': 'ParseJSONFields/ordered:1/schema:0/sparsity:90/num_fields:1000', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 70, 'json_size': 457089.0}\r\n    ParseJSONFields/ordered:0/schema:0/sparsity:0/num_fields:1000 131.544 MiB/sec 125.765 MiB/sec    -4.393  {'family_index': 5, 'per_family_instance_index': 27, 'run_name': 'ParseJSONFields/ordered:0/schema:0/sparsity:0/num_fields:1000', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 21, 'json_size': 4546025.0}\r\n   ParseJSONFields/ordered:0/schema:1/sparsity:90/num_fields:1000  43.140 MiB/sec  41.204 MiB/sec    -4.488  {'family_index': 5, 'per_family_instance_index': 33, 'run_name': 'ParseJSONFields/ordered:0/schema:1/sparsity:90/num_fields:1000', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 70, 'json_size': 454665.0}\r\n   ParseJSONFields/ordered:1/schema:1/sparsity:90/num_fields:1000  43.505 MiB/sec  41.523 MiB/sec    -4.556  {'family_index': 5, 'per_family_instance_index': 32, 'run_name': 'ParseJSONFields/ordered:1/schema:1/sparsity:90/num_fields:1000', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 70, 'json_size': 457089.0}\r\n   ParseJSONFields/ordered:0/schema:0/sparsity:90/num_fields:1000  43.536 MiB/sec  41.527 MiB/sec    -4.615  {'family_index': 5, 'per_family_instance_index': 35, 'run_name': 'ParseJSONFields/ordered:0/schema:0/sparsity:90/num_fields:1000', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 70, 'json_size': 454665.0}\r\n   \r\n   ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n   Regressions: (2)\r\n   ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n                                                      benchmark        baseline       contender  change %                                                                                                                                                                                                                         counters\r\n   ParseJSONFields/ordered:1/schema:0/sparsity:90/num_fields:10  63.104 MiB/sec  60.157 MiB/sec    -4.670 {'family_index': 5, 'per_family_instance_index': 10, 'run_name': 'ParseJSONFields/ordered:1/schema:0/sparsity:90/num_fields:10', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 88, 'json_size': 524228.0}\r\n                   ReadJSONBlockWithSchemaMultiThread/real_time 752.152 MiB/sec 695.624 MiB/sec    -7.515                {'family_index': 4, 'per_family_instance_index': 0, 'run_name': 'ReadJSONBlockWithSchemaMultiThread/real_time', 'repetitions': 1, 'repetition_index': 0, 'threads': 1, 'iterations': 36, 'json_size': 15026882.0}\r\n   ```\n\n\n",
                    "created": "2022-11-15T16:52:09.120+0000",
                    "updated": "2022-11-15T16:52:09.120+0000",
                    "started": "2022-11-15T16:52:09.119+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "826211",
                    "issueId": "13218486"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 13200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@59e6bc89[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@568929e6[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@19fe6ee8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@627b228[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1f125119[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6e425df2[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@421e7fc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3faca3a2[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@323ba7d7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4e6ac1af[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@457fc199[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1f94db27[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13200,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Sep 02 17:14:39 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4709/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2019-02-27T23:30:06.000+0000",
        "updated": "2022-11-16T18:29:43.000+0000",
        "timeoriginalestimate": null,
        "description": "Fields appear consistently ordered in most JSON data in the wild, but the JSON parser currently looks fields up in a hash table. The ordering can probably be exploited to yield better performance when looking up field indices",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Optimize for ordered JSON fields",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13218486/comment/17599627",
                    "id": "17599627",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "cc [~benpharkins] if you'd like to tackle a performance issue at some point.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-09-02T17:14:39.595+0000",
                    "updated": "2022-09-02T17:14:39.595+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z005vk:",
        "customfield_12314139": null
    }
}