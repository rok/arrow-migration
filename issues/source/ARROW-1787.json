{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13117405",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117405",
    "key": "ARROW-1787",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341666",
                "id": "12341666",
                "name": "0.7.1",
                "archived": false,
                "released": true,
                "releaseDate": "2017-10-01"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
            "name": "cpcloud",
            "key": "cpcloud",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
            },
            "displayName": "Phillip Cloud",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
            "name": "cpcloud",
            "key": "cpcloud",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
            },
            "displayName": "Phillip Cloud",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
            "name": "cpcloud",
            "key": "cpcloud",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
            },
            "displayName": "Phillip Cloud",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1787/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@54b1780d[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2bc83594[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@425869d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6e2b6718[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@26f2bfc8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@229ab303[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@a23c8a3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3f856d58[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@cba999f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7b4f31a0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6fbd98ba[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7b46d7b8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Nov 11 22:10:08 UTC 2017",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2017-11-11T22:10:08.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1787/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2017-11-09T21:55:43.000+0000",
        "updated": "2017-11-11T22:10:08.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Support reading parquet files into DataFrames in a backward compatible way",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117405/comment/16247586",
                    "id": "16247586",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1298: ARROW-1787: [Python] Support reading parquet files into DataFrames in a backward compatible way\nURL: https://github.com/apache/arrow/pull/1298#issuecomment-343489848\n \n \n   May need to use `BytesIO` in the test case\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-10T14:38:39.880+0000",
                    "updated": "2017-11-10T14:38:39.880+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117405/comment/16248145",
                    "id": "16248145",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1298: ARROW-1787: [Python] Support reading parquet files into DataFrames in a backward compatible way\nURL: https://github.com/apache/arrow/pull/1298#issuecomment-343611503\n \n \n   This needs at least one additional test for columns with named indexes. I'll crank this out early tomorrow.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-10T23:13:16.627+0000",
                    "updated": "2017-11-10T23:13:16.627+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117405/comment/16248632",
                    "id": "16248632",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1298: ARROW-1787: [Python] Support reading parquet files into DataFrames in a backward compatible way\nURL: https://github.com/apache/arrow/pull/1298#issuecomment-343688704\n \n \n   @wesm This is ready for review when you have a chance.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-11T19:34:16.009+0000",
                    "updated": "2017-11-11T19:34:16.009+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117405/comment/16248696",
                    "id": "16248696",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1298: ARROW-1787: [Python] Support reading parquet files into DataFrames in a backward compatible way\nURL: https://github.com/apache/arrow/pull/1298\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/python/pyarrow/pandas_compat.py b/python/pyarrow/pandas_compat.py\nindex 87b47b8a6..db28ee09e 100644\n--- a/python/pyarrow/pandas_compat.py\n+++ b/python/pyarrow/pandas_compat.py\n@@ -18,6 +18,7 @@\n import ast\n import collections\n import json\n+import re\n \n import numpy as np\n import pandas as pd\n@@ -353,6 +354,14 @@ def make_datetimetz(tz):\n     return DatetimeTZDtype('ns', tz=tz)\n \n \n+def backwards_compatible_index_name(raw_name, logical_name):\n+    pattern = r'^__index_level_\\d+__$'\n+    if raw_name == logical_name and re.match(pattern, raw_name) is not None:\n+        return None\n+    else:\n+        return logical_name\n+\n+\n def table_to_blockmanager(options, table, memory_pool, nthreads=1):\n     import pandas.core.internals as _int\n     import pyarrow.lib as lib\n@@ -394,7 +403,9 @@ def table_to_blockmanager(options, table, memory_pool, nthreads=1):\n                 values = values.copy()\n \n             index_arrays.append(pd.Series(values, dtype=col_pandas.dtype))\n-            index_names.append(logical_name)\n+            index_names.append(\n+                backwards_compatible_index_name(raw_name, logical_name)\n+            )\n             block_table = block_table.remove_column(\n                 block_table.schema.get_field_index(raw_name)\n             )\ndiff --git a/python/pyarrow/tests/data/v0.7.1.all-named-index.parquet b/python/pyarrow/tests/data/v0.7.1.all-named-index.parquet\nnew file mode 100644\nindex 000000000..e9efd9b39\nBinary files /dev/null and b/python/pyarrow/tests/data/v0.7.1.all-named-index.parquet differ\ndiff --git a/python/pyarrow/tests/data/v0.7.1.parquet b/python/pyarrow/tests/data/v0.7.1.parquet\nnew file mode 100644\nindex 000000000..44670bcd1\nBinary files /dev/null and b/python/pyarrow/tests/data/v0.7.1.parquet differ\ndiff --git a/python/pyarrow/tests/data/v0.7.1.some-named-index.parquet b/python/pyarrow/tests/data/v0.7.1.some-named-index.parquet\nnew file mode 100644\nindex 000000000..34097ca12\nBinary files /dev/null and b/python/pyarrow/tests/data/v0.7.1.some-named-index.parquet differ\ndiff --git a/python/pyarrow/tests/test_parquet.py b/python/pyarrow/tests/test_parquet.py\nindex e2e6863c4..6ba4fd2fa 100644\n--- a/python/pyarrow/tests/test_parquet.py\n+++ b/python/pyarrow/tests/test_parquet.py\n@@ -1458,3 +1458,76 @@ def test_index_column_name_duplicate(tmpdir):\n     arrow_table = _read_table(path)\n     result_df = arrow_table.to_pandas()\n     tm.assert_frame_equal(result_df, dfx)\n+\n+\n+def test_backwards_compatible_index_naming():\n+    expected_string = b\"\"\"\\\n+carat        cut  color  clarity  depth  table  price     x     y     z\n+ 0.23      Ideal      E      SI2   61.5   55.0    326  3.95  3.98  2.43\n+ 0.21    Premium      E      SI1   59.8   61.0    326  3.89  3.84  2.31\n+ 0.23       Good      E      VS1   56.9   65.0    327  4.05  4.07  2.31\n+ 0.29    Premium      I      VS2   62.4   58.0    334  4.20  4.23  2.63\n+ 0.31       Good      J      SI2   63.3   58.0    335  4.34  4.35  2.75\n+ 0.24  Very Good      J     VVS2   62.8   57.0    336  3.94  3.96  2.48\n+ 0.24  Very Good      I     VVS1   62.3   57.0    336  3.95  3.98  2.47\n+ 0.26  Very Good      H      SI1   61.9   55.0    337  4.07  4.11  2.53\n+ 0.22       Fair      E      VS2   65.1   61.0    337  3.87  3.78  2.49\n+ 0.23  Very Good      H      VS1   59.4   61.0    338  4.00  4.05  2.39\"\"\"\n+    expected = pd.read_csv(\n+        io.BytesIO(expected_string), sep=r'\\s{2,}', index_col=None, header=0\n+    )\n+    path = os.path.join(os.path.dirname(__file__), 'data', 'v0.7.1.parquet')\n+    t = _read_table(path)\n+    result = t.to_pandas()\n+    tm.assert_frame_equal(result, expected)\n+\n+\n+def test_backwards_compatible_index_multi_level_named():\n+    expected_string = b\"\"\"\\\n+carat        cut  color  clarity  depth  table  price     x     y     z\n+ 0.23      Ideal      E      SI2   61.5   55.0    326  3.95  3.98  2.43\n+ 0.21    Premium      E      SI1   59.8   61.0    326  3.89  3.84  2.31\n+ 0.23       Good      E      VS1   56.9   65.0    327  4.05  4.07  2.31\n+ 0.29    Premium      I      VS2   62.4   58.0    334  4.20  4.23  2.63\n+ 0.31       Good      J      SI2   63.3   58.0    335  4.34  4.35  2.75\n+ 0.24  Very Good      J     VVS2   62.8   57.0    336  3.94  3.96  2.48\n+ 0.24  Very Good      I     VVS1   62.3   57.0    336  3.95  3.98  2.47\n+ 0.26  Very Good      H      SI1   61.9   55.0    337  4.07  4.11  2.53\n+ 0.22       Fair      E      VS2   65.1   61.0    337  3.87  3.78  2.49\n+ 0.23  Very Good      H      VS1   59.4   61.0    338  4.00  4.05  2.39\"\"\"\n+    expected = pd.read_csv(\n+        io.BytesIO(expected_string),\n+        sep=r'\\s{2,}', index_col=['cut', 'color', 'clarity'], header=0\n+    ).sort_index()\n+    path = os.path.join(\n+        os.path.dirname(__file__), 'data', 'v0.7.1.all-named-index.parquet'\n+    )\n+    t = _read_table(path)\n+    result = t.to_pandas()\n+    tm.assert_frame_equal(result, expected)\n+\n+\n+def test_backwards_compatible_index_multi_level_some_named():\n+    expected_string = b\"\"\"\\\n+carat        cut  color  clarity  depth  table  price     x     y     z\n+ 0.23      Ideal      E      SI2   61.5   55.0    326  3.95  3.98  2.43\n+ 0.21    Premium      E      SI1   59.8   61.0    326  3.89  3.84  2.31\n+ 0.23       Good      E      VS1   56.9   65.0    327  4.05  4.07  2.31\n+ 0.29    Premium      I      VS2   62.4   58.0    334  4.20  4.23  2.63\n+ 0.31       Good      J      SI2   63.3   58.0    335  4.34  4.35  2.75\n+ 0.24  Very Good      J     VVS2   62.8   57.0    336  3.94  3.96  2.48\n+ 0.24  Very Good      I     VVS1   62.3   57.0    336  3.95  3.98  2.47\n+ 0.26  Very Good      H      SI1   61.9   55.0    337  4.07  4.11  2.53\n+ 0.22       Fair      E      VS2   65.1   61.0    337  3.87  3.78  2.49\n+ 0.23  Very Good      H      VS1   59.4   61.0    338  4.00  4.05  2.39\"\"\"\n+    expected = pd.read_csv(\n+        io.BytesIO(expected_string),\n+        sep=r'\\s{2,}', index_col=['cut', 'color', 'clarity'], header=0\n+    ).sort_index()\n+    expected.index = expected.index.set_names(['cut', None, 'clarity'])\n+    path = os.path.join(\n+        os.path.dirname(__file__), 'data', 'v0.7.1.some-named-index.parquet'\n+    )\n+    t = _read_table(path)\n+    result = t.to_pandas()\n+    tm.assert_frame_equal(result, expected)\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-11T22:10:02.234+0000",
                    "updated": "2017-11-11T22:10:02.234+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13117405/comment/16248697",
                    "id": "16248697",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1298\n[https://github.com/apache/arrow/pull/1298]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-11-11T22:10:08.256+0000",
                    "updated": "2017-11-11T22:10:08.256+0000"
                }
            ],
            "maxResults": 5,
            "total": 5,
            "startAt": 0
        },
        "customfield_12311820": "0|i3mm6v:",
        "customfield_12314139": null
    }
}