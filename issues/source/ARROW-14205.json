{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13404581",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404581",
    "key": "ARROW-14205",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=okadakk",
            "name": "okadakk",
            "key": "okadakk",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Keisuke Okada",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=okadakk",
            "name": "okadakk",
            "key": "okadakk",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Keisuke Okada",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 33000,
            "total": 33000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 33000,
            "total": 33000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14205/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 55,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404581/worklog/659211",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11298:\nURL: https://github.com/apache/arrow/pull/11298#issuecomment-932724960\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-02T09:54:57.086+0000",
                    "updated": "2021-10-02T09:54:57.086+0000",
                    "started": "2021-10-02T09:54:57.085+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "659211",
                    "issueId": "13404581"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404581/worklog/659266",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on a change in pull request #11298:\nURL: https://github.com/apache/arrow/pull/11298#discussion_r720711626\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string_test.cc\n##########\n@@ -449,6 +449,30 @@ TYPED_TEST(TestStringKernels, Utf8Reverse) {\n   ASSERT_TRUE(res->array()->buffers[1]->Equals(*malformed_input->data()->buffers[1]));\n }\n \n+TYPED_TEST(TestStringKernels, Utf8Nfd) {\n+  this->CheckUnary(\"utf8_nfd\", \"[]\", this->type(), \"[]\");\n+  this->CheckUnary(\"utf8_nfd\", R\"([\"\u2460\u24613\", null, \"\", \"\u00e1\u00e9\u00ed\ufb01 0\ud83d\ude00\"])\", this->type(),\n+                   R\"([\"\u2460\u24613\", null, \"\", \"a\u0301e\u0301i\u0301\ufb01 0\ud83d\ude00\"])\");\n+}\n+\n+TYPED_TEST(TestStringKernels, Utf8Nfkd) {\n+  this->CheckUnary(\"utf8_nfkd\", \"[]\", this->type(), \"[]\");\n+  this->CheckUnary(\"utf8_nfkd\", R\"([\"\u2460\u24613\", null, \"\", \"\u00e1\u00e9\u00ed\ufb01 0\ud83d\ude00\"])\", this->type(),\n+                   R\"([\"123\", null, \"\", \"a\u0301e\u0301i\u0301fi 0\ud83d\ude00\"])\");\n+}\n+\n+TYPED_TEST(TestStringKernels, Utf8Nfc) {\n+  this->CheckUnary(\"utf8_nfc\", \"[]\", this->type(), \"[]\");\n+  this->CheckUnary(\"utf8_nfc\", R\"([\"\u2460\u24613\", null, \"\", \"\u00e1\u00e9\u00ed\ufb01 0\ud83d\ude00\"])\", this->type(),\n+                   R\"([\"\u2460\u24613\", null, \"\", \"\u00e1\u00e9\u00ed\ufb01 0\ud83d\ude00\"])\");\n+}\n\nReview comment:\n       It would be good to have test cases that do change input string when normalized. Similarly, for `utf8_nfd`.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-02T18:20:52.916+0000",
                    "updated": "2021-10-02T18:20:52.916+0000",
                    "started": "2021-10-02T18:20:52.915+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "659266",
                    "issueId": "13404581"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404581/worklog/659268",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on a change in pull request #11298:\nURL: https://github.com/apache/arrow/pull/11298#discussion_r720712341\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -4299,6 +4390,10 @@ void RegisterScalarStringAscii(FunctionRegistry* registry) {\n                                                   &utf8_ltrim_whitespace_doc);\n   MakeUnaryStringBatchKernel<UTF8RTrimWhitespace>(\"utf8_rtrim_whitespace\", registry,\n                                                   &utf8_rtrim_whitespace_doc);\n+  MakeUnaryStringBatchKernel<Utf8Nfd>(\"utf8_nfd\", registry, &utf8_nfd_doc);\n+  MakeUnaryStringBatchKernel<Utf8Nfkd>(\"utf8_nfkd\", registry, &utf8_nfkd_doc);\n+  MakeUnaryStringBatchKernel<Utf8Nfc>(\"utf8_nfc\", registry, &utf8_nfc_doc);\n+  MakeUnaryStringBatchKernel<Utf8Nfkc>(\"utf8_nfkc\", registry, &utf8_nfkc_doc);\n\nReview comment:\n       I am curious if we should have a single normalization kernel and have `NormalizationFormOptions` be provided as a `FunctionOptions`. Also, `NormalizationFormOptions` could be part of `FunctionOptions` for all the other `utf8_xxx` compute functions.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-02T18:27:11.412+0000",
                    "updated": "2021-10-02T18:27:11.412+0000",
                    "started": "2021-10-02T18:27:11.411+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "659268",
                    "issueId": "13404581"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404581/worklog/659269",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on a change in pull request #11298:\nURL: https://github.com/apache/arrow/pull/11298#discussion_r720712933\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -592,6 +592,70 @@ struct Utf8ReverseTransform : public StringTransformBase {\n template <typename Type>\n using Utf8Reverse = StringTransformExec<Type, Utf8ReverseTransform>;\n \n+struct Utf8NfTransformBase : public StringTransformBase {\n+  int64_t MaxCodeunits(int64_t ninputs, int64_t input_ncodeunits) override {\n+    // Section 5.18 of the Unicode spec claims that the number of codepoints for case\n\nReview comment:\n       Should inherit from [`FunctionalCaseMappingTransform`](https://github.com/apache/arrow/blob/master/cpp/src/arrow/compute/kernels/scalar_string.cc#L423) which already provides the growth-aware `MaxCodeunits`.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-02T18:33:45.296+0000",
                    "updated": "2021-10-02T18:33:45.296+0000",
                    "started": "2021-10-02T18:33:45.296+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "659269",
                    "issueId": "13404581"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404581/worklog/659270",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on pull request #11298:\nURL: https://github.com/apache/arrow/pull/11298#issuecomment-932800313\n\n\n   Kernels and tests that make use of `utf8proc.h` need to be guarded with `#ifdef ARROW_WITH_UTF8PROC`. I suggest that you move the normalization kernels alongside the other UTF8 kernels which are guarded.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-02T18:35:30.673+0000",
                    "updated": "2021-10-02T18:35:30.673+0000",
                    "started": "2021-10-02T18:35:30.673+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "659270",
                    "issueId": "13404581"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404581/worklog/659274",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #11298:\nURL: https://github.com/apache/arrow/pull/11298#issuecomment-932805055\n\n\n   @kevingurney Could you confirm the MATLAB test failure? https://github.com/apache/arrow/pull/11298/checks?check_run_id=3776114858#step:7:9\r\n   \r\n   It seems that MATLAB's license issue:\r\n   \r\n   ```text\r\n      /home/runner/work/_actions/matlab-actions/run-tests/v1/dist/bin/run_matlab_command.sh cd('/tmp/run_matlab_command-C9ztA3'); command_1900a080_bea2_416c_ab7f_7b7892ec1ea1\r\n     \r\n     \tSponsored License -- for use in support of a program or activity sponsored by MathWorks.\r\n     \tNot for government, commercial or other non-sponsored organizational use.\r\n     \r\n     {Error using BatchToken/consumeTokenData\r\n     Current time (02-Oct-2021 11:51:03) for token from license 40847642 is NOT in\r\n     the time range for this token (01-Oct-2020 08:45:41 to 02-Oct-2021 08:45:41)\r\n     \r\n     Error in BatchToken.enableTokenLicenses\r\n     }\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-02T19:04:14.268+0000",
                    "updated": "2021-10-02T19:04:14.268+0000",
                    "started": "2021-10-02T19:04:14.267+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "659274",
                    "issueId": "13404581"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404581/worklog/659333",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "okadakk commented on a change in pull request #11298:\nURL: https://github.com/apache/arrow/pull/11298#discussion_r720815471\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -4299,6 +4390,10 @@ void RegisterScalarStringAscii(FunctionRegistry* registry) {\n                                                   &utf8_ltrim_whitespace_doc);\n   MakeUnaryStringBatchKernel<UTF8RTrimWhitespace>(\"utf8_rtrim_whitespace\", registry,\n                                                   &utf8_rtrim_whitespace_doc);\n+  MakeUnaryStringBatchKernel<Utf8Nfd>(\"utf8_nfd\", registry, &utf8_nfd_doc);\n+  MakeUnaryStringBatchKernel<Utf8Nfkd>(\"utf8_nfkd\", registry, &utf8_nfkd_doc);\n+  MakeUnaryStringBatchKernel<Utf8Nfc>(\"utf8_nfc\", registry, &utf8_nfc_doc);\n+  MakeUnaryStringBatchKernel<Utf8Nfkc>(\"utf8_nfkc\", registry, &utf8_nfkc_doc);\n\nReview comment:\n       Thank you!\r\n   I referred to the link below.\r\n   https://github.com/JuliaStrings/utf8proc/blob/master/utf8proc.c#L759-L785\r\n   This code provides four methods.\r\n   I think it's easier for users to use without options.\r\n   \r\n   However, I think it would be more convenient if we could control it freely as an option.\r\n   I'm wondering which option is better. If you have any advice, I would like it...\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-03T11:42:56.820+0000",
                    "updated": "2021-10-03T11:42:56.820+0000",
                    "started": "2021-10-03T11:42:56.819+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "659333",
                    "issueId": "13404581"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404581/worklog/659539",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11298:\nURL: https://github.com/apache/arrow/pull/11298#discussion_r721338932\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -592,6 +592,70 @@ struct Utf8ReverseTransform : public StringTransformBase {\n template <typename Type>\n using Utf8Reverse = StringTransformExec<Type, Utf8ReverseTransform>;\n \n+struct Utf8NfTransformBase : public StringTransformBase {\n+  int64_t MaxCodeunits(int64_t ninputs, int64_t input_ncodeunits) override {\n+    // Section 5.18 of the Unicode spec claims that the number of codepoints for case\n\nReview comment:\n       Hmm... is the growth factor actually the same for normalization as for case transforms? That seems a bit surprising.\r\n   \r\n   Also, the growth factor could actually depend on the actual normalization: combined forms should arguably be more compact that decomposed form?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-04T12:58:29.310+0000",
                    "updated": "2021-10-04T12:58:29.310+0000",
                    "started": "2021-10-04T12:58:29.309+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "659539",
                    "issueId": "13404581"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404581/worklog/659543",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11298:\nURL: https://github.com/apache/arrow/pull/11298#discussion_r721339866\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -592,6 +592,70 @@ struct Utf8ReverseTransform : public StringTransformBase {\n template <typename Type>\n using Utf8Reverse = StringTransformExec<Type, Utf8ReverseTransform>;\n \n+struct Utf8NfTransformBase : public StringTransformBase {\n+  int64_t MaxCodeunits(int64_t ninputs, int64_t input_ncodeunits) override {\n+    // Section 5.18 of the Unicode spec claims that the number of codepoints for case\n+    // mapping can grow by a factor of 3. This means grow by a factor of 3 in bytes\n+    // However, since we don't support all casings (SpecialCasing.txt) the growth\n+    // in bytes is actually only at max 3/2 (as covered by the unittest).\n+    // Note that rounding down the 3/2 is ok, since only codepoints encoded by\n+    // two code units (even) can grow to 3 code units.\n+    return static_cast<int64_t>(input_ncodeunits) * 3 / 2;\n+  }\n+\n+  int64_t Transform(const uint8_t* input, int64_t input_string_ncodeunits,\n+                    uint8_t* output) {\n+    utf8proc_uint8_t* transformed = nullptr;\n+    utf8proc_option_t options = NormalizationFormOptions();\n+    auto output_string_ncodeunits =\n+        utf8proc_map(input, input_string_ncodeunits, &transformed, options);\n+    std::memcpy(output, transformed, output_string_ncodeunits);\n+    free(transformed);\n+\n+    return output_string_ncodeunits;\n+  }\n+\n+  virtual utf8proc_option_t NormalizationFormOptions() { return UTF8PROC_STABLE; }\n\nReview comment:\n       It is strange to have a virtual function for this. It could simply be a constructor argument, or something set up in an initialization step.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-04T12:59:39.256+0000",
                    "updated": "2021-10-04T12:59:39.256+0000",
                    "started": "2021-10-04T12:59:39.256+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "659543",
                    "issueId": "13404581"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404581/worklog/659544",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11298:\nURL: https://github.com/apache/arrow/pull/11298#discussion_r721342772\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -4230,6 +4294,33 @@ const FunctionDoc utf8_reverse_doc(\n      \"composed of multiple codepoints.\"),\n     {\"strings\"});\n \n+const FunctionDoc utf8_nfd_doc(\n+    \"Normalization Form Canonical Decomposition\",\n+    (\"For each string in `strings`, return an unicode normalized version.\\n\\n\"\n+     \"Characters are decomposed by canonical equivalence,\\n\"\n+     \"and multiple combining characters are arranged in a specific order.\\n\"),\n+    {\"strings\"});\n+\n+const FunctionDoc utf8_nfkd_doc(\n+    \"Normalization Form Compatibility Decomposition\",\n+    (\"For each string in `strings`, return an unicode normalized version.\\n\\n\"\n+     \"Characters are decomposed by compatibility,\\n\"\n+     \"and multiple combining characters are arranged in a specific order.\\n\"),\n+    {\"strings\"});\n+\n+const FunctionDoc utf8_nfc_doc(\n+    \"Normalization Form Canonical Composition\",\n+    (\"For each string in `strings`, return an unicode normalized version.\\n\\n\"\n+     \"Characters are decomposed and then recomposed by canonical equivalence.\\n\"),\n+    {\"strings\"});\n+\n+const FunctionDoc utf8_nfkc_doc(\n+    \"Normalization Form Compatibility Composition\",\n+    (\"For each string in `strings`, return an unicode normalized version.\\n\\n\"\n+     \"Characters are decomposed by compatibility,\\n\"\n+     \"then recomposed by canonical equivalence.\\n\"),\n+    {\"strings\"});\n\nReview comment:\n       Ok... API question: do we really want 4 distinct functions for this, or would we rather have a single function \"utf8_normalize\" and a Utf8NormalizationOptions class with an enum field describing the kind of normalization?\r\n   \r\n   In Python, there's a single function: https://docs.python.org/3/library/unicodedata.html#unicodedata.normalize\r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-04T13:03:17.319+0000",
                    "updated": "2021-10-04T13:03:17.319+0000",
                    "started": "2021-10-04T13:03:17.319+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "659544",
                    "issueId": "13404581"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404581/worklog/659548",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11298:\nURL: https://github.com/apache/arrow/pull/11298#discussion_r721349708\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -592,6 +592,70 @@ struct Utf8ReverseTransform : public StringTransformBase {\n template <typename Type>\n using Utf8Reverse = StringTransformExec<Type, Utf8ReverseTransform>;\n \n+struct Utf8NfTransformBase : public StringTransformBase {\n+  int64_t MaxCodeunits(int64_t ninputs, int64_t input_ncodeunits) override {\n+    // Section 5.18 of the Unicode spec claims that the number of codepoints for case\n+    // mapping can grow by a factor of 3. This means grow by a factor of 3 in bytes\n+    // However, since we don't support all casings (SpecialCasing.txt) the growth\n+    // in bytes is actually only at max 3/2 (as covered by the unittest).\n+    // Note that rounding down the 3/2 is ok, since only codepoints encoded by\n+    // two code units (even) can grow to 3 code units.\n+    return static_cast<int64_t>(input_ncodeunits) * 3 / 2;\n+  }\n+\n+  int64_t Transform(const uint8_t* input, int64_t input_string_ncodeunits,\n+                    uint8_t* output) {\n+    utf8proc_uint8_t* transformed = nullptr;\n+    utf8proc_option_t options = NormalizationFormOptions();\n+    auto output_string_ncodeunits =\n+        utf8proc_map(input, input_string_ncodeunits, &transformed, options);\n+    std::memcpy(output, transformed, output_string_ncodeunits);\n+    free(transformed);\n\nReview comment:\n       This is definitely non-performant as it allocates a heap area for every input string. Ideally, we should write directly into the output buffer `output`.\r\n   \r\n   I'll note the utf8proc code for this:\r\n   https://github.com/JuliaStrings/utf8proc/blob/master/utf8proc.c#L729-L757\r\n   \r\n   So we would need a resizable UTF32 buffer (that can be allocated only once for the entire duration of kernel execution).\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-04T13:11:49.386+0000",
                    "updated": "2021-10-04T13:11:49.386+0000",
                    "started": "2021-10-04T13:11:49.386+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "659548",
                    "issueId": "13404581"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404581/worklog/659550",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11298:\nURL: https://github.com/apache/arrow/pull/11298#discussion_r721353442\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -592,6 +592,70 @@ struct Utf8ReverseTransform : public StringTransformBase {\n template <typename Type>\n using Utf8Reverse = StringTransformExec<Type, Utf8ReverseTransform>;\n \n+struct Utf8NfTransformBase : public StringTransformBase {\n+  int64_t MaxCodeunits(int64_t ninputs, int64_t input_ncodeunits) override {\n+    // Section 5.18 of the Unicode spec claims that the number of codepoints for case\n\nReview comment:\n       Answer: there are really pathological cases, so I think it would be better to dynamically resize the output:\r\n   ```python\r\n   >>> s = \"\\ufdfa\"\r\n   >>> len(s)\r\n   1\r\n   >>> len(unicodedata.normalize(\"NFKD\", s))\r\n   18\r\n   >>> len(unicodedata.normalize(\"NFD\", s))\r\n   1\r\n   >>> len(unicodedata.normalize(\"NFKC\", s))\r\n   18\r\n   >>> len(unicodedata.normalize(\"NFC\", s))\r\n   1\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-04T13:16:06.974+0000",
                    "updated": "2021-10-04T13:16:06.974+0000",
                    "started": "2021-10-04T13:16:06.973+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "659550",
                    "issueId": "13404581"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404581/worklog/659578",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11298:\nURL: https://github.com/apache/arrow/pull/11298#discussion_r721392065\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -4230,6 +4294,33 @@ const FunctionDoc utf8_reverse_doc(\n      \"composed of multiple codepoints.\"),\n     {\"strings\"});\n \n+const FunctionDoc utf8_nfd_doc(\n+    \"Normalization Form Canonical Decomposition\",\n+    (\"For each string in `strings`, return an unicode normalized version.\\n\\n\"\n+     \"Characters are decomposed by canonical equivalence,\\n\"\n+     \"and multiple combining characters are arranged in a specific order.\\n\"),\n+    {\"strings\"});\n+\n+const FunctionDoc utf8_nfkd_doc(\n+    \"Normalization Form Compatibility Decomposition\",\n+    (\"For each string in `strings`, return an unicode normalized version.\\n\\n\"\n+     \"Characters are decomposed by compatibility,\\n\"\n+     \"and multiple combining characters are arranged in a specific order.\\n\"),\n+    {\"strings\"});\n+\n+const FunctionDoc utf8_nfc_doc(\n+    \"Normalization Form Canonical Composition\",\n+    (\"For each string in `strings`, return an unicode normalized version.\\n\\n\"\n+     \"Characters are decomposed and then recomposed by canonical equivalence.\\n\"),\n+    {\"strings\"});\n+\n+const FunctionDoc utf8_nfkc_doc(\n+    \"Normalization Form Compatibility Composition\",\n+    (\"For each string in `strings`, return an unicode normalized version.\\n\\n\"\n+     \"Characters are decomposed by compatibility,\\n\"\n+     \"then recomposed by canonical equivalence.\\n\"),\n+    {\"strings\"});\n\nReview comment:\n       Note there can be a single compute function registered and then a bunch of C++ API convenience functions.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-04T13:58:36.799+0000",
                    "updated": "2021-10-04T13:58:36.799+0000",
                    "started": "2021-10-04T13:58:36.798+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "659578",
                    "issueId": "13404581"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404581/worklog/659594",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kevingurney commented on pull request #11298:\nURL: https://github.com/apache/arrow/pull/11298#issuecomment-933537625\n\n\n   @kou - thanks for pointing out the MATLAB CI failure. Off the top of my head, I'm not sure what happened here.\r\n   \r\n   @mcafaro - do you know more about this?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-04T14:23:02.924+0000",
                    "updated": "2021-10-04T14:23:02.924+0000",
                    "started": "2021-10-04T14:23:02.924+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "659594",
                    "issueId": "13404581"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404581/worklog/659595",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mcafaro commented on pull request #11298:\nURL: https://github.com/apache/arrow/pull/11298#issuecomment-933539684\n\n\n   @kevingurney we had a licensing outage on Saturday morning. If the job is re-run it should work.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-04T14:25:17.263+0000",
                    "updated": "2021-10-04T14:25:17.263+0000",
                    "started": "2021-10-04T14:25:17.263+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "659595",
                    "issueId": "13404581"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404581/worklog/659598",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kevingurney commented on pull request #11298:\nURL: https://github.com/apache/arrow/pull/11298#issuecomment-933542866\n\n\n   Thanks, @mcafaro! @okadakk - sorry for the inconvenience! Let us know if the failures persist after a CI re-run.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-04T14:28:46.765+0000",
                    "updated": "2021-10-04T14:28:46.765+0000",
                    "started": "2021-10-04T14:28:46.765+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "659598",
                    "issueId": "13404581"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404581/worklog/672920",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "okadakk commented on pull request #11298:\nURL: https://github.com/apache/arrow/pull/11298#issuecomment-956982864\n\n\n   @edponce @pitrou @kou \r\n   Thanks for the review!\r\n   I revised that according to your advice.\r\n   Please have a review for updates.\r\n   \r\n   (I don't know why the R test failed. Do you know the reason?)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-02T00:23:30.848+0000",
                    "updated": "2021-11-02T00:23:30.848+0000",
                    "started": "2021-11-02T00:23:30.847+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "672920",
                    "issueId": "13404581"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404581/worklog/672956",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on pull request #11298:\nURL: https://github.com/apache/arrow/pull/11298#issuecomment-957084128\n\n\n   The R errors are unrelated to this PR.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-02T04:07:03.073+0000",
                    "updated": "2021-11-02T04:07:03.073+0000",
                    "started": "2021-11-02T04:07:03.073+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "672956",
                    "issueId": "13404581"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404581/worklog/672972",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on a change in pull request #11298:\nURL: https://github.com/apache/arrow/pull/11298#discussion_r740712348\n\n\n\n##########\nFile path: cpp/src/arrow/compute/api_scalar.h\n##########\n@@ -395,6 +399,17 @@ struct ARROW_EXPORT WeekOptions : public FunctionOptions {\n   bool first_week_is_fully_in_year;\n };\n \n+struct ARROW_EXPORT Utf8NormalizeOptions : public FunctionOptions {\n\nReview comment:\n       I think you should guard this option and kernel with `#ifdef ARROW_WITH_UTF8PROC` as these should not be used without such support. Everything related to this compute function should be guarded.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string_test.cc\n##########\n@@ -933,6 +933,48 @@ TYPED_TEST(TestStringKernels, Utf8Reverse) {\n   ASSERT_TRUE(res->array()->buffers[1]->Equals(*malformed_input->data()->buffers[1]));\n }\n \n+TYPED_TEST(TestStringKernels, Utf8Normalize) {\n+  Utf8NormalizeOptions nfc_options{Utf8NormalizeOptions::Method::NFC};\n+  Utf8NormalizeOptions nfkc_options{Utf8NormalizeOptions::Method::NFKC};\n+  Utf8NormalizeOptions nfd_options{Utf8NormalizeOptions::Method::NFD};\n+  Utf8NormalizeOptions nfkd_options{Utf8NormalizeOptions::Method::NFKD};\n+\n+  this->CheckUnary(\"utf8_normalize\", \"[]\", this->type(), \"[]\", &nfc_options);\n+  this->CheckUnary(\"utf8_normalize\", \"[]\", this->type(), \"[]\", &nfkc_options);\n+  this->CheckUnary(\"utf8_normalize\", \"[]\", this->type(), \"[]\", &nfd_options);\n+  this->CheckUnary(\"utf8_normalize\", \"[]\", this->type(), \"[]\", &nfkd_options);\n+  this->CheckUnary(\"utf8_normalize\", R\"([null, \"\"])\", this->type(), R\"([null, \"\"])\",\n+                   &nfc_options);\n+  this->CheckUnary(\"utf8_normalize\", R\"([null, \"\"])\", this->type(), R\"([null, \"\"])\",\n+                   &nfkc_options);\n+  this->CheckUnary(\"utf8_normalize\", R\"([null, \"\"])\", this->type(), R\"([null, \"\"])\",\n+                   &nfd_options);\n+  this->CheckUnary(\"utf8_normalize\", R\"([null, \"\"])\", this->type(), R\"([null, \"\"])\",\n+                   &nfkd_options);\n\nReview comment:\n       No need to check these case (empty, null).\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -672,11 +678,64 @@ struct Utf8TitleTransform : public FunctionalCaseMappingTransform {\n template <typename Type>\n using Utf8Title = StringTransformExec<Type, Utf8TitleTransform>;\n \n+struct Utf8NormalizeTransform : public FunctionalCaseMappingTransform {\n+  using State = OptionsWrapper<Utf8NormalizeOptions>;\n+\n+  const Utf8NormalizeOptions* options;\n+\n+  explicit Utf8NormalizeTransform(const Utf8NormalizeOptions& options)\n+      : options{&options} {}\n+\n+  int64_t MaxCodeunits(const uint8_t* input, int64_t ninputs,\n+                       int64_t input_ncodeunits) override {\n+    const auto option = GenerateUtf8NormalizeOption(options->method);\n\nReview comment:\n       Since this is a constant value that only depends on the given options, we can move the `GenerateUtf8NormalizeOption` to the `Utf8NormalizeOptions` and call it in the constructor, and add a `utf8proc_option_t utf8proc_form` data member to hold this value. Then, this value can be accessed in the kernel as `options_.utf8proc_form`.\n\n##########\nFile path: cpp/src/arrow/compute/api_scalar.cc\n##########\n@@ -173,6 +173,30 @@ struct EnumTraits<compute::RoundMode>\n     return \"<INVALID>\";\n   }\n };\n+\n+template <>\n+struct EnumTraits<compute::Utf8NormalizeOptions::Method>\n+    : BasicEnumTraits<compute::Utf8NormalizeOptions::Method,\n+                      compute::Utf8NormalizeOptions::Method::NFC,\n+                      compute::Utf8NormalizeOptions::Method::NFKC,\n+                      compute::Utf8NormalizeOptions::Method::NFD,\n+                      compute::Utf8NormalizeOptions::Method::NFKD> {\n+  static std::string name() { return \"compute::Utf8NormalizeOptions::Method\"; }\n\nReview comment:\n       In `name()`, you can remove the `compute::` part from the string-based namespace bc the enum is inside the `Utf8NormalizeOptions` class.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -672,11 +678,64 @@ struct Utf8TitleTransform : public FunctionalCaseMappingTransform {\n template <typename Type>\n using Utf8Title = StringTransformExec<Type, Utf8TitleTransform>;\n \n+struct Utf8NormalizeTransform : public FunctionalCaseMappingTransform {\n+  using State = OptionsWrapper<Utf8NormalizeOptions>;\n+\n+  const Utf8NormalizeOptions* options;\n+\n+  explicit Utf8NormalizeTransform(const Utf8NormalizeOptions& options)\n+      : options{&options} {}\n+\n+  int64_t MaxCodeunits(const uint8_t* input, int64_t ninputs,\n+                       int64_t input_ncodeunits) override {\n+    const auto option = GenerateUtf8NormalizeOption(options->method);\n+    const auto n_chars =\n+        utf8proc_decompose_custom(input, input_ncodeunits, NULL, 0, option, NULL, NULL);\n+\n+    // convert to byte length\n+    return n_chars * 4;\n+  }\n+\n+  int64_t Transform(const uint8_t* input, int64_t input_string_ncodeunits,\n+                    uint8_t* output, int64_t output_string_ncodeunits) {\n+    const auto option = GenerateUtf8NormalizeOption(options->method);\n+    const auto n_chars = utf8proc_decompose_custom(\n+        input, input_string_ncodeunits, reinterpret_cast<utf8proc_int32_t*>(output),\n+        output_string_ncodeunits, option, NULL, NULL);\n+    if (n_chars < 0) return output_string_ncodeunits;\n+\n+    const auto n_bytes =\n+        utf8proc_reencode(reinterpret_cast<utf8proc_int32_t*>(output), n_chars, option);\n+    return n_bytes;\n+  }\n\nReview comment:\n       Several comments:\r\n   1. Why not use [`utf8proc_NFC()` and friends](https://juliastrings.github.io/utf8proc/doc/utf8proc_8h.html#a11717c1d4b4725be52102a1cc5cd1d3c)? These expect a null-terminated string so these would require copying the input string and null-terminating it. If this approach is used, then `Utf8NormalizeOptions` do not need to be resolved in constructor but here in the kernel.\r\n   2. [`utf8proc_reencode()`](https://juliastrings.github.io/utf8proc/doc/utf8proc_8h.html#a5e7debdee382d00b237d75f0932a3e73) has a warning message regarding its size and IIUC it creates a null-terminating string which you are writing into the output. AFAIK, Arrow stores strings contiguously without null-terminations.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -672,11 +678,64 @@ struct Utf8TitleTransform : public FunctionalCaseMappingTransform {\n template <typename Type>\n using Utf8Title = StringTransformExec<Type, Utf8TitleTransform>;\n \n+struct Utf8NormalizeTransform : public FunctionalCaseMappingTransform {\n+  using State = OptionsWrapper<Utf8NormalizeOptions>;\n+\n+  const Utf8NormalizeOptions* options;\n+\n+  explicit Utf8NormalizeTransform(const Utf8NormalizeOptions& options)\n+      : options{&options} {}\n+\n+  int64_t MaxCodeunits(const uint8_t* input, int64_t ninputs,\n+                       int64_t input_ncodeunits) override {\n+    const auto option = GenerateUtf8NormalizeOption(options->method);\n+    const auto n_chars =\n+        utf8proc_decompose_custom(input, input_ncodeunits, NULL, 0, option, NULL, NULL);\n+\n+    // convert to byte length\n+    return n_chars * 4;\n+  }\n+\n+  int64_t Transform(const uint8_t* input, int64_t input_string_ncodeunits,\n+                    uint8_t* output, int64_t output_string_ncodeunits) {\n+    const auto option = GenerateUtf8NormalizeOption(options->method);\n+    const auto n_chars = utf8proc_decompose_custom(\n\nReview comment:\n       use `utf8proc_decompose()` instead\n\n##########\nFile path: cpp/src/arrow/compute/api_scalar.h\n##########\n@@ -395,6 +399,17 @@ struct ARROW_EXPORT WeekOptions : public FunctionOptions {\n   bool first_week_is_fully_in_year;\n };\n \n+struct ARROW_EXPORT Utf8NormalizeOptions : public FunctionOptions {\n+ public:\n+  enum Method { NFC, NFKC, NFD, NFKD };\n\nReview comment:\n       I think a more suitable name for the enum is `Form` as these are \"normal forms\" of the string.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -672,11 +678,64 @@ struct Utf8TitleTransform : public FunctionalCaseMappingTransform {\n template <typename Type>\n using Utf8Title = StringTransformExec<Type, Utf8TitleTransform>;\n \n+struct Utf8NormalizeTransform : public FunctionalCaseMappingTransform {\n+  using State = OptionsWrapper<Utf8NormalizeOptions>;\n+\n+  const Utf8NormalizeOptions* options;\n+\n+  explicit Utf8NormalizeTransform(const Utf8NormalizeOptions& options)\n+      : options{&options} {}\n\nReview comment:\n       `... : options_(options) {}`\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -672,11 +678,64 @@ struct Utf8TitleTransform : public FunctionalCaseMappingTransform {\n template <typename Type>\n using Utf8Title = StringTransformExec<Type, Utf8TitleTransform>;\n \n+struct Utf8NormalizeTransform : public FunctionalCaseMappingTransform {\n+  using State = OptionsWrapper<Utf8NormalizeOptions>;\n+\n+  const Utf8NormalizeOptions* options;\n+\n+  explicit Utf8NormalizeTransform(const Utf8NormalizeOptions& options)\n+      : options{&options} {}\n+\n+  int64_t MaxCodeunits(const uint8_t* input, int64_t ninputs,\n+                       int64_t input_ncodeunits) override {\n+    const auto option = GenerateUtf8NormalizeOption(options->method);\n+    const auto n_chars =\n+        utf8proc_decompose_custom(input, input_ncodeunits, NULL, 0, option, NULL, NULL);\n+\n+    // convert to byte length\n+    return n_chars * 4;\n+  }\n+\n+  int64_t Transform(const uint8_t* input, int64_t input_string_ncodeunits,\n+                    uint8_t* output, int64_t output_string_ncodeunits) {\n+    const auto option = GenerateUtf8NormalizeOption(options->method);\n+    const auto n_chars = utf8proc_decompose_custom(\n+        input, input_string_ncodeunits, reinterpret_cast<utf8proc_int32_t*>(output),\n+        output_string_ncodeunits, option, NULL, NULL);\n+    if (n_chars < 0) return output_string_ncodeunits;\n+\n+    const auto n_bytes =\n+        utf8proc_reencode(reinterpret_cast<utf8proc_int32_t*>(output), n_chars, option);\n+    return n_bytes;\n+  }\n+\n+ private:\n+  utf8proc_option_t GenerateUtf8NormalizeOption(Utf8NormalizeOptions::Method method) {\n+    switch (method) {\n+      case Utf8NormalizeOptions::Method::NFC:\n+        return static_cast<utf8proc_option_t>(UTF8PROC_STABLE | UTF8PROC_COMPOSE);\n+      case Utf8NormalizeOptions::Method::NFKC:\n+        return static_cast<utf8proc_option_t>(UTF8PROC_STABLE | UTF8PROC_COMPOSE |\n+                                              UTF8PROC_COMPAT);\n+      case Utf8NormalizeOptions::Method::NFD:\n+        return static_cast<utf8proc_option_t>(UTF8PROC_STABLE | UTF8PROC_DECOMPOSE);\n+      case Utf8NormalizeOptions::Method::NFKD:\n+        return static_cast<utf8proc_option_t>(UTF8PROC_STABLE | UTF8PROC_DECOMPOSE |\n+                                              UTF8PROC_COMPAT);\n+      default:\n+        return static_cast<utf8proc_option_t>(UTF8PROC_STABLE | UTF8PROC_COMPOSE);\n\nReview comment:\n       use `default: break;` instead.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -672,11 +678,64 @@ struct Utf8TitleTransform : public FunctionalCaseMappingTransform {\n template <typename Type>\n using Utf8Title = StringTransformExec<Type, Utf8TitleTransform>;\n \n+struct Utf8NormalizeTransform : public FunctionalCaseMappingTransform {\n+  using State = OptionsWrapper<Utf8NormalizeOptions>;\n+\n+  const Utf8NormalizeOptions* options;\n\nReview comment:\n       `const Utf8NormalizeOptions& options_`\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-02T05:39:05.925+0000",
                    "updated": "2021-11-02T05:39:05.925+0000",
                    "started": "2021-11-02T05:39:05.924+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "672972",
                    "issueId": "13404581"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404581/worklog/673161",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce edited a comment on pull request #11298:\nURL: https://github.com/apache/arrow/pull/11298#issuecomment-957084128\n\n\n   The R errors are unrelated to this PR. Basically, R 4.1.2 was released recently and there is a lag between the time the GitHub API picks up the update in the current version and the binaries being available.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-02T13:25:41.770+0000",
                    "updated": "2021-11-02T13:25:41.770+0000",
                    "started": "2021-11-02T13:25:41.770+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "673161",
                    "issueId": "13404581"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 33000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2b258294[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3d924112[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6adf3894[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@456a6e0c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@51c3430b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@75ba4ae2[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@66b2c759[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@703edf8d[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3bae019a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1ce4a157[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6c9c259d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6a584d34[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 33000,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Dec 01 19:12:50 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-12-01T19:12:50.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14205/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-10-02T09:40:10.000+0000",
        "updated": "2021-12-14T06:18:15.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "9h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 33000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Add unicode normalization to scalar string",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13404581/comment/17451977",
                    "id": "17451977",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 11831\n[https://github.com/apache/arrow/pull/11831]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-12-01T19:12:50.614+0000",
                    "updated": "2021-12-01T19:12:50.614+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0vi94:",
        "customfield_12314139": null
    }
}