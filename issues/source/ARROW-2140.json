{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13137926",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137926",
    "key": "ARROW-2140",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2140/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@11345d7c[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@194330ea[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1dd975d9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1d1dd2e8[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2d84ed5b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2b213957[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7d80f657[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@ef9f19d[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@41d2b2c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@26d44179[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5c1c39ba[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1da84ebd[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Mar 29 23:38:20 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-03-29T23:38:18.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2140/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-02-12T18:27:10.000+0000",
        "updated": "2018-03-29T23:38:25.000+0000",
        "timeoriginalestimate": null,
        "description": "{code}\r\n>>> arr = np.array([1.5], dtype=np.float16)\r\n>>> pa.array(arr, type=pa.float16())\r\nTraceback (most recent call last):\r\n  File \"<ipython-input-6-e432e6663efb>\", line 1, in <module>\r\n    pa.array(arr)\r\n  File \"array.pxi\", line 177, in pyarrow.lib.array\r\n  File \"array.pxi\", line 84, in pyarrow.lib._ndarray_to_array\r\n  File \"public-api.pxi\", line 158, in pyarrow.lib.pyarrow_wrap_array\r\nKeyError: 10\r\n{code}",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Conversion from Numpy float16 array unimplemented",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137926/comment/16398688",
                    "id": "16398688",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou opened a new pull request #1744: ARROW-2140: [Python] Improve float16 support\nURL: https://github.com/apache/arrow/pull/1744\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-14T14:44:13.162+0000",
                    "updated": "2018-03-14T14:44:13.162+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137926/comment/16398732",
                    "id": "16398732",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on issue #1744: ARROW-2140: [Python] Improve float16 support\nURL: https://github.com/apache/arrow/pull/1744#issuecomment-373059009\n \n \n   The Travis-CI failure is due to a regression in a Cython 0.28: https://github.com/cython/cython/issues/2148\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-14T15:18:07.911+0000",
                    "updated": "2018-03-14T15:18:07.911+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137926/comment/16419937",
                    "id": "16419937",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1744\n[https://github.com/apache/arrow/pull/1744]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-03-29T23:38:18.788+0000",
                    "updated": "2018-03-29T23:38:18.788+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13137926/comment/16419938",
                    "id": "16419938",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1744: ARROW-2140: [Python] Improve float16 support\nURL: https://github.com/apache/arrow/pull/1744\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/ci/msvc-build.bat b/ci/msvc-build.bat\nindex a29ef0bad..cec14297e 100644\n--- a/ci/msvc-build.bat\n+++ b/ci/msvc-build.bat\n@@ -68,6 +68,7 @@ if \"%JOB%\" == \"Build_Debug\" (\n   exit /B 0\n )\n \n+@rem Note: avoid Cython 0.28.0 due to https://github.com/cython/cython/issues/2148\n conda create -n arrow -q -y python=%PYTHON% ^\n       six pytest setuptools numpy pandas ^\n       cython=0.27.3 ^\ndiff --git a/ci/travis_script_python.sh b/ci/travis_script_python.sh\nindex 247d10278..aa3c3154c 100755\n--- a/ci/travis_script_python.sh\n+++ b/ci/travis_script_python.sh\n@@ -36,6 +36,7 @@ source activate $CONDA_ENV_DIR\n python --version\n which python\n \n+# Note: avoid Cython 0.28.0 due to https://github.com/cython/cython/issues/2148\n conda install -y -q pip \\\n       nomkl \\\n       cloudpickle \\\ndiff --git a/cpp/src/arrow/python/arrow_to_pandas.cc b/cpp/src/arrow/python/arrow_to_pandas.cc\nindex 5749e4f40..92461fc16 100644\n--- a/cpp/src/arrow/python/arrow_to_pandas.cc\n+++ b/cpp/src/arrow/python/arrow_to_pandas.cc\n@@ -197,6 +197,7 @@ class PandasBlock {\n     INT32,\n     UINT64,\n     INT64,\n+    HALF_FLOAT,\n     FLOAT,\n     DOUBLE,\n     BOOL,\n@@ -815,6 +816,31 @@ using Int32Block = IntBlock<Type::INT32, int32_t>;\n using UInt64Block = IntBlock<Type::UINT64, uint64_t>;\n using Int64Block = IntBlock<Type::INT64, int64_t>;\n \n+class Float16Block : public PandasBlock {\n+ public:\n+  using PandasBlock::PandasBlock;\n+  Status Allocate() override { return AllocateNDArray(NPY_FLOAT16); }\n+\n+  Status Write(const std::shared_ptr<Column>& col, int64_t abs_placement,\n+               int64_t rel_placement) override {\n+    Type::type type = col->type()->id();\n+\n+    if (type != Type::HALF_FLOAT) {\n+      std::stringstream ss;\n+      ss << \"Cannot write Arrow data of type \" << col->type()->ToString();\n+      ss << \" to a Pandas float16 block.\";\n+      return Status::NotImplemented(ss.str());\n+    }\n+\n+    npy_half* out_buffer =\n+        reinterpret_cast<npy_half*>(block_data_) + rel_placement * num_rows_;\n+\n+    ConvertNumericNullable<npy_half>(*col->data().get(), NPY_HALF_NAN, out_buffer);\n+    placement_data_[rel_placement] = abs_placement;\n+    return Status::OK();\n+  }\n+};\n+\n class Float32Block : public PandasBlock {\n  public:\n   using PandasBlock::PandasBlock;\n@@ -1225,6 +1251,7 @@ Status MakeBlock(PandasOptions options, PandasBlock::type type, int64_t num_rows\n     BLOCK_CASE(INT32, Int32Block);\n     BLOCK_CASE(UINT64, UInt64Block);\n     BLOCK_CASE(INT64, Int64Block);\n+    BLOCK_CASE(HALF_FLOAT, Float16Block);\n     BLOCK_CASE(FLOAT, Float32Block);\n     BLOCK_CASE(DOUBLE, Float64Block);\n     BLOCK_CASE(BOOL, BoolBlock);\n@@ -1269,6 +1296,9 @@ static Status GetPandasBlockType(const Column& col, const PandasOptions& options\n       INTEGER_CASE(UINT64);\n     case Type::INT64:\n       INTEGER_CASE(INT64);\n+    case Type::HALF_FLOAT:\n+      *output_type = PandasBlock::HALF_FLOAT;\n+      break;\n     case Type::FLOAT:\n       *output_type = PandasBlock::FLOAT;\n       break;\ndiff --git a/cpp/src/arrow/python/arrow_to_python.cc b/cpp/src/arrow/python/arrow_to_python.cc\nindex 5515d24bd..3fdc5f144 100644\n--- a/cpp/src/arrow/python/arrow_to_python.cc\n+++ b/cpp/src/arrow/python/arrow_to_python.cc\n@@ -127,11 +127,8 @@ Status GetValue(PyObject* context, const UnionArray& parent, const Array& arr,\n       return CheckPyError();\n     }\n     case Type::HALF_FLOAT: {\n-      *result = PyArrayScalar_New(Half);\n+      *result = PyHalf_FromHalf(static_cast<const HalfFloatArray&>(arr).Value(index));\n       RETURN_IF_PYERROR();\n-\n-      npy_half halffloat = static_cast<const HalfFloatArray&>(arr).Value(index);\n-      PyArrayScalar_ASSIGN(*result, Half, halffloat);\n       return Status::OK();\n     }\n     case Type::FLOAT:\ndiff --git a/cpp/src/arrow/python/builtin_convert.cc b/cpp/src/arrow/python/builtin_convert.cc\nindex 595499de7..5e99992f1 100644\n--- a/cpp/src/arrow/python/builtin_convert.cc\n+++ b/cpp/src/arrow/python/builtin_convert.cc\n@@ -655,6 +655,17 @@ class TimestampConverter\n   TimeUnit::type unit_;\n };\n \n+class Float16Converter\n+    : public TypedConverterVisitor<HalfFloatBuilder, Float16Converter> {\n+ public:\n+  // Append a non-missing item\n+  Status AppendItem(PyObject* obj) {\n+    npy_half val;\n+    RETURN_NOT_OK(PyFloat_AsHalf(obj, &val));\n+    return typed_builder_->Append(val);\n+  }\n+};\n+\n class Float32Converter : public TypedConverterVisitor<FloatBuilder, Float32Converter> {\n  public:\n   // Append a non-missing item\n@@ -887,6 +898,8 @@ std::unique_ptr<SeqConverter> GetConverter(const std::shared_ptr<DataType>& type\n     case Type::TIMESTAMP:\n       return std::unique_ptr<SeqConverter>(\n           new TimestampConverter(static_cast<const TimestampType&>(*type).unit()));\n+    case Type::HALF_FLOAT:\n+      return std::unique_ptr<SeqConverter>(new Float16Converter);\n     case Type::FLOAT:\n       return std::unique_ptr<SeqConverter>(new Float32Converter);\n     case Type::DOUBLE:\ndiff --git a/cpp/src/arrow/python/helpers.cc b/cpp/src/arrow/python/helpers.cc\nindex 5719af6f3..bd31beccb 100644\n--- a/cpp/src/arrow/python/helpers.cc\n+++ b/cpp/src/arrow/python/helpers.cc\n@@ -58,6 +58,24 @@ std::shared_ptr<DataType> GetPrimitiveType(Type::type type) {\n   }\n }\n \n+PyObject* PyHalf_FromHalf(npy_half value) {\n+  PyObject* result = PyArrayScalar_New(Half);\n+  if (result != NULL) {\n+    PyArrayScalar_ASSIGN(result, Half, value);\n+  }\n+  return result;\n+}\n+\n+Status PyFloat_AsHalf(PyObject* obj, npy_half* out) {\n+  if (PyArray_IsScalar(obj, Half)) {\n+    *out = PyArrayScalar_VAL(obj, Half);\n+    return Status::OK();\n+  } else {\n+    // XXX: cannot use npy_double_to_half() without linking with Numpy\n+    return Status::TypeError(\"Expected np.float16 instance\");\n+  }\n+}\n+\n namespace internal {\n \n Status ImportModule(const std::string& module_name, OwnedRef* ref) {\ndiff --git a/cpp/src/arrow/python/helpers.h b/cpp/src/arrow/python/helpers.h\nindex b9f505a16..e2f3b1829 100644\n--- a/cpp/src/arrow/python/helpers.h\n+++ b/cpp/src/arrow/python/helpers.h\n@@ -24,6 +24,8 @@\n #include <string>\n #include <utility>\n \n+#include <numpy/halffloat.h>\n+\n #include \"arrow/type.h\"\n #include \"arrow/util/macros.h\"\n #include \"arrow/util/visibility.h\"\n@@ -41,6 +43,12 @@ class OwnedRef;\n // \\return A shared pointer to DataType\n ARROW_EXPORT std::shared_ptr<DataType> GetPrimitiveType(Type::type type);\n \n+// \\brief Construct a np.float16 object from a npy_half value.\n+ARROW_EXPORT PyObject* PyHalf_FromHalf(npy_half value);\n+\n+// \\brief Convert a Python object to a npy_half value.\n+ARROW_EXPORT Status PyFloat_AsHalf(PyObject* obj, npy_half* out);\n+\n namespace internal {\n \n // \\brief Import a Python module\ndiff --git a/python/pyarrow/__init__.py b/python/pyarrow/__init__.py\nindex bfd7d4db9..09f907c8a 100644\n--- a/python/pyarrow/__init__.py\n+++ b/python/pyarrow/__init__.py\n@@ -78,7 +78,7 @@ def parse_version(root):\n                          BooleanValue,\n                          Int8Value, Int16Value, Int32Value, Int64Value,\n                          UInt8Value, UInt16Value, UInt32Value, UInt64Value,\n-                         FloatValue, DoubleValue, ListValue,\n+                         HalfFloatValue, FloatValue, DoubleValue, ListValue,\n                          BinaryValue, StringValue, FixedSizeBinaryValue,\n                          DecimalValue,\n                          Date32Value, Date64Value, TimestampValue)\ndiff --git a/python/pyarrow/array.pxi b/python/pyarrow/array.pxi\nindex 8dac57d18..a093cd5f1 100644\n--- a/python/pyarrow/array.pxi\n+++ b/python/pyarrow/array.pxi\n@@ -689,6 +689,10 @@ cdef class Time64Array(NumericArray):\n     pass\n \n \n+cdef class HalfFloatArray(FloatingPointArray):\n+    pass\n+\n+\n cdef class FloatArray(FloatingPointArray):\n     pass\n \n@@ -1008,6 +1012,7 @@ cdef dict _array_classes = {\n     _Type_TIMESTAMP: TimestampArray,\n     _Type_TIME32: Time32Array,\n     _Type_TIME64: Time64Array,\n+    _Type_HALF_FLOAT: HalfFloatArray,\n     _Type_FLOAT: FloatArray,\n     _Type_DOUBLE: DoubleArray,\n     _Type_LIST: ListArray,\ndiff --git a/python/pyarrow/includes/common.pxd b/python/pyarrow/includes/common.pxd\nindex 5afa07537..16eae92e3 100644\n--- a/python/pyarrow/includes/common.pxd\n+++ b/python/pyarrow/includes/common.pxd\n@@ -35,6 +35,9 @@ cdef extern from \"<Python.h>\":\n     void Py_XDECREF(PyObject* o)\n     Py_ssize_t Py_REFCNT(PyObject* o)\n \n+cdef extern from \"numpy/halffloat.h\":\n+    ctypedef uint16_t npy_half\n+\n cdef extern from \"arrow/api.h\" namespace \"arrow\" nogil:\n     # We can later add more of the common status factory methods as needed\n     cdef CStatus CStatus_OK \"Status::OK\"()\ndiff --git a/python/pyarrow/includes/libarrow.pxd b/python/pyarrow/includes/libarrow.pxd\nindex 01a641896..b5f5b3e3f 100644\n--- a/python/pyarrow/includes/libarrow.pxd\n+++ b/python/pyarrow/includes/libarrow.pxd\n@@ -327,6 +327,9 @@ cdef extern from \"arrow/api.h\" namespace \"arrow\" nogil:\n     cdef cppclass CTimestampArray\" arrow::TimestampArray\"(CArray):\n         int64_t Value(int i)\n \n+    cdef cppclass CHalfFloatArray\" arrow::HalfFloatArray\"(CArray):\n+        uint16_t Value(int i)\n+\n     cdef cppclass CFloatArray\" arrow::FloatArray\"(CArray):\n         float Value(int i)\n \n@@ -869,6 +872,9 @@ cdef extern from \"arrow/compute/api.h\" namespace \"arrow::compute\" nogil:\n cdef extern from \"arrow/python/api.h\" namespace \"arrow::py\" nogil:\n     shared_ptr[CDataType] GetPrimitiveType(Type type)\n     shared_ptr[CDataType] GetTimestampType(TimeUnit unit)\n+\n+    object PyHalf_FromHalf(npy_half value)\n+\n     CStatus ConvertPySequence(object obj, CMemoryPool* pool,\n                               shared_ptr[CArray]* out)\n     CStatus ConvertPySequence(object obj, const shared_ptr[CDataType]& type,\ndiff --git a/python/pyarrow/lib.pxd b/python/pyarrow/lib.pxd\nindex e4d574f18..8a950867d 100644\n--- a/python/pyarrow/lib.pxd\n+++ b/python/pyarrow/lib.pxd\n@@ -234,6 +234,10 @@ cdef class UInt64Array(IntegerArray):\n     pass\n \n \n+cdef class HalfFloatArray(FloatingPointArray):\n+    pass\n+\n+\n cdef class FloatArray(FloatingPointArray):\n     pass\n \ndiff --git a/python/pyarrow/scalar.pxi b/python/pyarrow/scalar.pxi\nindex a801acd69..f23414b06 100644\n--- a/python/pyarrow/scalar.pxi\n+++ b/python/pyarrow/scalar.pxi\n@@ -249,6 +249,13 @@ cdef class TimestampValue(ArrayValue):\n         return converter(value, tzinfo=tzinfo)\n \n \n+cdef class HalfFloatValue(ArrayValue):\n+\n+    def as_py(self):\n+        cdef CHalfFloatArray* ap = <CHalfFloatArray*> self.sp_array.get()\n+        return PyHalf_FromHalf(ap.Value(self.index))\n+\n+\n cdef class FloatValue(ArrayValue):\n \n     def as_py(self):\n@@ -388,6 +395,7 @@ cdef dict _scalar_classes = {\n     _Type_TIME32: Time32Value,\n     _Type_TIME64: Time64Value,\n     _Type_TIMESTAMP: TimestampValue,\n+    _Type_HALF_FLOAT: HalfFloatValue,\n     _Type_FLOAT: FloatValue,\n     _Type_DOUBLE: DoubleValue,\n     _Type_LIST: ListValue,\ndiff --git a/python/pyarrow/tests/test_convert_pandas.py b/python/pyarrow/tests/test_convert_pandas.py\nindex d448de08b..45ec66dab 100644\n--- a/python/pyarrow/tests/test_convert_pandas.py\n+++ b/python/pyarrow/tests/test_convert_pandas.py\n@@ -462,7 +462,9 @@ class TestConvertPrimitiveTypes(object):\n     def test_float_no_nulls(self):\n         data = {}\n         fields = []\n-        dtypes = [('f4', pa.float32()), ('f8', pa.float64())]\n+        dtypes = [('f2', pa.float16()),\n+                  ('f4', pa.float32()),\n+                  ('f8', pa.float64())]\n         num_values = 100\n \n         for numpy_dtype, arrow_dtype in dtypes:\n@@ -478,8 +480,10 @@ def test_float_nulls(self):\n         num_values = 100\n \n         null_mask = np.random.randint(0, 10, size=num_values) < 3\n-        dtypes = [('f4', pa.float32()), ('f8', pa.float64())]\n-        names = ['f4', 'f8']\n+        dtypes = [('f2', pa.float16()),\n+                  ('f4', pa.float32()),\n+                  ('f8', pa.float64())]\n+        names = ['f2', 'f4', 'f8']\n         expected_cols = []\n \n         arrays = []\n@@ -653,6 +657,21 @@ def _check_type(t):\n         _check_type(pa.int32())\n         _check_type(pa.float64())\n \n+    def test_half_floats_from_numpy(self):\n+        arr = np.array([1.5, np.nan], dtype=np.float16)\n+        a = pa.array(arr, type=pa.float16())\n+        x, y = a.to_pylist()\n+        assert isinstance(x, np.float16)\n+        assert x == 1.5\n+        assert isinstance(y, np.float16)\n+        assert np.isnan(y)\n+\n+        a = pa.array(arr, type=pa.float16(), from_pandas=True)\n+        x, y = a.to_pylist()\n+        assert isinstance(x, np.float16)\n+        assert x == 1.5\n+        assert y is None\n+\n \n @pytest.mark.parametrize('dtype',\n                          ['i1', 'i2', 'i4', 'i8', 'u1', 'u2', 'u4', 'u8'])\n@@ -1668,7 +1687,7 @@ class TestConvertMisc(object):\n         (np.uint16, pa.uint16()),\n         (np.uint32, pa.uint32()),\n         (np.uint64, pa.uint64()),\n-        # (np.float16, pa.float16()),  # XXX unsupported\n+        (np.float16, pa.float16()),\n         (np.float32, pa.float32()),\n         (np.float64, pa.float64()),\n         # XXX unsupported\ndiff --git a/python/pyarrow/tests/test_scalars.py b/python/pyarrow/tests/test_scalars.py\nindex 7061a0d3a..b82322f57 100644\n--- a/python/pyarrow/tests/test_scalars.py\n+++ b/python/pyarrow/tests/test_scalars.py\n@@ -18,6 +18,7 @@\n \n import pytest\n \n+import numpy as np\n import pandas as pd\n \n from pyarrow.compat import unittest, u, unicode_type\n@@ -76,6 +77,16 @@ def test_double(self):\n         v = arr[2]\n         assert v.as_py() == 3.0\n \n+    def test_half_float(self):\n+        arr = pa.array([np.float16(1.5), None], type=pa.float16())\n+        v = arr[0]\n+        assert isinstance(v, pa.HalfFloatValue)\n+        assert repr(v) == \"1.5\"\n+        assert v.as_py() == 1.5\n+        assert v == 1.5\n+\n+        assert arr[1] is pa.NA\n+\n     def test_string_unicode(self):\n         arr = pa.array([u'foo', None, u'ma\u00f1ana'])\n \n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-29T23:38:20.573+0000",
                    "updated": "2018-03-29T23:38:20.573+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|i3q2z3:",
        "customfield_12314139": null
    }
}