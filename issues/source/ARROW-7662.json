{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13281171",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281171",
    "key": "ARROW-7662",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12579970",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12579970",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13283990",
                    "key": "ARROW-7798",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13283990",
                    "fields": {
                        "summary": "[R] Refactor R <-> Array conversion",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=michaelchirico",
            "name": "michaelchirico",
            "key": "michaelchirico",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Michael Chirico",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=michaelchirico",
            "name": "michaelchirico",
            "key": "michaelchirico",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Michael Chirico",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 29400,
            "total": 29400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 29400,
            "total": 29400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7662/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 52,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281171/worklog/376911",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6275: ARROW-7662: [R] initial foray into adding list column support for parquet writing\nURL: https://github.com/apache/arrow/pull/6275#issuecomment-578214936\n \n \n   https://issues.apache.org/jira/browse/ARROW-7662\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-24T17:01:57.439+0000",
                    "updated": "2020-01-24T17:01:57.439+0000",
                    "started": "2020-01-24T17:01:57.439+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376911",
                    "issueId": "13281171"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281171/worklog/376913",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "MichaelChirico commented on issue #6275: ARROW-7662: [R] initial foray into adding list column support for parquet writing\nURL: https://github.com/apache/arrow/pull/6275#issuecomment-578215689\n \n \n   Thanks @fsaintjacques . I tried following the R package's README for building the package & can confirm the package works (so arrow) is installed. Maybe it's a version mismatch problem? I know current master is more recent than `0.14.1` but `brew install` approach found that:\r\n   \r\n   ```\r\n   Arrow C++ libraries found via pkg-config\r\n   PKG_CFLAGS=-DNDEBUG -I/usr/local/Cellar/apache-arrow/0.14.1/include -DARROW_R_WITH_ARROW\r\n   PKG_LIBS=-L/usr/local/Cellar/apache-arrow/0.14.1/lib -larrow -lparquet\r\n   ** libs\r\n   clang++ -std=gnu++11 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -DNDEBUG -I/usr/local/Cellar/apache-arrow/0.14.1/include -DARROW_R_WITH_ARROW -I\"/Library/Frameworks/R.framework/Versions/3.6/Resources/library/Rcpp/include\" -I/usr/local/opt/gettext/include -I/usr/local/opt/llvm/include  -fPIC  -Wall -g -O2  -c array.cpp -o array.o\r\n   ```\r\n   \r\n   I'll try building completely from source...\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-24T17:03:57.471+0000",
                    "updated": "2020-01-24T17:03:57.471+0000",
                    "started": "2020-01-24T17:03:57.471+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376913",
                    "issueId": "13281171"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281171/worklog/376916",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6275: ARROW-7662: [R] initial foray into adding list column support for parquet writing\nURL: https://github.com/apache/arrow/pull/6275#discussion_r370741896\n \n \n\n ##########\n File path: r/src/array_from_vector.cpp\n ##########\n @@ -868,6 +868,17 @@ std::shared_ptr<arrow::DataType> InferType(SEXP x) {\n                                                      InferType(VECTOR_ELT(x, i)));\n         }\n         return std::make_shared<StructType>(std::move(fields));\n+      } else {\n+        R_xlen_t n = XLENGTH(x);\n+        if (n == 0)\n+          Rcpp::stop(\"received length-0 list\");\n+        std::shared_ptr<arrow::Type> element_type = InferType(VECTOR_ELT(x, 0));\n \n Review comment:\n   Sounds like you weren't able to compile this locally, so see the results from CI: https://github.com/apache/arrow/pull/6275/checks?check_run_id=406491019#step:5:2868\r\n   \r\n   There are a few things to fix here.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-24T17:11:18.056+0000",
                    "updated": "2020-01-24T17:11:18.056+0000",
                    "started": "2020-01-24T17:11:18.056+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376916",
                    "issueId": "13281171"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281171/worklog/376917",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6275: ARROW-7662: [R] initial foray into adding list column support for parquet writing\nURL: https://github.com/apache/arrow/pull/6275#discussion_r370743289\n \n \n\n ##########\n File path: r/NEWS.md\n ##########\n @@ -55,6 +55,7 @@ See `vignette(\"install\", package = \"arrow\")` for details.\n * Factor types are now preserved in round trip through Parquet format (#6135, @yutannihilation)\n * Reading an Arrow dictionary type coerces dictionary values to `character` (as R `factor` levels are required to be) instead of raising an error\n * Many improvements to Parquet function documentation (@karldw, @khughitt)\n+* List columns supported for `write_parquet` (#7662, @michaelchirico)\n \n Review comment:\n   This is bigger than only writing Parquet:\r\n   \r\n   ```suggestion\r\n   * Can now infer the type of an R `list` and create a ListArray when all list elements are the same type (#6275, @michaelchirico)\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-24T17:11:18.060+0000",
                    "updated": "2020-01-24T17:11:18.060+0000",
                    "started": "2020-01-24T17:11:18.060+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376917",
                    "issueId": "13281171"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281171/worklog/376919",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "MichaelChirico commented on pull request #6275: ARROW-7662: [R] initial foray into adding list column support for parquet writing\nURL: https://github.com/apache/arrow/pull/6275#discussion_r370745225\n \n \n\n ##########\n File path: r/NEWS.md\n ##########\n @@ -55,6 +55,7 @@ See `vignette(\"install\", package = \"arrow\")` for details.\n * Factor types are now preserved in round trip through Parquet format (#6135, @yutannihilation)\n * Reading an Arrow dictionary type coerces dictionary values to `character` (as R `factor` levels are required to be) instead of raising an error\n * Many improvements to Parquet function documentation (@karldw, @khughitt)\n+* Can now infer the type of an R `list` and create a ListArray when all list elements are the same type (#6275, @michaelchirico)\n \n Review comment:\n   Added the suggestion, but I had in mind to revisit once the full scope of the PR is clearer\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-24T17:12:50.227+0000",
                    "updated": "2020-01-24T17:12:50.227+0000",
                    "started": "2020-01-24T17:12:50.227+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376919",
                    "issueId": "13281171"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281171/worklog/376920",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on issue #6275: ARROW-7662: [R] initial foray into adding list column support for parquet writing\nURL: https://github.com/apache/arrow/pull/6275#issuecomment-578220558\n \n \n   Since you're on macOS, try this (from the root of the arrow repository)\r\n   \r\n   ```\r\n   mkdir cpp/build\r\n   cd cpp/build\r\n   cmake -DARROW_PARQUET=ON -DARROW_INSTALL_NAME_RPATH=OFF -DBOOST_SOURCE=BUNDLED -DARROW_DEPENDENCY_SOURCE=SYSTEM -DARROW_WITH_ZLIB=ON -DARROW_WITH_SNAPPY=ON -DARROW_BUILD_TESTS=OFF -DCMAKE_BUILD_TYPE=debug -DARROW_DATASET=ON -DARROW_EXTRA_ERROR_CONTEXT=ON -DARROW_CSV=ON -DARROW_JSON=ON -DARROW_COMPUTE=ON -DARROW_FILESYSTEM=ON -DRapidJSON_SOURCE=BUNDLED ..\r\n   make -j$(sysctl -n hw.ncpu) install\r\n   ```\r\n   \r\n   If you don't have it, you may need to `brew install cmake` first.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-24T17:17:00.867+0000",
                    "updated": "2020-01-24T17:17:00.867+0000",
                    "started": "2020-01-24T17:17:00.867+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376920",
                    "issueId": "13281171"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281171/worklog/376963",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "MichaelChirico commented on issue #6275: ARROW-7662: [R] initial foray into adding list column support for parquet writing\nURL: https://github.com/apache/arrow/pull/6275#issuecomment-578241500\n \n \n   Thanks @nealrichardson \r\n   \r\n   Before reading this I had already begun a \"plain\" build via instructions here: https://arrow.apache.org/docs/developers/cpp.html\r\n   \r\n   And advantage of the flags you cited? Faster build time?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-24T18:15:54.896+0000",
                    "updated": "2020-01-24T18:15:54.896+0000",
                    "started": "2020-01-24T18:15:54.896+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376963",
                    "issueId": "13281171"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281171/worklog/376967",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on issue #6275: ARROW-7662: [R] initial foray into adding list column support for parquet writing\nURL: https://github.com/apache/arrow/pull/6275#issuecomment-578244695\n \n \n   The flags I gave are the \"works on my machine\" flags. It turns on the features we need for the R package and covers some macOS idiosyncrasies (at least for my machine). YMMV of course but figured it might save you some unnecessary debugging. And the `make -j(nproc)` will make it faster, yes.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-24T18:24:43.099+0000",
                    "updated": "2020-01-24T18:24:43.099+0000",
                    "started": "2020-01-24T18:24:43.099+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376967",
                    "issueId": "13281171"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281171/worklog/376975",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "MichaelChirico commented on issue #6275: ARROW-7662: [R] initial foray into adding list column support for parquet writing\nURL: https://github.com/apache/arrow/pull/6275#issuecomment-578251305\n \n \n   FWIW my build worked without those flags but I was still getting compilation errors from the R build:\r\n   \r\n   ```\r\n   arrowExports.cpp:1360:21: error: no member named 'SourceFactory' in namespace 'arrow::dataset'\r\n   std::shared_ptr<ds::SourceFactory> dataset___FSSFactory__Make2(const std::shared_ptr<fs::FileSystem>& fs, const std::shared_ptr<fs::FileSelector>& selector, co...\r\n                   ~~~~^\r\n   arrowExports.cpp:1360:133: error: no member named 'FileSelector' in namespace 'arrow::fs'\r\n   std::shared_ptr<ds::SourceFactory> dataset___FSSFactory__Make2(const std::shared_ptr<fs::FileSystem>& fs, const std::shared_ptr<fs::FileSelector>& selector, co...\r\n                                                                                                                                   ~~~~^\r\n   arrowExports.cpp:1360:231: error: no member named 'Partitioning' in namespace 'arrow::dataset'\r\n     ...fs, const std::shared_ptr<fs::FileSelector>& selector, const std::shared_ptr<ds::FileFormat>& format, const std::shared_ptr<ds::Partitioning>& partitioning);\r\n                                                                                                                                    ~~~~^\r\n   arrowExports.cpp:1364:58: error: no member named 'FileSelector' in namespace 'arrow::fs'\r\n           Rcpp::traits::input_parameter<const std::shared_ptr<fs::FileSelector>&>::type selector(selector_sexp);\r\n                                                               ~~~~^\r\n   arrowExports.cpp:1364:75: error: no type named 'type' in the global namespace\r\n           Rcpp::traits::input_parameter<const std::shared_ptr<fs::FileSelector>&>::type selector(selector_sexp);\r\n                                                                                  ~~^\r\n   arrowExports.cpp:1366:58: error: no member named 'Partitioning' in namespace 'arrow::dataset'\r\n           Rcpp::traits::input_parameter<const std::shared_ptr<ds::Partitioning>&>::type partitioning(partitioning_sexp);\r\n                                                               ~~~~^\r\n   arrowExports.cpp:1366:75: error: no type named 'type' in the global namespace\r\n           Rcpp::traits::input_parameter<const std::shared_ptr<ds::Partitioning>&>::type partitioning(partitioning_sexp);\r\n                                                                                  ~~^\r\n   arrowExports.cpp:1378:21: error: no member named 'SourceFactory' in namespace 'arrow::dataset'\r\n   std::shared_ptr<ds::SourceFactory> dataset___FSSFactory__Make1(const std::shared_ptr<fs::FileSystem>& fs, const std::shared_ptr<fs::FileSelector>& selector, co...\r\n                   ~~~~^\r\n   arrowExports.cpp:1378:133: error: no member named 'FileSelector' in namespace 'arrow::fs'\r\n   std::shared_ptr<ds::SourceFactory> dataset___FSSFactory__Make1(const std::shared_ptr<fs::FileSystem>& fs, const std::shared_ptr<fs::FileSelector>& selector, co...\r\n                                                                                                                                   ~~~~^\r\n   arrowExports.cpp:1382:58: error: no member named 'FileSelector' in namespace 'arrow::fs'\r\n           Rcpp::traits::input_parameter<const std::shared_ptr<fs::FileSelector>&>::type selector(selector_sexp);\r\n                                                               ~~~~^\r\n   arrowExports.cpp:1382:75: error: no type named 'type' in the global namespace\r\n           Rcpp::traits::input_parameter<const std::shared_ptr<fs::FileSelector>&>::type selector(selector_sexp);\r\n                                                                                  ~~^\r\n   arrowExports.cpp:1395:21: error: no member named 'SourceFactory' in namespace 'arrow::dataset'\r\n   std::shared_ptr<ds::SourceFactory> dataset___FSSFactory__Make3(const std::shared_ptr<fs::FileSystem>& fs, const std::shared_ptr<fs::FileSelector>& selector, co...\r\n                   ~~~~^\r\n   arrowExports.cpp:1395:133: error: no member named 'FileSelector' in namespace 'arrow::fs'\r\n   std::shared_ptr<ds::SourceFactory> dataset___FSSFactory__Make3(const std::shared_ptr<fs::FileSystem>& fs, const std::shared_ptr<fs::FileSelector>& selector, co...\r\n                                                                                                                                   ~~~~^\r\n   arrowExports.cpp:1395:231: error: no member named 'PartitioningFactory' in namespace 'arrow::dataset'\r\n     ...fs, const std::shared_ptr<fs::FileSelector>& selector, const std::shared_ptr<ds::FileFormat>& format, const std::shared_ptr<ds::PartitioningFactory>& factory);\r\n                                                                                                                                    ~~~~^\r\n   arrowExports.cpp:1399:58: error: no member named 'FileSelector' in namespace 'arrow::fs'\r\n           Rcpp::traits::input_parameter<const std::shared_ptr<fs::FileSelector>&>::type selector(selector_sexp);\r\n                                                               ~~~~^\r\n   arrowExports.cpp:1399:75: error: no type named 'type' in the global namespace\r\n           Rcpp::traits::input_parameter<const std::shared_ptr<fs::FileSelector>&>::type selector(selector_sexp);\r\n                                                                                  ~~^\r\n   arrowExports.cpp:1401:58: error: no member named 'PartitioningFactory' in namespace 'arrow::dataset'\r\n           Rcpp::traits::input_parameter<const std::shared_ptr<ds::PartitioningFactory>&>::type factory(factory_sexp);\r\n                                                               ~~~~^\r\n   arrowExports.cpp:1401:82: error: no type named 'type' in the global namespace\r\n           Rcpp::traits::input_parameter<const std::shared_ptr<ds::PartitioningFactory>&>::type factory(factory_sexp);\r\n                                                                                         ~~^\r\n   arrowExports.cpp:1413:21: error: no member named 'ParquetFileFormat' in namespace 'arrow::dataset'\r\n   std::shared_ptr<ds::ParquetFileFormat> dataset___ParquetFileFormat__Make();\r\n                   ~~~~^\r\n   fatal error: too many errors emitted, stopping now [-ferror-limit=]\r\n   20 errors generated.`\r\n   ```\r\n   \r\n   Re-built with your flags & now I'm up & running \ud83d\udcaa \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-24T18:42:50.814+0000",
                    "updated": "2020-01-24T18:42:50.814+0000",
                    "started": "2020-01-24T18:42:50.814+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376975",
                    "issueId": "13281171"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281171/worklog/376979",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "MichaelChirico commented on issue #6275: ARROW-7662: [R] initial foray into adding list column support for parquet writing\nURL: https://github.com/apache/arrow/pull/6275#issuecomment-578255214\n \n \n   Have got the `ListType` inference working. Now to the more complicated part of actually writing the object as parquet, we run into the issue you cited earlier:\r\n   \r\n   ```\r\n   DF = data.frame(a = 1:10)\r\n   DF$b = as.list(DF$a)\r\n   arrow::write_parquet(DF, 'test.parquet')\r\n   # Error in Table__from_dots(dots, schema) : \r\n   #   NotImplemented: type not implemented\r\n   ```\r\n   \r\n   PS I also noticed `StructType` is also not supported for `parquet`, seems beyond the scope of this PR:\r\n   \r\n   ```\r\n   DF$b = as.data.frame(DF$a)\r\n   arrow::write_parquet(DF, 'test.parquet')\r\n   ```\r\n   \r\n   ```\r\n   Error in parquet___arrow___FileWriter__WriteTable(self, table, chunk_size) : \r\n     NotImplemented: Level generation for Struct not supported yet\r\n   In /Users/michael.chirico/github/arrow/cpp/src/parquet/arrow/writer.cc, line 161, code: VisitInline(array)\r\n   In /Users/michael.chirico/github/arrow/cpp/src/parquet/arrow/writer.cc, line 341, code: level_builder.GenerateLevels( data, &values_offset, &num_values, &num_levels, ctx_->def_levels_buffer, &def_levels_buffer, &rep_levels_buffer, &_values_array)\r\n   In /Users/michael.chirico/github/arrow/cpp/src/parquet/arrow/writer.cc, line 388, code: Write(*array_to_write)\r\n   In /Users/michael.chirico/github/arrow/cpp/src/parquet/arrow/writer.cc, line 471, code: arrow_writer.Write(*data, offset, size)\r\n   In /Users/michael.chirico/github/arrow/cpp/src/parquet/arrow/writer.cc, line 497, code: WriteColumnChunk(table.column(i), offset, size)\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-24T18:54:18.173+0000",
                    "updated": "2020-01-24T18:54:18.173+0000",
                    "started": "2020-01-24T18:54:18.173+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376979",
                    "issueId": "13281171"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281171/worklog/376990",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on issue #6275: ARROW-7662: [R] initial foray into adding list column support for parquet writing\nURL: https://github.com/apache/arrow/pull/6275#issuecomment-578259761\n \n \n   I think the StructType issue is a broader limitation of the C++ library that's been on the roadmap for some time: https://issues.apache.org/jira/browse/ARROW-1644\r\n   \r\n   The relevant issue for ListType is still in the R-to-Arrow conversion, so before we even get to the question of writing Parquet (we have to go R to Arrow, then Arrow to Parquet). `Table__from_dots` is in https://github.com/apache/arrow/blob/master/r/src/table.cpp. I'll dig around a little as well to see where that NotImplemented is coming from\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-24T19:06:47.650+0000",
                    "updated": "2020-01-24T19:06:47.650+0000",
                    "started": "2020-01-24T19:06:47.650+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376990",
                    "issueId": "13281171"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281171/worklog/376992",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on issue #6275: ARROW-7662: [R] initial foray into adding list column support for parquet writing\nURL: https://github.com/apache/arrow/pull/6275#issuecomment-578260840\n \n \n   Scratch that, table.cpp is probably irrelevant because you can reproduce this error with less overhead:\r\n   \r\n   ```\r\n   > lcol <- list(1, 2, 3)\r\n   > Array$create(lcol, type = list_of(float64()))\r\n   Error in Array__from_vector(x, type) : \r\n     NotImplemented: type not implemented\r\n   ```\r\n   \r\n   Your current change should let us call that without specifying `type` but now there is missing conversion code.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-24T19:09:58.910+0000",
                    "updated": "2020-01-24T19:09:58.910+0000",
                    "started": "2020-01-24T19:09:58.909+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376992",
                    "issueId": "13281171"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281171/worklog/376993",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "MichaelChirico commented on issue #6275: ARROW-7662: [R] initial foray into adding list column support for parquet writing\nURL: https://github.com/apache/arrow/pull/6275#issuecomment-578261096\n \n \n   it's from array_from_vector.cpp but nothing in there jumped out at me. would need to dive into the macros there but don't have time at the moment\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-24T19:10:42.483+0000",
                    "updated": "2020-01-24T19:10:42.483+0000",
                    "started": "2020-01-24T19:10:42.483+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376993",
                    "issueId": "13281171"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281171/worklog/376994",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on issue #6275: ARROW-7662: [R] initial foray into adding list column support for parquet writing\nURL: https://github.com/apache/arrow/pull/6275#issuecomment-578261338\n \n \n   https://github.com/apache/arrow/blob/master/r/src/array_from_vector.cpp#L797 is the error so it looks like there's another missing case statement\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-24T19:11:21.710+0000",
                    "updated": "2020-01-24T19:11:21.710+0000",
                    "started": "2020-01-24T19:11:21.710+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376994",
                    "issueId": "13281171"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281171/worklog/376996",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on issue #6275: ARROW-7662: [R] initial foray into adding list column support for parquet writing\nURL: https://github.com/apache/arrow/pull/6275#issuecomment-578262647\n \n \n   Maybe the better approach is to follow how Struct is handled again, so before that switch statement gets called, check for ListType and call MakeListArray (which needs to be written). Like here: https://github.com/apache/arrow/blob/master/r/src/array_from_vector.cpp#L1040\r\n   \r\n   The approach would be similar to MakeStructArray I think, iterate over the list and convert each component to an array of the given type.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-24T19:15:12.612+0000",
                    "updated": "2020-01-24T19:15:12.612+0000",
                    "started": "2020-01-24T19:15:12.612+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376996",
                    "issueId": "13281171"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281171/worklog/376998",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on issue #6275: ARROW-7662: [R] initial foray into adding list column support for parquet writing\nURL: https://github.com/apache/arrow/pull/6275#issuecomment-578262862\n \n \n   A quick note, we don't have support to read Struct data from parquet files yet.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-24T19:15:55.803+0000",
                    "updated": "2020-01-24T19:15:55.803+0000",
                    "started": "2020-01-24T19:15:55.803+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376998",
                    "issueId": "13281171"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281171/worklog/376999",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on issue #6275: ARROW-7662: [R] initial foray into adding list column support for parquet writing\nURL: https://github.com/apache/arrow/pull/6275#issuecomment-578263833\n \n \n   Right @fsaintjacques, that's https://issues.apache.org/jira/browse/ARROW-1644, but we can do List Array right? \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-24T19:18:31.873+0000",
                    "updated": "2020-01-24T19:18:31.873+0000",
                    "started": "2020-01-24T19:18:31.873+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "376999",
                    "issueId": "13281171"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281171/worklog/377161",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "MichaelChirico commented on pull request #6275: ARROW-7662: [R] initial foray into adding list column support for parquet writing\nURL: https://github.com/apache/arrow/pull/6275#discussion_r370920446\n \n \n\n ##########\n File path: r/src/array_from_vector.cpp\n ##########\n @@ -868,6 +868,20 @@ std::shared_ptr<arrow::DataType> InferType(SEXP x) {\n                                                      InferType(VECTOR_ELT(x, i)));\n         }\n         return std::make_shared<StructType>(std::move(fields));\n+      } else {\n+        R_xlen_t n = XLENGTH(x);\n+        if (n == 0) {\n+          Rcpp::stop(\"received length-0 list\");\n+        }\n+        std::shared_ptr<arrow::DataType> element_type = InferType(VECTOR_ELT(x, 0));\n+        for (R_xlen_t i = 1; i < n; i++) {\n \n Review comment:\n   I also see this util function `arrow::Status CheckCompatibleStruct`, would it make more sense to define `CheckCompatibleList` and do this across-row consistency check there?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-25T07:55:01.406+0000",
                    "updated": "2020-01-25T07:55:01.406+0000",
                    "started": "2020-01-25T07:55:01.406+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "377161",
                    "issueId": "13281171"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281171/worklog/377163",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "MichaelChirico commented on pull request #6275: ARROW-7662: [R] initial foray into adding list column support for parquet writing\nURL: https://github.com/apache/arrow/pull/6275#discussion_r370921056\n \n \n\n ##########\n File path: r/src/array_from_vector.cpp\n ##########\n @@ -970,6 +985,26 @@ bool CheckCompatibleFactor(SEXP obj, const std::shared_ptr<arrow::DataType>& typ\n   return dict_type->value_type() == utf8();\n }\n \n+arrow::Status CheckCompatibleList(SEXP obj,\n+                                  const std::shared_ptr<arrow::DataType>& type) {\n+  if (TYPEOF(obj) != VECSXP) {\n+    return Status::RError(\"Conversion to array requires list input\");\n+  }\n+\n+  // All list elements must be the same type\n+  std::shared_ptr<arrow::DataType> element_type = type -> value_type();\n \n Review comment:\n   Have attempted to move the validation logic to here, it's not working as expected yet \ud83d\ude05\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-25T08:12:20.978+0000",
                    "updated": "2020-01-25T08:12:20.978+0000",
                    "started": "2020-01-25T08:12:20.978+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "377163",
                    "issueId": "13281171"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281171/worklog/377228",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "MichaelChirico commented on pull request #6275: ARROW-7662: [R] initial foray into adding list column support for parquet writing\nURL: https://github.com/apache/arrow/pull/6275#discussion_r370939266\n \n \n\n ##########\n File path: r/src/array_from_vector.cpp\n ##########\n @@ -192,6 +192,15 @@ std::shared_ptr<Array> MakeStructArray(SEXP df, const std::shared_ptr<DataType>&\n   return std::make_shared<StructArray>(type, children[0]->length(), children);\n }\n \n+std::shared_ptr<Array> MakeListArray(SEXP x, const std::shared_ptr<DataType>& type) {\n+  int n = type->num_children();\n+  std::vector<std::shared_ptr<Array>> children(n);\n+  for (int i = 0; i < n; i++) {\n+    children[i] = Array__from_vector(VECTOR_ELT(df, i), type->child(i)->type(), true);\n+  }\n+  return std::make_shared<ListArray>(type, children[0]->length(), children);\n \n Review comment:\n   This isn't a proper construction of a `ListArray` but I can't quite figure out how to make one. I see this in `cpp/src/arrow/array.h` but I'm not sure how to build `value_offsets`:\r\n   \r\n   ```\r\n   class ARROW_EXPORT ListArray : public BaseListArray<ListType> {\r\n    public:\r\n     explicit ListArray(const std::shared_ptr<ArrayData>& data);\r\n   \r\n     ListArray(const std::shared_ptr<DataType>& type, int64_t length,\r\n               const std::shared_ptr<Buffer>& value_offsets,\r\n               const std::shared_ptr<Array>& values,\r\n               const std::shared_ptr<Buffer>& null_bitmap = NULLPTR,\r\n               int64_t null_count = kUnknownNullCount, int64_t offset = 0);\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-25T15:30:26.141+0000",
                    "updated": "2020-01-25T15:30:26.141+0000",
                    "started": "2020-01-25T15:30:26.141+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "377228",
                    "issueId": "13281171"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 29400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@421ee3a[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4c31de04[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@25c09396[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6743b8d4[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2bcdeae4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5ae556bc[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7b182255[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@167a0fa[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4539f0f8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@35190e55[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@f299829[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@33759946[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 29400,
        "customfield_12312520": null,
        "customfield_12312521": "Sun Feb 09 16:59:00 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-02-09T16:59:00.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7662/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2020-01-23T11:28:55.000+0000",
        "updated": "2020-02-13T15:51:53.000+0000",
        "timeoriginalestimate": null,
        "description": "{code:r}\r\nDF = data.frame(a = 1:10)\r\nDF$b = as.list(DF$a)\r\narrow::write_parquet(DF, 'test.parquet')\r\n# Error in Table__from_dots(dots, schema) : cannot infer type from data\r\n{code}\r\n\r\nThis appears to be supported naturally already in Python:\r\n\r\n{code:python}\r\nimport pandas as pd\r\npd.DataFrame({'a': [1, 2, 3], 'b': [[1, 2], [3, 4], [5, 6]]}).to_parquet('test.parquet')\r\n{code}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "8h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 29400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Support creating ListArray from R list",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281171/comment/17022274",
                    "id": "17022274",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "This logic would go in https://github.com/apache/arrow/blob/dd6b17d/r/src/array_from_vector.cpp#L871. I think you'd have to iterate over the list and call InferType on each element, and if they were all the same type, you could construct a ListType of that type (cf. https://github.com/apache/arrow/blob/dd6b17d0cc1a77aaff84c5a4472ac73bc79486af/r/R/list.R#L30). If they weren't all the same, there's probably a way to represent that in Arrow, but you could also just bail out like it does now; getting the uniform list type supported would probably solve most use cases. \r\n\r\nWould you be interested in submitting a PR?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2020-01-23T17:03:41.049+0000",
                    "updated": "2020-01-23T17:03:41.049+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281171/comment/17022276",
                    "id": "17022276",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=michaelchirico",
                        "name": "michaelchirico",
                        "key": "michaelchirico",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Michael Chirico",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Hey [~npr], I'm taking a look at this now (first time looking at src for arrow), it looks like it should be as simple as making a similar version as for StructType for ArrayType here:\r\n\r\nhttps://github.com/apache/arrow/blob/master/r/src/array_from_vector.cpp#L861-L871\r\n\r\n{code:r}\r\ncase VECSXP:\r\n  if (Rf_inherits(x, \"data.frame\")) {\r\n    R_xlen_t n = XLENGTH(x);\r\n    SEXP names = Rf_getAttrib(x, R_NamesSymbol);\r\n    std::vector<std::shared_ptr<arrow::Field>> fields(n);\r\n    for (R_xlen_t i = 0; i < n; i++) {\r\n      fields[i] = std::make_shared<arrow::Field>(CHAR(STRING_ELT(names, i)),\r\n                                                 InferType(VECTOR_ELT(x, i)));\r\n    }\r\n    return std::make_shared<StructType>(std::move(fields));\r\n  }\r\n{code}\r\n\r\nDoes that sound about right?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=michaelchirico",
                        "name": "michaelchirico",
                        "key": "michaelchirico",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Michael Chirico",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-01-23T17:05:02.502+0000",
                    "updated": "2020-01-23T17:05:02.502+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281171/comment/17022278",
                    "id": "17022278",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=michaelchirico",
                        "name": "michaelchirico",
                        "key": "michaelchirico",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Michael Chirico",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I guess we were commenting at the same time, seems I found the right part of the code after all.\r\n\r\nIs there a difference between ListType and StructType with respect to the need to enforce type consistency? My (rudimentary) understanding was that both StructType and ListType need fixed types -- StructType as (KeyType, ValueType) and ListType as just ValueType. So I was planning to just imitate that logic.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=michaelchirico",
                        "name": "michaelchirico",
                        "key": "michaelchirico",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Michael Chirico",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-01-23T17:08:22.840+0000",
                    "updated": "2020-01-23T17:08:22.840+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281171/comment/17022378",
                    "id": "17022378",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Yes, there is a difference. Think of StructType as a data frame, so each row of the table has a row of the StructType in it. \r\n\r\n{code}\r\n> df <- data.frame(col1=1:3, col2=c(\"a\", \"b\", \"c\"))\r\n> a <- Array$create(df)\r\n> a$type\r\nStructType\r\nstruct<col1: int32, col2: dictionary<values=string, indices=int8, ordered=0>>\r\n> length(a)\r\n[1] 3\r\n{code}\r\n\r\nEach column in the data frame has a type, so each field of the StructType is a known type. \r\n\r\nI think the tricky part is that for a data frame column, it is an R \"list\" underneath because that's what a data frame is, but the list elements are the columns of the struct, and the rows are the rows within each column of the data frame. But for list column, the list elements are the rows. So when we create {{list_of()}}, we need to know what type to provide there.\r\n\r\nJust brainstorming, but I think you want something like (forgive the probably invalid code)\r\n\r\n{code}\r\ncase VECSXP:\r\n  if (Rf_inherits(x, \"data.frame\")) {\r\n    (... the existing code)\r\n  } else { // perhaps you want to check that the list is not named?\r\n    R_xlen_t n = XLENGTH(x);\r\n    if (n > 0) {\r\n      std::shared_ptr<arrow::Type> element_type = InferType(VECTOR_ELT(x, 0);\r\n      for (R_xlen_t i = 1; i < n; i++) {\r\n        if (element_type != InferType(VECTOR_ELT(x, i)) {\r\n          break;\r\n        }\r\n      }\r\n      if (i == n) { // we made it through the loop and all are the same\r\n        return std::make_shared<ListType>(element_type);\r\n      }\r\n  }\r\n{code}\r\n\r\nThat said, I'm not sure how great the ListType support is currently in the R package. We might be able to infer the type but still have more left to implement. \r\n\r\n{code}\r\n> lcol <- list(1, 2, 3)\r\n> Array$create(lcol)$type\r\nError in Array__from_vector(x, type) : cannot infer type from data\r\n## That was expected, given that we haven't fixed that switch statement yet\r\n## but what if we specify the type?\r\n> Array$create(lcol, type = list_of(float64()))\r\nError in Array__from_vector(x, type) : \r\n  NotImplemented: type not implemented\r\n{code}\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2020-01-23T18:58:53.549+0000",
                    "updated": "2020-01-23T18:58:53.549+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13281171/comment/17033262",
                    "id": "17033262",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 6275\n[https://github.com/apache/arrow/pull/6275]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2020-02-09T16:59:00.778+0000",
                    "updated": "2020-02-09T16:59:00.778+0000"
                }
            ],
            "maxResults": 5,
            "total": 5,
            "startAt": 0
        },
        "customfield_12311820": "0|z0asns:",
        "customfield_12314139": null
    }
}