{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13203775",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203775",
    "key": "ARROW-3998",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351051",
                "id": "12351051",
                "description": "",
                "name": "8.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-05-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=sakras",
            "name": "sakras",
            "key": "sakras",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Sasha Krassovsky",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334978",
                "id": "12334978",
                "name": "Benchmarking"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333774",
                "id": "12333774",
                "name": "Integration",
                "description": "Issues related to integration / compatibility tests between implementations"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 90600,
            "total": 90600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 90600,
            "total": 90600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3998/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 151,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203775/worklog/735050",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "save-buffer opened a new pull request #12537:\nURL: https://github.com/apache/arrow/pull/12537\n\n\n   This PR contains an implementation of a multithreaded TPC-H dbgen, as well as an implementation of Q1 as a google benchmark. The advantage of this dbgen approach is that it is a scan node: it generates data on the fly and streams it over. As a result, I was for instance able to run scale factor 1000 on Q1 on my desktop with only 32 GB of RAM. \r\n   \r\n   I did verify results of Q1. They don't exactly match the reference results, but they are quite close and well within what I'd expect the variance to be between random number generators. \r\n   ```\r\n   -------------------------------------------------------------\r\n   Benchmark                   Time             CPU   Iterations\r\n   -------------------------------------------------------------\r\n   BM_Tpch_Q1/SF:1     186609936 ns       268825 ns          100\r\n   BM_Tpch_Q1/SF:10   1858114140 ns       276741 ns           10\r\n   BM_Tpch_Q1/SF:100  18561088470 ns       273067 ns            1\r\n   BM_Tpch_Q1/SF:1000 186103719755 ns       289445 ns            1\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-02T00:00:53.447+0000",
                    "updated": "2022-03-02T00:00:53.447+0000",
                    "started": "2022-03-02T00:00:53.447+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735050",
                    "issueId": "13203775"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203775/worklog/735051",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12537:\nURL: https://github.com/apache/arrow/pull/12537#issuecomment-1055989579\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-02T00:01:06.135+0000",
                    "updated": "2022-03-02T00:01:06.135+0000",
                    "started": "2022-03-02T00:01:06.135+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735051",
                    "issueId": "13203775"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203775/worklog/735058",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #12537:\nURL: https://github.com/apache/arrow/pull/12537#discussion_r817249386\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/tpch_node.cc\n##########\n@@ -0,0 +1,3738 @@\n+#include \"arrow/compute/exec/tpch_node.h\"\n+#include \"arrow/util/make_unique.h\"\n+#include \"arrow/util/future.h\"\n+#include \"arrow/util/unreachable.h\"\n+\n+#include <algorithm>\n+#include <bitset>\n+#include <cstring>\n+#include <random>\n+#include <vector>\n+#include <memory>\n+#include <mutex>\n+#include <queue>\n+#include <unordered_set>\n+\n+namespace arrow\n+{\n+    using internal::checked_cast;\n+\n+    namespace compute\n+    {\n+        class TpchText\n+        {\n+        public:\n+            Status Init();\n+            Result<Datum> GenerateComments(\n+                size_t num_comments,\n+                size_t min_length,\n+                size_t max_length,\n+                random::pcg32_fast &rng);\n+\n+        private:\n+            void GenerateWord(size_t &offset, const char **words, size_t num_choices);\n+            void GenerateNoun(size_t &offset);\n+            void GenerateVerb(size_t &offset);\n+            void GenerateAdjective(size_t &offset);\n+            void GenerateAdverb(size_t &offset);\n+            void GeneratePreposition(size_t &offset);\n+            void GenerateAuxiliary(size_t &offset);\n+            void GenerateTerminator(size_t &offset);\n+\n+            void GenerateNounPhrase(size_t &offset);\n+            void GenerateVerbPhrase(size_t &offset);\n+            void GeneratePrepositionalPhrase(size_t &offset);\n+\n+            void GenerateSentence(size_t &offset);\n+\n+            std::unique_ptr<Buffer> text_;\n+            random::pcg32_fast rng_;\n+            static constexpr size_t kTextBytes = 300 * 1024 * 1024; // 300 MB\n+        };\n+\n+        class TpchTableGenerator\n+        {\n+        public:\n+            using OutputBatchCallback = std::function<void(ExecBatch)>;\n+            using FinishedCallback = std::function<void(int64_t)>;\n+            using GenerateFn = std::function<Status(size_t)>;\n+            using ScheduleCallback = std::function<Status(GenerateFn)>;\n+            using AbortCallback = std::function<void()>;\n+\n+            virtual Status Init(\n+                std::vector<std::string> columns,\n+                int scale_factor,\n+                int64_t batch_size) = 0;\n+\n+            virtual Status StartProducing(\n+                size_t num_threads,\n+                OutputBatchCallback output_callback,\n+                FinishedCallback finished_callback,\n+                ScheduleCallback schedule_callback) = 0;\n+\n+            void Abort(AbortCallback abort_callback)\n+            {\n+                bool expected = false;\n+                if(done_.compare_exchange_strong(expected, true))\n+                {\n+                    abort_callback();\n+                }\n+            }\n+\n+            virtual std::shared_ptr<Schema> schema() const = 0;\n+\n+            virtual ~TpchTableGenerator() = default;\n+\n+        protected:\n+            std::atomic<bool> done_ = { false };\n+            std::atomic<int64_t> batches_generated_ = { 0 };\n+        };\n+\n+        int GetNumDigits(int64_t x)\n+        {\n+            // This if statement chain is for MAXIMUM SPEED\n+            /*\n+              .,\n+              .      _,'f----.._\n+              |\\ ,-'\"/  |     ,'\n+              |,_  ,--.      /\n+              /,-. ,'`.     (_\n+              f  o|  o|__     \"`-.\n+              ,-._.,--'_ `.   _.,-`\n+              `\"' ___.,'` j,-'\n+              `-.__.,--'\n+             */\n+            // Source: https://stackoverflow.com/questions/1068849/how-do-i-determine-the-number-of-digits-of-an-integer-in-c\n\nReview comment:\n       We should confirm that this is ok to copy/paste. https://www.apache.org/legal/resolved.html#stackoverflow says no, though I thought I remember mention of a date after which stack overflow content is ok.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-02T00:28:58.017+0000",
                    "updated": "2022-03-02T00:28:58.017+0000",
                    "started": "2022-03-02T00:28:58.016+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735058",
                    "issueId": "13203775"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203775/worklog/735061",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "save-buffer commented on a change in pull request #12537:\nURL: https://github.com/apache/arrow/pull/12537#discussion_r817259916\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/tpch_node.cc\n##########\n@@ -0,0 +1,3738 @@\n+#include \"arrow/compute/exec/tpch_node.h\"\n+#include \"arrow/util/make_unique.h\"\n+#include \"arrow/util/future.h\"\n+#include \"arrow/util/unreachable.h\"\n+\n+#include <algorithm>\n+#include <bitset>\n+#include <cstring>\n+#include <random>\n+#include <vector>\n+#include <memory>\n+#include <mutex>\n+#include <queue>\n+#include <unordered_set>\n+\n+namespace arrow\n+{\n+    using internal::checked_cast;\n+\n+    namespace compute\n+    {\n+        class TpchText\n+        {\n+        public:\n+            Status Init();\n+            Result<Datum> GenerateComments(\n+                size_t num_comments,\n+                size_t min_length,\n+                size_t max_length,\n+                random::pcg32_fast &rng);\n+\n+        private:\n+            void GenerateWord(size_t &offset, const char **words, size_t num_choices);\n+            void GenerateNoun(size_t &offset);\n+            void GenerateVerb(size_t &offset);\n+            void GenerateAdjective(size_t &offset);\n+            void GenerateAdverb(size_t &offset);\n+            void GeneratePreposition(size_t &offset);\n+            void GenerateAuxiliary(size_t &offset);\n+            void GenerateTerminator(size_t &offset);\n+\n+            void GenerateNounPhrase(size_t &offset);\n+            void GenerateVerbPhrase(size_t &offset);\n+            void GeneratePrepositionalPhrase(size_t &offset);\n+\n+            void GenerateSentence(size_t &offset);\n+\n+            std::unique_ptr<Buffer> text_;\n+            random::pcg32_fast rng_;\n+            static constexpr size_t kTextBytes = 300 * 1024 * 1024; // 300 MB\n+        };\n+\n+        class TpchTableGenerator\n+        {\n+        public:\n+            using OutputBatchCallback = std::function<void(ExecBatch)>;\n+            using FinishedCallback = std::function<void(int64_t)>;\n+            using GenerateFn = std::function<Status(size_t)>;\n+            using ScheduleCallback = std::function<Status(GenerateFn)>;\n+            using AbortCallback = std::function<void()>;\n+\n+            virtual Status Init(\n+                std::vector<std::string> columns,\n+                int scale_factor,\n+                int64_t batch_size) = 0;\n+\n+            virtual Status StartProducing(\n+                size_t num_threads,\n+                OutputBatchCallback output_callback,\n+                FinishedCallback finished_callback,\n+                ScheduleCallback schedule_callback) = 0;\n+\n+            void Abort(AbortCallback abort_callback)\n+            {\n+                bool expected = false;\n+                if(done_.compare_exchange_strong(expected, true))\n+                {\n+                    abort_callback();\n+                }\n+            }\n+\n+            virtual std::shared_ptr<Schema> schema() const = 0;\n+\n+            virtual ~TpchTableGenerator() = default;\n+\n+        protected:\n+            std::atomic<bool> done_ = { false };\n+            std::atomic<int64_t> batches_generated_ = { 0 };\n+        };\n+\n+        int GetNumDigits(int64_t x)\n+        {\n+            // This if statement chain is for MAXIMUM SPEED\n+            /*\n+              .,\n+              .      _,'f----.._\n+              |\\ ,-'\"/  |     ,'\n+              |,_  ,--.      /\n+              /,-. ,'`.     (_\n+              f  o|  o|__     \"`-.\n+              ,-._.,--'_ `.   _.,-`\n+              `\"' ___.,'` j,-'\n+              `-.__.,--'\n+             */\n+            // Source: https://stackoverflow.com/questions/1068849/how-do-i-determine-the-number-of-digits-of-an-integer-in-c\n\nReview comment:\n       It's actually not really a copy - I have the `DCHECK`, made it work with 64-bit ints, return -1 in the unreachable scenario, and the variable and function names are different. I was mainly using it as a source for justifying why this is the fastest way. \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-02T00:50:28.648+0000",
                    "updated": "2022-03-02T00:50:28.648+0000",
                    "started": "2022-03-02T00:50:28.648+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735061",
                    "issueId": "13203775"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203775/worklog/735062",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "save-buffer commented on a change in pull request #12537:\nURL: https://github.com/apache/arrow/pull/12537#discussion_r817260152\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/tpch_node.cc\n##########\n@@ -0,0 +1,3738 @@\n+#include \"arrow/compute/exec/tpch_node.h\"\n+#include \"arrow/util/make_unique.h\"\n+#include \"arrow/util/future.h\"\n+#include \"arrow/util/unreachable.h\"\n+\n+#include <algorithm>\n+#include <bitset>\n+#include <cstring>\n+#include <random>\n+#include <vector>\n+#include <memory>\n+#include <mutex>\n+#include <queue>\n+#include <unordered_set>\n+\n+namespace arrow\n+{\n+    using internal::checked_cast;\n+\n+    namespace compute\n+    {\n+        class TpchText\n+        {\n+        public:\n+            Status Init();\n+            Result<Datum> GenerateComments(\n+                size_t num_comments,\n+                size_t min_length,\n+                size_t max_length,\n+                random::pcg32_fast &rng);\n+\n+        private:\n+            void GenerateWord(size_t &offset, const char **words, size_t num_choices);\n+            void GenerateNoun(size_t &offset);\n+            void GenerateVerb(size_t &offset);\n+            void GenerateAdjective(size_t &offset);\n+            void GenerateAdverb(size_t &offset);\n+            void GeneratePreposition(size_t &offset);\n+            void GenerateAuxiliary(size_t &offset);\n+            void GenerateTerminator(size_t &offset);\n+\n+            void GenerateNounPhrase(size_t &offset);\n+            void GenerateVerbPhrase(size_t &offset);\n+            void GeneratePrepositionalPhrase(size_t &offset);\n+\n+            void GenerateSentence(size_t &offset);\n+\n+            std::unique_ptr<Buffer> text_;\n+            random::pcg32_fast rng_;\n+            static constexpr size_t kTextBytes = 300 * 1024 * 1024; // 300 MB\n+        };\n+\n+        class TpchTableGenerator\n+        {\n+        public:\n+            using OutputBatchCallback = std::function<void(ExecBatch)>;\n+            using FinishedCallback = std::function<void(int64_t)>;\n+            using GenerateFn = std::function<Status(size_t)>;\n+            using ScheduleCallback = std::function<Status(GenerateFn)>;\n+            using AbortCallback = std::function<void()>;\n+\n+            virtual Status Init(\n+                std::vector<std::string> columns,\n+                int scale_factor,\n+                int64_t batch_size) = 0;\n+\n+            virtual Status StartProducing(\n+                size_t num_threads,\n+                OutputBatchCallback output_callback,\n+                FinishedCallback finished_callback,\n+                ScheduleCallback schedule_callback) = 0;\n+\n+            void Abort(AbortCallback abort_callback)\n+            {\n+                bool expected = false;\n+                if(done_.compare_exchange_strong(expected, true))\n+                {\n+                    abort_callback();\n+                }\n+            }\n+\n+            virtual std::shared_ptr<Schema> schema() const = 0;\n+\n+            virtual ~TpchTableGenerator() = default;\n+\n+        protected:\n+            std::atomic<bool> done_ = { false };\n+            std::atomic<int64_t> batches_generated_ = { 0 };\n+        };\n+\n+        int GetNumDigits(int64_t x)\n+        {\n+            // This if statement chain is for MAXIMUM SPEED\n+            /*\n+              .,\n+              .      _,'f----.._\n+              |\\ ,-'\"/  |     ,'\n+              |,_  ,--.      /\n+              /,-. ,'`.     (_\n+              f  o|  o|__     \"`-.\n+              ,-._.,--'_ `.   _.,-`\n+              `\"' ___.,'` j,-'\n+              `-.__.,--'\n+             */\n+            // Source: https://stackoverflow.com/questions/1068849/how-do-i-determine-the-number-of-digits-of-an-integer-in-c\n\nReview comment:\n       But yes, I'm not sure how different something like this has to be in order for it to count as \"original\" vs \"copied and modified\"... \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-02T00:51:01.359+0000",
                    "updated": "2022-03-02T00:51:01.359+0000",
                    "started": "2022-03-02T00:51:01.359+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735062",
                    "issueId": "13203775"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203775/worklog/735063",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "save-buffer commented on pull request #12537:\nURL: https://github.com/apache/arrow/pull/12537#issuecomment-1056020026\n\n\n   Good point about tests - I will add some. \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-02T00:51:34.540+0000",
                    "updated": "2022-03-02T00:51:34.540+0000",
                    "started": "2022-03-02T00:51:34.540+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735063",
                    "issueId": "13203775"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203775/worklog/735069",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #12537:\nURL: https://github.com/apache/arrow/pull/12537#discussion_r817267836\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/tpch_node.cc\n##########\n@@ -0,0 +1,3738 @@\n+#include \"arrow/compute/exec/tpch_node.h\"\n+#include \"arrow/util/make_unique.h\"\n+#include \"arrow/util/future.h\"\n+#include \"arrow/util/unreachable.h\"\n+\n+#include <algorithm>\n+#include <bitset>\n+#include <cstring>\n+#include <random>\n+#include <vector>\n+#include <memory>\n+#include <mutex>\n+#include <queue>\n+#include <unordered_set>\n+\n+namespace arrow\n+{\n+    using internal::checked_cast;\n+\n+    namespace compute\n+    {\n+        class TpchText\n+        {\n+        public:\n+            Status Init();\n+            Result<Datum> GenerateComments(\n+                size_t num_comments,\n+                size_t min_length,\n+                size_t max_length,\n+                random::pcg32_fast &rng);\n+\n+        private:\n+            void GenerateWord(size_t &offset, const char **words, size_t num_choices);\n+            void GenerateNoun(size_t &offset);\n+            void GenerateVerb(size_t &offset);\n+            void GenerateAdjective(size_t &offset);\n+            void GenerateAdverb(size_t &offset);\n+            void GeneratePreposition(size_t &offset);\n+            void GenerateAuxiliary(size_t &offset);\n+            void GenerateTerminator(size_t &offset);\n+\n+            void GenerateNounPhrase(size_t &offset);\n+            void GenerateVerbPhrase(size_t &offset);\n+            void GeneratePrepositionalPhrase(size_t &offset);\n+\n+            void GenerateSentence(size_t &offset);\n+\n+            std::unique_ptr<Buffer> text_;\n+            random::pcg32_fast rng_;\n+            static constexpr size_t kTextBytes = 300 * 1024 * 1024; // 300 MB\n+        };\n+\n+        class TpchTableGenerator\n+        {\n+        public:\n+            using OutputBatchCallback = std::function<void(ExecBatch)>;\n+            using FinishedCallback = std::function<void(int64_t)>;\n+            using GenerateFn = std::function<Status(size_t)>;\n+            using ScheduleCallback = std::function<Status(GenerateFn)>;\n+            using AbortCallback = std::function<void()>;\n+\n+            virtual Status Init(\n+                std::vector<std::string> columns,\n+                int scale_factor,\n+                int64_t batch_size) = 0;\n+\n+            virtual Status StartProducing(\n+                size_t num_threads,\n+                OutputBatchCallback output_callback,\n+                FinishedCallback finished_callback,\n+                ScheduleCallback schedule_callback) = 0;\n+\n+            void Abort(AbortCallback abort_callback)\n+            {\n+                bool expected = false;\n+                if(done_.compare_exchange_strong(expected, true))\n+                {\n+                    abort_callback();\n+                }\n+            }\n+\n+            virtual std::shared_ptr<Schema> schema() const = 0;\n+\n+            virtual ~TpchTableGenerator() = default;\n+\n+        protected:\n+            std::atomic<bool> done_ = { false };\n+            std::atomic<int64_t> batches_generated_ = { 0 };\n+        };\n+\n+        int GetNumDigits(int64_t x)\n+        {\n+            // This if statement chain is for MAXIMUM SPEED\n+            /*\n+              .,\n+              .      _,'f----.._\n+              |\\ ,-'\"/  |     ,'\n+              |,_  ,--.      /\n+              /,-. ,'`.     (_\n+              f  o|  o|__     \"`-.\n+              ,-._.,--'_ `.   _.,-`\n+              `\"' ___.,'` j,-'\n+              `-.__.,--'\n+             */\n+            // Source: https://stackoverflow.com/questions/1068849/how-do-i-determine-the-number-of-digits-of-an-integer-in-c\n\nReview comment:\n       _nods_ modified is ok, and it might be changed enough, but I'll get a second opinion on it as well to ensure we're good here.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-02T01:09:58.481+0000",
                    "updated": "2022-03-02T01:09:58.481+0000",
                    "started": "2022-03-02T01:09:58.481+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735069",
                    "issueId": "13203775"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203775/worklog/735114",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #12537:\nURL: https://github.com/apache/arrow/pull/12537#discussion_r817330103\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/tpch_node.cc\n##########\n@@ -0,0 +1,3738 @@\n+#include \"arrow/compute/exec/tpch_node.h\"\n+#include \"arrow/util/make_unique.h\"\n+#include \"arrow/util/future.h\"\n+#include \"arrow/util/unreachable.h\"\n+\n+#include <algorithm>\n+#include <bitset>\n+#include <cstring>\n+#include <random>\n+#include <vector>\n+#include <memory>\n+#include <mutex>\n+#include <queue>\n+#include <unordered_set>\n+\n+namespace arrow\n+{\n+    using internal::checked_cast;\n+\n+    namespace compute\n+    {\n+        class TpchText\n+        {\n+        public:\n+            Status Init();\n+            Result<Datum> GenerateComments(\n+                size_t num_comments,\n+                size_t min_length,\n+                size_t max_length,\n+                random::pcg32_fast &rng);\n+\n+        private:\n+            void GenerateWord(size_t &offset, const char **words, size_t num_choices);\n+            void GenerateNoun(size_t &offset);\n+            void GenerateVerb(size_t &offset);\n+            void GenerateAdjective(size_t &offset);\n+            void GenerateAdverb(size_t &offset);\n+            void GeneratePreposition(size_t &offset);\n+            void GenerateAuxiliary(size_t &offset);\n+            void GenerateTerminator(size_t &offset);\n+\n+            void GenerateNounPhrase(size_t &offset);\n+            void GenerateVerbPhrase(size_t &offset);\n+            void GeneratePrepositionalPhrase(size_t &offset);\n+\n+            void GenerateSentence(size_t &offset);\n+\n+            std::unique_ptr<Buffer> text_;\n+            random::pcg32_fast rng_;\n+            static constexpr size_t kTextBytes = 300 * 1024 * 1024; // 300 MB\n+        };\n+\n+        class TpchTableGenerator\n+        {\n+        public:\n+            using OutputBatchCallback = std::function<void(ExecBatch)>;\n+            using FinishedCallback = std::function<void(int64_t)>;\n+            using GenerateFn = std::function<Status(size_t)>;\n+            using ScheduleCallback = std::function<Status(GenerateFn)>;\n+            using AbortCallback = std::function<void()>;\n+\n+            virtual Status Init(\n+                std::vector<std::string> columns,\n+                int scale_factor,\n+                int64_t batch_size) = 0;\n+\n+            virtual Status StartProducing(\n+                size_t num_threads,\n+                OutputBatchCallback output_callback,\n+                FinishedCallback finished_callback,\n+                ScheduleCallback schedule_callback) = 0;\n+\n+            void Abort(AbortCallback abort_callback)\n+            {\n+                bool expected = false;\n+                if(done_.compare_exchange_strong(expected, true))\n+                {\n+                    abort_callback();\n+                }\n+            }\n+\n+            virtual std::shared_ptr<Schema> schema() const = 0;\n+\n+            virtual ~TpchTableGenerator() = default;\n+\n+        protected:\n+            std::atomic<bool> done_ = { false };\n+            std::atomic<int64_t> batches_generated_ = { 0 };\n+        };\n+\n+        int GetNumDigits(int64_t x)\n+        {\n+            // This if statement chain is for MAXIMUM SPEED\n+            /*\n+              .,\n+              .      _,'f----.._\n+              |\\ ,-'\"/  |     ,'\n+              |,_  ,--.      /\n+              /,-. ,'`.     (_\n+              f  o|  o|__     \"`-.\n+              ,-._.,--'_ `.   _.,-`\n+              `\"' ___.,'` j,-'\n+              `-.__.,--'\n+             */\n+            // Source: https://stackoverflow.com/questions/1068849/how-do-i-determine-the-number-of-digits-of-an-integer-in-c\n\nReview comment:\n       Modification doesn't really matter from a legal perspective.  Derivative works are only allowed if you have rights to the source.\r\n   \r\n   That being said, we are in a terrible gray area here that I fear will become a can of worms and a waste of everyone's time.  Technically the only \"proper\" approach would be a [clean room approach](https://en.wikipedia.org/wiki/Clean_room_design) where @save-buffer describes what is needed to someone that has never seen the SO code and that person writes the code.  However, legally documenting such a process is a headache.\r\n   \r\n   In this case I think we are (at least ethically) in the clear.  The answer author has this statement on their profile page:\r\n   \r\n   > All code I post on Stack Overflow is covered by the \"Do whatever the heck you want with it\" licence, the full text of which is:\r\n   > \r\n   >     Do whatever the heck you want with it.\r\n   > \r\n   \r\n   There are a few edits by other authors but none of which touches the code included here.  My opinion would be to proceed as is (but get rid of the ASCII art, I can't abide fun).\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-02T04:03:46.109+0000",
                    "updated": "2022-03-02T04:03:46.109+0000",
                    "started": "2022-03-02T04:03:46.109+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735114",
                    "issueId": "13203775"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203775/worklog/735527",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #12537:\nURL: https://github.com/apache/arrow/pull/12537#discussion_r818046023\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/tpch_benchmark.cc\n##########\n@@ -0,0 +1,175 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"benchmark/benchmark.h\"\n+\n+#include \"arrow/testing/future_util.h\"\n+#include \"arrow/compute/exec/test_util.h\"\n+#include \"arrow/compute/exec/tpch_node.h\"\n+#include \"arrow/util/make_unique.h\"\n+#include \"arrow/compute/cast.h\"\n+\n+namespace arrow\n+{\n+namespace compute\n+{\n+\n+std::shared_ptr<ExecPlan> Plan_Q1(AsyncGenerator<util::optional<ExecBatch>> &sink_gen, int scale_factor)\n\nReview comment:\n       Could we make scale_factor a float? DBgen itself actually can generate scale_factors of 0.1, 0.01 (and we use those for testing _a lot_)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-02T19:52:37.264+0000",
                    "updated": "2022-03-02T19:52:37.264+0000",
                    "started": "2022-03-02T19:52:37.264+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735527",
                    "issueId": "13203775"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203775/worklog/735542",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #12537:\nURL: https://github.com/apache/arrow/pull/12537#discussion_r818061003\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/tpch_node.h\n##########\n@@ -0,0 +1,69 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include \"arrow/compute/exec/options.h\"\n+#include \"arrow/compute/exec/exec_plan.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/status.h\"\n+#include \"arrow/type.h\"\n+#include \"arrow/util/pcg_random.h\"\n\nReview comment:\n       I don't think these headers (or the ones in vendored) are actually pulled in by default, at least they weren't pulled in when I built using the instructions: https://arrow.apache.org/docs/r/articles/developers/setup.html#step-2---configure-the-libarrow-build\r\n   \r\n   I coppied the vendored/pcg/*.hpp over manually \u2014 but I suspect we'll need to add those to cmake somewhere to do that as part of the build now that these are used in compute\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-02T20:08:16.691+0000",
                    "updated": "2022-03-02T20:08:16.691+0000",
                    "started": "2022-03-02T20:08:16.691+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735542",
                    "issueId": "13203775"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203775/worklog/735575",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #12537:\nURL: https://github.com/apache/arrow/pull/12537#discussion_r818092031\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/tpch_node.h\n##########\n@@ -0,0 +1,69 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include \"arrow/compute/exec/options.h\"\n+#include \"arrow/compute/exec/exec_plan.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/status.h\"\n+#include \"arrow/type.h\"\n+#include \"arrow/util/pcg_random.h\"\n\nReview comment:\n       Good point.  The `pcg` subdirectory needs to be added to https://github.com/apache/arrow/blob/master/cpp/src/arrow/vendored/CMakeLists.txt\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-02T20:52:50.769+0000",
                    "updated": "2022-03-02T20:52:50.769+0000",
                    "started": "2022-03-02T20:52:50.768+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735575",
                    "issueId": "13203775"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203775/worklog/735579",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #12537:\nURL: https://github.com/apache/arrow/pull/12537#discussion_r818093649\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/tpch_node.h\n##########\n@@ -0,0 +1,69 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include \"arrow/compute/exec/options.h\"\n+#include \"arrow/compute/exec/exec_plan.h\"\n+#include \"arrow/result.h\"\n+#include \"arrow/status.h\"\n+#include \"arrow/type.h\"\n+#include \"arrow/util/pcg_random.h\"\n\nReview comment:\n       TIL about that file!\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-02T20:55:10.622+0000",
                    "updated": "2022-03-02T20:55:10.622+0000",
                    "started": "2022-03-02T20:55:10.622+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735579",
                    "issueId": "13203775"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203775/worklog/735594",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on pull request #12537:\nURL: https://github.com/apache/arrow/pull/12537#issuecomment-1057404174\n\n\n   And one more thing I though as I was doing this: For the tables that have keys shared across them (e.g. lineitems and orders), is it possible generate those at the same time so that the keys are the same across both? I can figure out if generating them separately is an issue by comparing duckdb or running the queries through arrow bench.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-02T21:21:51.425+0000",
                    "updated": "2022-03-02T21:21:51.425+0000",
                    "started": "2022-03-02T21:21:51.425+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735594",
                    "issueId": "13203775"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203775/worklog/735600",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "save-buffer commented on pull request #12537:\nURL: https://github.com/apache/arrow/pull/12537#issuecomment-1057411772\n\n\n   @jonkeane They get generated at the same time if you use the same TpchGen object. \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-02T21:30:32.193+0000",
                    "updated": "2022-03-02T21:30:32.193+0000",
                    "started": "2022-03-02T21:30:32.193+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735600",
                    "issueId": "13203775"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203775/worklog/735640",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on pull request #12537:\nURL: https://github.com/apache/arrow/pull/12537#issuecomment-1057461689\n\n\n   > @jonkeane They get generated at the same time if you use the same TpchGen object.\r\n   \r\n   Cool, so then the next thing would be to figure out if there's a way to emit and write these record batch readers simultaneously. (and that might actually need to to be done all in C++, the R execution paradigm might make it hard to have one plan that is emitting two sets of record batches and writes them simultaneously)\r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-02T22:33:58.436+0000",
                    "updated": "2022-03-02T22:33:58.436+0000",
                    "started": "2022-03-02T22:33:58.436+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735640",
                    "issueId": "13203775"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203775/worklog/735650",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "save-buffer commented on pull request #12537:\nURL: https://github.com/apache/arrow/pull/12537#issuecomment-1057475963\n\n\n   Yeah, one thing to think about is what the R code would look like. You'd need some way of \"linking\" the two tables in R right? \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-02T22:57:45.237+0000",
                    "updated": "2022-03-02T22:57:45.237+0000",
                    "started": "2022-03-02T22:57:45.236+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735650",
                    "issueId": "13203775"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203775/worklog/735651",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on pull request #12537:\nURL: https://github.com/apache/arrow/pull/12537#issuecomment-1057478174\n\n\n   From the R side, yeah. The hard part is that we want to take each of these Record Batch Readers and write them to parquet files, but we don't have an object in the R bindings that is designed to hold multiple record batch readers and kick off the writing for both.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-02T23:01:56.517+0000",
                    "updated": "2022-03-02T23:01:56.517+0000",
                    "started": "2022-03-02T23:01:56.517+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735651",
                    "issueId": "13203775"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203775/worklog/735652",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on pull request #12537:\nURL: https://github.com/apache/arrow/pull/12537#issuecomment-1057480303\n\n\n   Though we _should_ be able to construct a plan that includes write nodes for both of those recordbatchreaders in C++ and then let C++ handle the rest... (no need to try and shoe horn that multithreading into R which will be reluctant to make that easy!) \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-02T23:05:50.728+0000",
                    "updated": "2022-03-02T23:05:50.728+0000",
                    "started": "2022-03-02T23:05:50.727+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735652",
                    "issueId": "13203775"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203775/worklog/735653",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane edited a comment on pull request #12537:\nURL: https://github.com/apache/arrow/pull/12537#issuecomment-1057480303\n\n\n   Though we _should_ be able to construct a plan that includes write nodes for both of those recordbatchreaders in C++ and then let C++ handle the rest... (no need to try and shoe horn that multithreading into R which will be reluctant to make that easy!) I'm digging into those now to see if I can wire that up myself...\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-02T23:06:23.793+0000",
                    "updated": "2022-03-02T23:06:23.793+0000",
                    "started": "2022-03-02T23:06:23.793+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735653",
                    "issueId": "13203775"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203775/worklog/735697",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #12537:\nURL: https://github.com/apache/arrow/pull/12537#issuecomment-1057564538\n\n\n   Yeah, I'm pretty sure a single plan could have one tpch gen node for each table and then each of those nodes would be attached to a dedicated write node.  I have done very little testing with multiple sink nodes though so it would be an interesting experiment.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-03T01:18:56.918+0000",
                    "updated": "2022-03-03T01:18:56.918+0000",
                    "started": "2022-03-03T01:18:56.918+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "735697",
                    "issueId": "13203775"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/5",
            "id": "5",
            "description": "General wishlist item.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Wish",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 90600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@45b06ece[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1af69349[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5c994179[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@72dbfd78[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@12f5a597[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@44edb3e9[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@52e9a084[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7f74b79c[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@40927cf8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@69c9fdf8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@76bb9dc5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2ca91cd9[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 90600,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Mar 30 09:15:58 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-03-30T09:15:58.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3998/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2018-12-11T16:51:50.000+0000",
        "updated": "2022-04-02T02:01:36.000+0000",
        "timeoriginalestimate": null,
        "description": "Integration tests and benchmarks should read TPC-H data. This is going to be useful for future query execution engine benchmarking.\r\n\r\nIt could also attract researchers.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "25h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 90600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "Support TPC-H dbgen in Arrow",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203775/comment/16717724",
                    "id": "16717724",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "This would be a nice feature to be able to generate the TPC-H tables as either Parquet files or files that use the Arrow IPC stream or file formats. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-12-11T18:33:09.805+0000",
                    "updated": "2018-12-11T18:33:09.805+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203775/comment/17411555",
                    "id": "17411555",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "DuckDB provides TPC-H dataset generation as an extension and can generate the datasets at different scale factors (see https://github.com/duckdb/duckdb/tree/6c7c9805fdf1604039ebed47d233ea55cabb4b2c/extension/tpch). Given that DuckDB can return result sets as Arrow format in Python and R, we could use it as a utility to generate testing files",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-09-07T21:52:32.072+0000",
                    "updated": "2021-09-07T21:52:46.593+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203775/comment/17411963",
                    "id": "17411963",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
                        "name": "jonkeane",
                        "key": "jonkeane",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
                        },
                        "displayName": "Jonathan Keane",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Yes, I've been looking into this myself. So far I have found two less-than-ideal bumps (though both should be able to be overcome):\r\n\r\n* Calling the dbgen function in DuckDB from R errors while preparing the statement.\r\n* I haven't seen a way to parallelize the generation (even with DuckDB's parallelization on)\r\n\r\nI'm actively looking into the first to get started on adding a few TPC-H benchmarks to arrowbench.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
                        "name": "jonkeane",
                        "key": "jonkeane",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
                        },
                        "displayName": "Jonathan Keane",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-09-08T14:16:15.958+0000",
                    "updated": "2021-09-08T14:16:15.958+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13203775/comment/17514556",
                    "id": "17514556",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 12537\n[https://github.com/apache/arrow/pull/12537]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-03-30T09:15:58.842+0000",
                    "updated": "2022-03-30T09:15:58.842+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|s01eoo:",
        "customfield_12314139": null
    }
}